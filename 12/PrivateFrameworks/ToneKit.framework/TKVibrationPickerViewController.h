<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TKVibrationPickerViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ToneKit.framework/TKVibrationPickerViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ToneKit.framework/ToneKit (1)
 */

@interface TKVibrationPickerViewController : UIViewController <PSStateRestoration, TKVibrationPickerCollectionViewCellDelegate, TKVibrationRecorderViewControllerDelegate, UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateTableLayout, UINavigationControllerDelegate> {
    <TKVibrationPickerViewControllerDelegate> * __additionalDelegate;
    <TKVibrationPickerViewControllerDismissalDelegate> * __dismissalDelegate;
    long long  _alertType;
    bool  _allowsDeletingDefaultVibration;
    bool  _canEnterEditingMode;
    UICollectionView * _collectionView;
    NSString * _correspondingToneIdentifier;
    NSString * _defaultVibrationIdentifier;
    bool  _defaultVibrationIdentifierWasExplicitlySet;
    <TKVibrationPickerViewControllerDelegate> * _delegate;
    NSIndexPath * _indexPathOfCellBeingDeleted;
    NSMutableSet * _indexPathsOfCellsBeingSwiped;
    bool  _isCallingParentViewController;
    NSString * _noneString;
    NSMutableDictionary * _sectionHeaderViews;
    NSString * _selectedVibrationIdentifier;
    bool  _showsDefault;
    bool  _showsEditButtonAtRightSideOfCurrentNavigationController;
    bool  _showsEditButtonInNavigationBar;
    bool  _showsNone;
    bool  _showsNothingSelected;
    bool  _showsSynchronized;
    bool  _showsUserGenerated;
    bool  _skipNextUserGeneratedVibrationsDidChangeNotification;
    NSArray * _sortedUserGeneratedVibrationIdentifiers;
    <TKVibrationPickerStyleProvider> * _styleProvider;
    bool  _swipeToDeleteMode;
    NSString * _synchronizedVibrationIdentifier;
    NSURL * _temporaryDirectoryForSystemVibrationIdentifiers;
    NSString * _topic;
    TLVibrationManager * _vibrationManager;
    NSTimer * _vibrationShouldStopTimer;
    TKVibratorController * _vibratorController;
    bool  _viewHasAppearedAtLeastOnce;
}

@property (setter=_setAdditionalDelegate:, nonatomic) <TKVibrationPickerViewControllerDelegate> *_additionalDelegate;
@property (setter=_setDismissalDelegate:, nonatomic) <TKVibrationPickerViewControllerDismissalDelegate> *_dismissalDelegate;
@property (nonatomic, copy) NSString *accountIdentifier;
@property (nonatomic, readonly) long long alertType;
@property (nonatomic) bool allowsDeletingDefaultVibration;
@property (nonatomic, readonly) bool canEnterEditingMode;
@property (nonatomic, copy) NSString *correspondingToneIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) NSString *defaultVibrationIdentifier;
@property (nonatomic) <TKVibrationPickerViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *noneString;
@property (nonatomic, retain) NSString *selectedVibrationIdentifier;
@property (nonatomic) bool showsDefault;
@property (nonatomic) bool showsEditButtonInNavigationBar;
@property (nonatomic) bool showsNone;
@property (nonatomic) bool showsNothingSelected;
@property (nonatomic) bool showsUserGenerated;
@property (nonatomic, retain) <TKVibrationPickerStyleProvider> *styleProvider;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *topic;

- (void).cxx_destruct;
- (id)_additionalDelegate;
- (id)_adjustedNameForVibrationWithDesiredName:(id)arg1 vibrationIdentifier:(id)arg2;
- (struct { bool x1; bool x2; })_cellAccessoriesDescriptorForRowAtIndexPath:(id)arg1;
- (id)_customHeaderViewForHeaderInSection:(long long)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_defaultSectionHeaderLabelContainerViewLabelPaddingInsets;
- (id)_dismissalDelegate;
- (void)_ensureSystemVibrationIdentifiersAreInitialized;
- (id)_fileNameForIndexOfSystemVibrationIdentifier:(id)arg1;
- (id)_fileNameForSystemVibrationIdentifierAtIndex:(unsigned long long)arg1;
- (id)_fileNameForSystemVibrationIdentifiersCount;
- (void)_handleError:(id)arg1;
- (void)_handlePreferredContentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_handleUserGeneratedVibrationsDidChangeNotification;
- (id)_identifierOfVibrationAtIndexPath:(id)arg1;
- (unsigned long long)_indexOfSystemVibrationIdentifier:(id)arg1;
- (id)_indexPathForVibrationWithIdentifier:(id)arg1;
- (id)_localizationIdentifierForHeaderInSection:(long long)arg1;
- (id)_navigationItem;
- (unsigned long long)_numberOfSystemVibrationIdentifiers;
- (void)_presentVibrationRecorderViewController;
- (void)_processCurrentVibrationSelection;
- (id)_sanitizeVibrationIdentifierForPlayback:(id)arg1;
- (id)_sanitizedCorrespondingToneIdentifier;
- (id)_sanitizedDefaultVibrationIdentifier;
- (long long)_sectionForDefaultGroup;
- (long long)_sectionForNoneGroup;
- (long long)_sectionForSynchronizedGroup;
- (long long)_sectionForSystemGroup;
- (long long)_sectionForUserGeneratedGroup;
- (id)_selectedVibrationIndexPath;
- (void)_setAdditionalDelegate:(id)arg1;
- (void)_setDismissalDelegate:(id)arg1;
- (bool)_showsOnlyEditableSections;
- (id)_sortedArrayWithVibrationIdentifiers:(id)arg1 allowsDuplicateVibrationNames:(bool)arg2;
- (id)_sortedUserGeneratedVibrationIdentifiers;
- (void)_startVibratingWithVibrationIdentifier:(id)arg1;
- (void)_stopVibrating;
- (id)_systemVibrationIdentifierAtIndex:(unsigned long long)arg1;
- (void)_updateCheckedStateOfAllVisibleCells;
- (void)_updateEditButtonItem;
- (void)_updateEditButtonItemWithAnimation:(bool)arg1;
- (void)_updateLabelPaddingInsetsForVisibleSectionHeaders;
- (void)_updateSectionVisibilityFlagToValue:(bool)arg1 usingBlock:(id /* block */)arg2 sectionIndexGetter:(id /* block */)arg3;
- (void)_updateSelectionStyleForCell:(id)arg1 indexPath:(id)arg2;
- (void)_updateStyleOfCollectionView:(id)arg1 forStyleProvider:(id)arg2;
- (void)_updateVisibilityOfSynchronizedGroup;
- (double)_vibrationPickerRowHeight;
- (id)accountIdentifier;
- (long long)alertType;
- (bool)allowsDeletingDefaultVibration;
- (void)applicationWillSuspend;
- (bool)canBeShownFromSuspendedState;
- (bool)canEnterEditingMode;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 tableLayout:(id)arg2 commitEditingStyle:(long long)arg3 forRowAtIndexPath:(id)arg4;
- (void)collectionView:(id)arg1 tableLayout:(id)arg2 didEndEditingRowAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 tableLayout:(id)arg2 editingStyleForRowAtIndexPath:(id)arg3;
- (double)collectionView:(id)arg1 tableLayout:(id)arg2 heightForFooterInSection:(long long)arg3;
- (double)collectionView:(id)arg1 tableLayout:(id)arg2 heightForHeaderInSection:(long long)arg3;
- (void)collectionView:(id)arg1 tableLayout:(id)arg2 willBeginEditingRowAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)correspondingToneIdentifier;
- (void)dealloc;
- (id)defaultVibrationIdentifier;
- (id)delegate;
- (id)initWithAlertType:(long long)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loadView;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(id)arg1;
- (id)noneString;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)selectedVibrationIdentifier;
- (void)setAccountIdentifier:(id)arg1;
- (void)setAllowsDeletingDefaultVibration:(bool)arg1;
- (void)setCorrespondingToneIdentifier:(id)arg1;
- (void)setDefaultVibrationIdentifier:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setNoneString:(id)arg1;
- (void)setSelectedVibrationIdentifier:(id)arg1;
- (void)setShowsDefault:(bool)arg1;
- (void)setShowsEditButtonInNavigationBar:(bool)arg1;
- (void)setShowsNone:(bool)arg1;
- (void)setShowsNothingSelected:(bool)arg1;
- (void)setShowsUserGenerated:(bool)arg1;
- (void)setStyleProvider:(id)arg1;
- (void)setTopic:(id)arg1;
- (bool)showsDefault;
- (bool)showsEditButtonInNavigationBar;
- (bool)showsNone;
- (bool)showsNothingSelected;
- (bool)showsUserGenerated;
- (id)styleProvider;
- (unsigned long long)supportedInterfaceOrientations;
- (id)topic;
- (void)vibrationPickerCollectionViewCell:(id)arg1 endedEditingWithText:(id)arg2;
- (void)vibrationRecorderViewController:(id)arg1 didFinishRecordingVibrationPattern:(id)arg2 name:(id)arg3;
- (void)vibrationRecorderViewControllerWasDismissedWithoutSavingRecordedVibrationPattern:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewLayoutMarginsDidChange;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

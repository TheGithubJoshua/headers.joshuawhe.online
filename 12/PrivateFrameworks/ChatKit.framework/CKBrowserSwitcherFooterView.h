<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKBrowserSwitcherFooterView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKBrowserSwitcherFooterView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKBrowserSwitcherFooterView : UIView <UICollectionViewDataSource, UICollectionViewDelegate, UIGestureRecognizerDelegate> {
    <CKAppStripPredictiveTypeTransition> * _animator;
    CKAppStripLayout * _appStripLayout;
    UICollectionView * _collectionView;
    <CKBrowserSwitcherFooterViewDataSource> * _dataSource;
    <CKBrowserSwitcherFooterViewDelegate> * _delegate;
    UIView * _grayLine;
    bool  _hasTouches;
    bool  _hideShinyStatus;
    bool  _ignoreDataSourceChanges;
    bool  _isDoingMagnificationAnimation;
    bool  _isMagnificationEnabled;
    bool  _isMagnified;
    UILongPressGestureRecognizer * _longPressRecognizer;
    NSTimer * _minificationTimer;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _minifiedContentInsets;
    bool  _minifiesOnSelection;
    UIView * _predictiveTypeSnapshotView;
    bool  _scrollsLastUsedAppIconIntoView;
    double  _snapshotVerticalOffset;
    UILongPressGestureRecognizer * _touchTracker;
    UIView * _visibleView;
}

@property (nonatomic, retain) CKAppStripLayout *appStripLayout;
@property (nonatomic) <CKBrowserSwitcherFooterViewDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKBrowserSwitcherFooterViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIView *grayLine;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hideShinyStatus;
@property (nonatomic) bool isMagnified;
@property (nonatomic) bool minifiesOnSelection;
@property (nonatomic) bool scrollsLastUsedAppIconIntoView;
@property (nonatomic) bool showBorders;
@property (nonatomic) double snapshotVerticalOffset;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_updateVisibilityState;
- (void)adjustMagnificationAtPoint:(struct CGPoint { double x1; double x2; })arg1 minifyImmediately:(bool)arg2;
- (void)animateAppStripVisible:(bool)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)appStripLayout;
- (void)appsLongPressed:(id)arg1;
- (void)clearSelection;
- (id)collectionView;
- (bool)collectionView:(id)arg1 canMoveItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 moveItemAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 targetIndexPathForMoveFromItemAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (double)contentHeight;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)grayLine;
- (bool)hideShinyStatus;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })insetsForAppStrip;
- (void)installedAppsChanged:(id)arg1;
- (bool)isMagnified;
- (void)layoutSubviews;
- (bool)minifiesOnSelection;
- (void)minifyImmediately:(bool)arg1;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)reloadData;
- (void)resetScrollPosition;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (bool)scrollsLastUsedAppIconIntoView;
- (void)selectPluginAtIndexPath:(id)arg1;
- (void)setAppStripLayout:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGrayLine:(id)arg1;
- (void)setHideShinyStatus:(bool)arg1;
- (void)setInitiallySelectedPluginIfNeeded;
- (void)setIsMagnified:(bool)arg1;
- (void)setMinifiesOnSelection:(bool)arg1;
- (void)setScrollsLastUsedAppIconIntoView:(bool)arg1;
- (void)setShowBorders:(bool)arg1;
- (void)setSnapshotVerticalOffset:(double)arg1;
- (bool)showBorders;
- (double)snapshotVerticalOffset;
- (struct CGPoint { double x1; double x2; })targetContentOffsetForFocusPoint:(struct CGPoint { double x1; double x2; })arg1 initialLayoutMode:(unsigned long long)arg2 finalLayoutMode:(unsigned long long)arg3;
- (void)touchTrackerTrackedTouches:(id)arg1;
- (void)updateCollectionView:(id)arg1;
- (void)updatePredictiveTypeSnapshot:(id)arg1;
- (void)visibleAppsChanges:(id)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKBrowserTransitionCoordinator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKBrowserTransitionCoordinator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKBrowserTransitionCoordinator : NSObject <CKFullScreenAppViewControllerDelegate> {
    UIWindow * _appWindow;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedCompactFrame;
    CKConversation * _conversation;
    UIViewController<CKBrowserViewControllerProtocol> * _currentBrowser;
    long long  _currentConsumer;
    UIViewController<CKBrowserViewControllerProtocol> * _currentModalBrowser;
    <CKBrowserTransitionCoordinatorDelegate> * _delegate;
    bool  _expanded;
    CKFullScreenAppViewController * _fullscreenViewController;
    long long  _lastTransitionReason;
    UIWindow * _modalAppWindow;
    UIWindow * _preModalKeyWindow;
    UINavigationController * _presentedModalBrowserNavigationController;
    UIViewController * _presentingViewController;
    UIWindow * _previousKeyWindow;
    <CKBrowserViewControllerSendDelegate> * _sendDelegate;
    bool  _underTest;
}

@property (nonatomic, retain) UIWindow *appWindow;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cachedCompactFrame;
@property (nonatomic, retain) CKConversation *conversation;
@property (nonatomic, retain) UIViewController<CKBrowserViewControllerProtocol> *currentBrowser;
@property (nonatomic) long long currentConsumer;
@property (nonatomic, retain) UIViewController<CKBrowserViewControllerProtocol> *currentModalBrowser;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKBrowserTransitionCoordinatorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isExpanded, nonatomic) bool expanded;
@property (nonatomic, retain) CKFullScreenAppViewController *fullscreenViewController;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long lastTransitionReason;
@property (nonatomic, retain) UIWindow *modalAppWindow;
@property (nonatomic) UIWindow *preModalKeyWindow;
@property (nonatomic, retain) UINavigationController *presentedModalBrowserNavigationController;
@property (getter=isPresentingFullScreenModal, nonatomic, readonly) bool presentingFullScreenModal;
@property (nonatomic) UIViewController *presentingViewController;
@property (nonatomic) UIWindow *previousKeyWindow;
@property (nonatomic) <CKBrowserViewControllerSendDelegate> *sendDelegate;
@property (readonly) Class superclass;
@property (nonatomic) bool underTest;
@property (nonatomic, readonly) bool wasCurrentBrowserExpanded;

- (void).cxx_destruct;
- (id)appIconOverride;
- (id)appTitleOverride;
- (id)appWindow;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cachedCompactFrame;
- (id)conversation;
- (id)currentBrowser;
- (long long)currentConsumer;
- (id)currentModalBrowser;
- (id)delegate;
- (void)dismissCurrentFullScreenModalAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)dismissCurrentFullscreenBrowserAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)fullscreenAppViewController:(id)arg1 hasUpdatedLastTouchDate:(id)arg2;
- (void)fullscreenAppViewController:(id)arg1 wantsToSwitchToPlugin:(id)arg2 datasource:(id)arg3;
- (double)fullscreenAppViewControllerCollapsedContentHeight:(id)arg1;
- (void)fullscreenAppViewControllerDidTransitionFromOrientation:(long long)arg1 toOrientation:(long long)arg2;
- (bool)fullscreenAppViewControllerShouldDismissOnDragSuccess:(id)arg1;
- (void)fullscreenAppViewControllerSwitcherDidSelectAppManager:(id)arg1;
- (void)fullscreenAppViewControllerSwitcherDidSelectAppStore:(id)arg1;
- (void)fullscreenAppViewControllerWantsToCollapse:(id)arg1;
- (id)fullscreenViewController;
- (bool)isExpanded;
- (bool)isHostingRemoteKeyboardView;
- (bool)isPresentingFullScreenModal;
- (long long)lastTransitionReason;
- (id)modalAppWindow;
- (id)preModalKeyWindow;
- (void)presentCurrentBrowserFullscreenAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)presentPluginFullScreenModal:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)presentedModalBrowserNavigationController;
- (id)presentingViewController;
- (id)previousKeyWindow;
- (void)releaseOwnershipOfBrowserForConsumer:(long long)arg1;
- (id)requestOwnershipOfBrowserForConsumer:(long long)arg1;
- (id)sendDelegate;
- (void)setAppWindow:(id)arg1;
- (void)setCachedCompactFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setConversation:(id)arg1;
- (void)setCurrentBrowser:(id)arg1;
- (void)setCurrentConsumer:(long long)arg1;
- (void)setCurrentModalBrowser:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExpanded:(bool)arg1;
- (void)setExpanded:(bool)arg1 withReason:(long long)arg2;
- (void)setFullscreenViewController:(id)arg1;
- (void)setLastTransitionReason:(long long)arg1;
- (void)setModalAppWindow:(id)arg1;
- (void)setPreModalKeyWindow:(id)arg1;
- (void)setPresentedModalBrowserNavigationController:(id)arg1;
- (void)setPresentingViewController:(id)arg1;
- (void)setPreviousKeyWindow:(id)arg1;
- (void)setSendDelegate:(id)arg1;
- (void)setUnderTest:(bool)arg1;
- (bool)shouldAlwaysShowAppTitle;
- (void)transitionCurrentBrowserToCollapsedPresentationAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)transitionCurrentBrowserToExpandedPresentationAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (id)transitionViewController;
- (bool)underTest;
- (bool)updateBrowserSessionForPlugin:(id)arg1 datasource:(id)arg2;
- (bool)usePresentationWindowDuringTransition;
- (bool)wasCurrentBrowserExpanded;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKBrowserViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKBrowserViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKBrowserViewController : UIViewController <CKBrowserViewControllerProtocol> {
    IMBalloonPlugin * _balloonPlugin;
    IMBalloonPluginDataSource * _balloonPluginDataSource;
    CKBrowserDragManager * _browserDragManager;
    NSString * _conversationID;
    long long  _currentBrowserConsumer;
    UIView * _dragTargetView;
    bool  _isPrimaryViewController;
    bool  _isTransitioningToExpandedPresentation;
    bool  _isiMessage;
    UIViewController * _presentationViewController;
    long long  _previousConsumer;
    NSObject<CKBrowserViewControllerSendDelegate> * _sendDelegate;
}

@property (nonatomic, retain) NSNumber *adamID;
@property (nonatomic, readonly) unsigned long long badgeValue;
@property (nonatomic, readonly) IMBalloonPlugin *balloonPlugin;
@property (nonatomic, retain) IMBalloonPluginDataSource *balloonPluginDataSource;
@property (nonatomic, retain) CKBrowserDragManager *browserDragManager;
@property (nonatomic, readonly) long long browserPresentationStyle;
@property (nonatomic, readonly) bool canReplaceDataSource;
@property (nonatomic, retain) NSData *conversationEngramID;
@property (nonatomic) NSString *conversationID;
@property (nonatomic) long long currentBrowserConsumer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) UIView *dragTargetView;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } horizontalSwipeExclusionRect;
@property (nonatomic, readonly) bool inExpandedPresentation;
@property (nonatomic, readonly) bool inFullScreenModalPresentation;
@property (nonatomic) bool isPrimaryViewController;
@property (nonatomic) bool isTransitioningToExpandedPresentation;
@property (nonatomic) bool isiMessage;
@property (nonatomic, readonly) bool mayBeKeptInViewHierarchy;
@property (nonatomic, readonly) long long parentModalPresentationStyle;
@property (nonatomic, readonly) <UIViewControllerTransitioningDelegate> *parentTransitioningDelegate;
@property (nonatomic, retain) UIViewController *presentationViewController;
@property (nonatomic, retain) NSArray *recipients;
@property (nonatomic, readonly) UIViewController *remoteViewController;
@property (nonatomic) NSObject<CKBrowserViewControllerSendDelegate> *sendDelegate;
@property (nonatomic, retain) NSString *sender;
@property (nonatomic, readonly) bool shouldShowChatChrome;
@property (nonatomic, readonly) bool shouldSuppressEntryView;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsQuickView;
@property (nonatomic, readonly) bool wantsDarkUI;
@property (nonatomic, readonly) bool wantsOpaqueUI;
@property (nonatomic, readonly) bool wasExpandedPresentation;

+ (id)currentPPTTestName;
+ (bool)supportsMessagesAppExtendedLaunchTest;

- (void).cxx_destruct;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_edgeInsetsForChildViewController:(id)arg1 insetsAreAbsolute:(bool*)arg2;
- (void)_updateContentOverlayInsetsForSelfAndChildren;
- (id)balloonPlugin;
- (id)balloonPluginDataSource;
- (void)beginDisablingUserInteraction;
- (id)browserDragManager;
- (long long)browserPresentationStyle;
- (id)conversationID;
- (long long)currentBrowserConsumer;
- (void)didTransitionFromOrientation:(long long)arg1 toOrientation:(long long)arg2;
- (void)dismiss;
- (void)dismissViewControllerAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (id)dragTargetView;
- (void)endDisablingUserInteraction;
- (void)finishedPPTTestNamed:(id)arg1;
- (void)finishedPPTTestNamed:(id)arg1 isCKLaunchTest:(bool)arg2;
- (bool)inCompactPresentation;
- (bool)inExpandedPresentation;
- (bool)inFullScreenModalPresentation;
- (id)initWithBalloonPlugin:(id)arg1;
- (id)initWithBalloonPlugin:(id)arg1 dataSource:(id)arg2;
- (id)initWithBalloonPlugin:(id)arg1 pluginPayloads:(id)arg2;
- (bool)isLoaded;
- (bool)isPrimaryViewController;
- (bool)isTransitioningToExpandedPresentation;
- (bool)isiMessage;
- (void)loadView;
- (bool)mayBeKeptInViewHierarchy;
- (void)presentViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)presentationViewController;
- (id)sendDelegate;
- (void)setBalloonPluginDataSource:(id)arg1;
- (void)setBrowserDragManager:(id)arg1;
- (void)setConversationID:(id)arg1;
- (void)setCurrentBrowserConsumer:(long long)arg1;
- (void)setDragTargetView:(id)arg1;
- (void)setIsPrimaryViewController:(bool)arg1;
- (void)setIsTransitioningToExpandedPresentation:(bool)arg1;
- (void)setIsiMessage:(bool)arg1;
- (void)setPresentationViewController:(id)arg1;
- (void)setSendDelegate:(id)arg1;
- (bool)shouldShowChatChrome;
- (bool)shouldSuppressEntryView;
- (void)startPPTTestNamed:(id)arg1;
- (bool)supportsQuickView;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidTransitionToCompactPresentation;
- (void)viewDidTransitionToExpandedPresentation;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToCompactPresentation;
- (void)viewWillTransitionToExpandedPresentation;
- (bool)wantsDarkUI;
- (bool)wantsOpaqueUI;
- (bool)wasExpandedPresentation;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKChatItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKChatItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKChatItem : NSObject {
    BBBulletin * _bulletin;
    IMTranscriptChatItem * _imChatItem;
    double  _maxWidth;
    struct CGSize { 
        double width; 
        double height; 
    }  _size;
    bool  _sizeLoaded;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _textAlignmentInsets;
    NSAttributedString * _transcriptDrawerText;
    NSAttributedString * _transcriptText;
    bool  _zOrder;
}

@property (nonatomic, retain) IMTranscriptChatItem *IMChatItem;
@property (nonatomic, readonly) unsigned char attachmentContiguousType;
@property (nonatomic, readonly) struct CKBalloonDescriptor_t { BOOL x1; BOOL x2; BOOL x3; BOOL x4; unsigned long long x5; BOOL x6; bool x7; bool x8; bool x9; } balloonDescriptor;
@property (nonatomic, retain) BBBulletin *bulletin;
@property (nonatomic, readonly) bool canAttachStickers;
@property (nonatomic, readonly) bool canCopy;
@property (nonatomic, readonly) bool canDelete;
@property (nonatomic, readonly) bool canExport;
@property (nonatomic, readonly) bool canForward;
@property (nonatomic, readonly) bool canSendAsTextMessage;
@property (nonatomic, readonly) Class cellClass;
@property (nonatomic, readonly, copy) NSString *cellIdentifier;
@property (nonatomic, readonly) CNContact *contact;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentInsets;
@property (nonatomic, readonly) unsigned char contiguousType;
@property (nonatomic, readonly) bool displayDuringSend;
@property (nonatomic, readonly) bool hasTail;
@property (nonatomic, readonly) bool isEditable;
@property (nonatomic) double maxWidth;
@property (nonatomic, readonly, copy) NSString *menuTitle;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } size;
@property (getter=isSizeLoaded, nonatomic) bool sizeLoaded;
@property (nonatomic, readonly) bool stickersSnapToPoint;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } textAlignmentInsets;
@property (nonatomic, copy) NSAttributedString *transcriptDrawerText;
@property (nonatomic, readonly) BOOL transcriptOrientation;
@property (nonatomic, copy) NSAttributedString *transcriptText;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } transcriptTextAlignmentInsets;
@property (nonatomic, readonly) bool wantsDrawerLayout;
@property (nonatomic, readonly) bool zOrder;

+ (id)chatItemWithBulletin:(id)arg1 balloonMaxWidth:(double)arg2 otherMaxWidth:(double)arg3;
+ (id)chatItemWithIMChatItem:(id)arg1 balloonMaxWidth:(double)arg2 otherMaxWidth:(double)arg3;

- (void).cxx_destruct;
- (id)IMChatItem;
- (void)_setSizeForTesting:(struct CGSize { double x1; double x2; })arg1;
- (unsigned char)attachmentContiguousType;
- (struct CKBalloonDescriptor_t { BOOL x1; BOOL x2; BOOL x3; BOOL x4; unsigned long long x5; BOOL x6; bool x7; bool x8; bool x9; })balloonDescriptor;
- (id)bulletin;
- (bool)canAttachStickers;
- (bool)canCopy;
- (bool)canDelete;
- (bool)canExport;
- (bool)canForward;
- (bool)canSave;
- (bool)canSendAsTextMessage;
- (Class)cellClass;
- (id)cellIdentifier;
- (id)contact;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInsets;
- (unsigned char)contiguousType;
- (id)description;
- (bool)displayDuringSend;
- (bool)hasTail;
- (id)initWithBulletin:(id)arg1 maxWidth:(double)arg2;
- (id)initWithIMChatItem:(id)arg1 maxWidth:(double)arg2;
- (bool)isEditable;
- (bool)isEqual:(id)arg1;
- (bool)isSizeLoaded;
- (struct CGSize { double x1; double x2; })loadSizeThatFits:(struct CGSize { double x1; double x2; })arg1 textAlignmentInsets:(out struct UIEdgeInsets { double x1; double x2; double x3; double x4; }*)arg2;
- (id)loadTranscriptDrawerText;
- (id)loadTranscriptText;
- (double)maxWidth;
- (id)menuTitle;
- (void)setBulletin:(id)arg1;
- (void)setIMChatItem:(id)arg1;
- (void)setMaxWidth:(double)arg1;
- (void)setSizeLoaded:(bool)arg1;
- (void)setTranscriptDrawerText:(id)arg1;
- (void)setTranscriptText:(id)arg1;
- (struct CGSize { double x1; double x2; })size;
- (bool)stickersSnapToPoint;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })textAlignmentInsets;
- (id)transcriptDrawerText;
- (BOOL)transcriptOrientation;
- (id)transcriptText;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })transcriptTextAlignmentInsets;
- (void)unloadSize;
- (void)unloadTranscriptText;
- (id)visibleAssociatedMessageChatItems;
- (bool)wantsDrawerLayout;
- (bool)zOrder;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

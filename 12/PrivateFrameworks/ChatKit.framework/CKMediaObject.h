<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKMediaObject.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKMediaObject.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKMediaObject : NSObject <QLPreviewItem> {
    NSURL * _cachedHighQualityFileURL;
    NSObject<OS_dispatch_group> * _highQualityFetchInProgressGroup;
    bool  _isFromMe;
    bool  _suppressPreviewForUnknownSender;
    <CKFileTransfer> * _transfer;
}

@property (nonatomic, readonly, copy) NSString *UTIType;
@property (nonatomic, retain) NSURL *cachedHighQualityFileURL;
@property (nonatomic, readonly) bool canShareItem;
@property (nonatomic, readonly, copy) NSData *data;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSURL *fileURL;
@property (nonatomic, readonly, copy) NSString *filename;
@property (nonatomic, readonly) bool generatePreviewOutOfProcess;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_group> *highQualityFetchInProgressGroup;
@property (nonatomic) bool isFromMe;
@property (nonatomic, readonly) int mediaType;
@property (nonatomic, readonly, copy) NSString *mimeType;
@property (nonatomic, readonly) bool needsAnimation;
@property (nonatomic, readonly, copy) NSString *previewFilenameExtension;
@property (nonatomic, readonly) NSString *previewItemTitle;
@property (nonatomic, readonly) NSURL *previewItemURL;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressPreviewForUnknownSender;
@property (nonatomic, readonly, copy) NSDictionary *transcoderUserInfo;
@property (nonatomic, retain) <CKFileTransfer> *transfer;
@property (nonatomic, readonly, copy) NSString *transferGUID;
@property (nonatomic, readonly) bool validatePreviewFormat;

+ (id)UTITypes;
+ (Class)__ck_attachmentItemClass;
+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)iconCache;
+ (bool)isPreviewable;
+ (id)mediaClasses;
+ (bool)shouldScaleUpPreview;
+ (bool)shouldShadePreview;

- (void).cxx_destruct;
- (id)ASTCDataFromImage:(id)arg1;
- (id)JPEGDataFromImage:(id)arg1;
- (id)UTIType;
- (void)_sampleImageEdges:(id)arg1 usingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 forMostlyWhitePixels:(unsigned long long*)arg3 otherPixels:(unsigned long long*)arg4;
- (Class)balloonViewClassForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)bbPreviewFillToSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })bbSize;
- (void)cacheAndPersistPreview:(id)arg1 orientation:(BOOL)arg2;
- (id)cachedHighQualityFileURL;
- (bool)canExport;
- (bool)canShareItem;
- (Class)coloredBalloonViewClass;
- (id)composeImagesForEntryContentViewWidth:(double)arg1;
- (id)data;
- (void)dealloc;
- (id)description;
- (id)downloadProgressImage;
- (id)downloadProgressString;
- (void)export:(id)arg1;
- (void)fetchHighQualityFile:(id /* block */)arg1;
- (id)fileManager;
- (id)fileSizeString;
- (id)fileURL;
- (id)filename;
- (id)generatePreviewFromThumbnail:(id)arg1 width:(double)arg2 orientation:(BOOL)arg3;
- (bool)generatePreviewOutOfProcess;
- (id)generateThumbnailFillToSize:(struct CGSize { double x1; double x2; })arg1 contentAlignmentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (id)generateThumbnailForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)highQualityFetchInProgressGroup;
- (id)icon;
- (id)initWithTransfer:(id)arg1 isFromMe:(bool)arg2 suppressPreview:(bool)arg3;
- (Class)inlineStickerBalloonViewClass;
- (bool)isEqual:(id)arg1;
- (bool)isFromMe;
- (bool)isPreviewable;
- (bool)isPromisedItem;
- (id)location;
- (int)mediaType;
- (id)mimeType;
- (bool)needsAnimation;
- (id)pasteboardItem;
- (Class)previewBalloonViewClass;
- (id)previewCacheKeyWithOrientation:(BOOL)arg1;
- (id)previewCachesFileURLWithOrientation:(BOOL)arg1 extension:(id)arg2;
- (id)previewDispatchCache;
- (id)previewFilenameExtension;
- (id)previewForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)previewItemURL;
- (void)savePreview:(id)arg1 toURL:(id)arg2 forOrientation:(BOOL)arg3;
- (id)savedPreviewFromURL:(id)arg1 forOrientation:(BOOL)arg2;
- (void)setCachedHighQualityFileURL:(id)arg1;
- (void)setHighQualityFetchInProgressGroup:(id)arg1;
- (void)setIsFromMe:(bool)arg1;
- (void)setSuppressPreviewForUnknownSender:(bool)arg1;
- (void)setTransfer:(id)arg1;
- (bool)shouldBeQuickLooked;
- (bool)shouldShowDisclosure;
- (bool)shouldShowViewer;
- (id)subtitle;
- (bool)suppressPreviewForUnknownSender;
- (id)title;
- (bool)transcoderPreviewGenerationFailed;
- (id)transcoderUserInfo;
- (id)transfer;
- (id)transferGUID;
- (bool)validPreviewExistsAtURL:(id)arg1;
- (bool)validatePreviewFormat;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

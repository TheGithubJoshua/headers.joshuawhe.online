<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKAvatarPickerViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKAvatarPickerViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKAvatarPickerViewController : UIViewController <CKAvatarPickerLayoutDelegate, CNAvatarViewDelegate, UICollectionViewDataSource, UICollectionViewDelegate> {
    UICollectionView * _collectionView;
    CKConversation * _conversation;
    long long  _indicatorType;
    CKAvatarPickerLayout * _layout;
    long long  _style;
    CNContactStore * _suggestionsEnabledContactStore;
    CKAvatarTitleCollectionReusableView * _titleView;
    NSMapTable * _visibleTitleViews;
}

@property (nonatomic, retain) UICollectionView *collectionView;
@property (nonatomic, retain) CKConversation *conversation;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long indicatorType;
@property (nonatomic, retain) CKAvatarPickerLayout *layout;
@property (nonatomic) long long style;
@property (nonatomic, retain) CNContactStore *suggestionsEnabledContactStore;
@property (readonly) Class superclass;
@property (nonatomic, retain) CKAvatarTitleCollectionReusableView *titleView;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } titleViewFrame;
@property (nonatomic, retain) NSMapTable *visibleTitleViews;

- (void).cxx_destruct;
- (void)_animateInTitleView;
- (void)_animateOutTitleView;
- (void)_chatPropertiesChanged:(id)arg1;
- (id)_contactNameSupplementaryViewAtIndexPath:(id)arg1;
- (id)_cutoutSupplementaryViewAtIndexPath:(id)arg1;
- (void)_handleAddressBookChange:(id)arg1;
- (void)_handleConversationIsFilteredChange:(id)arg1;
- (void)_handleConversationRecipientsDidChange:(id)arg1;
- (void)_handleGroupNameChange:(id)arg1;
- (void)_setTitle:(id)arg1 animated:(bool)arg2;
- (bool)_shouldUseBanner;
- (id)_titleSupplementaryViewAtIndexPath:(id)arg1;
- (id)avatarDisplayName;
- (bool)avatarPickerLayoutShouldShowTitle:(id)arg1;
- (id)avatarView:(id)arg1 orderedPropertiesForProperties:(id)arg2 category:(id)arg3;
- (bool)chatIsReportedAsSpam;
- (int)chatWasDetectedAsSMSSpam;
- (id)collectionView;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)conversation;
- (void)dealloc;
- (bool)hasTitle;
- (long long)indicatorType;
- (id)initWithConversation:(id)arg1;
- (id)layout;
- (void)loadView;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)presentingViewControllerForAvatarView:(id)arg1;
- (void)setAvatarPickerActive:(bool)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setConversation:(id)arg1;
- (void)setIndicatorType:(long long)arg1;
- (void)setLayout:(id)arg1;
- (void)setStyle:(long long)arg1;
- (void)setSuggestionsEnabledContactStore:(id)arg1;
- (void)setTitleView:(id)arg1;
- (void)setVisibleTitleViews:(id)arg1;
- (long long)style;
- (id)suggestionsEnabledContactStore;
- (id)titleView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })titleViewFrame;
- (id)visibleTitleViews;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKAudioController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKAudioController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKAudioController : NSObject <CKAudioPlayerDelegate> {
    CKAudioPlayer * _audioPlayer;
    unsigned long long  _currentIndex;
    <CKAudioControllerDelegate> * _delegate;
    bool  _interrupted;
    CKAudioPlayer * _listenAudioPlayer;
    NSMutableArray * _mediaObjects;
    bool  _paused;
    bool  _playing;
    bool  _shouldDuckOthers;
    bool  _shouldStopPlayingWhenSilent;
    bool  _shouldUseAVPlayer;
    bool  _shouldUseSpeaker;
}

@property (setter=_setMediaObjects:, nonatomic, retain) NSMutableArray *_mediaObjects;
@property (nonatomic, retain) CKAudioPlayer *audioPlayer;
@property (nonatomic, readonly) CKMediaObject *currentMediaObject;
@property (nonatomic, readonly) double currentMediaObjectDuration;
@property (nonatomic, readonly) double currentMediaObjectTime;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKAudioControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool interrupted;
@property (nonatomic, readonly) NSArray *mediaObjects;
@property (getter=isPaused, nonatomic) bool paused;
@property (getter=isPlaying, nonatomic) bool playing;
@property (nonatomic) bool shouldDuckOthers;
@property (nonatomic) bool shouldStopPlayingWhenSilent;
@property (nonatomic) bool shouldUseAVPlayer;
@property (nonatomic) bool shouldUseSpeaker;
@property (readonly) Class superclass;
@property (nonatomic) float volume;

- (void).cxx_destruct;
- (id)_mediaObjects;
- (void)_notifyPlayerDidPrepareMediaObject:(id)arg1 successfully:(bool)arg2;
- (void)_setMediaObjects:(id)arg1;
- (void)addMediaObject:(id)arg1;
- (void)addMediaObjects:(id)arg1;
- (void)applicationWillResignActive;
- (id)audioPlayer;
- (void)audioPlayerCurrentTimeDidChange:(id)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1;
- (void)audioPlayerDidPrepareAudioToPlay:(id)arg1 successfully:(bool)arg2;
- (unsigned long long)audioSessionControllerOptions;
- (void)audioSessionInterruption:(id)arg1;
- (id)currentMediaObject;
- (double)currentMediaObjectDuration;
- (double)currentMediaObjectTime;
- (void)dealloc;
- (id)delegate;
- (id)initWithMediaObjects:(id)arg1;
- (bool)interrupted;
- (bool)isPaused;
- (bool)isPlaying;
- (id)mediaObjects;
- (void)pause;
- (void)play;
- (void)playAfterDelay:(double)arg1;
- (void)playListenEndSound:(id /* block */)arg1;
- (void)playListenSound:(id /* block */)arg1;
- (void)prepareToPlay;
- (void)setAudioPlayer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInterrupted:(bool)arg1;
- (void)setPaused:(bool)arg1;
- (void)setPlaying:(bool)arg1;
- (void)setShouldDuckOthers:(bool)arg1;
- (void)setShouldStopPlayingWhenSilent:(bool)arg1;
- (void)setShouldUseAVPlayer:(bool)arg1;
- (void)setShouldUseSpeaker:(bool)arg1;
- (void)setVolume:(float)arg1;
- (bool)shouldDuckOthers;
- (bool)shouldStopPlayingWhenSilent;
- (bool)shouldUseAVPlayer;
- (bool)shouldUseSpeaker;
- (void)stop;
- (float)volume;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

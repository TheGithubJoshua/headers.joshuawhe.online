<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKVideoMessageRecordingViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKVideoMessageRecordingViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKVideoMessageRecordingViewController : UIViewController <CKActionMenuControllerDelegate, CKVideoRecorderDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate> {
    UIImagePickerController * _cameraViewController;
    bool  _canceled;
    NSError * _captureError;
    unsigned long long  _enableCancel;
    id /* block */  _mediaExportCompletionBlock;
    CKMediaObject * _mediaObjectForSending;
    UIWindow * _overlayWindow;
    CKActionMenuItem * _photoMenuItem;
    UIView * _presentationView;
    bool  _presented;
    bool  _previewWarmedUp;
    bool  _recording;
    bool  _sending;
    bool  _showingVideo;
    UIButton * _swapCameraButton;
    CKRecordingElapsedTimeView * _timerView;
    UIView * _topBackgroundView;
    bool  _triedToRecord;
    CKActionMenuController * _videoActionMenuController;
    <CKVideoMessageRecordingViewControllerDelegate> * _videoMessageDelegate;
}

@property (nonatomic, retain) UIImagePickerController *cameraViewController;
@property (nonatomic) bool canceled;
@property (nonatomic, retain) NSError *captureError;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long enableCancel;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id /* block */ mediaExportCompletionBlock;
@property (nonatomic, retain) CKMediaObject *mediaObjectForSending;
@property (nonatomic, retain) CKActionMenuItem *photoMenuItem;
@property (nonatomic) bool recording;
@property (nonatomic) bool sending;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIButton *swapCameraButton;
@property (nonatomic, retain) CKRecordingElapsedTimeView *timerView;
@property (nonatomic, retain) UIView *topBackgroundView;
@property (nonatomic) bool triedToRecord;
@property (nonatomic, retain) CKActionMenuController *videoActionMenuController;
@property (nonatomic) <CKVideoMessageRecordingViewControllerDelegate> *videoMessageDelegate;

- (void).cxx_destruct;
- (void)_animateVideoIn;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_cameraOrientationChanged:(id)arg1;
- (void)_cleanupCamera;
- (void)_previewWarmedUp:(id)arg1;
- (void)actionMenuControllerWillDismissActionMenu:(id)arg1 animated:(bool)arg2;
- (id)cameraViewController;
- (void)cancel;
- (void)cancelMenuItemAction:(id)arg1;
- (bool)canceled;
- (id)captureError;
- (id)childViewControllerForStatusBarHidden;
- (void)ckVideoRecorder:(id)arg1 imageDataCaptured:(id)arg2 error:(id)arg3;
- (void)ckVideoRecorder:(id)arg1 videoCaptured:(id)arg2 error:(id)arg3;
- (void)ckVideoRecorderRecordingCanceled:(id)arg1;
- (void)dealloc;
- (void)dismissWithCompletion:(id /* block */)arg1;
- (unsigned long long)enableCancel;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (id)initWithPresentationView:(id)arg1;
- (id /* block */)mediaExportCompletionBlock;
- (id)mediaObjectForSending;
- (id)photoMenuItem;
- (void)photoMenuItemAction:(id)arg1;
- (void)presentVideoActionMenuController;
- (void)presentWithCompletion:(id /* block */)arg1;
- (void)record;
- (bool)recording;
- (void)send;
- (bool)sending;
- (void)setCameraViewController:(id)arg1;
- (void)setCanceled:(bool)arg1;
- (void)setCaptureError:(id)arg1;
- (void)setEnableCancel:(unsigned long long)arg1;
- (void)setMediaExportCompletionBlock:(id /* block */)arg1;
- (void)setMediaObjectForSending:(id)arg1;
- (void)setPhotoMenuItem:(id)arg1;
- (void)setRecording:(bool)arg1;
- (void)setSending:(bool)arg1;
- (void)setSwapCameraButton:(id)arg1;
- (void)setTimerView:(id)arg1;
- (void)setTopBackgroundView:(id)arg1;
- (void)setTriedToRecord:(bool)arg1;
- (void)setVideoActionMenuController:(id)arg1;
- (void)setVideoMessageDelegate:(id)arg1;
- (bool)shouldAutorotate;
- (void)stopRecordingWithCompletionBlock:(id /* block */)arg1;
- (void)swapCamera:(id)arg1;
- (id)swapCameraButton;
- (void)takePictureWithCompletionBlock:(id /* block */)arg1;
- (id)timerView;
- (id)topBackgroundView;
- (bool)triedToRecord;
- (id)videoActionMenuController;
- (void)videoMenuItemAction:(id)arg1;
- (id)videoMessageDelegate;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDetailsContactsTableViewCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKDetailsContactsTableViewCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKDetailsContactsTableViewCell : CKDetailsCell {
    CNContact * _contact;
    CKAvatarView * _contactAvatarView;
    <CKDetailsContactsTableViewCellDelegate> * _delegate;
    NSString * _entityName;
    UIButton * _facetimeVideoButton;
    UILabel * _locationLabel;
    NSString * _locationString;
    UIButton * _messageButton;
    CKLabel * _nameLabel;
    UIButton * _phoneButton;
    bool  _showFaceTimeVideoButton;
    bool  _showInfoButton;
    bool  _showMessageButton;
    bool  _showPhoneButton;
    bool  _showsLocation;
    UIActivityIndicatorView * _updatingParticipantSpinner;
}

@property (nonatomic, retain) CNContact *contact;
@property (nonatomic, retain) CKAvatarView *contactAvatarView;
@property (nonatomic) <CKDetailsContactsTableViewCellDelegate> *delegate;
@property (nonatomic, copy) NSString *entityName;
@property (nonatomic, retain) UIButton *facetimeVideoButton;
@property (nonatomic, retain) UILabel *locationLabel;
@property (nonatomic, copy) NSString *locationString;
@property (nonatomic, retain) UIButton *messageButton;
@property (nonatomic, retain) CKLabel *nameLabel;
@property (nonatomic, retain) UIButton *phoneButton;
@property (nonatomic) bool showFaceTimeVideoButton;
@property (nonatomic) bool showInfoButton;
@property (nonatomic) bool showMessageButton;
@property (nonatomic) bool showPhoneButton;
@property (nonatomic) bool showsLocation;
@property (nonatomic, retain) UIActivityIndicatorView *updatingParticipantSpinner;

+ (Class)cellClass;
+ (double)estimatedHeight;
+ (double)marginWidth;
+ (double)preferredHeight;
+ (id)reuseIdentifier;

- (void).cxx_destruct;
- (void)_configureButtonLayer:(id)arg1;
- (void)_dismissUpdatingParticipantSpinner;
- (void)_handleCommunicationAction:(id)arg1;
- (void)_showUpdatingParticipantSpinner;
- (void)_updateVisibleButtons;
- (void)configureWithViewModel:(id)arg1;
- (id)contact;
- (id)contactAvatarView;
- (id)delegate;
- (id)entityName;
- (id)facetimeVideoButton;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)layoutSubviews;
- (id)locationLabel;
- (id)locationString;
- (id)messageButton;
- (id)nameLabel;
- (id)phoneButton;
- (void)setContact:(id)arg1;
- (void)setContactAvatarView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEntityName:(id)arg1;
- (void)setFacetimeVideoButton:(id)arg1;
- (void)setLocationLabel:(id)arg1;
- (void)setLocationString:(id)arg1;
- (void)setMessageButton:(id)arg1;
- (void)setNameLabel:(id)arg1;
- (void)setPhoneButton:(id)arg1;
- (void)setShowFaceTimeVideoButton:(bool)arg1;
- (void)setShowInfoButton:(bool)arg1;
- (void)setShowMessageButton:(bool)arg1;
- (void)setShowPhoneButton:(bool)arg1;
- (void)setShowsLocation:(bool)arg1;
- (void)setUpdatingParticipantSpinner:(id)arg1;
- (bool)showFaceTimeVideoButton;
- (bool)showInfoButton;
- (bool)showMessageButton;
- (bool)showPhoneButton;
- (bool)showsLocation;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)updatingParticipantSpinner;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

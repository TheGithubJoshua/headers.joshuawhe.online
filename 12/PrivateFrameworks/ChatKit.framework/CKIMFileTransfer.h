<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKIMFileTransfer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ChatKit.framework/CKIMFileTransfer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit (1.0)
 */

@interface CKIMFileTransfer : NSObject <CKFileTransfer> {
    NSDictionary * _attributionInfo;
    unsigned long long  _currentBytes;
    NSError * _error;
    bool  _fileDataReady;
    NSURL * _fileURL;
    bool  _fileURLFinalized;
    NSString * _filename;
    NSString * _guid;
    bool  _hideAttachment;
    IMMessage * _imMessage;
    bool  _isSticker;
    NSObject<OS_dispatch_queue> * _isolationQueue;
    NSURL * _linkFileURL;
    int  _mediaObjectCount;
    bool  _restoring;
    NSDictionary * _stickerUserInfo;
    unsigned long long  _totalBytes;
    NSDictionary * _transcoderUserInfo;
    long long  _transferState;
}

@property (nonatomic, retain) IMMessage *IMMessage;
@property (nonatomic, copy) NSDictionary *attributionInfo;
@property (nonatomic, readonly) unsigned long long currentBytes;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDownloadable, nonatomic, readonly) bool downloadable;
@property (getter=isDownloading, nonatomic, readonly) bool downloading;
@property (nonatomic, readonly, copy) NSError *error;
@property (getter=isFileDataReady, nonatomic, readonly) bool fileDataReady;
@property (nonatomic, readonly, copy) NSURL *fileURL;
@property (getter=isFileURLFinalized, nonatomic, readonly) bool fileURLFinalized;
@property (nonatomic, readonly, copy) NSString *filename;
@property (nonatomic, readonly, copy) NSString *guid;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool hideAttachment;
@property (nonatomic, readonly) bool isSticker;
@property (nonatomic, copy) NSURL *linkFileURL;
@property (getter=isRestoring, nonatomic, readonly) bool restoring;
@property (nonatomic, readonly, copy) NSDictionary *stickerUserInfo;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long totalBytes;
@property (nonatomic, readonly, copy) NSDictionary *transcoderUserInfo;
@property (nonatomic) long long transferState;

- (void).cxx_destruct;
- (id)IMMessage;
- (void)attachmentRestored:(id)arg1;
- (id)attributionInfo;
- (unsigned long long)currentBytes;
- (void)dealloc;
- (id)description;
- (id)error;
- (void)fetchHighQualityFile:(id /* block */)arg1;
- (id)fileManager;
- (id)fileURL;
- (id)filename;
- (id)guid;
- (bool)hideAttachment;
- (id)imFileTransferCenter;
- (id)initWithFileURL:(id)arg1 transcoderUserInfo:(id)arg2 attributionInfo:(id)arg3 hideAttachment:(bool)arg4;
- (id)initWithStickerFileURL:(id)arg1 transferUserInfo:(id)arg2 attributionInfo:(id)arg3;
- (id)initWithTransferGUID:(id)arg1 imMessage:(id)arg2;
- (bool)isDownloadable;
- (bool)isDownloading;
- (bool)isFileDataReady;
- (bool)isFileURLFinalized;
- (bool)isRestoring;
- (bool)isSticker;
- (id)linkFileURL;
- (id)linkFileURLWithFilename:(id)arg1;
- (void)mediaObjectAdded;
- (void)mediaObjectRemoved;
- (id)notificationCenter;
- (void)setAttributionInfo:(id)arg1;
- (void)setIMMessage:(id)arg1;
- (void)setLinkFileURL:(id)arg1;
- (void)setTransferState:(long long)arg1;
- (id)stickerUserInfo;
- (id)syncController;
- (unsigned long long)totalBytes;
- (id)transcoderUserInfo;
- (long long)transferState;
- (void)transferUpdated:(id)arg1;
- (void)updateTransfer;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CUWACSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreUtils.framework/CUWACSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils (592.2)
 */

@interface CUWACSession : NSObject {
    bool  _activateCalled;
    NSDictionary * _configuration;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    EasyConfigDevice * _easyConfigDevice;
    struct { 
        double secondsToGetLinkUpOnDestination; 
        int wifiJoinDestinationAPError; 
        unsigned char destinationNetworkPSKInKeychain; 
        unsigned char hitJoiningDestinationAPTimeout; 
        int rssiOfDestinationAP; 
        unsigned int snrOfDestinationAP; 
        unsigned int channelOfDestinationAP; 
    }  _easyConfigPostConfigMetrics;
    int  _easyConfigPostConfigState;
    struct { 
        double startTime; 
        unsigned char userChangedFriendlyName; 
        unsigned char playPasswordSet; 
        unsigned char adminPasswordSet; 
        unsigned char destinationNetworkRecommendationUsed; 
        double secondsToGetLinkUpOnSWAP; 
        int wifiJoinSWAPError; 
        unsigned char hitJoiningTargetSWAPTimeout; 
        int rssiOfSWAP; 
        unsigned int snrOfSWAP; 
        unsigned int channelOfSWAP; 
    }  _easyConfigPreConfigMetrics;
    int  _easyConfigPreConfigState;
    int  _finishState;
    bool  _invalidateCalled;
    double  _joinSoftAPStartTime;
    int  _joinSoftAPState;
    NSString * _label;
    NSDictionary * _originalWiFiInfo;
    id /* block */  _progressHandler;
    id /* block */  _promptForSetupCodeHandler;
    int  _restoreOriginalWiFiState;
    double  _restoreStartTime;
    int  _saveOriginalWiFiState;
    struct LogCategory { int x1; int x2; char *x3; unsigned int x4; char *x5; char *x6; int x7; struct LogCategory {} *x8; struct LogOutput {} *x9; struct LogOutput {} *x10; unsigned long long x11; unsigned long long x12; unsigned int x13; unsigned int x14; char *x15; struct LogCategoryPrivate {} *x16; } * _ucat;
    CUWiFiDevice * _wacDevice;
}

@property (nonatomic, copy) NSDictionary *configuration;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) NSString *label;
@property (nonatomic, copy) id /* block */ progressHandler;
@property (nonatomic, copy) id /* block */ promptForSetupCodeHandler;
@property (nonatomic, retain) CUWiFiDevice *wacDevice;

- (void).cxx_destruct;
- (void)_cleanup;
- (void)_progress:(unsigned int)arg1 info:(id)arg2;
- (void)_run;
- (int)_runEasyConfigPostConfig;
- (int)_runEasyConfigPreConfig;
- (void)_runEasyConfigPreConfigStart;
- (void)_runEasyConfigProgress:(int)arg1 info:(id)arg2;
- (int)_runFinish;
- (void)_runFinishRestored:(int)arg1;
- (int)_runJoinSoftAP;
- (void)_runJoinSoftAPFinished:(int)arg1;
- (void)_runJoinSoftAPStart;
- (int)_runRestoreOriginalWiFi;
- (void)_runRestoreOriginalWiFiFinished:(int)arg1;
- (void)_runRestoreOriginalWiFiStart;
- (int)_runSaveOriginalWiFi;
- (void)activate;
- (id)configuration;
- (void)dealloc;
- (id)dispatchQueue;
- (id)init;
- (void)invalidate;
- (id)label;
- (id /* block */)progressHandler;
- (id /* block */)promptForSetupCodeHandler;
- (void)setConfiguration:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setProgressHandler:(id /* block */)arg1;
- (void)setPromptForSetupCodeHandler:(id /* block */)arg1;
- (void)setWacDevice:(id)arg1;
- (void)trySetupCode:(id)arg1;
- (id)wacDevice;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

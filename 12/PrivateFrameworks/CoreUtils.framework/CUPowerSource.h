<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CUPowerSource.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreUtils.framework/CUPowerSource.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils (592.2)
 */

@interface CUPowerSource : NSObject <NSSecureCoding> {
    NSArray * _LEDs;
    NSString * _accessoryCategory;
    NSString * _accessoryID;
    long long  _adapterErrorFlags;
    long long  _adapterFamilyCode;
    NSString * _adapterName;
    bool  _adapterSharedSource;
    long long  _adapterSourceID;
    bool  _aggregate;
    double  _chargeLevel;
    bool  _charging;
    unsigned int  _expectedComponents;
    long long  _familyCode;
    NSString * _groupID;
    NSDictionary * _ioKitAdapterDescription;
    NSDictionary * _ioKitDescription;
    double  _maxCapacity;
    NSString * _name;
    NSString * _partID;
    NSString * _partName;
    int  _powerState;
    bool  _present;
    long long  _productID;
    struct OpaqueIOPSPowerSourceID { } * _psID;
    int  _role;
    bool  _showChargingUI;
    long long  _sourceID;
    NSString * _state;
    CUPowerSource * _subCase;
    CUPowerSource * _subLeft;
    CUPowerSource * _subMain;
    CUPowerSource * _subRight;
    long long  _temperature;
    NSString * _transportType;
    NSString * _type;
    long long  _vendorID;
}

@property (nonatomic, copy) NSArray *LEDs;
@property (nonatomic, copy) NSString *accessoryCategory;
@property (nonatomic, copy) NSString *accessoryID;
@property (nonatomic) long long adapterErrorFlags;
@property (nonatomic) long long adapterFamilyCode;
@property (nonatomic, copy) NSString *adapterName;
@property (nonatomic) bool adapterSharedSource;
@property (nonatomic) long long adapterSourceID;
@property (nonatomic) bool aggregate;
@property (nonatomic) double chargeLevel;
@property (nonatomic) bool charging;
@property (nonatomic) unsigned int expectedComponents;
@property (nonatomic) long long familyCode;
@property (nonatomic, copy) NSString *groupID;
@property (nonatomic, copy) NSDictionary *ioKitAdapterDescription;
@property (nonatomic, copy) NSDictionary *ioKitDescription;
@property (nonatomic) double maxCapacity;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, copy) NSString *partID;
@property (nonatomic, copy) NSString *partName;
@property (nonatomic) int powerState;
@property (nonatomic) bool present;
@property (nonatomic) long long productID;
@property (nonatomic) int role;
@property (nonatomic) bool showChargingUI;
@property (nonatomic) long long sourceID;
@property (nonatomic, copy) NSString *state;
@property (nonatomic, retain) CUPowerSource *subCase;
@property (nonatomic, retain) CUPowerSource *subLeft;
@property (nonatomic, retain) CUPowerSource *subMain;
@property (nonatomic, retain) CUPowerSource *subRight;
@property (nonatomic) long long temperature;
@property (nonatomic, copy) NSString *transportType;
@property (nonatomic, copy) NSString *type;
@property (nonatomic) long long vendorID;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)LEDs;
- (void)_updateWithCoder:(id)arg1;
- (id)accessoryCategory;
- (id)accessoryID;
- (long long)adapterErrorFlags;
- (long long)adapterFamilyCode;
- (id)adapterName;
- (bool)adapterSharedSource;
- (long long)adapterSourceID;
- (bool)aggregate;
- (double)chargeLevel;
- (bool)charging;
- (void)dealloc;
- (id)description;
- (id)detailedDescription;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)expectedComponents;
- (long long)familyCode;
- (id)groupID;
- (void)handleSubComponentsUpdated;
- (void)handleSubComponentsUpdatedWithBaseSource:(id)arg1;
- (bool)hasAllComponents;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (void)invalidate;
- (id)ioKitAdapterDescription;
- (id)ioKitDescription;
- (bool)isAggregateComponent;
- (bool)isEqual:(id)arg1;
- (double)maxCapacity;
- (id)name;
- (id)partID;
- (id)partName;
- (int)powerState;
- (bool)present;
- (long long)productID;
- (int)publish;
- (int)role;
- (void)setAccessoryCategory:(id)arg1;
- (void)setAccessoryID:(id)arg1;
- (void)setAdapterErrorFlags:(long long)arg1;
- (void)setAdapterFamilyCode:(long long)arg1;
- (void)setAdapterName:(id)arg1;
- (void)setAdapterSharedSource:(bool)arg1;
- (void)setAdapterSourceID:(long long)arg1;
- (void)setAggregate:(bool)arg1;
- (void)setChargeLevel:(double)arg1;
- (void)setCharging:(bool)arg1;
- (void)setExpectedComponents:(unsigned int)arg1;
- (void)setFamilyCode:(long long)arg1;
- (void)setGroupID:(id)arg1;
- (void)setIoKitAdapterDescription:(id)arg1;
- (void)setIoKitDescription:(id)arg1;
- (void)setLEDs:(id)arg1;
- (void)setMaxCapacity:(double)arg1;
- (void)setName:(id)arg1;
- (void)setPartID:(id)arg1;
- (void)setPartName:(id)arg1;
- (void)setPowerState:(int)arg1;
- (void)setPresent:(bool)arg1;
- (void)setProductID:(long long)arg1;
- (void)setRole:(int)arg1;
- (void)setShowChargingUI:(bool)arg1;
- (void)setSourceID:(long long)arg1;
- (void)setState:(id)arg1;
- (void)setSubCase:(id)arg1;
- (void)setSubLeft:(id)arg1;
- (void)setSubMain:(id)arg1;
- (void)setSubRight:(id)arg1;
- (void)setTemperature:(long long)arg1;
- (void)setTransportType:(id)arg1;
- (void)setType:(id)arg1;
- (void)setVendorID:(long long)arg1;
- (bool)showChargingUI;
- (long long)sourceID;
- (id)state;
- (id)subCase;
- (id)subLeft;
- (id)subMain;
- (id)subRight;
- (long long)temperature;
- (id)transportType;
- (id)type;
- (unsigned int)updateWithPowerAdapterDetails:(id)arg1;
- (void)updateWithPowerSource:(id)arg1;
- (unsigned int)updateWithPowerSourceDescription:(id)arg1;
- (long long)vendorID;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>APAdvertiserBTLEManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AirPlayReceiver.framework/APAdvertiserBTLEManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AirPlayReceiver.framework/AirPlayReceiver (387.2)
 */

@interface APAdvertiserBTLEManager : NSObject <WPAirPlaySoloDelegate> {
    struct { 
        unsigned char flags; 
        unsigned char config; 
        unsigned char ipv4[4]; 
    }  _advertisementData;
    unsigned short  _btleMode;
    WPAirPlaySolo * _btleServer;
    void * _eventHandlerContext;
    int (* _eventHandlerFunc;
    NSObject<OS_dispatch_queue> * _eventQueue;
    NSObject<OS_dispatch_queue> * _internalQueue;
    bool  _isAdvertising;
    bool  _isEnabled;
    bool  _isP2PAllowed;
    bool  _isScanning;
    struct OpaqueAPAdvertiserBTLEManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; id x2; } * _managerRef;
    bool  _p2pSolo;
    bool  _p2pSoloQueried;
    NSObject<OS_dispatch_source> * _p2pSoloQueryTimer;
    struct __SCDynamicStore { } * _scStore;
    unsigned char  _seed;
    NSMutableDictionary * _soloDevices;
    NSObject<OS_dispatch_source> * _staleDevicesTimer;
    int  _touchSetupActiveNotifyToken;
}

@property (nonatomic, retain) WPAirPlaySolo *btleServer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) void*eventHandlerContext;
@property (nonatomic) int (*eventHandlerFunc;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *eventQueue;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *internalQueue;
@property (nonatomic) bool isAdvertising;
@property (nonatomic) bool isEnabled;
@property (nonatomic) bool isScanning;
@property (nonatomic) struct OpaqueAPAdvertiserBTLEManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; id x2; }*managerRef;
@property (nonatomic) struct __SCDynamicStore { }*scStore;
@property (nonatomic) unsigned char seed;
@property (nonatomic, retain) NSMutableDictionary *soloDevices;
@property (nonatomic) NSObject<OS_dispatch_source> *staleDevicesTimer;
@property (readonly) Class superclass;
@property (nonatomic) int touchSetupActiveNotifyToken;

- (void)airPlaySolo:(id)arg1 failedToStartAdvertisingWithError:(id)arg2;
- (void)airPlaySolo:(id)arg1 failedToStartScanningWithError:(id)arg2;
- (void)airPlaySolo:(id)arg1 foundDevice:(id)arg2 withData:(id)arg3;
- (void)airPlaySoloDidUpdateState:(id)arg1;
- (void)airPlaySoloStartedAdvertising:(id)arg1;
- (void)airPlaySoloStartedScanning:(id)arg1;
- (void)airPlaySoloStoppedAdvertising:(id)arg1;
- (void)airPlaySoloStoppedScanning:(id)arg1;
- (id)btleServer;
- (void)dealloc;
- (void)dispatchEvent:(unsigned int)arg1;
- (void*)eventHandlerContext;
- (int (*)eventHandlerFunc;
- (id)eventQueue;
- (int)getBTLEMode:(unsigned short*)arg1;
- (void)handleP2PSoloQueryTimerCancelled;
- (void)handleP2PSoloQueryTimerFired;
- (id)init;
- (id)internalQueue;
- (void)invalidate;
- (bool)isAdvertising;
- (bool)isEnabled;
- (bool)isScanning;
- (struct OpaqueAPAdvertiserBTLEManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; id x2; }*)managerRef;
- (struct __SCDynamicStore { }*)scStore;
- (unsigned char)seed;
- (int)setBTLEMode:(unsigned short)arg1;
- (void)setBtleServer:(id)arg1;
- (void)setEventHandlerContext:(void*)arg1;
- (void)setEventHandlerFunc:(int (*)arg1;
- (void)setIsAdvertising:(bool)arg1;
- (void)setIsEnabled:(bool)arg1;
- (int)setIsP2PAllowed:(bool)arg1;
- (void)setIsScanning:(bool)arg1;
- (void)setManagerRef:(struct OpaqueAPAdvertiserBTLEManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; id x2; }*)arg1;
- (int)setProperty:(id)arg1 withValue:(id)arg2;
- (void)setScStore:(struct __SCDynamicStore { }*)arg1;
- (void)setSeed:(unsigned char)arg1;
- (void)setSoloDevices:(id)arg1;
- (void)setStaleDevicesTimer:(id)arg1;
- (void)setTouchSetupActiveNotifyToken:(int)arg1;
- (int)showDebugWithDataBuffer:(struct { char *x1; unsigned long long x2; unsigned long long x3; char *x4; unsigned long long x5; unsigned long long x6; unsigned char x7; int x8; }*)arg1 verbose:(bool)arg2;
- (id)soloDevices;
- (id)staleDevicesTimer;
- (int)start;
- (void)startAdvertising;
- (int)startListeningForNetworkChanges;
- (int)startP2PSoloQueryTimer;
- (void)startScanning;
- (int)startStaleDeviceTimer;
- (int)stop;
- (void)stopAdvertising;
- (int)stopListeningForNetworkChanges;
- (void)stopScanning;
- (id)stringForBTLEMode:(unsigned short)arg1;
- (int)supportsSolo:(bool*)arg1;
- (int)touchSetupActiveNotifyToken;
- (int)update;
- (void)updateAdvertisementData;
- (int)updatePreferences;
- (int)updateSupportsSoloAndForceReadFromPrefs:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

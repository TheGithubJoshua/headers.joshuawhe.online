<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>JTVideoMediaUtils.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CameraEffectsKit.framework/JTVideoMediaUtils.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit (357.0.70)
 */

@interface JTVideoMediaUtils : NSObject {
    bool  _cacheWillDieDuringLoad;
    bool  _cachedAssetInformationValid;
    unsigned long long  _cachedAudioTrackCount;
    unsigned int  _cachedCodec4cc;
    int  _cachedDurationAt30fps;
    float  _cachedFrameRate;
    struct CGSize { 
        double width; 
        double height; 
    }  _cachedNaturalSize;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _cachedPreciseAssetDuration;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _cachedTransform;
    unsigned long long  _cachedVideoTrackCount;
}

@property (nonatomic) bool cacheWillDieDuringLoad;
@property (nonatomic) bool cachedAssetInformationValid;
@property (nonatomic) unsigned long long cachedAudioTrackCount;
@property (nonatomic) unsigned int cachedCodec4cc;
@property (nonatomic) int cachedDurationAt30fps;
@property (nonatomic) float cachedFrameRate;
@property (nonatomic) struct CGSize { double x1; double x2; } cachedNaturalSize;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } cachedPreciseAssetDuration;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } cachedTransform;
@property (nonatomic) unsigned long long cachedVideoTrackCount;

- (void)cacheTrackInformationWithAVAsset:(id)arg1;
- (bool)cacheWillDieDuringLoad;
- (bool)cachedAssetInformationValid;
- (unsigned long long)cachedAudioTrackCount;
- (unsigned int)cachedCodec4cc;
- (int)cachedDurationAt30fps;
- (float)cachedFrameRate;
- (struct CGSize { double x1; double x2; })cachedNaturalSize;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })cachedPreciseAssetDuration;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })cachedTransform;
- (unsigned long long)cachedVideoTrackCount;
- (int)durationAt30fpsWithAssetDuration:(double)arg1;
- (float)frameRate;
- (bool)hasAudibleCharacteristicWithIsMissing:(bool)arg1;
- (bool)hasAudioTracks;
- (bool)hasVideoTracks;
- (bool)isOriginalHEVC4k;
- (bool)isUnsupportedAudio;
- (struct CGSize { double x1; double x2; })naturalSizeWithIsMissing:(bool)arg1 asset:(id)arg2;
- (void)requestAVAssetAsyncWithAsset:(id)arg1 needsDerivativeMedia:(bool)arg2 frameRate:(float)arg3 completion:(id /* block */)arg4;
- (void)setCacheWillDieDuringLoad:(bool)arg1;
- (void)setCachedAssetInformationValid:(bool)arg1;
- (void)setCachedAudioTrackCount:(unsigned long long)arg1;
- (void)setCachedCodec4cc:(unsigned int)arg1;
- (void)setCachedDurationAt30fps:(int)arg1;
- (void)setCachedFrameRate:(float)arg1;
- (void)setCachedNaturalSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setCachedPreciseAssetDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setCachedTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setCachedVideoTrackCount:(unsigned long long)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

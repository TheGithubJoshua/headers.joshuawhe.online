<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VKPlatform.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VectorKit.framework/VKPlatform.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit (1360.35.12.18.4)
 */

@interface VKPlatform : NSObject {
    bool  _isMac;
    bool  _lowPerformanceDevice;
    unsigned long long  _memSize;
    int  _numCPUs;
    bool  _proceduralRoadAlpha;
    bool  _supports3DBuildingStrokes;
    bool  _supportsARMode;
    bool  _supportsBuildingStrokes;
    bool  _supportsCoastlineGlows;
    bool  _supportsPerFragmentLighting;
    bool  _useCheapTrafficShader;
}

@property (nonatomic, readonly) bool canMakeSharingThumbnails;
@property (nonatomic, readonly) bool isPad;
@property (nonatomic, readonly) bool lowPerformanceDevice;
@property (nonatomic, readonly) unsigned long long memorySize;
@property (nonatomic, readonly) bool proceduralRoadAlpha;
@property (nonatomic, readonly) unsigned char processingQueueWidth;
@property (nonatomic, readonly) bool roadsWithSimpleLineMeshesAvailable;
@property (nonatomic, readonly) double routeLineSimplificationEpsilon;
@property (nonatomic, readonly) bool shouldDrawWhenReady;
@property (nonatomic, readonly) bool shouldLayoutLabelsInParallel;
@property (nonatomic, readonly) bool shouldPregenerateLabelGlyphs;
@property (nonatomic, readonly) bool shouldStyleLabelsInParallel;
@property (nonatomic, readonly) bool supports3DBuildingStrokes;
@property (nonatomic, readonly) bool supports3DBuildings;
@property (nonatomic, readonly) bool supportsARMode;
@property (nonatomic, readonly) bool supportsBuildingShadows;
@property (nonatomic, readonly) bool supportsBuildingStrokes;
@property (nonatomic, readonly) bool supportsCoastlineGlows;
@property (nonatomic, readonly) bool supportsHiResBuildings;
@property (nonatomic, readonly) bool supportsHiResRTT;
@property (nonatomic, readonly) bool supportsPerFragmentLighting;
@property (nonatomic, readonly) unsigned char tileDecodeQueueWidth;
@property (nonatomic, readonly) unsigned int tilePrefetchNumberOfScreens;
@property (nonatomic, readonly) bool useCheapTrafficShader;

+ (id)sharedPlatform;

- (unsigned long long)_calculateMemSize;
- (void)_determineHardware;
- (bool)canMakeSharingThumbnails;
- (void)dealloc;
- (id)init;
- (bool)isPad;
- (bool)lowPerformanceDevice;
- (unsigned long long)memorySize;
- (bool)proceduralRoadAlpha;
- (unsigned char)processingQueueWidth;
- (bool)roadsWithSimpleLineMeshesAvailable;
- (double)routeLineSimplificationEpsilon;
- (bool)shouldDrawWhenReady;
- (bool)shouldLayoutLabelsInParallel;
- (bool)shouldPregenerateLabelGlyphs;
- (bool)shouldStyleLabelsInParallel;
- (bool)supports3DBuildingStrokes;
- (bool)supports3DBuildings;
- (bool)supportsARMode;
- (bool)supportsBuildingShadows;
- (bool)supportsBuildingStrokes;
- (bool)supportsCoastlineGlows;
- (bool)supportsHiResBuildings;
- (bool)supportsHiResRTT;
- (bool)supportsPerFragmentLighting;
- (unsigned char)tileDecodeQueueWidth;
- (unsigned long long)tileMaximumLimit:(unsigned long long)arg1;
- (unsigned int)tilePrefetchNumberOfScreens;
- (bool)useCheapTrafficShader;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VKPGenericShieldStyleInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VectorKit.framework/VKPGenericShieldStyleInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit (1360.35.12.18.4)
 */

@interface VKPGenericShieldStyleInfo : PBCodable <NSCopying> {
    unsigned int  _backgroundColor;
    unsigned int  _borderColor;
    struct { 
        unsigned int backgroundColor : 1; 
        unsigned int borderColor : 1; 
        unsigned int style : 1; 
        unsigned int textColor : 1; 
        unsigned int textDropShadowColor : 1; 
        unsigned int textDropShadowSize : 1; 
        unsigned int textStrokeColor : 1; 
        unsigned int textStrokeSize : 1; 
    }  _has;
    int  _style;
    unsigned int  _textColor;
    unsigned int  _textDropShadowColor;
    struct { 
        float *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _textDropShadowOffsets;
    float  _textDropShadowSize;
    unsigned int  _textStrokeColor;
    float  _textStrokeSize;
}

@property (nonatomic) unsigned int backgroundColor;
@property (nonatomic) unsigned int borderColor;
@property (nonatomic) bool hasBackgroundColor;
@property (nonatomic) bool hasBorderColor;
@property (nonatomic) bool hasStyle;
@property (nonatomic) bool hasTextColor;
@property (nonatomic) bool hasTextDropShadowColor;
@property (nonatomic) bool hasTextDropShadowSize;
@property (nonatomic) bool hasTextStrokeColor;
@property (nonatomic) bool hasTextStrokeSize;
@property (nonatomic) int style;
@property (nonatomic) unsigned int textColor;
@property (nonatomic) unsigned int textDropShadowColor;
@property (nonatomic, readonly) float*textDropShadowOffsets;
@property (nonatomic, readonly) unsigned long long textDropShadowOffsetsCount;
@property (nonatomic) float textDropShadowSize;
@property (nonatomic) unsigned int textStrokeColor;
@property (nonatomic) float textStrokeSize;

- (void)addTextDropShadowOffset:(float)arg1;
- (unsigned int)backgroundColor;
- (unsigned int)borderColor;
- (void)clearTextDropShadowOffsets;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasBackgroundColor;
- (bool)hasBorderColor;
- (bool)hasStyle;
- (bool)hasTextColor;
- (bool)hasTextDropShadowColor;
- (bool)hasTextDropShadowSize;
- (bool)hasTextStrokeColor;
- (bool)hasTextStrokeSize;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setBackgroundColor:(unsigned int)arg1;
- (void)setBorderColor:(unsigned int)arg1;
- (void)setHasBackgroundColor:(bool)arg1;
- (void)setHasBorderColor:(bool)arg1;
- (void)setHasStyle:(bool)arg1;
- (void)setHasTextColor:(bool)arg1;
- (void)setHasTextDropShadowColor:(bool)arg1;
- (void)setHasTextDropShadowSize:(bool)arg1;
- (void)setHasTextStrokeColor:(bool)arg1;
- (void)setHasTextStrokeSize:(bool)arg1;
- (void)setStyle:(int)arg1;
- (void)setTextColor:(unsigned int)arg1;
- (void)setTextDropShadowColor:(unsigned int)arg1;
- (void)setTextDropShadowOffsets:(float*)arg1 count:(unsigned long long)arg2;
- (void)setTextDropShadowSize:(float)arg1;
- (void)setTextStrokeColor:(unsigned int)arg1;
- (void)setTextStrokeSize:(float)arg1;
- (int)style;
- (unsigned int)textColor;
- (unsigned int)textDropShadowColor;
- (float)textDropShadowOffsetAtIndex:(unsigned long long)arg1;
- (float*)textDropShadowOffsets;
- (unsigned long long)textDropShadowOffsetsCount;
- (float)textDropShadowSize;
- (unsigned int)textStrokeColor;
- (float)textStrokeSize;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

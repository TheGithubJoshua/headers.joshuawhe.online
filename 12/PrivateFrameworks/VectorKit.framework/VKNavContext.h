<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VKNavContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VectorKit.framework/VKNavContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit (1360.35.12.18.4)
 */

@interface VKNavContext : NSObject {
    struct vector<AdditionalRouteInfo, std::__1::allocator<AdditionalRouteInfo> > { 
        struct AdditionalRouteInfo {} *__begin_; 
        struct AdditionalRouteInfo {} *__end_; 
        struct __compressed_pair<AdditionalRouteInfo *, std::__1::allocator<AdditionalRouteInfo> > { 
            struct AdditionalRouteInfo {} *__value_; 
        } __end_cap_; 
    }  _additionalRoutesToFrame;
    unsigned long long  _currentStepIndex;
    NSArray * _groupedManeuverCounts;
    unsigned long long  _navCameraHeadingOverride;
    unsigned long long  _navigationCameraHeadingOverride;
    NSHashTable * _observers;
    struct vector<GEOLocationCoordinate2D, std::__1::allocator<GEOLocationCoordinate2D> > { 
        struct { /* ? */ } *__begin_; 
        struct { /* ? */ } *__end_; 
        struct __compressed_pair<GEOLocationCoordinate2D *, std::__1::allocator<GEOLocationCoordinate2D> > { 
            struct { /* ? */ } *__value_; 
        } __end_cap_; 
    }  _pointsToFrame;
    GEOComposedRoute * _route;
    GEORouteMatch * _routeMatch;
}

@property (nonatomic) unsigned long long currentStepIndex;
@property (nonatomic, readonly) unsigned long long groupedManeuverCount;
@property (nonatomic, copy) NSArray *groupedManeuverCounts;
@property (nonatomic) unsigned long long navigationCameraHeadingOverride;
@property (nonatomic, readonly) GEOComposedRoute *route;
@property (nonatomic, retain) GEORouteMatch *routeMatch;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_notifyObserversStateChanged;
- (void)addObserver:(id)arg1;
- (void)addPointToFrame:(struct { double x1; double x2; })arg1;
- (void)addRouteToFrame:(id)arg1 divergenceCoord:(struct PolylineCoordinate { unsigned int x1; float x2; })arg2 convergenceCoord:(struct PolylineCoordinate { unsigned int x1; float x2; })arg3;
- (void)clearAdditionalRoutesToFrame;
- (void)clearPointsToFrame;
- (unsigned long long)currentStepIndex;
- (void)dealloc;
- (void)enumerateAdditionalRoutesToFrameUsingBlock:(id /* block */)arg1;
- (void)enumeratePointsToFrameUsingBlock:(id /* block */)arg1;
- (unsigned long long)groupedManeuverCount;
- (id)groupedManeuverCounts;
- (id)init;
- (unsigned long long)navigationCameraHeadingOverride;
- (void)removeObserver:(id)arg1;
- (id)route;
- (id)routeMatch;
- (void)setCurrentStepIndex:(unsigned long long)arg1;
- (void)setGroupedManeuverCounts:(id)arg1;
- (void)setNavigationCameraHeadingOverride:(unsigned long long)arg1;
- (void)setRouteMatch:(id)arg1;
- (void)updateWithNewRoute:(id)arg1 currentStepIndex:(unsigned long long)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VKShieldArtwork.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VectorKit.framework/VKShieldArtwork.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit (1360.35.12.18.4)
 */

@interface VKShieldArtwork : NSObject {
    struct CGImage { } * _backgroundImage;
    struct CGPoint { 
        double x; 
        double y; 
    }  _center;
    NSCache * _imageCache;
    struct mutex { 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } __m_; 
    }  _imageCacheLock;
    double  _lineHeight;
    double  _lineSpacing;
    id /* block */  _newContext;
    struct __CTFont { } * _nonDigitFont;
    struct CGColor { } * _nonDigitFontColor;
    struct CGColor { } * _overlayColor;
    bool  _resizable;
    struct { 
        double leftCapWidth; 
        double rightCapWidth; 
        double leftPadding; 
        double rightPadding; 
    }  _resizableInfo;
    double  _scale;
    struct CGColor { } * _shadowColor;
    struct CGSize { 
        double width; 
        double height; 
    }  _shadowOffset;
    double  _shadowRadius;
    NSDictionary * _stringAttributes;
    struct CGContext { } * _templateContext;
    double  _textBaseline;
    double  _textCenterOffsetX;
    NSMutableDictionary * _textSpecificArtworks;
}

@property (nonatomic, readonly) struct CGColor { }*overlayColor;
@property (nonatomic, readonly) double scale;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_initWithBackgroundImage:(struct CGImage { }*)arg1 contentScale:(double)arg2 resizableInfo:(struct { double x1; double x2; double x3; double x4; }*)arg3 font:(struct __CTFont { }*)arg4 nonDigitFont:(struct __CTFont { }*)arg5 textColor:(struct CGColor { }*)arg6 nonDigitTextColor:(struct CGColor { }*)arg7 textCenterOffsetX:(double)arg8 textBaseline:(double)arg9 textStrokeWidth:(double)arg10 textStrokeColor:(struct CGColor { }*)arg11 textShadowOffset:(struct CGSize { double x1; double x2; })arg12 textShadowRadius:(double)arg13 textShadowColor:(struct CGColor { }*)arg14 lineSpacing:(double)arg15 overlayColor:(struct CGColor { }*)arg16;
- (void)dealloc;
- (id)imageWithShieldText:(id)arg1;
- (id)imageWithShieldText:(id)arg1 allowMultiline:(bool)arg2;
- (id)imageWithShieldText:(id)arg1 allowMultiline:(bool)arg2 widthPaddingMultiple:(double)arg3;
- (id)imageWithShieldText:(id)arg1 widthPaddingMultiple:(double)arg2;
- (id)initWithBackgroundImage:(struct CGImage { }*)arg1 contentScale:(double)arg2 font:(struct __CTFont { }*)arg3 nonDigitFont:(struct __CTFont { }*)arg4 textColor:(struct CGColor { }*)arg5 nonDigitTextColor:(struct CGColor { }*)arg6 textCenterOffsetX:(double)arg7 textBaseline:(double)arg8 textStrokeWidth:(double)arg9 textStrokeColor:(struct CGColor { }*)arg10 textShadowOffset:(struct CGSize { double x1; double x2; })arg11 textShadowRadius:(double)arg12 textShadowColor:(struct CGColor { }*)arg13 overlayColor:(struct CGColor { }*)arg14;
- (id)initWithPackedVariant:(id)arg1 backgroundImage:(struct CGImage { }*)arg2 scale:(double)arg3 colors:(struct { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; }*)arg4 overlayColor:(struct { float x1; float x2; float x3; float x4; })arg5;
- (id)initWithResizableBackgroundImage:(struct CGImage { }*)arg1 resizableInfo:(struct { double x1; double x2; double x3; double x4; }*)arg2 contentScale:(double)arg3 font:(struct __CTFont { }*)arg4 nonDigitFont:(struct __CTFont { }*)arg5 textColor:(struct CGColor { }*)arg6 nonDigitTextColor:(struct CGColor { }*)arg7 textCenterOffsetX:(double)arg8 textBaseline:(double)arg9 textStrokeWidth:(double)arg10 textStrokeColor:(struct CGColor { }*)arg11 textShadowOffset:(struct CGSize { double x1; double x2; })arg12 textShadowRadius:(double)arg13 textShadowColor:(struct CGColor { }*)arg14 lineSpacing:(double)arg15 overlayColor:(struct CGColor { }*)arg16;
- (id)initWithScale:(double)arg1;
- (struct CGImage { }*)newImageWithShieldText:(id)arg1 allowMultiline:(bool)arg2 widthPaddingMultiple:(double)arg3 centerPoint:(struct CGPoint { double x1; double x2; }*)arg4;
- (struct CGColor { }*)overlayColor;
- (double)scale;
- (void)setTextSpecificArtwork:(id)arg1 forStrings:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

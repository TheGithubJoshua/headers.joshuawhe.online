<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VKTransitLineMarker.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VectorKit.framework/VKTransitLineMarker.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit (1360.35.12.18.4)
 */

@interface VKTransitLineMarker : NSObject <GEOTransitArtworkDataSource, GEOTransitShieldDataSource, MKTransitLineMarker> {
    GEOMapItemIdentifier * _identifier;
    NSString * _labelLocale;
    NSString * _labelText;
    struct { 
        struct { 
            float r; 
            float g; 
            float b; 
            float a; 
        } transitLineColor; 
    }  _shieldColor;
    NSString * _shieldLocale;
    NSString * _shieldText;
    long long  _shieldType;
    void * _transitLinkID;
}

@property (nonatomic, readonly) NSString *accessibilityText;
@property (nonatomic, readonly) long long artworkSourceType;
@property (nonatomic, readonly) long long artworkUseType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned long long featureID;
@property (nonatomic, readonly) bool hasRoutingIncidentBadge;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <GEOTransitIconDataSource> *iconDataSource;
@property (nonatomic, readonly) <GEOTransitShieldDataSource> *iconFallbackShieldDataSource;
@property (nonatomic, readonly) GEOMapItemIdentifier *identifier;
@property (nonatomic, readonly) NSString *labelLocale;
@property (nonatomic, readonly) NSString *labelText;
@property (nonatomic, readonly) struct { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; } shieldColor;
@property (nonatomic, readonly) NSString *shieldColorString;
@property (nonatomic, readonly) <GEOTransitShieldDataSource> *shieldDataSource;
@property (nonatomic, readonly) NSString *shieldLocale;
@property (nonatomic, readonly) NSString *shieldText;
@property (nonatomic, readonly) long long shieldType;
@property (readonly) Class superclass;
@property (nonatomic, readonly) void*transitLinkID;

// Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit

+ (id)markerWithFeature:(struct { struct { id x_1_1_1; char *x_1_1_2; unsigned long long x_1_1_3; unsigned long long x_1_1_4; unsigned long long x_1_1_5; unsigned long long x_1_1_6; unsigned int x_1_1_7; unsigned long long x_1_1_8; bool x_1_1_9; unsigned long long x_1_1_10; float x_1_1_11; unsigned long long x_1_1_12; id x_1_1_13; int x_1_1_14; } x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned int x6; float x7; unsigned int x8; unsigned int x9; unsigned int x10; }*)arg1 transitLink:(const struct { id x1; unsigned int x2; unsigned int x3; struct _NSRange { unsigned long long x_4_1_1; unsigned long long x_4_1_2; } x4; struct { /* ? */ } *x5; struct { /* ? */ } *x6; unsigned long long x7; unsigned long long x8; struct _NSRange { unsigned long long x_9_1_1; unsigned long long x_9_1_2; } x9; struct _NSRange { unsigned long long x_10_1_1; unsigned long long x_10_1_2; } x10; bool x11; struct _NSRange { unsigned long long x_12_1_1; unsigned long long x_12_1_2; } x12; struct _NSRange { unsigned long long x_13_1_1; unsigned long long x_13_1_2; } x13; struct _NSRange { unsigned long long x_14_1_1; unsigned long long x_14_1_2; } x14[2]; struct _NSRange { unsigned long long x_15_1_1; unsigned long long x_15_1_2; } x15[2]; }*)arg2;

- (void)dealloc;
- (id)description;
- (unsigned long long)featureID;
- (id)identifier;
- (id)initWithFeature:(struct { struct { id x_1_1_1; char *x_1_1_2; unsigned long long x_1_1_3; unsigned long long x_1_1_4; unsigned long long x_1_1_5; unsigned long long x_1_1_6; unsigned int x_1_1_7; unsigned long long x_1_1_8; bool x_1_1_9; unsigned long long x_1_1_10; float x_1_1_11; unsigned long long x_1_1_12; id x_1_1_13; int x_1_1_14; } x1; unsigned char x2; unsigned char x3; unsigned char x4; unsigned char x5; unsigned int x6; float x7; unsigned int x8; unsigned int x9; unsigned int x10; }*)arg1 transitLink:(const struct { id x1; unsigned int x2; unsigned int x3; struct _NSRange { unsigned long long x_4_1_1; unsigned long long x_4_1_2; } x4; struct { /* ? */ } *x5; struct { /* ? */ } *x6; unsigned long long x7; unsigned long long x8; struct _NSRange { unsigned long long x_9_1_1; unsigned long long x_9_1_2; } x9; struct _NSRange { unsigned long long x_10_1_1; unsigned long long x_10_1_2; } x10; bool x11; struct _NSRange { unsigned long long x_12_1_1; unsigned long long x_12_1_2; } x12; struct _NSRange { unsigned long long x_13_1_1; unsigned long long x_13_1_2; } x13; struct _NSRange { unsigned long long x_14_1_1; unsigned long long x_14_1_2; } x14[2]; struct _NSRange { unsigned long long x_15_1_1; unsigned long long x_15_1_2; } x15[2]; }*)arg2;
- (id)initWithIdentifier:(id)arg1;
- (id)labelLocale;
- (id)labelText;
- (struct { struct { float x_1_1_1; float x_1_1_2; float x_1_1_3; float x_1_1_4; } x1; })shieldColor;
- (id)shieldLocale;
- (id)shieldText;
- (long long)shieldType;
- (void*)transitLinkID;

// Image: /System/Library/Frameworks/MapKit.framework/MapKit

- (id)accessibilityText;
- (id)artwork;
- (long long)artworkSourceType;
- (long long)artworkUseType;
- (bool)hasRoutingIncidentBadge;
- (id)iconDataSource;
- (id)iconFallbackShieldDataSource;
- (id)mapItemIdentifier;
- (id)shieldColorString;
- (id)shieldDataSource;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

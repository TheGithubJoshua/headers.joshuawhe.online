<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCVoiceShortcutManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceShortcuts.framework/VCVoiceShortcutManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceShortcuts.framework/VoiceShortcuts ()
 */

@interface VCVoiceShortcutManager : NSObject <HMHomeManagerDelegate, VCSyncDataHandling> {
    NSObject<OS_dispatch_queue> * _dataMigratorQueue;
    VCCoreDataStore * _dataStore;
    HMHomeManager * _hmHomeManager;
    <VCVoiceShortcutSyncService> * _masterSyncService;
    unsigned long long  _persistenceType;
    NSMapTable * _syncServices;
    NSObject<OS_dispatch_queue> * _syncServicesIsolationQueue;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *dataMigratorQueue;
@property (nonatomic, readonly) VCCoreDataStore *dataStore;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HMHomeManager *hmHomeManager;
@property (nonatomic) <VCVoiceShortcutSyncService> *masterSyncService;
@property (nonatomic) bool needsToBeRehydratedFromMasterSyncService;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSMapTable *syncServices;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *syncServicesIsolationQueue;

+ (void)initialize;
+ (id)sharedManager;

- (void).cxx_destruct;
- (id)addExtraVocabForDemoIfAppropriate:(id)arg1;
- (void)addVoiceShortcut:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)applyChangeSet:(struct NSOrderedSet { Class x1; }*)arg1 fromSyncServiceWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)cleanUpAfterDeletedApps;
- (id)createMessageFromData:(id)arg1;
- (id)dataMigratorQueue;
- (id)dataStore;
- (id)dataStoreWithError:(id*)arg1;
- (void)dataWasUpdatedFromSyncServiceWithIdentifier:(id)arg1;
- (void)dataWasUpdatedInResponseToUserAction;
- (bool)deleteSyncedData:(id*)arg1;
- (void)deleteVoiceShortcutWithIdentifier:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)deregisterSyncServiceWithIdentifier:(id)arg1;
- (void)describeSyncStateIncludingDeleted:(bool)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)enumerateSyncServicesUsingBlock:(id /* block */)arg1;
- (void)getInactiveAppsWithAccessSpecifier:(id)arg1 completion:(id /* block */)arg2;
- (void)getNumberOfVoiceShortcutsWithAccessSpecifier:(id)arg1 completion:(id /* block */)arg2;
- (void)getShortcutSuggestionsForAllAppsWithLimit:(unsigned long long)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getShortcutSuggestionsForAppWithBundleIdentifier:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getUnsyncedChangesForSyncServiceWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)getVoiceShortcutWithIdentifier:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getVoiceShortcutWithPhrase:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getVoiceShortcutsForAppsWithBundleIdentifiers:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getVoiceShortcutsWithAccessSpecifier:(id)arg1 completion:(id /* block */)arg2;
- (void)handleAssistantPrefChangedNotification;
- (int)handledMessageType;
- (id)hmHomeManager;
- (id)initWithPersistenceType:(unsigned long long)arg1 error:(id*)arg2;
- (bool)isSyncServiceRegisteredWithIdentifier:(id)arg1;
- (void)markChangesAsSynced:(struct NSOrderedSet { Class x1; }*)arg1 withSyncServiceWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (id)masterSyncService;
- (bool)needsToBeRehydratedFromMasterSyncService;
- (bool)phraseHasHomeKitConflict:(id)arg1;
- (void)populateBlacklistStatusOnVoiceShortcut:(id)arg1 withAccessSpecifier:(id)arg2;
- (void)registerSyncService:(id)arg1 asMaster:(bool)arg2;
- (void)rehydrateFromMasterSyncServiceIfNeeded;
- (void)removeSyncStateForChanges:(id)arg1 withSyncServiceWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)removeSyncStateForSyncServiceWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)requestDataMigrationWithAccessSpecifier:(id)arg1 completion:(id /* block */)arg2;
- (void)requestSyncForServiceClassName:(id)arg1 forceReset:(bool)arg2 accessSpecifier:(id)arg3 completion:(id /* block */)arg4;
- (void)requestVoiceShortuctsSpotlightIndexUpdate;
- (id)sanitizePhrase:(id)arg1;
- (void)setHmHomeManager:(id)arg1;
- (void)setMasterSyncService:(id)arg1;
- (void)setNeedsToBeRehydratedFromMasterSyncService:(bool)arg1;
- (void)setShortcutSuggestions:(id)arg1 forAppWithBundleIdentifier:(id)arg2 accessSpecifier:(id)arg3;
- (id)syncServices;
- (id)syncServicesIsolationQueue;
- (void)syncVocabularyToServer;
- (void)updateVoiceShortcutWithIdentifier:(id)arg1 phrase:(id)arg2 workflow:(id)arg3 accessSpecifier:(id)arg4 completion:(id /* block */)arg5;
- (void)updateVoiceShortcutsSharedVocabularyWithAccessSpecifier:(id)arg1 completion:(id /* block */)arg2;
- (void)validateVoiceShortcutPhrases:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

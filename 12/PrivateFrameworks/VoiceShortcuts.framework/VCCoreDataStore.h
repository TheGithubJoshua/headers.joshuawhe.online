<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCCoreDataStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceShortcuts.framework/VCCoreDataStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceShortcuts.framework/VoiceShortcuts ()
 */

@interface VCCoreDataStore : NSObject {
    NSObject<OS_dispatch_queue> * _callbackQueue;
    NSPersistentContainer * _container;
    NSManagedObjectContext * _context;
    NSObject<OS_dispatch_queue> * _indexingQueue;
    NSManagedObjectContext * _suggestionsContext;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, retain) NSPersistentContainer *container;
@property (nonatomic, retain) NSManagedObjectContext *context;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *indexingQueue;
@property (nonatomic, retain) NSManagedObjectContext *suggestionsContext;

+ (bool)destroyPersistentStoreInDirectory:(id)arg1 error:(id*)arg2;
+ (void)initialize;
+ (bool)persistentStoreExistsInDirectory:(id)arg1;

- (void).cxx_destruct;
- (id)activeManagedObjectWithVoiceShortcutIdentifier:(id)arg1 accessSpecifier:(id)arg2 error:(id*)arg3;
- (id)activeManagedObjectsMatchingPredicate:(id)arg1 accessSpecifier:(id)arg2 error:(id*)arg3;
- (id)activeManagedObjectsMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2 accessSpecifier:(id)arg3 error:(id*)arg4;
- (void)addVoiceShortcut:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)applyChangeSet:(struct NSOrderedSet { Class x1; }*)arg1 fromSyncServiceWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (id)callbackQueue;
- (id)container;
- (id)context;
- (bool)deleteAllSyncedData:(id*)arg1;
- (void)deleteShortcutSuggestionsKeepingApps:(id)arg1;
- (void)deleteVoiceShortcutWithIdentifier:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)describeSyncStateIncludingDeleted:(bool)arg1 completion:(id /* block */)arg2;
- (id)existingSyncStateOfManagedObject:(id)arg1 forSyncServiceWithIdentifier:(id)arg2;
- (id)existingVoiceShortcutWithPhrase:(id)arg1 accessSpecifier:(id)arg2 error:(id*)arg3;
- (void)getAppsWithVoiceShortcutsWithAccessSpecifier:(id)arg1 completion:(id /* block */)arg2;
- (void)getNumberOfVoiceShortcutsWithAccessSpecifier:(id)arg1 completion:(id /* block */)arg2;
- (void)getShortcutSuggestionsForAllAppsWithLimit:(unsigned long long)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getShortcutSuggestionsForAppWithBundleIdentifier:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getUnsyncedChangesForSyncServiceWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)getVoiceShortcutWithIdentifier:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getVoiceShortcutWithPhrase:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getVoiceShortcutsForAppsWithBundleIdentifiers:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getVoiceShortcutsMatchingPredicate:(id)arg1 accessSpecifier:(id)arg2 completion:(id /* block */)arg3;
- (void)getVoiceShortcutsWithAccessSpecifier:(id)arg1 completion:(id /* block */)arg2;
- (id)indexingQueue;
- (id)initWithEphemeralStore:(id*)arg1;
- (id)initWithPersistenceType:(unsigned long long)arg1 databaseFileURL:(id)arg2 error:(id*)arg3;
- (id)initWithPersistentStoreInDirectory:(id)arg1 error:(id*)arg2;
- (bool)isPhraseUsable:(id)arg1 error:(id*)arg2;
- (bool)loadPersistentStoreWithDescription:(id)arg1 error:(id*)arg2;
- (id)managedObjectFromAddingVoiceShortcut:(id)arg1 accessSpecifier:(id)arg2 error:(id*)arg3;
- (id)managedObjectsMatchingPredicate:(id)arg1 error:(id*)arg2;
- (id)managedObjectsMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2 error:(id*)arg3;
- (id)markAsDeletedVoiceShortcutWithIdentifier:(id)arg1 accessSpecifier:(id)arg2 error:(id*)arg3;
- (void)markChangesAsSynced:(struct NSOrderedSet { Class x1; }*)arg1 withSyncServiceWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)markManagedObject:(id)arg1 asSynced:(bool)arg2 withSyncServiceWithIdentifier:(id)arg3 syncMetadata:(id)arg4;
- (bool)markManagedObjectAsDeleted:(id)arg1 error:(id*)arg2;
- (void)markManagedObjectAsUnsynced:(id)arg1;
- (void)removeSyncStateForChanges:(id)arg1 withSyncServiceWithIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)removeSyncStateForSyncServiceWithIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (bool)resetPersistentStore:(id*)arg1;
- (bool)saveContext:(id)arg1 orRollback:(id*)arg2;
- (bool)saveContextOrRollback:(id*)arg1;
- (void)setContainer:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setShortcutSuggestions:(id)arg1 forAppWithBundleIdentifier:(id)arg2 accessSpecifier:(id)arg3 completion:(id /* block */)arg4;
- (void)setSuggestionsContext:(id)arg1;
- (id)suggestionsContext;
- (id)syncStateOfManagedObject:(id)arg1 forSyncServiceWithIdentifier:(id)arg2;
- (void)updateVoiceShortcutWithIdentifier:(id)arg1 phrase:(id)arg2 workflow:(id)arg3 accessSpecifier:(id)arg4 completion:(id /* block */)arg5;
- (void)validatePhrases:(id)arg1 completion:(id /* block */)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

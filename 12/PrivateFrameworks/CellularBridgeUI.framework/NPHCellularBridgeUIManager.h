<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NPHCellularBridgeUIManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CellularBridgeUI.framework/NPHCellularBridgeUIManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CellularBridgeUI.framework/CellularBridgeUI (1)
 */

@interface NPHCellularBridgeUIManager : NSObject <NPHSIMChoiceViewControllerDelegate> {
    bool  LTEMayImpactService;
    CoreTelephonyClient * _coreTelephonyClient;
    id /* block */  _hostCompletionBlock;
    UIViewController * _hostViewController;
    long long  _outstandingPlanFlowsIdentified;
    NSMutableSet * _outstandingRemotePlanItemsRequestedForCSN;
    NSArray * _proxyPlanItems;
    CTXPCServiceSubscriptionInfo * _serviceSubscriptionInfo;
    NSMutableDictionary * _serviceSubscriptionInfoList;
    bool  _shouldOfferSignupCompletion;
}

@property (nonatomic, readonly) bool LTEMayImpactService;
@property (nonatomic, readonly) bool cellularPlanIsSetUp;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *serviceSubscriptionsInUse;
@property (nonatomic, readonly) NSArray *serviceSubscriptionsOfferingRemotePlan;
@property (nonatomic, readonly) NSArray *serviceSubscriptionsOfferingTrialPlan;
@property (nonatomic, readonly) NSArray *serviceSubscriptionsShouldShowAddNewRemotePlan;
@property (nonatomic, readonly) NSArray *serviceSubscriptionsToOfferUser;
@property (nonatomic, readonly) bool shouldOfferRemotePlan;
@property (nonatomic, readonly) bool shouldOfferSignupCompletion;
@property (nonatomic, readonly) bool shouldOfferTrialPlan;
@property (nonatomic, readonly) bool shouldShowAddNewRemotePlan;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSString *trialPlanType;

+ (bool)_isSubscriptionInUse:(id)arg1;
+ (void)_presentAirplaneModeOnAlertOnViewController:(id)arg1;
+ (void)_presentCellularRequiredModeAlertOnViewController:(id)arg1;
+ (void)_presentErrorTitle:(id)arg1 onViewController:(id)arg2 withActionTitle:(id)arg3 actionHandler:(id /* block */)arg4;
+ (void)_presentErrorTitled:(id)arg1 withMessage:(id)arg2 onViewController:(id)arg3;
+ (id)carrierName;
+ (id)carrierPhoneNumber;
+ (void)presentCellularError:(id)arg1 onViewController:(id)arg2;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (bool)LTEMayImpactService;
- (id)_activeDeviceCSNList;
- (void)_ctCellularPlanInfoDidChange:(id)arg1;
- (void)_ctCellularRemoteProvisioningDidBecomeAvailable:(id)arg1;
- (id)_currentDeviceCSN;
- (bool)_isCarrierSetupFlowUnsupportedForServiceSubscription:(id)arg1;
- (bool)_isPersistentError:(id)arg1;
- (bool)_isSetupBlockingError:(id)arg1;
- (void)_localPlanInfoDidChange:(id)arg1;
- (void)_prePromptForUserConsentIfNecessary:(id /* block */)arg1;
- (void)_prePromptUserForConsentTextType:(long long)arg1 relevantPlanItem:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_promptUserToPickSubscriptionContextOnViewController:(id)arg1;
- (id)_serviceSubscriptionInfoForSubscriptionContext:(id)arg1;
- (void)_setUpCellularPlanDirectWithContext:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_setUpCellularPlanWithActivationCodeOnViewController:(id)arg1 withContext:(id)arg2 withCompletion:(id /* block */)arg3 codelessActivationBlock:(id /* block */)arg4;
- (id)_trialPlanTypeForContext:(id)arg1;
- (void)_updateCellularPlansWithFetch:(bool)arg1 forCSN:(id)arg2;
- (void)_updateCoreTelephonyClientInfo;
- (void)_updateIsRemotePlanCapable;
- (void)_updateSIMStatusForAllSubscriptionContexts;
- (void)_updateSIMStatusForSubscriptionContext:(id)arg1 withStatus:(id)arg2;
- (void)_updateServiceSubscriptionInfo:(id)arg1;
- (void)_updateShouldShowAddNewRemotePlan;
- (void)_updateShouldWarnAboutLTEMayImpactService;
- (void)activeSubscriptionsDidChange;
- (bool)allCompanionSIMsMissing;
- (id)carrierNameForSubscription:(id)arg1;
- (bool)cellularPlanIsSetUp;
- (id)cellularPlans;
- (id)cellularUseError;
- (id)cellularUseErrors;
- (long long)consentRequiredRelevantCellularPlanItem:(id*)arg1;
- (id)displayNameForCellularPlan:(id)arg1;
- (void)finishRemoteProvisioning;
- (id)init;
- (bool)isCarrierSetupFlowUnsupported;
- (bool)isGeminiSetup;
- (id)selectedCellularPlan;
- (id)serviceSubscriptionsInUse;
- (id)serviceSubscriptionsOfferingRemotePlan;
- (id)serviceSubscriptionsOfferingTrialPlan;
- (id)serviceSubscriptionsShouldShowAddNewRemotePlan;
- (id)serviceSubscriptionsToOfferUser;
- (void)setUpCellularPlanOnViewController:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)setUpCellularPlanOnViewController:(id)arg1 withContext:(id)arg2 withCompletion:(id /* block */)arg3;
- (bool)shouldAllowUserToAddOrSetUpPlan;
- (bool)shouldOfferRemotePlan;
- (bool)shouldOfferSignupCompletion;
- (bool)shouldOfferTrialPlan;
- (bool)shouldShowAddNewRemotePlan;
- (void)simStatusDidChange:(id)arg1 status:(id)arg2;
- (void)startRemoteProvisioning;
- (void)subscriptionInfoDidChange;
- (id)trialPlanType;
- (void)updateCellularPlansWithFetch:(bool)arg1;
- (id)userConsentMessageForConsentType:(long long)arg1 relevantPlanItem:(id)arg2;
- (void)userTappedCancel;
- (void)userTappedSetUp:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BLPEModel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoEditSupport.framework/BLPEModel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoEditSupport.framework/PhotoEditSupport (1)
 */

@interface BLPEModel : NSObject {
    NSMutableDictionary * _AdaptiveGradientProcessingCache;
    NSMutableDictionary * _InkProcessingCache;
    NSMutableDictionary * _TiltShiftProcessingCache;
    CIFilter * _auraFilter;
    CIFilter * _blackAndWhiteFilter;
    CIFilter * _dramaFilter;
    CIFilter * _duotoneFilter;
    bool  _liveInteraction;
    CIFilter * _photoFiltersFilter;
    bool  _processingFX;
    BLPixelImageBuffer * _sourceImageBuffer;
    bool  _sourceImageDidChange;
    CIFilter * _vintageFilter;
    CIFilter * _warmAndCoolFilter;
}

@property (nonatomic, retain) CIFilter *auraFilter;
@property (nonatomic, retain) CIFilter *blackAndWhiteFilter;
@property (nonatomic, retain) CIFilter *dramaFilter;
@property (nonatomic, retain) CIFilter *duotoneFilter;
@property (nonatomic) bool liveInteraction;
@property (nonatomic, retain) CIFilter *photoFiltersFilter;
@property (nonatomic, retain) CIFilter *vintageFilter;
@property (nonatomic, retain) CIFilter *warmAndCoolFilter;

- (void).cxx_destruct;
- (id)auraFilter;
- (id)blackAndWhiteFilter;
- (bool)canRenderCIImageWithGroupIndex:(int)arg1 amount:(float)arg2 withOptionsObject:(id)arg3;
- (id)ciImageProcessFX_CI:(id)arg1 groupIndex:(int)arg2 amount:(float)arg3 withOptionsObject:(id)arg4 analysisDictionary:(id)arg5 destRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg6 padding:(double)arg7;
- (id)ciImageWithGroupIndex:(int)arg1 amount:(float)arg2 withOptionsObject:(id)arg3 analysisDictionary:(id)arg4 destRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 padding:(double)arg6;
- (id)ciImageWithInk:(id)arg1 cache:(id)arg2 groupIndex:(int)arg3 withOptionsObject:(id)arg4 gradientRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 padding:(double)arg6 liveInteraction:(bool)arg7;
- (void)dealloc;
- (id)dramaFilter;
- (id)duotoneFilter;
- (id)imageWithAdaptiveGradientV1:(id)arg1 cache:(id)arg2 groupIndex:(int)arg3 withCenter:(struct CGPoint { double x1; double x2; })arg4 withSize:(double)arg5 withAngle:(float)arg6 gradientRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg7 liveInteraction:(bool)arg8;
- (id)imageWithAdaptiveGradientV2:(id)arg1 cache:(id)arg2 groupIndex:(int)arg3 withCenter:(struct CGPoint { double x1; double x2; })arg4 withSize:(double)arg5 withAngle:(float)arg6 gradientRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg7 liveInteraction:(bool)arg8;
- (id)imageWithGroupIndex:(int)arg1 amount:(float)arg2 withOptionsObject:(id)arg3 analysisDictionary:(id)arg4 destRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 padding:(double)arg6;
- (id)imageWithInk:(id)arg1 cache:(id)arg2 groupIndex:(int)arg3 withOptionsObject:(id)arg4 gradientRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5 padding:(double)arg6 liveInteraction:(bool)arg7;
- (id)initWithSourceImage:(id)arg1;
- (id)initWithSourceImageBuffer:(id)arg1;
- (bool)liveInteraction;
- (bool)needAdaptiveGradientProcessingCacheForGroupIndex:(int)arg1 andAmount:(float)arg2;
- (bool)needInkProcessingCacheForGroupIndex:(int)arg1 andAmount:(float)arg2;
- (bool)needTiltShiftProcessingCacheForGroupIndex:(int)arg1 andAmount:(float)arg2;
- (id)photoFiltersFilter;
- (id)processFX_CI:(id)arg1 groupIndex:(int)arg2 amount:(float)arg3 withOptionsObject:(id)arg4 analysisDictionary:(id)arg5 destRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg6 padding:(double)arg7;
- (id)processFX_NonCI:(id)arg1 tiltShiftCache:(id)arg2 groupIndex:(int)arg3 amount:(float)arg4 withOptionsObject:(id)arg5 analysisDictionary:(id)arg6 destRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg7 padding:(double)arg8;
- (void)releaseCachedFilters;
- (void)setAuraFilter:(id)arg1;
- (void)setBlackAndWhiteFilter:(id)arg1;
- (void)setDramaFilter:(id)arg1;
- (void)setDuotoneFilter:(id)arg1;
- (void)setLiveInteraction:(bool)arg1;
- (void)setPhotoFiltersFilter:(id)arg1;
- (void)setVintageFilter:(id)arg1;
- (void)setWarmAndCoolFilter:(id)arg1;
- (id)thumbImageWithGroupIndex:(int)arg1 amount:(float)arg2 version:(int)arg3;
- (void)updateSourceImage:(id)arg1;
- (void)updateSourceImageBuffer:(id)arg1;
- (id)vintageFilter;
- (id)warmAndCoolFilter;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

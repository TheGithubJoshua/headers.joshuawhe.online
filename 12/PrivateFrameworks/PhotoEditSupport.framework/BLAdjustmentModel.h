<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BLAdjustmentModel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoEditSupport.framework/BLAdjustmentModel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoEditSupport.framework/PhotoEditSupport (1)
 */

@interface BLAdjustmentModel : NSObject {
    double  _autoBlackLevelAtShadowsMaxLevel;
    double  _autoShadowsMaxLevel;
    double  _blackLevel;
    double  _brightness;
    CIFilter * _colorBalanceFilter;
    CIFilter * _colorFilter;
    double  _contrast;
    CIFilter * _curvesFilter;
    CIFilter * _faceBalanceFilter;
    double  _faceBalanceWarmth;
    bool  _hasColor;
    bool  _hasExposure;
    bool  _hasFaceBalance;
    bool  _hasPentaCurve;
    bool  _hasSaturation;
    bool  _hasSkyAndGrass;
    bool  _hasUnderwaterBalance;
    bool  _hasWhiteBalance;
    long long  _highlightShadowAdjustVersion;
    CIFilter * _highlightsAndShadowsFilter;
    double  _histogramAverageLinearBlue;
    double  _histogramAverageLinearGreen;
    double  _histogramAverageLinearRed;
    double  _histogramBlackPoint;
    double  _histogramWhitePoint;
    bool  _isChainBuilt;
    bool  _reprocessFaceBalance;
    bool  _reprocessPentaCurve;
    bool  _reprocessSaturation;
    bool  _reprocessSkyAndGrass;
    bool  _reprocessUnderwaterBalance;
    bool  _reprocessWhiteBalance;
    double  _saturation;
    double  _saturationGrass;
    double  _saturationSky;
    CIFilter * _skyAndGrassFilter;
    CIFilter * _tempAndTintFilter;
    double  _underwaterBalanceDepthStrength;
    CIFilter * _underwaterBalanceFilter;
    double  _underwaterBalanceWaterBlend;
    bool  _useVibrancy;
    CIFilter * _vibranceFilter;
    struct { 
        long long type; 
        double x; 
        double y; 
        double ri; 
        double gq; 
        double b; 
    }  _whiteBalance;
    double  _whiteLevel;
}

@property (nonatomic, retain) CIFilter *colorBalanceFilter;
@property (nonatomic, retain) CIFilter *colorFilter;
@property (nonatomic, retain) CIFilter *curvesFilter;
@property (nonatomic, retain) CIFilter *faceBalanceFilter;
@property (nonatomic, retain) CIFilter *highlightsAndShadowsFilter;
@property (nonatomic, retain) CIFilter *skyAndGrassFilter;
@property (nonatomic, retain) CIFilter *tempAndTintFilter;
@property (nonatomic, retain) CIFilter *underwaterBalanceFilter;
@property (nonatomic, retain) CIFilter *vibranceFilter;

+ (id)exposureValuesForToneCurveData:(id)arg1 highlightsAndShadowsData:(id)arg2 andHistogramData:(id)arg3;
+ (struct CGPoint { double x1; double x2; })pointOnCurveFromPoint:(struct CGPoint { double x1; double x2; })arg1 withSlope:(double)arg2 andCurveData:(double*)arg3;
+ (id)rampImage;

- (void).cxx_destruct;
- (id)adjustedImageFromImage:(id)arg1;
- (void)buildChain;
- (id)colorBalanceFilter;
- (id)colorFilter;
- (id)curvesFilter;
- (id)faceBalanceFilter;
- (bool)hasAdjustments;
- (bool)hasColor;
- (bool)hasExposure;
- (id)highlightsAndShadowsFilter;
- (id)init;
- (id)initWithAdjustmentsDictionary:(id)arg1 andAnalysisDictionary:(id)arg2;
- (void)releaseChain;
- (void)reset;
- (void)setColorBalanceFilter:(id)arg1;
- (void)setColorFilter:(id)arg1;
- (void)setCurvesFilter:(id)arg1;
- (void)setFaceBalanceFilter:(id)arg1;
- (void)setHighlightsAndShadowsFilter:(id)arg1;
- (void)setSkyAndGrassFilter:(id)arg1;
- (void)setTempAndTintFilter:(id)arg1;
- (void)setUnderwaterBalanceFilter:(id)arg1;
- (void)setVibranceFilter:(id)arg1;
- (id)skyAndGrassFilter;
- (id)tempAndTintFilter;
- (id)underwaterBalanceFilter;
- (void)updateAdjustmentsDictionary:(id)arg1 andAnalysisDictionary:(id)arg2;
- (id)vibranceFilter;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

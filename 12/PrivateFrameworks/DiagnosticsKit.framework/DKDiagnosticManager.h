<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DKDiagnosticManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/DiagnosticsKit.framework/DKDiagnosticManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/DiagnosticsKit.framework/DiagnosticsKit (1)
 */

@interface DKDiagnosticManager : NSObject <DATestViewOperationDelegate, DKAssetResponder, DKBrightnessResponder, DKRequestViewControllerDelegate, DKVolumeHUDResponder> {
    <DKAssetResponder> * _assetResponder;
    <DKBrightnessResponder> * _brightnessResponder;
    struct NSString { Class x1; } * _bundleIdentifier;
    DATestViewOperation * _currentLegacyDiagnostic;
    NSObject<OS_dispatch_queue> * _diagnosticListQueue;
    NSObject<OS_dispatch_queue> * _diagnosticsManagerQueue;
    DKExtensionDiscovery * _discovery;
    DKDiagnosticRegistry * _registry;
    <DKViewControllerDelegate> * _viewControllerDelegate;
    <DKVolumeHUDResponder> * _volumeHUDResponder;
}

@property (nonatomic) <DKAssetResponder> *assetResponder;
@property (nonatomic) <DKBrightnessResponder> *brightnessResponder;
@property (nonatomic, retain) NSString *bundleIdentifier;
@property (nonatomic, retain) DATestViewOperation *currentLegacyDiagnostic;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *diagnosticListQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *diagnosticsManagerQueue;
@property (nonatomic, retain) DKExtensionDiscovery *discovery;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) DKDiagnosticRegistry *registry;
@property (readonly) Class superclass;
@property (nonatomic) <DKViewControllerDelegate> *viewControllerDelegate;
@property (nonatomic) <DKVolumeHUDResponder> *volumeHUDResponder;

- (void).cxx_destruct;
- (bool)_checkPrerequisitesForDiagnostic:(id)arg1 parameters:(id)arg2 error:(id*)arg3;
- (bool)_freeSpaceAvailable:(id)arg1;
- (bool)_isDeviceLocked;
- (id)adapterForIdentifier:(id)arg1;
- (id)assetResponder;
- (id)attributesForIdentifier:(id)arg1;
- (void)beginDiagnosticWithIdentifier:(id)arg1 parameters:(id)arg2 completion:(id /* block */)arg3;
- (id)brightnessResponder;
- (struct NSString { Class x1; }*)bundleIdentifier;
- (void)cancelAllDiagnostics;
- (id)currentLegacyDiagnostic;
- (id)diagnosticListQueue;
- (id)diagnosticsManagerQueue;
- (void)diagnosticsWithCompletion:(id /* block */)arg1;
- (id)discovery;
- (void)enableVolumeHUD:(bool)arg1;
- (void)getAsset:(id)arg1 completion:(id /* block */)arg2;
- (id)init;
- (id)initWithBundleIdentifier:(struct NSString { Class x1; }*)arg1;
- (void)operation:(id)arg1 dismissViewController:(id)arg2 completion:(id /* block */)arg3;
- (void)operation:(id)arg1 presentViewController:(id)arg2 completion:(id /* block */)arg3;
- (id)registry;
- (void)request:(id)arg1 dismissViewController:(id)arg2 completion:(id /* block */)arg3;
- (void)request:(id)arg1 presentViewController:(id)arg2 completion:(id /* block */)arg3;
- (void)setAssetResponder:(id)arg1;
- (void)setBrightnessResponder:(id)arg1;
- (void)setBundleIdentifier:(struct NSString { Class x1; }*)arg1;
- (void)setCurrentLegacyDiagnostic:(id)arg1;
- (void)setDiagnosticListQueue:(id)arg1;
- (void)setDiagnosticsManagerQueue:(id)arg1;
- (void)setDiscovery:(id)arg1;
- (void)setRegistry:(id)arg1;
- (void)setScreenToBrightness:(float)arg1 animate:(bool)arg2;
- (void)setViewControllerDelegate:(id)arg1;
- (void)setVolumeHUDResponder:(id)arg1;
- (id)viewControllerDelegate;
- (id)volumeHUDResponder;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

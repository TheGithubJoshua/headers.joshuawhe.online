<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DKExtensionRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/DiagnosticsKit.framework/DKExtensionRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/DiagnosticsKit.framework/DiagnosticsKit (1)
 */

@interface DKExtensionRequest : NSObject <DKExtensionHostAdapterDelegate, DKRequest> {
    bool  _canceled;
    bool  _completed;
    NSObject<OS_dispatch_semaphore> * _connectSemaphore;
    id  _context;
    <DKRequestDelegate> * _delegate;
    <DKExtensionAttributes> * _extensionAttributes;
    <NSCopying> * _extensionRequestIdentifier;
    <DKExtensionHostAdapter> * _hostAdapter;
    id  _hostServicesDelegate;
    bool  _interrupted;
    id  _payload;
    BKSProcessAssertion * _processAssertion;
    UIViewController * _remoteViewController;
    <NSCopying> * _requestIdentifier;
}

@property (getter=isCanceled, nonatomic) bool canceled;
@property (getter=isCompleted, nonatomic) bool completed;
@property (nonatomic, retain) NSObject<OS_dispatch_semaphore> *connectSemaphore;
@property (nonatomic, retain) id context;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <DKRequestDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <DKExtensionAttributes> *extensionAttributes;
@property (nonatomic, retain) <NSCopying> *extensionRequestIdentifier;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <DKExtensionHostAdapter> *hostAdapter;
@property (nonatomic) id hostServicesDelegate;
@property (getter=isInterrupted, nonatomic) bool interrupted;
@property (nonatomic, retain) id payload;
@property (nonatomic, retain) BKSProcessAssertion *processAssertion;
@property (nonatomic, retain) UIViewController *remoteViewController;
@property (nonatomic, readonly) <NSCopying> *requestIdentifier;
@property (readonly) Class superclass;

+ (id)requestWithExtensionAttributes:(id)arg1;

- (void).cxx_destruct;
- (void)_cancelTimedOutWithInfo:(id)arg1;
- (void)_dismissViewControllerWithCompletion:(id /* block */)arg1;
- (bool)_extensionContext:(id)arg1 hasEntitlement:(id)arg2;
- (void)_finishWithResult:(id)arg1 error:(id)arg2;
- (void)beginWithPayload:(id)arg1;
- (void)cancel;
- (void)cancelExtensionRequest;
- (void)cancelWithError:(id)arg1;
- (void)complete;
- (void)completeWithPayload:(id)arg1 completion:(id /* block */)arg2;
- (id)connectSemaphore;
- (id)connectWithError:(id*)arg1;
- (id)context;
- (id)delegate;
- (id)description;
- (id)extensionAttributes;
- (id)extensionRequestIdentifier;
- (id)hostAdapter;
- (id)hostServicesDelegate;
- (id)initWithExtensionAttributes:(id)arg1;
- (void)interrupt;
- (bool)isCanceled;
- (bool)isCompleted;
- (bool)isInterrupted;
- (id)payload;
- (id)processAssertion;
- (id)remoteViewController;
- (id)requestIdentifier;
- (void)setCanceled:(bool)arg1;
- (void)setCompleted:(bool)arg1;
- (void)setConnectSemaphore:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExtensionAttributes:(id)arg1;
- (void)setExtensionRequestIdentifier:(id)arg1;
- (void)setHostAdapter:(id)arg1;
- (void)setHostServicesDelegate:(id)arg1;
- (void)setInterrupted:(bool)arg1;
- (void)setPayload:(id)arg1;
- (void)setProcessAssertion:(id)arg1;
- (void)setRemoteViewController:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

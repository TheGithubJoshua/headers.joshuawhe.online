<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ADSegmentUpdateRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AdCore.framework/ADSegmentUpdateRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AdCore.framework/AdCore (1)
 */

@interface ADSegmentUpdateRequest : PBRequest <NSCopying> {
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _accountStates;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _accountTypes;
    NSString * _advertisingIdentifier;
    int  _advertisingIdentifierMonthResetCount;
    NSData * _dPID;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _deviceModes;
    struct { 
        unsigned int iTunesRefreshTime : 1; 
        unsigned int updateSentTime : 1; 
        unsigned int advertisingIdentifierMonthResetCount : 1; 
        unsigned int timezone : 1; 
        unsigned int isFirstPartyIdentifier : 1; 
    }  _has;
    NSData * _iAdID;
    double  _iTunesRefreshTime;
    bool  _isFirstPartyIdentifier;
    NSString * _localeIdentifier;
    NSString * _osVersionAndBuild;
    NSString * _segmentInfo;
    float  _timezone;
    double  _updateSentTime;
}

@property (nonatomic, readonly) int*accountStates;
@property (nonatomic, readonly) unsigned long long accountStatesCount;
@property (nonatomic, readonly) int*accountTypes;
@property (nonatomic, readonly) unsigned long long accountTypesCount;
@property (nonatomic, retain) NSString *advertisingIdentifier;
@property (nonatomic) int advertisingIdentifierMonthResetCount;
@property (nonatomic, retain) NSData *dPID;
@property (nonatomic, readonly) int*deviceModes;
@property (nonatomic, readonly) unsigned long long deviceModesCount;
@property (nonatomic, readonly) bool hasAdvertisingIdentifier;
@property (nonatomic) bool hasAdvertisingIdentifierMonthResetCount;
@property (nonatomic, readonly) bool hasDPID;
@property (nonatomic, readonly) bool hasIAdID;
@property (nonatomic) bool hasITunesRefreshTime;
@property (nonatomic) bool hasIsFirstPartyIdentifier;
@property (nonatomic, readonly) bool hasLocaleIdentifier;
@property (nonatomic, readonly) bool hasOsVersionAndBuild;
@property (nonatomic, readonly) bool hasSegmentInfo;
@property (nonatomic) bool hasTimezone;
@property (nonatomic) bool hasUpdateSentTime;
@property (nonatomic, retain) NSData *iAdID;
@property (nonatomic) double iTunesRefreshTime;
@property (nonatomic) bool isFirstPartyIdentifier;
@property (nonatomic, retain) NSString *localeIdentifier;
@property (nonatomic, retain) NSString *osVersionAndBuild;
@property (nonatomic, retain) NSString *segmentInfo;
@property (nonatomic) float timezone;
@property (nonatomic) double updateSentTime;

+ (id)options;

- (void).cxx_destruct;
- (int)StringAsAccountStates:(id)arg1;
- (int)StringAsAccountTypes:(id)arg1;
- (int)StringAsDeviceModes:(id)arg1;
- (int)accountStateAtIndex:(unsigned long long)arg1;
- (int*)accountStates;
- (id)accountStatesAsString:(int)arg1;
- (unsigned long long)accountStatesCount;
- (int)accountTypeAtIndex:(unsigned long long)arg1;
- (int*)accountTypes;
- (id)accountTypesAsString:(int)arg1;
- (unsigned long long)accountTypesCount;
- (void)addAccountState:(int)arg1;
- (void)addAccountType:(int)arg1;
- (void)addDeviceMode:(int)arg1;
- (id)advertisingIdentifier;
- (int)advertisingIdentifierMonthResetCount;
- (void)clearAccountStates;
- (void)clearAccountTypes;
- (void)clearDeviceModes;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dPID;
- (void)dealloc;
- (id)description;
- (int)deviceModeAtIndex:(unsigned long long)arg1;
- (int*)deviceModes;
- (id)deviceModesAsString:(int)arg1;
- (unsigned long long)deviceModesCount;
- (id)dictionaryRepresentation;
- (bool)hasAdvertisingIdentifier;
- (bool)hasAdvertisingIdentifierMonthResetCount;
- (bool)hasDPID;
- (bool)hasIAdID;
- (bool)hasITunesRefreshTime;
- (bool)hasIsFirstPartyIdentifier;
- (bool)hasLocaleIdentifier;
- (bool)hasOsVersionAndBuild;
- (bool)hasSegmentInfo;
- (bool)hasTimezone;
- (bool)hasUpdateSentTime;
- (unsigned long long)hash;
- (id)iAdID;
- (double)iTunesRefreshTime;
- (bool)isEqual:(id)arg1;
- (bool)isFirstPartyIdentifier;
- (id)localeIdentifier;
- (void)mergeFrom:(id)arg1;
- (id)osVersionAndBuild;
- (bool)readFrom:(id)arg1;
- (id)segmentInfo;
- (void)setAccountStates:(int*)arg1 count:(unsigned long long)arg2;
- (void)setAccountTypes:(int*)arg1 count:(unsigned long long)arg2;
- (void)setAdvertisingIdentifier:(id)arg1;
- (void)setAdvertisingIdentifierMonthResetCount:(int)arg1;
- (void)setDPID:(id)arg1;
- (void)setDeviceModes:(int*)arg1 count:(unsigned long long)arg2;
- (void)setHasAdvertisingIdentifierMonthResetCount:(bool)arg1;
- (void)setHasITunesRefreshTime:(bool)arg1;
- (void)setHasIsFirstPartyIdentifier:(bool)arg1;
- (void)setHasTimezone:(bool)arg1;
- (void)setHasUpdateSentTime:(bool)arg1;
- (void)setIAdID:(id)arg1;
- (void)setITunesRefreshTime:(double)arg1;
- (void)setIsFirstPartyIdentifier:(bool)arg1;
- (void)setLocaleIdentifier:(id)arg1;
- (void)setOsVersionAndBuild:(id)arg1;
- (void)setSegmentInfo:(id)arg1;
- (void)setTimezone:(float)arg1;
- (void)setUpdateSentTime:(double)arg1;
- (float)timezone;
- (double)updateSentTime;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMFHTTPClient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HMFoundation.framework/HMFHTTPClient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation (1)
 */

@interface HMFHTTPClient : HMFObject <HMFLogging, HMFNetMonitorDelegate, HMFTimerDelegate, NSURLSessionDelegate, _HMFNetServiceMonitorDelegate> {
    bool  _active;
    bool  _allowAnonymousConnection;
    NSURL * _baseURL;
    NSObject<OS_dispatch_queue> * _clientQueue;
    <HMFHTTPClientDelegate> * _delegate;
    HMFExponentialBackoffTimer * _delegatedPingTimer;
    HMFUnfairLock * _lock;
    HMFNetService * _netService;
    _HMFNetServiceMonitor * _netServiceMonitor;
    unsigned long long  _options;
    bool  _pinging;
    HMFNetMonitor * _reachabilityMonitor;
    NSOperationQueue * _reachabilityProbeQueue;
    bool  _reachable;
    NSURLSession * _session;
}

@property (getter=isActive, nonatomic) bool active;
@property (nonatomic) bool allowAnonymousConnection;
@property (nonatomic, readonly, copy) NSURL *baseURL;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly, copy) NSString *debugDescription;
@property <HMFHTTPClientDelegate> *delegate;
@property (nonatomic, retain) HMFExponentialBackoffTimer *delegatedPingTimer;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) HMFNetService *netService;
@property (nonatomic, readonly) _HMFNetServiceMonitor *netServiceMonitor;
@property (nonatomic, readonly) unsigned long long options;
@property (getter=isPinging, nonatomic) bool pinging;
@property (nonatomic, readonly) HMFNetMonitor *reachabilityMonitor;
@property (nonatomic, readonly) NSOperationQueue *reachabilityProbeQueue;
@property (getter=isReachable, nonatomic) bool reachable;
@property (nonatomic, readonly) NSURLSession *session;
@property (readonly) Class superclass;

+ (id)baseURLWithScheme:(id)arg1 hostAddress:(id)arg2 port:(unsigned long long)arg3;
+ (id)logCategory;

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)__initializeWithOptions:(unsigned long long)arg1;
- (bool)allowAnonymousConnection;
- (id)attributeDescriptions;
- (id)baseURL;
- (void)cancelPendingRequests;
- (id)clientQueue;
- (void)dealloc;
- (id)delegate;
- (id)delegatedPingTimer;
- (id)init;
- (id)initWithBaseURL:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithNetService:(id)arg1 options:(unsigned long long)arg2;
- (bool)isActive;
- (bool)isPinging;
- (bool)isReachable;
- (bool)isValid;
- (id)logIdentifier;
- (void)monitor:(id)arg1 didUpdateNetService:(id)arg2;
- (void)monitor:(id)arg1 didUpdateReachability:(bool)arg2;
- (id)netService;
- (id)netServiceMonitor;
- (void)networkMonitorIsReachable:(id)arg1;
- (void)networkMonitorIsUnreachable:(id)arg1;
- (unsigned long long)options;
- (id)reachabilityMonitor;
- (id)reachabilityProbeQueue;
- (bool)requestClientReachabilityPingWithRetry:(bool)arg1;
- (void)resolveWithCompletionHandler:(id /* block */)arg1;
- (void)sendRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)session;
- (void)setActive:(bool)arg1;
- (void)setAllowAnonymousConnection:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegatedPingTimer:(id)arg1;
- (void)setNetService:(id)arg1;
- (void)setPinging:(bool)arg1;
- (void)setReachable:(bool)arg1;
- (void)startDelegatedPingTimer;
- (void)startReachabilityProbe;
- (void)stopDelegatedPingTimer;
- (void)timerDidFire:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SGDCloudKitSync.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreSuggestionsInternals.framework/SGDCloudKitSync.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals (680.125)
 */

@interface SGDCloudKitSync : NSObject <APSConnectionDelegate, SGJournalCalendarObserver> {
    SGFuture * _accountInfoFuture;
    APSConnection * _apsConnection;
    id /* block */  _callback;
    CKContainer * _container;
    NSError * _createZoneError;
    CKDatabase * _database;
    id /* block */  _deleteAllSyncedItemsCallback;
    NSError * _deleteZoneError;
    bool  _disabledBecauseOutOfDateSoftware;
    struct ct_green_tea_logger_s { } * _greenTeaLogger;
    NSOperation * _inProgressCreateZoneOperation;
    NSOperation * _inProgressDeleteZoneOperation;
    NSOperation * _inProgressFetchNewEntitiesOperation;
    NSOperation * _inProgressProcureSaltOperation;
    bool  _noZone;
    NSOperationQueue * _opQueue;
    NSMutableArray * _operationsToAddToOpQueue;
    bool  _pendingProcessStateChanges;
    _SGDCloudKitSyncPersistedState * _persistedState;
    bool  _processingStateChanges;
    NSError * _procureSaltError;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _requestedFetchNewEntitiesWhileRequestAlreadyInFlight;
    long long  _suspendCount;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_addDependency:(id)arg1 toTrain:(id)arg2;
- (id)_ckErrorForId:(id)arg1 inError:(id)arg2;
- (void)_coupleOperationTrainWithStart:(id)arg1 end:(id)arg2;
- (void)accountChanged:(id)arg1;
- (id)accountInfo;
- (id)addCreateZoneAttemptOperationWithRetries:(unsigned long long)arg1;
- (id)addCreateZoneOperation;
- (id)addDeleteAndRecreateZoneOperation;
- (id)addDeleteZoneAttemptOperationWithRetries:(unsigned long long)arg1;
- (id)addDeleteZoneOperation;
- (void)addEntity:(id)arg1;
- (void)addEvent:(id)arg1;
- (void)addEvents:(id)arg1;
- (id)addFetchNewEntitiesAttemptOperationWithRetries:(unsigned long long)arg1;
- (id)addFetchNewEntitiesOperation;
- (id)addManateeSanityCheckOperation;
- (id)addOperation;
- (id)addOperation:(id)arg1;
- (id)addProcureSaltAttemptOperationWithRetries:(unsigned long long)arg1;
- (id)addProcureSaltOperation;
- (id)addWriteOperationForRecordGetter:(id /* block */)arg1 deleteGetter:(id /* block */)arg2 withRetries:(unsigned long long)arg3;
- (id)addWriteOperationForRecordGetter:(id /* block */)arg1 deleteGetter:(id /* block */)arg2 withRetries:(unsigned long long)arg3 isFirstTry:(bool)arg4;
- (id)apsEnvironmentStringForContainer:(id)arg1;
- (void)calendarDeleted;
- (void)cancelEvent:(id)arg1;
- (void)cancelEvents:(id)arg1;
- (id)ckErrorForRecordId:(id)arg1 inError:(id)arg2;
- (id)ckErrorForRecordZoneId:(id)arg1 inError:(id)arg2;
- (void)clearErrors;
- (void)confirmEventFromOtherDevice:(id)arg1;
- (void)confirmEventFromThisDevice:(id)arg1;
- (void)connection:(id)arg1 didChangeConnectedStatus:(bool)arg2;
- (void)connection:(id)arg1 didFailToSendOutgoingMessage:(id)arg2 error:(id)arg3;
- (void)connection:(id)arg1 didReceiveIncomingMessage:(id)arg2;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)connection:(id)arg1 didReceiveToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4;
- (void)connection:(id)arg1 didSendOutgoingMessage:(id)arg2;
- (void)connectionDidReconnect:(id)arg1;
- (void)createSubscriptionWithRetries:(unsigned long long)arg1;
- (void)dealloc;
- (void)deleteGroupId:(id)arg1;
- (void)deleteStorageEvent:(id)arg1;
- (void)deleteZoneWithCompletion:(id /* block */)arg1;
- (void)disable;
- (void)failSalt;
- (id)getUnderlyingError:(id)arg1;
- (id)init;
- (void)invokeNewEntitiesCallbackWithEntity:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)orphanEvent:(id)arg1;
- (bool)pauseIfNeededAndReturnRetryEligibilityForError:(id)arg1;
- (void)processStateChanges;
- (id)recordZoneId;
- (void)rejectEventFromOtherDevice:(id)arg1;
- (void)rejectEventFromThisDevice:(id)arg1;
- (void)resume;
- (void)setDatabase:(id)arg1;
- (void)setDeleteAllSyncedItemsCallback:(id /* block */)arg1;
- (void)setNewEntitiesCallback:(id /* block */)arg1;
- (bool)shouldRecreateZoneForRecordError:(id)arg1 operationError:(id)arg2;
- (id)shouldRemoveEventsFromEventKit;
- (void)suspend;
- (void)suspendAndResumeAfter:(double)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXGadgetDataSourceManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXGadgetDataSourceManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXGadgetDataSourceManager : PXSectionedDataSourceManager <PXGadgetDelegate, PXGadgetProviderDelegate> {
    NSArray * _cachedProviders;
    bool  _hasLoadedPriorities;
    bool  _loadingInitialGadgets;
    NSObject<OS_dispatch_queue> * _lookupQueue;
    NSMutableArray * _lookupQueue_loadedProviders;
    bool  _needsToLoadAllProviders;
    <PXGadgetDelegate> * _nextGadgetResponder;
}

@property (nonatomic, copy) NSArray *cachedProviders;
@property (nonatomic, readonly) PXGadgetDataSource *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSObject<OS_os_log> *gadgetDataSourceManagerLog;
@property (nonatomic, readonly) id /* block */ gadgetProviderSortComparator;
@property (nonatomic, readonly) NSArray *gadgetProviders;
@property (nonatomic, readonly) id /* block */ gadgetSortComparator;
@property (nonatomic) bool hasLoadedPriorities;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool loadingInitialGadgets;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *lookupQueue;
@property (nonatomic, retain) NSMutableArray *lookupQueue_loadedProviders;
@property (nonatomic) bool needsToLoadAllProviders;
@property (nonatomic) <PXGadgetDelegate> *nextGadgetResponder;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_dataSourceSnapshot;
- (void)_loadDataFromProviders:(id)arg1 withGadgetMinimum:(unsigned long long)arg2;
- (void)_loadPriorityForProviders:(id)arg1;
- (id)_sortedGadgets;
- (void)_updateDataSource;
- (id)allGadgets;
- (void)beginLoadingInitialGadgets:(unsigned long long)arg1;
- (id)cachedProviders;
- (id)createInitialDataSource;
- (void)didLoadDataForPriorities;
- (void)dismissGadgetViewController:(struct NSObject { Class x1; }*)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)filteredUndisplayedGadgets:(id)arg1;
- (void)gadget:(id)arg1 animateChanges:(id /* block */)arg2;
- (void)gadget:(id)arg1 didChange:(unsigned long long)arg2;
- (bool)gadget:(id)arg1 transitionToViewController:(struct NSObject { Class x1; }*)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (id)gadgetDataSourceManagerLog;
- (id /* block */)gadgetProviderSortComparator;
- (id)gadgetProviders;
- (id /* block */)gadgetSortComparator;
- (struct NSObject { Class x1; }*)gadgetViewControllerHostingGadget:(id)arg1;
- (id)gridPresentation;
- (bool)hasLoadedPriorities;
- (id)init;
- (id)initWithQueueName:(id)arg1;
- (void)invalidateGadgets;
- (void)loadRemainingGadgetsIfNeeded;
- (void)loadRemainingGadgetsIfNeededWithGenerateGadgetFinishedBlock:(id /* block */)arg1;
- (bool)loadingInitialGadgets;
- (id)lookupQueue;
- (id)lookupQueue_loadedProviders;
- (bool)needsToLoadAllProviders;
- (id)nextGadgetResponder;
- (id)noContentGadget;
- (id)oneUpPresentation;
- (void)presentGadgetViewController:(struct NSObject { Class x1; }*)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)removeCachedProviders;
- (bool)scrollGadgetToVisible:(id)arg1 animated:(bool)arg2;
- (void)setCachedProviders:(id)arg1;
- (void)setHasLoadedPriorities:(bool)arg1;
- (void)setLoadingInitialGadgets:(bool)arg1;
- (void)setLookupQueue:(id)arg1;
- (void)setLookupQueue_loadedProviders:(id)arg1;
- (void)setNeedsToLoadAllProviders:(bool)arg1;
- (void)setNextGadgetResponder:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

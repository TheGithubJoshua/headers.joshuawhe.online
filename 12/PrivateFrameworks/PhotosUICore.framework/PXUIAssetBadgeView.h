<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXUIAssetBadgeView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXUIAssetBadgeView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXUIAssetBadgeView : UIView <PXUIExtensionBadgeViewDelegate> {
    PXUIExtensionBadgeView * __topLeftExtensionBadgeView;
    struct PXAssetBadgeInfo { 
        unsigned long long badges; 
        double duration; 
        long long count; 
    }  _badgeInfo;
    UILabel * _bottomLabel;
    _PXUIAssetBadgeImageView * _bottomLeadingImageView;
    _PXUIAssetBadgeImageView * _bottomTrailingImageView;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    <PXUIAssetBadgeViewDelegate> * _delegate;
    struct { 
        bool userDidSelectBadges; 
    }  _delegateRespondsTo;
    bool  _isPerformingUpdate;
    struct { 
        bool topLeftElements; 
        bool bottomLeadingImage; 
        bool bottomTrailingImage; 
        bool bottomLabel; 
        bool background; 
        bool contentSize; 
    }  _needsUpdateFlags;
    bool  _overContent;
    long long  _style;
    _PXUIAssetBadgeTopLeftGroup * _topLeftPrimaryGroup;
    _PXUIAssetBadgeTopLeftGroup * _topLeftSecondaryGroup;
}

@property (setter=_setTopLeftExtensionBadgeView:, nonatomic, retain) PXUIExtensionBadgeView *_topLeftExtensionBadgeView;
@property (nonatomic) struct PXAssetBadgeInfo { unsigned long long x1; double x2; long long x3; } badgeInfo;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PXUIAssetBadgeViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isOverContent, nonatomic) bool overContent;
@property (nonatomic) long long style;
@property (readonly) Class superclass;

+ (double)preferredHeightForStyle:(long long)arg1;
+ (void)preloadResourcesForStyle:(long long)arg1;

- (void).cxx_destruct;
- (void)_handleButton:(id)arg1;
- (void)_installBadgeViewForType:(long long)arg1;
- (void)_invalidate;
- (void)_invalidateBackground;
- (void)_invalidateBottomLabel;
- (void)_invalidateBottomLeadingImage;
- (void)_invalidateBottomTrailingImage;
- (void)_invalidateContentSize;
- (void)_invalidateTopLeftElements;
- (void)_layoutBottomCornersImages;
- (void)_layoutBottomLabel;
- (void)_layoutTopLeftGroup:(id)arg1;
- (bool)_needsUpdate;
- (void)_removeViewsFromGroup:(id)arg1;
- (void)_setBackgroundImage:(id)arg1;
- (void)_setNeedsUpdate;
- (void)_setTopLeftExtensionBadgeView:(id)arg1;
- (id)_topLeftExtensionBadgeView;
- (void)_updateBackgroundIfNeeded;
- (void)_updateBottomLabelIfNeeded;
- (void)_updateBottomLeadingImageIfNeeded;
- (void)_updateBottomTrailingImageIfNeeded;
- (void)_updateContentSizeIfNeeded;
- (void)_updateIfNeeded;
- (void)_updateTopLeftElementsIfNeeded;
- (id)_updateTopLeftGroup:(id)arg1 withBadgeInfo:(struct PXAssetBadgeInfo { unsigned long long x1; double x2; long long x3; })arg2 origin:(struct CGPoint { double x1; double x2; })arg3;
- (struct PXAssetBadgeInfo { unsigned long long x1; double x2; long long x3; })badgeInfo;
- (id)delegate;
- (void)extensionBadgeView:(id)arg1 userDidSelectBadge:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isOverContent;
- (void)layoutSubviews;
- (void)performChanges:(id /* block */)arg1 animated:(bool)arg2;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)prepareForReuse;
- (void)setBadgeInfo:(struct PXAssetBadgeInfo { unsigned long long x1; double x2; long long x3; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setOverContent:(bool)arg1;
- (void)setStyle:(long long)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (long long)style;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

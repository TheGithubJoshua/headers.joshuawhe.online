<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXFaceTileImageRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXFaceTileImageRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXFaceTileImageRequest : NSObject {
    PHAsset * _assetContainingFace;
    NSString * _cacheKey;
    bool  _canceled;
    PHFace * _face;
    bool  _fullResMissing;
    int  _imageManagerRequestID;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastDeliveredSize;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _normalizedActualFaceRect;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _normalizedFaceCropRect;
    PHObject * _originalRequestObject;
    struct PXFaceTileImageParams { 
        struct CGSize { 
            double width; 
            double height; 
        } targetSize; 
        unsigned long long cropFactor; 
        unsigned long long style; 
        bool cropBounded; 
        bool acceptsVeryLowQuality; 
        bool wantsNonVisibleFaceCompletion; 
    }  _params;
    NSDate * _ppt_requestStartDate;
    int  _requestID;
}

@property (nonatomic, retain) PHAsset *assetContainingFace;
@property (nonatomic, readonly) NSString *cacheKey;
@property (getter=isCanceled) bool canceled;
@property (nonatomic, retain) PHFace *face;
@property (getter=isFullResMissing) bool fullResMissing;
@property int imageManagerRequestID;
@property (nonatomic) struct CGSize { double x1; double x2; } lastDeliveredSize;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedActualFaceRect;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedFaceCropRect;
@property (nonatomic, retain) PHObject *originalRequestObject;
@property (nonatomic, readonly) struct PXFaceTileImageParams { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; unsigned long long x2; unsigned long long x3; bool x4; bool x5; bool x6; } params;
@property (setter=ppt_setRequestStartDate:, nonatomic, copy) NSDate *ppt_requestStartDate;
@property (nonatomic, readonly) int requestID;

- (void).cxx_destruct;
- (id)assetContainingFace;
- (id)cacheKey;
- (void)cancel;
- (id)face;
- (int)imageManagerRequestID;
- (id)initWithFace:(id)arg1 cacheKey:(id)arg2 params:(struct PXFaceTileImageParams { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; unsigned long long x2; unsigned long long x3; bool x4; bool x5; bool x6; })arg3;
- (bool)isCanceled;
- (bool)isFullResMissing;
- (struct CGSize { double x1; double x2; })lastDeliveredSize;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedActualFaceRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedFaceCropRect;
- (id)originalRequestObject;
- (struct PXFaceTileImageParams { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; unsigned long long x2; unsigned long long x3; bool x4; bool x5; bool x6; })params;
- (void)ppt_reportMeasurementsForImageQuality:(long long)arg1;
- (id)ppt_requestStartDate;
- (void)ppt_setRequestStartDate:(id)arg1;
- (int)requestID;
- (void)setAssetContainingFace:(id)arg1;
- (void)setCanceled:(bool)arg1;
- (void)setFace:(id)arg1;
- (void)setFullResMissing:(bool)arg1;
- (void)setImageManagerRequestID:(int)arg1;
- (void)setLastDeliveredSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setNormalizedActualFaceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setNormalizedFaceCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setOriginalRequestObject:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

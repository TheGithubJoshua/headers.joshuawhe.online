<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXMemoriesSpec.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXMemoriesSpec.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXMemoriesSpec : PXFeatureSpec {
    double  __displayScale;
    unsigned long long  __style;
    bool  _alwaysShowFavoritesBadge;
    struct UIColor { Class x1; } * _borderColor;
    struct CGPoint { 
        double x; 
        double y; 
    }  _borderOffset;
    double  _borderWidth;
    double  _distanceBetweenHeaderBaselineAndImageTop;
    double  _favoriteBadgeHeight;
    double  _favoriteBadgeInset;
    double  _feedAdditionalContentThreshold;
    struct UIColor { Class x1; } * _feedBackgroundColor;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _feedEntryEdgeInsets;
    double  _feedEntryHeaderHeight;
    double  _feedHeroImageAspectRatio;
    long long  _feedHeroPosition;
    double  _feedInteritemSpacing;
    unsigned long long  _feedMemoriesPerRow;
    long long  _feedScrollDirection;
    bool  _feedShouldAllowHeaders;
    double  _firstFeedEntryHeaderHeight;
    struct CGPoint { 
        double x; 
        double y; 
    }  _highlightedSectionHeaderOffset;
    long long  _idiom;
    double  _orbPreviewSize;
    struct UIColor { Class x1; } * _selectionHighlightColor;
    bool  _shouldRemoveHighlightOnScroll;
    double  _tabTitleBaselineOffset;
    struct UIFont { Class x1; } * _tabTitleFont;
    struct UIColor { Class x1; } * _tabTitleTextColor;
    double  _tabTopContentPadding;
}

@property (nonatomic, readonly) double _displayScale;
@property (nonatomic, readonly) unsigned long long _style;
@property (nonatomic, readonly) bool alwaysShowFavoritesBadge;
@property (nonatomic, readonly) UIColor *borderColor;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } borderOffset;
@property (nonatomic, readonly) double borderWidth;
@property (nonatomic, readonly) double bottomShadowPadding;
@property (nonatomic, readonly) double distanceBetweenHeaderBaselineAndImageTop;
@property (nonatomic, readonly) double favoriteBadgeHeight;
@property (nonatomic, readonly) double favoriteBadgeInset;
@property (nonatomic, readonly) double feedAdditionalContentThreshold;
@property (nonatomic, readonly) UIColor *feedBackgroundColor;
@property (nonatomic, readonly) Class feedDataSourceManagerClass;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } feedEntryEdgeInsets;
@property (nonatomic, readonly) double feedEntryHeaderHeight;
@property (nonatomic, readonly) double feedHeroImageAspectRatio;
@property (nonatomic, readonly) double feedHeroImagePaddingBottom;
@property (nonatomic, readonly) double feedHeroImagePaddingTop;
@property (nonatomic, readonly) long long feedHeroPosition;
@property (nonatomic, readonly) double feedInteritemSpacing;
@property (nonatomic, readonly) Class feedLayoutMetricsClass;
@property (nonatomic, readonly) unsigned long long feedMemoriesPerRow;
@property (nonatomic, readonly) long long feedScrollDirection;
@property (nonatomic, readonly) double feedSecondaryImagePaddingBottom;
@property (nonatomic, readonly) long long feedSectionLayoutAxis;
@property (nonatomic, readonly) bool feedShouldAllowHeaders;
@property (nonatomic, readonly) Class feedTransitionAnimationCoordinatorClass;
@property (nonatomic, readonly) double firstFeedEntryHeaderHeight;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } highlightedSectionHeaderOffset;
@property (nonatomic, readonly) long long idiom;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } layoutInsets;
@property (nonatomic, readonly) double orbPreviewSize;
@property (nonatomic, readonly) UIColor *selectionHighlightColor;
@property (nonatomic, readonly) bool shouldRemoveHighlightOnScroll;
@property (nonatomic, readonly) double tabTitleBaselineOffset;
@property (nonatomic, readonly) UIFont *tabTitleFont;
@property (nonatomic, readonly) UIColor *tabTitleTextColor;
@property (nonatomic, readonly) double tabTopContentPadding;

- (void).cxx_destruct;
- (void)_calculateSectionInsetWithExtendedTraitCollection:(id)arg1;
- (double)_displayScale;
- (double)_feedInteritemSpacingForReferenceSize:(struct CGSize { double x1; double x2; })arg1;
- (unsigned long long)_style;
- (bool)alwaysShowFavoritesBadge;
- (struct UIColor { Class x1; }*)borderColor;
- (struct CGPoint { double x1; double x2; })borderOffset;
- (double)borderWidth;
- (double)bottomShadowPadding;
- (id)createViewSpecWithDescriptor:(struct PXViewSpecDescriptor { long long x1; unsigned long long x2; struct CGSize { double x_3_1_1; double x_3_1_2; } x3; })arg1;
- (double)distanceBetweenHeaderBaselineAndImageTop;
- (double)favoriteBadgeHeight;
- (double)favoriteBadgeInset;
- (double)feedAdditionalContentThreshold;
- (struct UIColor { Class x1; }*)feedBackgroundColor;
- (struct UIColor { Class x1; }*)feedCategoryLabelTextColor;
- (Class)feedDataSourceManagerClass;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })feedEntryEdgeInsets;
- (double)feedEntryHeaderHeight;
- (double)feedHeroImageAspectRatio;
- (double)feedHeroImagePaddingBottom;
- (double)feedHeroImagePaddingTop;
- (long long)feedHeroPosition;
- (double)feedInteritemSpacing;
- (Class)feedLayoutMetricsClass;
- (unsigned long long)feedMemoriesPerRow;
- (long long)feedScrollDirection;
- (double)feedSecondaryImagePaddingBottom;
- (long long)feedSectionLayoutAxis;
- (bool)feedShouldAllowHeaders;
- (Class)feedTransitionAnimationCoordinatorClass;
- (double)firstFeedEntryHeaderHeight;
- (struct CGPoint { double x1; double x2; })highlightedSectionHeaderOffset;
- (long long)idiom;
- (id)initWithExtendedTraitCollection:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithExtendedTraitCollection:(id)arg1 options:(unsigned long long)arg2 style:(unsigned long long)arg3;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })layoutInsets;
- (id)newLayoutGeneratorWithMetrics:(id)arg1;
- (double)orbPreviewSize;
- (struct UIColor { Class x1; }*)selectionHighlightColor;
- (bool)shouldRemoveHighlightOnScroll;
- (double)tabTitleBaselineOffset;
- (struct UIFont { Class x1; }*)tabTitleFont;
- (struct UIColor { Class x1; }*)tabTitleTextColor;
- (double)tabTopContentPadding;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

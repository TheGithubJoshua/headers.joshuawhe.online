<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXCMMAssetsProgressListener.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXCMMAssetsProgressListener.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXCMMAssetsProgressListener : PXObservable <PXCPLServiceUIDelegate, PXPhotoLibraryUIChangeObserver> {
    float  _activityProgress;
    NSString * _activityTitle;
    PHFetchResult * _allAssetsFetchResult;
    NSString * _assetsTitle;
    NSString * _byline;
    PHFetchResult * _copiedAssetsFetchResult;
    PXCPLServiceUI * _cplServiceUI;
    PHFetchResult * _downloadingAssetsFetchResult;
    NSString * _expirationTitle;
    NSString * _idleTitle;
    bool  _isPaused;
    PHMomentShare * _momentShare;
    long long  _numberOfAssetsNotCopied;
    PHFetchResult * _participantsFetchResult;
    NSString * _pauseStatusDescription;
    NSString * _pauseTitle;
    long long  _presentationStyle;
    long long  _state;
    long long  _type;
}

@property (nonatomic) float activityProgress;
@property (nonatomic, copy) NSString *activityTitle;
@property (nonatomic, retain) PHFetchResult *allAssetsFetchResult;
@property (nonatomic, copy) NSString *assetsTitle;
@property (nonatomic, copy) NSString *byline;
@property (nonatomic, retain) PHFetchResult *copiedAssetsFetchResult;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) PHFetchResult *downloadingAssetsFetchResult;
@property (nonatomic, copy) NSString *expirationTitle;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *idleTitle;
@property (nonatomic) bool isPaused;
@property (nonatomic, retain) PHMomentShare *momentShare;
@property (nonatomic) long long numberOfAssetsNotCopied;
@property (nonatomic, retain) PHFetchResult *participantsFetchResult;
@property (nonatomic, copy) NSString *pauseStatusDescription;
@property (nonatomic, copy) NSString *pauseTitle;
@property (nonatomic, readonly) long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long type;

+ (id)new;

- (void).cxx_destruct;
- (void)_prepareFetchResultsForPhotoLibrary:(id)arg1;
- (bool)_showsUploadingStatus;
- (void)_updateCountsAndStatus;
- (void)_updatePausedStatus;
- (float)activityProgress;
- (id)activityTitle;
- (id)allAssetsFetchResult;
- (id)assetsTitle;
- (id)byline;
- (id)copiedAssetsFetchResult;
- (id)description;
- (void)didPerformChanges;
- (id)downloadingAssetsFetchResult;
- (id)expirationTitle;
- (id)idleTitle;
- (id)init;
- (id)initWithMomentShare:(id)arg1 presentationStyle:(long long)arg2;
- (bool)isPaused;
- (id)momentShare;
- (id)mutableChangeObject;
- (long long)numberOfAssetsNotCopied;
- (id)participantsFetchResult;
- (id)pauseStatusDescription;
- (id)pauseTitle;
- (void)photoLibraryDidChangeOnMainQueue:(id)arg1;
- (void)serviceUI:(id)arg1 statusDidChange:(id)arg2;
- (void)setActivityProgress:(float)arg1;
- (void)setActivityTitle:(id)arg1;
- (void)setAllAssetsFetchResult:(id)arg1;
- (void)setAssetsTitle:(id)arg1;
- (void)setByline:(id)arg1;
- (void)setCopiedAssetsFetchResult:(id)arg1;
- (void)setDownloadingAssetsFetchResult:(id)arg1;
- (void)setExpirationTitle:(id)arg1;
- (void)setIdleTitle:(id)arg1;
- (void)setIsPaused:(bool)arg1;
- (void)setMomentShare:(id)arg1;
- (void)setNumberOfAssetsNotCopied:(long long)arg1;
- (void)setParticipantsFetchResult:(id)arg1;
- (void)setPauseStatusDescription:(id)arg1;
- (void)setPauseTitle:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setType:(long long)arg1;
- (long long)state;
- (long long)type;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXCTLine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXCTLine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXCTLine : NSObject {
    double  _ascent;
    struct CGContext { } * _context;
    double  _descent;
    bool  _endOfString;
    PXCTFrame * _frame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _imageBounds;
    const struct __CTLine { } * _line;
    struct CGPoint { 
        double x; 
        double y; 
    }  _origin;
    bool  _prepared;
    NSAttributedString * _referenceAttributedString;
    NSShadow * _shadow;
    NSString * _string;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _stringRange;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _transform;
    bool  _truncated;
    double  _width;
}

@property (nonatomic, readonly) double ascent;
@property (nonatomic, readonly) double ascentPosition;
@property (nonatomic, readonly) double baselinePosition;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contentBounds;
@property (nonatomic, readonly) struct CGContext { }*context;
@property (nonatomic, readonly) double descent;
@property (nonatomic, readonly) double descentPosition;
@property (getter=isEndOfString, nonatomic, readonly) bool endOfString;
@property (nonatomic, readonly) PXCTFrame *frame;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } imageBounds;
@property (nonatomic, readonly) const struct __CTLine { }*line;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } origin;
@property (nonatomic, readonly) NSAttributedString *referenceAttributedString;
@property (nonatomic, readonly) NSShadow *shadow;
@property (nonatomic, readonly) NSString *string;
@property (nonatomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } stringRange;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } textPosition;
@property (nonatomic, readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } transform;
@property (getter=isTruncated, nonatomic, readonly) bool truncated;
@property (nonatomic, readonly) double width;

- (void).cxx_destruct;
- (void)_transformBy:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (double)ascent;
- (double)ascentPosition;
- (double)baselinePosition;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentBounds;
- (struct CGContext { }*)context;
- (const struct CGPath { }*)createPath;
- (void)dealloc;
- (double)descent;
- (double)descentPosition;
- (id)description;
- (void)draw;
- (id)frame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageBounds;
- (id)init;
- (id)initWithLine:(struct __CTLine { }*)arg1 origin:(struct CGPoint { double x1; double x2; })arg2 frame:(id)arg3 referenceAttributedString:(id)arg4 truncated:(bool)arg5;
- (bool)isEndOfString;
- (bool)isTruncated;
- (const struct __CTLine { }*)line;
- (struct CGPoint { double x1; double x2; })origin;
- (void)prepare;
- (id)referenceAttributedString;
- (void)scaleBy:(double)arg1;
- (void)scaleVerticallyBy:(double)arg1;
- (id)shadow;
- (id)string;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })stringRange;
- (struct CGPoint { double x1; double x2; })textPosition;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })transform;
- (void)translateHorizontallyBy:(double)arg1;
- (void)translateVerticallyBy:(double)arg1;
- (double)width;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

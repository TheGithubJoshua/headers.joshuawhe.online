<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXPhotosDetailsSettings.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXPhotosDetailsSettings.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXPhotosDetailsSettings : PXSettings {
    double  _addToTabDuration;
    double  _addToTabEndRotation;
    double  _addToTabFadeOutDelay;
    double  _addToTabOpacity;
    double  _addToTabRotationDelay;
    double  _addToTabScaleDelay;
    bool  _addToTabSimulate;
    double  _addToTabTranslationDelay;
    bool  _allowEditorialLayoutStressTest;
    bool  _allowMultiColumnLayout;
    bool  _allowPinchTransitions;
    bool  _allowWidgetsContentLoading;
    bool  _allowZoomTransitions;
    double  _assetsWidgetPlaceholderAspectRatio;
    long long  _curationAlgorithm;
    struct PXAssetBadgeInfo { 
        unsigned long long badges; 
        double duration; 
        long long count; 
    }  _debugBadgeInfo;
    double  _defaultPriorityWidgetsLoadingDelay;
    long long  _detailViewsToKeepLoaded;
    long long  _editorialLayoutActivityFeedItemCountThreshold;
    bool  _editorialLayoutAvoidSmallestTile;
    long long  _editorialLayoutColumns;
    bool  _editorialLayoutEdit;
    long long  _editorialLayoutTargetRowsForChunk;
    bool  _enableDebugCurationBadge;
    long long  _layoutWeight;
    bool  _loadAllWidgetsContentAfterDelay;
    bool  _loadAllWidgetsContentOnScroll;
    bool  _peopleWidgetDisableSocialGroup;
    long long  _peopleWidgetMaximumNumberOfPeople;
    bool  _placesWidgetShowOnlyPlaceholder;
    bool  _purgeOnMemoryWarning;
    bool  _showActionsWidget;
    bool  _showAssetsWidget;
    bool  _showDemoDynamicWidget;
    bool  _showDemoTilingViewWidget;
    bool  _showDemoViewWidget;
    bool  _showFacesAreaRect;
    bool  _showHeaderWidget;
    bool  _showPeopleInlineCandidateWidget;
    bool  _showPlacesWidget;
    bool  _showRelatedPeopleWidget;
    bool  _showRelatedWidget;
    bool  _showVariationsWidget;
}

@property (nonatomic) double addToTabDuration;
@property (nonatomic) double addToTabEndRotation;
@property (nonatomic) double addToTabFadeOutDelay;
@property (nonatomic) double addToTabOpacity;
@property (nonatomic) double addToTabRotationDelay;
@property (nonatomic) double addToTabScaleDelay;
@property (nonatomic) bool addToTabSimulate;
@property (nonatomic) double addToTabTranslationDelay;
@property (nonatomic) bool allowEditorialLayoutStressTest;
@property (nonatomic) bool allowMultiColumnLayout;
@property (nonatomic) bool allowPinchTransitions;
@property (nonatomic) bool allowWidgetsContentLoading;
@property (nonatomic) bool allowZoomTransitions;
@property (nonatomic) double assetsWidgetPlaceholderAspectRatio;
@property (nonatomic) long long curationAlgorithm;
@property (nonatomic) struct PXAssetBadgeInfo { unsigned long long x1; double x2; long long x3; } debugBadgeInfo;
@property (nonatomic) double defaultPriorityWidgetsLoadingDelay;
@property (nonatomic) long long detailViewsToKeepLoaded;
@property (nonatomic) long long editorialLayoutActivityFeedItemCountThreshold;
@property (nonatomic) bool editorialLayoutAvoidSmallestTile;
@property (nonatomic) long long editorialLayoutColumns;
@property (nonatomic) bool editorialLayoutEdit;
@property (nonatomic) long long editorialLayoutTargetRowsForChunk;
@property (nonatomic) bool enableDebugCurationBadge;
@property (nonatomic) long long layoutWeight;
@property (nonatomic) bool loadAllWidgetsContentAfterDelay;
@property (nonatomic) bool loadAllWidgetsContentOnScroll;
@property (nonatomic) bool peopleWidgetDisableSocialGroup;
@property (nonatomic) long long peopleWidgetMaximumNumberOfPeople;
@property (nonatomic) bool placesWidgetShowOnlyPlaceholder;
@property (nonatomic) bool purgeOnMemoryWarning;
@property (nonatomic) bool showActionsWidget;
@property (nonatomic) bool showAssetsWidget;
@property (nonatomic) bool showDemoDynamicWidget;
@property (nonatomic) bool showDemoTilingViewWidget;
@property (nonatomic) bool showDemoViewWidget;
@property (nonatomic) bool showFacesAreaRect;
@property (nonatomic) bool showHeaderWidget;
@property (nonatomic) bool showPeopleInlineCandidateWidget;
@property (nonatomic) bool showPlacesWidget;
@property (nonatomic) bool showRelatedPeopleWidget;
@property (nonatomic) bool showRelatedWidget;
@property (nonatomic) bool showVariationsWidget;

+ (id)settingsControllerModule;
+ (id)sharedInstance;

- (double)addToTabDuration;
- (double)addToTabEndRotation;
- (double)addToTabFadeOutDelay;
- (double)addToTabOpacity;
- (double)addToTabRotationDelay;
- (double)addToTabScaleDelay;
- (bool)addToTabSimulate;
- (double)addToTabTranslationDelay;
- (bool)allowEditorialLayoutStressTest;
- (bool)allowMultiColumnLayout;
- (bool)allowPinchTransitions;
- (bool)allowWidgetsContentLoading;
- (bool)allowZoomTransitions;
- (double)assetsWidgetPlaceholderAspectRatio;
- (long long)curationAlgorithm;
- (struct PXAssetBadgeInfo { unsigned long long x1; double x2; long long x3; })debugBadgeInfo;
- (double)defaultPriorityWidgetsLoadingDelay;
- (long long)detailViewsToKeepLoaded;
- (long long)editorialLayoutActivityFeedItemCountThreshold;
- (bool)editorialLayoutAvoidSmallestTile;
- (long long)editorialLayoutColumns;
- (bool)editorialLayoutEdit;
- (long long)editorialLayoutTargetRowsForChunk;
- (bool)enableDebugCurationBadge;
- (long long)layoutWeight;
- (bool)loadAllWidgetsContentAfterDelay;
- (bool)loadAllWidgetsContentOnScroll;
- (id)parentSettings;
- (bool)peopleWidgetDisableSocialGroup;
- (long long)peopleWidgetMaximumNumberOfPeople;
- (bool)placesWidgetShowOnlyPlaceholder;
- (bool)purgeOnMemoryWarning;
- (void)setAddToTabDuration:(double)arg1;
- (void)setAddToTabEndRotation:(double)arg1;
- (void)setAddToTabFadeOutDelay:(double)arg1;
- (void)setAddToTabOpacity:(double)arg1;
- (void)setAddToTabRotationDelay:(double)arg1;
- (void)setAddToTabScaleDelay:(double)arg1;
- (void)setAddToTabSimulate:(bool)arg1;
- (void)setAddToTabTranslationDelay:(double)arg1;
- (void)setAllowEditorialLayoutStressTest:(bool)arg1;
- (void)setAllowMultiColumnLayout:(bool)arg1;
- (void)setAllowPinchTransitions:(bool)arg1;
- (void)setAllowWidgetsContentLoading:(bool)arg1;
- (void)setAllowZoomTransitions:(bool)arg1;
- (void)setAssetsWidgetPlaceholderAspectRatio:(double)arg1;
- (void)setCurationAlgorithm:(long long)arg1;
- (void)setDebugBadgeInfo:(struct PXAssetBadgeInfo { unsigned long long x1; double x2; long long x3; })arg1;
- (void)setDefaultPriorityWidgetsLoadingDelay:(double)arg1;
- (void)setDefaultValues;
- (void)setDetailViewsToKeepLoaded:(long long)arg1;
- (void)setEditorialLayoutActivityFeedItemCountThreshold:(long long)arg1;
- (void)setEditorialLayoutAvoidSmallestTile:(bool)arg1;
- (void)setEditorialLayoutColumns:(long long)arg1;
- (void)setEditorialLayoutEdit:(bool)arg1;
- (void)setEditorialLayoutTargetRowsForChunk:(long long)arg1;
- (void)setEnableDebugCurationBadge:(bool)arg1;
- (void)setLayoutWeight:(long long)arg1;
- (void)setLoadAllWidgetsContentAfterDelay:(bool)arg1;
- (void)setLoadAllWidgetsContentOnScroll:(bool)arg1;
- (void)setPeopleWidgetDisableSocialGroup:(bool)arg1;
- (void)setPeopleWidgetMaximumNumberOfPeople:(long long)arg1;
- (void)setPlacesWidgetShowOnlyPlaceholder:(bool)arg1;
- (void)setPurgeOnMemoryWarning:(bool)arg1;
- (void)setShowActionsWidget:(bool)arg1;
- (void)setShowAssetsWidget:(bool)arg1;
- (void)setShowDemoDynamicWidget:(bool)arg1;
- (void)setShowDemoTilingViewWidget:(bool)arg1;
- (void)setShowDemoViewWidget:(bool)arg1;
- (void)setShowFacesAreaRect:(bool)arg1;
- (void)setShowHeaderWidget:(bool)arg1;
- (void)setShowPeopleInlineCandidateWidget:(bool)arg1;
- (void)setShowPlacesWidget:(bool)arg1;
- (void)setShowRelatedPeopleWidget:(bool)arg1;
- (void)setShowRelatedWidget:(bool)arg1;
- (void)setShowVariationsWidget:(bool)arg1;
- (bool)showActionsWidget;
- (bool)showAssetsWidget;
- (bool)showDemoDynamicWidget;
- (bool)showDemoTilingViewWidget;
- (bool)showDemoViewWidget;
- (bool)showFacesAreaRect;
- (bool)showHeaderWidget;
- (bool)showPeopleInlineCandidateWidget;
- (bool)showPlacesWidget;
- (bool)showRelatedPeopleWidget;
- (bool)showRelatedWidget;
- (bool)showVariationsWidget;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

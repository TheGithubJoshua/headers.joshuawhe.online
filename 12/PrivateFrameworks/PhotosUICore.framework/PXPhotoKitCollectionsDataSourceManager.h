<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXPhotoKitCollectionsDataSourceManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXPhotoKitCollectionsDataSourceManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXPhotoKitCollectionsDataSourceManager : PXCollectionsDataSourceManager <PXCollectionFetchOperationDelegate, PXPhotoLibraryUIChangeObserver> {
    NSArray * __collectionListBySection;
    NSArray * __collectionsFetchResultBySection;
    NSMutableDictionary * __subCollectionActiveCountFetchOperations;
    NSMutableDictionary * __subCollectionActiveKeyAssetsFetchOperations;
    NSArray * __virtualCollections;
    NSMutableSet * _changedSubCollections;
    NSMutableDictionary * _collectionIndexPathByCollection;
    PHCollectionList * _collectionList;
    PHFetchResult * _collectionsFetchResult;
    PXPhotoKitCollectionsDataSourceManagerConfiguration * _configuration;
    NSMutableDictionary * _fetchResultsByPendingChangedCollections;
    bool  _initiatedBackgroundFetching;
    bool  _isPhotoLibraryEmpty;
    bool  _needsBackgroundFetching;
    bool  _performedBackgroundFetching;
    PHPhotoLibrary * _photoLibrary;
    bool  _publishChangesScheduledOnRunLoop;
    bool  _resumedBackgroundFetching;
    NSOperationQueue * _subCollectionFetchOperationQueue;
    NSMutableDictionary * _subCollectionFetchResultsCache;
    NSMutableDictionary * _subCollectionKeyAssetFetchResultsCache;
    NSOperationQueue * _subCollectionKeyAssetsFetchOperationQueue;
}

@property (setter=_setCollectionListBySection:, nonatomic, retain) NSArray *_collectionListBySection;
@property (setter=_setCollectionsFetchResultBySection:, nonatomic, retain) NSArray *_collectionsFetchResultBySection;
@property (nonatomic, readonly) NSMutableDictionary *_subCollectionActiveCountFetchOperations;
@property (nonatomic, readonly) NSMutableDictionary *_subCollectionActiveKeyAssetsFetchOperations;
@property (nonatomic, retain) NSArray *_virtualCollections;
@property (nonatomic, readonly) PHCollectionList *collectionList;
@property (nonatomic, readonly) PHFetchResult *collectionsFetchResult;
@property (readonly) PXPhotoKitCollectionsDataSourceManagerConfiguration *configuration;
@property (nonatomic, readonly) PXPhotoKitCollectionsDataSource *dataSource;
@property (readonly) NSObject<OS_os_log> *dataSourceManagerLog;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long numberOfPendingKeyAssetFetches;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_cachedKeyAssetFetchResultForSubCollection:(id)arg1;
- (id)_changedSubCollectionIndexesBySections;
- (id)_collectionListBySection;
- (id)_collectionsFetchResultBySection;
- (bool)_containsAnyAlbumsWithAssets:(id)arg1;
- (bool)_containsAnyAssets:(id)arg1;
- (void)_endSignpostForFetchOperation:(id)arg1;
- (void)_enumerateAllPhotoKitCollectionsUsingBlock:(id /* block */)arg1;
- (void)_fetchAndUpdateCountsForCollection:(id)arg1;
- (void)_fetchKeyAssetsForCollection:(id)arg1;
- (struct PXTwoTuple { Class x1; }*)_filterFetchResult:(id)arg1;
- (unsigned long long)_fixedOrderPriorityForVirtualCollection:(id)arg1;
- (struct PXTwoTuple { Class x1; }*)_getSectionedCollectionListAndFetchResultsFromFetchResult:(id)arg1;
- (void)_initiateBackgroundFetchingIfNeededForCollection:(id)arg1;
- (bool)_isEmpty;
- (bool)_isImportsAssetCollection:(id)arg1;
- (bool)_isPlacesAlbumAssetCollection:(id)arg1;
- (bool)_needsFetchResultForCollection:(id)arg1;
- (bool)_needsKeyAssetsFetchResultForCollection:(id)arg1;
- (id)_newDataSource;
- (void)_publishPendingCollectionChanges;
- (void)_recursivelyCollectCollectionsIn:(id)arg1 fetchResult:(id)arg2;
- (void)_recursivelyEnumerateAssetCollectionsInFetchResult:(id)arg1 block:(id /* block */)arg2;
- (void)_resumeFetchOperations;
- (void)_resumeKeyAssetsFetchOperations;
- (void)_setCollectionListBySection:(id)arg1;
- (void)_setCollectionsFetchResultBySection:(id)arg1;
- (bool)_shouldIncludeCollection:(id)arg1;
- (id)_subCollectionActiveCountFetchOperations;
- (id)_subCollectionActiveKeyAssetsFetchOperations;
- (id)_subitemChangeDetailsByItemBySection;
- (bool)_updateCachedSubCollectionFetchResultsForChange:(id)arg1 fetchResultChangeDetails:(id)arg2;
- (void)_updateCollectionIndexMappingForFilteredFetchResults;
- (void)_updateDataSourceForChangeOnCollection:(id)arg1 withFetchResult:(id)arg2;
- (void)_updateFilteredCollectionsFetchResults;
- (void)_updateKeyAssetsCacheForCollection:(id)arg1 withFetchResult:(id)arg2 otherFetchResultsByAssetCollection:(id)arg3;
- (void)_updateVisibleCountsForCollection:(id)arg1 withWithFetchResult:(id)arg2;
- (id)_virtualCollections;
- (id)assetsFetchResultForCollection:(id)arg1;
- (bool)canDeleteCollection:(id)arg1;
- (bool)canEditAlbums;
- (bool)canRenameCollection:(id)arg1;
- (bool)canReorderCollection:(id)arg1;
- (void)collectionFetchOperationDidBegin:(id)arg1;
- (void)collectionFetchOperationDidCancel:(id)arg1;
- (void)collectionFetchOperationDidComplete:(id)arg1;
- (id)collectionList;
- (id)collectionsFetchResult;
- (id)configuration;
- (bool)containsAnyAssets:(id)arg1;
- (id)createInitialDataSource;
- (id)dataSourceManagerLog;
- (void)dealloc;
- (long long)estimatedCountForAssetCollection:(id)arg1;
- (id)fetchResultForSubCollection:(id)arg1;
- (bool)hasAssetsFetchResultForCollection:(id)arg1;
- (id)indexPathForCollection:(id)arg1;
- (id)initWithConfiguration:(id)arg1;
- (void)initiateBackgroundFetchingIfNeeded;
- (bool)isCachedFetchResultOutdatedForCollection:(id)arg1;
- (id)keyAssetsFetchResultForCollection:(id)arg1;
- (long long)numberOfPendingKeyAssetFetches;
- (void)photoLibraryDidChangeOnMainQueue:(id)arg1;
- (id)prepareForPhotoLibraryChange:(id)arg1;
- (void)resumeBackgroundFetchingIfNeeded;
- (void)set_virtualCollections:(id)arg1;
- (void)startCoalescingFetchResultChanges;
- (void)stopCoalescingAndPublishFetchResultChanges;
- (id)uncachedFetchResultForSubCollection:(id)arg1;
- (id)uncachedKeyAssetFetchResultForSubCollection:(id)arg1;
- (void)waitUntilBackgroundFetchingFinishedWithCompletionBlock:(id /* block */)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXCMMViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXCMMViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXCMMViewController : UIViewController <PXActionMenuDelegate, PXAssetsDataSourceManagerObserver, PXCMMActionControllerDelegate, PXCMMActionPerformerDelegate, PXCMMAssetsViewControllerDelegate, PXChangeObserver, PXSectionedDataSourceManagerObserver, PXToastViewControllerDelegate, UIPopoverPresentationControllerDelegate> {
    <PXCMMActionControllerDelegate> * _actionDelegate;
    UIBarButtonItem * _actionMenuButtonItem;
    NSProgress * _actionProgress;
    PXActionMenuController * _activeActionMenuController;
    UIActivityIndicatorView * _activityIndicatorView;
    PXCMMAssetsProgressListener * _assetsProgressListener;
    PXCMMAssetsViewController * _assetsViewController;
    <PXCMMViewControllerDelegate> * _delegate;
    bool  _didIncrementNumberOfPresentedSendBacks;
    bool  _hasStartedPreloadingTasks;
    NSArray * _layoutConstraints;
    bool  _loadingPeopleSuggestions;
    PXOneUpPresentation * _oneUpPresentation;
    UIBarButtonItem * _progressButton;
    PXCMMSession * _session;
    bool  _showTitleInNavigationBar;
    PXCMMSpecManager * _specManager;
    UINavigationBar * _standaloneNavigationBar;
    PXUpdater * _updater;
}

@property (nonatomic) <PXCMMActionControllerDelegate> *actionDelegate;
@property (nonatomic, retain) UIBarButtonItem *actionMenuButtonItem;
@property (nonatomic, retain) NSProgress *actionProgress;
@property (nonatomic, retain) PXActionMenuController *activeActionMenuController;
@property (nonatomic, retain) UIActivityIndicatorView *activityIndicatorView;
@property (nonatomic, readonly) PXCMMAssetsViewController *assetsViewController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PXCMMViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSArray *layoutConstraints;
@property (getter=isLoadingPeopleSuggestions, nonatomic) bool loadingPeopleSuggestions;
@property (nonatomic, readonly) PXOneUpPresentation *oneUpPresentation;
@property (nonatomic, retain) UIBarButtonItem *progressButton;
@property (nonatomic, readonly) PXCMMSession *session;
@property (nonatomic) bool showTitleInNavigationBar;
@property (nonatomic, readonly) PXCMMSpecManager *specManager;
@property (nonatomic, retain) UINavigationBar *standaloneNavigationBar;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PXUpdater *updater;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

- (void).cxx_destruct;
- (void)_activateNotificationSuppressionIfNecessary;
- (bool)_canPresentComposeRecipientViewController;
- (void)_completePeopleSuggestionsLoading;
- (void)_deactivateNotificationSuppressionIfNecessary;
- (void)_dismissViewControllerWithCompletionHandler:(id /* block */)arg1;
- (void)_handleActionButton;
- (void)_handleActionMenuButtonItem:(id)arg1;
- (void)_handleComposeRecipientCancelButton:(id)arg1;
- (id)_localizedSelectionTitle;
- (void)_performCancel;
- (void)_playMovie;
- (void)_presentComposeRecipientViewController;
- (void)_presentViewController:(id)arg1;
- (void)_setNeedsUpdate;
- (void)_setupNavigationItem;
- (bool)_shouldShowActionMenu;
- (void)_startPreloadingTasksIfNeeded;
- (void)_updateActionProgress;
- (void)_updateComponentViewController:(id)arg1 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_updateComponentsViewControllerLayout;
- (void)_updateStyle;
- (void)_updateTitle;
- (id)actionDelegate;
- (void)actionMenu:(id)arg1 actionPerformer:(id)arg2 didChangeState:(unsigned long long)arg3;
- (bool)actionMenu:(id)arg1 dismissViewController:(struct NSObject { Class x1; }*)arg2 completionHandler:(id /* block */)arg3;
- (bool)actionMenu:(id)arg1 presentViewController:(id)arg2;
- (id)actionMenuButtonItem;
- (bool)actionPerformer:(id)arg1 dismissViewController:(struct NSObject { Class x1; }*)arg2 completionHandler:(id /* block */)arg3;
- (bool)actionPerformer:(id)arg1 presentViewController:(struct NSObject { Class x1; }*)arg2;
- (id)actionProgress;
- (id)activeActionMenuController;
- (id)activityIndicatorView;
- (id)assetsViewController;
- (void)assetsViewControllerDidTapActionButton:(id)arg1;
- (void)assetsViewControllerDidTapSendBackActionButton:(id)arg1;
- (id)completeMyMomentViewController:(id)arg1 performActionForSession:(id)arg2;
- (id)completeMyMomentViewController:(id)arg1 performSendBackActionForSession:(id)arg2;
- (void)dealloc;
- (id)delegate;
- (void)didDismissToastViewController:(id)arg1;
- (void)didPerformDeletionActionForAssetsViewController:(id)arg1;
- (void)didTapAddMoreButtonForAssetsViewController:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithSession:(id)arg1;
- (bool)isLoadingPeopleSuggestions;
- (id)layoutConstraints;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)oneUpPresentation;
- (id)oneUpPresentationForAssetsViewController:(id)arg1;
- (long long)positionForBar:(id)arg1;
- (void)ppt_setSelecting:(bool)arg1;
- (id)progressButton;
- (id)session;
- (void)setActionDelegate:(id)arg1;
- (void)setActionMenuButtonItem:(id)arg1;
- (void)setActionProgress:(id)arg1;
- (void)setActiveActionMenuController:(id)arg1;
- (void)setActivityIndicatorView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLayoutConstraints:(id)arg1;
- (void)setLoadingPeopleSuggestions:(bool)arg1;
- (void)setProgressButton:(id)arg1;
- (void)setShowTitleInNavigationBar:(bool)arg1;
- (void)setStandaloneNavigationBar:(id)arg1;
- (bool)shouldShowAddMoreButtonForAssetsViewController:(id)arg1;
- (bool)showTitleInNavigationBar;
- (id)specManager;
- (id)standaloneNavigationBar;
- (void)updateViewConstraints;
- (id)updater;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willMoveToParentViewController:(id)arg1;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

- (id)px_gridPresentation;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXPeopleSuggestionView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXPeopleSuggestionView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXPeopleSuggestionView : PXSmartScaleView {
    NSDateFormatter * _dateFormatter;
    UILabel * _dateLabel;
    UIView * _dimView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _faceRect;
    PXPersonImageRequest * _imageRequest;
    UIImageView * _imageView;
    bool  _needsSpotlightUpdate;
    CAShapeLayer * _spotlightLayer;
    <PXPerson> * _suggestion;
    UIView * _suggestionView;
    bool  _validSpotlight;
}

@property (nonatomic, retain) NSDateFormatter *dateFormatter;
@property (nonatomic, retain) UILabel *dateLabel;
@property (nonatomic, retain) UIView *dimView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } faceRect;
@property (nonatomic, retain) PXPersonImageRequest *imageRequest;
@property (nonatomic, retain) UIImageView *imageView;
@property (nonatomic) bool needsSpotlightUpdate;
@property (nonatomic, retain) CAShapeLayer *spotlightLayer;
@property (nonatomic, readonly) <PXPerson> *suggestion;
@property (nonatomic, retain) UIView *suggestionView;
@property (nonatomic) bool validSpotlight;

- (void).cxx_destruct;
- (double)_faceScale;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_scaledFaceRect;
- (void)_updateDateFieldWithSuggestion:(id)arg1;
- (void)_updateSpotlightAnimated:(bool)arg1;
- (void)_updateSuggestionImageWithAnimatedSpotlight:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)commonInit;
- (id)dateFormatter;
- (id)dateLabel;
- (id)dimView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })faceRect;
- (id)imageRequest;
- (id)imageView;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (bool)needsSpotlightUpdate;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)setDateFormatter:(id)arg1;
- (void)setDateLabel:(id)arg1;
- (void)setDimView:(id)arg1;
- (void)setFaceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setImageRequest:(id)arg1;
- (void)setImageView:(id)arg1;
- (void)setNeedsSpotlightUpdate:(bool)arg1;
- (void)setSpotlightLayer:(id)arg1;
- (void)setSuggestion:(id)arg1 animated:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)setSuggestionView:(id)arg1;
- (void)setValidSpotlight:(bool)arg1;
- (id)spotlightLayer;
- (id)suggestion;
- (id)suggestionView;
- (bool)validSpotlight;
- (void)viewScaleDidChange;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXPhotosDetailsBarsController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXPhotosDetailsBarsController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXPhotosDetailsBarsController : PXBarsController <PXActionMenuDelegate, PXActionPerformerDelegate, PXChangeObserver, PXPhotosDataSourceChangeObserver, UIPopoverPresentationControllerDelegate> {
    PXActionMenuController * __activeMenuController;
    PXActionPerformer * __activePerformer;
    PXAssetActionManager * __assetActionManager;
    PXAssetCollectionActionManager * __assetCollectionActionManager;
    PXBarAppearance * __barAppearance;
    NSMutableDictionary * __barButtonItemByActionType;
    NSMutableDictionary * __barButtonItemCacheByBarItemIdentifier;
    PXPhotosDetailsContext * __context;
    PXPhotosDataSource * __dataSource;
    PXExtendedTraitCollection * __extendedTraitCollection;
    PXActionPerformer * __lastActionPerformer;
    PXSectionedSelectionManager * __selectionManager;
    bool  __showTitleView;
    UIView * __titleView;
    PXPhotosDetailsViewModel * __viewModel;
    struct { 
        bool assetActionManager; 
        bool assetCollectionActionManager; 
    }  _needsUpdateFlags;
    bool  _shouldAddActionButton;
}

@property (nonatomic, retain) PXActionMenuController *_activeMenuController;
@property (setter=_setActivePerformer:, nonatomic, retain) PXActionPerformer *_activePerformer;
@property (nonatomic, readonly) PXAssetActionManager *_assetActionManager;
@property (nonatomic, readonly) PXAssetCollectionActionManager *_assetCollectionActionManager;
@property (setter=_setBarAppearance:, nonatomic, retain) PXBarAppearance *_barAppearance;
@property (nonatomic, readonly) NSMutableDictionary *_barButtonItemByActionType;
@property (nonatomic, readonly) NSMutableDictionary *_barButtonItemCacheByBarItemIdentifier;
@property (nonatomic, readonly) PXPhotosDetailsContext *_context;
@property (nonatomic, readonly) PXPhotosDataSource *_dataSource;
@property (nonatomic, readonly) PXExtendedTraitCollection *_extendedTraitCollection;
@property (setter=_setLastActionPerformer:, nonatomic) PXActionPerformer *_lastActionPerformer;
@property (setter=_setSelectionManager:, nonatomic, retain) PXSectionedSelectionManager *_selectionManager;
@property (setter=_setShowTitleView:, nonatomic) bool _showTitleView;
@property (nonatomic, readonly) UIView *_titleView;
@property (nonatomic, readonly) PXPhotosDetailsViewModel *_viewModel;
@property (nonatomic, retain) PXPhotosDetailsBarSpec *barSpec;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool shouldAddActionButton;
@property (readonly) Class superclass;
@property (nonatomic) PXPhotosDetailsUIViewController *viewController;

- (void).cxx_destruct;
- (id)_activeMenuController;
- (id)_activePerformer;
- (id)_assetActionManager;
- (id)_assetCollection;
- (id)_assetCollectionActionManager;
- (id)_barAppearance;
- (id)_barButtonItemByActionType;
- (id)_barButtonItemCacheByBarItemIdentifier;
- (id)_barButtonItemForBarItem:(id)arg1 placement:(unsigned long long)arg2;
- (id)_barButtonItemsForBarItems:(id)arg1 placement:(unsigned long long)arg2;
- (id)_context;
- (id)_dataSource;
- (bool)_dismissViewControllerIfSafeAnimated:(bool)arg1;
- (id)_extendedTraitCollection;
- (id)_flexibleSpaceBarButtonItem;
- (void)_invalidateAssetActionManager;
- (void)_invalidateAssetCollectionActionManager;
- (id)_lastActionPerformer;
- (id)_localizedSelectionTitle;
- (id)_selectionManager;
- (void)_setActivePerformer:(id)arg1;
- (void)_setBarAppearance:(id)arg1;
- (void)_setLastActionPerformer:(id)arg1;
- (void)_setSelectionManager:(id)arg1;
- (void)_setShowTitleView:(bool)arg1;
- (bool)_shouldAddBarItemForBarItemIdentifier:(id)arg1;
- (bool)_shouldEnableActionWithBarItemIdentifier:(id)arg1;
- (bool)_showTitleView;
- (id)_sourceBarButtonItemForActionType:(id)arg1;
- (id)_titleView;
- (long long)_titleViewVerticalSizeClassForExtendedTraitCollection:(id)arg1;
- (void)_updateTitleViewAlpha;
- (id)_viewModel;
- (void)actionMenu:(id)arg1 actionPerformer:(id)arg2 didChangeState:(unsigned long long)arg3;
- (bool)actionMenu:(id)arg1 dismissViewController:(struct NSObject { Class x1; }*)arg2 completionHandler:(id /* block */)arg3;
- (bool)actionMenu:(id)arg1 presentViewController:(id)arg2;
- (void)actionMenuButtonItemTapped:(id)arg1;
- (void)actionPerformer:(id)arg1 didChangeState:(unsigned long long)arg2;
- (bool)actionPerformer:(id)arg1 dismissViewController:(struct NSObject { Class x1; }*)arg2 completionHandler:(id /* block */)arg3;
- (bool)actionPerformer:(id)arg1 presentViewController:(id)arg2;
- (void)cancelBarButtonItemTapped:(id)arg1;
- (id)createAssetActionManager;
- (id)createAssetCollectionActionManager;
- (id)createTitleView;
- (void)doneBarButtonItemTapped:(id)arg1;
- (void)faceModeButtonItemTapped:(id)arg1;
- (id)init;
- (id)initWithContext:(id)arg1 viewModel:(id)arg2 extendedTraitCollection:(id)arg3;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (void)photosDataSource:(id)arg1 didChange:(id)arg2;
- (void)prepareForPopoverPresentation:(id)arg1;
- (void)removeActionButton;
- (void)selectBarButtonItemTapped:(id)arg1;
- (void)setShouldAddActionButton:(bool)arg1;
- (void)set_activeMenuController:(id)arg1;
- (bool)shouldAddActionButton;
- (void)shouldShowTitleView:(bool)arg1 animated:(bool)arg2;
- (void)updateBars;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

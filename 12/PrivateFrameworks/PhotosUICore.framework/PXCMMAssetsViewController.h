<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXCMMAssetsViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXCMMAssetsViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXCMMAssetsViewController : PXCMMComponentViewController <PXActionPerformerDelegate, PXAssetsSceneDelegate, PXCMMBannerTileControllerDelegate, PXCMMEngineDrivenLayoutDelegate, PXCMMFooterViewModelActionDelegate, PXCMMProgressBannerViewLayoutDelegate, PXChangeObserver, PXContextualNotificationDelegate, PXOneUpPresentationDelegate, PXPhotosGlobalFooterViewDelegate, PXScrollViewControllerObserver, PXSwipeSelectionManagerDelegate, PXTileSource, UIViewControllerPreviewingDelegate> {
    NSSet * __hiddenAssetReferences;
    long long  __layoutType;
    bool  _actionInProgress;
    PXCMMAssetsProgressListener * _assetsProgressListenerForFooter;
    PXCMMAssetsProgressListener * _assetsProgressListenerForPoster;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentInset;
    <PXCMMAssetsViewControllerDelegate> * _delegate;
    struct { 
        bool shouldShowAddMoreButton; 
        bool didTapAddMoreButton; 
        bool oneUpPresentation; 
    }  _delegateRespondsTo;
    bool  _didIncrementNumberOfPresentableSendBacks;
    bool  _didIncrementNumberOfPresentedSendBacks;
    NSMutableSet * _inUseTiles;
    bool  _isWaitingForSendBackPresentationConfirmationTimeout;
    struct CGSize { 
        double width; 
        double height; 
    }  _knownReferenceSize;
    bool  _layoutAnimationsGloballyDisabled;
    PXSectionedLayoutEngine * _layoutEngine;
    PXLayoutGenerator * _layoutGenerator;
    PXUITapGestureRecognizer * _layoutTransitionGesture;
    UILongPressGestureRecognizer * _longPressGesture;
    PXCMMBannerTileController * _measuringBannerTile;
    PXCMMSendBackBannerView * _measuringSendBackBannerView;
    PXPhotosGlobalFooterView * _measuringStatusFooterView;
    PXAssetReference * _navigatedAssetReference;
    bool  _needsToPerformInitialSelection;
    <UIViewControllerPreviewing> * _previewingContext;
    PXCMMProgressBannerView * _progressBannerView;
    NSArray * _progressBannerViewConstraints;
    bool  _receivingActionButtonWasTapped;
    PXUIAssetsScene * _sceneController;
    PXUIScrollViewController * _scrollViewController;
    PXContextualNotification * _sendBackNotification;
    bool  _sendBackNotificationWasDiscarded;
    bool  _sendBackNotificationWasTapped;
    unsigned long long  _sendBackPresentationConfirmationGeneration;
    PXCMMSendBackSuggestionSource * _sendBackSuggestionSource;
    PXCMMSpec * _spec;
    PXCMMSpecManager * _specManager;
    PXCMMFooterViewModel * _statusFooterViewModel;
    PXSwipeSelectionManager * _swipeSelectionManager;
    PXUITapGestureRecognizer * _tapSelectionGesture;
    PXBasicTileAnimator * _tileAnimator;
    PXTilingController * _tilingController;
    PXUpdater * _updater;
    bool  _userSelectionEnabled;
}

@property (nonatomic, retain) NSSet *_hiddenAssetReferences;
@property (nonatomic) long long _layoutType;
@property (nonatomic, readonly) PXOneUpPresentation *_oneUpPresentation;
@property (getter=isActionInProgress, nonatomic) bool actionInProgress;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentInset;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PXCMMAssetsViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic) bool userSelectionEnabled;

- (void).cxx_destruct;
- (unsigned long long)_additionalTileCount;
- (bool)_areAllNotCopiedAssetsSelected;
- (long long)_assetImportStateAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1 withDataSource:(id)arg2;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })_assetIndexPathAtLocation:(struct CGPoint { double x1; double x2; })arg1 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })_assetIndexPathAtLocation:(struct CGPoint { double x1; double x2; })arg1 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2 kind:(unsigned long long)arg3;
- (id)_assetReferenceAtPoint:(struct CGPoint { double x1; double x2; })arg1 padding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (double)_bannerHeightFromReferenceSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)_canShowSendBackSuggestion;
- (void)_checkSendBackPresentationStatus;
- (void)_configureBannerTile:(id)arg1;
- (void)_configureLayout:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (id)_createAddButton;
- (id)_createBannerTileController;
- (id)_createNewLayout;
- (id)_createNewLayoutGeneratorWithReferenceSize:(struct CGSize { double x1; double x2; })arg1;
- (id)_createOverlayTileView;
- (id)_createPosterTileController;
- (id)_createSectionHeaderController;
- (id)_createSendBackBannerView;
- (id)_createSendBackFooter;
- (id)_createStatusFooter;
- (id)_createStatusTileView;
- (void)_deselectAllAssets;
- (void)_didFindPresentableSendBack;
- (void)_didPresentSendBack;
- (void)_handleLongPress:(id)arg1;
- (void)_handleSendBackPresentationConfirmationTimeoutForGeneration:(unsigned long long)arg1;
- (void)_handleTap:(id)arg1;
- (double)_headerHeightFromReferenceSize:(struct CGSize { double x1; double x2; })arg1 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (id)_hiddenAssetReferences;
- (id)_indexPathsForAssetReferences:(id)arg1 inDataSource:(id)arg2;
- (void)_invalidateLayoutGenerator;
- (void)_invokeSendBackAction;
- (bool)_isAssetAlreadyImportedAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1;
- (bool)_isAssetAlreadyImportedAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1 withEngineDrivenLayout:(id)arg2;
- (bool)_isLocationWithinCurrentLayoutBounds:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_isSendBackBannerViewContentsAtAllVisible;
- (bool)_isSendBackBannerViewContentsFullyVisible;
- (long long)_layoutType;
- (id)_oneUpPresentation;
- (void)_performInitialSelectionIfNeeded;
- (void)_performTilingChangeWithoutAnimationTransition:(id /* block */)arg1;
- (void)_preferredContentSizeChanged:(id)arg1;
- (double)_progressBannerViewLayoutHeight;
- (id)_regionOfInterestForAssetReference:(id)arg1;
- (void)_scheduleLayout;
- (void)_selectAllAssets;
- (void)_selectCuratedAssets;
- (void)_selectNonCopiedAssets;
- (void)_selectionModeDidChange;
- (double)_sendBackFooterHeightFromReferenceSize:(struct CGSize { double x1; double x2; })arg1;
- (void)_setHiddenAssetReferences:(id)arg1;
- (void)_setLayoutType:(long long)arg1;
- (bool)_shouldShowOneUpActions;
- (bool)_shouldShowProgressBanner;
- (double)_statusFooterHeightFromReferenceSize:(struct CGSize { double x1; double x2; })arg1 insets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (void)_toggleAssetSelectionAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1;
- (void)_transitionLayoutGesture:(id)arg1;
- (void)_updateAssetsScene;
- (void)_updateGestures;
- (void)_updateLayoutEngine;
- (void)_updatePlaceholder;
- (void)_updateProgressBannerViewConstraints;
- (void)_updateProgressBannerViewVisibility;
- (void)_updateSelectionEnabled;
- (void)_updateSelectionIfNeeded;
- (void)_updateSendBackNotification;
- (void)_updateStyle;
- (bool)actionPerformer:(id)arg1 dismissViewController:(struct NSObject { Class x1; }*)arg2 completionHandler:(id /* block */)arg3;
- (bool)actionPerformer:(id)arg1 presentViewController:(struct NSObject { Class x1; }*)arg2;
- (void)addButtonTapped:(id)arg1;
- (id)assetsScene:(id)arg1 layoutForDataSource:(id)arg2;
- (id)assetsScene:(id)arg1 transitionAnimationCoordinatorForChange:(id)arg2;
- (void)checkInTile:(void*)arg1 withIdentifier:(struct PXTileIdentifier { unsigned long long x1; unsigned long long x2[10]; })arg2;
- (void*)checkOutTileForIdentifier:(struct PXTileIdentifier { unsigned long long x1; unsigned long long x2[10]; })arg1 layout:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contextualNotification:(id)arg1 containingFrameInCoordinateSpace:(id)arg2;
- (void)contextualNotificationDidAppear:(id)arg1;
- (void)contextualNotificationDidDisappear:(id)arg1;
- (void)contextualNotificationWasDiscarded:(id)arg1;
- (void)contextualNotificationWasTapped:(id)arg1;
- (id)delegate;
- (void)didDismissPreviewViewController:(id)arg1 committing:(bool)arg2;
- (void)didPerformDeletionActionForFooterViewModel:(id)arg1;
- (void)didTapActionButtonInBannerTileController:(id)arg1;
- (double)engineDrivenLayout:(id)arg1 aspectRatioForItemAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg2;
- (long long)engineDrivenLayout:(id)arg1 assetStatusAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })engineDrivenLayout:(id)arg1 contentsRectForItemAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg2 forAspectRatio:(double)arg3;
- (bool)engineDrivenLayout:(id)arg1 shouldShowDimmingOverlayAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg2;
- (bool)engineDrivenLayout:(id)arg1 shouldShowStatusBadgeAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg2;
- (void)engineDrivenLayoutReferenceSizeDidChange:(id)arg1;
- (id)initWithSession:(id)arg1;
- (bool)isActionInProgress;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)oneUpPresentation:(id)arg1 regionOfInterestForAssetReference:(id)arg2;
- (void)oneUpPresentation:(id)arg1 scrollAssetReferenceToVisible:(id)arg2;
- (void)oneUpPresentation:(id)arg1 setHiddenAssetReferences:(id)arg2;
- (long long)oneUpPresentationActionContext:(id)arg1;
- (id)oneUpPresentationActionManager:(id)arg1;
- (id)oneUpPresentationActionManagerForPreviewing:(id)arg1;
- (id)oneUpPresentationDataSourceManager:(id)arg1;
- (id)oneUpPresentationImportStatusManager:(id)arg1;
- (id)oneUpPresentationInitialAssetReference:(id)arg1;
- (id)oneUpPresentationMediaProvider:(id)arg1;
- (long long)oneUpPresentationOrigin:(id)arg1;
- (void)photosGlobalFooterView:(id)arg1 presentViewController:(id)arg2;
- (id)preferredContainerViewForContextualNotification:(id)arg1;
- (void)presentSendBackNotification;
- (struct NSObject { Class x1; }*)previewViewControllerAtLocation:(struct CGPoint { double x1; double x2; })arg1 fromSourceView:(struct NSObject { Class x1; }*)arg2 outSourceRect:(out struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg3;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)progressBannerViewLayoutHeightDidChange:(id)arg1;
- (void)scrollViewControllerDidScroll:(id)arg1;
- (void)setActionInProgress:(bool)arg1;
- (void)setContentInset:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setUserSelectionEnabled:(bool)arg1;
- (void)set_hiddenAssetReferences:(id)arg1;
- (void)set_layoutType:(long long)arg1;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })swipeSelectionManager:(id)arg1 itemIndexPathAtLocation:(struct CGPoint { double x1; double x2; })arg2;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })swipeSelectionManager:(id)arg1 itemIndexPathClosestAboveLocation:(struct CGPoint { double x1; double x2; })arg2;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })swipeSelectionManager:(id)arg1 itemIndexPathClosestLeadingLocation:(struct CGPoint { double x1; double x2; })arg2;
- (bool)swipeSelectionManager:(id)arg1 shouldSelectItemAtIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg2;
- (bool)userSelectionEnabled;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

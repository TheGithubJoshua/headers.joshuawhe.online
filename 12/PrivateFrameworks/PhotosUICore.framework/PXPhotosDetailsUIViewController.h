<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXPhotosDetailsUIViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXPhotosDetailsUIViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXPhotosDetailsUIViewController : UIViewController <PLDismissableViewController, PXActionPerformerDelegate, PXChangeObserver, PXPurgeableController, PXScrollViewControllerObserver, PXUIViewControllerZoomTransitionEndPoint, PXWidgetCompositionDelegate, PXWidgetUnlockDelegate, UIViewControllerPreviewingDelegate, UIViewControllerPreviewingDelegate_Private> {
    Class  __barsControllerClass;
    PXWidgetComposition * __composition;
    bool  __hasAppeared;
    PXTilingController * __headerAssetWidgetTilingController;
    UIView * __headerTileView;
    PXPhotosDetailsHeaderTileWidget * __headerWidget;
    id /* block */  __ppt_allWidgetLoadingCompleteHandler;
    id /* block */  __ppt_variationsWidgetLoadingCompleteHandler;
    PXAssetCollectionActionController * __previewActionController;
    _PXPhotosDetailsPreviewOrbContext * __previewOrbContext;
    <PXUIWidget> * __previewWidget;
    <UIViewControllerPreviewing> * __previewingContext;
    PXUIScrollViewController * __scrollViewController;
    bool  __shouldFocusHeader;
    PXPhotosDetailsSpecManager * __specManager;
    PXSwipeSelectionManager * __swipeSelectionManager;
    id /* block */  __unlockHandler;
    id /* block */  __unlockStatus;
    PXPhotosDetailsAssetVariationsWidget * __variationsWidget;
    PXPhotosDetailsViewModel * __viewModel;
    NSMutableArray * __widgetDisablingDimmingViews;
    NSMapTable * __widgetOptions;
    PXWidgetSpec * __widgetSpec;
    NSArray * __widgets;
    <PXActionPerformerDelegate> * _actionPerformerDelegate;
    PXBarsController * _barsController;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentEdgeInsets;
    PXPhotosDetailsContext * _context;
    <PXPhotosDetailsUIViewControllerDelegate> * _delegate;
    struct { 
        bool requestDismissal; 
    }  _delegateRespondsTo;
    bool  _empty;
    unsigned long long  _occludedContentEdges;
    unsigned long long  _options;
    NSUserActivity * _siriActionActivity;
}

@property (nonatomic, readonly) Class _barsControllerClass;
@property (nonatomic, readonly) PXWidgetComposition *_composition;
@property (setter=_setHasAppeared:, nonatomic) bool _hasAppeared;
@property (nonatomic, readonly) PXTilingController *_headerAssetWidgetTilingController;
@property (setter=_setHeaderTileView:, nonatomic, retain) UIView *_headerTileView;
@property (nonatomic, readonly) PXPhotosDetailsHeaderTileWidget *_headerWidget;
@property (setter=_ppt_setAllWidgetLoadingCompleteHandler:, nonatomic, copy) id /* block */ _ppt_allWidgetLoadingCompleteHandler;
@property (setter=_ppt_setVariationsWidgetLoadingCompleteHandler:, nonatomic, copy) id /* block */ _ppt_variationsWidgetLoadingCompleteHandler;
@property (setter=_setPreviewActionController:, nonatomic, retain) PXAssetCollectionActionController *_previewActionController;
@property (setter=_setPreviewOrbContext:, nonatomic, retain) _PXPhotosDetailsPreviewOrbContext *_previewOrbContext;
@property (nonatomic, readonly) <PXUIWidget> *_previewWidget;
@property (setter=_setPreviewingContext:, nonatomic, retain) <UIViewControllerPreviewing> *_previewingContext;
@property (nonatomic, readonly) PXUIScrollViewController *_scrollViewController;
@property (setter=_setShouldFocusHeader:, nonatomic) bool _shouldFocusHeader;
@property (nonatomic, readonly) PXPhotosDetailsSpecManager *_specManager;
@property (setter=_setSwipeSelectionManager:, nonatomic, retain) PXSwipeSelectionManager *_swipeSelectionManager;
@property (nonatomic, readonly, copy) id /* block */ _unlockHandler;
@property (nonatomic, readonly, copy) id /* block */ _unlockStatus;
@property (nonatomic, readonly) PXPhotosDetailsAssetVariationsWidget *_variationsWidget;
@property (nonatomic, readonly) PXPhotosDetailsViewModel *_viewModel;
@property (nonatomic, readonly) NSMutableArray *_widgetDisablingDimmingViews;
@property (nonatomic, readonly) NSMapTable *_widgetOptions;
@property (setter=_setWidgetSpec:, nonatomic, retain) PXWidgetSpec *_widgetSpec;
@property (nonatomic, readonly) NSArray *_widgets;
@property (nonatomic) <PXActionPerformerDelegate> *actionPerformerDelegate;
@property (nonatomic, readonly) PXBarsController *barsController;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentEdgeInsets;
@property (nonatomic, readonly) PXPhotosDetailsContext *context;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PXPhotosDetailsUIViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isEmpty, nonatomic) bool empty;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool keepsSourceRegionOfInterestContent;
@property (nonatomic) unsigned long long occludedContentEdges;
@property (nonatomic, readonly) unsigned long long options;
@property (nonatomic, readonly) UIScrollView *ppt_scrollView;
@property (nonatomic, readonly) PXScrollViewController *scrollViewController;
@property (nonatomic, readonly) bool shouldUpdateStatusBarTitle;
@property (nonatomic, retain) NSUserActivity *siriActionActivity;
@property (readonly) Class superclass;

+ (void)preloadResources;

- (void).cxx_destruct;
- (Class)_barsControllerClass;
- (id)_composition;
- (bool)_dismissSelfIfSafeAnimated:(bool)arg1;
- (void)_ensureComposition;
- (void)_ensureScrollViewController;
- (void)_handleDeviceDidUnlock;
- (void)_handleWidgetsLoadingDelay;
- (bool)_hasAppeared;
- (id)_headerAssetWidgetTilingController;
- (id)_headerTileView;
- (id)_headerWidget;
- (void)_invalidateBarSpec;
- (void)_invalidateCompositionSpec;
- (void)_invalidateWidgetSpec;
- (void)_loadComposition;
- (void)_loadWidgets;
- (unsigned long long)_optionsForWidget:(id)arg1;
- (void)_performAddToMemoriesAnimation;
- (id)_photosDetailsContextForTransition:(id)arg1;
- (id)_photosDetailsContextForTransitionWithViewController:(id)arg1;
- (id /* block */)_ppt_allWidgetLoadingCompleteHandler;
- (void)_ppt_informWidgetsLoadedHandlerIfNeeded;
- (void)_ppt_setAllWidgetLoadingCompleteHandler:(id /* block */)arg1;
- (void)_ppt_setVariationsWidgetLoadingCompleteHandler:(id /* block */)arg1;
- (id /* block */)_ppt_variationsWidgetLoadingCompleteHandler;
- (id)_previewActionController;
- (id)_previewOrbContext;
- (id)_previewWidget;
- (id)_previewingContext;
- (id)_regionOfInterestForContext:(id)arg1;
- (id)_scrollViewController;
- (void)_setHasAppeared:(bool)arg1;
- (void)_setHeaderTileView:(id)arg1;
- (void)_setPreviewActionController:(id)arg1;
- (void)_setPreviewOrbContext:(id)arg1;
- (void)_setPreviewingContext:(id)arg1;
- (void)_setShouldFocusHeader:(bool)arg1;
- (void)_setSwipeSelectionManager:(id)arg1;
- (void)_setWidgetSpec:(id)arg1;
- (bool)_shouldFocusHeader;
- (bool)_shouldShowMovieHeader;
- (id)_specManager;
- (id)_swipeSelectionManager;
- (id /* block */)_unlockHandler;
- (id /* block */)_unlockStatus;
- (void)_updateAllWidgetsFaceModeState;
- (void)_updateAllWidgetsSelectionState;
- (void)_updateAllWidgetsSpec;
- (void)_updateBarSpec;
- (void)_updateCompositionSpec;
- (void)_updatePreviewActionController;
- (void)_updateScrollViewControllerContentInset;
- (void)_updateStatusBarTitle;
- (void)_updateTitleAndSubtitle;
- (void)_updateWidgetDisablingWithAnimationOptions:(id)arg1;
- (void)_updateWidgetSpec;
- (unsigned long long)_userEventSourceForDetailView:(id)arg1;
- (id)_variationsWidget;
- (id)_viewModel;
- (void)_viewWillLayoutBeforeAppearing;
- (id)_widgetAtLocation:(struct CGPoint { double x1; double x2; })arg1 inCoordinateSpace:(id)arg2;
- (id)_widgetDisablingDimmingViews;
- (id)_widgetOptions;
- (id)_widgetSpec;
- (id)_widgets;
- (void)actionPerformer:(id)arg1 didChangeState:(unsigned long long)arg2;
- (id)actionPerformerDelegate;
- (id)barsController;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentEdgeInsets;
- (id)contentScrollView;
- (id)context;
- (void)dealloc;
- (id)delegate;
- (void)didDismissPreviewViewController:(id)arg1 committing:(bool)arg2;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithContext:(id)arg1 configuration:(id)arg2;
- (id)initWithContext:(id)arg1 options:(unsigned long long)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isEmpty;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (unsigned long long)occludedContentEdges;
- (unsigned long long)options;
- (void)playMiroMovieWithCompletionHandler:(id /* block */)arg1;
- (void)ppt_navigateToMovieWithCompletionHandler:(id /* block */)arg1;
- (void)ppt_performBlockAfterAllWidgetLoadingCompletes:(id /* block */)arg1;
- (void)ppt_performBlockAfterVariationsWidgetLoadingCompletes:(id /* block */)arg1;
- (id)ppt_scrollView;
- (void)ppt_toggleDiscloseWidgets;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (id)preferredFocusEnvironments;
- (void)preloadWithSourceRegionOfInterest:(id)arg1 forTransition:(id)arg2;
- (bool)prepareForDismissingForced:(bool)arg1;
- (void)prepareForInteractiveTransition:(id)arg1;
- (id)previewActionItems;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)purgeIfPossible;
- (bool)px_canPerformPinchTransitionWithMasterViewController:(id)arg1;
- (bool)px_canPerformSwipeDownTransitionWithMasterViewController:(id)arg1;
- (bool)px_canPerformZoomTransitionWithDetailViewController:(id)arg1;
- (bool)px_canPerformZoomTransitionWithMasterViewController:(id)arg1;
- (id)px_diagnosticsItemProvidersForPoint:(struct CGPoint { double x1; double x2; })arg1 inCoordinateSpace:(id)arg2;
- (id)px_endPointForTransition:(id)arg1;
- (bool)px_isSnapBackDestination;
- (id)regionOfInterestForTransition:(id)arg1;
- (id)removeBackgroundColorForTransition:(id)arg1;
- (void)restoreBackgroundColor:(id)arg1 forTransition:(id)arg2;
- (void)scrollRegionOfInterestToVisible:(id)arg1 forTransition:(id)arg2;
- (id)scrollViewController;
- (void)scrollViewControllerDidScroll:(id)arg1;
- (void)scrollViewControllerWillBeginScrolling:(id)arg1;
- (void)scrollViewControllerWillLayoutSubviews:(id)arg1;
- (void)setActionPerformerDelegate:(id)arg1;
- (void)setContentEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setEmpty:(bool)arg1;
- (void)setOccludedContentEdges:(unsigned long long)arg1;
- (void)setSiriActionActivity:(id)arg1;
- (bool)shouldUpdateStatusBarTitle;
- (id)siriActionActivity;
- (id)standaloneMapViewController;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)widget:(id)arg1 performAfterUnlockingDeviceIfNecessary:(id /* block */)arg2 failurehandler:(id /* block */)arg3;
- (void)widgetComposition:(id)arg1 didUpdateCompositionWithDefaultAnimationOptions:(id)arg2;
- (long long)widgetComposition:(id)arg1 loadingPriorityForWidget:(id)arg2;
- (bool)widgetComposition:(id)arg1 requestViewControllerDismissalAnimated:(bool)arg2;
- (bool)widgetComposition:(id)arg1 shouldUseEdgeToEdgeLayoutForWidget:(id)arg2;
- (struct NSObject { Class x1; }*)widgetComposition:(id)arg1 viewControllerHostingWidget:(id)arg2;
- (bool)widgetComposition:(id)arg1 widget:(id)arg2 transitionToViewController:(id)arg3 withTransitionType:(long long)arg4;
- (void)widgetComposition:(id)arg1 widgetHasLoadedContentDataDidChange:(id)arg2;
- (bool)widgetCompositionHasContentAbove:(id)arg1;
- (bool)widgetDeviceIsUnlocked:(id)arg1;
- (id)zoomAnimationCoordinatorForZoomTransition:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

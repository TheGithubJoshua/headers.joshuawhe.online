<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXDiagnosticsCurationViewCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXDiagnosticsCurationViewCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXDiagnosticsCurationViewCell : UICollectionViewCell {
    double  _aestheticScore;
    PXScoreView * _aestheticScoreView;
    PXTextSymbolView * _blurryBadgeView;
    NSString * _clusterState;
    PXStateBadgeView * _clusterStateBadgeView;
    double  _contentScore;
    PXScoreView * _contentScoreView;
    NSDictionary * _debugInfo;
    PXSymbolBadgeView * _dedupedSymbolBadgeView;
    NSNumber * _dedupedSymbolIndex;
    PXDedupingBadgeView * _dedupingBadgeView;
    NSString * _dedupingType;
    PXTextSymbolView * _favoriteBadgeView;
    UIImageView * _imageView;
    unsigned long long  _index;
    PXIndexView * _indexView;
    bool  _isBlurry;
    bool  _isFavorite;
    bool  _isSDOFOrHDR;
    bool  _isUtility;
    NSString * _representedAssetIdentifier;
    PXTextSymbolView * _sdofOrHDRBadgeView;
    NSString * _state;
    PXStateBadgeView * _stateBadgeView;
    PXSymbolBadgeView * _symbolBadgeView;
    NSNumber * _symbolIndex;
    UIImage * _thumbnailImage;
    PXTextSymbolView * _utilityBadgeView;
}

@property (nonatomic) double aestheticScore;
@property (getter=isBlurry, nonatomic) bool blurry;
@property (nonatomic, retain) NSString *clusterState;
@property (nonatomic) double contentScore;
@property (nonatomic, retain) NSDictionary *debugInfo;
@property (nonatomic, retain) NSNumber *dedupedSymbolIndex;
@property (nonatomic, retain) NSString *dedupingType;
@property (getter=isFavorite, nonatomic) bool favorite;
@property (nonatomic) unsigned long long index;
@property (nonatomic, retain) NSString *representedAssetIdentifier;
@property (getter=isSDOFOrHDR, setter=setSDOFOrHDR:, nonatomic) bool sdofOrHDR;
@property (nonatomic, retain) NSString *state;
@property (nonatomic, retain) NSNumber *symbolIndex;
@property (nonatomic, retain) UIImage *thumbnailImage;
@property (getter=isUtility, nonatomic) bool utility;

+ (double)cellHeightWithCellWidth:(double)arg1;

- (void).cxx_destruct;
- (double)aestheticScore;
- (id)clusterState;
- (double)contentScore;
- (id)debugInfo;
- (id)dedupedSymbolIndex;
- (id)dedupingType;
- (unsigned long long)index;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isBlurry;
- (bool)isFavorite;
- (bool)isSDOFOrHDR;
- (bool)isUtility;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)representedAssetIdentifier;
- (void)setAestheticScore:(double)arg1;
- (void)setBlurry:(bool)arg1;
- (void)setClusterParity:(unsigned long long)arg1;
- (void)setClusterState:(id)arg1;
- (void)setContentScore:(double)arg1;
- (void)setDebugInfo:(id)arg1;
- (void)setDedupedSymbolIndex:(id)arg1;
- (void)setDedupingType:(id)arg1;
- (void)setFavorite:(bool)arg1;
- (void)setIndex:(unsigned long long)arg1;
- (void)setRepresentedAssetIdentifier:(id)arg1;
- (void)setSDOFOrHDR:(bool)arg1;
- (void)setState:(id)arg1;
- (void)setSymbolIndex:(id)arg1;
- (void)setThumbnailImage:(id)arg1;
- (void)setUtility:(bool)arg1;
- (id)state;
- (id)symbolIndex;
- (id)thumbnailImage;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

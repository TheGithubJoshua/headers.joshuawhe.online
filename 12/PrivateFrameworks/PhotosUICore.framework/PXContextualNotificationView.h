<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXContextualNotificationView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXContextualNotificationView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXContextualNotificationView : UIView <PXChangeObserver> {
    AVPlayerItem * __loopingPlayerItem;
    double  __mediaAspectRatio;
    PXCapsuleButton * _actionButton;
    PXContextualNotificationChevronView * _chevronView;
    NSArray * _constraints;
    UIView * _contentView;
    PXContextualNotification * _contextualNotification;
    UIImageView * _dismissIconView;
    PXImageRequester * _imageRequester;
    AVAsset * _loopingVideoAsset;
    AVVideoComposition * _loopingVideoComposition;
    PXVideoPlayerView * _mediaView;
    NSLayoutConstraint * _mediaViewHeightConstraint;
    NSString * _message;
    UILabel * _messageLabel;
    UIImage * _placeholderImage;
    long long  _style;
    NSString * _title;
    UIImage * _titleIcon;
    UIImageView * _titleIconView;
    UILabel * _titleLabel;
    bool  _useRegularHitTesting;
}

@property (setter=_setLoopingPlayerItem:, nonatomic, retain) AVPlayerItem *_loopingPlayerItem;
@property (setter=_setMediaAspectRatio:, nonatomic) double _mediaAspectRatio;
@property (nonatomic, retain) PXCapsuleButton *actionButton;
@property (nonatomic, retain) PXContextualNotificationChevronView *chevronView;
@property (nonatomic, copy) NSArray *constraints;
@property (nonatomic, readonly) UIView *contentView;
@property (nonatomic) PXContextualNotification *contextualNotification;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UIImageView *dismissIconView;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PXImageRequester *imageRequester;
@property (nonatomic, copy) AVAsset *loopingVideoAsset;
@property (nonatomic, copy) AVVideoComposition *loopingVideoComposition;
@property (nonatomic, readonly) PXVideoPlayerView *mediaView;
@property (nonatomic, readonly) NSLayoutConstraint *mediaViewHeightConstraint;
@property (nonatomic, copy) NSString *message;
@property (nonatomic, readonly) UILabel *messageLabel;
@property (nonatomic, retain) UIImage *placeholderImage;
@property (nonatomic, readonly) long long style;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, retain) UIImage *titleIcon;
@property (nonatomic, readonly) UIImageView *titleIconView;
@property (nonatomic, readonly) UILabel *titleLabel;
@property (nonatomic) bool useRegularHitTesting;

- (void).cxx_destruct;
- (void)_handleActionButton:(id)arg1;
- (void)_handleDidSetVideoAudioSession;
- (id)_loopingPlayerItem;
- (double)_mediaAspectRatio;
- (void)_preferredContentSizeChanged:(id)arg1;
- (void)_setLoopingPlayerItem:(id)arg1;
- (void)_setMediaAspectRatio:(double)arg1;
- (void)_startLoopingWithItem:(id)arg1;
- (void)_updateLoopingPlayerItem;
- (void)_updateMessageLabelForCMMCard;
- (id)actionButton;
- (id)chevronView;
- (id)constraints;
- (id)contentView;
- (id)contextualNotification;
- (id)dismissIconView;
- (id)imageRequester;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 style:(long long)arg2;
- (bool)isPointInsideDismissArea:(struct CGPoint { double x1; double x2; })arg1;
- (bool)isPointInsidePassthroughArea:(struct CGPoint { double x1; double x2; })arg1;
- (id)loopingVideoAsset;
- (id)loopingVideoComposition;
- (id)mediaView;
- (id)mediaViewHeightConstraint;
- (id)message;
- (id)messageLabel;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)placeholderImage;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)setActionButton:(id)arg1;
- (void)setChevronView:(id)arg1;
- (void)setConstraints:(id)arg1;
- (void)setContextualNotification:(id)arg1;
- (void)setImageRequester:(id)arg1;
- (void)setLoopingVideoAsset:(id)arg1;
- (void)setLoopingVideoComposition:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)setPlaceholderImage:(id)arg1;
- (void)setPlaceholderImage:(id)arg1 imageRequester:(id)arg2;
- (void)setTitle:(id)arg1;
- (void)setTitleIcon:(id)arg1;
- (void)setUseRegularHitTesting:(bool)arg1;
- (long long)style;
- (id)title;
- (id)titleIcon;
- (id)titleIconView;
- (id)titleLabel;
- (void)updateConstraints;
- (bool)useRegularHitTesting;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXScrollViewSpeedometer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXScrollViewSpeedometer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXScrollViewSpeedometer : PXObservable <PXScrollViewControllerObserver> {
    double  __lastTime;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  __lastVisibleRect;
    long long  __nextRegime;
    long long  __nextRegimeCount;
    NSTimer * __timeoutTimer;
    bool  _hasRampedUpForCurrentAnimatedScroll;
    long long  _previousRegime;
    long long  _regime;
    struct CGPoint { 
        double x; 
        double y; 
    }  _scrollAcceleration;
    struct CGPoint { 
        double x; 
        double y; 
    }  _scrollVelocity;
    PXScrollViewController * _scrollViewController;
}

@property (setter=_setLastTime:, nonatomic) double _lastTime;
@property (setter=_setLastVisibleRect:, nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _lastVisibleRect;
@property (setter=_setNextRegime:, nonatomic) long long _nextRegime;
@property (setter=_setNextRegimeCount:, nonatomic) long long _nextRegimeCount;
@property (setter=_setTimeoutTimer:, nonatomic, retain) NSTimer *_timeoutTimer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasRampedUpForCurrentAnimatedScroll;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long previousRegime;
@property (nonatomic, readonly) long long regime;
@property (nonatomic) struct CGPoint { double x1; double x2; } scrollAcceleration;
@property (nonatomic) struct CGPoint { double x1; double x2; } scrollVelocity;
@property (nonatomic, readonly) PXScrollViewController *scrollViewController;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_handleScrollEvent:(id)arg1 didScrollingEnd:(bool)arg2;
- (void)_handleTimeoutTimer:(id)arg1;
- (double)_lastTime;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_lastVisibleRect;
- (long long)_nextRegime;
- (long long)_nextRegimeCount;
- (void)_rescheduleTimeout;
- (void)_setLastTime:(double)arg1;
- (void)_setLastVisibleRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_setNextRegime:(long long)arg1;
- (void)_setNextRegimeCount:(long long)arg1;
- (void)_setPreviousRegime:(long long)arg1;
- (void)_setRegime:(long long)arg1;
- (void)_setTimeoutTimer:(id)arg1;
- (id)_timeoutTimer;
- (void)_updateScrollRegime;
- (id)description;
- (void)didPerformChanges;
- (double)fastLowerThreshold;
- (double)fastUpperThreshold;
- (bool)hasRampedUpForCurrentAnimatedScroll;
- (id)init;
- (id)initWithScrollController:(id)arg1;
- (double)mediumLowerThreshold;
- (double)mediumUpperThreshold;
- (id)mutableChangeObject;
- (long long)previousRegime;
- (long long)regime;
- (struct CGPoint { double x1; double x2; })scrollAcceleration;
- (struct CGPoint { double x1; double x2; })scrollVelocity;
- (id)scrollViewController;
- (void)scrollViewControllerDidEndScrolling:(id)arg1;
- (void)scrollViewControllerDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewControllerDidScroll:(id)arg1;
- (void)scrollViewControllerWillBeginScrolling:(id)arg1;
- (void)scrollViewControllerWillBeginScrollingAnimation:(id)arg1 towardsContentEdges:(unsigned long long)arg2;
- (void)setHasRampedUpForCurrentAnimatedScroll:(bool)arg1;
- (void)setScrollAcceleration:(struct CGPoint { double x1; double x2; })arg1;
- (void)setScrollVelocity:(struct CGPoint { double x1; double x2; })arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

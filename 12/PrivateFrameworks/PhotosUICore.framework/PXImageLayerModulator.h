<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXImageLayerModulator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXImageLayerModulator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXImageLayerModulator : NSObject <ISBasePlayerUIViewChangeObserver, PXMutableImageLayerModulator_Private> {
    long long  _contentType;
    bool  _displayingVideoComplement;
    bool  _enabled;
    CAFilter * _filter;
    long long  _filterType;
    CALayer * _filteredLayer;
    float  _hdrGain;
    double  _intensity;
    double  _intensityAnimationDuration;
    bool  _isPerformingChanges;
    bool  _isPerformingUpdates;
    CALayer * _layer;
    NSString * _layerFilterIntensityKeyPath;
    ISLivePhotoUIView * _livePhotoView;
    struct { 
        bool filteredLayer; 
        bool displayingVideoComplement; 
        bool filterIntensity; 
    }  _needsUpdateFlags;
}

@property (nonatomic, readonly) long long contentType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDisplayingVideoComplement, nonatomic, readonly) bool displayingVideoComplement;
@property (getter=isEnabled, nonatomic, readonly) bool enabled;
@property (nonatomic, readonly) CAFilter *filter;
@property (nonatomic, readonly) long long filterType;
@property (nonatomic, retain) CALayer *filteredLayer;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) float hdrGain;
@property (nonatomic, readonly) double intensity;
@property (nonatomic) double intensityAnimationDuration;
@property (nonatomic, readonly) CALayer *layer;
@property (nonatomic, readonly) NSString *layerFilterIntensityKeyPath;
@property (nonatomic, readonly) ISLivePhotoUIView *livePhotoView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addFilterToLayer:(id)arg1;
- (void)_invalidateDisplayingVideoComplement;
- (void)_invalidateFilterIntensity;
- (void)_invalidateFilteredLayer;
- (bool)_needsUpdate;
- (void)_removeFilterFromLayer:(id)arg1;
- (void)_setNeedsUpdate;
- (void)_updateDisplayingVideoComplementIfNeeded;
- (void)_updateFilterIntensityIfNeeded;
- (void)_updateFilteredLayerIfNeeded;
- (void)_updateIfNeeded;
- (void)basePlayerUIView:(id)arg1 didChange:(unsigned long long)arg2 withAnimationDuration:(double)arg3;
- (long long)contentType;
- (id)filter;
- (long long)filterType;
- (id)filteredLayer;
- (float)hdrGain;
- (id)init;
- (id)initWithContentType:(long long)arg1 filterType:(long long)arg2 hdrGain:(float)arg3;
- (double)intensity;
- (double)intensityAnimationDuration;
- (bool)isDisplayingVideoComplement;
- (bool)isEnabled;
- (id)layer;
- (id)layerFilterIntensityKeyPath;
- (id)livePhotoView;
- (void)performChanges:(id /* block */)arg1;
- (void)performChanges_Private:(id /* block */)arg1;
- (void)prepareForReuse;
- (void)setDisplayingVideoComplement:(bool)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setFilteredLayer:(id)arg1;
- (void)setIntensity:(double)arg1;
- (void)setIntensityAnimationDuration:(double)arg1;
- (void)setLayer:(id)arg1;
- (void)setLivePhotoView:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXLabelSpec.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXLabelSpec.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXLabelSpec : PXViewSpec {
    bool  _adjustsFontSizeToFitWidth;
    bool  _allowTruncation;
    long long  _capitalization;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentInsets;
    long long  _fallbackCapitalization;
    NSDictionary * _fallbackTextAttributes;
    struct UIFont { Class x1; } * _font;
    double  _minimumScaleFactor;
    double  _minimumTruncatedScaleFactor;
    unsigned long long  _numberOfLines;
    long long  _textAlignment;
    NSDictionary * _textAttributes;
    struct UIColor { Class x1; } * _textColor;
    long long  _verticalAlignment;
}

@property (nonatomic) bool adjustsFontSizeToFitWidth;
@property (nonatomic) bool allowTruncation;
@property (nonatomic) long long capitalization;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentInsets;
@property (nonatomic) long long fallbackCapitalization;
@property (nonatomic, copy) NSDictionary *fallbackTextAttributes;
@property (nonatomic, copy) UIFont *font;
@property (nonatomic) double minimumScaleFactor;
@property (nonatomic) double minimumTruncatedScaleFactor;
@property (nonatomic) unsigned long long numberOfLines;
@property (nonatomic) long long textAlignment;
@property (nonatomic, copy) NSDictionary *textAttributes;
@property (nonatomic, copy) UIColor *textColor;
@property (nonatomic) long long verticalAlignment;

- (void).cxx_destruct;
- (bool)adjustsFontSizeToFitWidth;
- (bool)allowTruncation;
- (long long)capitalization;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInsets;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)fallbackCapitalization;
- (id)fallbackTextAttributes;
- (struct UIFont { Class x1; }*)font;
- (unsigned long long)hash;
- (id)init;
- (bool)isEqual:(id)arg1;
- (double)minimumScaleFactor;
- (double)minimumTruncatedScaleFactor;
- (unsigned long long)numberOfLines;
- (void)setAdjustsFontSizeToFitWidth:(bool)arg1;
- (void)setAllowTruncation:(bool)arg1;
- (void)setCapitalization:(long long)arg1;
- (void)setContentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setFallbackCapitalization:(long long)arg1;
- (void)setFallbackTextAttributes:(id)arg1;
- (void)setFont:(struct UIFont { Class x1; }*)arg1;
- (void)setMinimumScaleFactor:(double)arg1;
- (void)setMinimumTruncatedScaleFactor:(double)arg1;
- (void)setNumberOfLines:(unsigned long long)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setTextAttributes:(id)arg1;
- (void)setTextColor:(struct UIColor { Class x1; }*)arg1;
- (void)setVerticalAlignment:(long long)arg1;
- (long long)textAlignment;
- (id)textAttributes;
- (struct UIColor { Class x1; }*)textColor;
- (long long)verticalAlignment;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

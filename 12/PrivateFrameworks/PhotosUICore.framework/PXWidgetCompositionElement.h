<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXWidgetCompositionElement.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXWidgetCompositionElement.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXWidgetCompositionElement : NSObject <PXWidgetBarDelegate, PXWidgetDelegate> {
    PXWidgetBar * __footer;
    PXWidgetBar * __header;
    bool  __isNotifyingWidget;
    NSHashTable * __observers;
    PXTilingController * _animationOptionsOriginatingTilingController;
    <PXWidgetCompositionElementDelegate> * _delegate;
    struct { 
        bool respondsToTransitionToViewControllerPreferredTransitionType; 
        bool respondsToRequestViewControllerDismissalAnimated; 
    }  _delegateFlags;
    bool  _isPerformingChanges;
    PXScrollViewController * _scrollViewController;
    bool  _shouldLoadWidgetContent;
    PXWidgetCompositionSpec * _spec;
    <PXWidget> * _widget;
    struct CGSize { 
        double width; 
        double height; 
    }  _widgetContentSize;
}

@property (nonatomic, readonly) PXWidgetBar *_footer;
@property (nonatomic, readonly) PXWidgetBar *_header;
@property (setter=_setNotifyingWidget:, nonatomic) bool _isNotifyingWidget;
@property (nonatomic, readonly) NSHashTable *_observers;
@property (nonatomic, readonly) PXTilingController *animationOptionsOriginatingTilingController;
@property (nonatomic, readonly) PXTilingController *contentTilingController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PXWidgetCompositionElementDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PXTilingController *footerTilingController;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PXTilingController *headerTilingController;
@property (nonatomic, readonly) PXScrollViewController *scrollViewController;
@property (nonatomic) bool shouldLoadWidgetContent;
@property (nonatomic, retain) PXWidgetCompositionSpec *spec;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <PXWidget> *widget;
@property (nonatomic) struct CGSize { double x1; double x2; } widgetContentSize;

+ (id)elementWithWidget:(id)arg1 scrollViewController:(id)arg2;
+ (Class)footerBarClass;
+ (Class)headerBarClass;

- (void).cxx_destruct;
- (id)_footer;
- (id)_header;
- (void)_invalidateFooter;
- (void)_invalidateHeader;
- (bool)_isNotifyingWidget;
- (void)_notifyWidgetUsingBlock:(id /* block */)arg1;
- (id)_observers;
- (void)_performChanges:(id /* block */)arg1 withAnimationOptions:(id)arg2;
- (void)_performContentChangeWhenSafe:(id /* block */)arg1;
- (void)_setNotifyingWidget:(bool)arg1;
- (void)_updateFooter;
- (void)_updateHeader;
- (id)animationOptionsOriginatingTilingController;
- (id)contentTilingController;
- (id)delegate;
- (id)extendedTraitCollection;
- (id)footerTilingController;
- (id)headerTilingController;
- (id)init;
- (id)initWithWidget:(id)arg1 scrollViewController:(id)arg2;
- (void)prepare;
- (void)registerObserver:(id)arg1;
- (void)saveAnchoring;
- (id)scrollViewController;
- (void)setDelegate:(id)arg1;
- (void)setShouldLoadWidgetContent:(bool)arg1;
- (void)setSpec:(id)arg1;
- (void)setWidgetContentSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)shouldLoadWidgetContent;
- (id)spec;
- (void)unregisterObserver:(id)arg1;
- (id)widget;
- (void)widget:(id)arg1 animateChanges:(id /* block */)arg2 withAnimationOptions:(id)arg3;
- (bool)widget:(id)arg1 requestViewControllerDismissalAnimated:(bool)arg2;
- (bool)widget:(id)arg1 transitionToViewController:(struct NSObject { Class x1; }*)arg2 withTransitionType:(long long)arg3;
- (void)widgetBarDidSelectDisclosureAffordance:(id)arg1;
- (void)widgetBarDidSelectSubtitle:(id)arg1;
- (struct CGSize { double x1; double x2; })widgetContentSize;
- (long long)widgetDefaultContentViewAnchoringTypeForDisclosureHeightChange:(id)arg1;
- (id)widgetExtendedTraitCollection:(id)arg1;
- (void)widgetHasLoadedContentDataDidChange:(id)arg1;
- (void)widgetInvalidateContentLayoutStyle:(id)arg1;
- (void)widgetInvalidateContentViewAnchoringType:(id)arg1;
- (void)widgetLocalizedCaptionDidChange:(id)arg1;
- (void)widgetLocalizedDisclosureTitleDidChange:(id)arg1;
- (void)widgetLocalizedSubtitleDidChange:(id)arg1;
- (void)widgetLocalizedTitleDidChange:(id)arg1;
- (void)widgetPreferredContentHeightForWidthDidChange:(id)arg1;
- (void)widgetRequestFocus:(id)arg1;
- (id)widgetScrollViewControllerHostingWidget:(id)arg1;
- (struct NSObject { Class x1; }*)widgetViewControllerHostingWidget:(id)arg1;
- (struct NSObject { Class x1; }*)widgetViewHostingGestureRecognizers:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

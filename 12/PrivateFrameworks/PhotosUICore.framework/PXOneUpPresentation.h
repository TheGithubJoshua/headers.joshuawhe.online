<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PXOneUpPresentation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosUICore.framework/PXOneUpPresentation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore (3462.11.110)
 */

@interface PXOneUpPresentation : NSObject {
    <PXOneUpPresentationImplementationDelegate> * __implementationDelegate;
    <PXOneUpPresentationDelegate> * _delegate;
    struct { 
        bool respondsToPhotosDetailsContext; 
        bool respondsToInitialAssetReference; 
        bool respondsToCurrentImageForAssetReference; 
        bool respondsToRegionOfInterestForAssetReferenceInCoordinateSpace; 
        bool respondsToScrollAssetReferenceToVisible; 
        bool respondsToSetHiddenAssetReferences; 
        bool respondsToShouldAutoPlay; 
        bool respondsToActionManager; 
        bool respondsToActionManagerForPreviewing; 
        bool respondsToActionContext; 
        bool respondsToGestureProvider; 
        bool respondsToImportStatusManager; 
        bool respondsToOrigin; 
    }  _delegateFlags;
    bool  _enabled;
    <PXOneUpPresentationImplementationDelegate> * _implementationDelegate;
    struct { 
        bool respondsToPresentingViewControllerViewWillAppear; 
        bool respondsToPresentingViewControllerViewDidAppear; 
        bool respondsToPresentingViewControllerViewWillDisappear; 
        bool respondsToPresentingViewControllerViewDidDisappear; 
        bool respondsToCanStart; 
        bool respondsToCanStop; 
        bool respondsToInvalidatePresentingGeometry; 
        bool respondsToHandlePresentingPinchGestureRecognizer; 
    }  _implementationDelegateFlags;
    UIViewController * _originalPresentingViewController;
    UIViewController * _presentingViewController;
}

@property (setter=_setImplementationDelegate:, nonatomic) <PXOneUpPresentationImplementationDelegate> *_implementationDelegate;
@property (nonatomic, readonly) long long actionContext;
@property (nonatomic, readonly) PXAssetActionManager *actionManager;
@property (nonatomic, readonly) PXAssetActionManager *actionManagerForPreviewing;
@property (nonatomic, readonly) bool canStart;
@property (nonatomic, readonly) bool canStop;
@property (nonatomic, readonly) PXAssetsDataSourceManager *dataSourceManager;
@property (nonatomic) <PXOneUpPresentationDelegate> *delegate;
@property (getter=isEnabled, nonatomic) bool enabled;
@property (nonatomic, readonly) PXGestureProvider *gestureProvider;
@property (nonatomic) <PXOneUpPresentationImplementationDelegate> *implementationDelegate;
@property (nonatomic, readonly) <PXImportStatusManager> *importStatusManager;
@property (nonatomic, readonly) PXAssetReference *initialAssetReference;
@property (nonatomic, readonly) PXUIMediaProvider *mediaProvider;
@property (nonatomic, readonly) long long origin;
@property (nonatomic) UIViewController *originalPresentingViewController;
@property (nonatomic, readonly) PXPhotosDetailsContext *photosDetailsContext;
@property (nonatomic, readonly) UIViewController *presentingViewController;
@property (nonatomic, readonly) bool shouldAutoPlay;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

- (void).cxx_destruct;
- (id)_implementationDelegate;
- (void)_setImplementationDelegate:(id)arg1;
- (void)_updateImplementationDelegate;
- (long long)actionContext;
- (id)actionManager;
- (id)actionManagerForPreviewing;
- (bool)canStart;
- (bool)canStop;
- (void)commitPreviewViewController:(id)arg1;
- (id)currentImageForAssetReference:(id)arg1;
- (id)dataSourceManager;
- (id)delegate;
- (void)didDismissPreviewViewController:(id)arg1 committing:(bool)arg2;
- (id)gestureProvider;
- (bool)handlePresentingPinchGestureRecognizer:(id)arg1;
- (id)implementationDelegate;
- (id)importStatusManager;
- (id)init;
- (id)initWithPresentingViewController:(id)arg1;
- (id)initialAssetReference;
- (void)invalidatePresentingGeometry;
- (bool)isEnabled;
- (id)mediaProvider;
- (long long)origin;
- (id)originalPresentingViewController;
- (id)photosDetailsContext;
- (id)presentingViewController;
- (void)presentingViewControllerViewDidAppear:(bool)arg1;
- (void)presentingViewControllerViewDidDisappear:(bool)arg1;
- (void)presentingViewControllerViewWillAppear:(bool)arg1;
- (void)presentingViewControllerViewWillDisappear:(bool)arg1;
- (id)previewViewControllerAllowingActions:(bool)arg1;
- (id)regionOfInterestForAssetReference:(id)arg1;
- (void)scrollAssetReferenceToVisible:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setHiddenAssetReferences:(id)arg1;
- (void)setImplementationDelegate:(id)arg1;
- (void)setOriginalPresentingViewController:(id)arg1;
- (bool)shouldAutoPlay;
- (bool)startAnimated:(bool)arg1 interactiveMode:(long long)arg2;
- (void)stopAnimated:(bool)arg1;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

- (id)defaultImplementationDelegate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

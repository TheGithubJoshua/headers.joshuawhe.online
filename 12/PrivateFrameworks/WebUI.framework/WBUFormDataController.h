<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WBUFormDataController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WebUI.framework/WBUFormDataController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WebUI.framework/WebUI (1.0)
 */

@interface WBUFormDataController : WBSFormDataController <MCProfileConnectionObserver, WBSFormAutoFillCorrectionManagerDelegate, WBSFormFieldClassificationCorrectorDelegate> {
    WBSFormAutoFillCorrectionManager * _autoFillCorrectionManager;
    WBSFormAutoFillParsecFeedbackProcessor * _autoFillFeedbackProcessor;
    int  _cachedAutoFillRestrictionValue;
    bool  _savePending;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) CNContact *me;
@property (nonatomic) bool shouldAutoFillFromAddressBook;
@property (nonatomic) bool shouldAutoFillFromCreditCardData;
@property (nonatomic) bool shouldAutoFillPasswords;
@property (readonly) Class superclass;

+ (id)_meCard;
+ (id)_stringForCNContactObject:(id)arg1 contactObjectComponent:(id)arg2;
+ (bool)contactIsMe:(id)arg1;
+ (bool)contactStoreHasMeCard:(id)arg1;
+ (bool)keychainSyncEnabled;
+ (id)localizedLowercaseContactProperty:(id)arg1;
+ (id)valueStringForMatch:(id)arg1;

- (void).cxx_destruct;
- (id)_addressBookMatchesForFullNameForContact:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (id)_autoFillCorrectionManager;
- (id)_credentialForLoginForm:(id)arg1 inFrame:(id)arg2 completingPartialUser:(bool)arg3 matches:(id*)arg4 potentialMatches:(id*)arg5;
- (id)_credentialMatchesEligibleForUpdateForURL:(id)arg1 username:(id)arg2 oldPassword:(id)arg3;
- (id)_displayDataWithTextField:(id)arg1 displayedInQuickType:(bool)arg2 prefix:(id)arg3;
- (void)_processCorrectionsForFormWithDomain:(id)arg1 formMetadata:(id)arg2 uniqueIDsOfControlsThatWereAutoFilled:(id)arg3;
- (id)_relatedCredentialMatchesToUpdateForUser:(id)arg1 protectionSpace:(id)arg2 oldCredential:(id*)arg3 matchesForCurrentHost:(id*)arg4 matchesForAssociatedDomains:(id*)arg5;
- (id)_relatedCredentialMatchesToUpdateForUser:(id)arg1 protectionSpace:(id)arg2 oldCredential:(id*)arg3 matchesForCurrentHost:(id*)arg4 matchesForAssociatedDomains:(id*)arg5 haveExistingCredentialWithSameUsernameAndDifferentPassword:(bool*)arg6;
- (void)_replaceCredentialsWithDontSaveMarkerForProtectionSpace:(id)arg1;
- (bool)_saveUser:(id)arg1 password:(id)arg2 forURL:(id)arg3 formType:(unsigned long long)arg4 promptingPolicy:(long long)arg5 webView:(id)arg6 completionHandler:(id /* block */)arg7;
- (bool)_shouldSaveCreditCardDataInWebView:(id)arg1 frame:(id)arg2;
- (bool)_shouldSaveUsernamesAndPasswordsForURL:(id)arg1 inWebView:(id)arg2;
- (bool)_shouldTryToSaveCredentialsFromLastForm:(id)arg1 currentFormMetadata:(id)arg2 frame:(id)arg3;
- (void)_showCreditCardPromptForWebView:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_showPasswordPromptForWebView:(id)arg1 formType:(unsigned long long)arg2 username:(id)arg3 host:(id)arg4 hasCredentialForCurrentHost:(bool)arg5 existingCredentialMatchesForCurrentHost:(id)arg6 otherSubdomainCredentialMatches:(id)arg7 haveExistingCredentialWithSameUsernameAndDifferentPassword:(bool)arg8 completionHandler:(id /* block */)arg9;
- (bool)_updateCredentialsWithGeneratedPasswordForForm:(id)arg1 inWebView:(id)arg2 frame:(id)arg3;
- (bool)_webView:(id)arg1 formSubmission:(bool)arg2 willSubmitNewAccountOrChangePasswordFormWithMetadata:(id)arg3 fromFrame:(id)arg4 submissionHandler:(id /* block */)arg5;
- (bool)_webView:(id)arg1 saveCredentialsForURL:(id)arg2 formSubmission:(bool)arg3 formWithMetadata:(id)arg4 fromFrame:(id)arg5 username:(id)arg6 password:(id)arg7 submissionHandler:(id /* block */)arg8;
- (bool)_webView:(id)arg1 saveUsernameAndPasswordForURL:(id)arg2 fromForm:(id)arg3 inFrame:(id)arg4 username:(id)arg5 password:(id)arg6 isGeneratedPassword:(bool)arg7 confirmOverwritingCurrentPassword:(bool)arg8 submissionHandler:(id /* block */)arg9;
- (bool)_webView:(id)arg1 saveUsernameAndPasswordFromForm:(id)arg2 inFrame:(id)arg3 confirmOverwritingCurrentPassword:(bool)arg4 submissionHandler:(id /* block */)arg5;
- (bool)_webView:(id)arg1 willSubmitFormContainingCreditCardData:(id)arg2 fromFrame:(id)arg3 submissionHandler:(id /* block */)arg4;
- (bool)_webView:(id)arg1 willSubmitLoginFormWithMetadata:(id)arg2 formSubmission:(bool)arg3 fromFrame:(id)arg4 submissionHandler:(id /* block */)arg5;
- (bool)_webView:(id)arg1 willSubmitStandardFormWithMetadata:(id)arg2 fromFrame:(id)arg3 submissionHandler:(id /* block */)arg4;
- (id)addressBookMatchesForProperty:(id)arg1 key:(id)arg2 label:(id)arg3;
- (id)addressBookMatchesForProperty:(id)arg1 key:(id)arg2 label:(id)arg3 contact:(id)arg4;
- (id)addressBookMatchesForProperty:(id)arg1 key:(id)arg2 label:(id)arg3 partialString:(id)arg4 contact:(id)arg5 allowingIdentifiedAddressBookLabelToOverridePreferredIdentifier:(bool)arg6;
- (bool)autoFillCorrectionManagerShouldProcessFeedback:(id)arg1;
- (void)clearAllFormCredentials;
- (id)completionDBPath;
- (id)credentialFromMatches:(id)arg1 completingPartialUserInLoginForm:(id)arg2;
- (void)dealloc;
- (void)didFillFieldWithGeneratedPassword:(id)arg1 inFrame:(id)arg2 webView:(id)arg3;
- (void)didFillFormWithGeneratedPassword:(id)arg1 inWebView:(id)arg2 frame:(id)arg3;
- (id)feedbackProcessorForAutoFillCorrectionManager:(id)arg1;
- (id)formAutoFillCorrectionManagerForFormFieldClassificationCorrector:(id)arg1;
- (id)formFieldClassificationCorrector:(id)arg1 bestAddressBookLabelForControlValue:(id)arg2;
- (bool)formFieldClassificationCorrector:(id)arg1 hasAddressBookDataForAddressBookLabel:(id)arg2;
- (void)gatherAutoFillDisplayDataWithTextField:(id)arg1 displayedInQuickType:(bool)arg2 prefix:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)gatherValuesForForm:(id)arg1 inFrame:(id)arg2 multiRoundAutoFillManager:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)initWithAggressiveKeychainCaching:(bool)arg1;
- (bool)mayFillCreditCardDataInFrame:(id)arg1;
- (bool)mayPreFillInFrame:(id)arg1 ancestorFrames:(id)arg2;
- (id)me;
- (void)prepareMeCard;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)saveCompletionDBSoon;
- (void)saveUnsubmittedGeneratedPasswordInFrame:(id)arg1 form:(id)arg2 closingWebView:(bool)arg3;
- (void)saveUser:(id)arg1 password:(id)arg2 forURL:(id)arg3 andPromptToUpdateRelatedCredentialsWithWebView:(id)arg4;
- (void)setShouldAutoFillFromAddressBook:(bool)arg1;
- (void)setShouldAutoFillFromCreditCardData:(bool)arg1;
- (void)setShouldAutoFillPasswords:(bool)arg1;
- (bool)shouldAllowPasswordAutoFillOnURL:(id)arg1 allowExternalCredentials:(bool)arg2;
- (bool)shouldAutoFillFromAddressBook;
- (bool)shouldAutoFillFromCreditCardData;
- (bool)shouldAutoFillFromCreditCardDataInFrame:(id)arg1;
- (bool)shouldAutoFillFromPreviousData;
- (bool)shouldAutoFillPasswords;
- (bool)shouldAutoGeneratePasswordsForURL:(id)arg1 inWebView:(id)arg2;
- (void)textDidChangeInForm:(id)arg1 inWebView:(id)arg2 frame:(id)arg3;
- (id)uniqueIDOfContact:(id)arg1;
- (bool)webView:(id)arg1 frame:(id)arg2 willNavigateFromForm:(id)arg3 bySubmitting:(bool)arg4 processMetadataCorrections:(bool)arg5 uniqueIDsOfControlsThatWereAutoFilled:(id)arg6 submissionHandler:(id /* block */)arg7;
- (bool)whiteListAllowsURL:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TTTextController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NotesUI.framework/TTTextController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NotesUI.framework/NotesUI (1349.30)
 */

@interface TTTextController : NSObject <TTTextStorageStyler> {
    double  _bodyStyleFontSizeThreshold;
    bool  _disableSingleLineA;
    double  _headingStyleFontSizeThreshold;
    bool  _keepNSTextTableAttributes;
    TTZoomController * _zoomController;
}

@property (nonatomic) double bodyStyleFontSizeThreshold;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableSingleLineA;
@property (readonly) unsigned long long hash;
@property (nonatomic) double headingStyleFontSizeThreshold;
@property (nonatomic) bool keepNSTextTableAttributes;
@property (readonly) Class superclass;
@property (nonatomic, retain) TTZoomController *zoomController;

+ (double)attachmentParagraphSpacing;
+ (double)attachmentParagraphSpacingBefore;
+ (double)bodyParagraphSpacing;
+ (double)bodyParagraphSpacingBefore;
+ (struct UIFont { Class x1; }*)preferredFontForTTTextStyle:(unsigned int)arg1;
+ (double)superscriptScaleFactor;

- (void).cxx_destruct;
- (void)addBIToStyle:(id)arg1;
- (void)addLetterpressInTextStorage:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)bodyAttributes;
- (id)bodyAttributesWithContentSizeCategory:(id)arg1;
- (double)bodyStyleFontSizeThreshold;
- (id)captionAttributes;
- (id)captionAttributesWithContentSizeCategory:(id)arg1;
- (id)checklistAttributes;
- (id)checklistAttributesWithContentSizeCategory:(id)arg1;
- (id)copyAttribute:(id)arg1 fromAttributes:(id)arg2 toAttributes:(id)arg3;
- (id)copyNSParagraphStylefromAttributes:(id)arg1 toAttributes:(id)arg2;
- (id)defaultListAttributes;
- (id)defaultListAttributesWithContentSizeCategory:(id)arg1;
- (id)defaultParagraphStyle;
- (id)defaultTypingAttributesForEmptyDocument;
- (bool)disableSingleLineA;
- (id)filterStyleAttributes:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)fixModelAttributesInTextStorage:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)fixedWidthAttributes;
- (id)fixedWidthAttributesWithContentSizeCategory:(id)arg1;
- (void)guessFontSizeThresholdsForTTStylesInAttributedString:(id)arg1;
- (id)headingAttributes;
- (id)headingAttributesWithContentSizeCategory:(id)arg1;
- (double)headingStyleFontSizeThreshold;
- (id)init;
- (bool)keepNSTextTableAttributes;
- (id)modelForStyleAttributes:(id)arg1 filterAttributes:(bool)arg2;
- (id)preferredAttributesForTTTextStyle:(unsigned int)arg1;
- (id)referenceAttributesForLocation:(unsigned long long)arg1 textStorage:(id)arg2 currentParagraphStart:(unsigned long long)arg3;
- (id)removeAttribute:(id)arg1 ifInconsistentAtLocation:(unsigned long long)arg2 inTextStorage:(id)arg3 forNewTypingAttributes:(id)arg4;
- (void)removeLetterpressInTextStorage:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)resetGuessedFontSizes;
- (void)setBodyStyleFontSizeThreshold:(double)arg1;
- (void)setDisableSingleLineA:(bool)arg1;
- (void)setHeadingStyleFontSizeThreshold:(double)arg1;
- (void)setKeepNSTextTableAttributes:(bool)arg1;
- (void)setZoomController:(id)arg1;
- (id)strippedTypingAttributesForEmptyParagraph:(id)arg1 atTheEndOfDocument:(bool)arg2 isTyping:(bool)arg3;
- (void)styleFontInAttributedString:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 contentSizeCategory:(id)arg3;
- (void)styleFontInTextStorage:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)styleForModelAttributes:(id)arg1;
- (id)styleForModelAttributes:(id)arg1 contentSizeCategory:(id)arg2;
- (void)styleListsAndIndentsInAttributedString:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)styleText:(id)arg1 inExactRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 fixModelAttributes:(bool)arg3;
- (void)styleText:(id)arg1 inExactRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 fixModelAttributes:(bool)arg3 enableLetterpress:(bool)arg4;
- (void)styleText:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 fixModelAttributes:(bool)arg3;
- (id)subheadingAttributes;
- (id)subheadingAttributesWithContentSizeCategory:(id)arg1;
- (id)titleAttributes;
- (id)titleAttributesWithContentSizeCategory:(id)arg1;
- (id)typingAttributesForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 forSelectionChange:(bool)arg2 currentTypingAttributes:(id)arg3 inTextStorage:(id)arg4;
- (id)zoomController;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

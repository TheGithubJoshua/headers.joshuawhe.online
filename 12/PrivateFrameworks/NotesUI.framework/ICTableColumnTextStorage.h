<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ICTableColumnTextStorage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NotesUI.framework/ICTableColumnTextStorage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NotesUI.framework/NotesUI (1349.30)
 */

@interface ICTableColumnTextStorage : ICTableTextStorage <ICTableCellMergeableStringObserving> {
    NSUUID * _columnID;
    NSMutableDictionary * _mergeableStringDelegates;
    bool  _preventEditingUpdates;
    NSMutableIndexSet * _rowStartIndexes;
    NSMutableArray * _rows;
    ICTable * _table;
    <ICTableUndoHelping> * _undoHelper;
}

@property (readonly) NSUUID *columnID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSMutableDictionary *mergeableStringDelegates;
@property (nonatomic, readonly) NSArray *populatedRows;
@property (nonatomic) bool preventEditingUpdates;
@property (nonatomic, readonly) NSMutableIndexSet *rowStartIndexes;
@property (nonatomic, readonly) NSMutableArray *rows;
@property (readonly) Class superclass;
@property (nonatomic, readonly) ICTable *table;
@property (nonatomic) <ICTableUndoHelping> *undoHelper;

- (void).cxx_destruct;
- (void)breakUndoCoalescing;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })characterRangeForRowID:(id)arg1;
- (void)closeUndoGroups;
- (id)columnID;
- (void)edited:(unsigned long long)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 changeInLength:(long long)arg3;
- (unsigned long long)indexOfRow:(id)arg1;
- (unsigned long long)indexOfRowAtLocation:(unsigned long long)arg1;
- (id)init;
- (id)initWithTable:(id)arg1 columnID:(id)arg2;
- (unsigned long long)insertionIndexForRow:(id)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })logicalRangeForLocation:(unsigned long long)arg1;
- (id)mergeableStringDelegates;
- (id)mergeableStringForRowID:(id)arg1;
- (unsigned long long)nextLocationAfterRowLocation:(unsigned long long)arg1;
- (id)populatedRows;
- (bool)preventEditingUpdates;
- (void)removeRow:(id)arg1;
- (void)removeTextForRow:(id)arg1;
- (void)resetUndoManager;
- (void)restoreSelection:(id)arg1;
- (id)rowAtIndex:(unsigned long long)arg1 rowRange:(out struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (unsigned long long)rowLocationForRowID:(id)arg1;
- (unsigned long long)rowLocationForRowIndex:(unsigned long long)arg1;
- (id)rowStartIndexes;
- (id)rows;
- (id)savedSelectionWithSelectionAffinity:(unsigned long long)arg1;
- (void)setPreventEditingUpdates:(bool)arg1;
- (void)setUndoHelper:(id)arg1;
- (id)table;
- (void)tableCellWasEditedAtColumnID:(id)arg1 rowID:(id)arg2 edited:(unsigned long long)arg3 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 changeInLength:(long long)arg5;
- (id)undoHelper;
- (void)updateStorageForMovedRow:(id)arg1;
- (bool)wantsUndoCommands;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

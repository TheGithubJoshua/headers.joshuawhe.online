<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ICCameraFile.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ImageCapture.framework/ICCameraFile.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ImageCapture.framework/ImageCapture (1534.2)
 */

@interface ICCameraFile : ICCameraItem {
    void * _fileProperties;
    unsigned int  _ptpObjectHandle;
    bool  _retrievedMetadata;
    bool  _retrievedThumbnail;
}

@property (readonly) bool burstFavorite;
@property (readonly) bool burstPicked;
@property (readonly) NSString *burstUUID;
@property (readonly) NSString *createdFilename;
@property (readonly) double duration;
@property (readonly) NSDate *exifCreationDate;
@property (readonly) NSDate *exifModificationDate;
@property bool fetchingMetadata;
@property bool fetchingThumbnail;
@property (readonly) NSDate *fileCreationDate;
@property (readonly) NSDate *fileModificationDate;
@property long long fileSize;
@property (readonly) bool firstPicked;
@property (readonly) NSString *groupUUID;
@property (readonly) long long height;
@property (readonly) bool highFramerate;
@property (readonly) NSString *mediaBase;
@property unsigned long long orientation;
@property (readonly) bool orientationOverridden;
@property (readonly) NSString *originalFilename;
@property (readonly) NSString *originatingAssetID;
@property (retain) ICCameraFile *pairedRawImage;
@property (readonly) unsigned int ptpObjectHandle;
@property (getter=isRaw) bool raw;
@property (readonly) NSString *relatedUUID;
@property (readonly) bool retrievedMetadata;
@property (readonly) bool retrievedThumbnail;
@property (readonly) NSArray *sidecarFiles;
@property (readonly) bool timeLapse;
@property (readonly) long long width;

// Image: /System/Library/PrivateFrameworks/ImageCapture.framework/ImageCapture

- (void)addSidecarFile:(id)arg1;
- (void)addSubImageDict:(id)arg1;
- (id)base;
- (bool)burstFavorite;
- (bool)burstPicked;
- (id)burstUUID;
- (bool)convertedFamily;
- (id)createdFilename;
- (id)creationDate;
- (void)dealloc;
- (id)debugIdentity;
- (id)debugMediaMetadata;
- (id)description;
- (double)duration;
- (id)exifCreationDate;
- (id)exifModificationDate;
- (bool)fetchingMetadata;
- (bool)fetchingThumbnail;
- (id)fileCreationDate;
- (id)fileModificationDate;
- (long long)fileSize;
- (bool)firstPicked;
- (void)flagAsSidecar;
- (void)flagMediaMetadata:(unsigned long long)arg1;
- (void)flushMetadataCache;
- (void)flushThumbnailCache;
- (id)groupUUID;
- (void)handleCommandCompletionNotification:(id)arg1;
- (bool)hasMetadata;
- (bool)hasThumbnail;
- (long long)height;
- (bool)highFramerate;
- (id)initWithName:(id)arg1 parentFolder:(id)arg2 device:(id)arg3;
- (bool)isAudio;
- (bool)isConverted;
- (bool)isData;
- (bool)isDataUniversal;
- (bool)isEdited:(unsigned long long)arg1;
- (bool)isEditedConverted;
- (bool)isEditedOriginal;
- (bool)isEditedUniversal;
- (bool)isImage;
- (bool)isJPEG;
- (bool)isLegacy;
- (bool)isMovie;
- (bool)isNonRawImage;
- (bool)isOriginal;
- (bool)isRaw;
- (bool)isSidecar;
- (bool)isUniversal;
- (bool)isUntouched:(unsigned long long)arg1;
- (id)mediaBase;
- (id)mediaData;
- (id)metadata;
- (id)modificationDate;
- (unsigned long long)orientation;
- (bool)orientationOverridden;
- (bool)originalFamily;
- (id)originalFilename;
- (id)originatingAssetID;
- (void)overrideOrientation:(unsigned long long)arg1;
- (id)pairedRawImage;
- (bool)partOfFamily:(unsigned long long)arg1;
- (unsigned int)ptpObjectHandle;
- (id)relatedUUID;
- (void)requestMetadata;
- (void)requestMetadataWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (void)requestThumbnail;
- (void)requestThumbnailWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (bool)retrievedMetadata;
- (bool)retrievedThumbnail;
- (void)setBurstFavorite:(bool)arg1;
- (void)setBurstPicked:(bool)arg1;
- (void)setBurstUUID:(id)arg1;
- (void)setCreatedFilename:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setExifCreationDate:(id)arg1;
- (void)setExifModificationDate:(id)arg1;
- (void)setFetchingMetadata:(bool)arg1;
- (void)setFetchingThumbnail:(bool)arg1;
- (void)setFileCreationDate:(id)arg1;
- (void)setFileModificationDate:(id)arg1;
- (void)setFileSize:(long long)arg1;
- (void)setFirstPicked:(bool)arg1;
- (void)setGroupUUID:(id)arg1;
- (void)setHasMetadata:(bool)arg1;
- (void)setHasThumbnail:(bool)arg1;
- (void)setHeight:(long long)arg1;
- (void)setHighFramerate:(bool)arg1;
- (void)setKeywordPropertiesFromMetadata;
- (bool)setMetadata:(id)arg1;
- (void)setOrientation:(unsigned long long)arg1;
- (void)setOriginalFilename:(id)arg1;
- (void)setOriginatingAssetID:(id)arg1;
- (void)setPairedRawImage:(id)arg1;
- (void)setRaw:(bool)arg1;
- (void)setRelatedUUID:(id)arg1;
- (bool)setThumbnailData:(struct __CFData { }*)arg1 withOrientation:(id)arg2;
- (void)setTimeLapse:(bool)arg1;
- (void)setUTI:(id)arg1;
- (void)setUTime:(unsigned long long)arg1;
- (void)setWidth:(long long)arg1;
- (id)sidecarFiles;
- (id)subImageDictForPixelWidth:(id)arg1;
- (id)subImages;
- (struct CGImage { }*)thumbnail;
- (bool)timeLapse;
- (unsigned long long)uTime;
- (bool)universalFamily;
- (long long)width;

// Image: /System/Library/Frameworks/Photos.framework/Photos

- (id)uti;
- (id)uuid;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

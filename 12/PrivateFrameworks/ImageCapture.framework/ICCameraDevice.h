<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ICCameraDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ImageCapture.framework/ICCameraDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ImageCapture.framework/ImageCapture (1534.2)
 */

@interface ICCameraDevice : ICDevice {
    bool  _basicMediaModel;
    NSString * _buildVersion;
    void * _cameraProperties;
    NSString * _deviceClass;
    NSString * _deviceColor;
    NSString * _deviceEnclosureColor;
    NSNumber * _devicePairedState;
    bool  _isEnumeratingContent;
    NSString * _productType;
    NSString * _productVersion;
    NSArray * _supportedSidecarFiles;
}

@property (getter=isAccessRestrictedAppleDevice) bool accessRestrictedAppleDevice;
@property bool allowsSyncingClock;
@property (getter=isApplePTPCapable) bool applePTPCapable;
@property bool basicMediaModel;
@property (readonly) unsigned long long batteryLevel;
@property (readonly) bool batteryLevelAvailable;
@property bool beingEjected;
@property (readonly) NSString *buildVersion;
@property unsigned long long contentCatalogPercentCompleted;
@property (readonly) NSArray *contents;
@property (readonly) NSString *deviceClass;
@property (readonly) NSString *deviceColor;
@property (readonly) NSString *deviceEnclosureColor;
@property (readonly) NSNumber *devicePairedState;
@property (getter=isEjectable) bool ejectable;
@property long long enumerationOrder;
@property unsigned long long estimatedNumberOfDownloadableItems;
@property bool iCloudPhotosEnabled;
@property (readonly) bool isEnumeratingContent;
@property (getter=isLocked) bool locked;
@property (readonly) NSArray *mediaFiles;
@property unsigned long long mediaPresentation;
@property unsigned long long numberOfDownloadableItems;
@property (readonly) NSString *productType;
@property (readonly) NSString *productVersion;
@property (readonly) NSArray *supportedSidecarFiles;
@property (readonly) double timeOffset;
@property (copy) NSString *volumePath;

+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;

- (void)addCameraFileToIndex:(id)arg1;
- (id)addCameraFiles:(id)arg1;
- (void)addCameraFolderToIndex:(id)arg1;
- (void)addFolder:(id)arg1;
- (bool)addMediaFile:(id)arg1;
- (bool)addMediaFiles:(id)arg1;
- (bool)allowsSyncingClock;
- (bool)applePTPCapable;
- (id)applePTPFiles;
- (id)applePTPObjectLimit;
- (void)aptpUpdateFilesWithCommand:(id)arg1 andData:(id)arg2;
- (bool)basicMediaModel;
- (unsigned long long)batteryLevel;
- (bool)batteryLevelAvailable;
- (bool)beingEjected;
- (void)blendMedia:(id)arg1 ofLength:(int)arg2 withMedia:(id)arg3 ofLength:(int)arg4;
- (id)buildVersion;
- (id)cameraFileIndexesMatchingDateCriteria:(id)arg1;
- (id)cameraFileWithObjectID:(unsigned long long)arg1;
- (id)cameraFileWithUUID:(id)arg1;
- (id)cameraFolderWithObjectID:(unsigned long long)arg1;
- (void)cancelDownload;
- (unsigned long long)contentCatalogPercentCompleted;
- (id)contents;
- (void)dealloc;
- (void)decrementEstimatedNumberOfDownloadableItems;
- (void)decrementNumberOfDownloadableItems;
- (id)description;
- (id)deviceClass;
- (id)deviceColor;
- (id)deviceCommandQueue;
- (id)deviceEnclosureColor;
- (id)deviceNotificationQueue;
- (id)devicePairedState;
- (void)discardCameraFiles:(id)arg1;
- (void)dispatchAsyncForOperationType:(long long)arg1 block:(id /* block */)arg2;
- (double)downloadCancelTimestamp;
- (long long)enumerationOrder;
- (unsigned long long)estimatedNumberOfDownloadableItems;
- (id)filesOfType:(id)arg1;
- (void)grindMedia:(id)arg1 index:(int*)arg2 file:(id)arg3;
- (void)handleCommandCompletionNotification:(id)arg1;
- (void)handleImageCaptureEventNotification:(id)arg1;
- (bool)iCloudPhotosEnabled;
- (unsigned int)increaseDeviceFailureCount;
- (void)incrementEstimatedNumberOfDownloadableItems;
- (void)incrementNumberOfDownloadableItems;
- (id)indexedCameraFiles;
- (id)indexedCameraFolders;
- (id)init;
- (bool)isAccessRestrictedAppleDevice;
- (bool)isApplePTPCapable;
- (bool)isEjectable;
- (bool)isEnumeratingContent;
- (bool)isLocked;
- (bool)legacyDevice;
- (id)mediaFiles;
- (unsigned long long)mediaPresentation;
- (void)notifyDelegateOfAddedItem:(id)arg1;
- (void)notifyDelegateOfAddedItems:(id)arg1;
- (unsigned long long)numberOfDownloadableItems;
- (id)ownerMedia:(id)arg1 withMedia:(id)arg2;
- (void)pendNotifyingDelegateOfAddedItem:(id)arg1;
- (void)popMediaFiles:(id)arg1;
- (void)processAddedFiles:(id)arg1;
- (id)productType;
- (id)productVersion;
- (void)pushMediaFiles:(id)arg1;
- (id)relateGroupedMedia:(id)arg1;
- (id)relateLegacyMedia:(id)arg1;
- (id)relateMedia:(id)arg1;
- (void)removeCameraFileFromIndex:(id)arg1;
- (void)removeCameraFolderFromIndex:(id)arg1;
- (void)removeFolder:(id)arg1;
- (void)removeMediaFile:(id)arg1;
- (void)requestCloseSession;
- (void)requestDeleteFiles:(id)arg1;
- (void)requestDownloadFile:(id)arg1 options:(id)arg2 downloadDelegate:(id)arg3 didDownloadSelector:(SEL)arg4 contextInfo:(void*)arg5;
- (void)requestEject;
- (void)requestOpenSession;
- (void)requestOpenSessionWithOptions:(id)arg1;
- (void)requestSyncClock;
- (void)resetFailureCount;
- (void)setAccessRestrictedAppleDevice:(bool)arg1;
- (void)setAllowsSyncingClock:(bool)arg1;
- (void)setApplePTPCapable:(bool)arg1;
- (void)setApplePTPObjectLimit:(id)arg1;
- (void)setAppleRelatedUUIDSupport:(unsigned long long)arg1;
- (void)setBasicMediaModel:(bool)arg1;
- (void)setBeingEjected:(bool)arg1;
- (void)setContentCatalogPercentCompleted:(unsigned long long)arg1;
- (void)setEjectable:(bool)arg1;
- (void)setEnumerationOrder:(long long)arg1;
- (void)setEstimatedNumberOfDownloadableItems:(unsigned long long)arg1;
- (void)setICloudPhotosEnabled:(bool)arg1;
- (void)setLocked:(bool)arg1;
- (void)setMediaPresentation:(unsigned long long)arg1;
- (void)setNumberOfDownloadableItems:(unsigned long long)arg1;
- (void)setVolumePath:(id)arg1;
- (long long)stitchMedia:(id)arg1 withMedia:(id)arg2;
- (id)supportedSidecarFiles;
- (bool)supportsMediaFormatCatalog;
- (double)timeOffset;
- (bool)updateMediaPresentation;
- (id)volumePath;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

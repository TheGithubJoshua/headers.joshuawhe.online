<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FigIrisAutoTrimmer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Celestial.framework/FigIrisAutoTrimmer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial (2290.13.1.3)
 */

@interface FigIrisAutoTrimmer : NSObject {
    double  _bufferHistorySeconds;
    struct { 
        double w; 
        double x; 
        double y; 
        double z; 
    }  _captureMotionDelta;
    double  _captureMotionDeltaPeriod;
    unsigned long long  _estimatedIntermediatesCount;
    bool  _haveCaptureMotionDelta;
    struct { 
        double w; 
        double x; 
        double y; 
        double z; 
    }  _lastAttitude;
    double  _lastCheckedTimestamp;
    struct { 
        double w; 
        double x; 
        double y; 
        double z; 
    }  _lastDelta;
    int  _lastStatus;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _maxHoldDuration;
    long long  _maxHoldFrames;
    bool  _motionAvailable;
    double  _motionSampleRate;
    NSMutableArray * _motionSamples;
    unsigned long long  _nominalHistorySize;
    int  _svmKernelType;
    NSArray * _svmKeys;
    NSData * _svmNormalization;
    int  _svmParamCount;
    float  _svmRBFGamma;
    float  _svmRBFRho;
    int  _svmVectorCount;
    NSData * _svmVectors;
}

@property (nonatomic, readonly) bool trimmingActive;

+ (void)initialize;

- (bool)_checkSamplesContainHostTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (double)_directionalWeightForSample:(id)arg1;
- (long long)_findClosestIndexToHostTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 fromIndex:(long long)arg2 limitIndex:(long long)arg3;
- (long long)_findClosestIndexToOffset:(double)arg1 atLeastOneFromIndex:(long long)arg2 limitIndex:(long long)arg3;
- (long long)_findClosestIndexToTimestamp:(double)arg1 fromIndex:(long long)arg2 limitIndex:(long long)arg3;
- (double)_getHostTime;
- (void)_initSVM:(id)arg1 fromFile:(id)arg2;
- (bool)_isUnstable:(id)arg1 withLookback:(id)arg2;
- (void)_processMotionSample:(const struct { double x1; double x2; double x3; double x4; }*)arg1 gravity:(const struct { float x1; float x2; float x3; }*)arg2 motionTimestamp:(double)arg3 frameTimestamp:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg4 metadata:(id)arg5;
- (bool)_shouldCut:(id)arg1 withLookahead:(id)arg2 withLookback:(id)arg3;
- (bool)_shouldCutSVM:(id)arg1;
- (bool)_shouldCutUnstable:(id)arg1 withLookahead:(id)arg2;
- (double)_timeoutThreshold;
- (void)_updateStorageStats;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })beginTrimmingForStillImageHostPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 minimumPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (double)bufferHistorySeconds;
- (void)dealloc;
- (int)emissionStatusForHostPTS:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)init;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })maxHoldDuration;
- (void)processDetectedFaces:(id)arg1 forHostTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)processISPMotionData:(id)arg1 forHostTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)processInferences:(id)arg1 forHostTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)setBufferHistorySeconds:(double)arg1;
- (void)setMaxHoldDuration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setVideoFrameRate:(double)arg1;
- (void)startMotionProcessing;
- (void)stopMotionProcessing;
- (bool)trimmingActive;
- (double)videoFrameRate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

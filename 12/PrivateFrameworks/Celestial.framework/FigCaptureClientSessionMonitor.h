<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FigCaptureClientSessionMonitor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Celestial.framework/FigCaptureClientSessionMonitor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial (2290.13.1.3)
 */

@interface FigCaptureClientSessionMonitor : NSObject <FigCaptureDisplayLayoutObserver> {
    id /* block */  _applicationAndLayoutStateHandler;
    NSString * _applicationID;
    int  _applicationState;
    id  _applicationStateChangeNotificationToken;
    NSArray * _avconferenceClientApplicationIDs;
    unsigned int  _bksApplicationState;
    bool  _bksApplicationStateInitialized;
    NSString * _cachedApplicationIDToInheritAppStateFrom;
    struct { 
        unsigned int val[8]; 
    }  _clientAuditToken;
    bool  _clientCanInheritApplicationState;
    int  _clientType;
    FigCaptureDisplayLayoutMonitor * _displayLayoutMonitor;
    NSString * _extensionHostApplicationID;
    int  _extensionHostApplicationState;
    bool  _haveExternalCMSession;
    id /* block */  _interruptionHandler;
    id  _interruptionStateChangeNotificationToken;
    bool  _invalid;
    bool  _isForThirdPartyTorch;
    int  _layoutState;
    bool  _layoutStateInitialized;
    int  _pid;
    int  _pidToInheritAppStateFrom;
    int  _resolvedExtensionApplicationState;
    struct opaqueCMSession { } * _session;
    struct OpaqueFigSimpleMutex { } * _sessionLock;
    struct OpaqueFigSimpleMutex { } * _stateChangeLock;
}

@property (readonly) NSString *applicationID;
@property (readonly) int applicationState;
@property (readonly) int clientType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct opaqueCMSession { }*session;
@property (readonly) Class superclass;

+ (int)_applicationStateForBKSApplicationState:(unsigned int)arg1 clientType:(int)arg2 applicationID:(id)arg3;
+ (int)_applicationStateForClientLayoutState:(int)arg1 clientType:(int)arg2;
+ (bool)_isSupportedExtensionClientType:(int)arg1;
+ (id)_stringForApplicationState:(int)arg1;
+ (id)_stringForBKSApplicationState:(unsigned int)arg1;
+ (id)_stringForClientLayoutState:(int)arg1;
+ (id)_stringForClientType:(int)arg1;
+ (void)initialize;
+ (void)startPrewarmingMonitorWithHandler:(id /* block */)arg1;
+ (void)stopPrewarmingMonitor;

- (int)_createAndObserveCMSession;
- (void)_deregisterAndReleaseCMSession;
- (void)_handleApplicationStateChange:(unsigned int)arg1;
- (void)_handleAudioInterruptionChange:(int)arg1;
- (void)_handleCMSessionManagerNofification:(id)arg1;
- (id)_initWithClientAuditToken:(id)arg1 forThirdPartyTorch:(bool)arg2 avconferenceClientApplicationIDs:(id)arg3 applicationAndLayoutStateHandler:(id /* block */)arg4 interruptionHandler:(id /* block */)arg5;
- (bool)_isApplicationStateMonitoringRequiredForClient;
- (bool)_isCMSessionInterruptionObservingRequiredForClient;
- (bool)_isDisplayLayoutMonitoringRequiredForClient;
- (id)_logString;
- (void)_notifyIfResolvedSupportedExtensionApplicationStateOrLayoutStateDidChangeUsingLayoutStateChanged:(bool)arg1;
- (int)_registerCMSessionForObservation;
- (id)_resolveApplicationID;
- (int)_resolveApplicationState;
- (void)_setUpApplicationInfo;
- (void)_updateApplicationState;
- (void)_updateClientStateCondition:(void*)arg1 newValue:(id)arg2;
- (id)applicationID;
- (int)applicationState;
- (int)clientType;
- (void)dealloc;
- (id)description;
- (id)init;
- (id)initWithAVConferenceClientApplicationIDs:(id)arg1 applicationAndLayoutStateHandler:(id /* block */)arg2 interruptionHandler:(id /* block */)arg3;
- (id)initWithClientAuditToken:(id)arg1 forThirdPartyTorch:(bool)arg2 applicationAndLayoutStateHandler:(id /* block */)arg3 interruptionHandler:(id /* block */)arg4;
- (void)invalidate;
- (void)layoutMonitor:(id)arg1 didUpdateLayoutWithForegroundApps:(id)arg2 layoutState:(int)arg3;
- (int)observeSession:(struct opaqueCMSession { }*)arg1;
- (struct opaqueCMSession { }*)session;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BWGraph.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Celestial.framework/BWGraph.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial (2290.13.1.3)
 */

@interface BWGraph : NSObject {
    NSString * _applicationID;
    bool  _beingConfigured;
    bool  _classicRetainedBufferCount;
    NSObject<OS_dispatch_group> * _commitGroup;
    NSMutableArray * _connections;
    bool  _deferredNodePrepareCancelled;
    NSMutableArray * _deferredPreparePrioritySinks;
    NSMutableArray * _deferredStartSourceNodes;
    int  _errorStatus;
    bool  _haveStartedOrCancelledDeferredSourceNodes;
    long long  _inflightConfigurationID;
    BWMemoryPool * _memoryPool;
    NSString * _modeDescription;
    NSMutableArray * _nodes;
    NSArray * _nodesToPrepareAfterGraphStart;
    NSMutableArray * _nodesToPrepareConcurrently;
    NSMutableArray * _outputsWithSharedPools;
    NSMutableDictionary * _outputsWithSharedPoolsForAttachedMedia;
    bool  _prefetchesPixelBufferPools;
    bool  _running;
    NSMutableArray * _sinkNodes;
    NSString * _sourceDescription;
    NSMutableArray * _sourceNodes;
    NSObject<OS_dispatch_group> * _sourceNodesStartGroup;
    NSObject<OS_dispatch_group> * _startGroup;
    <BWGraphStatusDelegate> * _statusDelegate;
    NSDictionary * _subgraphsByName;
    bool  _supportsLiveReconfiguration;
}

@property (nonatomic, readonly) bool deferredNodePrepareEnabled;
@property int errorStatus;
@property (nonatomic, retain) BWMemoryPool *memoryPool;
@property (nonatomic) bool prefetchesPixelBufferPools;
@property (nonatomic) <BWGraphStatusDelegate> *statusDelegate;
@property (nonatomic, readonly) bool supportsLiveReconfiguration;

+ (void)initialize;

- (id)_breadthFirstEnumerator;
- (id)_depthFirstEnumeratorWithVertexOrdering:(int)arg1;
- (void)_getNodesToPrepareSeriallyBeforeGraphStart:(id*)arg1 concurrentlyBeforeGraphStart:(id*)arg2 afterGraphStart:(id*)arg3;
- (void)_logActiveNodesAfterGraphStopTimeout;
- (void)_logActiveSinkNodesAfterGraphStopTimeout;
- (void)_makeParentConfigurationChangesLive;
- (id)_newDispatchGroupForSinksToBecomeLiveWithConfigurationID:(long long)arg1;
- (id)_newDispatchGroupForSinksToTransitionToState:(int)arg1;
- (id)_nodesInSubgraphOfSinkNode:(id)arg1;
- (bool)_prepareNodesWithConfigurationChanges:(id*)arg1;
- (bool)_resolveFormats:(id*)arg1;
- (bool)_resolveRetainedBufferCounts:(id*)arg1;
- (void)_resolveVideoRetainedBufferCountsForOutput:(id)arg1 forAttachedMediaKey:(id)arg2 outputsWithSharedPools:(id)arg3;
- (void)_resumeInputConnectionsForNodes:(id)arg1 eventsOnly:(bool)arg2;
- (id)_reverseBreadthFirstEnumerator;
- (id)_reverseDepthFirstEnumeratorWithVertexOrdering:(int)arg1;
- (id)_sinkNodes;
- (id)_sourceNodes;
- (void)_suspendInputConnectionsForNodes:(id)arg1;
- (void)_timedOutWaitingForOperationToCompleteWithDescription:(id)arg1;
- (void)_waitForSourceNodesToStart;
- (void)_waitForStartOrCommitToComplete;
- (void)_writeDotStringToFile;
- (bool)addNode:(id)arg1 error:(id*)arg2;
- (id)applicationID;
- (void)beginConfiguration;
- (void)cancelDeferredNodePrepare;
- (void)cancelDeferredSourceNodeStart;
- (bool)commitConfigurationWithID:(long long)arg1 error:(id*)arg2;
- (bool)connectOutput:(id)arg1 toInput:(id)arg2 pipelineStage:(id)arg3;
- (void)dealloc;
- (bool)deferredNodePrepareEnabled;
- (id)dotString;
- (void)enableConcurrentPrepareForNode:(id)arg1;
- (void)enableDeferredPrepareForNodesNotInPathOfSinkNode:(id)arg1;
- (void)enableDeferredStartForSourceNode:(id)arg1;
- (int)errorStatus;
- (id)init;
- (id)memoryPool;
- (id)modeDescription;
- (bool)prefetchesPixelBufferPools;
- (void)setApplicationID:(id)arg1;
- (void)setErrorStatus:(int)arg1;
- (void)setMemoryPool:(id)arg1;
- (void)setModeDescription:(id)arg1;
- (void)setPrefetchesPixelBufferPools:(bool)arg1;
- (void)setSourceDescription:(id)arg1;
- (void)setStatusDelegate:(id)arg1;
- (void)setSubgraphsByName:(id)arg1;
- (id)sourceDescription;
- (bool)start:(id*)arg1;
- (void)startDeferredNodePrepareIfNeededWithCompletionHandler:(id /* block */)arg1;
- (void)startDeferredSourceNodesIfNeeded;
- (id)statusDelegate;
- (bool)stop:(id*)arg1;
- (id)subgraphsByName;
- (bool)supportsLiveReconfiguration;
- (void)waitForStartOrCommitToComplete;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

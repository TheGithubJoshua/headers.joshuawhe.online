<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BWAggdDataReporter.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Celestial.framework/BWAggdDataReporter.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial (2290.13.1.3)
 */

@interface BWAggdDataReporter : NSObject {
    NSObject<OS_dispatch_queue> * _aggdDispatchQueue;
    int  _lastShutterLag;
}

+ (void)initialize;
+ (id)sharedInstance;

- (id)_aggdCameraStreamingTimeStringFromDeviceType:(int)arg1 devicePosition:(int)arg2;
- (id)_aggdGNRProcessingStatusStringFromProcessingStatus:(int)arg1;
- (id)_aggdPearlInfraredProjectorUptimeStringFromCurrent:(int)arg1 pattern:(int)arg2 applicationID:(id)arg3;
- (id)_aggdSDOFProcessingStatusStringFromProcessingStatus:(int)arg1;
- (id)_aggdStereoFusionProcessingStatusStringFromProcessingStatus:(int)arg1;
- (id)_aggdStereoFusionProcessingTypeStringForCaptureType:(int)arg1 isStereoFusionCapture:(bool)arg2 wideSubCaptureType:(int)arg3 teleSubCaptureType:(int)arg4 isOriginalImage:(bool)arg5;
- (id)_aggdStringForPrefix:(id)arg1 primaryCaptureType:(int)arg2 secondaryCaptureType:(int)arg3 captureFlags:(unsigned long long)arg4 sceneFlags:(unsigned long long)arg5 stillDuringVideo:(bool)arg6 frontCamera:(bool)arg7;
- (id)_captureTypeStringWithPrimaryCaptureType:(int)arg1 secondaryCaptureType:(int)arg2 captureFlags:(unsigned long long)arg3 sceneFlags:(unsigned long long)arg4;
- (void)_incrementAggdScalarKey:(id)arg1 withValue:(long long)arg2;
- (void)_pushValue:(double)arg1 aggdDistributionKey:(id)arg2;
- (void)_reportInitFailure;
- (void)_setAggdScalarKey:(id)arg1 withValue:(long long)arg2;
- (void)dealloc;
- (id)init;
- (int)lastShutterLag;
- (void)reportAPSOffsetEstimatorForPortType:(id)arg1 accelMotion:(float)arg2 gyroMotion:(float)arg3 inSessionOffset:(float)arg4 deltaOffsetFC:(float)arg5 deltaOffsetMI:(float)arg6 deltaOffsetFATP:(float)arg7 deltaOffsetLastSession:(float)arg8 errorHeadroomViolated:(bool)arg9 errorConvergenceFailed:(bool)arg10 errorMotionTooLarge:(bool)arg11 errorConfidenceTooLow:(bool)arg12 errorOffsetTooLarge:(bool)arg13 errorDeltaTooLarge:(bool)arg14 errorSaturated:(bool)arg15 errorCouldNotRun:(bool)arg16 successRun:(bool)arg17 startAPSVoltage:(int)arg18 modeGCOL:(bool)arg19 modeOL:(bool)arg20;
- (void)reportAPSSphereInteractionCalibrationForPosition:(int)arg1 residualErrorNeutral:(float)arg2 calibrationZHeightNeutral:(float)arg3 residualErrorMacro:(float)arg4 calibrationZHeightMacro:(float)arg5 calibrationStatus:(unsigned int)arg6 isValid:(bool)arg7;
- (void)reportAutoFocusCalibrationForPosition:(int)arg1 freqZ:(int)arg2 deltaFreqZ:(int)arg3 qZ:(int)arg4 deltaQZ:(int)arg5 gainZ:(int)arg6 calibrationStatus:(unsigned int)arg7 gelModelCoefficientD1:(int*)arg8 gelModelCoefficientD2:(int*)arg9 gelModelCoefficientP1:(int*)arg10 gelModelCoefficientP2:(int*)arg11 isValid:(bool)arg12;
- (void)reportAutoFocusPositionSensorCalibrationForPosition:(int)arg1 iStopZEstimate:(int)arg2 eSensorOutput:(short)arg3 wSensorOutput:(short)arg4 gravityZ:(int)arg5 calibrationStatus:(unsigned int)arg6 sensorTemp:(short)arg7 successfulInfinityEndStopDelta:(int)arg8 currentInfinityEndStopDelta:(int)arg9 previousInfinityEndStopDelta:(int)arg10 currentAngleDelta:(int)arg11 previousAngleDelta:(int)arg12 factoryCalibrationOffset:(int*)arg13 estimatedNeutralZ:(int*)arg14 deltaNeutralZFromNVM:(int*)arg15 estimatedSagZ:(int*)arg16 combinedSensorOutput:(int*)arg17 deltaSagFromNVM:(int*)arg18 isValid:(bool)arg19 dataWasRejectedByHistory:(bool)arg20;
- (void)reportAutoFocusPositionSensorMode:(int)arg1 portType:(id)arg2;
- (void)reportCalibrationStatisticsWithTime:(id)arg1 timeValue:(double)arg2 attemptsField:(id)arg3 attemptsValue:(long long)arg4 successField:(id)arg5 successValue:(long long)arg6 magneticFieldMagnitudeField:(id)arg7 magneticFieldMagnitudeValue:(double)arg8;
- (void)reportCameraAppCaptureForNonCameraAppLoggingWithFrontCamera:(bool)arg1;
- (void)reportCameraLaunchWithPrewarm:(int)arg1 reason:(id)arg2;
- (void)reportCameraLaunchWithoutPrewarm:(int)arg1;
- (void)reportCameraStreamingTimeInMilliseconds:(unsigned long long)arg1 deviceType:(int)arg2 devicePosition:(int)arg3;
- (void)reportCriticalFocusErrorOccurredForPortType:(id)arg1;
- (void)reportFaceCount:(unsigned int)arg1 frontCamera:(bool)arg2;
- (void)reportGNRSampleBufferProcessorProcessingStatus:(int)arg1;
- (void)reportISPCreateDuration:(int)arg1;
- (void)reportLuxLevel:(unsigned int)arg1 primaryCaptureType:(int)arg2 secondaryCaptureType:(int)arg3 captureFlags:(unsigned long long)arg4 sceneFlags:(unsigned long long)arg5 stillDuringVideo:(bool)arg6 frontCamera:(bool)arg7;
- (void)reportNonCameraAppCaptureWithPrimaryCaptureType:(int)arg1 secondaryCaptureType:(int)arg2 captureFlags:(unsigned long long)arg3 sceneFlags:(unsigned long long)arg4 stillDuringVideo:(bool)arg5 frontCamera:(bool)arg6;
- (void)reportPearlInfraredProjectorUptime:(unsigned long long)arg1 current:(int)arg2 pattern:(int)arg3 applicationID:(id)arg4;
- (void)reportSDOFSampleBufferProcessorProcessingStatus:(int)arg1;
- (void)reportSensorTemperature:(unsigned int)arg1 frontCamera:(bool)arg2;
- (void)reportShutterLag:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 primaryCaptureType:(int)arg2 secondaryCaptureType:(int)arg3 captureFlags:(unsigned long long)arg4 sceneFlags:(unsigned long long)arg5 stillDuringVideo:(bool)arg6 frontCamera:(bool)arg7;
- (void)reportSphereCalibrationForPosition:(int)arg1 freqX:(float)arg2 deltaFreqX:(float)arg3 qX:(float)arg4 deltaQX:(float)arg5 gainX:(float)arg6 freqY:(float)arg7 deltaFreqY:(float)arg8 qY:(float)arg9 deltaQY:(float)arg10 gainY:(float)arg11 calibrationStatus:(unsigned int)arg12 isValid:(bool)arg13;
- (void)reportSphereEndStopCalibrationForPosition:(int)arg1 oisPositiveX:(int)arg2 oisNegativeX:(int)arg3 oisPositiveY:(int)arg4 oisNegativeY:(int)arg5 maxPositiveXDriftFromNVM:(int)arg6 maxNegativeXDriftFromNVM:(int)arg7 maxPositiveYDriftFromNVM:(int)arg8 maxNegativeYDriftFromNVM:(int)arg9 sphereStrokeX:(int)arg10 sphereStrokeY:(int)arg11 calibrationStatus:(unsigned int)arg12 isValid:(bool)arg13;
- (void)reportSphereJitterDetectionsForPortType:(id)arg1 detectionAttemps:(int)arg2 successfulDetections:(int)arg3;
- (void)reportStereoFusionProcessingTypeForCaptureType:(int)arg1 isStereoFusionCapture:(bool)arg2 wideSubCaptureType:(int)arg3 teleSubCaptureType:(int)arg4 isOriginalImage:(bool)arg5;
- (void)reportStereoFusionSampleBufferProcessorProcessingStatus:(int)arg1;
- (void)reportStillImageAPSStatisticsForPortType:(id)arg1 logicalFocusPosition:(int)arg2 apsMotion:(float)arg3 sphereMotion:(float)arg4 accelMotion:(float)arg5 gyroMotion:(float)arg6 subjectDistance:(float)arg7 luxLevel:(int)arg8;
- (void)reportVideoRecordingAPSStatistics:(float)arg1 stdDataFromAPSForTele:(float)arg2 stdDataFromSphereForWide:(float)arg3 stdDataFromSphereForTele:(float)arg4 stdDataFromAccel:(float)arg5 stdDataFromGyro:(float)arg6 maxDataFromAPSForWide:(float)arg7 maxDataFromAPSForTele:(float)arg8 minDataFromAPSForWide:(float)arg9 minDataFromAPSForTele:(float)arg10 maxDataFromSphereForWide:(float)arg11 maxDataFromSphereForTele:(float)arg12 minDataFromSphereForWide:(float)arg13 minDataFromSphereForTele:(float)arg14 maxDataFromAccel:(float)arg15 minDataFromAccel:(float)arg16 maxDataFromGyro:(float)arg17 minDataFromGyro:(float)arg18;
- (void)reportZeroShutterLagFirmwareTimeMachineInitFailure;
- (void)reportZeroShutterLagInitSuccess;
- (void)reportZeroShutterLagMetadataInitFailureWithReasons:(unsigned int)arg1;
- (void)reportZeroShutterLagPreviewTimeMachineInitFailure;
- (void)reportZeroShutterLagReferenceFrameSelectionFailureForCaptureType:(int)arg1;
- (void)reportZeroShutterLagSphereInitFailure;
- (void)reportZeroShutterLagSuccess;
- (void)reportZoomFactor:(float)arg1 primaryCaptureType:(int)arg2 secondaryCaptureType:(int)arg3 captureFlags:(unsigned long long)arg4 sceneFlags:(unsigned long long)arg5 stillDuringVideo:(bool)arg6 frontCamera:(bool)arg7;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

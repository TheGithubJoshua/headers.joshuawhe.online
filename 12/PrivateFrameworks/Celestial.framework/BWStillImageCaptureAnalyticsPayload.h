<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BWStillImageCaptureAnalyticsPayload.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Celestial.framework/BWStillImageCaptureAnalyticsPayload.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial (2290.13.1.3)
 */

@interface BWStillImageCaptureAnalyticsPayload : NSObject <BWCoreAnalyticsPayload> {
    float  _SNR;
    float  _accelStandardDeviation;
    int  _activeDeviceMask;
    NSDictionary * _apsSubjectDistance;
    bool  _burst;
    unsigned long long  _captureFlags;
    int  _captureTime;
    int  _captureType;
    int  _clientIDType;
    bool  _depthEnabled;
    int  _devicePosition;
    int  _deviceType;
    float  _exposureDuration;
    float  _gyroStandardDeviation;
    float  _iso;
    float  _lensPosition;
    bool  _livePhotoEnabled;
    int  _luxLevel;
    float  _normalizedSNR;
    int  _numberOfFaces;
    NSString * _portType;
    unsigned int  _processingFlags;
    unsigned long long  _sceneFlags;
    int  _sensorTemperature;
    int  _shutterLag;
    int  _streamingTime;
    bool  _timeLapse;
    unsigned int  _timeSinceLastCaptureInSession;
    float  _zoom;
}

@property (nonatomic) float SNR;
@property (nonatomic) float accelStandardDeviation;
@property (nonatomic) int activeDeviceMask;
@property (nonatomic, retain) NSDictionary *apsSubjectDistance;
@property (nonatomic) bool burst;
@property (nonatomic) unsigned long long captureFlags;
@property (nonatomic) int captureTime;
@property (nonatomic) int captureType;
@property (nonatomic) int clientIDType;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool depthEnabled;
@property (readonly, copy) NSString *description;
@property (nonatomic) int devicePosition;
@property (nonatomic) int deviceType;
@property (nonatomic) float exposureDuration;
@property (nonatomic) float gyroStandardDeviation;
@property (readonly) unsigned long long hash;
@property (nonatomic) float iso;
@property (nonatomic) float lensPosition;
@property (nonatomic) bool livePhotoEnabled;
@property (nonatomic) int luxLevel;
@property (nonatomic) float normalizedSNR;
@property (nonatomic) int numberOfFaces;
@property (nonatomic, retain) NSString *portType;
@property (nonatomic) unsigned int processingFlags;
@property (nonatomic) unsigned long long sceneFlags;
@property (nonatomic) int sensorTemperature;
@property (nonatomic) int shutterLag;
@property (nonatomic) int streamingTime;
@property (readonly) Class superclass;
@property (nonatomic) bool timeLapse;
@property (nonatomic) unsigned int timeSinceLastCaptureInSession;
@property (nonatomic) float zoom;

- (float)SNR;
- (float)accelStandardDeviation;
- (int)activeDeviceMask;
- (id)apsSubjectDistance;
- (bool)burst;
- (unsigned long long)captureFlags;
- (int)captureTime;
- (int)captureType;
- (int)clientIDType;
- (void)dealloc;
- (bool)depthEnabled;
- (int)devicePosition;
- (int)deviceType;
- (id)eventDictionary;
- (id)eventName;
- (float)exposureDuration;
- (float)gyroStandardDeviation;
- (id)init;
- (float)iso;
- (float)lensPosition;
- (bool)livePhotoEnabled;
- (int)luxLevel;
- (float)normalizedSNR;
- (int)numberOfFaces;
- (id)portType;
- (unsigned int)processingFlags;
- (void)reset;
- (unsigned long long)sceneFlags;
- (int)sensorTemperature;
- (void)setAccelStandardDeviation:(float)arg1;
- (void)setActiveDeviceMask:(int)arg1;
- (void)setApsSubjectDistance:(id)arg1;
- (void)setBurst:(bool)arg1;
- (void)setCaptureFlags:(unsigned long long)arg1;
- (void)setCaptureTime:(int)arg1;
- (void)setCaptureType:(int)arg1;
- (void)setClientIDType:(int)arg1;
- (void)setDepthEnabled:(bool)arg1;
- (void)setDevicePosition:(int)arg1;
- (void)setDeviceType:(int)arg1;
- (void)setExposureDuration:(float)arg1;
- (void)setGyroStandardDeviation:(float)arg1;
- (void)setIso:(float)arg1;
- (void)setLensPosition:(float)arg1;
- (void)setLivePhotoEnabled:(bool)arg1;
- (void)setLuxLevel:(int)arg1;
- (void)setNormalizedSNR:(float)arg1;
- (void)setNumberOfFaces:(int)arg1;
- (void)setPortType:(id)arg1;
- (void)setProcessingFlags:(unsigned int)arg1;
- (void)setSNR:(float)arg1;
- (void)setSceneFlags:(unsigned long long)arg1;
- (void)setSensorTemperature:(int)arg1;
- (void)setShutterLag:(int)arg1;
- (void)setStreamingTime:(int)arg1;
- (void)setTimeLapse:(bool)arg1;
- (void)setTimeSinceLastCaptureInSession:(unsigned int)arg1;
- (void)setZoom:(float)arg1;
- (int)shutterLag;
- (int)streamingTime;
- (bool)timeLapse;
- (unsigned int)timeSinceLastCaptureInSession;
- (float)zoom;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BWStreamingSessionAnalyticsPayload.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Celestial.framework/BWStreamingSessionAnalyticsPayload.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Celestial.framework/Celestial (2290.13.1.3)
 */

@interface BWStreamingSessionAnalyticsPayload : NSObject <BWCoreAnalyticsPayload> {
    int  _clientIDType;
    int  _devicePosition;
    int  _deviceType;
    unsigned int  _maxTimeSinceLastPhotoCapture;
    unsigned int  _minTimeSinceLastPhotoCapture;
    unsigned int  _numberOfBalancedPhotoCaptures;
    unsigned int  _numberOfBurstPhotoCaptures;
    unsigned int  _numberOfButtonMashingCapturesAtRate0;
    unsigned int  _numberOfButtonMashingCapturesAtRate1;
    unsigned int  _numberOfButtonMashingEventsAtRate0;
    unsigned int  _numberOfButtonMashingEventsAtRate1;
    unsigned int  _numberOfPhotoCaptures;
    NSDictionary * _numberOfSphereJitterDetectAttempts;
    NSDictionary * _numberOfSphereJitterDetects;
    NSString * _sphereMode;
    unsigned int  _streamingTime;
    NSSet * _sunburnDetectOccurred;
    unsigned int  _timeToFirstPhotoCapture;
}

@property (nonatomic) int clientIDType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) int devicePosition;
@property (nonatomic) int deviceType;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned int maxTimeSinceLastPhotoCapture;
@property (nonatomic) unsigned int minTimeSinceLastPhotoCapture;
@property (nonatomic) unsigned int numberOfBalancedPhotoCaptures;
@property (nonatomic) unsigned int numberOfBurstPhotoCaptures;
@property (nonatomic) unsigned int numberOfButtonMashingCapturesAtRate0;
@property (nonatomic) unsigned int numberOfButtonMashingCapturesAtRate1;
@property (nonatomic) unsigned int numberOfButtonMashingEventsAtRate0;
@property (nonatomic) unsigned int numberOfButtonMashingEventsAtRate1;
@property (nonatomic) unsigned int numberOfPhotoCaptures;
@property (nonatomic, retain) NSDictionary *numberOfSphereJitterDetectAttempts;
@property (nonatomic, retain) NSDictionary *numberOfSphereJitterDetects;
@property (nonatomic, retain) NSString *sphereMode;
@property (nonatomic) unsigned int streamingTime;
@property (nonatomic, retain) NSSet *sunburnDetectOccurred;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int timeToFirstPhotoCapture;

- (int)clientIDType;
- (void)dealloc;
- (int)devicePosition;
- (int)deviceType;
- (id)eventDictionary;
- (id)eventName;
- (id)init;
- (unsigned int)maxTimeSinceLastPhotoCapture;
- (unsigned int)minTimeSinceLastPhotoCapture;
- (unsigned int)numberOfBalancedPhotoCaptures;
- (unsigned int)numberOfBurstPhotoCaptures;
- (unsigned int)numberOfButtonMashingCapturesAtRate0;
- (unsigned int)numberOfButtonMashingCapturesAtRate1;
- (unsigned int)numberOfButtonMashingEventsAtRate0;
- (unsigned int)numberOfButtonMashingEventsAtRate1;
- (unsigned int)numberOfPhotoCaptures;
- (id)numberOfSphereJitterDetectAttempts;
- (id)numberOfSphereJitterDetects;
- (void)reset;
- (void)setClientIDType:(int)arg1;
- (void)setDevicePosition:(int)arg1;
- (void)setDeviceType:(int)arg1;
- (void)setMaxTimeSinceLastPhotoCapture:(unsigned int)arg1;
- (void)setMinTimeSinceLastPhotoCapture:(unsigned int)arg1;
- (void)setNumberOfBalancedPhotoCaptures:(unsigned int)arg1;
- (void)setNumberOfBurstPhotoCaptures:(unsigned int)arg1;
- (void)setNumberOfButtonMashingCapturesAtRate0:(unsigned int)arg1;
- (void)setNumberOfButtonMashingCapturesAtRate1:(unsigned int)arg1;
- (void)setNumberOfButtonMashingEventsAtRate0:(unsigned int)arg1;
- (void)setNumberOfButtonMashingEventsAtRate1:(unsigned int)arg1;
- (void)setNumberOfPhotoCaptures:(unsigned int)arg1;
- (void)setNumberOfSphereJitterDetectAttempts:(id)arg1;
- (void)setNumberOfSphereJitterDetects:(id)arg1;
- (void)setSphereMode:(id)arg1;
- (void)setStreamingTime:(unsigned int)arg1;
- (void)setSunburnDetectOccurred:(id)arg1;
- (void)setTimeToFirstPhotoCapture:(unsigned int)arg1;
- (id)sphereMode;
- (unsigned int)streamingTime;
- (id)sunburnDetectOccurred;
- (unsigned int)timeToFirstPhotoCapture;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MTPBAlarm.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MobileTimer.framework/MTPBAlarm.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer (1)
 */

@interface MTPBAlarm : PBCodable <NSCopying> {
    unsigned int  _active;
    NSString * _alarmID;
    bool  _allowsSnooze;
    bool  _bedtimeDoNotDisturb;
    double  _bedtimeForSleepTracking;
    unsigned int  _bedtimeHour;
    unsigned int  _bedtimeMinute;
    unsigned int  _bedtimeReminderMinutes;
    double  _bedtimeSnoozeFire;
    unsigned int  _daySetting;
    double  _dismissed;
    double  _fired;
    struct { 
        unsigned int bedtimeForSleepTracking : 1; 
        unsigned int bedtimeSnoozeFire : 1; 
        unsigned int dismissed : 1; 
        unsigned int fired : 1; 
        unsigned int mediaID : 1; 
        unsigned int snoozeFire : 1; 
        unsigned int soundVolume : 1; 
    }  _has;
    unsigned int  _hour;
    bool  _isEnabled;
    bool  _isSleepAlarm;
    double  _lastModified;
    double  _mediaID;
    unsigned int  _minute;
    unsigned int  _revision;
    double  _snoozeFire;
    unsigned int  _soundType;
    float  _soundVolume;
    NSString * _title;
    NSString * _toneID;
    NSString * _vibeID;
}

@property (nonatomic) unsigned int active;
@property (nonatomic, retain) NSString *alarmID;
@property (nonatomic) bool allowsSnooze;
@property (nonatomic) bool bedtimeDoNotDisturb;
@property (nonatomic) double bedtimeForSleepTracking;
@property (nonatomic) unsigned int bedtimeHour;
@property (nonatomic) unsigned int bedtimeMinute;
@property (nonatomic) unsigned int bedtimeReminderMinutes;
@property (nonatomic) double bedtimeSnoozeFire;
@property (nonatomic) unsigned int daySetting;
@property (nonatomic) double dismissed;
@property (nonatomic) double fired;
@property (nonatomic) bool hasBedtimeForSleepTracking;
@property (nonatomic) bool hasBedtimeSnoozeFire;
@property (nonatomic) bool hasDismissed;
@property (nonatomic) bool hasFired;
@property (nonatomic) bool hasMediaID;
@property (nonatomic) bool hasSnoozeFire;
@property (nonatomic) bool hasSoundVolume;
@property (nonatomic, readonly) bool hasTitle;
@property (nonatomic, readonly) bool hasToneID;
@property (nonatomic, readonly) bool hasVibeID;
@property (nonatomic) unsigned int hour;
@property (nonatomic) bool isEnabled;
@property (nonatomic) bool isSleepAlarm;
@property (nonatomic) double lastModified;
@property (nonatomic) double mediaID;
@property (nonatomic) unsigned int minute;
@property (nonatomic) unsigned int revision;
@property (nonatomic) double snoozeFire;
@property (nonatomic) unsigned int soundType;
@property (nonatomic) float soundVolume;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) NSString *toneID;
@property (nonatomic, retain) NSString *vibeID;

- (void).cxx_destruct;
- (unsigned int)active;
- (id)alarmID;
- (bool)allowsSnooze;
- (bool)bedtimeDoNotDisturb;
- (double)bedtimeForSleepTracking;
- (unsigned int)bedtimeHour;
- (unsigned int)bedtimeMinute;
- (unsigned int)bedtimeReminderMinutes;
- (double)bedtimeSnoozeFire;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned int)daySetting;
- (id)description;
- (id)dictionaryRepresentation;
- (double)dismissed;
- (double)fired;
- (bool)hasBedtimeForSleepTracking;
- (bool)hasBedtimeSnoozeFire;
- (bool)hasDismissed;
- (bool)hasFired;
- (bool)hasMediaID;
- (bool)hasSnoozeFire;
- (bool)hasSoundVolume;
- (bool)hasTitle;
- (bool)hasToneID;
- (bool)hasVibeID;
- (unsigned long long)hash;
- (unsigned int)hour;
- (bool)isEnabled;
- (bool)isEqual:(id)arg1;
- (bool)isSleepAlarm;
- (double)lastModified;
- (double)mediaID;
- (void)mergeFrom:(id)arg1;
- (unsigned int)minute;
- (bool)readFrom:(id)arg1;
- (unsigned int)revision;
- (void)setActive:(unsigned int)arg1;
- (void)setAlarmID:(id)arg1;
- (void)setAllowsSnooze:(bool)arg1;
- (void)setBedtimeDoNotDisturb:(bool)arg1;
- (void)setBedtimeForSleepTracking:(double)arg1;
- (void)setBedtimeHour:(unsigned int)arg1;
- (void)setBedtimeMinute:(unsigned int)arg1;
- (void)setBedtimeReminderMinutes:(unsigned int)arg1;
- (void)setBedtimeSnoozeFire:(double)arg1;
- (void)setDaySetting:(unsigned int)arg1;
- (void)setDismissed:(double)arg1;
- (void)setFired:(double)arg1;
- (void)setHasBedtimeForSleepTracking:(bool)arg1;
- (void)setHasBedtimeSnoozeFire:(bool)arg1;
- (void)setHasDismissed:(bool)arg1;
- (void)setHasFired:(bool)arg1;
- (void)setHasMediaID:(bool)arg1;
- (void)setHasSnoozeFire:(bool)arg1;
- (void)setHasSoundVolume:(bool)arg1;
- (void)setHour:(unsigned int)arg1;
- (void)setIsEnabled:(bool)arg1;
- (void)setIsSleepAlarm:(bool)arg1;
- (void)setLastModified:(double)arg1;
- (void)setMediaID:(double)arg1;
- (void)setMinute:(unsigned int)arg1;
- (void)setRevision:(unsigned int)arg1;
- (void)setSnoozeFire:(double)arg1;
- (void)setSoundType:(unsigned int)arg1;
- (void)setSoundVolume:(float)arg1;
- (void)setTitle:(id)arg1;
- (void)setToneID:(id)arg1;
- (void)setVibeID:(id)arg1;
- (double)snoozeFire;
- (unsigned int)soundType;
- (float)soundVolume;
- (id)title;
- (id)toneID;
- (id)vibeID;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MTAgent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MobileTimer.framework/MTAgent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer (1)
 */

@interface MTAgent : NSObject <MTAgentDiagnosticDelegate, MTSystemStateDelegate> {
    MTAlarmIntentDonor * _alarmIntentDonor;
    MTAlarmScheduler * _alarmScheduler;
    MTAlarmServer * _alarmServer;
    MTAlarmSnapshot * _alarmSnapshot;
    MTAlarmStorage * _alarmStorage;
    MTBedtimeDNDMonitor * _bedtimeDNDMonitor;
    MTBedtimeSnapshot * _bedtimeSnapshot;
    MTAgentDiagnosticListener * _diagnostics;
    MTLanguageChangeListener * _languageChangeListener;
    NSDate * _launchDate;
    long long  _mode;
    <MTNotificationCenter> * _notificationCenter;
    MTAgentNotificationManager * _notificationManager;
    <MTNotificationResponseDelegate> * _notificationResponseDelegate;
    MTPairedDeviceListener * _pairedDeviceListener;
    MTSleepMetrics * _sleepMetrics;
    MTSleepMonitor * _sleepMonitor;
    MTSyncCommandListener * _syncCommandListener;
    MTSystemStateListener * _systemStateListener;
    MTTimeListener * _timeListener;
    MTTimerIntentDonor * _timerIntentDonor;
    MTTimerScheduler * _timerScheduler;
    MTTimerServer * _timerServer;
    MTTimerSnapshot * _timerSnapshot;
    MTTimerStorage * _timerStorage;
}

@property (nonatomic, retain) MTAlarmIntentDonor *alarmIntentDonor;
@property (nonatomic, retain) MTAlarmScheduler *alarmScheduler;
@property (nonatomic, retain) MTAlarmServer *alarmServer;
@property (nonatomic, retain) MTAlarmSnapshot *alarmSnapshot;
@property (nonatomic, retain) MTAlarmStorage *alarmStorage;
@property (nonatomic, retain) MTBedtimeDNDMonitor *bedtimeDNDMonitor;
@property (nonatomic, retain) MTBedtimeSnapshot *bedtimeSnapshot;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) MTAgentDiagnosticListener *diagnostics;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MTLanguageChangeListener *languageChangeListener;
@property (nonatomic, retain) NSDate *launchDate;
@property (nonatomic) long long mode;
@property (nonatomic, retain) <MTNotificationCenter> *notificationCenter;
@property (nonatomic, retain) MTAgentNotificationManager *notificationManager;
@property (nonatomic, retain) <MTNotificationResponseDelegate> *notificationResponseDelegate;
@property (nonatomic, retain) MTPairedDeviceListener *pairedDeviceListener;
@property (nonatomic, retain) MTSleepMetrics *sleepMetrics;
@property (nonatomic, retain) MTSleepMonitor *sleepMonitor;
@property (readonly) Class superclass;
@property (nonatomic, retain) MTSyncCommandListener *syncCommandListener;
@property (nonatomic, retain) MTSystemStateListener *systemStateListener;
@property (nonatomic, retain) MTTimeListener *timeListener;
@property (nonatomic, retain) MTTimerIntentDonor *timerIntentDonor;
@property (nonatomic, retain) MTTimerScheduler *timerScheduler;
@property (nonatomic, retain) MTTimerServer *timerServer;
@property (nonatomic, retain) MTTimerSnapshot *timerSnapshot;
@property (nonatomic, retain) MTTimerStorage *timerStorage;

+ (id)agent;

- (void).cxx_destruct;
- (id)_diagnosticProviders;
- (void)_setupAlarms;
- (void)_setupInitialListeners;
- (void)_setupSecondaryListeners;
- (void)_setupSync;
- (void)_setupSyncMonitor;
- (void)_setupTimers;
- (id)alarmIntentDonor;
- (id)alarmScheduler;
- (id)alarmServer;
- (id)alarmSnapshot;
- (id)alarmStorage;
- (id)bedtimeDNDMonitor;
- (id)bedtimeSnapshot;
- (id)diagnostics;
- (id)gatherDiagnostics;
- (void)handleF5Reset;
- (id)init;
- (id)languageChangeListener;
- (id)launchDate;
- (long long)mode;
- (id)notificationCenter;
- (id)notificationManager;
- (id)notificationResponseDelegate;
- (id)pairedDeviceListener;
- (void)printDiagnostics;
- (void)restoreDidFinish;
- (void)setAlarmIntentDonor:(id)arg1;
- (void)setAlarmScheduler:(id)arg1;
- (void)setAlarmServer:(id)arg1;
- (void)setAlarmSnapshot:(id)arg1;
- (void)setAlarmStorage:(id)arg1;
- (void)setBedtimeDNDMonitor:(id)arg1;
- (void)setBedtimeSnapshot:(id)arg1;
- (void)setDiagnostics:(id)arg1;
- (void)setLanguageChangeListener:(id)arg1;
- (void)setLaunchDate:(id)arg1;
- (void)setMode:(long long)arg1;
- (void)setNotificationCenter:(id)arg1;
- (void)setNotificationManager:(id)arg1;
- (void)setNotificationResponseDelegate:(id)arg1;
- (void)setPairedDeviceListener:(id)arg1;
- (void)setSleepMetrics:(id)arg1;
- (void)setSleepMonitor:(id)arg1;
- (void)setSyncCommandListener:(id)arg1;
- (void)setSystemStateListener:(id)arg1;
- (void)setTimeListener:(id)arg1;
- (void)setTimerIntentDonor:(id)arg1;
- (void)setTimerScheduler:(id)arg1;
- (void)setTimerServer:(id)arg1;
- (void)setTimerSnapshot:(id)arg1;
- (void)setTimerStorage:(id)arg1;
- (id)sleepMetrics;
- (id)sleepMonitor;
- (id)syncCommandListener;
- (id)systemStateListener;
- (id)timeListener;
- (id)timerIntentDonor;
- (id)timerScheduler;
- (id)timerServer;
- (id)timerSnapshot;
- (id)timerStorage;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ADAdImpressionPublicAttributes.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iAdServices.framework/ADAdImpressionPublicAttributes.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iAdServices.framework/iAdServices (1)
 */

@interface ADAdImpressionPublicAttributes : NSObject <NSSecureCoding> {
    NSString * _accessibilityLabel;
    bool  _adLibManagedVideo;
    long long  _adPrivacyMarkPosition;
    NSArray * _adSpecCreativeSizes;
    NSURL * _audioURL;
    NSString * _batchResponseIdentifier;
    double  _containerHeight;
    double  _containerWidth;
    NSString * _contentString;
    NSURL * _contentURL;
    NSString * _descriptionForLCD;
    NSArray * _excludeTags;
    bool  _hasAction;
    NSString * _headlineForLCD;
    double  _landscapeHeight;
    double  _landscapeWidth;
    NSURL * _logoImageURL;
    NSArray * _matchClauses;
    long long  _maximumPretapRequestCount;
    NSDictionary * _mediaAsset;
    double  _minimumIntervalBetweenPresentations;
    NSDictionary * _nativeMediaCreativeMetadata;
    NSArray * _nativeMetadata;
    double  _portraitHeight;
    double  _portraitWidth;
    bool  _requiresMRAID;
    double  _skipThreshold;
    NSURL * _staticImageURL;
    NSDictionary * _transparencyDetails;
    bool  _unbranded;
    NSString * _uniqueIdentifier;
    NSArray * _videoAssets;
}

@property (nonatomic, copy) NSString *accessibilityLabel;
@property (nonatomic) bool adLibManagedVideo;
@property (nonatomic) long long adPrivacyMarkPosition;
@property (nonatomic, retain) NSArray *adSpecCreativeSizes;
@property (nonatomic, retain) NSURL *audioURL;
@property (nonatomic, copy) NSString *batchResponseIdentifier;
@property (nonatomic) double containerHeight;
@property (nonatomic) double containerWidth;
@property (nonatomic, retain) NSString *contentString;
@property (nonatomic, retain) NSURL *contentURL;
@property (nonatomic, copy) NSString *descriptionForLCD;
@property (nonatomic, retain) NSArray *excludeTags;
@property (nonatomic) bool hasAction;
@property (nonatomic, copy) NSString *headlineForLCD;
@property (nonatomic) double landscapeHeight;
@property (nonatomic) double landscapeWidth;
@property (nonatomic, retain) NSURL *logoImageURL;
@property (nonatomic, retain) NSArray *matchClauses;
@property (nonatomic) long long maximumPretapRequestCount;
@property (nonatomic, retain) NSDictionary *mediaAsset;
@property (nonatomic) double minimumIntervalBetweenPresentations;
@property (nonatomic, retain) NSDictionary *nativeMediaCreativeMetadata;
@property (nonatomic, retain) NSArray *nativeMetadata;
@property (nonatomic) double portraitHeight;
@property (nonatomic) double portraitWidth;
@property (nonatomic) bool requiresMRAID;
@property (nonatomic) double skipThreshold;
@property (nonatomic, retain) NSURL *staticImageURL;
@property (nonatomic, retain) NSDictionary *transparencyDetails;
@property (nonatomic) bool unbranded;
@property (nonatomic, copy) NSString *uniqueIdentifier;
@property (nonatomic, retain) NSArray *videoAssets;

+ (bool)supportsSecureCoding;

- (id)accessibilityLabel;
- (bool)adLibManagedVideo;
- (long long)adPrivacyMarkPosition;
- (id)adSpecCreativeSizes;
- (id)audioURL;
- (id)batchResponseIdentifier;
- (double)containerHeight;
- (double)containerWidth;
- (id)contentString;
- (id)contentURL;
- (void)dealloc;
- (id)description;
- (id)descriptionForLCD;
- (void)encodeWithCoder:(id)arg1;
- (id)excludeTags;
- (bool)hasAction;
- (id)headlineForLCD;
- (id)initWithCoder:(id)arg1;
- (double)landscapeHeight;
- (double)landscapeWidth;
- (id)logoImageURL;
- (id)matchClauses;
- (long long)maximumPretapRequestCount;
- (id)mediaAsset;
- (double)minimumIntervalBetweenPresentations;
- (id)nativeMediaCreativeMetadata;
- (id)nativeMetadata;
- (double)portraitHeight;
- (double)portraitWidth;
- (bool)requiresMRAID;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setAdLibManagedVideo:(bool)arg1;
- (void)setAdPrivacyMarkPosition:(long long)arg1;
- (void)setAdSpecCreativeSizes:(id)arg1;
- (void)setAudioURL:(id)arg1;
- (void)setBatchResponseIdentifier:(id)arg1;
- (void)setContainerHeight:(double)arg1;
- (void)setContainerWidth:(double)arg1;
- (void)setContentString:(id)arg1;
- (void)setContentURL:(id)arg1;
- (void)setDescriptionForLCD:(id)arg1;
- (void)setExcludeTags:(id)arg1;
- (void)setHasAction:(bool)arg1;
- (void)setHeadlineForLCD:(id)arg1;
- (void)setLandscapeHeight:(double)arg1;
- (void)setLandscapeWidth:(double)arg1;
- (void)setLogoImageURL:(id)arg1;
- (void)setMatchClauses:(id)arg1;
- (void)setMaximumPretapRequestCount:(long long)arg1;
- (void)setMediaAsset:(id)arg1;
- (void)setMinimumIntervalBetweenPresentations:(double)arg1;
- (void)setNativeMediaCreativeMetadata:(id)arg1;
- (void)setNativeMetadata:(id)arg1;
- (void)setPortraitHeight:(double)arg1;
- (void)setPortraitWidth:(double)arg1;
- (void)setRequiresMRAID:(bool)arg1;
- (void)setSkipThreshold:(double)arg1;
- (void)setStaticImageURL:(id)arg1;
- (void)setTransparencyDetails:(id)arg1;
- (void)setUnbranded:(bool)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (void)setVideoAssets:(id)arg1;
- (double)skipThreshold;
- (id)staticImageURL;
- (id)transparencyDetails;
- (bool)unbranded;
- (id)uniqueIdentifier;
- (id)videoAssets;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

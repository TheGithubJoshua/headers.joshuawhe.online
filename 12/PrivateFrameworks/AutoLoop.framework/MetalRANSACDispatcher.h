<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MetalRANSACDispatcher.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AutoLoop.framework/MetalRANSACDispatcher.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AutoLoop.framework/AutoLoop (1)
 */

@interface MetalRANSACDispatcher : NSObject {
    <MTLBuffer> * _m_ModelScores;
    <MTLBuffer> * _m_RansacHomographies;
    <MTLBuffer> * _m_RansacParams;
    <MTLBuffer> * _m_ScoreBuffer;
    <MTLBuffer> * _m_mX;
    <MTLBuffer> * _m_mXhat;
    unsigned long long  _m_maxCorrespondences;
    unsigned long long  _m_numThreadsPerGroup;
    struct CGSize { 
        double width; 
        double height; 
    }  frameSize;
    float  inlierLimit;
    <MTLCommandQueue> * m_metalCommandQueue;
    <MTLDevice> * m_metalDevice;
    <MTLFunction> * m_metalKernelFunction;
    <MTLLibrary> * m_metalLibrary;
    <MTLComputePipelineState> * m_metalPipeline;
}

@property (nonatomic) struct CGSize { double x1; double x2; } frameSize;
@property (nonatomic) float inlierLimit;
@property (nonatomic, retain) <MTLBuffer> *m_ModelScores;
@property (nonatomic, retain) <MTLBuffer> *m_RansacHomographies;
@property (nonatomic, retain) <MTLBuffer> *m_RansacParams;
@property (nonatomic, retain) <MTLBuffer> *m_ScoreBuffer;
@property (nonatomic, retain) <MTLBuffer> *m_mX;
@property (nonatomic, retain) <MTLBuffer> *m_mXhat;
@property (nonatomic) unsigned long long m_maxCorrespondences;
@property (nonatomic, retain) <MTLCommandQueue> *m_metalCommandQueue;
@property (nonatomic, retain) <MTLDevice> *m_metalDevice;
@property (nonatomic, retain) <MTLFunction> *m_metalKernelFunction;
@property (nonatomic, retain) <MTLLibrary> *m_metalLibrary;
@property (nonatomic, retain) <MTLComputePipelineState> *m_metalPipeline;
@property (nonatomic) unsigned long long m_numThreadsPerGroup;

- (void).cxx_destruct;
- (void)assureSizeAndCopyToMetalBuffer:(id*)arg1 fromData:(const void*)arg2 dataSize:(unsigned long long)arg3 metalResourceOptions:(unsigned long long)arg4;
- (struct CGSize { double x1; double x2; })frameSize;
- (id)initWithMaxCorrespondences:(unsigned long long)arg1;
- (float)inlierLimit;
- (id)m_ModelScores;
- (id)m_RansacHomographies;
- (id)m_RansacParams;
- (id)m_ScoreBuffer;
- (id)m_mX;
- (id)m_mXhat;
- (unsigned long long)m_maxCorrespondences;
- (id)m_metalCommandQueue;
- (id)m_metalDevice;
- (id)m_metalKernelFunction;
- (id)m_metalLibrary;
- (id)m_metalPipeline;
- (unsigned long long)m_numThreadsPerGroup;
- (void)performRansacOnData:(unsigned int)arg1 firstPointSet:(const float*)arg2 secondPointSet:(const float*)arg3 pointWeights:(const float*)arg4 homographies:(const struct ransac_homography_record { float x1[9]; }*)arg5 numHomographies:(unsigned int)arg6 homScores:(float*)arg7;
- (void)setFrameSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setInlierLimit:(float)arg1;
- (void)setM_ModelScores:(id)arg1;
- (void)setM_RansacHomographies:(id)arg1;
- (void)setM_RansacParams:(id)arg1;
- (void)setM_ScoreBuffer:(id)arg1;
- (void)setM_mX:(id)arg1;
- (void)setM_mXhat:(id)arg1;
- (void)setM_maxCorrespondences:(unsigned long long)arg1;
- (void)setM_metalCommandQueue:(id)arg1;
- (void)setM_metalDevice:(id)arg1;
- (void)setM_metalKernelFunction:(id)arg1;
- (void)setM_metalLibrary:(id)arg1;
- (void)setM_metalPipeline:(id)arg1;
- (void)setM_numThreadsPerGroup:(unsigned long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

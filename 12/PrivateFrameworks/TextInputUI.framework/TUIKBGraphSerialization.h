<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TUIKBGraphSerialization.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TextInputUI.framework/TUIKBGraphSerialization.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TextInputUI.framework/TextInputUI (1.0)
 */

@interface TUIKBGraphSerialization : NSObject {
    NSMutableDictionary * _deserializationCache;
    bool  _disableOffsets;
    NSData * _graphData;
    NSDictionary * _keyboardOffsets;
    NSData * _keyboardOffsetsData;
    NSMutableDictionary * _maxEdgeWidths;
    NSMutableDictionary * _minEdgeWidths;
    NSMutableDictionary * _referenceCount;
    NSData * _serializedData;
    NSMapTable * _serializedOffsets;
}

@property (nonatomic, retain) NSMutableDictionary *deserializationCache;
@property (nonatomic, readonly) NSMutableData *graphData;
@property (nonatomic, readonly) NSMutableDictionary *keyboardOffsets;
@property (nonatomic, retain) NSData *serializedData;

+ (id)separatorCharacterSet;

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })CGRectForOffset:(int*)arg1;
- (id)UIKBTreeForOffset:(int*)arg1 withFlags:(unsigned long long)arg2;
- (struct { double x1; int x2; })UIKBValueForOffset:(int*)arg1;
- (id)_objectAtSerializedOffset:(int)arg1;
- (int)_serializedOffsetForObject:(id)arg1;
- (void)addKeyboardPrefix:(id)arg1 forWidth:(float)arg2 minEdge:(bool)arg3;
- (id)arrayForOffset:(int*)arg1 withCount:(unsigned long long)arg2;
- (float)bareFloatForOffset:(int*)arg1;
- (float)compressedFloatForOffset:(int*)arg1 withKind:(unsigned char)arg2;
- (unsigned long long)compressedIntForOffset:(int*)arg1;
- (unsigned long long)compressedUIntForOffset:(int*)arg1;
- (id)dataForArray:(id)arg1;
- (id)dataForBareFloat:(float)arg1;
- (id)dataForCGRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)dataForCompressedFloat:(float)arg1 kind:(unsigned char*)arg2;
- (id)dataForCompressedInt:(long long)arg1;
- (id)dataForCompressedUInt:(unsigned long long)arg1;
- (id)dataForDictionary:(id)arg1;
- (id)dataForFlags:(unsigned char)arg1;
- (id)dataForFloat:(float)arg1;
- (id)dataForGeometry:(id)arg1;
- (id)dataForInt:(int)arg1;
- (id)dataForMergeAction:(id)arg1;
- (id)dataForObject:(id)arg1;
- (id)dataForOffsetObject:(id)arg1;
- (id)dataForReference:(int)arg1;
- (id)dataForSet:(id)arg1;
- (id)dataForShape:(id)arg1;
- (id)dataForSimpleString:(id)arg1;
- (id)dataForString:(id)arg1;
- (id)dataForStringConcat:(id)arg1;
- (id)dataForUIKBTree:(id)arg1;
- (id)dataForUIKBValue:(struct { double x1; int x2; })arg1;
- (void)dealloc;
- (id)deserializationCache;
- (id)dictionaryForOffset:(int*)arg1 nonEmpty:(bool)arg2;
- (unsigned char)flagsForOffset:(int*)arg1;
- (float)floatValueForOffset:(int*)arg1;
- (id)geometryForOffset:(int*)arg1 withFlags:(unsigned long long)arg2;
- (id)graphData;
- (id)init;
- (int)intValueForOffset:(int*)arg1;
- (id)keyboardForName:(id)arg1;
- (id)keyboardOffsets;
- (id)keyboardPrefixForWidth:(float)arg1 andEdge:(bool)arg2;
- (id)mergeActionForOffset:(int*)arg1 withFlags:(unsigned long long)arg2;
- (id)mutableDataForObjectType:(unsigned char)arg1;
- (id)mutableDataForObjectType:(unsigned char)arg1 withFlags:(unsigned long long)arg2;
- (id)mutableDataForObjectType:(unsigned char)arg1 withSize:(unsigned long long)arg2;
- (id)objectForOffset:(int*)arg1;
- (void)persistData:(id)arg1 forObject:(id)arg2;
- (void)preheatWithStatistics:(id)arg1;
- (id)refArrayForOffset:(int*)arg1 withCount:(unsigned long long)arg2;
- (id)relativeRefArrayForOffset:(int*)arg1 withCount:(unsigned long long)arg2;
- (void)reset;
- (id)sanitizedDictionary:(id)arg1;
- (void)serializeObject:(id)arg1;
- (id)serializedData;
- (unsigned long long)serializedObjectCount;
- (void)setDeserializationCache:(id)arg1;
- (id)setForOffset:(int*)arg1 nonEmpty:(bool)arg2;
- (void)setSerializedData:(id)arg1;
- (id)shapeForOffset:(int*)arg1 withFlags:(unsigned long long)arg2;
- (id)simpleStringForOffset:(int*)arg1 withUTF8Length:(unsigned long long)arg2;
- (id)statistics;
- (id)stringConcatForOffset:(int*)arg1 withComponentCount:(unsigned long long)arg2;
- (bool)stringIsSimple:(id)arg1;
- (id)stringsBySplittingString:(id)arg1 afterCharactersInSet:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

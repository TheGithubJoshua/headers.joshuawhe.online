<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MTMaterialSettingsInterpolator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MaterialKit.framework/MTMaterialSettingsInterpolator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit (1)
 */

@interface MTMaterialSettingsInterpolator : NSObject {
    unsigned long long  _finalOptions;
    <MTMaterialSettings> * _finalSettings;
    unsigned long long  _initialOptions;
    <MTMaterialSettings> * _initialSettings;
    double  _previousWeighting;
    double  _weighting;
}

@property (getter=isAuxiliaryOverlayOptionEnabled, nonatomic, readonly) bool auxiliaryOverlayOptionEnabled;
@property (getter=isBackdropRequiredEver, nonatomic, readonly) bool backdropRequiredEver;
@property (getter=isBackdropRequiredFinally, nonatomic, readonly) bool backdropRequiredFinally;
@property (getter=isBackdropRequiredInitially, nonatomic, readonly) bool backdropRequiredInitially;
@property (nonatomic, readonly) double backdropScale;
@property (getter=isBackdropTintEnabled, nonatomic, readonly) bool backdropTintEnabled;
@property (nonatomic, readonly, copy) UIColor *baseOverlayColor;
@property (getter=isBaseOverlayOptionEnabled, nonatomic, readonly) bool baseOverlayOptionEnabled;
@property (getter=isBlurEnabled, nonatomic, readonly) bool blurEnabled;
@property (nonatomic, readonly, copy) NSString *blurInputQuality;
@property (getter=isBlurOptionEnabled, nonatomic, readonly) bool blurOptionEnabled;
@property (nonatomic, readonly) double blurRadius;
@property (nonatomic, readonly) double blurRadiusWithTransformer;
@property (nonatomic, readonly) double brightness;
@property (getter=isBrightnessEnabled, nonatomic, readonly) bool brightnessEnabled;
@property (getter=isCaptureOnlyOptionEnabled, nonatomic, readonly) bool captureOnlyOptionEnabled;
@property (nonatomic, readonly, copy) UIColor *colorAddColor;
@property (nonatomic, readonly, copy) UIColor *colorMatrixColor;
@property (nonatomic) unsigned long long finalOptions;
@property (nonatomic, retain) <MTMaterialSettings> *finalSettings;
@property (getter=isGammaOptionEnabled, nonatomic, readonly) bool gammaOptionEnabled;
@property (nonatomic, readonly) bool hasOverlay;
@property (nonatomic) unsigned long long initialOptions;
@property (nonatomic, retain) <MTMaterialSettings> *initialSettings;
@property (nonatomic, readonly) double luminanceAlpha;
@property (getter=isLuminanceAlphaEnabled, nonatomic, readonly) bool luminanceAlphaEnabled;
@property (nonatomic, readonly, copy) NSString *luminanceColorMapName;
@property (getter=isLuminanceOnlyOptionEnabled, nonatomic, readonly) bool luminanceOnlyOptionEnabled;
@property (getter=isOverlay, nonatomic, readonly) bool overlay;
@property (nonatomic, readonly, copy) UIColor *primaryOverlayColor;
@property (getter=isPrimaryOverlayOptionEnabled, nonatomic, readonly) bool primaryOverlayOptionEnabled;
@property (nonatomic, readonly) double saturation;
@property (getter=isSaturationEnabled, nonatomic, readonly) bool saturationEnabled;
@property (nonatomic, readonly, copy) UIColor *secondaryOverlayColor;
@property (getter=isSecondaryOverlayOptionEnabled, nonatomic, readonly) bool secondaryOverlayOptionEnabled;
@property (nonatomic, readonly) double tintAlpha;
@property (nonatomic) double weighting;
@property (nonatomic, readonly) double zoom;
@property (getter=isZoomEnabled, nonatomic, readonly) bool zoomEnabled;
@property (getter=isZoomOptionEnabled, nonatomic, readonly) bool zoomOptionEnabled;

+ (bool)isCaptureOnly:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)_backdropTintAlphaWithSettings:(id)arg1 wrappedOptions:(id)arg2;
- (id)_basicOverlaySettingsForSettings:(id)arg1;
- (id)_blurRadiusWithSettings:(id)arg1 wrappedOptions:(id)arg2;
- (id)_brightnessWithSettings:(id)arg1 wrappedOptions:(id)arg2;
- (id)_colorAddColorWithSettings:(id)arg1 options:(unsigned long long)arg2 alpha:(double)arg3;
- (id)_colorForBackdrop:(bool)arg1 withGetterBlock:(id /* block */)arg2;
- (id)_colorMatrixColorWithSettings:(id)arg1 options:(unsigned long long)arg2 alpha:(double)arg3;
- (bool)_isBackdropRequiredForMainMaterialWithSettings:(id)arg1 options:(unsigned long long)arg2;
- (bool)_isBackdropRequiredForOverlayWithSettings:(id)arg1 options:(unsigned long long)arg2;
- (bool)_isBackdropRequiredWithSettings:(id)arg1 options:(unsigned long long)arg2;
- (bool)_isPropertyEnabled:(id)arg1 consideringWeighting:(bool)arg2;
- (id)_luminanceAlphaWithSettings:(id)arg1 wrappedOptions:(id)arg2;
- (id)_luminanceOverlaySettingsForSettings:(id)arg1;
- (id)_performanceConfiguringSettingsForSettings:(id)arg1;
- (double)_propertyValueForProperty:(id)arg1;
- (double)_propertyValueForProperty:(id)arg1 withTransformer:(id /* block */)arg2;
- (id)_saturationWithSettings:(id)arg1 wrappedOptions:(id)arg2;
- (id)_tintAlphaWithSettings:(id)arg1 wrappedOptions:(id)arg2;
- (id)_v2SettingsForSettings:(id)arg1;
- (id)_zoomWithSettings:(id)arg1 wrappedOptions:(id)arg2;
- (double)backdropScale;
- (id)baseOverlayColor;
- (id)blurInputQuality;
- (double)blurRadius;
- (double)blurRadiusWithTransformer;
- (double)brightness;
- (id)colorAddColor;
- (id)colorMatrixColor;
- (id)description;
- (unsigned long long)finalOptions;
- (id)finalSettings;
- (bool)hasOverlay;
- (double)identityValueForProperty:(id)arg1;
- (id)initWithSettings:(id)arg1 options:(unsigned long long)arg2;
- (unsigned long long)initialOptions;
- (id)initialSettings;
- (id)invertedMaterialSettingsInterpolator;
- (bool)isAuxiliaryOverlayOptionEnabled;
- (bool)isBackdropRequiredEver;
- (bool)isBackdropRequiredFinally;
- (bool)isBackdropRequiredForOverlayOption:(unsigned long long)arg1;
- (bool)isBackdropRequiredInitially;
- (bool)isBackdropTintEnabled;
- (bool)isBaseOverlayOptionEnabled;
- (bool)isBlurEnabled;
- (bool)isBlurOptionEnabled;
- (bool)isBrightnessEnabled;
- (bool)isCaptureOnlyOptionEnabled;
- (bool)isGammaOptionEnabled;
- (bool)isLuminanceAlphaEnabled;
- (bool)isLuminanceOnlyOptionEnabled;
- (bool)isOverlay;
- (bool)isOverlayOptionEnabled:(unsigned long long)arg1;
- (bool)isPrimaryOverlayOptionEnabled;
- (bool)isSaturationEnabled;
- (bool)isSecondaryOverlayOptionEnabled;
- (bool)isZoomEnabled;
- (bool)isZoomOptionEnabled;
- (double)luminanceAlpha;
- (id)luminanceColorMapName;
- (id)primaryOverlayColor;
- (double)saturation;
- (id)secondaryOverlayColor;
- (void)setFinalOptions:(unsigned long long)arg1;
- (void)setFinalSettings:(id)arg1;
- (void)setInitialOptions:(unsigned long long)arg1;
- (void)setInitialSettings:(id)arg1;
- (void)setWeighting:(double)arg1;
- (double)tintAlpha;
- (double)weighting;
- (double)zoom;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PVFace.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoVision.framework/PVFace.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoVision.framework/PhotoVision (3462.12.130)
 */

@interface PVFace : PVObject <PFPhotosFaceRepresentation> {
    NSString * _adjustmentVersion;
    double  _blurScore;
    double  _centerX;
    double  _centerY;
    long long  _clusterSequenceNumber;
    double  _exposureScore;
    unsigned int  _faceAlgorithmVersion;
    PVFaceprint * _faceprint;
    NSString * _groupingIdentifier;
    bool  _hasSmile;
    bool  _hidden;
    bool  _isInTrash;
    bool  _isLeftEyeClosed;
    bool  _isRightEyeClosed;
    bool  _isTooSmall;
    double  _leftEyeX;
    double  _leftEyeY;
    bool  _manual;
    double  _mouthX;
    double  _mouthY;
    long long  _nameSource;
    NSString * _personLocalIdentifier;
    double  _poseYaw;
    long long  _qualityMeasure;
    double  _rightEyeX;
    double  _rightEyeY;
    double  _size;
    long long  _sourceHeight;
    long long  _sourceWidth;
    int  _trainingType;
}

@property (nonatomic, copy) NSString *adjustmentVersion;
@property (nonatomic) double blurScore;
@property (nonatomic) double centerX;
@property (nonatomic) double centerY;
@property (nonatomic) long long clusterSequenceNumber;
@property (nonatomic) double exposureScore;
@property (nonatomic) unsigned int faceAlgorithmVersion;
@property (nonatomic, retain) PVFaceprint *faceprint;
@property (nonatomic, copy) NSString *groupingIdentifier;
@property (nonatomic) bool hasSmile;
@property (nonatomic) bool hidden;
@property (nonatomic) bool isInTrash;
@property (nonatomic) bool isLeftEyeClosed;
@property (nonatomic) bool isRightEyeClosed;
@property (nonatomic) bool isTooSmall;
@property (nonatomic) double leftEyeX;
@property (nonatomic) double leftEyeY;
@property (nonatomic) bool manual;
@property (nonatomic) double mouthX;
@property (nonatomic) double mouthY;
@property (nonatomic) long long nameSource;
@property (nonatomic, copy) NSString *personLocalIdentifier;
@property (nonatomic) double poseYaw;
@property (nonatomic) long long qualityMeasure;
@property (nonatomic) double rightEyeX;
@property (nonatomic) double rightEyeY;
@property (nonatomic) double size;
@property (nonatomic) long long sourceHeight;
@property (nonatomic) long long sourceWidth;
@property (nonatomic) int trainingType;

+ (id)faceFromVNFaceObservation:(id)arg1 fromImage:(id)arg2 additionalVisionRequests:(id)arg3 faceAlgorithmUmbrellaVersion:(unsigned int)arg4 error:(id*)arg5;
+ (id)faceFromVNFaceObservation:(id)arg1 fromImageWithPixelWidth:(unsigned long long)arg2 pixelHeight:(unsigned long long)arg3 additionalVisionRequests:(id)arg4 faceAlgorithmUmbrellaVersion:(unsigned int)arg5 error:(id*)arg6;
+ (id)faceWithFace:(id)arg1 copyPropertiesOption:(long long)arg2;

- (void).cxx_destruct;
- (void)_copyPropertiesFrom:(id)arg1 copyPropertiesOption:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })absoluteFaceRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })absoluteFaceRectForImageSize:(struct CGSize { double x1; double x2; })arg1;
- (id)adjustmentVersion;
- (double)blurScore;
- (double)centerX;
- (double)centerY;
- (long long)clusterSequenceNumber;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (double)exposureScore;
- (unsigned int)faceAlgorithmVersion;
- (id)faceprint;
- (id)groupingIdentifier;
- (bool)hasSmile;
- (bool)hidden;
- (bool)isInTrash;
- (bool)isLeftEyeClosed;
- (bool)isRightEyeClosed;
- (bool)isTooSmall;
- (double)leftEyeX;
- (double)leftEyeY;
- (bool)manual;
- (double)mouthX;
- (double)mouthY;
- (long long)nameSource;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedFaceRect;
- (id)personLocalIdentifier;
- (double)photosFaceRepresentationBlurScore;
- (double)photosFaceRepresentationCenterX;
- (double)photosFaceRepresentationCenterY;
- (long long)photosFaceRepresentationClusterSequenceNumber;
- (bool)photosFaceRepresentationHasSmile;
- (bool)photosFaceRepresentationIsLeftEyeClosed;
- (bool)photosFaceRepresentationIsRightEyeClosed;
- (id)photosFaceRepresentationLocalIdentifier;
- (long long)photosFaceRepresentationQualityMeasure;
- (double)photosFaceRepresentationSize;
- (long long)photosFaceRepresentationSourceHeight;
- (long long)photosFaceRepresentationSourceWidth;
- (double)poseYaw;
- (long long)qualityMeasure;
- (double)rightEyeX;
- (double)rightEyeY;
- (void)setAdjustmentVersion:(id)arg1;
- (void)setBlurScore:(double)arg1;
- (bool)setCenterAndSizeFromNormalizedFaceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCenterX:(double)arg1;
- (void)setCenterY:(double)arg1;
- (void)setClusterSequenceNumber:(long long)arg1;
- (void)setCoordinatesAndFeaturesFromFace:(id)arg1;
- (void)setExposureScore:(double)arg1;
- (void)setFaceAlgorithmVersion:(unsigned int)arg1;
- (void)setFaceprint:(id)arg1;
- (void)setGroupingIdentifier:(id)arg1;
- (void)setHasSmile:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setIsInTrash:(bool)arg1;
- (void)setIsLeftEyeClosed:(bool)arg1;
- (void)setIsRightEyeClosed:(bool)arg1;
- (void)setIsTooSmall:(bool)arg1;
- (void)setLeftEyeX:(double)arg1;
- (void)setLeftEyeY:(double)arg1;
- (void)setManual:(bool)arg1;
- (void)setMouthX:(double)arg1;
- (void)setMouthY:(double)arg1;
- (void)setNameSource:(long long)arg1;
- (void)setPersonLocalIdentifier:(id)arg1;
- (void)setPoseYaw:(double)arg1;
- (void)setQualityMeasure:(long long)arg1;
- (void)setRightEyeX:(double)arg1;
- (void)setRightEyeY:(double)arg1;
- (void)setSize:(double)arg1;
- (void)setSourceHeight:(long long)arg1;
- (void)setSourceWidth:(long long)arg1;
- (void)setTrainingType:(int)arg1;
- (double)size;
- (long long)sourceHeight;
- (long long)sourceWidth;
- (int)trainingType;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DOCTagEditorViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/DocumentManagerUICore.framework/DOCTagEditorViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/DocumentManagerUICore.framework/DocumentManagerUICore (68.100.44)
 */

@interface DOCTagEditorViewController : UIViewController <DOCAddTagTextFieldDelegate, DOCTagEditorDelegate, DOCTagEditorPresenter, UICollectionViewDataSource, UICollectionViewDelegateTableLayout> {
    NSString * _addNewTagTitle;
    DOCAddTagView * _addTagTextFieldView;
    UIView * _addTagTextFieldViewWrapper;
    NSString * _addTagTitle;
    bool  _addingTag;
    UIBarButtonItem * _cancelButton;
    UICollectionView * _collectionView;
    NSLayoutConstraint * _collectionViewHeightConstraint;
    UIInterfaceActionGroupView * _confirmButtons;
    bool  _delayResizingUntilAppeared;
    <DOCTagEditorDelegate> * _delegate;
    NSMutableOrderedSet * _discoveredTags;
    UIBarButtonItem * _doneButton;
    bool  _inTagListMode;
    NSMutableSet * _intersectionSelectedTags;
    bool  _isExtremelyVerticallyCompact;
    bool  _isInfoInPopoverMode;
    NSArray * _items;
    bool  _pinTextFieldToTopBound;
    bool  _showAddTagConfirmButtons;
    NSDictionary * _sizingCells;
    NSString * _tagsTitle;
    NSMutableSet * _unionSelectedTags;
    bool  _useCompactColorPicker;
    bool  _userChangedTags;
    NSOrderedSet * _userTags;
}

@property (nonatomic, retain) NSString *addNewTagTitle;
@property (nonatomic, retain) DOCAddTagView *addTagTextFieldView;
@property (nonatomic, retain) UIView *addTagTextFieldViewWrapper;
@property (nonatomic, retain) NSString *addTagTitle;
@property (getter=isAddingTag, nonatomic) bool addingTag;
@property (nonatomic, retain) UIBarButtonItem *cancelButton;
@property (nonatomic, retain) UICollectionView *collectionView;
@property (nonatomic, readonly) NSLayoutConstraint *collectionViewHeightConstraint;
@property (nonatomic, retain) UIInterfaceActionGroupView *confirmButtons;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool delayResizingUntilAppeared;
@property (nonatomic) <DOCTagEditorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSMutableOrderedSet *discoveredTags;
@property (nonatomic, retain) UIBarButtonItem *doneButton;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool inTagListMode;
@property (nonatomic, retain) NSMutableSet *intersectionSelectedTags;
@property (nonatomic, readonly) bool isCreatingTag;
@property (nonatomic) bool isExtremelyVerticallyCompact;
@property (nonatomic) bool isInfoInPopoverMode;
@property (nonatomic, retain) NSArray *items;
@property (nonatomic) bool pinTextFieldToTopBound;
@property (nonatomic) bool showAddTagConfirmButtons;
@property (nonatomic, readonly) NSDictionary *sizingCells;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *tagsTitle;
@property (nonatomic, retain) NSMutableSet *unionSelectedTags;
@property (nonatomic) bool useCompactColorPicker;
@property (nonatomic) bool userChangedTags;
@property (nonatomic, readonly) NSOrderedSet *userTags;

- (void).cxx_destruct;
- (id)_tagForIndexPath:(id)arg1;
- (void)_updateMixedSelectionForCell:(id)arg1;
- (void)_updateNavigationItem;
- (void)_updatePreferredContentSize:(bool)arg1;
- (void)_updateSelection;
- (void)_updateSelectionForSection:(unsigned long long)arg1 withTags:(id)arg2;
- (id)addNewTagTitle;
- (bool)addTagTextField:(id)arg1 userDidCreateTagWithName:(id)arg2;
- (void)addTagTextFieldDidBeginEditing:(id)arg1;
- (void)addTagTextFieldDidChange:(id)arg1;
- (void)addTagTextFieldDidEndEditing:(id)arg1;
- (id)addTagTextFieldView;
- (id)addTagTextFieldViewWrapper;
- (id)addTagTitle;
- (double)bottomEdgeSpacing;
- (id)cancelButton;
- (void)cancelButtonTapped:(id)arg1;
- (id)cellForIndexPath:(id)arg1 dequeueCell:(id /* block */)arg2;
- (id)collectionView;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (double)collectionView:(id)arg1 tableLayout:(id)arg2 heightForRowAtIndexPath:(id)arg3;
- (id)collectionViewHeightConstraint;
- (id)confirmButtons;
- (id)contentScrollView;
- (id)createConfirmButtons;
- (void)dealloc;
- (bool)delayResizingUntilAppeared;
- (id)delegate;
- (id)discoveredTags;
- (id)doneButton;
- (void)doneButtonTapped:(id)arg1;
- (bool)inTagListMode;
- (id)intersectionSelectedTags;
- (bool)isAddingTag;
- (bool)isCreatingTag;
- (bool)isExtremelyVerticallyCompact;
- (bool)isInfoInPopoverMode;
- (id)items;
- (void)loadView;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (bool)pinTextFieldToTopBound;
- (void)scheduleSetTagsOperationWithTag:(id)arg1 adding:(bool)arg2;
- (void)setAddNewTagTitle:(id)arg1;
- (void)setAddTagTextFieldView:(id)arg1;
- (void)setAddTagTextFieldViewWrapper:(id)arg1;
- (void)setAddTagTitle:(id)arg1;
- (void)setAddingTag:(bool)arg1;
- (void)setCancelButton:(id)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setConfirmButtons:(id)arg1;
- (void)setDelayResizingUntilAppeared:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDoneButton:(id)arg1;
- (void)setInTagListMode:(bool)arg1;
- (void)setIntersectionSelectedTags:(id)arg1;
- (void)setIsExtremelyVerticallyCompact:(bool)arg1;
- (void)setIsInfoInPopoverMode:(bool)arg1;
- (void)setItems:(id)arg1;
- (void)setPinTextFieldToTopBound:(bool)arg1;
- (void)setShowAddTagConfirmButtons:(bool)arg1;
- (void)setTagsTitle:(id)arg1;
- (void)setUnionSelectedTags:(id)arg1;
- (void)setUseCompactColorPicker:(bool)arg1;
- (void)setUserChangedTags:(bool)arg1;
- (void)setupCells:(id)arg1;
- (bool)showAddTagConfirmButtons;
- (id)sizingCells;
- (void)tagEditor:(id)arg1 userDidCreateTag:(id)arg2;
- (void)tagEditor:(id)arg1 userDidDeselectTag:(id)arg2;
- (void)tagEditor:(id)arg1 userDidSelectTag:(id)arg2;
- (void)tagRegistryDidUpdate;
- (id)tagsTitle;
- (double)topEdgeSpacing;
- (id)unionSelectedTags;
- (void)updateDiscoveredTags;
- (void)updateSelectedTags;
- (bool)useCompactColorPicker;
- (bool)userChangedTags;
- (id)userTags;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GVNode.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GraphVisualizer.framework/GVNode.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GraphVisualizer.framework/GraphVisualizer (5)
 */

@interface GVNode : NSObject {
    double  h;
    NSMutableOrderedSet * inNodes;
    unsigned long long  inPriority;
    long long  index;
    GVNode * next;
    NSMutableOrderedSet * outNodes;
    unsigned long long  outPriority;
    GVNode * prev;
    long long  rank;
    double  w;
    double  x;
    double  y;
}

@property (nonatomic) struct CGPoint { double x1; double x2; } center;
@property (nonatomic) double cx;
@property (nonatomic) double cy;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (nonatomic) double h;
@property (readonly) unsigned long long inDegree;
@property (nonatomic, retain) NSMutableOrderedSet *inNodes;
@property (nonatomic) unsigned long long inPriority;
@property (nonatomic) long long index;
@property (nonatomic) GVNode *next;
@property (nonatomic) struct CGPoint { double x1; double x2; } origin;
@property (readonly) unsigned long long outDegree;
@property (nonatomic, retain) NSMutableOrderedSet *outNodes;
@property (nonatomic) unsigned long long outPriority;
@property (nonatomic) GVNode *prev;
@property (nonatomic) long long rank;
@property (nonatomic) struct CGSize { double x1; double x2; } size;
@property (nonatomic) double w;
@property (nonatomic) double x;
@property (nonatomic) double y;

- (void)addEdgeFrom:(id)arg1;
- (void)addEdgeTo:(id)arg1;
- (struct CGPoint { double x1; double x2; })center;
- (void)computePriority;
- (double)cx;
- (double)cy;
- (void)dealloc;
- (id)description;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (double)h;
- (bool)hasEdgeFrom:(id)arg1;
- (bool)hasEdgeTo:(id)arg1;
- (unsigned long long)inDegree;
- (id)inNodes;
- (unsigned long long)inPriority;
- (long long)index;
- (id)init;
- (id)next;
- (struct CGPoint { double x1; double x2; })origin;
- (unsigned long long)outDegree;
- (id)outNodes;
- (unsigned long long)outPriority;
- (id)prev;
- (long long)rank;
- (void)removeEdgeFrom:(id)arg1;
- (void)removeEdgeTo:(id)arg1;
- (void)setCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCx:(double)arg1;
- (void)setCy:(double)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setH:(double)arg1;
- (void)setInNodes:(id)arg1;
- (void)setInPriority:(unsigned long long)arg1;
- (void)setIndex:(long long)arg1;
- (void)setNext:(id)arg1;
- (void)setOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setOutNodes:(id)arg1;
- (void)setOutPriority:(unsigned long long)arg1;
- (void)setPrev:(id)arg1;
- (void)setRank:(long long)arg1;
- (void)setSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setW:(double)arg1;
- (void)setX:(double)arg1;
- (void)setY:(double)arg1;
- (struct CGSize { double x1; double x2; })size;
- (void)traversePostorder:(int)arg1 withCallback:(id /* block */)arg2 stopper:(id /* block */)arg3 randomize:(bool)arg4;
- (void)traversePreorder:(int)arg1 withCallback:(id /* block */)arg2 randomize:(bool)arg3;
- (double)w;
- (double)x;
- (double)y;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

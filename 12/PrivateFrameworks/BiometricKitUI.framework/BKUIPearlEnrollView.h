<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BKUIPearlEnrollView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BiometricKitUI.framework/BKUIPearlEnrollView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BiometricKitUI.framework/BiometricKitUI (1)
 */

@interface BKUIPearlEnrollView : UIView <BKUIVideoCaptureSesssionDelegate> {
    bool  _active;
    bool  _blurInProgress;
    UIView * _cameraShadeView;
    CAShapeLayer * _circleMaskLayer;
    UIView * _circleMaskView;
    unsigned long long  _correctionSamplesCount;
    BKUIPearlCrossHairsView * _crossHairs;
    double  _currentCorrectedPitch;
    NSString * _debugFrameInformation;
    UILabel * _debugLabel;
    bool  _debugOverlayVisible;
    NSString * _debugStatusInformation;
    NSString * _debugTemplateInformation;
    <BKUIPearlEnrollViewDelegate> * _delegate;
    bool  _didStartCapture;
    bool  _entryAnimationAlreadyRan;
    NSArray * _entryAnimationImages;
    UIImageView * _entryAnimationView;
    unsigned long long  _fillHoldoffFrameCount;
    unsigned long long  _frameCount;
    NSTimer * _nudgeTimer;
    unsigned long long  _nudgesNudged;
    bool  _nudgesPaused;
    bool  _nudging;
    unsigned long long  _pendingRaiseLowerGuidanceState;
    BKUIPearlPillContainerView * _pillContainer;
    double  _pitchCorrection;
    double  _pitchCorrectionSamples;
    double  _pitchMax;
    double  _pitchMin;
    UILayoutGuide * _portalLayoutGuide;
    NSArray * _portalLayoutGuideConstraints;
    BKUIPearlPositioningGuideView * _positioningGuide;
    bool  _progressiveBlur;
    NSTimer * _raiseLowerGuidanceDelayTimer;
    bool  _raiseLowerGuidanceStatePending;
    UILabel * _repositionPhoneLabel;
    CAShapeLayer * _roundedRectMaskLayer;
    UIView * _roundedRectMaskView;
    NSDate * _startTime;
    int  _state;
    NSDate * _stateStart;
    bool  _stateTransitionInProgress;
    BKUIPearlMovieLoopView * _tutorialMovieView;
    AVPlayer * _tutorialPlayer;
    BKUIPearlVideoCaptureSession * _videoCaptureSession;
}

@property (nonatomic) bool active;
@property (nonatomic) bool debugOverlayVisible;
@property (nonatomic) <BKUIPearlEnrollViewDelegate> *delegate;
@property (nonatomic, retain) BKUIPearlPillContainerView *pillContainer;
@property (nonatomic, readonly) UILayoutGuide *portalLayoutGuide;
@property (nonatomic, retain) NSArray *portalLayoutGuideConstraints;
@property (nonatomic) int state;

- (void).cxx_destruct;
- (bool)_animateCircleMaskWithPositioningGuide;
- (void)_animateToEntryAnimationWithCompletion:(id /* block */)arg1;
- (void)_animateToFinishedWithCompletion:(id /* block */)arg1;
- (void)_animateToFirstScanCompleteWithCompletion:(id /* block */)arg1;
- (void)_animateToFirstScanWithCompletion:(id /* block */)arg1;
- (void)_animateToNeedsCenterBinWithCompletion:(id /* block */)arg1;
- (void)_animateToNeedsPositioningFromState:(int)arg1 withCompletion:(id /* block */)arg2;
- (void)_animateToPartialCaptureWithCompletion:(id /* block */)arg1;
- (void)_animateToScanningStateWithCompletion:(id /* block */)arg1;
- (void)_animateToSecondScanCompleteWithCompletion:(id /* block */)arg1;
- (void)_animateToSecondScanWithCompletion:(id /* block */)arg1;
- (void)_animateToState:(int)arg1 fromState:(int)arg2 completion:(id /* block */)arg3;
- (void)_animateToTutorialWithCompletion:(id /* block */)arg1;
- (id)_enrollMaskPathWithRadius:(double)arg1;
- (id)_maskPathWithRadius:(double)arg1 inFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })_needsPositioningPreviewTransform;
- (double)_nonOccludingCircleMaskRadius;
- (void)_nudgeIfNecessary;
- (double)_previewZoomLevel;
- (double)_progressiveBlurAmountForPitch:(double)arg1;
- (void)_recordDataFrameWithFaceState:(id)arg1;
- (void)_runTutorialLoopWithDuration:(double)arg1 delay:(double)arg2 loopDelay:(double)arg3;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })_scanningAndPartialCapturePreviewTransform;
- (void)_setRaiseLowerGuidanceLabelState:(unsigned long long)arg1;
- (void)_setState:(int)arg1 completion:(id /* block */)arg2;
- (void)_startNudgeTimer;
- (void)_stopNudgeTimer;
- (void)_updateCorrectionEstimates:(double)arg1 yaw:(double)arg2;
- (void)_updateDebugOverlay;
- (void)_updateRaiseLowerGuidanceLabelIfNeededForPitch:(double)arg1;
- (bool)active;
- (double)completedRingRadius;
- (void)dealloc;
- (bool)debugOverlayVisible;
- (id)delegate;
- (bool)expectsRunningVideoCaptureSession:(id)arg1;
- (id)initWithVideoCaptureSession:(id)arg1;
- (void)layoutSubviews;
- (double)percentOfPillsCompleted;
- (id)pillContainer;
- (double)pillRingRadius;
- (struct CGPoint { double x1; double x2; })portalCenter;
- (id)portalLayoutGuide;
- (id)portalLayoutGuideConstraints;
- (struct CGPoint { double x1; double x2; })portalOffset;
- (double)portalRadius;
- (id)previewLayer;
- (void)setActive:(bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCameraBlurAmount:(double)arg1 useShade:(bool)arg2 duration:(double)arg3 completion:(id /* block */)arg4;
- (void)setCameraBlurred:(bool)arg1;
- (void)setDebugOverlayVisible:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEntryAnimationImages:(id)arg1;
- (void)setFailed;
- (void)setMovieViewHidden:(bool)arg1;
- (void)setNudgesPaused:(bool)arg1;
- (void)setPillContainer:(id)arg1;
- (void)setPitch:(double)arg1 yaw:(double)arg2;
- (void)setPortalLayoutGuideConstraints:(id)arg1;
- (void)setSplashImageView:(id)arg1;
- (void)setState:(int)arg1;
- (void)setState:(int)arg1 completion:(id /* block */)arg2;
- (void)setSuspended:(bool)arg1;
- (void)startCapture;
- (int)state;
- (void)traitCollectionDidChange:(id)arg1;
- (struct CGSize { double x1; double x2; })tutorialMovieSize;
- (double)tutorialRingRadius;
- (void)updatePortalLayoutGuide;
- (void)updateWithFaceState:(id)arg1;
- (void)updateWithProgress:(id)arg1;
- (bool)useRegularPadLayout;
- (void)willDisappear;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

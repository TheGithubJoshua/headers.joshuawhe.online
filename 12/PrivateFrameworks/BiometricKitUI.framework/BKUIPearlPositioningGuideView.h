<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BKUIPearlPositioningGuideView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BiometricKitUI.framework/BKUIPearlPositioningGuideView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BiometricKitUI.framework/BiometricKitUI (1)
 */

@interface BKUIPearlPositioningGuideView : UIView {
    id /* block */  _animationCompletion;
    long long  _animationCurve;
    double  _animationDuration;
    NSDate * _animationStart;
    double  _cornerRadius;
    CADisplayLink * _displayLink;
    double  _edgeDistance;
    double  _lastAnimationTickProgres;
    double  _lineAlpha;
    double  _lineWidth;
    struct CGPoint { 
        double x; 
        double y; 
    }  _portalCenter;
    double  _postCornerLength;
    double  _ringRadius;
    CAShapeLayer * _roundedRectMaskLayer;
    double  _startCornerRadius;
    double  _startEdgeDistance;
    double  _startLineAlpha;
    double  _startLineWidth;
    bool  _startMaskFromCenter;
    struct CGPoint { 
        double x; 
        double y; 
    }  _startPortalCenter;
    double  _startPostCornerLength;
    double  _targetCornerRadius;
    double  _targetEdgeDistance;
    double  _targetLineAlpha;
    double  _targetLineWidth;
    struct CGPoint { 
        double x; 
        double y; 
    }  _targetPortalCenter;
    double  _targetPostCornerLength;
}

@property (nonatomic, copy) id /* block */ animationCompletion;
@property (nonatomic) long long animationCurve;
@property (nonatomic) double animationDuration;
@property (nonatomic, retain) NSDate *animationStart;
@property (nonatomic) double cornerRadius;
@property (nonatomic) double edgeDistance;
@property (nonatomic) double lineAlpha;
@property (nonatomic) double lineWidth;
@property (nonatomic, readonly) double maximumMaskLayerDistanceFromCenter;
@property (nonatomic, readonly) double minimumMaskLayerDistanceFromCenter;
@property (nonatomic) struct CGPoint { double x1; double x2; } portalCenter;
@property (nonatomic) double postCornerLength;
@property (nonatomic) double ringRadius;
@property (nonatomic) CAShapeLayer *roundedRectMaskLayer;

- (void).cxx_destruct;
- (void)_displayTick;
- (id)_roundedRectMaskForMaskDistance:(double)arg1 portalCenter:(struct CGPoint { double x1; double x2; })arg2 cornerRadius:(double)arg3;
- (void)_startAnimationWithDuration:(double)arg1 completion:(id /* block */)arg2;
- (void)_startDisplay;
- (void)_stopDisplay;
- (double)_updatedFloatWithTarget:(double)arg1 current:(double)arg2 start:(double)arg3 progress:(double)arg4;
- (void)animateToBreatheOutValuesOverDuration:(double)arg1 completion:(id /* block */)arg2;
- (void)animateToFinishedValuesOverDuration:(double)arg1 center:(struct CGPoint { double x1; double x2; })arg2 completion:(id /* block */)arg3;
- (void)animateToOpenValuesOverDuration:(double)arg1 curve:(long long)arg2 completion:(id /* block */)arg3;
- (void)animateToPopOutValuesOverDuration:(double)arg1 completion:(id /* block */)arg2;
- (id /* block */)animationCompletion;
- (long long)animationCurve;
- (double)animationDuration;
- (id)animationStart;
- (void)breathe;
- (double)cornerRadius;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)edgeDistance;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)lineAlpha;
- (double)lineWidth;
- (double)maximumMaskLayerDistanceFromCenter;
- (double)minimumMaskLayerDistanceFromCenter;
- (struct CGPoint { double x1; double x2; })portalCenter;
- (double)postCornerLength;
- (void)prepareMaskLayerForReducedMotionOpenTransition;
- (void)prepareMaskLayerForStartToOpenTransition;
- (void)resetValuesToStart;
- (double)ringRadius;
- (id)roundedRectMaskLayer;
- (void)setAnimationCompletion:(id /* block */)arg1;
- (void)setAnimationCurve:(long long)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setAnimationStart:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setEdgeDistance:(double)arg1;
- (void)setHidden:(bool)arg1;
- (void)setLineAlpha:(double)arg1;
- (void)setLineWidth:(double)arg1;
- (void)setPortalCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPostCornerLength:(double)arg1;
- (void)setRingRadius:(double)arg1;
- (void)setRoundedRectMaskLayer:(id)arg1;
- (bool)useRegularPadLayout;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

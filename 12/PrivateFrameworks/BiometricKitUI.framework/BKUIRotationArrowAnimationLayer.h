<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BKUIRotationArrowAnimationLayer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BiometricKitUI.framework/BKUIRotationArrowAnimationLayer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BiometricKitUI.framework/BiometricKitUI (1)
 */

@interface BKUIRotationArrowAnimationLayer : CALayer {
    double  _arrowAngle;
    CALayer * _arrowContainer;
    CAShapeLayer * _arrowLayerLeft;
    CAShapeLayer * _arrowLayerRight;
    double  _arrowlength;
    CAShapeLayer * _circleLayer;
    UIColor * _color;
    struct CGSize { 
        double width; 
        double height; 
    }  _containerSize;
    id /* block */  _getOrientation;
    struct CGPoint { 
        double x; 
        double y; 
    }  _hostCenter;
    long long  _orientation;
    double  _radius;
    CAShapeLayer * _rotationLayer;
}

@property (nonatomic) double arrowAngle;
@property (nonatomic, retain) CALayer *arrowContainer;
@property (nonatomic, retain) CAShapeLayer *arrowLayerLeft;
@property (nonatomic, retain) CAShapeLayer *arrowLayerRight;
@property (nonatomic) double arrowlength;
@property (nonatomic, retain) CAShapeLayer *circleLayer;
@property (nonatomic, retain) UIColor *color;
@property (nonatomic) struct CGSize { double x1; double x2; } containerSize;
@property (nonatomic, copy) id /* block */ getOrientation;
@property (nonatomic) struct CGPoint { double x1; double x2; } hostCenter;
@property (nonatomic) long long orientation;
@property (nonatomic) double radius;
@property (nonatomic, retain) CAShapeLayer *rotationLayer;

+ (id)animatorByEmbedding:(id)arg1 color:(id)arg2 radiusForOrientation:(id /* block */)arg3;
+ (id)animatorWith:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 color:(id)arg2 radiusForOrientation:(id /* block */)arg3;

- (void).cxx_destruct;
- (void)_animateArrowClockwise:(double)arg1 duration:(double)arg2 animationDelay:(double)arg3;
- (void)_animateArrowCounterClockwise:(double)arg1 duration:(double)arg2 animationDelay:(double)arg3;
- (void)_animateArrowPaths:(double)arg1 delay:(double)arg2 duration:(double)arg3;
- (void)_animateArrowUpsideDown:(double)arg1 duration:(double)arg2 animationDelay:(double)arg3;
- (id)_extendedInit:(struct CGPoint { double x1; double x2; })arg1;
- (void)_landscapeAnimationImpl:(double)arg1 duration:(double)arg2 animationDelay:(double)arg3;
- (void)_layoutArrowContainer:(long long)arg1;
- (void)_layoutArrowSubLayers;
- (void)_recreateArrow;
- (void)_resetHideCircleLayerStrokeTo:(double)arg1;
- (void)_rotateRotationLayerBy:(double)arg1 startTime:(double)arg2 fromDegree:(unsigned long long)arg3 toDegree:(unsigned long long)arg4;
- (void)_updateCircleLayerLayout:(long long)arg1;
- (void)_zeroOutArrowStroke;
- (void)animateDirectionPath:(double)arg1 orientation:(long long)arg2 duration:(double)arg3 animationDelay:(double)arg4;
- (double)arrowAngle;
- (id)arrowContainer;
- (id)arrowLayerLeft;
- (id)arrowLayerRight;
- (double)arrowlength;
- (id)circleLayer;
- (id)color;
- (struct CGSize { double x1; double x2; })containerSize;
- (void)enableDebug:(bool)arg1;
- (id /* block */)getOrientation;
- (struct CGPoint { double x1; double x2; })hostCenter;
- (id)init;
- (id)initWith:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 radiusForOrientation:(id /* block */)arg2 arrowAngle:(double)arg3 arrowLength:(double)arg4 color:(id)arg5;
- (void)layoutSublayers;
- (long long)orientation;
- (double)radius;
- (void)resetLayout;
- (id)rotationLayer;
- (void)setArrowAngle:(double)arg1;
- (void)setArrowContainer:(id)arg1;
- (void)setArrowLayerLeft:(id)arg1;
- (void)setArrowLayerRight:(id)arg1;
- (void)setArrowlength:(double)arg1;
- (void)setCircleLayer:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setContainerSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setGetOrientation:(id /* block */)arg1;
- (void)setHostCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setOrientation:(long long)arg1;
- (void)setRadius:(double)arg1;
- (void)setRotationLayer:(id)arg1;
- (void)stopAnimationRemoveStroke;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MTLDebugResourceAccessTracker.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MetalTools.framework/MTLDebugResourceAccessTracker.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MetalTools.framework/MetalTools (1)
 */

@interface MTLDebugResourceAccessTracker : NSObject {
    unsigned int  _accessedByCPUFrameCount;
    unsigned int  _accessedByGPUFrameCount;
    unsigned int  _firstAccessFrameByCPU;
    unsigned int  _prevFrameNumCPUAccessed;
    unsigned int  _prevFrameNumGPUAccessed;
    unsigned int  _stateMask;
}

+ (void)_recordResourceAccessesForRenderTargetTexture:(id)arg1;
+ (bool)hasValidViewports:(struct { double x1; double x2; double x3; double x4; double x5; double x6; }*)arg1 viewportCount:(unsigned int)arg2 scissorRects:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg3 scissorRectCount:(unsigned int)arg4;
+ (void)processDeferredAttachments:(struct ResourceTrackingDeferredAttachments { id x1; id x2; id x3; }*)arg1;
+ (void)recordRenderTargetAccessesForEndEncoding:(bool)arg1 descriptor:(id)arg2 renderPipelineState:(id)arg3 depthStencilState:(id)arg4 deferredAttachments:(struct ResourceTrackingDeferredAttachments { id x1; id x2; id x3; }*)arg5;
+ (void)recordResourceAccessesForAttachment:(const struct MTLRenderPassAttachmentDescriptorPrivate { id x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; struct { double x_8_1_1; double x_8_1_2; double x_8_1_3; double x_8_1_4; } x8; double x9; unsigned int x10; unsigned long long x11; id x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; unsigned long long x16; unsigned long long x17; unsigned long long x18; bool x19; }*)arg1 withStoreAction:(unsigned long long)arg2;
+ (void)recordResourceAccessesForColorAttachmentsWithDescriptor:(id)arg1 renderPipelineState:(id)arg2 forEndEncoding:(bool)arg3 deferredAttachments:(struct ResourceTrackingDeferredAttachments { id x1; id x2; id x3; }*)arg4;
+ (void)recordResourceAccessesForDepthAttachmentWithDescriptor:(id)arg1 forEndEncoding:(bool)arg2 deferredAttachments:(struct ResourceTrackingDeferredAttachments { id x1; id x2; id x3; }*)arg3;
+ (void)recordResourceAccessesForStencilAttachmentWithDescriptor:(id)arg1 forEndEncoding:(bool)arg2 deferredAttachments:(struct ResourceTrackingDeferredAttachments { id x1; id x2; id x3; }*)arg3;
+ (void)resourceTrackingRecordAccessesToArguments:(id)arg1 bufferFuncArgsPtr:(struct { bool x1; bool x2; unsigned long long x3; id x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; bool x10; float x11; float x12; }*)arg2 textureFuncArgsPtr:(struct { bool x1; bool x2; unsigned long long x3; id x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; bool x10; float x11; float x12; }*)arg3 buffersBoundForWrite:(id)arg4 texturesBoundForWrite:(id)arg5;

- (void)accessedBy:(int)arg1 frame:(unsigned int)arg2 accessTypes:(unsigned int)arg3;
- (unsigned int)conclude;
- (id)init;
- (void)reset;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

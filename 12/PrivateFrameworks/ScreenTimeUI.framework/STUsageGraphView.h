<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>STUsageGraphView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ScreenTimeUI.framework/STUsageGraphView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ScreenTimeUI.framework/ScreenTimeUI (38)
 */

@interface STUsageGraphView : UIView <UIGestureRecognizerDelegate> {
    NSArray * _barIndicators;
    UILayoutGuide * _barSectionLayoutGuide;
    NSArray * _barViewHeightConstraints;
    NSArray * _barViews;
    STUsageReportGraphDataSet * _dataSet;
    UILayoutGuide * _graphLayoutGuide;
    UIImageView * _horizontalBaseline;
    UILayoutGuide * _labelSectionLayoutGuide;
    UIView * _paddleConnectorView;
    STPaddleView * _paddleView;
    NSLayoutConstraint * _paddleViewCenterXConstraint;
    NSLayoutConstraint * _paddleViewConnectorCenterXConstraint;
    STBarView * _selectedBarView;
    UIView * _titleView;
    NSArray * _verticalDividers;
    NSArray * _verticalLayoutGuides;
    NSLayoutConstraint * _weeklyAverageHeightConstraint;
    UILayoutGuide * _weeklyAverageLayoutGuide;
    UIImageView * _weeklyAverageLine;
    NSLayoutConstraint * _weeklyAverageTrailingConstraint;
}

@property (nonatomic, copy) NSArray *barIndicators;
@property (nonatomic, retain) UILayoutGuide *barSectionLayoutGuide;
@property (nonatomic, copy) NSArray *barViewHeightConstraints;
@property (nonatomic, copy) NSArray *barViews;
@property (nonatomic, retain) STUsageReportGraphDataSet *dataSet;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UILayoutGuide *graphLayoutGuide;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIImageView *horizontalBaseline;
@property (nonatomic, retain) UILayoutGuide *labelSectionLayoutGuide;
@property (nonatomic, retain) UIView *paddleConnectorView;
@property (nonatomic, retain) STPaddleView *paddleView;
@property (nonatomic, retain) NSLayoutConstraint *paddleViewCenterXConstraint;
@property (nonatomic, retain) NSLayoutConstraint *paddleViewConnectorCenterXConstraint;
@property (nonatomic, retain) STBarView *selectedBarView;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIView *titleView;
@property (nonatomic, copy) NSArray *verticalDividers;
@property (nonatomic, copy) NSArray *verticalLayoutGuides;
@property (nonatomic, retain) NSLayoutConstraint *weeklyAverageHeightConstraint;
@property (nonatomic, retain) UILayoutGuide *weeklyAverageLayoutGuide;
@property (nonatomic, retain) UIImageView *weeklyAverageLine;
@property (nonatomic, retain) NSLayoutConstraint *weeklyAverageTrailingConstraint;

+ (id)baselineImage;
+ (id)dashedAverageLineImage;

- (void).cxx_destruct;
- (id)barIndicators;
- (id)barSectionLayoutGuide;
- (id)barViewHeightConstraints;
- (id)barViews;
- (id)createBarIndicatorWithImageName:(id)arg1 barView:(id)arg2;
- (id)createBarViewWithDataPoint:(id)arg1 layoutGuide:(id)arg2 previousView:(id)arg3 previousLayoutGuide:(id)arg4 layoutGuideWidthMultiplier:(double)arg5;
- (id)createDividerWithView:(id)arg1 layoutGuide:(id)arg2 previousLayoutGuide:(id)arg3 layoutGuideWidthMultiplier:(double)arg4;
- (id)createFirstDivider;
- (id)createWeeklyAverageLineWithLayoutGuide:(id)arg1;
- (id)dataSet;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (id)graphLayoutGuide;
- (void)handleGesture:(id)arg1;
- (id)horizontalBaseline;
- (id)initWithTitleView:(id)arg1 graphHeight:(double)arg2;
- (id)labelSectionLayoutGuide;
- (id)paddleConnectorView;
- (id)paddleView;
- (id)paddleViewCenterXConstraint;
- (id)paddleViewConnectorCenterXConstraint;
- (void)selectBarWithClosestHorizontalPositionToPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)selectedBarView;
- (void)setBarIndicators:(id)arg1;
- (void)setBarSectionLayoutGuide:(id)arg1;
- (void)setBarViewHeightConstraints:(id)arg1;
- (void)setBarViews:(id)arg1;
- (void)setDataSet:(id)arg1;
- (void)setDataSet:(id)arg1 animated:(bool)arg2;
- (void)setGraphLayoutGuide:(id)arg1;
- (void)setHorizontalBaseline:(id)arg1;
- (void)setLabelSectionLayoutGuide:(id)arg1;
- (void)setPaddleConnectorView:(id)arg1;
- (void)setPaddleView:(id)arg1;
- (void)setPaddleViewCenterXConstraint:(id)arg1;
- (void)setPaddleViewConnectorCenterXConstraint:(id)arg1;
- (void)setSelectedBarView:(id)arg1;
- (void)setUpBarViewHeightContraints;
- (void)setUpGraphWithLabelFormatter:(id)arg1;
- (void)setUpWeeklyAverageLine:(bool)arg1;
- (void)setVerticalDividers:(id)arg1;
- (void)setVerticalLayoutGuides:(id)arg1;
- (void)setWeeklyAverageHeightConstraint:(id)arg1;
- (void)setWeeklyAverageLayoutGuide:(id)arg1;
- (void)setWeeklyAverageLine:(id)arg1;
- (void)setWeeklyAverageTrailingConstraint:(id)arg1;
- (id)titleView;
- (void)updateBarViews;
- (id)verticalDividers;
- (id)verticalLayoutGuides;
- (id)weeklyAverageHeightConstraint;
- (id)weeklyAverageLayoutGuide;
- (id)weeklyAverageLine;
- (id)weeklyAverageTrailingConstraint;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

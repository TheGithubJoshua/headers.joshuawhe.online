<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SBUIAppIconForceTouchController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SpringBoardUI.framework/SBUIAppIconForceTouchController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SpringBoardUI.framework/SpringBoardUI (1.0)
 */

@interface SBUIAppIconForceTouchController : NSObject <SBUIAppIconForceTouchShortcutViewControllerDelegate, SBUIIconForceTouchControllerDataSource, SBUIIconForceTouchControllerDelegate> {
    SBUIAppIconForceTouchControllerDataProvider * _dataProvider;
    <SBUIAppIconForceTouchControllerDataSource> * _dataSource;
    <SBUIAppIconForceTouchControllerDelegate> * _delegate;
    struct { 
        unsigned int appIconForceTouchController_shouldHandleGestureRecognizer : 1; 
        unsigned int appIconForceTouchController_shouldUseSecureWindowForGestureRecognizer : 1; 
        unsigned int appIconForceTouchController_willPresentForGestureRecognizer : 1; 
        unsigned int appIconForceTouchController_didPresentForGestureRecognizer : 1; 
        unsigned int appIconForceTouchController_willDismissForGestureRecognizer : 1; 
        unsigned int appIconForceTouchController_didDismissForGestureRecognizer : 1; 
        unsigned int appIconForceTouchController_shouldActivateApplicationShortcutItem_atIndex_forGestureRecognizer : 1; 
    }  _delegateRespondsTo;
    SBUIIconForceTouchController * _iconForceTouchController;
    FBSOpenApplicationService * _openApplicationService;
    UIViewController * _primaryViewController;
    UIViewController * _secondaryViewController;
}

@property (nonatomic) <SBUIAppIconForceTouchControllerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SBUIAppIconForceTouchControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long state;
@property (readonly) Class superclass;

+ (id)filteredApplicationShortcutItemsWithStaticApplicationShortcutItems:(id)arg1 dynamicApplicationShortcutItems:(id)arg2;

- (void).cxx_destruct;
- (void)_dismissAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_peekAnimated:(bool)arg1 withRelativeTouchForce:(double)arg2 allowSmoothing:(bool)arg3;
- (void)_presentAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_setupWithGestureRecognizer:(id)arg1;
- (id)_shortcutViewControllerForDataProvider:(id)arg1;
- (id)_widgetViewControllerForDataProvider:(id)arg1;
- (void)appIconForceTouchShortcutViewController:(id)arg1 activateApplicationShortcutItem:(id)arg2;
- (bool)appIconForceTouchShortcutViewControllerShouldHandleGestureRecognizers:(id)arg1;
- (id)dataSource;
- (id)delegate;
- (void)dismissAnimated:(bool)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)iconForceTouchController:(id)arg1 didDismissForGestureRecognizer:(id)arg2;
- (void)iconForceTouchController:(id)arg1 didPresentForGestureRecognizer:(id)arg2;
- (double)iconForceTouchController:(id)arg1 iconImageCornerRadiusForGestureRecognizer:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })iconForceTouchController:(id)arg1 iconImageInsetsForGestureRecognizer:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })iconForceTouchController:(id)arg1 iconViewFrameForGestureRecognizer:(id)arg2;
- (long long)iconForceTouchController:(id)arg1 layoutStyleForGestureRecognizer:(id)arg2;
- (id)iconForceTouchController:(id)arg1 newIconViewCopyForGestureRecognizer:(id)arg2;
- (id)iconForceTouchController:(id)arg1 parallaxSettingsForGestureRecognizer:(id)arg2;
- (id)iconForceTouchController:(id)arg1 primaryViewControllerForGestureRecognizer:(id)arg2;
- (id)iconForceTouchController:(id)arg1 secondaryViewControllerForGestureRecognizer:(id)arg2;
- (bool)iconForceTouchController:(id)arg1 shouldHandleGestureRecognizer:(id)arg2;
- (bool)iconForceTouchController:(id)arg1 shouldUseSecureWindowForGestureRecognizer:(id)arg2;
- (void)iconForceTouchController:(id)arg1 willDismissForGestureRecognizer:(id)arg2;
- (void)iconForceTouchController:(id)arg1 willPresentForGestureRecognizer:(id)arg2;
- (struct CGPoint { double x1; double x2; })iconForceTouchController:(id)arg1 zoomDownCenterForGestureRecognizer:(id)arg2;
- (id)iconForceTouchController:(id)arg1 zoomDownViewForGestureRecognizer:(id)arg2;
- (id)init;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)startHandlingGestureRecognizer:(id)arg1;
- (long long)state;
- (void)stopHandlingGestureRecognizer:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

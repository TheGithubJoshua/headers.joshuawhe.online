<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NMSMediaPinningManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMusicSync.framework/NMSMediaPinningManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMusicSync.framework/NanoMusicSync (880.30)
 */

@interface NMSMediaPinningManager : NSObject <ICEnvironmentMonitorObserver> {
    NSArray * _cachedAlbumIdentifiers;
    NSArray * _cachedPlaylistIdentifiers;
    NSArray * _cachedPodcastFeedURLs;
    NSObject<OS_dispatch_queue> * _internalQueue;
    bool  _pinnedPlaylistsValidated;
    NMSPodcastSizeCache * _podcastSizeCache;
    NMSMediaQuotaManager * _quotaManager;
    NMSyncDefaults * _sharedDefaults;
    bool  _workoutPlaylistValidated;
}

@property (nonatomic, readonly) NSArray *addedItems;
@property (nonatomic, readonly) NSArray *addedMusicItems;
@property (nonatomic, readonly) NSArray *addedPodcastEpisodesArray;
@property (nonatomic, readonly) NSArray *addedPodcastsItems;
@property (nonatomic, readonly) NSArray *albumIdentifiers;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *offPowerEligibleSongsList;
@property (nonatomic, readonly) NSArray *onlyOnPowerSongsList;
@property (nonatomic, readonly) NSArray *pinnedAlbums;
@property (nonatomic, readonly) NSArray *pinnedPlaylists;
@property (nonatomic) bool pinnedPodcastsAreUserSet;
@property (nonatomic, readonly) NSArray *playlistIdentifiers;
@property (nonatomic, readonly) NSArray *podcastFeedURLs;
@property (nonatomic, retain) NSNumber *podcastsAssetSyncLimit;
@property (nonatomic, retain) NMSMediaQuotaManager *quotaManager;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSNumber *workoutPlaylistID;

+ (id)_cachedAlbumIdentifiersFilePath;
+ (id)_cachedIdentifiersDirectoryPath;
+ (id)_cachedPlaylistIdentifiersFilePath;
+ (id)_cachedPodcastFeedURLsFilePath;
+ (id)_fetchMusicRecommendations;
+ (unsigned long long)_mediaStorageSizeForCurrentDevice;
+ (void)_persistNewClientToken;
+ (id)_tokenForInstance:(id)arg1;
+ (bool)playlistPIDValidForPinning:(id)arg1;
+ (id)sharedManager;

- (void).cxx_destruct;
- (void)_handleICAgeVerificationStateDidChangeNotification:(id)arg1;
- (void)_handleMediaLibraryEntitiesAddedOrRemovedNotification:(id)arg1;
- (void)_handleMusicPinningSelectionsDidChangeNotification:(id)arg1;
- (void)_handlePairedDeviceDidBecomeActiveNotification:(id)arg1;
- (void)_handlePodcastSizeCacheDidUpdateNotification:(id)arg1;
- (void)_handlePodcastSizeInfoDidChangeNotification:(id)arg1;
- (void)_handlePodcastsPinningSelectionsDidChangeNotification:(id)arg1;
- (void)_handleRecommendationLibraryContentsDidChangeNotification:(id)arg1;
- (void)_handleRecommendationSelectionsDidChangeNotification:(id)arg1;
- (void)_handleRecommendationsDidUpdateNotification:(id)arg1;
- (void)_invalidateAddedItemsCache;
- (void)_invalidateMusicCache;
- (void)_invalidatePodcastsCache;
- (bool)_isAlbumPinned:(id)arg1;
- (bool)_isPlaylistPinned:(id)arg1;
- (id)_newMusicGroupIteratorWithDownloadedItemsOnly:(bool)arg1;
- (id)_newPodcastsGroupIteratorWithDownloadedItemsOnly:(bool)arg1;
- (void)_notePinningSettingsChangedLocally;
- (unsigned int)_pairedWatchVersion;
- (bool)_quotaManagerShouldFetchDownloadedItemsOnlyForBundleID:(id)arg1;
- (void)_refreshAlbumIdentifiersWithPath:(id)arg1;
- (void)_refreshPlaylistIdentifiersWithPath:(id)arg1;
- (void)_refreshPodcastFeedURLsWithPath:(id)arg1;
- (void)_setWorkoutPlaylistID:(id)arg1;
- (void)_updateWorkoutSettingsPlaylistPIDTo:(id)arg1;
- (id)addedItems;
- (id)addedItemsForDownloadWithinAvailableSpace:(unsigned long long)arg1;
- (id)addedItemsWithMediaTypes:(unsigned int)arg1;
- (id)addedMusicItems;
- (id)addedPodcastEpisodesArray;
- (id)addedPodcastsItems;
- (unsigned long long)addedSongsSize;
- (id)albumIdentifiers;
- (void)dealloc;
- (unsigned long long)downloadOrderForPodcastWithFeedURL:(id)arg1;
- (long long)episodeLimitForPodcastWithFeedURL:(id)arg1;
- (id)init;
- (void)invalidateMusicCache;
- (void)invalidatePodcastsCache;
- (bool)isAlbumPinned:(id)arg1;
- (bool)isItemGroupWithinQuota:(id)arg1;
- (bool)isPlaylistPinned:(id)arg1;
- (bool)isPodcastWithFeedURLPinned:(id)arg1;
- (bool)isPodcastWithIdentifiersPinned:(id)arg1;
- (id)itemGroupForIdentifiers:(id)arg1;
- (unsigned long long)nominatedSongsSize;
- (id)offPowerEligibleSongsList;
- (id)onlyOnPowerSongsList;
- (void)pinAlbum:(id)arg1;
- (void)pinPlaylist:(id)arg1;
- (void)pinPodcastWithFeedURL:(id)arg1;
- (void)pinPodcastWithIdentifiers:(id)arg1;
- (id)pinnedAlbums;
- (id)pinnedPlaylists;
- (bool)pinnedPodcastsAreUserSet;
- (id)playlistIdentifiers;
- (id)podcastFeedURLs;
- (id)podcastsAssetSyncLimit;
- (id)quotaManager;
- (void)removePodcastWithFeedURL:(id)arg1;
- (void)setGizmoDownloadOrder:(unsigned long long)arg1 forPodcastWithFeedURL:(id)arg2;
- (void)setGizmoEpisodeLimit:(long long)arg1 forPodcastWithFeedURL:(id)arg2;
- (void)setListenNowEpisodePIDs:(id)arg1;
- (void)setListenNowPodcastFeedURLs:(id)arg1;
- (void)setPinnedPodcastsAreUserSet:(bool)arg1;
- (void)setPodcastsAssetSyncLimit:(id)arg1;
- (void)setQuotaManager:(id)arg1;
- (void)setWorkoutPlaylistID:(id)arg1;
- (void)unpinAlbum:(id)arg1;
- (void)unpinPlaylist:(id)arg1;
- (void)unpinPodcastWithFeedURL:(id)arg1;
- (void)unpinPodcastWithIdentifiers:(id)arg1;
- (id)workoutPlaylistID;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

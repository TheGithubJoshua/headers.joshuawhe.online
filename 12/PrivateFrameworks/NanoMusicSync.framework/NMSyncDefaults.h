<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NMSyncDefaults.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMusicSync.framework/NMSyncDefaults.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMusicSync.framework/NanoMusicSync (880.30)
 */

@interface NMSyncDefaults : NSObject <NMSNotificationDispatcherDelegate> {
    NSNumber * _assetSyncLimit;
    unsigned long long  _assetSyncLimitType;
    NSNumber * _assetSyncPlaylistPersistentID;
    unsigned long long  _assetSyncType;
    NPSDomainAccessor * _domainAccessor;
    NSObject<OS_dispatch_queue> * _domainAccessorQueue;
    NSNumber * _lastFullySentAssetSyncPlaylistPersistentID;
    NSNumber * _lastFullySentAssetSyncPlaylistVersion;
    NMSNotificationDispatcher * _libraryRecoNotifier;
    NSArray * _listenNowPodcastIdentifiers;
    NSDate * _modificationDate;
    NMSNotificationDispatcher * _musicPinningSelectionsNotifier;
    bool  _needsSync;
    NSDictionary * _notifiersDict;
    NSString * _pairingID;
    NMSNotificationDispatcher * _podcastsPinningSelectionsNotifier;
    NMSNotificationDispatcher * _podcastsSizeInfoNotifier;
    NMSNotificationDispatcher * _podcastsSubscriptionMetadataNotifier;
    NMSNotificationDispatcher * _recoSelectionsNotifier;
    NMSNotificationDispatcher * _settingsNotifier;
    NMSNotificationDispatcher * _storeRecoNotifier;
    NMSNotificationDispatcher * _syncStateNotifier;
}

@property (nonatomic) bool allowOffChargerAssetSync;
@property (nonatomic, copy) NSNumber *assetSyncLimit;
@property (nonatomic) unsigned long long assetSyncLimitType;
@property (nonatomic, retain) MPMediaPlaylist *assetSyncPlaylist;
@property (setter=setAssetSyncPlaylistPersistentID:, nonatomic, retain) NSNumber *assetSyncPlaylistPersistentID;
@property (nonatomic) unsigned long long assetSyncType;
@property (nonatomic, copy) NSData *cachedRecommendationsData;
@property (nonatomic, copy) NSDictionary *clientPinningSettingsToken;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSDictionary *gizmoPodcastDownloadOrders;
@property (nonatomic, copy) NSDictionary *gizmoPodcastEpisodeLimits;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSNumber *lastFullySentAssetSyncPlaylistPersistentID;
@property (nonatomic, copy) NSNumber *lastFullySentAssetSyncPlaylistVersion;
@property (nonatomic, copy) NSDate *lastMusicAppActiveDate;
@property (nonatomic, copy) NSDate *lastSiriFaceActiveDate;
@property (nonatomic, copy) NSArray *libraryRecommendationAlbums;
@property (nonatomic, copy) NSArray *libraryRecommendationPlaylists;
@property (nonatomic, copy) NSArray *listenNowPodcastEpisodes;
@property (nonatomic, copy) NSArray *listenNowPodcastFeedURLs;
@property (nonatomic, copy) NSArray *listenNowPodcastIdentifiers;
@property (nonatomic, readonly) NSDate *modificationDate;
@property (nonatomic, copy) NSDictionary *musicRecommendationDict;
@property (nonatomic, copy) NSArray *pinnedAlbums;
@property (nonatomic, copy) NSArray *pinnedPlaylists;
@property (nonatomic, copy) NSArray *pinnedPodcastFeedURLs;
@property (nonatomic, copy) NSArray *pinnedPodcastIdentifiers;
@property (nonatomic, copy) NSSet *pinnedPodcasts;
@property (nonatomic) bool pinnedPodcastsAreUserSet;
@property (nonatomic, copy) NSNumber *podcastsAssetSyncLimit;
@property (nonatomic, copy) NSDate *recommendationExpirationDate;
@property (nonatomic) bool shouldUseLibraryRecommendations;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSDictionary *syncStateDict;
@property (nonatomic, retain) NSNumber *workoutPlaylistID;

+ (id)sharedDefaults;

- (void).cxx_destruct;
- (void)_addCapability:(id)arg1 forCapabilitiesKey:(id)arg2;
- (void)_addPhoneCapability:(id)arg1;
- (void)_addWatchCapability:(id)arg1;
- (id)_associatedObject;
- (bool)_boolForKey:(id)arg1 domain:(id)arg2 defaultValue:(bool)arg3;
- (void)_clearAssetSyncPlaylistDependentDefaults;
- (id)_companionSidePerDeviceDefaults;
- (bool)_continueUsingMusicRecommendationKey;
- (id)_dateValueForKey:(id)arg1 bundleID:(id)arg2 domain:(id)arg3;
- (id)_defaultPlaylistPersistentID;
- (bool)_deviceHasCapability:(id)arg1 forCapabilitiesKey:(id)arg2;
- (void)_migrateDataIfNecessary;
- (void)_notifyChangesForKey:(id)arg1;
- (id)_objectForKey:(id)arg1 domain:(id)arg2;
- (void)_perDeviceSettingsDidResetNotification:(id)arg1;
- (bool)_phoneHasCapability:(id)arg1;
- (id)_playlistPersistentIDForPlaylistName:(id)arg1;
- (void)_preSeed2_setMusicRecommendationDict:(id)arg1;
- (void)_reloadPropertiesFromDefaults;
- (void)_reloadPropertiesFromDefaultsOnMainThread;
- (void)_removeObjectForKey:(id)arg1 domain:(id)arg2;
- (void)_removeOldMusicRecommendationsInfoIfPossible;
- (void)_resetDomainAccessor;
- (void)_setBool:(bool)arg1 forKey:(id)arg2 domain:(id)arg3;
- (void)_setLegacyObject:(id)arg1 forKey:(id)arg2 ifRemoteDeviceMissingCapability:(id)arg3;
- (void)_setNeedsSynchronize;
- (void)_setObject:(id)arg1 forKey:(id)arg2 domain:(id)arg3;
- (void)_setupNotifiers;
- (unsigned long long)_spaceQuotaForNumberOfSongs:(unsigned long long)arg1;
- (bool)_watchHasCapability:(id)arg1;
- (void)_writeDate:(id)arg1 forKey:(id)arg2 withBundleID:(id)arg3 domain:(id)arg4;
- (void)_writePropertiesToDefaults;
- (bool)allowOffChargerAssetSync;
- (id)assetSyncLimit;
- (unsigned long long)assetSyncLimitType;
- (id)assetSyncPlaylist;
- (id)assetSyncPlaylistPersistentID;
- (unsigned long long)assetSyncType;
- (void)beginBatchUpdates;
- (id)cachedRecommendationsData;
- (void)clearAppActivityStatusDefaultsForBundleID:(id)arg1;
- (void)clearPodcastsDefaults;
- (id)clientPinningSettingsToken;
- (id)description;
- (void)dispatcherDidReceiveNotificationFromOtherProcess:(id)arg1;
- (void)dispatcherDidReceiveNotificationFromRemoteDevice:(id)arg1;
- (long long)dormancyIntervalInHoursForBundleID:(id)arg1;
- (void)endBatchUpdates;
- (id)gizmoPodcastDownloadOrders;
- (id)gizmoPodcastEpisodeLimits;
- (id)init;
- (id)installDateForBundleID:(id)arg1;
- (id)lastFullySentAssetSyncPlaylistPersistentID;
- (id)lastFullySentAssetSyncPlaylistVersion;
- (id)lastMusicAppActiveDate;
- (id)lastSiriFaceActiveDate;
- (id)lastUserLaunchDateForBundleID:(id)arg1;
- (id)lastUserPinningChangeDateForBundleID:(id)arg1;
- (id)libraryRecommendationAlbums;
- (id)libraryRecommendationPlaylists;
- (id)listenNowPodcastEpisodes;
- (id)listenNowPodcastFeedURLs;
- (id)listenNowPodcastIdentifiers;
- (id)modificationDate;
- (id)musicRecommendationDict;
- (id)pinnedAlbums;
- (id)pinnedPlaylists;
- (id)pinnedPodcastFeedURLs;
- (id)pinnedPodcastIdentifiers;
- (id)pinnedPodcasts;
- (bool)pinnedPodcastsAreUserSet;
- (id)podcastSizeEstimationData;
- (id)podcastsAssetSyncLimit;
- (id)recommendationExpirationDate;
- (void)setAllowOffChargerAssetSync:(bool)arg1;
- (void)setAssetSyncLimit:(id)arg1;
- (void)setAssetSyncLimitType:(unsigned long long)arg1;
- (void)setAssetSyncPlaylist:(id)arg1;
- (void)setAssetSyncPlaylistPersistentID:(id)arg1;
- (void)setAssetSyncType:(unsigned long long)arg1;
- (void)setCachedRecommendationsData:(id)arg1;
- (void)setClientPinningSettingsToken:(id)arg1;
- (void)setGizmoPodcastDownloadOrders:(id)arg1;
- (void)setGizmoPodcastEpisodeLimits:(id)arg1;
- (void)setInstallDateForBundleID:(id)arg1;
- (void)setLastFullySentAssetSyncPlaylistPersistentID:(id)arg1;
- (void)setLastFullySentAssetSyncPlaylistVersion:(id)arg1;
- (void)setLastMusicAppActiveDate:(id)arg1;
- (void)setLastSiriFaceActiveDate:(id)arg1;
- (void)setLastUserLaunchDateForBundleID:(id)arg1;
- (void)setLastUserPinningChangeDateForBundleID:(id)arg1;
- (void)setLibraryRecommendationAlbums:(id)arg1;
- (void)setLibraryRecommendationPlaylists:(id)arg1;
- (void)setListenNowPodcastEpisodes:(id)arg1;
- (void)setListenNowPodcastFeedURLs:(id)arg1;
- (void)setListenNowPodcastIdentifiers:(id)arg1;
- (void)setMusicRecommendationDict:(id)arg1;
- (void)setPinnedAlbums:(id)arg1;
- (void)setPinnedPlaylists:(id)arg1;
- (void)setPinnedPodcastFeedURLs:(id)arg1;
- (void)setPinnedPodcastIdentifiers:(id)arg1;
- (void)setPinnedPodcasts:(id)arg1;
- (void)setPinnedPodcastsAreUserSet:(bool)arg1;
- (void)setPodcastSizeEstimationData:(id)arg1;
- (void)setPodcastsAssetSyncLimit:(id)arg1;
- (void)setRecommendationExpirationDate:(id)arg1;
- (void)setShouldUseLibraryRecommendations:(bool)arg1;
- (void)setWorkoutPlaylistID:(id)arg1;
- (bool)shouldUseLibraryRecommendations;
- (id)syncStateDict;
- (id)workoutPlaylistID;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKGameSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameCenterFoundation.framework/GKGameSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation (577.8)
 */

@interface GKGameSession : NSObject <NSSecureCoding> {
    NSString * _identifier;
    NSDate * _lastModifiedDate;
    GKCloudPlayer * _lastModifiedPlayer;
    long long  _maxNumberOfConnectedPlayers;
    GKCloudPlayer * _owner;
    NSMutableDictionary * _playerStates;
    NSArray * _players;
    NSString * _serverChangeTag;
    NSString * _title;
}

@property (nonatomic, readonly) NSArray *badgedPlayers;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, retain) NSDate *lastModifiedDate;
@property (nonatomic, retain) GKCloudPlayer *lastModifiedPlayer;
@property (nonatomic) long long maxNumberOfConnectedPlayers;
@property (nonatomic, retain) GKCloudPlayer *owner;
@property (nonatomic, retain) NSMutableDictionary *playerStates;
@property (nonatomic, retain) NSArray *players;
@property (nonatomic, retain) NSString *serverChangeTag;
@property (nonatomic, retain) NSString *title;

+ (void)addEventListener:(id)arg1;
+ (void)createSessionInContainer:(id)arg1 withTitle:(id)arg2 maxConnectedPlayers:(long long)arg3 completionHandler:(id /* block */)arg4;
+ (void)getSessionsForZone:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)getZonesWithCompletionHandler:(id /* block */)arg1;
+ (id)gk_sessionEventListeners;
+ (void)loadSessionWithIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)loadSessionsInContainer:(id)arg1 completionHandler:(id /* block */)arg2;
+ (void)postSession:(id)arg1 didAddPlayer:(id)arg2;
+ (void)postSession:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3;
+ (void)postSession:(id)arg1 didReceiveMessage:(id)arg2 withData:(id)arg3 fromPlayer:(id)arg4;
+ (void)postSession:(id)arg1 didRemovePlayer:(id)arg2;
+ (void)postSession:(id)arg1 player:(id)arg2 didChangeConnectionState:(long long)arg3;
+ (void)postSession:(id)arg1 player:(id)arg2 didSaveData:(id)arg3;
+ (void)removeEventListener:(id)arg1;
+ (void)removeSessionWithIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_gkDescriptionWithChildren:(int)arg1;
- (id)badgedPlayers;
- (void)clearBadgeForPlayers:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)description;
- (id)descriptionSubstitutionMap;
- (void)encodeWithCoder:(id)arg1;
- (void)getShareURLWithCompletionHandler:(id /* block */)arg1;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)lastModifiedDate;
- (id)lastModifiedPlayer;
- (void)loadDataWithCompletionHandler:(id /* block */)arg1;
- (long long)maxNumberOfConnectedPlayers;
- (id)owner;
- (id)playerStates;
- (id)players;
- (id)playersWithConnectionState:(long long)arg1;
- (void)saveData:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)sendData:(id)arg1 withTransportType:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)sendMessageWithLocalizedFormatKey:(id)arg1 arguments:(id)arg2 data:(id)arg3 toPlayers:(id)arg4 badgePlayers:(bool)arg5 completionHandler:(id /* block */)arg6;
- (id)serverChangeTag;
- (void)setConnectionState:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setIdentifier:(id)arg1;
- (void)setLastModifiedDate:(id)arg1;
- (void)setLastModifiedPlayer:(id)arg1;
- (void)setMaxNumberOfConnectedPlayers:(long long)arg1;
- (void)setOwner:(id)arg1;
- (void)setPlayerStates:(id)arg1;
- (void)setPlayers:(id)arg1;
- (void)setServerChangeTag:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)updateWithSession:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

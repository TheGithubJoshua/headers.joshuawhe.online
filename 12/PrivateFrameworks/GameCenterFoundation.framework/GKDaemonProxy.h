<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKDaemonProxy.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameCenterFoundation.framework/GKDaemonProxy.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation (577.8)
 */

@interface GKDaemonProxy : GKServiceProxy <GKClientProtocol, NSXPCConnectionDelegate> {
    NSObject<OS_dispatch_semaphore> * _concurrentRequestSemaphore;
    NSXPCConnection * _connection;
    <GKDaemonProxyDataUpdateDelegate> * _dataUpdateDelegate;
    int  _hostPID;
    NSDictionary * _interfaceLookup;
    NSObject<OS_dispatch_queue> * _invocationQueue;
    <GKDaemonProxyNetworkActivityIndicatorDelegate> * _networkActivityIndicatorDelegate;
}

@property (nonatomic, retain) NSXPCConnection *connection;
@property (nonatomic) <GKDaemonProxyDataUpdateDelegate> *dataUpdateDelegate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) int hostPID;
@property (nonatomic) <GKDaemonProxyNetworkActivityIndicatorDelegate> *networkActivityIndicatorDelegate;
@property (readonly) Class superclass;

+ (id)daemonProxy;
+ (id)proxyForPlayer:(id)arg1;
+ (void)removeProxyForPlayer:(id)arg1;

- (void)_resetServiceLookup;
- (oneway void)acceptInviteWithNotification:(id)arg1;
- (oneway void)acceptMultiplayerGameInvite;
- (id)accountName;
- (oneway void)achievementSelected:(id)arg1;
- (void)addInterface:(id)arg1 toLookup:(id)arg2;
- (id)authenticatedLocalPlayersWithStatus:(unsigned long long)arg1;
- (id)authenticatedPlayerID;
- (id)authenticatedPlayerInfo;
- (oneway void)authenticatedPlayersDidChange:(id)arg1 reply:(id /* block */)arg2;
- (oneway void)beginNetworkActivity;
- (void)buildInterfaceLookup;
- (oneway void)cancelGameInvite:(id)arg1;
- (oneway void)challengeCompleted:(id)arg1;
- (oneway void)challengeReceived:(id)arg1;
- (oneway void)completedChallengeSelected:(id)arg1;
- (oneway void)completedOptimisticAuthenticationWithResponse:(id)arg1 error:(id)arg2;
- (id)concurrentRequestSemaphore;
- (id)connection;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(bool)arg3;
- (id)dataUpdateDelegate;
- (void)dealloc;
- (oneway void)declineInviteWithNotification:(id)arg1;
- (oneway void)didConnectToParticipantWithID:(id)arg1;
- (oneway void)didDisconnectFromParticipantWithID:(id)arg1;
- (oneway void)didReceiveData:(id)arg1 reliably:(bool)arg2 forRecipients:(id)arg3 fromSender:(id)arg4;
- (void)dispatchCompletedChallenge:(id)arg1;
- (oneway void)endNetworkActivity;
- (oneway void)fetchTurnBasedData;
- (oneway void)friendRequestSelected:(id)arg1;
- (oneway void)getAccountNameWithHandler:(id /* block */)arg1;
- (oneway void)getAuthenticatedPlayerIDWithHandler:(id /* block */)arg1;
- (bool)hasAuthenticatedAccount;
- (int)hostPID;
- (id)init;
- (id)interfaceLookup;
- (id)invocationQueue;
- (void)loadRemoteImageDataForClientForURL:(id)arg1 reply:(id /* block */)arg2;
- (id)localizedMessageFromDictionary:(id)arg1 forBundleID:(id)arg2;
- (id)networkActivityIndicatorDelegate;
- (oneway void)processQuickAction:(id)arg1;
- (oneway void)receivedChallengeSelected:(id)arg1;
- (oneway void)refreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;
- (oneway void)relayPushNotification:(id)arg1;
- (id)replyQueueForRequestSelector:(SEL)arg1;
- (void)resetLoginCancelCount;
- (oneway void)resetNetworkActivity;
- (void)resetServiceLookup;
- (oneway void)respondedToNearbyInvite:(id)arg1;
- (oneway void)scoreSelected:(id)arg1;
- (oneway void)session:(id)arg1 addedPlayer:(id)arg2;
- (oneway void)session:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3;
- (oneway void)session:(id)arg1 didReceiveMessage:(id)arg2 withData:(id)arg3 fromPlayer:(id)arg4;
- (oneway void)session:(id)arg1 player:(id)arg2 didChangeConnectionState:(long long)arg3;
- (oneway void)session:(id)arg1 player:(id)arg2 didSaveData:(id)arg3;
- (oneway void)session:(id)arg1 removedPlayer:(id)arg2;
- (oneway void)setBadgeCount:(unsigned long long)arg1 forType:(unsigned long long)arg2;
- (void)setConnection:(id)arg1;
- (oneway void)setCurrentGame:(id)arg1 serverEnvironment:(long long)arg2 reply:(id /* block */)arg3;
- (void)setDataUpdateDelegate:(id)arg1;
- (void)setHostPID:(int)arg1;
- (oneway void)setLogBits:(int)arg1;
- (void)setNetworkActivityIndicatorDelegate:(id)arg1;
- (oneway void)setPreferencesValues:(id)arg1;
- (oneway void)setTestGame:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKGameInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameCenterFoundation.framework/GKGameInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation (577.8)
 */

@interface GKGameInternal : GKGameDescriptor {
    NSString * _defaultLeaderboardIdentifier;
    union { 
        struct { 
            unsigned int _platform : 8; 
            unsigned int _prerendered : 1; 
            unsigned int _supportsLeaderboards : 1; 
            unsigned int _supportsLeaderboardSets : 1; 
            unsigned int _hasAggregateLeaderboard : 1; 
            unsigned int _supportsAchievements : 1; 
            unsigned int _supportsMultiplayer : 1; 
            unsigned int _valid : 1; 
            unsigned int _unused : 1; 
            unsigned int _supportsTurnBasedMultiplayer : 1; 
            unsigned int _reserved : 13; 
        } ; 
        unsigned int _value; 
    }  _flags;
    NSDictionary * _icons;
    unsigned short  _maxAchievementPoints;
    NSString * _name;
    unsigned short  _numberOfAchievements;
    unsigned short  _numberOfLeaderboardSets;
    unsigned short  _numberOfLeaderboards;
    GKStoreItemInternal * _storeItem;
}

@property (nonatomic, retain) NSString *defaultLeaderboardIdentifier;
@property (nonatomic) unsigned int flags;
@property (nonatomic) bool hasAggregateLeaderboard;
@property (nonatomic, retain) NSDictionary *icons;
@property (nonatomic) unsigned short maxAchievementPoints;
@property (nonatomic, retain) NSString *name;
@property (nonatomic) unsigned short numberOfAchievements;
@property (nonatomic) unsigned short numberOfLeaderboardSets;
@property (nonatomic) unsigned short numberOfLeaderboards;
@property (nonatomic) unsigned char platform;
@property (getter=isPrerendered, nonatomic) bool prerendered;
@property (nonatomic, retain) GKStoreItemInternal *storeItem;
@property (nonatomic) bool supportsAchievements;
@property (nonatomic) bool supportsLeaderboardSets;
@property (nonatomic) bool supportsLeaderboards;
@property (nonatomic) bool supportsMultiplayer;
@property (nonatomic) bool supportsTurnBasedMultiplayer;
@property (getter=isValid, nonatomic) bool valid;

+ (id)secureCodedPropertyKeys;

- (void)dealloc;
- (id)defaultCategory;
- (id)defaultLeaderboardIdentifier;
- (id)description;
- (unsigned int)flags;
- (bool)hasAggregateLeaderboard;
- (unsigned long long)hash;
- (id)icons;
- (bool)isEqual:(id)arg1;
- (bool)isPrerendered;
- (bool)isValid;
- (unsigned short)maxAchievementPoints;
- (id)name;
- (unsigned short)numberOfAchievements;
- (unsigned short)numberOfCategories;
- (unsigned short)numberOfLeaderboardSets;
- (unsigned short)numberOfLeaderboards;
- (unsigned char)platform;
- (id)serverRepresentation;
- (void)setDefaultLeaderboardIdentifier:(id)arg1;
- (void)setFlags:(unsigned int)arg1;
- (void)setHasAggregateLeaderboard:(bool)arg1;
- (void)setIcons:(id)arg1;
- (void)setMaxAchievementPoints:(unsigned short)arg1;
- (void)setName:(id)arg1;
- (void)setNumberOfAchievements:(unsigned short)arg1;
- (void)setNumberOfLeaderboardSets:(unsigned short)arg1;
- (void)setNumberOfLeaderboards:(unsigned short)arg1;
- (void)setPlatform:(unsigned char)arg1;
- (void)setPrerendered:(bool)arg1;
- (void)setStoreItem:(id)arg1;
- (void)setSupportsAchievements:(bool)arg1;
- (void)setSupportsLeaderboardSets:(bool)arg1;
- (void)setSupportsLeaderboards:(bool)arg1;
- (void)setSupportsMultiplayer:(bool)arg1;
- (void)setSupportsTurnBasedMultiplayer:(bool)arg1;
- (void)setValid:(bool)arg1;
- (id)storeItem;
- (bool)supportsAchievements;
- (bool)supportsLeaderboardSets;
- (bool)supportsLeaderboards;
- (bool)supportsMultiplayer;
- (bool)supportsTurnBasedMultiplayer;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

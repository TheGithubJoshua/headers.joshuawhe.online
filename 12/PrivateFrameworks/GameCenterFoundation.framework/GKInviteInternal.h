<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKInviteInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameCenterFoundation.framework/GKInviteInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation (577.8)
 */

@interface GKInviteInternal : GKInternalRepresentation {
    NSString * _bundleID;
    NSString * _deviceID;
    NSString * _inviteID;
    NSDictionary * _localizableMessage;
    unsigned long long  _matchType;
    NSString * _message;
    NSString * _participantID;
    NSData * _peerBlob;
    NSString * _peerID;
    NSData * _peerNATIP;
    int  _peerNATType;
    NSData * _peerPushToken;
    GKPlayerInternal * _player;
    unsigned int  _playerAttributes;
    int  _playerGroup;
    NSString * _rid;
    NSData * _sessionToken;
    unsigned char  _version;
}

@property (nonatomic, retain) NSString *bundleID;
@property (nonatomic, retain) NSString *deviceID;
@property (nonatomic, retain) NSString *inviteID;
@property (nonatomic, readonly) bool isNearby;
@property (nonatomic, retain) NSDictionary *localizableMessage;
@property (nonatomic) unsigned long long matchType;
@property (nonatomic, retain) NSString *message;
@property (nonatomic, retain) NSString *participantID;
@property (nonatomic, retain) NSData *peerBlob;
@property (nonatomic, retain) NSString *peerID;
@property (nonatomic, retain) NSData *peerNATIP;
@property (nonatomic) int peerNATType;
@property (nonatomic, retain) NSData *peerPushToken;
@property (nonatomic, retain) GKPlayerInternal *player;
@property (nonatomic) unsigned int playerAttributes;
@property (nonatomic) int playerGroup;
@property (nonatomic, retain) NSString *rid;
@property (nonatomic, retain) NSData *sessionToken;
@property (nonatomic) unsigned char version;

+ (id)inviteFromNearbyPlayer:(id)arg1 participantID:(id)arg2 deviceID:(id)arg3 bundleID:(id)arg4 connectionData:(id)arg5;
+ (id)inviteWithBulletin:(id)arg1;
+ (id)nearbyInviteIDForPlayerID:(id)arg1 deviceID:(id)arg2 bundleID:(id)arg3;
+ (id)secureCodedPropertyKeys;

- (id)bundleID;
- (void)dealloc;
- (id)descriptionSubstitutionMap;
- (id)deviceID;
- (unsigned long long)hash;
- (id)init;
- (id)inviteID;
- (bool)isEqual:(id)arg1;
- (bool)isNearby;
- (id)localizableMessage;
- (unsigned long long)matchType;
- (id)message;
- (id)participantID;
- (id)peerBlob;
- (id)peerID;
- (id)peerNATIP;
- (int)peerNATType;
- (id)peerPushToken;
- (id)player;
- (unsigned int)playerAttributes;
- (int)playerGroup;
- (id)rid;
- (id)sessionToken;
- (void)setBundleID:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setInviteID:(id)arg1;
- (void)setLocalizableMessage:(id)arg1;
- (void)setMatchType:(unsigned long long)arg1;
- (void)setMessage:(id)arg1;
- (void)setParticipantID:(id)arg1;
- (void)setPeerBlob:(id)arg1;
- (void)setPeerID:(id)arg1;
- (void)setPeerNATIP:(id)arg1;
- (void)setPeerNATType:(int)arg1;
- (void)setPeerPushToken:(id)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPlayerAttributes:(unsigned int)arg1;
- (void)setPlayerGroup:(int)arg1;
- (void)setRid:(id)arg1;
- (void)setSessionToken:(id)arg1;
- (void)setVersion:(unsigned char)arg1;
- (unsigned char)version;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

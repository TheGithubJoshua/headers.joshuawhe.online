<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSCHChartSeriesType.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSCHChartSeriesType.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSCHChartSeriesType : NSObject {
    NSArray * mSeriesRendererClasses;
}

+ (id)_singletonAlloc;
+ (id)allSeriesTypes;
+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)area3DSeries;
+ (id)areaSeries;
+ (id)bar3DSeries;
+ (id)barSeries;
+ (id)bubbleSeries;
+ (id)column3DSeries;
+ (id)columnSeries;
+ (id)donut3DSeries;
+ (id)donutSeries;
+ (id)expandProperties:(id)arg1;
+ (id)inspectorDefaultLocalizedValueLabelsDisclosureTitle;
+ (id)inspectorDefaultLocalizedValueLabelsTabName;
+ (id)line3DSeries;
+ (id)lineSeries;
+ (id)mixedAreaSeries;
+ (id)mixedColumnSeries;
+ (id)mixedLineSeries;
+ (id)pie3DSeries;
+ (id)pieSeries;
+ (id)scatterSeries;
+ (Class)sceneObjectClass;
+ (id)stackedArea3DSeries;
+ (id)stackedAreaSeries;
+ (id)stackedBar3DSeries;
+ (id)stackedBarSeries;
+ (id)stackedColumn3DSeries;
+ (id)stackedColumnSeries;
+ (id)styleArchTypes;

- (void).cxx_destruct;
- (unsigned int)adjustLabelPosition:(unsigned int)arg1 forAxisValue:(double)arg2 intercept:(double)arg3;
- (id)axisTypesForValueLabels;
- (double)beginDataValueForSeries:(id)arg1 groupIndex:(unsigned long long)arg2 valueAxisID:(id)arg3;
- (double)beginValueForSeries:(unsigned long long)arg1 index:(unsigned long long)arg2 unitSpaceIntercept:(double)arg3 relativelyPositive:(bool)arg4 valueAxis:(id)arg5;
- (bool)canUseEstimatedValueLabelsDrawingRect;
- (id)cdeFillForSeries:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (bool)chunkedBuildsIncludeInterceptValues;
- (id)coordinateAxisForSeries:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)defaultSymbolType;
- (id)elementBuilder;
- (int)fillPropertyType;
- (id)fillPropertyTypeName;
- (int)fillSetFillProperty;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1 forSeries:(id)arg2;
- (bool)floatValueForLabelExplosion:(float*)arg1 series:(id)arg2;
- (id)genericToSpecificPropertyMap;
- (id)init;
- (id)inspectorLocalizedValueLabelsDisclosureTitle;
- (id)inspectorLocalizedValueLabelsTabName;
- (bool)isVertical;
- (id)legalChartLabelPositions;
- (int)legendBadgeType;
- (id)legendFillForSeries:(id)arg1;
- (id)legendStrokeForSeries:(id)arg1;
- (unsigned long long)numberOfSeriesForCalculatingBarWidth:(id)arg1;
- (id)p_axisForSeries:(id)arg1 isCategory:(bool)arg2;
- (id)p_supportedSymbolsIfSymbolsSupported;
- (id)propertiesForReferenceColors;
- (id)resetSeriesStorage:(id)arg1 forSeries:(id)arg2;
- (Class)sceneObjectClass;
- (id)seriesFillLabelUIString;
- (unsigned long long)seriesIndexForDrawing:(id)arg1;
- (id)seriesRendererClasses;
- (int)specificFillSetFillProperty;
- (id)supportedSymbols;
- (id)supportedValueLabelsAxisCombinations;
- (bool)supportsBarGap;
- (bool)supportsCalloutLines;
- (bool)supportsFillSetFill;
- (bool)supportsLineConnectionStyle;
- (bool)supportsLineTypeNone;
- (bool)supportsRoundedCorners;
- (bool)supportsSeries3DFill;
- (bool)supportsSeriesFill;
- (bool)supportsSeriesGradientFill;
- (bool)supportsSeriesStroke;
- (bool)supportsSetGap;
- (bool)supportsShadowOffset;
- (bool)supportsSymbolDrawing;
- (bool)supportsSymbolFillForSymbolType:(int)arg1;
- (bool)supportsSymbolTypeEditing;
- (bool)supportsValueLabels;
- (bool)supportsValueLabelsAxisOption;
- (bool)supportsValueLabelsSeriesName;
- (bool)useInBarGapCalculations;
- (id)userInterfaceName;
- (id)userInterfaceNameForLabelPosition:(id)arg1;
- (id)valueAxisForSeries:(id)arg1;
- (unsigned long long)valueDimensions;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

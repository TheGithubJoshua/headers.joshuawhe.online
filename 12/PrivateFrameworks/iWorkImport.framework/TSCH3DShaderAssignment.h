<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSCH3DShaderAssignment.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSCH3DShaderAssignment.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSCH3DShaderAssignment : NSObject <TSCH3DShaderStatement> {
    TSCH3DShaderVariableLinkage * mAssignee;
    struct TSCH3DShaderVariableScopeType { 
        unsigned long long mValue; 
    }  mAssigneeScope;
    struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType> > { 
        struct TSCH3DShaderVariableScopeType {} *__begin_; 
        struct TSCH3DShaderVariableScopeType {} *__end_; 
        struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType> > { 
            struct TSCH3DShaderVariableScopeType {} *__value_; 
        } __end_cap_; 
    }  mDependeeScopes;
    NSArray * mDependees;
    struct TSCH3DShaderType { 
        unsigned long long mValue; 
    }  mLinkageType;
    TSCH3DShaderProgram * mProgram;
    NSString * mStatement;
}

@property (nonatomic, readonly) TSCH3DShaderVariableLinkage *assignee;
@property (nonatomic, readonly) struct TSCH3DShaderVariableScopeType { unsigned long long x1; } assigneeScope;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSArray *dependees;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isLinked;
@property (nonatomic) struct TSCH3DShaderType { unsigned long long x1; } linkageType;
@property (nonatomic, readonly) NSString *string;
@property (readonly) Class superclass;

+ (id)assignmentWithAssignee:(id)arg1 statement:(id)arg2 dependees:(id)arg3 program:(id)arg4;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)assignee;
- (struct TSCH3DShaderVariableScopeType { unsigned long long x1; })assigneeScope;
- (void)dealloc;
- (struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType> > { struct TSCH3DShaderVariableScopeType {} *x1; struct TSCH3DShaderVariableScopeType {} *x2; struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType> > { struct TSCH3DShaderVariableScopeType {} *x_3_1_1; } x3; }*)dependeeScopes;
- (id)dependees;
- (id)description;
- (struct TSCH3DShaderType { unsigned long long x1; })dominantDependeeLinkageType;
- (id)expressionStringForType:(struct TSCH3DShaderType { unsigned long long x1; })arg1;
- (id)forceLinkageForType:(struct TSCH3DShaderType { unsigned long long x1; })arg1;
- (id)initWithAssigneeLinkage:(id)arg1 statement:(id)arg2 dependees:(id)arg3 program:(id)arg4;
- (bool)isLinked;
- (bool)isMetal;
- (struct TSCH3DShaderType { unsigned long long x1; })linkageType;
- (id)resolve;
- (id)resolveDependeesWithPreviousType:(struct TSCH3DShaderType { unsigned long long x1; })arg1;
- (void)setAssigneeScopeToType:(struct TSCH3DShaderVariableScopeType { unsigned long long x1; })arg1;
- (void)setGeneratedForType:(struct TSCH3DShaderType { unsigned long long x1; })arg1;
- (void)setLinkageType:(struct TSCH3DShaderType { unsigned long long x1; })arg1;
- (id)string;
- (id)updateDependeesWithPreviousType:(struct TSCH3DShaderType { unsigned long long x1; })arg1;
- (bool)updateLinkageTypeAddVaryingToAdditions:(id)arg1;
- (id)updateVaryingAssignmentForLinkage:(id)arg1;
- (id)variableDeclaration;
- (id)varyingAssignmentForLinkage:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSTStrokeDefaultVendor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSTStrokeDefaultVendor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSTStrokeDefaultVendor : NSObject {
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _bodySideBorderColumnRange;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _bottomBorderRowRange;
    <TSTCategoryProviding> * _categoryProvider;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _footerRowSeparatorRowRange;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _headerColumnSeparatorColumnRange;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _headerRowSeparatorRowRange;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _headerSideBorderColumnRange;
    bool  _isValid;
    <TSTTableStrokeProviding> * _strokeProvider;
    NSPointerArray * _strokeTypeToLayerMap;
    <TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding> * _tableProvider;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _topBorderRowRange;
}

@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } bodySideBorderColumnRange;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } bottomBorderRowRange;
@property (nonatomic) <TSTCategoryProviding> *categoryProvider;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } footerRowSeparatorRowRange;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } headerColumnSeparatorColumnRange;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } headerRowSeparatorRowRange;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } headerSideBorderColumnRange;
@property (nonatomic) bool isValid;
@property (nonatomic) <TSTTableStrokeProviding> *strokeProvider;
@property (nonatomic, retain) NSPointerArray *strokeTypeToLayerMap;
@property (nonatomic) <TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding> *tableProvider;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } topBorderRowRange;

- (void).cxx_destruct;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })bodySideBorderColumnRange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })bottomBorderRowRange;
- (id)categoryProvider;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })footerRowSeparatorRowRange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })headerColumnSeparatorColumnRange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })headerRowSeparatorRowRange;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })headerSideBorderColumnRange;
- (id)initWithStrokeProvider:(id)arg1 tableProvider:(id)arg2 categoryProvider:(id)arg3;
- (void)invalidate;
- (bool)isValid;
- (bool)p_headerColumnSeparatorColumnRangeIsValid;
- (bool)p_headerRowSeparatorRowRangeIsValid;
- (int)p_strokeTypeForColumn:(unsigned int)arg1;
- (int)p_strokeTypeForRow:(unsigned int)arg1;
- (void)p_updateStrokeLayer:(id)arg1 forColumnStrokeType:(int)arg2;
- (void)p_updateStrokeLayer:(id)arg1 forRowStrokeType:(int)arg2;
- (void)setBodySideBorderColumnRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setBottomBorderRowRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setCategoryProvider:(id)arg1;
- (void)setFooterRowSeparatorRowRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setHeaderColumnSeparatorColumnRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setHeaderRowSeparatorRowRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setHeaderSideBorderColumnRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setIsValid:(bool)arg1;
- (void)setStrokeProvider:(id)arg1;
- (void)setStrokeTypeToLayerMap:(id)arg1;
- (void)setTableProvider:(id)arg1;
- (void)setTopBorderRowRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)strokeLayerForColumn:(unsigned int)arg1;
- (id)strokeLayerForRow:(unsigned int)arg1;
- (id)strokeLayerForStrokeType:(int)arg1;
- (id)strokeProvider;
- (id)strokeTypeToLayerMap;
- (id)tableProvider;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })topBorderRowRange;
- (int)validateChangeDescriptors:(id)arg1;
- (bool)validateGeometry;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

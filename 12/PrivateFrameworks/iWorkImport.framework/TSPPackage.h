<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSPPackage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSPPackage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSPPackage : NSObject {
    NSObject<OS_dispatch_queue> * _accessQueue;
    unsigned long long  _additionalZipArchiveOptions;
    SFUCryptoKey * _decryptionKey;
    TSPDocumentProperties * _documentProperties;
    <TSPFileCoordinatorDelegate> * _fileCoordinatorDelegate;
    unsigned long long  _fileFormatVersion;
    struct { 
        unsigned int isLazyLoadingDocumentProperties : 1; 
        unsigned int isLazyLoadingZip : 1; 
    }  _flags;
    bool  _isClosed;
    NSError * _lastReloadError;
    NSHashTable * _packageDatas;
    unsigned char  _packageIdentifier;
    TSUZipFileArchive * _zipArchive;
}

@property (readonly) TSUZipFileArchive *componentZipArchive;
@property (nonatomic, readonly) SFUCryptoKey *decryptionKey;
@property (nonatomic, readonly) TSPDocumentProperties *documentProperties;
@property (nonatomic, readonly) <TSPFileCoordinatorDelegate> *fileCoordinatorDelegate;
@property (nonatomic, readonly) unsigned long long fileFormatVersion;
@property (nonatomic, readonly) bool isClosed;
@property (nonatomic, readonly) bool isPasswordProtected;
@property (readonly) NSError *lastReloadError;
@property (nonatomic, readonly) unsigned char packageIdentifier;
@property (nonatomic, readonly) long long packageType;
@property (nonatomic, readonly) NSString *passwordHint;
@property (nonatomic, readonly) NSData *passwordVerifier;
@property (retain) TSUZipFileArchive *zipArchive;

+ (id)dataEntryPathForFilename:(id)arg1;
+ (bool)hasZipArchive;
+ (bool)isValidPackageAtURL:(id)arg1;
+ (bool)isZeroLengthFileOrEmptyDirectory:(id)arg1;
+ (id)newLazyPackageWithURL:(id)arg1 packageIdentifier:(unsigned char)arg2 decryptionKey:(id)arg3 fileCoordinatorDelegate:(id)arg4;
+ (id)newPackageWithURL:(id)arg1 options:(unsigned long long)arg2 packageIdentifier:(unsigned char)arg3 decryptionKey:(id)arg4 fileCoordinatorDelegate:(id)arg5 error:(id*)arg6;
+ (id)objectArchiveEntryPathForPackageLocator:(id)arg1;
+ (unsigned long long)zipArchiveOptions;
+ (id)zipArchiveURLFromPackageURL:(id)arg1;

- (void).cxx_destruct;
- (bool)checkPassword:(id)arg1;
- (id)componentZipArchive;
- (bool)containsData:(id)arg1;
- (void)copyComponent:(id)arg1 toPackageURL:(id)arg2 packageLocator:(id)arg3 zipFileWriter:(id)arg4 encryptionKey:(id)arg5 canLink:(bool)arg6 completion:(id /* block */)arg7;
- (id)dataAtRelativePath:(id)arg1 allowDecryption:(bool)arg2 error:(id*)arg3;
- (id)decryptionKey;
- (void)didCloseDocument;
- (void)didReadFileFormatVersion:(unsigned long long)arg1;
- (void)didReferenceData:(id)arg1;
- (bool)didReloadZipArchive:(id)arg1 packageURL:(id)arg2 error:(id*)arg3;
- (void)didRetrieveDecryptionKey:(id)arg1;
- (id)documentProperties;
- (void)enumerateDatasUsingBlock:(id /* block */)arg1;
- (id)fileCoordinatorDelegate;
- (unsigned long long)fileFormatVersion;
- (bool)hasDataAtRelativePath:(id)arg1;
- (id)init;
- (id)initWithPackageIdentifier:(unsigned char)arg1 documentProperties:(id)arg2 fileFormatVersion:(unsigned long long)arg3 decryptionKey:(id)arg4 fileCoordinatorDelegate:(id)arg5 isLazyLoading:(bool)arg6;
- (id)initWithURL:(id)arg1 zipArchiveOrNil:(id)arg2 zipArchiveOptions:(unsigned long long)arg3 packageIdentifier:(unsigned char)arg4 documentProperties:(id)arg5 decryptionKey:(id)arg6 fileCoordinatorDelegate:(id)arg7 error:(id*)arg8;
- (bool)isClosed;
- (bool)isPasswordProtected;
- (id)keyFromPassword:(id)arg1;
- (id)keyFromPassword:(id)arg1 passwordVerifier:(id)arg2;
- (id)lastReloadError;
- (id)newCompressionReadChannelWithReadChannel:(id)arg1 compressionAlgorithm:(long long)arg2;
- (id)newDataStorageAtRelativePath:(id)arg1 decryptionInfo:(id)arg2 packageURL:(id)arg3 lastModificationDate:(out id*)arg4;
- (id)newDocumentPropertiesWithURL:(id)arg1 zipProvider:(id /* block */)arg2 error:(id*)arg3;
- (id)newRawDataReadChannelAtRelativePath:(id)arg1;
- (id)newRawReadChannelForComponentLocator:(id)arg1 isStoredOutsideObjectArchive:(bool)arg2;
- (id)newReadChannelForComponentLocator:(id)arg1 compressionAlgorithm:(long long)arg2 isStoredOutsideObjectArchive:(bool)arg3;
- (id)newZipArchiveFromPackageURL:(id)arg1 isLazyLoading:(bool)arg2 error:(id*)arg3;
- (id)packageEntryInfoAtRelativePath:(id)arg1 error:(id*)arg2;
- (id)packageEntryInfoForComponentLocator:(id)arg1 isStoredOutsideObjectArchive:(bool)arg2;
- (unsigned char)packageIdentifier;
- (long long)packageType;
- (id)passwordHint;
- (id)passwordVerifier;
- (void)peformSynchronousAccessToZipArchive:(id /* block */)arg1;
- (void)prepareForDocumentReplacementWithSuccess:(bool)arg1 forSafeSave:(bool)arg2 originalURL:(id)arg3;
- (bool)reloadZipArchiveIfNeededWithURLImpl:(id)arg1 isLazyLoading:(bool)arg2 error:(id*)arg3;
- (void)removeAllDataReferences;
- (void)setZipArchive:(id)arg1;
- (id)zipArchive;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

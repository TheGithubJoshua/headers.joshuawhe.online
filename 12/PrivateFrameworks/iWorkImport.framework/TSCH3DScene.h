<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSCH3DScene.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSCH3DScene.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSCH3DScene : NSObject {
    TSCH3DScenePropertyAccessor * mAccessor;
    NSObject<TSCH3DScenePropertyAccessorFactory> * mAccessorFactory;
    TSCH3DCamera * mCamera;
    TSUNoCopyDictionary * mDelegateMap;
    NSMutableDictionary * mEnumeratorMap;
    TSCH3DSceneObject * mMain;
    NSMutableArray * mObjects;
    TSCH3DScene * mOriginal;
    NSMutableDictionary * mPropertiesMap;
}

@property (nonatomic, retain) TSCH3DScenePropertyAccessor *accessor;
@property (nonatomic, retain) NSObject<TSCH3DScenePropertyAccessorFactory> *accessorFactory;
@property (nonatomic, retain) TSCH3DCamera *camera;
@property (nonatomic, readonly) NSArray *debugObjects;
@property (nonatomic, readonly) <TSCH3DSceneDelegate> *delegate;
@property (nonatomic, retain) TSCH3DSceneObject *main;
@property (nonatomic, retain) TSCH3DScene *original;

+ (id)scene;

- (id)accessor;
- (id)accessorFactory;
- (void)addObject:(id)arg1;
- (id)camera;
- (id)clone;
- (void)copyPropertiesFromScene:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)debugObjects;
- (id)delegate;
- (id)delegateForObject:(id)arg1;
- (id)delegateForSceneObject:(id)arg1;
- (id)delegateMap;
- (id)description;
- (void)enumerateAllObjectsUsingBlock:(id /* block */)arg1;
- (void)enumerateObjectsUsingBlock:(id /* block */)arg1;
- (id)enumeratorForType:(id)arg1;
- (id)enumeratorMap;
- (id)extractObjects:(bool)arg1 ofClasses:(id)arg2;
- (id)extractObjectsNotOfClass:(Class)arg1;
- (id)extractObjectsNotOfClasses:(id)arg1;
- (id)extractObjectsOfClass:(Class)arg1;
- (id)extractObjectsOfClasses:(id)arg1;
- (id)init;
- (id)main;
- (void)makeAllObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)makeDelegatesFromDelegator:(id)arg1;
- (void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)mutablePropertiesForType:(id)arg1;
- (id)objects;
- (id)original;
- (void)overrideObjects;
- (id)partForType:(id)arg1;
- (id)propertiesForType:(id)arg1;
- (id)propertiesMap;
- (id)reallocateObjects;
- (id)removeObjects:(bool)arg1 ofClasses:(id)arg2 addTo:(id)arg3;
- (id)removeObjects:(bool)arg1 ofClasses:(id)arg2 into:(id)arg3;
- (void)removeObjectsNotOfClass:(Class)arg1;
- (void)removeObjectsOfClass:(Class)arg1;
- (id)renderCache;
- (void)resetDelegates;
- (void)resetEnumerator;
- (void)resetObjects;
- (void)resetProperties;
- (id)returnRemoved:(bool)arg1 removeObjectsPassingTest:(id /* block */)arg2;
- (void)setAccessor:(id)arg1;
- (void)setAccessorFactory:(id)arg1;
- (void)setCamera:(id)arg1;
- (void)setDelegate:(id)arg1 forObject:(id)arg2;
- (void)setDelegate:(id)arg1 forSceneObject:(id)arg2;
- (void)setEnumerator:(id)arg1 forType:(id)arg2;
- (void)setEnumerator:(id)arg1 properties:(id)arg2 forType:(id)arg3;
- (void)setMain:(id)arg1;
- (void)setOriginal:(id)arg1;
- (void)setPart:(id)arg1 forType:(id)arg2;
- (void)setProperties:(id)arg1 forType:(id)arg2;
- (struct tmat4x4<float> { struct tvec4<float> { union { float x_1_2_1; float x_1_2_2; float x_1_2_3; } x_1_1_1; union { float x_2_2_1; float x_2_2_2; float x_2_2_3; } x_1_1_2; union { float x_3_2_1; float x_3_2_2; float x_3_2_3; } x_1_1_3; union { float x_4_2_1; float x_4_2_2; float x_4_2_3; } x_1_1_4; } x1[4]; })transform;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

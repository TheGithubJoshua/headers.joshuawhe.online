<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TPPageTemplate.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TPPageTemplate.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TPPageTemplate : TSPObject <TPMasterDrawableProvider, TSDDrawableContainerInfo, TSKDocumentObject, TSKModel, TSKModelRootIndexProvider, TSSPropertySource, TSWPStorageParentStatisticsFilter> {
    TSDFill * _backgroundFill;
    TPDrawablesZOrder * _drawablesZOrder;
    bool  _headersFootersMatchPreviousPage;
    bool  _hideHeadersFooters;
    NSMutableArray * _masterDrawables;
    NSString * _name;
    NSMutableDictionary * _placeholderDrawables;
}

@property (getter=isAnchoredToText, nonatomic, readonly) bool anchoredToText;
@property (getter=isAttachedToBodyText, nonatomic, readonly) bool attachedToBodyText;
@property (nonatomic, retain) TSDFill *backgroundFill;
@property (nonatomic, readonly) NSArray *childInfos;
@property (nonatomic, readonly) unsigned long long countOfMasterDrawables;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) TPDrawablesZOrder *drawablesZOrder;
@property (getter=isFloatingAboveText, nonatomic, readonly) bool floatingAboveText;
@property (nonatomic, copy) TSDInfoGeometry *geometry;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool headersFootersMatchPreviousPage;
@property (nonatomic) bool hideHeadersFooters;
@property (getter=isInlineWithText, nonatomic, readonly) bool inlineWithText;
@property (nonatomic, retain) NSMutableArray *masterDrawables;
@property (nonatomic) bool matchesObjectPlaceholderGeometry;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, readonly) unsigned long long numberOfDerivedPagesInDocument;
@property (nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property (nonatomic, readonly) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property (nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property (nonatomic, retain) NSMutableDictionary *placeholderDrawables;
@property (readonly) Class superclass;

+ (bool)isUserDefinedTag:(id)arg1;
+ (bool)needsObjectUUID;

- (void).cxx_destruct;
- (double)CGFloatValueForProperty:(int)arg1;
- (void)addMasterDrawable:(id)arg1 atIndex:(unsigned long long)arg2 insertContext:(id)arg3 suppressDOLC:(bool)arg4;
- (void)addMasterDrawables:(id)arg1 atIndex:(unsigned long long)arg2 insertContext:(id)arg3 suppressDOLC:(bool)arg4;
- (void)applyTag:(id)arg1 toPlaceholder:(id)arg2;
- (id)backgroundFill;
- (id)boxedObjectForProperty:(int)arg1;
- (id)childEnumerator;
- (id)childInfos;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (bool)containsModelObject:(id)arg1;
- (bool)containsProperty:(int)arg1;
- (id)copyWithContext:(id)arg1;
- (unsigned long long)countOfMasterDrawables;
- (id)description;
- (double)doubleValueForProperty:(int)arg1;
- (id)drawablesZOrder;
- (void)enumeratePlaceholderDrawablesWithBlock:(id /* block */)arg1;
- (float)floatValueForProperty:(int)arg1;
- (id)geometry;
- (bool)headersFootersMatchPreviousPage;
- (bool)hideHeadersFooters;
- (double)highestScaleFactorForRenderingDrawableInfo:(id)arg1;
- (unsigned long long)indexOfMasterDrawable:(id)arg1;
- (id)infoForSelectionPath:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 placeholderDrawables:(id)arg3 placeholderTagsInZOrder:(id)arg4 masterDrawables:(id)arg5;
- (int)intValueForProperty:(int)arg1;
- (bool)isAnchoredToText;
- (bool)isAttachedToBodyText;
- (bool)isFloatingAboveText;
- (bool)isInlineWithText;
- (bool)isSelectable;
- (bool)isThemeContent;
- (bool)isUniqueTag:(id)arg1;
- (Class)layoutClass;
- (void)loadFromUnarchiver:(id)arg1;
- (id)masterDrawables;
- (id)masterDrawablesSortedByZOrder:(id)arg1;
- (long long)modelRootIndex;
- (id)name;
- (unsigned long long)numberOfDerivedPagesInDocument;
- (id)objectForProperty:(int)arg1;
- (id)owningAttachment;
- (id)owningAttachmentNoRecurse;
- (id)parentInfo;
- (id)placeholderDrawables;
- (void)removeMasterDrawable:(id)arg1 suppressDOLC:(bool)arg2;
- (Class)repClass;
- (void)saveToArchiver:(id)arg1;
- (void)setBackgroundFill:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)setHeadersFootersMatchPreviousPage:(bool)arg1;
- (void)setHideHeadersFooters:(bool)arg1;
- (void)setMasterDrawables:(id)arg1;
- (void)setName:(id)arg1;
- (void)setOwningAttachment:(id)arg1;
- (void)setParentInfo:(id)arg1;
- (void)setPlaceholderDrawables:(id)arg1;
- (void)setPrimitiveGeometry:(id)arg1;
- (bool)statisticsShouldExcludeContainedStorage:(id)arg1;
- (id)tagForDrawable:(id)arg1;
- (unsigned long long)templateIndex;
- (unsigned long long)templatePreviewPageIndex;
- (id)topLevelParentInfoForInfo:(id)arg1;
- (id)userDefinedTagForDrawable:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

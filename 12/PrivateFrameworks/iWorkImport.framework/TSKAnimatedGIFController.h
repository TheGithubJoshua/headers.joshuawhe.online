<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSKAnimatedGIFController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSKAnimatedGIFController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSKAnimatedGIFController : NSObject <TSKLayerMediaPlayerController> {
    bool  fastForwarding;
    bool  fastReversing;
    double  mAbsoluteCurrentTime;
    <TSKMediaPlayerControllerDelegate> * mDelegate;
    double  mEndTime;
    NSArray * mFrames;
    double  mLastDisplayUpdateTime;
    NSMutableSet * mLayers;
    NSMutableSet * mObservationTokens;
    bool  mPlaying;
    float  mRate;
    float  mRateBeforeScrubbing;
    long long  mRepeatMode;
    unsigned long long  mScrubbingCount;
    struct CGImageSource { } * mSource;
    double  mStartTime;
    float  mVolume;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGImage { }*imageForCurrentTime;
@property (nonatomic) double lastDisplayUpdateTime;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (double)absoluteCurrentTime;
- (double)absoluteDuration;
- (void)addLayer:(id)arg1;
- (void)addObservationToken:(id)arg1;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 block:(id /* block */)arg2;
- (void)beginScrubbing;
- (bool)canFastForward;
- (bool)canFastReverse;
- (bool)canPlay;
- (void)cancelPendingSeeks;
- (double)currentTime;
- (void)dealloc;
- (id)delegate;
- (double)duration;
- (void)endScrubbing;
- (double)endTime;
- (struct CGImage { }*)imageForCurrentTime;
- (struct CGImage { }*)imageForTime:(double)arg1;
- (id)init;
- (id)initWithData:(id)arg1 delegate:(id)arg2;
- (id)initWithImageSource:(struct CGImageSource { }*)arg1 delegate:(id)arg2;
- (bool)isFastForwarding;
- (bool)isFastReversing;
- (bool)isPlaying;
- (bool)isScrubbing;
- (double)lastDisplayUpdateTime;
- (id)newLayer;
- (void)p_prepareFrameTimes;
- (void)p_setAbsoluteCurrentTime:(double)arg1;
- (void)p_updateLayers;
- (float)rate;
- (double)remainingTime;
- (void)removeLayer:(id)arg1;
- (void)removeObservationToken:(id)arg1;
- (void)removePeriodicTimeObserver:(id)arg1;
- (long long)repeatMode;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(id /* block */)arg3;
- (void)seekBackwardByOneFrame;
- (void)seekForwardByOneFrame;
- (void)seekToBeginning;
- (void)seekToEnd;
- (void)setEndTime:(double)arg1;
- (void)setFastForwarding:(bool)arg1;
- (void)setFastReversing:(bool)arg1;
- (void)setLastDisplayUpdateTime:(double)arg1;
- (void)setPlaying:(bool)arg1;
- (void)setRate:(float)arg1;
- (void)setRepeatMode:(long long)arg1;
- (void)setStartTime:(double)arg1;
- (void)setVolume:(float)arg1;
- (double)startTime;
- (void)stopSynchronously;
- (void)teardown;
- (float)volume;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSTCellFormatAndValue.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSTCellFormatAndValue.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSTCellFormatAndValue : NSObject <NSCopying, TSSPropertyCommandSerializing, TSTCellDiffing> {
    bool  _applySpareFormatOnly;
    bool  _boolValue;
    TSKFormat * _booleanFormat;
    unsigned int  _cellFormatKind;
    TSKFormat * _currencyFormat;
    TSKFormat * _dateFormat;
    double  _doubleValue;
    TSKFormat * _durationFormat;
    unsigned short  _explicitFlags;
    TSWPStorage * _formattedRichTextStorage;
    NSString * _formattedValue;
    TSKFormat * _numberFormat;
    NSObject * _objValue;
    int  _spareFormatType;
    bool  _suppressApplyValue;
    TSKFormat * _textFormat;
    bool  _useAllSpareFormats;
    unsigned int  _valueType;
}

@property (nonatomic, readonly, copy) NSDate *dateValue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isApplySpareFormatOnly;
@property (nonatomic, readonly) bool isFormulaSyntaxError;
@property (nonatomic, readonly) double numberOrCurrencyDoubleValue;
@property (nonatomic, readonly) TSWPStorage *richTextOrErrorTextStorageValue;
@property (nonatomic, readonly, copy) NSString *stringValue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) int valueType;

+ (id)cellDiffProperties;
+ (id)formatAndValueFromCell:(id)arg1 applySpareFormatOnly:(int)arg2;
+ (id)formatAndValueFromCell:(id)arg1 useAllSpareFormats:(bool)arg2;
+ (id)formatAndValueFromCell:(id)arg1 useAllSpareFormats:(bool)arg2 forceNoContent:(bool)arg3;
+ (id)formatAndValueFromRichTextCell:(id)arg1 updatingStorageWithBlock:(id /* block */)arg2;

- (void).cxx_destruct;
- (void)applyToCell:(id)arg1;
- (id)cellValueWithLocale:(id)arg1;
- (id)copyForApplyingNoContent;
- (id)copyForApplyingNoContentWithSuppressApplyValue:(bool)arg1;
- (id)copyForNotApplyingValue;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dateValue;
- (id)getCurrentFormat;
- (bool)hasStringContentMatchingCell:(id)arg1;
- (id)initFromCell:(id)arg1 useAllSpareFormats:(bool)arg2;
- (id)initFromCell:(id)arg1 useAllSpareFormats:(bool)arg2 forceNoContent:(bool)arg3 applySpareFormatOnly:(int)arg4;
- (id)initFromPropertyCommandMessage:(const struct Message { int (**x1)(); }*)arg1 unarchiver:(id)arg2;
- (bool)isApplySpareFormatOnly;
- (bool)isFormulaSyntaxError;
- (double)numberOrCurrencyDoubleValue;
- (id)objectByRemovingPropertiesInMap:(id)arg1 addingPropertiesInMap:(id)arg2 updateInverseResetPropertyMap:(id)arg3 updateInverseSetPropertyMap:(id)arg4;
- (id)p_copyStorage:(id)arg1;
- (id)p_formatForFormatType:(unsigned int)arg1;
- (id)richTextOrErrorTextStorageValue;
- (void)saveToPropertyCommandMessage:(struct Message { int (**x1)(); }*)arg1 archiver:(id)arg2;
- (void)setDateValue:(id)arg1;
- (id)stringValue;
- (int)valueType;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

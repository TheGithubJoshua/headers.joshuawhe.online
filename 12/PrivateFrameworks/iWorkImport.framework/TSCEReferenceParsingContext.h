<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSCEReferenceParsingContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSCEReferenceParsingContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSCEReferenceParsingContext : NSObject <NSCopying> {
    TSCEAbortObject * _abortObject;
    NSString * _aggregateFunction;
    NSArray * _components;
    NSString * _contextSheetName;
    struct TSCETableResolver { int (**x1)(); } * _contextTableResolver;
    bool  _filterColons;
    bool  _namesUsed;
    bool  _parseAsBaseTableReference;
    struct TSUPreserveFlags { 
        unsigned char _flags; 
    }  _preserveFlags;
    TSCEQuotedRefPathSplitter * _refPathSplitter;
    bool  _referenceIsComplete;
    NSMutableArray * _referencesMatchingInputAsPrefix;
    NSString * _rest;
    NSString * _sheetName;
    NSString * _sheetNameUnquoted;
    NSString * _tableName;
    NSString * _tableNameUnquoted;
    bool  _trimNames;
}

@property (nonatomic, retain) TSCEAbortObject *abortObject;
@property (nonatomic, retain) NSString *aggregateFunction;
@property (nonatomic, retain) NSArray *components;
@property (nonatomic, readonly) <TSCEReferenceResolving> *contextResolver;
@property (nonatomic, retain) NSString *contextSheetName;
@property (nonatomic) struct TSCETableResolver { int (**x1)(); }*contextTableResolver;
@property (nonatomic) bool filterColons;
@property (nonatomic) bool namesUsed;
@property (nonatomic) bool parseAsBaseTableReference;
@property (nonatomic) struct TSUPreserveFlags { unsigned char x1; } preserveFlags;
@property (nonatomic, retain) TSCEQuotedRefPathSplitter *refPathSplitter;
@property (nonatomic) bool referenceIsComplete;
@property (nonatomic, retain) NSMutableArray *referencesMatchingInputAsPrefix;
@property (nonatomic, retain) NSString *rest;
@property (nonatomic, retain) NSString *sheetName;
@property (nonatomic, retain) NSString *sheetNameUnquoted;
@property (nonatomic, retain) NSString *tableName;
@property (nonatomic, retain) NSString *tableNameUnquoted;
@property (nonatomic) bool trimNames;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)abortObject;
- (id)aggregateFunction;
- (id)components;
- (id)contextResolver;
- (id)contextSheetName;
- (struct TSCETableResolver { int (**x1)(); }*)contextTableResolver;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)filterColons;
- (id)initWithContextResolver:(id)arg1;
- (id)initWithContextResolver:(id)arg1 components:(id)arg2;
- (id)initWithContextTableResolver:(struct TSCETableResolver { int (**x1)(); }*)arg1;
- (id)initWithContextTableResolver:(struct TSCETableResolver { int (**x1)(); }*)arg1 components:(id)arg2;
- (bool)namesUsed;
- (bool)parseAsBaseTableReference;
- (struct TSUPreserveFlags { unsigned char x1; })preserveFlags;
- (id)refPathSplitter;
- (bool)referenceIsComplete;
- (id)referencesMatchingInputAsPrefix;
- (void)reset;
- (id)rest;
- (void)setAbortObject:(id)arg1;
- (void)setAggregateFunction:(id)arg1;
- (void)setComponents:(id)arg1;
- (void)setContextSheetName:(id)arg1;
- (void)setContextTableResolver:(struct TSCETableResolver { int (**x1)(); }*)arg1;
- (void)setFilterColons:(bool)arg1;
- (void)setNamesUsed:(bool)arg1;
- (void)setParseAsBaseTableReference:(bool)arg1;
- (void)setPreserveFlags:(struct TSUPreserveFlags { unsigned char x1; })arg1;
- (void)setRefPathSplitter:(id)arg1;
- (void)setReferenceIsComplete:(bool)arg1;
- (void)setReferencesMatchingInputAsPrefix:(id)arg1;
- (void)setRest:(id)arg1;
- (void)setSheetName:(id)arg1;
- (void)setSheetNameUnquoted:(id)arg1;
- (void)setTableName:(id)arg1;
- (void)setTableNameUnquoted:(id)arg1;
- (void)setTrimNames:(bool)arg1;
- (id)sheetName;
- (id)sheetNameUnquoted;
- (id)tableName;
- (id)tableNameUnquoted;
- (bool)trimNames;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

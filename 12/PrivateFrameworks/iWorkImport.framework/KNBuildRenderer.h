<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>KNBuildRenderer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/KNBuildRenderer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface KNBuildRenderer : KNAnimationRenderer <CAAnimationDelegate> {
    TSDFPSCounter * _FPSCounter;
    KNAnimatedBuild * _animatedBuild;
    NSMutableArray * _animatedBuildsToStartAtEnd;
    NSMapTable * _animatedLayers;
    KNAnimationInfo * _animationInfo;
    bool  _animationWillBeginPerformed;
    bool  _areAnimationsReadyToStart;
    SEL  _buildEndCallbackSelector;
    id  _buildEndCallbackTarget;
    KNBuildChunk * _buildStage;
    TSDTextureSet * _endOfBuildTextureSet;
    TSDTextureSet * _finalAttributesTextureSet;
    TSDDrawableInfo * _info;
    bool  _interrupted;
    bool  _isAnimationForPlayback;
    bool  _isNonCachedTextureValid;
    bool  _isPreview;
    bool  _isTextureCachedAtEndOfBuild;
    long long  _numberOfAnimationsStarted;
    CALayer * _parentLayer;
    bool  _shouldUseMagicMoveTextures;
    TSDTextureDescription * _textureDescription;
    TSDTextureSet * _textureSet;
    NSMutableSet * _texturesToTeardown;
    bool  _usingFinalTexture;
}

@property (nonatomic, readonly) KNAnimatedBuild *animatedBuild;
@property (nonatomic, readonly) NSArray *animatedBuildsToStartAtEnd;
@property (nonatomic, readonly) KNBuildChunk *buildStage;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) TSDDrawableInfo *info;
@property (nonatomic, retain) CALayer *parentLayer;
@property (nonatomic, readonly) TSDRep *rep;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long textureDeliveryStyle;
@property (nonatomic, retain) TSDTextureDescription *textureDescription;
@property (nonatomic, readonly) TSDTextureSet *textureSet;
@property (nonatomic, readonly) long long textureStageIndex;

- (bool)addAnimationsAtLayerTime:(double)arg1;
- (void)addBuildToStartAtEnd:(id)arg1;
- (void)animate;
- (id)animatedBuild;
- (id)animatedBuildsToStartAtEnd;
- (void)animationDidEnd;
- (void)animationDidStop:(id)arg1 finished:(bool)arg2;
- (id)animationWillBegin;
- (id)buildStage;
- (void)dealloc;
- (id)description;
- (void)fadeOutPreviousStageOn:(id)arg1 atLayerTime:(double)arg2;
- (void)forceRemoveAnimations;
- (void)generateTextures;
- (id)info;
- (id)initWithAnimatedBuild:(id)arg1 info:(id)arg2 buildStage:(id)arg3 animatedSlideView:(id)arg4;
- (id)initializeTextureSetForEndOfBuild:(bool)arg1 endOfSlide:(bool)arg2 description:(id)arg3 isRenderingToContext:(bool)arg4;
- (id)loadPluginIfNeeded;
- (id)p_filterForTextDelivery:(long long)arg1;
- (id)p_initializeTextureSetForEndOfBuild:(bool)arg1 endOfSlide:(bool)arg2 description:(id)arg3 isRenderingToContext:(bool)arg4;
- (bool)p_isDriftAnimation;
- (bool)p_isMovieInfo;
- (bool)p_isTextDrawable;
- (id)p_keyForAnimation;
- (void)p_removeAnimations;
- (void)p_resetAnimations;
- (id)p_textureSetForStage:(long long)arg1 description:(id)arg2 isAtEndOfBuild:(bool)arg3 shouldForceRebuild:(bool)arg4 shouldRender:(bool)arg5;
- (void)p_updateTextureDescription:(id)arg1 forStage:(long long)arg2 isAtEndOfBuild:(bool)arg3;
- (id)parentLayer;
- (void)pauseAnimationsAtTime:(double)arg1;
- (void)registerForBuildEndCallback:(SEL)arg1 target:(id)arg2;
- (void)removeAnimationsAndFinish:(bool)arg1;
- (void)removeBuildToStartAtEnd:(id)arg1;
- (void)renderTextures;
- (id)rep;
- (void)resetHighlightsBeforeAnimationOnTextureSet:(id)arg1;
- (void)resetPreviousStageToUnhighlightOnTextureSet:(id)arg1;
- (void)resumeAnimationsIfPausedAtTime:(double)arg1;
- (void)setEndOfBuildTextureSet:(id)arg1;
- (void)setGeometryAndActionAttributesOnTextureSet:(id)arg1 isAtEndOfBuild:(bool)arg2 isAtEndOfSlide:(bool)arg3 isRenderingToContext:(bool)arg4;
- (void)setLayerVisibility:(id)arg1 isAtEndOfBuild:(bool)arg2;
- (void)setParentLayer:(id)arg1;
- (void)setTextureDescription:(id)arg1;
- (id)setupFinalTextureGivenCurrentTextureSet:(id)arg1 isRenderingToContext:(bool)arg2;
- (void)setupPluginContext;
- (bool)shouldPreGenerateTextures;
- (void)stopAnimations;
- (void)teardown;
- (unsigned long long)textureDeliveryStyle;
- (id)textureDescription;
- (id)textureDescriptionForStage:(long long)arg1 isAtEndOfBuild:(bool)arg2;
- (id)textureSet;
- (id)textureSetForStage:(long long)arg1 description:(id)arg2 isAtEndOfBuild:(bool)arg3 shouldForceRebuild:(bool)arg4 shouldRender:(bool)arg5;
- (id)textureSetWithoutRenderedContents;
- (long long)textureStageIndex;
- (void)updateAnimationTestingLog;
- (void)updateAnimationsForLayerTime:(double)arg1;
- (void)waitUntilAsyncRenderingIsCompleteShouldCancel:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

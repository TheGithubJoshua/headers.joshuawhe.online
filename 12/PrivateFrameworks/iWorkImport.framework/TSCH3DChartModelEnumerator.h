<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSCH3DChartModelEnumerator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSCH3DChartModelEnumerator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSCH3DChartModelEnumerator : NSObject {
    TSCH3DChartType * mChartType;
    struct ValueEnumerator { 
        bool mForward; 
        unsigned long long mIndex; 
        unsigned long long mMax; 
        double mValue; 
    }  mCoordinate;
    TSCHChartAxis * mCoordinateAxis;
    struct vector<double, std::__1::allocator<double> > { 
        double *__begin_; 
        double *__end_; 
        struct __compressed_pair<double *, std::__1::allocator<double> > { 
            double *__value_; 
        } __end_cap_; 
    }  mCoordinateValues;
    double  mIntercept;
    TSCHChartModel * mModel;
    unsigned long long  mNumberOfValues;
    struct ValueEnumerator { 
        bool mForward; 
        unsigned long long mIndex; 
        unsigned long long mMax; 
        double mValue; 
    }  mSeries;
    NSArray * mSeriesList;
    TSCHChartSeriesType * mSeriesType;
    struct vector<double, std::__1::allocator<double> > { 
        double *__begin_; 
        double *__end_; 
        struct __compressed_pair<double *, std::__1::allocator<double> > { 
            double *__value_; 
        } __end_cap_; 
    }  mSeriesValues;
    double  mUnitSpaceIntercept;
    TSCHChartAxis * mValueAxis;
}

@property (nonatomic, readonly) TSCH3DChartType *chartType;
@property (nonatomic, readonly) TSCHChartInfo *info;
@property (nonatomic, readonly) TSCHChartModel *model;
@property (nonatomic, readonly) TSCHChartSeries *series;
@property (nonatomic, readonly) TSCHChartSeriesType *seriesType;
@property (nonatomic, readonly) struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; } size;

+ (id)enumeratorWithModel:(id)arg1 chartType:(id)arg2 seriesType:(id)arg3;

- (id).cxx_construct;
- (void).cxx_destruct;
- (double)axisSpaceValue;
- (id)chartType;
- (unsigned long long)countSeries;
- (void)dealloc;
- (id)elementEnumerator;
- (unsigned long long)elementIndex;
- (double)groupValue;
- (unsigned long long)index;
- (id)info;
- (id)initWithModel:(id)arg1 chartType:(id)arg2 seriesType:(id)arg3;
- (double)intercept;
- (bool)isStackedPercentageThatRoundsDownToZero;
- (bool)isValid;
- (bool)isValidNonZero;
- (id)model;
- (id)nextElement;
- (id)nextElement:(unsigned long long)arg1;
- (id)nextSeries;
- (id)nextSeries:(unsigned long long)arg1;
- (unsigned long long)numberOfSeries;
- (id)p_resetCoordinateEnumeration;
- (struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; })position;
- (void)resetForReverseSeriesEnumeration:(bool)arg1;
- (id)reverseSeriesEnumerator;
- (id)series;
- (id)seriesEnumerator;
- (id)seriesFill;
- (id)seriesFillOrStrokeColor;
- (id)seriesName;
- (id)seriesType;
- (bool)showSeriesName;
- (bool)showValueLabels;
- (struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; })size;
- (bool)skipZeroValues;
- (double)unitSpaceIntercept;
- (double)unitSpaceValue;
- (double)unitSpaceValueForAxisValue:(double)arg1;
- (void)updateAxes;
- (void)updateValue;
- (unsigned int)valueLabelPositionForAxisValue:(double)arg1;
- (id)valueString;
- (id)valueStringForLabelResources:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

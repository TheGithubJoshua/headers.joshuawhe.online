<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>KNTransition.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/KNTransition.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface KNTransition : TSPContainedObject <KNInspectableAnimation, TSKModel> {
    KNTransitionAttributes * _attributes;
}

@property (nonatomic, readonly) KNAnimationInfo *animationInfo;
@property (nonatomic, copy) KNTransitionAttributes *attributes;
@property (nonatomic, readonly) bool canEditAnimations;
@property (nonatomic, readonly) TSUColor *color;
@property (nonatomic, readonly) bool customBounce;
@property (nonatomic, readonly) TSDBezierPathSource *customEffectTimingCurve1;
@property (nonatomic, readonly) TSDBezierPathSource *customEffectTimingCurve2;
@property (nonatomic, readonly) TSDBezierPathSource *customEffectTimingCurve3;
@property (nonatomic, readonly) NSString *customEffectTimingCurveThemeName1;
@property (nonatomic, readonly) NSString *customEffectTimingCurveThemeName2;
@property (nonatomic, readonly) NSString *customEffectTimingCurveThemeName3;
@property (nonatomic, readonly) bool customMagicMoveFadeUnmatchedObjects;
@property (nonatomic, readonly) long long customMosaicSize;
@property (nonatomic, readonly) long long customMosaicType;
@property (nonatomic, readonly) bool customMotionBlur;
@property (nonatomic, readonly) long long customTextDelivery;
@property (nonatomic, readonly) long long customTimingCurve;
@property (nonatomic, readonly) float customTravelDistance;
@property (nonatomic, readonly) float customTwist;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) double delay;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned long long direction;
@property (nonatomic, readonly) KNAnimationPluginMenu *directionMenu;
@property (nonatomic, readonly) unsigned long long directionType;
@property (nonatomic, readonly) bool documentIsRTL;
@property (nonatomic, readonly) double duration;
@property (nonatomic, readonly) NSString *effect;
@property (nonatomic, readonly) bool hasAutomaticTrigger;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSSet *inspectableAttributes;
@property (nonatomic, readonly) bool isMagicMove;
@property (nonatomic, readonly) NSArray *localizedEventTriggerNames;
@property (nonatomic, readonly) long long randomNumberSeed;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsBounce;
@property (nonatomic, readonly) bool supportsColor;
@property (nonatomic, readonly) bool supportsCustomEffectTimingCurve1;
@property (nonatomic, readonly) bool supportsCustomEffectTimingCurve2;
@property (nonatomic, readonly) bool supportsCustomEffectTimingCurve3;
@property (nonatomic, readonly) bool supportsDirection;
@property (nonatomic, readonly) bool supportsDuration;
@property (nonatomic, readonly) bool supportsTravelDistance;
@property (nonatomic, readonly) bool supportsTwist;

+ (id)attributeKeyForBindingKeyPath:(id)arg1;
+ (id)bindingKeyPathForAttributeKey:(id)arg1;
+ (id)bindingMap;
+ (unsigned long long)directionTypeForEffect:(id)arg1;
+ (bool)hasDirectionOptionForEffect:(id)arg1;

- (void).cxx_destruct;
- (id)animationInfo;
- (id)attributes;
- (bool)canEditAnimations;
- (id)color;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)customBounce;
- (id)customEffectTimingCurve1;
- (id)customEffectTimingCurve2;
- (id)customEffectTimingCurve3;
- (id)customEffectTimingCurveThemeName1;
- (id)customEffectTimingCurveThemeName2;
- (id)customEffectTimingCurveThemeName3;
- (bool)customMagicMoveFadeUnmatchedObjects;
- (long long)customMosaicSize;
- (long long)customMosaicType;
- (bool)customMotionBlur;
- (long long)customTextDelivery;
- (long long)customTimingCurve;
- (float)customTravelDistance;
- (float)customTwist;
- (double)delay;
- (id)description;
- (unsigned long long)direction;
- (id)directionMenu;
- (unsigned long long)directionType;
- (bool)documentIsRTL;
- (double)duration;
- (id)effect;
- (bool)hasAutomaticTrigger;
- (id)initWithArchive:(const struct TransitionArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct TransitionAttributesArchive {} *x5; }*)arg1 unarchiver:(id)arg2 owner:(id)arg3;
- (id)initWithOwner:(id)arg1;
- (id)initWithOwner:(id)arg1 attributes:(id)arg2;
- (id)inspectableAttributes;
- (bool)isMagicMove;
- (id)localizedEventTriggerNames;
- (unsigned long long)p_keynoteVersionFromUnarchiver:(id)arg1;
- (bool)p_supportsCustomEffectTimingCurveForLayoutStyles:(id)arg1;
- (long long)randomNumberSeed;
- (void)saveToArchive:(struct TransitionArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct TransitionAttributesArchive {} *x5; }*)arg1 archiver:(id)arg2;
- (void)setAttributes:(id)arg1;
- (bool)supportsBounce;
- (bool)supportsColor;
- (bool)supportsCustomEffectTimingCurve1;
- (bool)supportsCustomEffectTimingCurve2;
- (bool)supportsCustomEffectTimingCurve3;
- (bool)supportsDirection;
- (bool)supportsDuration;
- (bool)supportsRandomNumberSeedInspection;
- (bool)supportsTimingCurves;
- (bool)supportsTravelDistance;
- (bool)supportsTwist;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

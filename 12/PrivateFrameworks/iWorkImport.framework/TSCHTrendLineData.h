<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSCHTrendLineData.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iWorkImport.framework/TSCHTrendLineData.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSCHTrendLineData : NSObject <TSCHUnretainedParent> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  mCachedChartFrame;
    bool  mCachedChartVertical;
    TSUBezierPath * mCachedTrendLinePath;
    int  mInputAxisType;
    int  mLineType;
    double  mMaxXValue;
    double  mMaxYValue;
    double  mMinXValue;
    double  mMinYValue;
    double  mOffsetInBody;
    int  mOutputAxisType;
    TSURegressionModel * mRegression;
    TSCHChartSeries * mSeries;
    bool  mShowTrendLine;
    bool  mTrendLineInvalid;
}

@property (nonatomic, readonly) float equationTextOpacity;
@property (nonatomic, readonly) NSString *rSquaredText;
@property (nonatomic, readonly) float rSquaredTextOpacity;
@property (nonatomic, readonly) bool showEquation;
@property (nonatomic, readonly) bool showRSquared;
@property (nonatomic, readonly) bool showTrendLine;
@property (nonatomic, readonly) bool showTrendLineLegendText;
@property (nonatomic, readonly) NSString *trendLineLegendText;

- (void).cxx_destruct;
- (void)clearParent;
- (void)dealloc;
- (float)equationTextOpacity;
- (id)initWithSeries:(id)arg1;
- (void)invalidateData;
- (double)maxValueForAxisID:(id)arg1;
- (double)minValueForAxisID:(id)arg1;
- (struct __CFAttributedString { }*)newEquationAttributedString;
- (void)p_addPathToTrendLinePathWithPoints:(struct { double x1; double x2; }*)arg1 count:(unsigned long long)arg2 curved:(bool)arg3 curveFitter:(id)arg4;
- (void)p_calcBounds;
- (void)p_calcBoundsForMovingAverage;
- (void)p_calcMARegression:(unsigned long long)arg1 xData:(id)arg2 yData:(id)arg3;
- (void)p_calcRegression:(unsigned long long)arg1 xData:(double*)arg2 yData:(double*)arg3;
- (id)p_dataPointValues;
- (unsigned long long)p_fillArrayX:(id)arg1 andY:(id)arg2 fromPoints:(id)arg3;
- (unsigned long long)p_fillArrayX:(double*)arg1 andY:(double*)arg2 fromPoints:(id)arg3 hasNegativeX:(bool*)arg4;
- (void)p_generateRegression;
- (int)p_getTrendLineType;
- (id)p_linePathFromPoints:(struct { double x1; double x2; }*)arg1 count:(unsigned long long)arg2;
- (void)p_releaseCache;
- (struct { double x1; double x2; })p_unitPoint:(struct { double x1; double x2; })arg1 toScreenFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 offset:(double)arg3 vertical:(bool)arg4;
- (void)p_updateTrendLineData;
- (id)rSquaredText;
- (float)rSquaredTextOpacity;
- (bool)showEquation;
- (bool)showRSquared;
- (bool)showTrendLine;
- (bool)showTrendLineForAxisID:(id)arg1;
- (bool)showTrendLineLegendText;
- (id)trendLineLegendText;
- (id)trendLinePathForChartRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 offsetInBody:(double)arg2 vertical:(bool)arg3;
- (void)trendLineUnitSpacePoints:(struct { /* ? */ }**)arg1 count:(unsigned long long*)arg2 drawCurve:(bool*)arg3 maxPoints:(unsigned long long)arg4;
- (void)updateIfNeeded;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

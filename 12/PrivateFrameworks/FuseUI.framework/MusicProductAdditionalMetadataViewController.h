<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MusicProductAdditionalMetadataViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FuseUI.framework/MusicProductAdditionalMetadataViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI (1)
 */

@interface MusicProductAdditionalMetadataViewController : UIViewController <MusicProductDescriptionTableViewCellDelegate, MusicProductMetadataTableViewCellDelegate, MusicTableViewDelegate, UITableViewDataSource, UITableViewDelegate> {
    NSIndexSet * _allowedMetadataItems;
    UIColor * _customSelectionTintColor;
    UIColor * _defaultSelectionTintColor;
    <MusicProductAdditionalMetadataViewControllerDelegate> * _delegate;
    struct { 
        unsigned int didSelectAddSongsButton : 1; 
        unsigned int didUpdateProductDescription : 1; 
        unsigned int didUpdatePublicSwitchState : 1; 
        unsigned int didUpdateVisibleSwitchState : 1; 
        unsigned int didFinishContentHeightAnimation : 1; 
        unsigned int willBeginContentHeightAnimation : 1; 
        unsigned int shouldDeferContentHeightAnimationUpdates : 1; 
    }  _delegateRespondsToSelector;
    MusicMediaDetailTintInformation * _detailTintInformation;
    NSMutableIndexSet * _metadataItems;
    MusicProductDescription * _productDescription;
    long long  _productDescriptionMaximumLengthForTextInput;
    MusicProductDescriptionTableViewCell * _productDescriptionTableViewCell;
    long long  _productDescriptionTextStyle;
    NSString * _publicSwitchDescription;
    bool  _publicSwitchOn;
    MusicTableView * _tableView;
    bool  _trailingSeparatorInsetFollowsLayoutInsets;
    NSString * _visibleSwitchDescription;
    bool  _visibleSwitchOn;
}

@property (nonatomic, copy) NSIndexSet *allowedMetadataItems;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MusicProductAdditionalMetadataViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) MusicMediaDetailTintInformation *detailTintInformation;
@property (nonatomic, readonly) double effectiveContentHeight;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) MusicProductDescription *productDescription;
@property (nonatomic) long long productDescriptionMaximumLengthForTextInput;
@property (nonatomic) long long productDescriptionTextStyle;
@property (nonatomic, copy) NSString *publicSwitchDescription;
@property (getter=isPublicSwitchOn, nonatomic) bool publicSwitchOn;
@property (readonly) Class superclass;
@property (nonatomic) bool trailingSeparatorInsetFollowsLayoutInsets;
@property (nonatomic, copy) NSString *visibleSwitchDescription;
@property (getter=isVisibleSwitchOn, nonatomic) bool visibleSwitchOn;

- (void).cxx_destruct;
- (void)_didFinishContentHeightAnimation;
- (void)_didSelectAddSongsButton;
- (void)_handlePreferredContentSizeCategoryDidChangeNotification:(id)arg1;
- (long long)_metadataItemForRowAtIndexPath:(id)arg1;
- (id)_productDescriptionTableViewCell;
- (id)_publicSwitchCell;
- (void)_reloadTableViewRowHeights;
- (long long)_rowIndexForMetadataItem:(long long)arg1;
- (bool)_shouldDeferContentHeightAnimationUpdates;
- (void)_updateVisibleMetadataItems;
- (void)_willBeginContentHeightAnimation;
- (id)allowedMetadataItems;
- (void)dealloc;
- (id)delegate;
- (id)detailTintInformation;
- (double)effectiveContentHeight;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isPublicSwitchOn;
- (bool)isVisibleSwitchOn;
- (id)productDescription;
- (void)productDescriptionDidChangeForProductDescriptionTableViewCell:(id)arg1;
- (long long)productDescriptionMaximumLengthForTextInput;
- (long long)productDescriptionTextStyle;
- (id)publicSwitchDescription;
- (void)setAllowedMetadataItems:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetailTintInformation:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setProductDescription:(id)arg1;
- (void)setProductDescriptionMaximumLengthForTextInput:(long long)arg1;
- (void)setProductDescriptionTextStyle:(long long)arg1;
- (void)setPublicSwitchDescription:(id)arg1;
- (void)setPublicSwitchOn:(bool)arg1;
- (void)setTrailingSeparatorInsetFollowsLayoutInsets:(bool)arg1;
- (void)setVisibleSwitchDescription:(id)arg1;
- (void)setVisibleSwitchOn:(bool)arg1;
- (void)switchDidChangeStateInProductMetadataTableViewCell:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldForceBottomSeparatorVisibleForSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (bool)trailingSeparatorInsetFollowsLayoutInsets;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (id)visibleSwitchDescription;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MusicDefaults.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FuseUI.framework/MusicDefaults.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI (1)
 */

@interface MusicDefaults : MPUApplicationDefaults {
    bool  _internalInstall;
    long long  _playbackSpeed;
}

@property (getter=isActivityContinuationEnabled, nonatomic, readonly) bool activityContinuationEnabled;
@property (nonatomic, retain) NSDate *dateWhenUserLastSawWelcomeScreen;
@property (nonatomic, readonly) int eqPreset;
@property (getter=isGeniusUserEnabled, nonatomic) bool geniusUserEnabled;
@property (getter=isGroupByAlbumArtistEnabled, nonatomic, readonly) bool groupByAlbumArtistEnabled;
@property (nonatomic, readonly) bool hasSetVersionOfNoThanksOption;
@property (nonatomic, readonly) bool hasSetVersionOfNotNowOption;
@property (nonatomic) bool hasUserRequestedSubscriptionHidden;
@property (getter=isInternalInstall, nonatomic) bool internalInstall;
@property (nonatomic) bool lastKnownHasActiveSubscription;
@property (nonatomic, retain) NSNumber *lastKnownStoreAccountUniqueIdentifier;
@property (nonatomic) bool lastKnownSupportsConnect;
@property (nonatomic, copy) NSDictionary *lastKnownTabConfigurations;
@property (nonatomic) unsigned long long lastModifiedPlaylistID;
@property (nonatomic, retain) NSDate *lastMyMusicSearchDate;
@property (getter=isPinningEnabled, nonatomic, readonly) bool pinningEnabled;
@property (nonatomic) long long playbackSpeed;
@property (nonatomic) bool playlistsOverviewShowsOnlyOfflinePlaylists;
@property (nonatomic) float popularityIndicatorThreshold;
@property (nonatomic) long long repeatType;
@property (nonatomic) bool searchShouldDefaultToMyMusic;
@property (nonatomic, copy) NSString *selectedLibraryViewIdentifier;
@property (nonatomic, copy) NSString *selectedPlaylistsOverviewFilter;
@property (getter=isShakeToShuffleEnabled, nonatomic, readonly) bool shakeToShuffleEnabled;
@property (getter=isShowCloudMediaEnabled, nonatomic) bool showCloudMediaEnabled;
@property (nonatomic) long long shuffleType;
@property (getter=isSortByArtistEnabled, nonatomic, readonly) bool sortByArtistEnabled;
@property (getter=isSoundCheckEnabled, nonatomic, readonly) bool soundCheckEnabled;
@property (nonatomic, copy) NSArray *tabBarOrdering;
@property (nonatomic) long long versionOfFormerFreeTrialWhenUserLastSawWelcomeScreen;
@property (nonatomic) long long versionOfNoThanksWhenUserLastSawWelcomeScreen;
@property (nonatomic) long long versionOfNotNowWhenUserLastSawWelcomeScreen;
@property (nonatomic, retain) NSString *versionOfOSWhenFormerFreeTrialWelcomeScreenWasShown;
@property (nonatomic, retain) NSString *versionOfOSWhenNoThanksWelcomeScreenWasShown;
@property (nonatomic, retain) NSString *versionOfOSWhenNotNowWelcomeScreenWasShown;

+ (id)sharedDefaults;

- (void)beginObservingDefaultsChanges;
- (id)dateWhenUserLastSawWelcomeScreen;
- (void)ensureInvertedDefaultPlaybackSpeedHackIsInPlace;
- (int)eqPreset;
- (bool)hasSetVersionOfNoThanksOption;
- (bool)hasSetVersionOfNotNowOption;
- (bool)hasUserRequestedSubscriptionHidden;
- (bool)isActivityContinuationEnabled;
- (bool)isGeniusUserEnabled;
- (bool)isGroupByAlbumArtistEnabled;
- (bool)isInternalInstall;
- (bool)isPinningEnabled;
- (bool)isShakeToShuffleEnabled;
- (bool)isShowCloudMediaEnabled;
- (bool)isSortByArtistEnabled;
- (bool)isSoundCheckEnabled;
- (bool)lastKnownHasActiveSubscription;
- (id)lastKnownStoreAccountUniqueIdentifier;
- (bool)lastKnownSupportsConnect;
- (id)lastKnownTabConfigurations;
- (unsigned long long)lastModifiedPlaylistID;
- (id)lastMyMusicSearchDate;
- (void)migrateTabBarOrderingIfNeeded;
- (long long)playbackSpeed;
- (bool)playlistsOverviewShowsOnlyOfflinePlaylists;
- (float)popularityIndicatorThreshold;
- (long long)repeatType;
- (bool)searchShouldDefaultToMyMusic;
- (id)selectedLibraryViewIdentifier;
- (id)selectedPlaylistsOverviewFilter;
- (void)setDateWhenUserLastSawWelcomeScreen:(id)arg1;
- (void)setGeniusUserEnabled:(bool)arg1;
- (void)setHasUserRequestedSubscriptionHidden:(bool)arg1;
- (void)setInternalInstall:(bool)arg1;
- (void)setLastKnownHasActiveSubscription:(bool)arg1;
- (void)setLastKnownStoreAccountUniqueIdentifier:(id)arg1;
- (void)setLastKnownSupportsConnect:(bool)arg1;
- (void)setLastKnownTabConfigurations:(id)arg1;
- (void)setLastModifiedPlaylistID:(unsigned long long)arg1;
- (void)setLastMyMusicSearchDate:(id)arg1;
- (void)setPlaybackSpeed:(long long)arg1;
- (void)setPlaylistsOverviewShowsOnlyOfflinePlaylists:(bool)arg1;
- (void)setPopularityIndicatorThreshold:(float)arg1;
- (void)setRepeatType:(long long)arg1;
- (void)setSearchShouldDefaultToMyMusic:(bool)arg1;
- (void)setSelectedLibraryViewIdentifier:(id)arg1;
- (void)setSelectedPlaylistsOverviewFilter:(id)arg1;
- (void)setShowCloudMediaEnabled:(bool)arg1;
- (void)setShuffleType:(long long)arg1;
- (void)setTabBarOrdering:(id)arg1;
- (void)setVersionOfFormerFreeTrialWhenUserLastSawWelcomeScreen:(long long)arg1;
- (void)setVersionOfNoThanksWhenUserLastSawWelcomeScreen:(long long)arg1;
- (void)setVersionOfNotNowWhenUserLastSawWelcomeScreen:(long long)arg1;
- (void)setVersionOfOSWhenFormerFreeTrialWelcomeScreenWasShown:(id)arg1;
- (void)setVersionOfOSWhenNoThanksWelcomeScreenWasShown:(id)arg1;
- (void)setVersionOfOSWhenNotNowWelcomeScreenWasShown:(id)arg1;
- (long long)shuffleType;
- (id)tabBarOrdering;
- (long long)versionOfFormerFreeTrialWhenUserLastSawWelcomeScreen;
- (long long)versionOfNoThanksWhenUserLastSawWelcomeScreen;
- (long long)versionOfNotNowWhenUserLastSawWelcomeScreen;
- (id)versionOfOSWhenFormerFreeTrialWelcomeScreenWasShown;
- (id)versionOfOSWhenNoThanksWelcomeScreenWasShown;
- (id)versionOfOSWhenNotNowWelcomeScreenWasShown;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MusicEntityAbstractLockupView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FuseUI.framework/MusicEntityAbstractLockupView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI (1)
 */

@interface MusicEntityAbstractLockupView : UIView <MPUTextDrawingCacheInvalidationObserver, MusicArtworkViewDelegate> {
    bool  _artworkConfigurationBlockEnabled;
    UIImage * _artworkOverrideImage;
    MusicArtworkView * _artworkView;
    UITraitCollection * _cachedTraitCollection;
    MusicEntityViewContentDescriptor * _contentDescriptor;
    bool  _entityDisabled;
    <MusicEntityValueProviding> * _entityValueProvider;
    bool  _hasDirtyPlaybackStatusUpdate;
    bool  _highlighted;
    double  _lastUsedArtworkViewAspectRatio;
    double  _playbackCurrentTimeOriginatingTime;
    NSMutableArray * _recycledTextButtons;
    NSMutableArray * _recycledTextDrawingViews;
    NSMapTable * _textDescriptorsToRecycledTextButtons;
    NSMapTable * _textDescriptorsToTextDrawingViews;
    bool  _usingPlaceholderArt;
    bool  _wasUpdatedForAsynchronousPropertyLoadCompleted;
}

@property (getter=_currentTextLabelAlpha, nonatomic, readonly) double _currentTextLabelAlpha;
@property (getter=_addButton, nonatomic, readonly) UIControl *addButton;
@property (nonatomic, retain) UIImage *artworkOverrideImage;
@property (getter=_artworkView, nonatomic, readonly) UIImageView *artworkView;
@property (getter=_contentDescriptor, setter=_setContentDescriptor:, nonatomic, retain) MusicEntityViewContentDescriptor *contentDescriptor;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isEntityDisabled, nonatomic) bool entityDisabled;
@property (nonatomic, retain) <MusicEntityValueProviding> *entityValueProvider;
@property (readonly) unsigned long long hash;
@property (getter=isHighlighted, nonatomic, readonly) bool highlighted;
@property (readonly) Class superclass;
@property (getter=isUsingPlaceholderArt, nonatomic, readonly) bool usingPlaceholderArt;

+ (double)_maximumTextHeightForTextDescriptors:(id)arg1 traitCollection:(id)arg2;

- (void).cxx_destruct;
- (id)_addButton;
- (id)_artworkView;
- (void)_artworkViewImageDidChange;
- (void)_configureArtworkCatalog:(id)arg1;
- (void)_configureArtworkView:(id)arg1 forContentArtworkDescriptor:(id)arg2 entityValueProvider:(id)arg3;
- (id)_contentDescriptor;
- (void)_contentDescriptorDidChange:(id)arg1;
- (double)_currentTextLabelAlpha;
- (id)_effectiveArtworkBackgroundColor;
- (void)_entityDisabledDidChange;
- (void)_getViewToProposedFrameMap:(id*)arg1 withTextDescriptors:(id)arg2 availableContentBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 exclusionRectangle:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 totalTextHeight:(double*)arg5;
- (void)_handleArtworkImageUpdate:(id)arg1 idealArtworkSize:(struct CGSize { double x1; double x2; })arg2;
- (void)_handleArtworkViewTapped;
- (void)_handleContentDescriptorDidInvalidate:(id)arg1;
- (void)_layoutArtworkViewWithAvailableContentBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 layoutDirection:(long long)arg2 usingBlock:(id /* block */)arg3;
- (id)_newArtworkView;
- (void)_recycleTextViewsForTextDescriptors:(id)arg1;
- (void)_setContentDescriptor:(id)arg1;
- (bool)_shouldArtworkViewRespectHighlightProperty;
- (bool)_shouldEnableArtworkViewUserInteraction;
- (bool)_shouldShowPlayButton;
- (id)_viewForTextDescriptor:(id)arg1;
- (id)artworkOverrideImage;
- (void)dealloc;
- (id)entityValueProvider;
- (bool)isEntityDisabled;
- (bool)isHighlighted;
- (bool)isUsingPlaceholderArt;
- (void)musicArtworkViewDidTouchUpInside:(id)arg1;
- (void)setArtworkOverrideImage:(id)arg1;
- (void)setEntityDisabled:(bool)arg1;
- (void)setEntityValueProvider:(id)arg1;
- (void)setHighlighted:(bool)arg1 animated:(bool)arg2;
- (void)textDrawingCacheWasInvalidated:(id)arg1;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateForAsynchronousPropertyLoadCompleted;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

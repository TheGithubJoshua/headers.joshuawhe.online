<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MusicLibraryPlaylistsOverviewViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FuseUI.framework/MusicLibraryPlaylistsOverviewViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI (1)
 */

@interface MusicLibraryPlaylistsOverviewViewController : UIViewController <MusicActionableHeaderViewDelegate, MusicClientContextConsuming, MusicLibraryBrowseCollectionViewControllerDelegate, MusicNoContentViewDelegate, MusicSwitcherButtonContainerViewDelegate, SKUIProxyScrollViewDelegate, SKUITabBarItemRootViewController, UIViewControllerRestoration> {
    UISwitch * _alertShowOfflineSwitch;
    MusicClientContext * _clientContext;
    NSDictionary * _curatorsByID;
    UIAlertController * _filterAlertController;
    MusicHairlineView * _hairlineView;
    bool  _hasSubscribedPlaylistsCapability;
    MusicSwitcherButtonContainerView * _librarySwitcherButtonContainerView;
    UIViewController * _noContentViewController;
    unsigned long long  _playlistsConfigurationOptions;
    MusicActionableHeaderView * _playlistsHeaderView;
    MusicPlaylistsWithNewActionViewConfiguration * _playlistsViewConfiguration;
    UIViewController * _playlistsViewController;
    SKUIProxyScrollView * _proxyScrollView;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _proxyScrollViewContentInsetAdditions;
    MusicActionableHeaderView * _recentlyAddedPlaylistsHeaderView;
    MusicLibraryBrowseCollectionViewController * _recentlyAddedPlaylistsViewController;
    NSString * _selectedFilter;
    bool  _selectedFilterIsCuratorID;
    MusicPlaylistsWithNewActionViewConfiguration * _selectedPlaylistsViewConfiguration;
    bool  _shouldShowNoContentView;
    MusicLibraryTopBarController * _topBarController;
    MusicVerticalScrollingContainerViewController * _verticalScrollingContainerViewController;
}

@property (nonatomic, retain) SKUIClientContext *clientContext;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)_recentlyAddedViewControllerWithClientContext:(id)arg1;
+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;

- (void).cxx_destruct;
- (void)_alertShowOfflineSwitchValueChangedAction:(id)arg1;
- (double)_calculateHairlineViewHeight;
- (bool)_calculateHasSubscribedPlaylistsCapability;
- (void)_cloudUpdateInProgressDidChangeNotification:(id)arg1;
- (void)_configureForSelectedFilter;
- (void)_configureNoContentView:(id)arg1;
- (void)_delayedDismissFilterAlertController;
- (void)_didUpdateDefaultLibrary:(id)arg1;
- (void)_dismissEditSheet;
- (id)_getCurrentSortedPlaylistsOverviewFilters;
- (void)_handleContentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_handlePlaylistsOverviewFilterAlertControllerDismissal;
- (void)_loadRecentlyAddedPlaylistsHeaderView;
- (void)_loadRecentlyAddedPlaylistsViewController;
- (void)_musicLibraryPlaylistsOverviewViewControllerCommonInitialization;
- (id)_newLibraryPlaylistsViewConfiguration;
- (id)_noContentViewController;
- (void)_playlistsEntityProviderDidInvalidateNotification:(id)arg1;
- (void)_presentCreatePlaylistViewController;
- (void)_recentlyAddedEntityProviderDidInvalidateNotification:(id)arg1;
- (void)_setSelectedFilter:(id)arg1;
- (id)_sortedBasicPlaylistsOverviewFilters;
- (id)_sortedSubscriberPlaylistsOverviewFilters;
- (void)_subscriptionStatusDidChangeNotification:(id)arg1;
- (id)_titleForPlaylistsOverviewFilter:(id)arg1;
- (void)_updateChildViewController;
- (void)_updateCuratorsMapping;
- (void)_updateLibrarySwitcherButtonWithVerticalContainerItemsReload:(bool)arg1;
- (void)_updatePlaylistNoContentViewVisibilityForceReload:(bool)arg1;
- (void)_updatePlaylistsHeaderMetricsAllowingInvalidationOfVerticalScrollingContainerLayout:(bool)arg1;
- (void)_updateRecentlyAddedPlaylistsHeaderMetricsAllowingInvalidationOfVerticalScrollingContainerLayout:(bool)arg1;
- (void)_updateRecentlyAddedViewMoreButton;
- (void)_updateSizeOfLibrarySwitcherButtonContainerView;
- (void)_updateSizeOfPlaylistsHeaderView;
- (void)_updateSizeOfRecentlyAddedPlaylistsHeaderView;
- (void)_updateSizeOfRecentlyAddedPlaylistsView;
- (id)_validFilterForFilter:(id)arg1;
- (void)actionableHeaderViewDidSelectButton:(id)arg1;
- (id)clientContext;
- (void)collectionViewFlowLayoutLayoutMetricsWereUpdatedForLibraryBrowseCollectionViewController:(id)arg1;
- (id)contentScrollView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithTabBarItem:(id)arg1;
- (void)music_handleCreatePlaylistAction;
- (bool)music_handleUserActivityContext:(id)arg1 containerItem:(id)arg2;
- (void)noContentViewDidTapButton:(id)arg1;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)scrollViewDidChangeContentInset:(id)arg1;
- (void)setClientContext:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)switcherButtonWasSelectedInContainerView:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

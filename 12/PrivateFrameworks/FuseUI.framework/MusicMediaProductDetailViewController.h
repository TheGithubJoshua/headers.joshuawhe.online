<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MusicMediaProductDetailViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FuseUI.framework/MusicMediaProductDetailViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI (1)
 */

@interface MusicMediaProductDetailViewController : MusicMediaDetailViewController <MusicClientContextConsuming, MusicJSNativeViewControllerFactory, MusicJSProductNativeViewControllerDelegate, MusicMediaProductHeaderContentViewControllerDelegate, UIViewControllerRestoration> {
    bool  _allowsProductHairline;
    MPArtworkCatalog * _artworkCatalog;
    UIBarButtonItem * _cancelButtonItem;
    MusicClientContext * _clientContext;
    <MusicEntityProviding> * _containerEntityProvider;
    MusicEntityValueContext * _containerEntityValueContext;
    MusicMediaProductDetailHeaderConfiguration * _detailHeaderConfiguration;
    UIImage * _editedContentArtworkImage;
    bool  _editingWasCancelled;
    bool  _forContentCreation;
    bool  _hasDetailTintInformation;
    bool  _hasPresentedExplicitByDefaultAlert;
    bool  _hasReceivedViewWillAppearAtLeastOnce;
    bool  _isObservingClientContextTransferAggregatorDidChangeNotification;
    bool  _isViewFullyVisible;
    MusicMediaDetailHeaderViewController * _mediaDetailHeaderViewController;
    MusicMediaProductHeaderContentViewController * _mediaProductHeaderContentViewController;
    bool  _needsArtworkCatalogUpdate;
    bool  _needsColorAnalysisUpdate;
    bool  _needsEffectiveNavigationItemUpdateForEditingStateChangeUponViewWillAppear;
    NSArray * _nonEditingLeftBarButtonItems;
    NSArray * _nonEditingRightBarButtonItems;
    NSMutableArray * _pendingTintInformationDispatchEvents;
    long long  _presentationSource;
    struct CGSize { 
        double width; 
        double height; 
    }  _previousMaximumHeaderSize;
    UIViewController * _relatedContentViewController;
    <MusicEntityProviding> * _tracklistEntityProvider;
}

@property (nonatomic, readonly) MusicEntityValueContext *_containerEntityValueContext;
@property (nonatomic, retain) MusicClientContext *clientContext;
@property (nonatomic, readonly) <MusicEntityProviding> *containerEntityProvider;
@property (nonatomic, readonly) UIScrollView *containerScrollView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIImage *editedContentArtworkImage;
@property (getter=isForContentCreation, nonatomic, readonly) bool forContentCreation;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MusicMediaProductHeaderContentViewController *headerContentViewController;
@property (nonatomic, retain) MusicMediaDetailHeaderViewController *headerViewController;
@property (nonatomic, readonly) long long presentationSource;
@property (nonatomic, readonly) MusicMediaProductSplitDetailViewController *splitDetailViewController;
@property (nonatomic, retain) MusicMediaProductSplitMainViewController *splitMainViewController;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <MusicEntityProviding> *tracklistEntityProvider;

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;

- (void).cxx_destruct;
- (bool)_calculateHeaderContentViewControllerEditing;
- (void)_cancelEditing;
- (void)_commitEditing;
- (id)_containerEntityValueContext;
- (id)_containerMetadataContextWithContainerJSDictionary:(id)arg1 tracklistItemJSDictionaries:(id)arg2;
- (void)_dispatchNativeViewEventOfType:(long long)arg1 withExtraInfo:(id)arg2 forViewController:(id)arg3 completion:(id /* block */)arg4;
- (bool)_editingWasCancelled;
- (id)_effectiveNavigationItem;
- (void)_handleCancelButtonTapped:(id)arg1;
- (void)_handleContainerEntityProviderDidInvalidateNotification:(id)arg1;
- (id)_loadDetailHeaderConfiguration;
- (id)_loadProductHeaderContentViewController;
- (id)_loadProductSplitDetailViewController;
- (id)_loadProductSplitMainViewController;
- (id)_mediaDetailHeaderViewController;
- (id)_mediaProductHeaderContentViewController;
- (void)_presentExplicitByDefaultAlertIfNeeded;
- (long long)_productDescriptionTextStyle;
- (void)_reloadContainerEntityValueContextProperties;
- (void)_sendPendingTintInformationDispatchEvents;
- (void)_setNeedsDetailHeaderConfigurationUpdate;
- (bool)_shouldAutomaticallyPopForMissingContainerEntityValueProvider;
- (void)_unregisterForClientContextTransferAggregatorDidChangeNotification;
- (void)_updateAllowsProductHairline;
- (void)_updateColorAnalysisIfNeededWithShouldTemporarilyWait:(bool)arg1;
- (void)_updateDetailHeaderConfiguration;
- (void)_updateEffectiveNavigationItemForEditingStateChangeAnimated:(bool)arg1;
- (void)_updateRelatedContentViewControllerPlacement;
- (bool)allowsHairline;
- (bool)allowsShowingSplitDetailViewController;
- (id)clientContext;
- (id)containerEntityProvider;
- (id)containerScrollView;
- (void)dealloc;
- (void)detailTintInformationDidChange;
- (id)editedContentArtworkImage;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (id)initWithContainerEntityProvider:(id)arg1 tracklistEntityProvider:(id)arg2 clientContext:(id)arg3 existingJSProductNativeViewController:(id)arg4;
- (id)initWithContainerEntityProvider:(id)arg1 tracklistEntityProvider:(id)arg2 clientContext:(id)arg3 existingJSProductNativeViewController:(id)arg4 forContentCreation:(bool)arg5;
- (bool)isForContentCreation;
- (void)jsProductNativeViewController:(id)arg1 presentShareDocument:(id)arg2 options:(id)arg3;
- (void)jsProductNativeViewController:(id)arg1 setProductEntityValueProviderData:(id)arg2;
- (void)jsProductNativeViewController:(id)arg1 setProminentTrackStoreID:(long long)arg2;
- (void)jsProductNativeViewController:(id)arg1 setRelatedContentDocument:(id)arg2 options:(id)arg3;
- (void)jsProductNativeViewController:(id)arg1 setReportingInformation:(id)arg2;
- (void)jsProductNativeViewController:(id)arg1 setTracklistItems:(id)arg2;
- (id)loadJSNativeViewControllerWithAppContext:(id)arg1;
- (void)mediaProductHeaderContentViewController:(id)arg1 didSelectShareButton:(id)arg2;
- (void)mediaProductHeaderContentViewControllerDidTapEdit:(id)arg1;
- (void)mediaProductHeaderContentViewControllerDidUpdateEditableText:(id)arg1;
- (bool)music_handleUserActivityContext:(id)arg1 containerItem:(id)arg2;
- (long long)presentationSource;
- (id)previewMenuItems;
- (void)setClientContext:(id)arg1;
- (void)setEditedContentArtworkImage:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)showingSplitDetailViewControllerDidChange;
- (id)tracklistEntityProvider;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateWithHeaderHeight:(double)arg1 maximumHeaderHeight:(double)arg2 headerVerticalOffset:(double)arg3 transitionProgress:(double)arg4;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

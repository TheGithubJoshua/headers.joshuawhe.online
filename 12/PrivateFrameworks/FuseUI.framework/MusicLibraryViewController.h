<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MusicLibraryViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FuseUI.framework/MusicLibraryViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI (1)
 */

@interface MusicLibraryViewController : UIViewController <MusicActionableHeaderViewDelegate, MusicClientContextConsuming, MusicLibraryBrowseCollectionViewControllerDelegate, MusicSplitInitialStateProviding, MusicVerticalScrollingContainerViewControllerDelegate, SKUIIndexBarControlDataSource, SKUIIndexBarControlDelegate, SKUIProxyScrollViewDelegate, SKUITabBarItemRootViewController, UIViewControllerRestoration> {
    MusicLibraryArtistsViewConfiguration * _artistsViewConfiguration;
    MusicClientContext * _clientContext;
    NSMutableArray * _entityProviderNotificationObservers;
    MusicHairlineView * _hairlineView;
    bool  _hasIndexBarEntries;
    SKUIIndexBarControl * _indexBarControl;
    long long  _indexBarControlVisibleTransactionCount;
    MusicVerticalScrollingContainerItem * _indexBarMinimumVerticalScrollingContainerItem;
    <MusicIndexBarDataSource><MusicIndexBarScrollDelegate> * _indexBarSupportDataSource;
    double  _indexBarTrailingLayoutInsetAddition;
    bool  _isContainedWithinSplitViewPrimary;
    bool  _isIndexBarTracking;
    bool  _isIndexBarVisible;
    UIViewController * _libraryBrowseViewController;
    bool  _needsIndexBarVisibilityUpdate;
    SKUIProxyScrollView * _proxyScrollView;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _proxyScrollViewContentInsetAdditions;
    MusicActionableHeaderView * _recentlyAddedHeaderView;
    MusicLibraryBrowseCollectionViewController * _recentlyAddedViewController;
    MusicLibraryViewConfiguration * _selectedViewConfiguration;
    bool  _shouldAnimatePendingIndexBarVisibilityUpdate;
    MusicSwitcherButtonContainerView * _switcherButtonContainerView;
    MusicVerticalScrollingContainerViewController * _verticalScrollingContainerViewController;
    NSArray * _viewConfigurations;
}

@property (nonatomic, retain) SKUIClientContext *clientContext;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasPopulatedViewConfiguration;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSArray *populatedViewConfigurations;
@property (nonatomic, readonly, copy) NSString *preferredSelectedViewIdentifier;
@property (nonatomic, readonly) MusicLibraryViewConfiguration *selectedViewConfiguration;
@property (nonatomic, readonly) UIViewController *selectedViewConfigurationViewController;
@property (readonly) Class superclass;
@property (nonatomic, retain) MusicSwitcherButtonContainerView *switcherButtonContainerView;

+ (id)_recentlyAddedViewControllerWithClientContext:(id)arg1;
+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;

- (void).cxx_destruct;
- (id)_calculateIndexBarBackgroundColor;
- (double)_calculateIndexBarControlWidth;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_calculateLayoutInsets;
- (void)_handleContentSizeCategoryDidChangeNotification:(id)arg1;
- (bool)_hasContentForViewConfiguration:(id)arg1;
- (void)_indexBarControlTouchAction:(id)arg1;
- (id)_indexBarControllingScrollView;
- (void)_indexBarDataSourceDidInvalidateNotification:(id)arg1;
- (void)_musicLibraryViewControllerCommonInitialization;
- (void)_recentlyAddedEntityProviderDidInvalidateNotification:(id)arg1;
- (void)_registerEntityProviderChangeNotifications;
- (void)_registerForNotificationsForIndexBarSupportDataSource:(id)arg1;
- (void)_reloadIndexBarControlAnimated:(bool)arg1;
- (void)_reloadLibraryBrowseViewController;
- (void)_switchToViewWithConfiguration:(id)arg1;
- (void)_unregisterEntityProviderChangeNotifications;
- (void)_unregisterForNotificationsForIndexBarSupportDataSource:(id)arg1;
- (void)_updateHairlineViewSize;
- (void)_updateIndexBarLayoutInsetsForVisibleIndexBarControl:(bool)arg1;
- (void)_updateIndexBarSupportDataSource;
- (void)_updateIndexBarVisibilityAnimated:(bool)arg1;
- (void)_updateRecentlyAddedHeaderMetricsAllowingInvalidationOfVerticalScrollingContainerLayout:(bool)arg1;
- (void)_updateRecentlyAddedHeaderViewSize;
- (void)_updateRecentlyAddedViewMoreButton;
- (void)_updateRecentlyAddedViewSize;
- (void)_updateSwitcherButtonContainerViewSize;
- (void)_updateVerticalScrollingContainerItems;
- (void)_updateViewLayoutInsets;
- (id)_verticalScrollingContainerViewController;
- (id)_viewConfigurations;
- (void)actionableHeaderViewDidSelectButton:(id)arg1;
- (id)clientContext;
- (void)collectionViewFlowLayoutLayoutMetricsWereUpdatedForLibraryBrowseCollectionViewController:(id)arg1;
- (id)contentScrollView;
- (void)dealloc;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (bool)hasPopulatedViewConfiguration;
- (void)indexBarControl:(id)arg1 didSelectEntryAtIndexPath:(id)arg2;
- (id)indexBarControl:(id)arg1 entryAtIndexPath:(id)arg2;
- (long long)indexBarControl:(id)arg1 numberOfEntriesInSection:(long long)arg2;
- (void)indexBarControlDidSelectBeyondBottom:(id)arg1;
- (void)indexBarControlDidSelectBeyondTop:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithTabBarItem:(id)arg1;
- (bool)music_handleUserActivityContext:(id)arg1 containerItem:(id)arg2;
- (void)music_viewInheritedLayoutInsetsDidChange;
- (id)populatedIdentifierForUserActivityContainerItemType:(long long)arg1;
- (id)populatedViewConfigurations;
- (id)preferredSelectedViewIdentifier;
- (void)pushMoreRecentlyAddedView;
- (void)scrollViewDidChangeContentInset:(id)arg1;
- (id)selectViewConfigurationWithIdentifier:(id)arg1;
- (id)selectedViewConfiguration;
- (id)selectedViewConfigurationViewController;
- (void)setClientContext:(id)arg1;
- (void)setSwitcherButtonContainerView:(id)arg1;
- (void)showInitialStateForSplitViewController;
- (unsigned long long)supportedInterfaceOrientations;
- (id)switcherButtonContainerView;
- (void)traitCollectionDidChange:(id)arg1;
- (void)verticalScrollingContainerViewControllerDidLayoutSubviews:(id)arg1;
- (void)verticalScrollingContainerViewControllerDidScroll:(id)arg1;
- (id)viewConfigurationForIdentifier:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

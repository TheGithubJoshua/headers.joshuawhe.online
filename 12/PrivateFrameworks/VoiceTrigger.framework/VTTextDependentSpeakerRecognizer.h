<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VTTextDependentSpeakerRecognizer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceTrigger.framework/VTTextDependentSpeakerRecognizer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceTrigger.framework/VoiceTrigger (1)
 */

@interface VTTextDependentSpeakerRecognizer : NSObject <EARPSRAudioProcessorDelegate> {
    NSString * _assetHash;
    <VTTextDependentSpeakerRecognizerDelegate> * _delegate;
    bool  _isTdPsrAbleToProcess;
    float  _lastRequestSatScore;
    void * _novDetect;
    unsigned long long  _numSamplesProecssed;
    NSMutableData * _psrAudioDataForLogging;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _resourcePath;
    NSString * _satDirectory;
    NSData * _speakerVector;
    EARPSRAudioProcessor * _speakerVectorGenerator;
    NSObject<OS_dispatch_queue> * _stateSerialQueue;
    NSString * _tdSATModelDirPath;
    NSString * _tdSATModelFilePath;
}

@property (nonatomic, retain) NSString *assetHash;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VTTextDependentSpeakerRecognizerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long getSATVectorCount;
@property (readonly) unsigned long long hash;
@property (nonatomic) float lastRequestSatScore;
@property (nonatomic) unsigned long long numSamplesProecssed;
@property (nonatomic, retain) NSMutableData *psrAudioDataForLogging;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSString *resourcePath;
@property (nonatomic, retain) NSString *satDirectory;
@property (nonatomic, retain) NSData *speakerVector;
@property (nonatomic, retain) EARPSRAudioProcessor *speakerVectorGenerator;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *stateSerialQueue;
@property (readonly) Class superclass;
@property (nonatomic) bool tdPsrCanProcessRequest;
@property (nonatomic, retain) NSString *tdSATModelDirPath;
@property (nonatomic, retain) NSString *tdSATModelFilePath;

+ (void)_createDirectoryIfDoesNotExist:(id)arg1;
+ (id)errorWithCode:(long long)arg1 message:(id)arg2;
+ (bool)psrTdAssetExistsAtResourcePath:(id)arg1;

- (void).cxx_destruct;
- (double)_getFloatValueForNDAPIConfigOption:(id)arg1 defaultValue:(double)arg2;
- (int)_getSATVectorCount;
- (id)_getValueForNDAPIConfigOption:(id)arg1;
- (id)assetHash;
- (void)dealloc;
- (id)delegate;
- (void)deleteExistingSATModel;
- (void)deleteVectorAtIndex:(int)arg1;
- (void)endAudio;
- (double)getCombinationWeight;
- (long long)getSATVectorCount;
- (double)getThresholdSAT;
- (id)initWithResourcePath:(id)arg1 satDirectory:(id)arg2 assetHash:(id)arg3 shouldCreateModelDir:(bool)arg4 delegate:(id)arg5;
- (float)lastRequestSatScore;
- (void)logWithAudioFilepath:(id)arg1;
- (unsigned long long)numSamplesProecssed;
- (void)processAudio:(const short*)arg1 numSamples:(unsigned long long)arg2;
- (id)psrAudioDataForLogging;
- (void)psrAudioProcessor:(id)arg1 hasResult:(id)arg2 numElements:(unsigned long long)arg3;
- (id)queue;
- (void)resetForNewRequest;
- (id)resourcePath;
- (id)satDirectory;
- (void)setAssetHash:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLastRequestSatScore:(float)arg1;
- (void)setNumSamplesProecssed:(unsigned long long)arg1;
- (void)setPsrAudioDataForLogging:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setResourcePath:(id)arg1;
- (void)setSatDirectory:(id)arg1;
- (void)setSpeakerVector:(id)arg1;
- (void)setSpeakerVectorGenerator:(id)arg1;
- (void)setStateSerialQueue:(id)arg1;
- (void)setTdPsrCanProcessRequest:(bool)arg1;
- (void)setTdSATModelDirPath:(id)arg1;
- (void)setTdSATModelFilePath:(id)arg1;
- (id)speakerVector;
- (id)speakerVectorGenerator;
- (id)stateSerialQueue;
- (bool)tdPsrCanProcessRequest;
- (id)tdSATModelDirPath;
- (id)tdSATModelFilePath;
- (void)updateSAT;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

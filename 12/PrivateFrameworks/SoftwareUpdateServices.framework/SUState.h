<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SUState.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SoftwareUpdateServices.framework/SUState.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices (1)
 */

@interface SUState : NSObject <NSKeyedUnarchiverDelegate> {
    bool  _autodownloadNeedsOneTimeRetry;
    SUDescriptor * _currentDescriptor;
    SUDescriptor * _failedPatchDescriptor;
    SUInstallPolicy * _installPolicy;
    NSString * _lastAssetAudience;
    _SUAutoInstallOperationModel * _lastAutoInstallOperationModel;
    NSString * _lastDeletedSUAssetID;
    SUDownload * _lastDownload;
    NSString * _lastProductBuild;
    NSString * _lastProductType;
    NSString * _lastProductVersion;
    NSString * _lastReleaseType;
    SUDescriptor * _lastScannedDescriptor;
    NSDate * _lastScannedDescriptorTime;
    NSDictionary * _mandatoryUpdateDict;
    bool  _manifestSubmitted;
    SUManagedDeviceUpdateDelay * _mdmDelay;
    NSDate * _scheduledAutodownloadPolicyChangeTime;
    NSDate * _scheduledAutodownloadWifiPeriodEndTime;
    NSDate * _scheduledManualDownloadWifiPeriodEndTime;
    NSString * _sessionID;
    bool  _stashbagPersisted;
    NSDictionary * _unlockCallbacks;
}

@property (nonatomic) bool autodownloadNeedsOneTimeRetry;
@property (nonatomic, copy) SUDescriptor *currentDescriptor;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) SUDescriptor *failedPatchDescriptor;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SUInstallPolicy *installPolicy;
@property (nonatomic, retain) NSString *lastAssetAudience;
@property (nonatomic, retain) _SUAutoInstallOperationModel *lastAutoInstallOperationModel;
@property (nonatomic, retain) NSString *lastDeletedSUAssetID;
@property (nonatomic, copy) SUDownload *lastDownload;
@property (nonatomic, retain) NSString *lastProductBuild;
@property (nonatomic, retain) NSString *lastProductType;
@property (nonatomic, retain) NSString *lastProductVersion;
@property (nonatomic, retain) NSString *lastReleaseType;
@property (nonatomic, copy) SUDescriptor *lastScannedDescriptor;
@property (nonatomic, retain) NSDate *lastScannedDescriptorTime;
@property (nonatomic, retain) NSDictionary *mandatoryUpdateDict;
@property (nonatomic) bool manifestSubmitted;
@property (nonatomic, retain) SUManagedDeviceUpdateDelay *mdmDelay;
@property (nonatomic, retain) NSDate *scheduledAutodownloadPolicyChangeTime;
@property (nonatomic, retain) NSDate *scheduledAutodownloadWifiPeriodEndTime;
@property (nonatomic, retain) NSDate *scheduledManualDownloadWifiPeriodEndTime;
@property (nonatomic, retain) NSString *sessionID;
@property (nonatomic) bool stashbagPersisted;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSDictionary *unlockCallbacks;

+ (id)currentState;
+ (id)statePath;

- (id)_stateAsDictionary;
- (bool)autodownloadNeedsOneTimeRetry;
- (id)currentDescriptor;
- (void)dealloc;
- (id)description;
- (id)failedPatchDescriptor;
- (id)init;
- (id)installPolicy;
- (id)lastAssetAudience;
- (id)lastAutoInstallOperationModel;
- (id)lastDeletedSUAssetID;
- (id)lastDownload;
- (id)lastProductBuild;
- (id)lastProductType;
- (id)lastProductVersion;
- (id)lastReleaseType;
- (id)lastScannedDescriptor;
- (id)lastScannedDescriptorTime;
- (void)load;
- (id)mandatoryUpdateDict;
- (bool)manifestSubmitted;
- (id)mdmDelay;
- (void)resetAllHistory;
- (void)resetDownloadAndScanHistory;
- (void)save;
- (id)scheduledAutodownloadPolicyChangeTime;
- (id)scheduledAutodownloadWifiPeriodEndTime;
- (id)scheduledManualDownloadWifiPeriodEndTime;
- (id)sessionID;
- (void)setAutodownloadNeedsOneTimeRetry:(bool)arg1;
- (void)setCurrentDescriptor:(id)arg1;
- (void)setFailedPatchDescriptor:(id)arg1;
- (void)setInstallPolicy:(id)arg1;
- (void)setLastAssetAudience:(id)arg1;
- (void)setLastAutoInstallOperationModel:(id)arg1;
- (void)setLastDeletedSUAssetID:(id)arg1;
- (void)setLastDownload:(id)arg1;
- (void)setLastProductBuild:(id)arg1;
- (void)setLastProductType:(id)arg1;
- (void)setLastProductVersion:(id)arg1;
- (void)setLastReleaseType:(id)arg1;
- (void)setLastScannedDescriptor:(id)arg1;
- (void)setLastScannedDescriptorTime:(id)arg1;
- (void)setMandatoryUpdateDict:(id)arg1;
- (void)setManifestSubmitted:(bool)arg1;
- (void)setMdmDelay:(id)arg1;
- (void)setScheduledAutodownloadPolicyChangeTime:(id)arg1;
- (void)setScheduledAutodownloadWifiPeriodEndTime:(id)arg1;
- (void)setScheduledManualDownloadWifiPeriodEndTime:(id)arg1;
- (void)setSessionID:(id)arg1;
- (void)setStashbagPersisted:(bool)arg1;
- (void)setUnlockCallbacks:(id)arg1;
- (bool)stashbagPersisted;
- (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;
- (id)unlockCallbacks;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BasicAccount.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AccountSettings.framework/BasicAccount.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AccountSettings.framework/AccountSettings (1.0)
 */

@interface BasicAccount : NSObject <AccountFullAccountProtocol> {
    <AccountFullAccountProtocol> * _fullAccount;
    NSDictionary * _originalProperties;
    BasicAccount * _parentAccount;
    NSMutableDictionary * _properties;
    <AccountRefreshProtocol> * _syncAccount;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDictionary *originalProperties;
@property (readonly) Class superclass;

+ (id)_accountCreationMap;
+ (id)_creatorsInfo;
+ (id)_dataclassesProperties;
+ (bool)_isValidAccountType:(id)arg1;
+ (id)accountWithProperties:(id)arg1;
+ (id)accountWithType:(id)arg1 class:(id)arg2;
+ (id)allSupportedDataclasses;
+ (id)createNewAccountUID;
+ (id)deleteAccountActionsForAccountType:(id)arg1;
+ (bool)displayToggleForDataclass:(id)arg1;
+ (void)initialize;
+ (bool)isMultitaskingEnabled;
+ (bool)multipleStoresSupportedByDataclass:(id)arg1;
+ (id)removeActionsIncompatibleWithSingleStoreDataclass:(id)arg1;
+ (bool)showRemindersSeparatelyForAccountType:(id)arg1;
+ (id)supportedDataclassesForAccountType:(id)arg1;
+ (id)userActionsToDisableDataclass:(id)arg1 forAccountType:(id)arg2;
+ (id)userActionsToEnableDataclass:(id)arg1 forAccountType:(id)arg2;
+ (bool)userConfirmationIsRequiredByDataclass:(id)arg1;

- (id)_cachedSyncAccount;
- (id)_creatorClassNameForAccountType:(id)arg1 creatorType:(id)arg2 loader:(id)arg3;
- (void)_forcedSetAccountProperty:(id)arg1 forKey:(id)arg2;
- (void)_forcedSetEnabled:(bool)arg1 forDataclass:(id)arg2;
- (id)_initWithType:(id)arg1 class:(id)arg2;
- (id)_orderedDataclasses:(id)arg1;
- (id)_profileRestrictedDataclasses;
- (id)accountClass;
- (id)accountPropertyForKey:(id)arg1;
- (void)dealloc;
- (id)displayName;
- (id)enabledDataclasses;
- (id)fullAccountCreatorClassNameForAccountType:(id)arg1 loader:(id)arg2;
- (id)fullAccountUsingLoader:(id)arg1;
- (id)identifier;
- (id)init;
- (id)initWithProperties:(id)arg1;
- (bool)isEnabledForDataclass:(id)arg1;
- (id)originalProperties;
- (id)parentAccount;
- (id)parentAccountIdentifier;
- (id)properties;
- (id)propertiesToSave;
- (id)provisionedDataclasses;
- (bool)refreshContainerListForDataclass:(id)arg1;
- (bool)refreshContainerListForDataclass:(id)arg1 isUserRequested:(bool)arg2;
- (bool)refreshContainerWithIdentifier:(id)arg1 forDataclass:(id)arg2;
- (bool)refreshContainerWithIdentifier:(id)arg1 forDataclass:(id)arg2 isUserRequested:(bool)arg3;
- (bool)refreshContainersForDataclass:(id)arg1;
- (bool)refreshContainersForDataclass:(id)arg1 isUserRequested:(bool)arg2;
- (void)removeAccountPropertyForKey:(id)arg1;
- (void)renewAccountCredentialsWithHandler:(id /* block */)arg1;
- (void)setAccountClass:(id)arg1;
- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;
- (void)setDisplayName:(id)arg1;
- (void)setEnabled:(bool)arg1 forDataclass:(id)arg2;
- (void)setEnabledForDataclasses:(id)arg1;
- (void)setFullAccount:(id)arg1;
- (void)setOriginalProperties:(id)arg1;
- (void)setParentAccount:(id)arg1;
- (id)shortTypeString;
- (id)supportedDataclasses;
- (id)syncAccountCreatorClassNameForAccountType:(id)arg1;
- (id)syncStoreIdentifier;
- (id)type;
- (id)typeString;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

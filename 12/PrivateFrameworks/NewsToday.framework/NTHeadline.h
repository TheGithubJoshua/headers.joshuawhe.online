<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTHeadline.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsToday.framework/NTHeadline.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsToday.framework/NewsToday (2166)
 */

@interface NTHeadline : NSObject <NTHeadlineProviding> {
    NSURL * _NewsURL;
    NTPBHeadlineAdElement * _adElement;
    NSDate * _ageDisplayDate;
    NTPBHeadlineAnalyticsElement * _analyticsElement;
    NTPBHeadlineBackingElement * _backingElement;
    bool  _boundToContext;
    NSString * _compactSourceName;
    NSURL * _compactSourceNameImageRemoteURL;
    bool  _displaysWithLeadingCellAppearance;
    NSURL * _flintDocumentURL;
    bool  _hiddenFromAutoFavorites;
    bool  _hiddenFromFeeds;
    NSString * _identifier;
    NSString * _language;
    bool  _needsSeenStateTracking;
    NTHeadlinePersonalizationMetadata * _personalizationMetadata;
    SFSearchResult * _searchResult;
    NSString * _shortExcerpt;
    NSString * _sourceName;
    NSURL * _sourceNameImageRemoteURL;
    double  _sourceNameImageScale;
    NSString * _sourceTagID;
    NSString * _storyType;
    bool  _supportsSavingForLater;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _thumbnailFocalFrame;
    NSURL * _thumbnailRemoteURL;
    unsigned long long  _thumbnailSizePreset;
    NSString * _title;
    NSString * _titleCompact;
    NSArray * _topicIDs;
    NSString * _videoCallToActionTitle;
    NSURL * _videoCallToActionURL;
    double  _videoDuration;
    NSURL * _videoURL;
    NSURL * _webURL;
}

@property (nonatomic, copy) NSURL *NewsURL;
@property (nonatomic, copy) NTPBHeadlineAdElement *adElement;
@property (nonatomic, copy) NSDate *ageDisplayDate;
@property (nonatomic, copy) NTPBHeadlineAnalyticsElement *analyticsElement;
@property (nonatomic, copy) NTPBHeadlineBackingElement *backingElement;
@property (getter=isBoundToContext, nonatomic) bool boundToContext;
@property (nonatomic, copy) NSString *compactSourceName;
@property (nonatomic, copy) NSURL *compactSourceNameImageRemoteURL;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool displaysWithLeadingCellAppearance;
@property (nonatomic, copy) NSURL *flintDocumentURL;
@property (readonly) unsigned long long hash;
@property (getter=isHiddenFromAutoFavorites, nonatomic) bool hiddenFromAutoFavorites;
@property (getter=isHiddenFromFeeds, nonatomic) bool hiddenFromFeeds;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, readonly) unsigned long long itemType;
@property (nonatomic, copy) NSString *language;
@property (nonatomic) bool needsSeenStateTracking;
@property (nonatomic, copy) NTHeadlinePersonalizationMetadata *personalizationMetadata;
@property (nonatomic, copy) SFSearchResult *searchResult;
@property (nonatomic, copy) NSString *shortExcerpt;
@property (nonatomic, copy) NSString *sourceName;
@property (nonatomic, copy) NSURL *sourceNameImageRemoteURL;
@property (nonatomic) double sourceNameImageScale;
@property (nonatomic, copy) NSString *sourceTagID;
@property (nonatomic, copy) NSString *storyType;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsSavingForLater;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } thumbnailFocalFrame;
@property (nonatomic, copy) NSURL *thumbnailRemoteURL;
@property (nonatomic) unsigned long long thumbnailSizePreset;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, copy) NSString *titleCompact;
@property (nonatomic, copy) NSArray *topicIDs;
@property (nonatomic, copy) NSString *videoCallToActionTitle;
@property (nonatomic, copy) NSURL *videoCallToActionURL;
@property (nonatomic) double videoDuration;
@property (nonatomic, copy) NSURL *videoURL;
@property (nonatomic, copy) NSURL *webURL;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)NewsURL;
- (id)adElement;
- (id)ageDisplayDate;
- (id)analyticsElement;
- (id)backingElement;
- (id)compactSourceName;
- (id)compactSourceNameImageRemoteURL;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (bool)displaysWithLeadingCellAppearance;
- (void)encodeWithCoder:(id)arg1;
- (id)flintDocumentURL;
- (unsigned long long)hash;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (bool)isBoundToContext;
- (bool)isEqual:(id)arg1;
- (bool)isHiddenFromAutoFavorites;
- (bool)isHiddenFromFeeds;
- (unsigned long long)itemType;
- (id)language;
- (bool)needsSeenStateTracking;
- (id)personalizationMetadata;
- (id)searchResult;
- (void)setAdElement:(id)arg1;
- (void)setAgeDisplayDate:(id)arg1;
- (void)setAnalyticsElement:(id)arg1;
- (void)setBackingElement:(id)arg1;
- (void)setBoundToContext:(bool)arg1;
- (void)setCompactSourceName:(id)arg1;
- (void)setCompactSourceNameImageRemoteURL:(id)arg1;
- (void)setDisplaysWithLeadingCellAppearance:(bool)arg1;
- (void)setFlintDocumentURL:(id)arg1;
- (void)setHiddenFromAutoFavorites:(bool)arg1;
- (void)setHiddenFromFeeds:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setLanguage:(id)arg1;
- (void)setNeedsSeenStateTracking:(bool)arg1;
- (void)setNewsURL:(id)arg1;
- (void)setPersonalizationMetadata:(id)arg1;
- (void)setSearchResult:(id)arg1;
- (void)setShortExcerpt:(id)arg1;
- (void)setSourceName:(id)arg1;
- (void)setSourceNameImageRemoteURL:(id)arg1;
- (void)setSourceNameImageScale:(double)arg1;
- (void)setSourceTagID:(id)arg1;
- (void)setStoryType:(id)arg1;
- (void)setSupportsSavingForLater:(bool)arg1;
- (void)setThumbnailFocalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setThumbnailRemoteURL:(id)arg1;
- (void)setThumbnailSizePreset:(unsigned long long)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleCompact:(id)arg1;
- (void)setTopicIDs:(id)arg1;
- (void)setVideoCallToActionTitle:(id)arg1;
- (void)setVideoCallToActionURL:(id)arg1;
- (void)setVideoDuration:(double)arg1;
- (void)setVideoURL:(id)arg1;
- (void)setWebURL:(id)arg1;
- (id)shortExcerpt;
- (id)sourceName;
- (id)sourceNameImageRemoteURL;
- (double)sourceNameImageScale;
- (id)sourceTagID;
- (id)storyType;
- (bool)supportsSavingForLater;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })thumbnailFocalFrame;
- (id)thumbnailRemoteURL;
- (unsigned long long)thumbnailSizePreset;
- (id)title;
- (id)titleCompact;
- (id)topicIDs;
- (id)videoCallToActionTitle;
- (id)videoCallToActionURL;
- (double)videoDuration;
- (id)videoURL;
- (id)webURL;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

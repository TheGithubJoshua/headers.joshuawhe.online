<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RPDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Rapport.framework/RPDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Rapport.framework/Rapport (174.26)
 */

@interface RPDevice : NSObject <NSSecureCoding> {
    NSString * _accountID;
    int  _activityLevel;
    NSData * _authTag;
    NSData * _bleAdvertisementData;
    NSData * _bleDeviceAddress;
    unsigned int  _blePairState;
    NSString * _contactID;
    unsigned char  _deviceActionType;
    unsigned int  _flags;
    NSString * _identifier;
    NSUUID * _identifierUUID;
    NSString * _idsDeviceIdentifier;
    CUMobileDevice * _mobileDevice;
    NSString * _model;
    NSString * _name;
    bool  _needsSetup;
    CUPairedPeer * _pairedPeer;
    NSUUID * _pairingIdentifier;
    int  _proximity;
    int  _rawRSSI;
    CURangingMeasurement * _relativeLocation;
    int  _smoothedRSSI;
    unsigned int  _systemPairState;
    NSData * _txtData;
    NSDictionary * _txtDictionary;
    NSString * _udid;
    NSData * _wifiAddress;
    NSData * _wifiBSSID;
    NSData * _wifiDeviceIEDeviceID;
    unsigned int  _wifiDeviceIEFlags;
    NSData * _wifiDeviceIEName;
    NSData * _wifiIEData;
    id  _wifiPlatformObject;
    NSString * _wifiSSID;
}

@property (nonatomic, readonly, copy) NSString *accountID;
@property (nonatomic, readonly) int activityLevel;
@property (nonatomic, readonly, copy) NSData *authTag;
@property (nonatomic, readonly, copy) NSData *bleAdvertisementData;
@property (nonatomic, readonly, copy) NSData *bleDeviceAddress;
@property (nonatomic, readonly) unsigned int blePairState;
@property (nonatomic, readonly, copy) NSString *contactID;
@property (nonatomic, readonly) unsigned char deviceActionType;
@property (nonatomic, readonly) unsigned int flags;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSUUID *identifierUUID;
@property (nonatomic, readonly, copy) NSString *idsDeviceIdentifier;
@property (nonatomic, retain) CUMobileDevice *mobileDevice;
@property (nonatomic, readonly, copy) NSString *model;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, readonly) bool needsSetup;
@property (nonatomic, retain) CUPairedPeer *pairedPeer;
@property (nonatomic, copy) NSUUID *pairingIdentifier;
@property (nonatomic, readonly) int proximity;
@property (nonatomic, readonly) int rawRSSI;
@property (retain) CURangingMeasurement *relativeLocation;
@property (nonatomic, readonly) int smoothedRSSI;
@property (nonatomic) unsigned int systemPairState;
@property (nonatomic, readonly, copy) NSData *txtData;
@property (nonatomic, readonly, copy) NSDictionary *txtDictionary;
@property (nonatomic, copy) NSString *udid;
@property (nonatomic, copy) NSData *wifiAddress;
@property (nonatomic, copy) NSData *wifiBSSID;
@property (nonatomic, copy) NSData *wifiDeviceIEDeviceID;
@property (nonatomic, readonly) unsigned int wifiDeviceIEFlags;
@property (nonatomic, copy) NSData *wifiDeviceIEName;
@property (nonatomic, copy) NSData *wifiIEData;
@property (nonatomic, retain) id wifiPlatformObject;
@property (nonatomic, copy) NSString *wifiSSID;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_updateTXTDictionary:(id)arg1;
- (id)accountID;
- (int)activityLevel;
- (id)authTag;
- (id)bleAdvertisementData;
- (id)bleDeviceAddress;
- (unsigned int)blePairState;
- (id)contactID;
- (id)description;
- (id)descriptionWithLevel:(int)arg1;
- (unsigned char)deviceActionType;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)flags;
- (id)identifier;
- (id)identifierUUID;
- (id)idsDeviceIdentifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)mobileDevice;
- (id)model;
- (id)name;
- (bool)needsSetup;
- (id)pairedPeer;
- (id)pairingIdentifier;
- (int)proximity;
- (int)rawRSSI;
- (id)relativeLocation;
- (void)setIdentifier:(id)arg1;
- (void)setIdentifierUUID:(id)arg1;
- (void)setMobileDevice:(id)arg1;
- (void)setName:(id)arg1;
- (void)setPairedPeer:(id)arg1;
- (void)setPairingIdentifier:(id)arg1;
- (void)setRelativeLocation:(id)arg1;
- (void)setSystemPairState:(unsigned int)arg1;
- (void)setUdid:(id)arg1;
- (void)setWifiAddress:(id)arg1;
- (void)setWifiBSSID:(id)arg1;
- (void)setWifiDeviceIEDeviceID:(id)arg1;
- (void)setWifiDeviceIEName:(id)arg1;
- (void)setWifiIEData:(id)arg1;
- (void)setWifiPlatformObject:(id)arg1;
- (void)setWifiSSID:(id)arg1;
- (int)smoothedRSSI;
- (unsigned int)systemPairState;
- (id)txtData;
- (id)txtDictionary;
- (id)udid;
- (unsigned int)updateWithBonjourDevice:(id)arg1;
- (unsigned int)updateWithMobileDevice:(id)arg1;
- (unsigned int)updateWithSFDevice:(id)arg1 changes:(unsigned int)arg2;
- (void)updateWithSystemInfo:(id)arg1;
- (void)updateWithWiFiDevice:(id)arg1 changes:(unsigned int)arg2;
- (id)wifiAddress;
- (id)wifiBSSID;
- (id)wifiDeviceIEDeviceID;
- (unsigned int)wifiDeviceIEFlags;
- (id)wifiDeviceIEName;
- (id)wifiIEData;
- (id)wifiPlatformObject;
- (id)wifiSSID;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

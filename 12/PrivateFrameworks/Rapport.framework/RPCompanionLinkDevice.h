<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RPCompanionLinkDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Rapport.framework/RPCompanionLinkDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Rapport.framework/Rapport (174.26)
 */

@interface RPCompanionLinkDevice : RPEndpoint <NSSecureCoding> {
    bool  _changed;
    bool  _daemon;
    NSString * _deviceColor;
    unsigned int  _flags;
    NSUUID * _homeKitIdentifier;
    NSString * _idsPersonalDeviceIdentifier;
    NSUUID * _mediaSystemIdentifier;
    NSUUID * _mediaSystemIdentifierEffective;
    NSString * _mediaSystemName;
    int  _mediaSystemRole;
    int  _mediaSystemRoleEffective;
    int  _mediaSystemState;
    NSUUID * _pairingIdentifier;
    NSString * _password;
    bool  _personal;
    int  _personalDeviceState;
    int  _personalRequestsState;
    NSString * _publicIdentifier;
    NSString * _role;
    NSString * _roomName;
    int  _serversChangedState;
    NSDictionary * _siriInfo;
    bool  _uiTriggered;
}

@property (nonatomic) bool changed;
@property (nonatomic) bool daemon;
@property (nonatomic, copy) NSString *deviceColor;
@property (nonatomic, readonly, copy) NSString *effectiveIdentifier;
@property (nonatomic) unsigned int flags;
@property (nonatomic, copy) NSUUID *homeKitIdentifier;
@property (nonatomic, copy) NSString *idsPersonalDeviceIdentifier;
@property (nonatomic, copy) NSUUID *mediaSystemIdentifier;
@property (nonatomic, copy) NSUUID *mediaSystemIdentifierEffective;
@property (nonatomic, copy) NSString *mediaSystemName;
@property (nonatomic) int mediaSystemRole;
@property (nonatomic) int mediaSystemRoleEffective;
@property (nonatomic) int mediaSystemState;
@property (nonatomic, copy) NSUUID *pairingIdentifier;
@property (nonatomic, copy) NSString *password;
@property (getter=isPersonal, nonatomic) bool personal;
@property (nonatomic) int personalDeviceState;
@property (nonatomic) int personalRequestsState;
@property (nonatomic, copy) NSString *publicIdentifier;
@property (nonatomic, copy) NSString *role;
@property (nonatomic, copy) NSString *roomName;
@property (nonatomic) int serversChangedState;
@property (nonatomic, copy) NSDictionary *siriInfo;
@property (nonatomic) bool uiTriggered;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (bool)changed;
- (bool)daemon;
- (id)description;
- (id)descriptionWithLevel:(int)arg1;
- (id)deviceColor;
- (id)effectiveIdentifier;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)flags;
- (id)homeKitIdentifier;
- (id)idsPersonalDeviceIdentifier;
- (id)initWithCoder:(id)arg1;
- (bool)isPersonal;
- (id)mediaSystemIdentifier;
- (id)mediaSystemIdentifierEffective;
- (id)mediaSystemName;
- (int)mediaSystemRole;
- (int)mediaSystemRoleEffective;
- (int)mediaSystemState;
- (id)pairingIdentifier;
- (id)password;
- (int)personalDeviceState;
- (int)personalRequestsState;
- (id)publicIdentifier;
- (id)role;
- (id)roomName;
- (int)serversChangedState;
- (void)setChanged:(bool)arg1;
- (void)setDaemon:(bool)arg1;
- (void)setDeviceColor:(id)arg1;
- (void)setFlags:(unsigned int)arg1;
- (void)setHomeKitIdentifier:(id)arg1;
- (void)setIdsPersonalDeviceIdentifier:(id)arg1;
- (void)setMediaSystemIdentifier:(id)arg1;
- (void)setMediaSystemIdentifierEffective:(id)arg1;
- (void)setMediaSystemName:(id)arg1;
- (void)setMediaSystemRole:(int)arg1;
- (void)setMediaSystemRoleEffective:(int)arg1;
- (void)setMediaSystemState:(int)arg1;
- (void)setPairingIdentifier:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)setPersonal:(bool)arg1;
- (void)setPersonalDeviceState:(int)arg1;
- (void)setPersonalRequestsState:(int)arg1;
- (void)setPublicIdentifier:(id)arg1;
- (void)setRole:(id)arg1;
- (void)setRoomName:(id)arg1;
- (void)setServersChangedState:(int)arg1;
- (void)setSiriInfo:(id)arg1;
- (void)setUiTriggered:(bool)arg1;
- (id)siriInfo;
- (bool)uiTriggered;
- (unsigned int)updateWithBonjourDevice:(id)arg1;
- (unsigned int)updateWithSFDevice:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SFDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Sharing.framework/SFDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing (1288.66)
 */

@interface SFDevice : NSObject <HFHomeKitObject, NSSecureCoding> {
    NSString * _accountID;
    bool  _autoUnlockEnabled;
    bool  _autoUnlockWatch;
    NSArray * _batteryInfo;
    SFBLEDevice * _bleDevice;
    NSString * _contactIdentifier;
    unsigned char  _deviceActionType;
    unsigned char  _deviceClassCode;
    unsigned int  _deviceFlags;
    unsigned char  _deviceModelCode;
    long long  _deviceType;
    long long  _distance;
    bool  _duetSync;
    bool  _hasProblem;
    unsigned int  _hotspotInfo;
    NSUUID * _identifier;
    NSString * _idsIdentifier;
    NSString * _model;
    NSString * _name;
    bool  _needsAWDL;
    bool  _needsKeyboard;
    bool  _needsSetup;
    unsigned char  _osVersion;
    bool  _paired;
    unsigned long long  _problemFlags;
    NSString * _requestSSID;
    unsigned int  _systemPairState;
    bool  _wakeDevice;
    bool  _watchLocked;
    bool  _wifiP2P;
}

@property (nonatomic, copy) NSString *accountID;
@property (nonatomic) bool autoUnlockEnabled;
@property (nonatomic) bool autoUnlockWatch;
@property (nonatomic, copy) NSArray *batteryInfo;
@property (nonatomic, retain) SFBLEDevice *bleDevice;
@property (nonatomic, copy) NSString *contactIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned char deviceActionType;
@property (nonatomic) unsigned char deviceClassCode;
@property (nonatomic) unsigned int deviceFlags;
@property (nonatomic, readonly) unsigned char deviceModelCode;
@property (nonatomic, readonly) long long deviceType;
@property (nonatomic) long long distance;
@property (nonatomic, readonly) bool duetSync;
@property (nonatomic) bool hasProblem;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned int hotspotInfo;
@property (nonatomic, copy) NSUUID *identifier;
@property (nonatomic, copy) NSString *idsIdentifier;
@property (nonatomic, copy) NSString *model;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, readonly) bool needsAWDL;
@property (nonatomic, readonly) bool needsKeyboard;
@property (nonatomic, readonly) bool needsKeyboardOnly;
@property (nonatomic) bool needsSetup;
@property (nonatomic) unsigned char osVersion;
@property (nonatomic) bool paired;
@property (nonatomic, readonly) unsigned long long problemFlags;
@property (nonatomic, copy) NSString *requestSSID;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int systemPairState;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier;
@property (nonatomic) bool wakeDevice;
@property (nonatomic) bool watchLocked;
@property (nonatomic, readonly) bool wifiP2P;

// Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)accountID;
- (bool)autoUnlockEnabled;
- (bool)autoUnlockWatch;
- (id)batteryInfo;
- (id)bleDevice;
- (id)contactIdentifier;
- (id)description;
- (unsigned char)deviceActionType;
- (unsigned char)deviceClassCode;
- (unsigned int)deviceFlags;
- (unsigned char)deviceModelCode;
- (long long)deviceType;
- (long long)distance;
- (bool)duetSync;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasProblem;
- (unsigned int)hotspotInfo;
- (id)identifier;
- (id)idsIdentifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)model;
- (id)name;
- (bool)needsAWDL;
- (bool)needsKeyboard;
- (bool)needsKeyboardOnly;
- (bool)needsSetup;
- (unsigned char)osVersion;
- (bool)paired;
- (unsigned long long)problemFlags;
- (id)requestSSID;
- (void)setAccountID:(id)arg1;
- (void)setAutoUnlockEnabled:(bool)arg1;
- (void)setAutoUnlockWatch:(bool)arg1;
- (void)setBatteryInfo:(id)arg1;
- (void)setBleDevice:(id)arg1;
- (void)setContactIdentifier:(id)arg1;
- (void)setDeviceActionType:(unsigned char)arg1;
- (void)setDeviceClassCode:(unsigned char)arg1;
- (void)setDeviceFlags:(unsigned int)arg1;
- (void)setDistance:(long long)arg1;
- (void)setHasProblem:(bool)arg1;
- (void)setHotspotInfo:(unsigned int)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIdsIdentifier:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNeedsSetup:(bool)arg1;
- (void)setOsVersion:(unsigned char)arg1;
- (void)setPaired:(bool)arg1;
- (void)setRequestSSID:(id)arg1;
- (void)setSystemPairState:(unsigned int)arg1;
- (void)setWakeDevice:(bool)arg1;
- (void)setWatchLocked:(bool)arg1;
- (unsigned int)systemPairState;
- (void)updateWithBLEDevice:(id)arg1;
- (void)updateWithPairedPeer:(id)arg1;
- (void)updateWithRPIdentity:(id)arg1;
- (bool)wakeDevice;
- (bool)watchLocked;
- (bool)wifiP2P;

// Image: /System/Library/PrivateFrameworks/DiagnosticExtensionsDaemon.framework/DiagnosticExtensionsDaemon

- (bool)isValidDEDPingDevice;
- (bool)isValidDEDPongDevice;
- (bool)isWithinDEDRange;

// Image: /System/Library/PrivateFrameworks/Home.framework/Home

- (id)uniqueIdentifier;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

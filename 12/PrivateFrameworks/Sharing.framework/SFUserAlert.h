<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SFUserAlert.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Sharing.framework/SFUserAlert.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing (1288.66)
 */

@interface SFUserAlert : NSObject {
    NSDictionary * _additionalInfo;
    NSString * _alternateButtonTitle;
    bool  _asBanner;
    NSString * _defaultButtonTitle;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id /* block */  _errorHandler;
    bool  _hasDefaultButton;
    NSURL * _iconURL;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    NSString * _message;
    NSString * _otherButtonTitle;
    id /* block */  _responseHandler;
    NSURL * _soundURL;
    bool  _textInput;
    NSString * _textInputTitle;
    id /* block */  _textResponseHandler;
    double  _timeout;
    NSString * _title;
    NSXPCConnection * _xpcCnx;
}

@property (nonatomic, retain) NSDictionary *additionalInfo;
@property (nonatomic, retain) NSString *alternateButtonTitle;
@property (nonatomic) bool asBanner;
@property (nonatomic, retain) NSString *defaultButtonTitle;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id /* block */ errorHandler;
@property (nonatomic) bool hasDefaultButton;
@property (nonatomic, retain) NSURL *iconURL;
@property (nonatomic, retain) NSString *message;
@property (nonatomic, retain) NSString *otherButtonTitle;
@property (nonatomic, copy) id /* block */ responseHandler;
@property (nonatomic, retain) NSURL *soundURL;
@property (nonatomic) bool textInput;
@property (nonatomic, retain) NSString *textInputTitle;
@property (nonatomic, copy) id /* block */ textResponseHandler;
@property (nonatomic) double timeout;
@property (nonatomic, retain) NSString *title;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_ensureXPCStarted;
- (void)_interrupted;
- (void)_invalidate;
- (void)_invalidated;
- (void)_postNotification:(struct __CFUserNotification { }*)arg1;
- (void)_present;
- (void)_presentBanner;
- (id)additionalInfo;
- (id)alternateButtonTitle;
- (bool)asBanner;
- (struct __CFUserNotification { }*)createNotification;
- (void)dealloc;
- (id)defaultButtonTitle;
- (id)dispatchQueue;
- (void)encodeWithCoder:(id)arg1;
- (id /* block */)errorHandler;
- (bool)hasDefaultButton;
- (id)iconURL;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)invalidate;
- (id)message;
- (id)otherButtonTitle;
- (void)present;
- (id /* block */)responseHandler;
- (void)setAdditionalInfo:(id)arg1;
- (void)setAlternateButtonTitle:(id)arg1;
- (void)setAsBanner:(bool)arg1;
- (void)setDefaultButtonTitle:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setErrorHandler:(id /* block */)arg1;
- (void)setHasDefaultButton:(bool)arg1;
- (void)setIconURL:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)setOtherButtonTitle:(id)arg1;
- (void)setResponseHandler:(id /* block */)arg1;
- (void)setSoundURL:(id)arg1;
- (void)setTextInput:(bool)arg1;
- (void)setTextInputTitle:(id)arg1;
- (void)setTextResponseHandler:(id /* block */)arg1;
- (void)setTimeout:(double)arg1;
- (void)setTitle:(id)arg1;
- (id)soundURL;
- (bool)textInput;
- (id)textInputTitle;
- (id /* block */)textResponseHandler;
- (double)timeout;
- (id)title;
- (void)userNotificationError:(id)arg1;
- (void)userNotificationResponse:(int)arg1;
- (void)userNotificationTextResponse:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

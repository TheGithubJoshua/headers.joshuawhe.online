<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SFRemoteAutoFillService.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Sharing.framework/SFRemoteAutoFillService.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing (1288.66)
 */

@interface SFRemoteAutoFillService : NSObject {
    bool  _activateCalled;
    id /* block */  _activateCompletion;
    NSArray * _associatedDomains;
    NSString * _bundleID;
    struct NSMutableDictionary { Class x1; } * _devices;
    id /* block */  _discoveredDevicesChanged;
    SFDeviceDiscovery * _discovery;
    int  _discoveryState;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    id /* block */  _errorHandler;
    NSString * _fixedPIN;
    id /* block */  _hidePINHandler;
    bool  _invalidateCalled;
    NSString * _localizedAppName;
    id /* block */  _receivedCredentialsHandler;
    NSString * _receivedPassword;
    NSString * _receivedUsername;
    bool  _requestingAutoFill;
    SFService * _service;
    int  _serviceState;
    SFSession * _session;
    id /* block */  _sessionEndedHandler;
    id /* block */  _sessionStartedHandler;
    id /* block */  _showPINHandlerEx;
    NSData * _systemBTAddress;
    CUSystemMonitor * _systemMonitor;
    int  _systemMonitorState;
    bool  _unitTesting;
    NSString * _unlocalizedAppName;
    NSURL * _urlForVisualScanning;
    id /* block */  _urlForVisualScanningChanged;
    NSString * _urlString;
}

@property (nonatomic, copy) NSArray *associatedDomains;
@property (nonatomic, copy) NSString *bundleID;
@property (nonatomic, readonly) unsigned long long discoveredDevices;
@property (nonatomic, copy) id /* block */ discoveredDevicesChanged;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, copy) id /* block */ errorHandler;
@property (nonatomic, copy) NSString *fixedPIN;
@property (nonatomic, copy) id /* block */ hidePINHandler;
@property (nonatomic, copy) NSString *localizedAppName;
@property (nonatomic, readonly) bool needsSetup;
@property (nonatomic, copy) id /* block */ receivedCredentialsHandler;
@property (nonatomic, copy) id /* block */ sessionEndedHandler;
@property (nonatomic, copy) id /* block */ sessionStartedHandler;
@property (nonatomic, copy) id /* block */ showPINHandlerEx;
@property (nonatomic) bool unitTesting;
@property (nonatomic, copy) NSString *unlocalizedAppName;
@property (nonatomic, copy) id /* block */ urlForVisualScanningChanged;
@property (nonatomic, copy) NSString *urlString;

- (void).cxx_destruct;
- (void)_activateWithCompletion:(id /* block */)arg1;
- (void)_activated;
- (void)_bluetoothAddressChanged;
- (void)_cleanup;
- (void)_completedWithError:(id)arg1;
- (void)_discoveryChanged:(id)arg1;
- (void)_discoveryFound:(id)arg1;
- (void)_discoveryLost:(id)arg1;
- (void)_discoveryStart;
- (int)_readyForAutoFillRequest;
- (void)_serviceHandleReceivedContextRequest:(id)arg1 handler:(id /* block */)arg2;
- (void)_serviceHandleReceivedCredentialRequest:(id)arg1 handler:(id /* block */)arg2;
- (void)_serviceHandleReceivedRequest:(id)arg1 handler:(id /* block */)arg2;
- (void)_serviceHidePIN;
- (void)_serviceSessionEnded:(id)arg1 withError:(id)arg2;
- (void)_serviceSessionStarted:(id)arg1;
- (void)_serviceStart;
- (void)_systemMonitorStart;
- (void)activateWithCompletion:(id /* block */)arg1;
- (id)associatedDomains;
- (id)bundleID;
- (void)dealloc;
- (id)description;
- (unsigned long long)discoveredDevices;
- (id /* block */)discoveredDevicesChanged;
- (id)dispatchQueue;
- (id /* block */)errorHandler;
- (id)fixedPIN;
- (id /* block */)hidePINHandler;
- (id)init;
- (void)invalidate;
- (id)localizedAppName;
- (bool)needsSetup;
- (id /* block */)receivedCredentialsHandler;
- (id /* block */)sessionEndedHandler;
- (id /* block */)sessionStartedHandler;
- (void)setAssociatedDomains:(id)arg1;
- (void)setBundleID:(id)arg1;
- (void)setDiscoveredDevicesChanged:(id /* block */)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setErrorHandler:(id /* block */)arg1;
- (void)setFixedPIN:(id)arg1;
- (void)setHidePINHandler:(id /* block */)arg1;
- (void)setLocalizedAppName:(id)arg1;
- (void)setReceivedCredentialsHandler:(id /* block */)arg1;
- (void)setSessionEndedHandler:(id /* block */)arg1;
- (void)setSessionStartedHandler:(id /* block */)arg1;
- (void)setShowPINHandlerEx:(id /* block */)arg1;
- (void)setUnitTesting:(bool)arg1;
- (void)setUnlocalizedAppName:(id)arg1;
- (void)setUrlForVisualScanningChanged:(id /* block */)arg1;
- (void)setUrlString:(id)arg1;
- (id /* block */)showPINHandlerEx;
- (void)startRequestingAutoFill;
- (void)stopRequestingAutoFill;
- (bool)unitTesting;
- (id)unlocalizedAppName;
- (void)updateURLForVisualScanning;
- (id)urlForVisualScanning;
- (id /* block */)urlForVisualScanningChanged;
- (id)urlString;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

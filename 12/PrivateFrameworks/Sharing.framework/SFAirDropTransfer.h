<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SFAirDropTransfer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Sharing.framework/SFAirDropTransfer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing (1288.66)
 */

@interface SFAirDropTransfer : NSObject <NSCopying, NSSecureCoding> {
    SFAirDropAction * _cancelAction;
    NSArray * _completedURLs;
    NSString * _contentsDescription;
    NSString * _contentsTitle;
    NSURL * _customDestinationURL;
    NSError * _error;
    unsigned long long  _failureReason;
    NSString * _identifier;
    SFAirDropTransferMetaData * _metaData;
    NSArray * _possibleActions;
    id  _progressToken;
    SFAirDropAction * _selectedAction;
    NSProgress * _transferProgress;
    unsigned long long  _transferState;
    unsigned long long  _userResponse;
}

@property (nonatomic, retain) SFAirDropAction *cancelAction;
@property (nonatomic, copy) NSArray *completedURLs;
@property (nonatomic, copy) NSString *contentsDescription;
@property (nonatomic, copy) NSString *contentsTitle;
@property (nonatomic, copy) NSURL *customDestinationURL;
@property (nonatomic, retain) NSError *error;
@property (nonatomic) unsigned long long failureReason;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, retain) SFAirDropTransferMetaData *metaData;
@property (nonatomic, readonly) bool needsAction;
@property (nonatomic, retain) NSArray *possibleActions;
@property (nonatomic, retain) id progressToken;
@property (nonatomic, retain) SFAirDropAction *selectedAction;
@property (nonatomic, retain) NSProgress *transferProgress;
@property (nonatomic) unsigned long long transferState;
@property (nonatomic) unsigned long long userResponse;

+ (bool)automaticallyNotifiesObserversOfFailureReason;
+ (bool)automaticallyNotifiesObserversOfTransferState;
+ (bool)automaticallyNotifiesObserversOfUserResponse;
+ (id)keyPathsForValuesAffectingNeedsAction;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)cancelAction;
- (id)completedURLs;
- (id)contentsDescription;
- (id)contentsTitle;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)customDestinationURL;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)error;
- (unsigned long long)failureReason;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 initialInformation:(id)arg2;
- (bool)isEqual:(id)arg1;
- (id)metaData;
- (bool)needsAction;
- (id)possibleActions;
- (id)progressToken;
- (id)selectedAction;
- (void)setCancelAction:(id)arg1;
- (void)setCompletedURLs:(id)arg1;
- (void)setContentsDescription:(id)arg1;
- (void)setContentsTitle:(id)arg1;
- (void)setCustomDestinationURL:(id)arg1;
- (void)setError:(id)arg1;
- (void)setFailureReason:(unsigned long long)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMetaData:(id)arg1;
- (void)setPossibleActions:(id)arg1;
- (void)setProgressToken:(id)arg1;
- (void)setSelectedAction:(id)arg1;
- (void)setTransferProgress:(id)arg1;
- (void)setTransferState:(unsigned long long)arg1;
- (void)setUpProgress;
- (void)setUpProgressToBroadcast:(bool)arg1;
- (void)setUserResponse:(unsigned long long)arg1;
- (id)transferProgress;
- (unsigned long long)transferState;
- (bool)updateUsingCoder:(id)arg1;
- (void)updateWithInformation:(id)arg1;
- (bool)updateWithTransfer:(id)arg1;
- (unsigned long long)userResponse;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

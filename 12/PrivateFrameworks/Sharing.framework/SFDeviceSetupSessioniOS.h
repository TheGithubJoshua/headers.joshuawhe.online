<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SFDeviceSetupSessioniOS.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Sharing.framework/SFDeviceSetupSessioniOS.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing (1288.66)
 */

@interface SFDeviceSetupSessioniOS : NSObject {
    bool  _activateCalled;
    unsigned int  _appNextID;
    bool  _buddyComplete;
    bool  _buddyConfigured;
    BYDeviceSetupSourceSession * _buddySession;
    CDPContext * _cdpContext;
    CDPStateController * _cdpController;
    int  _cdpState;
    bool  _configRequestSent;
    bool  _configResponseReceived;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    RPFileTransferSession * _fileTransferSessionTemplate;
    id /* block */  _interruptionHandler;
    bool  _invalidateCalled;
    id /* block */  _invalidationHandler;
    unsigned int  _pairFlags;
    bool  _pairSetupDone;
    bool  _pairSetupReset;
    bool  _pairSetupRunning;
    SFDevice * _peerDevice;
    int  _preAuthPairSetupState;
    bool  _preAuthRequestSent;
    bool  _preAuthResponseReceived;
    id /* block */  _progressHandler;
    id /* block */  _promptForPINHandler;
    id /* block */  _receivedObjectHandler;
    NSData * _resumeAuthTag;
    SFDeviceDiscovery * _resumeDiscovery;
    NSString * _resumePassword;
    int  _resumeState;
    SFSession * _sfSession;
    bool  _sfSessionActivated;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (nonatomic, retain) RPFileTransferSession *fileTransferSessionTemplate;
@property (nonatomic, copy) id /* block */ interruptionHandler;
@property (nonatomic, copy) id /* block */ invalidationHandler;
@property (nonatomic) unsigned int pairFlags;
@property (nonatomic, retain) SFDevice *peerDevice;
@property (nonatomic, copy) id /* block */ progressHandler;
@property (nonatomic, copy) id /* block */ promptForPINHandler;
@property (nonatomic, copy) id /* block */ receivedObjectHandler;

- (void).cxx_destruct;
- (void)_cleanup;
- (void)_completedWithError:(id)arg1;
- (void)_handleBuddyProgress:(id)arg1;
- (void)_handleSetupActionRequest:(id)arg1 responseHandler:(id /* block */)arg2;
- (void)_handleSetupActionSoftwareUpdate;
- (void)_handleSetupPeerSuspended;
- (void)_handleSetupResumeFoundDevice:(id)arg1;
- (void)_receivedConfigResponse:(id)arg1;
- (void)_receivedObject:(id)arg1 flags:(unsigned int)arg2;
- (void)_run;
- (int)_runCoreCDPSetup;
- (int)_runPreAuthPairSetup;
- (int)_runResume;
- (void)_runSFSessionActivated;
- (void)_runSFSessionStart;
- (void)_sendConfigInfo;
- (void)_sendPreAuthInfo;
- (void)_startBuddySession;
- (void)activate;
- (void)dealloc;
- (id)dispatchQueue;
- (id)fileTransferSessionTemplate;
- (id)init;
- (id /* block */)interruptionHandler;
- (void)invalidate;
- (id /* block */)invalidationHandler;
- (unsigned int)pairFlags;
- (id)peerDevice;
- (id /* block */)progressHandler;
- (id /* block */)promptForPINHandler;
- (id /* block */)receivedObjectHandler;
- (void)sendAppEvent:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setFileTransferSessionTemplate:(id)arg1;
- (void)setInterruptionHandler:(id /* block */)arg1;
- (void)setInvalidationHandler:(id /* block */)arg1;
- (void)setPairFlags:(unsigned int)arg1;
- (void)setPeerDevice:(id)arg1;
- (void)setProgressHandler:(id /* block */)arg1;
- (void)setPromptForPINHandler:(id /* block */)arg1;
- (void)setReceivedObjectHandler:(id /* block */)arg1;
- (void)tryPIN:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

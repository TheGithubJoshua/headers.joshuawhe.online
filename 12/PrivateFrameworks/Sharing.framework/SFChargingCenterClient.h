<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SFChargingCenterClient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Sharing.framework/SFChargingCenterClient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Sharing.framework/Sharing (1288.66)
 */

@interface SFChargingCenterClient : NSObject <SBSRemoteAlertHandleObserver> {
    bool  _activateCalled;
    SBSRemoteAlertHandle * _currentRemoteHandle;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _forcePill;
    bool  _invalidateCalled;
    bool  _invalidateDone;
    SFWirelessChargingMonitor * _monitor;
    NSDate * _mostRecentDeactivationDate;
    NSString * _mostRecentSuccessfullActivationReason;
    double  _previousPhoneChargeLevel;
    unsigned char  _processedErrorCode;
    id /* block */  _requestHandler;
    int  _triggerEngagementToken;
    int  _triggerError1;
    int  _triggerError4;
    bool  _triggerUIForInBandComms;
    SFChargingUICoordinator * _uiCoordinator;
    id /* block */  _visualInformationRequestHandler;
    NSObject<OS_dispatch_source> * _watchUITimer;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic) SBSRemoteAlertHandle *currentRemoteHandle;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SFWirelessChargingMonitor *monitor;
@property (nonatomic, retain) NSDate *mostRecentDeactivationDate;
@property (nonatomic, retain) NSString *mostRecentSuccessfullActivationReason;
@property (nonatomic, readonly) long long numberOfDevicesCharging;
@property (nonatomic, readonly) PLTitledSummaryPlatterView *platterView;
@property (nonatomic, copy) id /* block */ requestHandler;
@property (readonly) Class superclass;
@property (nonatomic, retain) SFChargingUICoordinator *uiCoordinator;
@property (nonatomic, copy) id /* block */ visualInformationRequestHandler;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *watchUITimer;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (void)notificationFeedbackConfigurationWithSound:(bool)arg1 andHaptic:(bool)arg2 forFeedbackType:(long long)arg3 completion:(id /* block */)arg4;
+ (void)playShortEngagementWithSound:(bool)arg1 haptic:(bool)arg2;

- (void).cxx_destruct;
- (void)activate;
- (void)checkDefaults;
- (void)contextsForRemoteAlertActivationWithReason:(id)arg1 completion:(id /* block */)arg2;
- (void)createWorkQueue;
- (id)currentRemoteHandle;
- (void)dealloc;
- (id)dispatchQueue;
- (id)init;
- (void)invalidate;
- (void)listenToNotifications;
- (id)monitor;
- (id)mostRecentDeactivationDate;
- (id)mostRecentSuccessfullActivationReason;
- (long long)numberOfDevicesCharging;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)onqueue_activate;
- (void)onqueue_canPresentForDevice:(id)arg1 handler:(id /* block */)arg2;
- (void)onqueue_invalidate;
- (void)onqueue_presentationRequestContextsForReason:(id)arg1 withHandler:(id /* block */)arg2;
- (void)onqueue_requestPresentationForReason:(id)arg1 withKeyChargingDevice:(id)arg2 completion:(id /* block */)arg3;
- (void)onqueue_sendPresentationRequestForChargingDevice:(id)arg1;
- (void)onqueue_updateActivationContext:(id)arg1 withCoverSheetPlatterFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)onqueue_updateActivationContext:(id)arg1 withKeyChargingDevice:(id)arg2;
- (void)onqueue_updateActivationContextWithPowerSourcesData:(id)arg1;
- (id)platterView;
- (void)reevaluatePlatterViewShowEligibility;
- (void)remoteAlertHandleDidDeactivate:(id)arg1;
- (id /* block */)requestHandler;
- (void)restorePersistedErrorNotifications;
- (void)setCurrentRemoteHandle:(id)arg1;
- (void)setDispatchQueue:(id)arg1;
- (void)setMonitor:(id)arg1;
- (void)setMostRecentDeactivationDate:(id)arg1;
- (void)setMostRecentSuccessfullActivationReason:(id)arg1;
- (void)setRequestHandler:(id /* block */)arg1;
- (void)setUiCoordinator:(id)arg1;
- (void)setUpPlatterView;
- (void)setUpPowerMonitor;
- (void)setVisualInformationRequestHandler:(id /* block */)arg1;
- (void)setWatchUITimer:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)uiCoordinator;
- (void)updatePlatterView;
- (id /* block */)visualInformationRequestHandler;
- (id)watchUITimer;
- (id)workQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

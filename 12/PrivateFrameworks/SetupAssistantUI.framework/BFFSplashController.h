<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BFFSplashController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SetupAssistantUI.framework/BFFSplashController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SetupAssistantUI.framework/SetupAssistantUI (1)
 */

@interface BFFSplashController : UIViewController <UIScrollViewDelegate> {
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _additionalInsets;
    UIColor * _bleedColor;
    UIView * _bleedView;
    UIView * _buttonTray;
    NSMutableArray * _buttons;
    UIView * _contentView;
    long long  _contentViewPosition;
    NSString * _detailText;
    bool  _disableIconTint;
    bool  _fullWidthContent;
    BFFPaneHeaderView * _headerView;
    _UIBackdropView * _lightTrayBackdrop;
    UIScrollView * _scrollView;
    bool  _scrollingDisabled;
    UIColor * _tint;
    _UIBackdropView * _ultraLightTrayBackdrop;
    bool  _usesTwoButtonLayout;
}

@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } additionalInsets;
@property (nonatomic, retain) UIColor *bleedColor;
@property (nonatomic, readonly) UIView *buttonTray;
@property (nonatomic, retain) UIView *contentView;
@property (nonatomic) long long contentViewPosition;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *detailText;
@property (nonatomic) bool disableIconTint;
@property (nonatomic) bool fullWidthContent;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) BFFPaneHeaderView *headerView;
@property (nonatomic, retain) UIImage *icon;
@property (getter=isScrollingDisabled, nonatomic) bool scrollingDisabled;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIColor *tint;
@property (nonatomic) bool usesTwoButtonLayout;

- (void).cxx_destruct;
- (void)_buttonPressed:(id)arg1;
- (id)_createButtonWithTitle:(id)arg1 style:(long long)arg2;
- (void)_updateButtonFonts;
- (void)_updateTrayVisibility;
- (void)addButtonWithTitle:(id)arg1 style:(long long)arg2 action:(id /* block */)arg3;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })additionalInsets;
- (id)bleedColor;
- (id)buttonAtIndex:(unsigned long long)arg1;
- (id)buttonTray;
- (id)contentScrollView;
- (id)contentView;
- (long long)contentViewPosition;
- (id)detailText;
- (bool)disableIconTint;
- (bool)fullWidthContent;
- (id)headerView;
- (id)icon;
- (id)init;
- (bool)isScrollingDisabled;
- (void)loadView;
- (void)removeAllButtons;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setAdditionalInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setBleedColor:(id)arg1;
- (void)setButtonsEnabled:(bool)arg1;
- (void)setContentView:(id)arg1;
- (void)setContentViewPosition:(long long)arg1;
- (void)setDetailText:(id)arg1;
- (void)setDisableIconTint:(bool)arg1;
- (void)setFullWidthContent:(bool)arg1;
- (void)setIcon:(id)arg1;
- (void)setLinkText:(id)arg1 action:(id /* block */)arg2;
- (void)setScrollingDisabled:(bool)arg1;
- (void)setTint:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitle:(id)arg1 forButtonAtIndex:(unsigned long long)arg2 action:(id /* block */)arg3;
- (void)setUsesTwoButtonLayout:(bool)arg1;
- (id)tint;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateBleedColor;
- (void)updateBleedViewLayout;
- (bool)usesTwoButtonLayout;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FMFMapViewDelegateInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FMFUI.framework/FMFMapViewDelegateInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FMFUI.framework/FMFUI (1)
 */

@interface FMFMapViewDelegateInternal : NSObject <MKMapViewDelegate, UIGestureRecognizerDelegate> {
    <FMFMapViewDelegateInternalDelegate> * _delegate;
    FMFWildcardGestureRecognizer * _gr;
    bool  _isMapCenteringDisabled;
    struct CLLocationCoordinate2D { 
        double latitude; 
        double longitude; 
    }  _lastUserLocationCoordinate;
    MKMapView * _mapView;
    bool  _respondingToUserTouch;
    FMAnnotationView * _selectedAnnotationView;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <FMFMapViewDelegateInternalDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) FMFWildcardGestureRecognizer *gr;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isMapCenteringDisabled;
@property (nonatomic) struct CLLocationCoordinate2D { double x1; double x2; } lastUserLocationCoordinate;
@property (nonatomic) MKMapView *mapView;
@property (nonatomic) bool respondingToUserTouch;
@property (nonatomic) FMAnnotationView *selectedAnnotationView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_moveCenterByOffset:(struct CGPoint { double x1; double x2; })arg1 from:(struct CLLocationCoordinate2D { double x1; double x2; })arg2 mapView:(id)arg3;
- (id)accuracyCircleForLocation:(id)arg1;
- (bool)canSelectAnnotation:(id)arg1;
- (id)delegate;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsetsWithMinApplied:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)endTouches;
- (id)fmfOverlayColor;
- (id)fmfOverlayColorSatellite;
- (id)gr;
- (id)initWithDelegate:(id)arg1 mapView:(id)arg2;
- (bool)isMapCenteringDisabled;
- (struct CLLocationCoordinate2D { double x1; double x2; })lastUserLocationCoordinate;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })mapRectMakeWithRadialDistanceForCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1 andRadius:(double)arg2;
- (id)mapView;
- (void)mapView:(id)arg1 didDeselectAnnotationView:(id)arg2;
- (void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(bool)arg2;
- (void)mapView:(id)arg1 regionWillChangeAnimated:(bool)arg2;
- (id)mapView:(id)arg1 rendererForOverlay:(id)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(bool)arg2;
- (bool)regionIsValid:(struct { struct CLLocationCoordinate2D { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)respondingToUserTouch;
- (void)selectAnnotation:(id)arg1;
- (id)selectedAnnotationView;
- (void)setDelegate:(id)arg1;
- (void)setGr:(id)arg1;
- (void)setIsMapCenteringDisabled:(bool)arg1;
- (void)setLastUserLocationCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1;
- (void)setMapView:(id)arg1;
- (void)setRespondingToUserTouch:(bool)arg1;
- (void)setSelectedAnnotationView:(id)arg1;
- (void)slideAnnotation:(id)arg1 intoViewIfNeededForMapView:(id)arg2;
- (void)updateOverlaysForAnnotationMove:(id)arg1 mapView:(id)arg2;
- (void)zoomToFitAnnotationsForMapView:(id)arg1 includeMe:(bool)arg2 disallowAnimation:(bool)arg3;
- (void)zoomToFitLocation:(id)arg1 forMapView:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

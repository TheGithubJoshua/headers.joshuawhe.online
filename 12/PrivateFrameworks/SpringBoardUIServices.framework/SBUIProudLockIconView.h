<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SBUIProudLockIconView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SpringBoardUIServices.framework/SBUIProudLockIconView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices (1)
 */

@interface SBUIProudLockIconView : UIView {
    SBUIFaceIDCameraGlyphView * _cameraCoveredView;
    UIColor * _contentColor;
    double  _durationOnCameraCoveredGlyphBeforeCoaching;
    UIView * _iconContainerView;
    NSSet * _imageLayers;
    SBUIFaceIDCoachingView * _lazy_faceIDCoachingView;
    LAUIPearlGlyphView * _lazy_pearlGlyphView;
    _UILegibilitySettings * _legibilitySettings;
    SBUICAPackageView * _lockView;
    id  _pearlGlyphViewSharedResources;
    bool  _performingIncomingLayout;
    NSSet * _shadowFilterLayers;
    NSSet * _shadowImageLayers;
    long long  _state;
}

@property (nonatomic, readonly) SBUIFaceIDCameraGlyphView *cameraCoveredView;
@property (nonatomic, retain) UIColor *contentColor;
@property (nonatomic) double durationOnCameraCoveredGlyphBeforeCoaching;
@property (nonatomic, retain) _UILegibilitySettings *legibilitySettings;
@property (nonatomic) long long state;

- (void).cxx_destruct;
- (id)_activeViewsForState:(long long)arg1;
- (id)_alphaAnimationSettingsForTransitionFromViews:(id)arg1 andState:(long long)arg2 toViews:(id)arg3 andState:(long long)arg4 forIncomingViews:(bool)arg5;
- (double)_alphaForActiveViewForState:(long long)arg1;
- (void)_configureShadowFromLegibilitySettings:(id)arg1;
- (id)_defaultAnimationSettingsForTransitionFromViews:(id)arg1 andState:(long long)arg2 toViews:(id)arg3 andState:(long long)arg4;
- (id)_faceIDCoachingView;
- (void)_forEachLayerInHierarchy:(id)arg1 perform:(id /* block */)arg2;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_incomingTransformForActiveView:(id)arg1 forState:(long long)arg2;
- (id)_layoutAnimationSettingsForTransitionFromViews:(id)arg1 andState:(long long)arg2 toViews:(id)arg3 andState:(long long)arg4;
- (double)_lockToCoachingSpacing;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_outgoingTransformForView:(id)arg1 fromState:(long long)arg2;
- (id)_pearlGlyphView;
- (void)_resetCameraGlyphView;
- (void)_resetPearlGlyphView;
- (void)_resetfaceIDCoachingView;
- (double)_scaleAmountForZoom;
- (struct CGSize { double x1; double x2; })_smallLockSize;
- (struct CGSize { double x1; double x2; })_smallLockSizeForTextSize:(id)arg1;
- (id)_transformAnimationSettingsForTransitionFromViews:(id)arg1 andState:(long long)arg2 toViews:(id)arg3 andState:(long long)arg4 forIncomingViews:(bool)arg5;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_transformForActiveView:(id)arg1 forState:(long long)arg2;
- (void)_transitionToState:(long long)arg1 animated:(bool)arg2 options:(long long)arg3 completion:(id /* block */)arg4;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_zoomedTransform;
- (id)cameraCoveredView;
- (id)contentColor;
- (double)durationOnCameraCoveredGlyphBeforeCoaching;
- (id)fileNameForCurrentDevice;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (id)legibilitySettings;
- (void)setContentColor:(id)arg1;
- (void)setDurationOnCameraCoveredGlyphBeforeCoaching:(double)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setState:(long long)arg1 animated:(bool)arg2;
- (void)setState:(long long)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)setState:(long long)arg1 animated:(bool)arg2 options:(long long)arg3 completion:(id /* block */)arg4;
- (long long)state;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

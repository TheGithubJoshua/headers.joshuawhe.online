<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HSCloudClient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeSharing.framework/HSCloudClient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeSharing.framework/HomeSharing (1)
 */

@interface HSCloudClient : NSObject <HSCloudAvailability> {
    bool  _active;
    HSConnectionConfiguration * _configuration;
    unsigned long long  _daemonConfiguration;
    NSXPCConnection * _nsxpcConnection;
    long long  _preferredVideoQuality;
    id /* block */  _updateInProgressChangedHandler;
    id /* block */  _updateJaliscoInProgressChangedHandler;
    id /* block */  _updateSagaInProgressChangedHandler;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic, copy) id /* block */ updateInProgressChangedHandler;
@property (nonatomic, copy) id /* block */ updateJaliscoInProgressChangedHandler;
@property (nonatomic, copy) id /* block */ updateSagaInProgressChangedHandler;

- (void).cxx_destruct;
- (void)_sendConfigurationToDaemon;
- (void)_serverDidLaunch;
- (void)_serverJaliscoUpdateInProgressDidChange;
- (void)_serverSagaUpdateInProgressDidChange;
- (void)addGeniusPlaylistWithPersistentID:(long long)arg1 name:(id)arg2 seedItemSagaIDs:(id)arg3 itemSagaIDs:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)addItemWithSagaID:(long long)arg1 toPlaylistWithPersistentID:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)addStoreItemWithAdamID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)addStoreItemWithAdamID:(long long)arg1 toPlaylistWithPersistentID:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)addStorePlaylistWithGlobalID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)authenticateAndStartInitialImport:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)authenticateAndStartInitialImport:(bool)arg1 mergeWithCloudLibrary:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)authenticateWithCompletionHandler:(id /* block */)arg1;
- (void)becomeActive;
- (bool)canSetItemProperty:(id)arg1;
- (bool)canSetPlaylistProperty:(id)arg1;
- (bool)canShowCloudDownloadButtons;
- (bool)canShowCloudMusic;
- (bool)canShowCloudVideo;
- (void)cancelUpdateJaliscoGeniusDataInProgressWithCompletionHandler:(id /* block */)arg1;
- (long long)cloudAddToPlaylistBehavior;
- (id)connection;
- (void)createPlaylistWithPersistentID:(long long)arg1 properties:(id)arg2 trackList:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)dealloc;
- (void)deauthenticateWithCompletionHandler:(id /* block */)arg1;
- (void)deprioritizeAlbumArtistHeroImageForPersistentID:(long long)arg1;
- (void)deprioritizeArtistHeroImageForPersistentID:(long long)arg1;
- (void)deprioritizeContainerArtworkForSagaID:(unsigned long long)arg1;
- (void)deprioritizeItemArtworkForPurchaseHistoryID:(unsigned long long)arg1;
- (void)deprioritizeItemArtworkForSagaID:(unsigned long long)arg1;
- (void)deprioritizeScreenshotForPurchaseHistoryID:(unsigned long long)arg1;
- (void)deprioritizeScreenshotForSagaID:(unsigned long long)arg1;
- (void)deprioritizeSubscriptionContainerArtworkForPersistentID:(long long)arg1;
- (void)deprioritizeSubscriptionItemArtworkForPersistentID:(long long)arg1;
- (void)deprioritizeSubscriptionScreenshotForPersistentID:(long long)arg1;
- (void)disableJaliscoGeniusWithCompletionHandler:(id /* block */)arg1;
- (void)enableJaliscoGeniusWithCompletionHandler:(id /* block */)arg1;
- (bool)hasProperNetworkConditionsToPlayMedia;
- (bool)hasProperNetworkConditionsToShowCloudMedia;
- (void)hideItemsWithPurchaseHistoryIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)importAlbumArtistHeroImageForPersistentID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importArtistHeroImageForPersistentID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importContainerArtworkForSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importItemArtworkForPurchaseHistoryID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importItemArtworkForSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importScreenshotForPurchaseHistoryID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importScreenshotForSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importSubscriptionContainerArtworkForPersistentID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importSubscriptionItemArtworkForPersistentID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)importSubscriptionScreenshotForPersistentID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (id)init;
- (id)initWithConfiguration:(id)arg1;
- (void)isAuthenticatedWithCompletionHandler:(id /* block */)arg1;
- (void)isAuthenticatedWithQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)isCellularDataRestricted;
- (bool)isCellularDataRestrictedForMusic;
- (bool)isCellularDataRestrictedForStoreApps;
- (bool)isCellularDataRestrictedForVideos;
- (void)jaliscoAppsImageDataForStoreID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForContainerSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForContainerSagaIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForPurchaseHistoryID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForPurchaseHistoryIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForSagaIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForSubscriptionContainerPersistentID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForSubscriptionContainerPersistentIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForSubscriptionItemPersistentID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadArtworkInfoForSubscriptionItemPersistentIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadBooksForStoreIDs:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)loadGeniusItemsForSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadIsJaliscoGeniusSupportedWithCompletionHandler:(id /* block */)arg1;
- (void)loadIsJaliscoUpdateInProgressWithCompletionHandler:(id /* block */)arg1;
- (void)loadIsSagaUpdateInProgressWithCompletionHandler:(id /* block */)arg1;
- (void)loadIsUpdateInProgressWithCompletionHandler:(id /* block */)arg1;
- (void)loadJaliscoGeniusCUIDWithCompletionHandler:(id /* block */)arg1;
- (void)loadJaliscoGeniusLearnMoreURLWithCompletionHandler:(id /* block */)arg1;
- (void)loadJaliscoGeniusOperationStatusWithCompletionHandler:(id /* block */)arg1;
- (void)loadJaliscoUpdateProgressWithCompletionHandler:(id /* block */)arg1;
- (void)loadSagaUpdateProgressWithCompletionHandler:(id /* block */)arg1;
- (void)loadScreenshotInfoForPurchaseHistoryID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadScreenshotInfoForPurchaseHistoryIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadScreenshotInfoForSagaID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadScreenshotInfoForSagaIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadScreenshotInfoForSubscriptionPersistentID:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)loadScreenshotInfoForSubscriptionPersistentIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)loadUpdateProgressWithCompletionHandler:(id /* block */)arg1;
- (void)publishPlaylistWithSagaID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)redownloadPurchaseAppWithStoreID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeItemsWithSagaIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeJaliscoLibraryWithCompletionHander:(id /* block */)arg1;
- (void)removePlaylistsWithSagaIDs:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)resetConfiguration:(id)arg1;
- (void)resignActive;
- (void)sdk_addStoreItemWithOpaqueID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)sdk_addStoreItemWithOpaqueID:(id)arg1 toPlaylistWithPersistentID:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)sdk_createPlaylistWithPersistentID:(long long)arg1 properties:(id)arg2 tracklist:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)searchJaliscoAppsLibrary:(id)arg1 searchMethod:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)setCloudAddToPlaylistBehavior:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)setCollectionProperties:(id)arg1 forCollectionWithPersistentID:(long long)arg2 groupingType:(long long)arg3 completionHandler:(id /* block */)arg4;
- (void)setDaemonConfiguration:(unsigned long long)arg1;
- (void)setHidden:(bool)arg1 purchasedAppWithStoreID:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setItemProperties:(id)arg1 forPurchaseHistoryID:(unsigned long long)arg2;
- (void)setItemProperties:(id)arg1 forSagaID:(unsigned long long)arg2;
- (void)setJaliscoGeniusCUID:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)setPlaylistProperties:(id)arg1 trackList:(id)arg2 forPlaylistPersistentID:(long long)arg3 completionHandler:(id /* block */)arg4;
- (void)setPreferredVideoQuality:(long long)arg1;
- (void)setUpdateInProgressChangedHandler:(id /* block */)arg1;
- (void)setUpdateJaliscoInProgressChangedHandler:(id /* block */)arg1;
- (void)setUpdateSagaInProgressChangedHandler:(id /* block */)arg1;
- (bool)shouldProhibitActionsForCurrentNetworkConditions;
- (bool)shouldProhibitMusicActionForCurrentNetworkConditions;
- (bool)shouldProhibitStoreAppsActionForCurrentNetworkConditions;
- (bool)shouldProhibitVideosActionForCurrentNetworkConditions;
- (void)unhideAllPurchasedApps:(id /* block */)arg1;
- (void)updateArtistHeroImages;
- (void)updateGeniusDataWithCompletionHandler:(id /* block */)arg1;
- (id /* block */)updateInProgressChangedHandler;
- (void)updateJaliscoAppsLibraryForFamilyMemberStoreID:(id)arg1 withReason:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)updateJaliscoAppsLibraryWithReason:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)updateJaliscoGeniusDataWithCompletionHandler:(id /* block */)arg1;
- (id /* block */)updateJaliscoInProgressChangedHandler;
- (void)updateJaliscoLibraryWithCompletionHandler:(id /* block */)arg1;
- (void)updateJaliscoLibraryWithReason:(long long)arg1 completionHandler:(id /* block */)arg2;
- (id /* block */)updateSagaInProgressChangedHandler;
- (void)updateSagaLibraryWithCompletionHandler:(id /* block */)arg1;
- (void)updateSagaLibraryWithReason:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)updateSubscribedPlaylistsWithSagaIDs:(id)arg1 ignoreMinRefreshInterval:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)uploadArtworkForPlaylistWithPersistentID:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)uploadCloudItemProperties;
- (void)uploadCloudPlaylistProperties;
- (void)uploadItemProperties;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CXQuery.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ContentIndex.framework/CXQuery.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ContentIndex.framework/ContentIndex (2.0)
 */

@interface CXQuery : NSObject {
    struct { int x1; struct __SIJobRef {} *x2; struct { unsigned char x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; unsigned char x_3_1_4; unsigned char x_3_1_5; unsigned char x_3_1_6; unsigned char x_3_1_7; unsigned char x_3_1_8; unsigned char x_3_1_9; unsigned char x_3_1_10; unsigned char x_3_1_11; unsigned char x_3_1_12; unsigned char x_3_1_13; unsigned char x_3_1_14; unsigned char x_3_1_15; unsigned char x_3_1_16; } x3; union { struct { struct __MDStoreOIDArray {} *x_1_2_1; struct __MDPlistBytes {} *x_1_2_2; long long x_1_2_3; } x_4_1_1; struct { long long x_2_2_1; } x_4_1_2; struct { struct __MDStoreOIDArray {} *x_3_2_1; struct __MDPlistBytes {} *x_3_2_2; long long x_3_2_3; int x_3_2_4; } x_4_1_3; struct __MDPlistBytes {} *x_4_1_4; struct __MDPlistBytes {} *x_4_1_5; struct { char *x_6_2_1; unsigned long long x_6_2_2; } x_4_1_6; struct { double x_7_2_1; } x_4_1_7; } x4; } * _batch;
    long long  _batchOffset;
    NSArray * _batchValues;
    bool  _canceled;
    bool  _complete;
    CXIndex * _index;
    struct __SIJobRef { } * _job;
    struct __SIResultQueue { } * _resultQueue;
    NSObject<OS_dispatch_semaphore> * _semaphore;
    struct __SIQuery { } * _siQuery;
    bool  _started;
    bool  _waiting;
}

@property (nonatomic, readonly) struct { int x1; struct __SIJobRef {} *x2; struct { unsigned char x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; unsigned char x_3_1_4; unsigned char x_3_1_5; unsigned char x_3_1_6; unsigned char x_3_1_7; unsigned char x_3_1_8; unsigned char x_3_1_9; unsigned char x_3_1_10; unsigned char x_3_1_11; unsigned char x_3_1_12; unsigned char x_3_1_13; unsigned char x_3_1_14; unsigned char x_3_1_15; unsigned char x_3_1_16; } x3; union { struct { struct __MDStoreOIDArray {} *x_1_2_1; struct __MDPlistBytes {} *x_1_2_2; long long x_1_2_3; } x_4_1_1; struct { long long x_2_2_1; } x_4_1_2; struct { struct __MDStoreOIDArray {} *x_3_2_1; struct __MDPlistBytes {} *x_3_2_2; long long x_3_2_3; int x_3_2_4; } x_4_1_3; struct __MDPlistBytes {} *x_4_1_4; struct __MDPlistBytes {} *x_4_1_5; struct { char *x_6_2_1; unsigned long long x_6_2_2; } x_4_1_6; struct { double x_7_2_1; } x_4_1_7; } x4; }*batch;
@property (nonatomic, readonly) long long batchOffset;
@property (nonatomic, readonly) NSArray *batchValues;
@property (nonatomic, readonly) bool canceled;
@property (nonatomic, readonly) bool complete;
@property (nonatomic, readonly) CXIndex *index;
@property (nonatomic, readonly) struct __SIJobRef { }*job;
@property (nonatomic, readonly) struct __SIResultQueue { }*resultQueue;
@property (nonatomic, readonly) NSObject<OS_dispatch_semaphore> *semaphore;
@property (nonatomic, readonly) struct __SIQuery { }*siQuery;
@property (nonatomic, readonly) bool started;
@property (nonatomic, readonly) bool waiting;

+ (void)initialize;

- (struct { int x1; struct __SIJobRef {} *x2; struct { unsigned char x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; unsigned char x_3_1_4; unsigned char x_3_1_5; unsigned char x_3_1_6; unsigned char x_3_1_7; unsigned char x_3_1_8; unsigned char x_3_1_9; unsigned char x_3_1_10; unsigned char x_3_1_11; unsigned char x_3_1_12; unsigned char x_3_1_13; unsigned char x_3_1_14; unsigned char x_3_1_15; unsigned char x_3_1_16; } x3; union { struct { struct __MDStoreOIDArray {} *x_1_2_1; struct __MDPlistBytes {} *x_1_2_2; long long x_1_2_3; } x_4_1_1; struct { long long x_2_2_1; } x_4_1_2; struct { struct __MDStoreOIDArray {} *x_3_2_1; struct __MDPlistBytes {} *x_3_2_2; long long x_3_2_3; int x_3_2_4; } x_4_1_3; struct __MDPlistBytes {} *x_4_1_4; struct __MDPlistBytes {} *x_4_1_5; struct { char *x_6_2_1; unsigned long long x_6_2_2; } x_4_1_6; struct { double x_7_2_1; } x_4_1_7; } x4; }*)batch;
- (long long)batchOffset;
- (id)batchValues;
- (void)cancel;
- (bool)canceled;
- (bool)complete;
- (void)dealloc;
- (bool)findDocuments:(unsigned int*)arg1 docNames:(id*)arg2 valueLists:(id*)arg3 maxCount:(unsigned int)arg4 timeOut:(double)arg5 foundCount:(unsigned int*)arg6;
- (unsigned int)getResults:(unsigned int*)arg1 docNames:(id*)arg2 valueLists:(id*)arg3 maxCount:(unsigned int)arg4;
- (id)index;
- (id)initWithSting:(id)arg1 forIndex:(id)arg2 withOptions:(id)arg3;
- (struct __SIJobRef { }*)job;
- (void)processResults:(bool)arg1;
- (struct __SIResultQueue { }*)resultQueue;
- (id)semaphore;
- (struct __SIQuery { }*)siQuery;
- (bool)start;
- (bool)started;
- (bool)waiting;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLPublishingAgent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibrary.framework/PLPublishingAgent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary (1.0)
 */

@interface PLPublishingAgent : NSObject <PLDataArrayInputStreamProgressDelegate> {
    bool  _allowsHDOver3GUpload;
    long long  _approximateHDUploadSize;
    long long  _approximateSDUploadSize;
    double  _changeRate;
    SEL  _completionSelector;
    long long  _currentValue;
    id  _delegate;
    bool  _deleteAfterPublishing;
    bool  _enableHDUpload;
    double  _endTime;
    double  _estimatedTimeRemaining;
    long long  _maxValue;
    NSData * _mediaData;
    bool  _mediaIsHDVideo;
    NSString * _mediaPath;
    NSString * _mimeType;
    bool  _needsRemaking;
    bool  _needsTrimming;
    long long  _normalizedCurrentValue;
    long long  _normalizedMaxValue;
    bool  _ownerIsCamera;
    float  _percentComplete;
    float  _progressMultiplier;
    unsigned int  _publishing;
    PLVideoRemaker * _remaker;
    int  _remakerMode;
    unsigned int  _remaking;
    float  _remakingPercentComplete;
    unsigned int  _remakingWasCancelled;
    int  _selectedOption;
    bool  _shouldCancelPublish;
    NSMutableArray * _snapshotTimes;
    NSMutableArray * _snapshotValues;
    double  _startTime;
    id  _userInfo;
}

@property (nonatomic, readonly) bool allowsCellularAccessForRequests;
@property (nonatomic) bool allowsHDOver3GUpload;
@property (nonatomic) long long approximateHDUploadSize;
@property (nonatomic) long long approximateSDUploadSize;
@property (nonatomic) <PLPublishingAgentDelegate> *delegate;
@property (nonatomic) bool enableHDUpload;
@property (nonatomic) bool mediaIsHDVideo;
@property (nonatomic) bool needsTrimming;
@property (nonatomic) bool ownerIsCamera;
@property (nonatomic) float progressMultiplier;
@property (nonatomic) int remakerMode;
@property (nonatomic) int selectedOption;
@property (nonatomic) bool shouldCancelPublish;

+ (bool)canUploadHDVideoOverCellular;
+ (id)publishingAgentForBundleNamed:(id)arg1 toPublishMedia:(id)arg2;

- (void)_agentIsReadyToPublish:(id)arg1;
- (void)_cancelRemaking:(id)arg1;
- (void)_networkReachabilityDidChange:(id)arg1;
- (void)_remakerDidFinish:(id)arg1;
- (int)_remakerModeForSelectedOption;
- (void)_setApproximateVideoUploadSizes;
- (void)_setUpPublishingParams;
- (void)_startNetworkObservation;
- (void)_stopNetworkObservation;
- (void)_transcodeVideo:(id)arg1;
- (void)_updateStatisticsFromSnapshots;
- (bool)allowsCellularAccessForRequests;
- (bool)allowsHDOver3GUpload;
- (bool)allowsTellingFriend;
- (bool)allowsViewingOnHost;
- (long long)approximateHDUploadSize;
- (long long)approximateSDUploadSize;
- (void)cancelButtonClicked;
- (void)cancelRemaking;
- (void)dataArrayInputStreamBytesWereRead:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (bool)deleteMediaFileAfterPublishing;
- (void)dismiss;
- (void)doneButtonClicked;
- (bool)enableHDUpload;
- (double)estimatedTimeRemaining;
- (id)initWithMedia:(id)arg1;
- (bool)isPublishing;
- (bool)isRemaking;
- (bool)isVideoMedia;
- (double)maximumVideoDuration;
- (id)mediaData;
- (bool)mediaIsHDVideo;
- (id)mediaPath;
- (id)mediaTitle;
- (id)mediaURL;
- (id)navigationController;
- (bool)needsTrimming;
- (bool)ownerIsCamera;
- (float)percentComplete;
- (void)presentModalSheetInViewController:(id)arg1;
- (float)progressMultiplier;
- (id)progressViewMessageDuringRemake;
- (void)publish;
- (int)remakerMode;
- (float)remakingPercentComplete;
- (void)resignPublishingSheetResponders;
- (int)selectedOption;
- (id)serviceName;
- (void)setAllowsHDOver3GUpload:(bool)arg1;
- (void)setApproximateHDUploadSize:(long long)arg1;
- (void)setApproximateSDUploadSize:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeleteMediaFileAfterPublishing:(bool)arg1;
- (void)setEnableHDUpload:(bool)arg1;
- (void)setMediaData:(id)arg1;
- (void)setMediaIsHDVideo:(bool)arg1;
- (void)setMediaPath:(id)arg1;
- (void)setNeedsTrimming:(bool)arg1;
- (void)setOwnerIsCamera:(bool)arg1;
- (void)setProgressMultiplier:(float)arg1;
- (void)setPublishing:(bool)arg1;
- (void)setRemakerMode:(int)arg1;
- (void)setSelectedOption:(int)arg1;
- (void)setShouldCancelPublish:(bool)arg1;
- (void)setTotalBytesWritten:(long long)arg1 totalBytes:(long long)arg2;
- (void)setTrimStartTime:(double)arg1 andEndTime:(double)arg2;
- (void)setUserInfo:(id)arg1;
- (bool)shouldCancelPublish;
- (void)showAlertWithError:(id)arg1;
- (void)snapshot;
- (id)tellAFriendBody;
- (id)tellAFriendSubject;
- (id)tellAFriendURL;
- (id)userInfo;
- (void)videoRemaker:(id)arg1 progressDidChange:(float)arg2;
- (void)videoRemakerDidBeginRemaking:(id)arg1;
- (void)videoRemakerDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;
- (void)willDismiss;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

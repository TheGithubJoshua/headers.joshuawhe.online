<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSRTFWriter.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIFoundation.framework/NSRTFWriter.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation (553)
 */

@interface NSRTFWriter : NSObject {
    NSMapTable * _attachmentData;
    NSAttributedString * _attrString;
    unsigned long long  _attrStringLength;
    NSMutableDictionary * _colors;
    id  _curBackgroundColor;
    id  _curBaselineOffset;
    unsigned int  _curEncoding;
    id  _curFont;
    id  _curForegroundColor;
    id  _curKern;
    id  _curParagraphStyle;
    id  _curSuperscript;
    int  _curTraits;
    id  _curUnderlineStyle;
    NSDictionary * _docAttrs;
    NSFileWrapper * _document;
    NSMutableDictionary * _fontNames;
    void * _layoutSections;
    NSMutableArray * _listRanges;
    NSMutableData * _output;
    double  _rightMargin;
    struct { 
        unsigned int _forceColorWrite : 1; 
        unsigned int _activeFontFeatures : 1; 
        unsigned int _preserveNaturalAlignment : 1; 
        unsigned int _reserved : 29; 
    }  _rwFlags;
}

+ (id)RTFDataForDate:(id)arg1;
+ (id)RTFDataForString:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 encoding:(unsigned int)arg3;
+ (void)initialize;

- (id)RTF;
- (id)RTFD;
- (id)RTFDFileWrapper;
- (id)_RTFDFileWrapper;
- (id)_attachmentData;
- (int)_mostCompatibleCharset:(id)arg1;
- (id)_plainFontNameForFont:(id)arg1;
- (void)_setPreserveNaturalAlignment:(bool)arg1;
- (void)_setRTFDFileWrapper:(id)arg1;
- (void)_writeCharacters:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)_writeVersionsAndEncodings;
- (void)collectResources;
- (void)dealloc;
- (id)documentAttribute:(id)arg1;
- (id)documentAttributes;
- (id)initWithAttributedString:(id)arg1;
- (void)restoreAttributes:(id)arg1;
- (void)setDocumentAttributes:(id)arg1;
- (unsigned long long)textFlowWithAttributes:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)writeAttachment:(id)arg1 editableData:(id)arg2 editableTypeIdentifier:(id)arg3;
- (void)writeBackgroundColor;
- (void)writeBaselineOffset:(id)arg1;
- (void)writeBody;
- (bool)writeCellTerminator:(id)arg1 atIndex:(unsigned long long)arg2 nestingLevel:(unsigned long long)arg3;
- (void)writeCharacterAttributes:(id)arg1 previousAttributes:(id)arg2;
- (void)writeCharacterShape:(id)arg1;
- (void)writeColor:(id)arg1 type:(unsigned long long)arg2;
- (void)writeColorTable;
- (void)writeDate:(id)arg1;
- (void)writeDateDocumentAttribute:(id)arg1 withRTFKeyword:(const char *)arg2;
- (void)writeDefaultTabInterval;
- (void)writeEscapedUTF8String:(id)arg1;
- (void)writeExpansion:(id)arg1;
- (void)writeFont:(id)arg1 forceFontNumber:(bool)arg2;
- (void)writeFontTable;
- (void)writeGlyphInfo:(id)arg1;
- (void)writeHeader;
- (void)writeHyphenation;
- (void)writeInfo;
- (void)writeKern:(id)arg1;
- (void)writeKeywordsDocumentAttribute;
- (void)writeLigature:(id)arg1;
- (bool)writeLinkInfo:(id)arg1;
- (void)writeListTable;
- (void)writeObliqueness:(id)arg1;
- (void)writePaperSize;
- (void)writeParagraphStyle:(id)arg1;
- (void)writeRTF;
- (void)writeShadow:(id)arg1;
- (void)writeStrikethroughStyle:(id)arg1;
- (void)writeStringDocumentAttribute:(id)arg1 withRTFKeyword:(const char *)arg2;
- (void)writeStrokeWidth:(id)arg1;
- (void)writeStyleSheetTable;
- (void)writeSuperscript:(id)arg1;
- (void)writeTableHeader:(id)arg1 atIndex:(unsigned long long)arg2 nestingLevel:(unsigned long long)arg3;
- (void)writeTextFlow:(unsigned long long)arg1;
- (void)writeUnderlineStyle:(id)arg1 allowStrikethrough:(bool)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

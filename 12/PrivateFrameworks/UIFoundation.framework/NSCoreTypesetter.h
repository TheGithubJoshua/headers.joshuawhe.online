<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSCoreTypesetter.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIFoundation.framework/NSCoreTypesetter.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation (553)
 */

@interface NSCoreTypesetter : NSTypesetter {
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  characterRange;
    <NSCoreTypesetterDelegate> * delegate;
    id /* block */  laidOutLineFragment;
    struct CGSize { 
        double width; 
        double height; 
    }  textContainerSize;
}

@property struct _NSRange { unsigned long long x1; unsigned long long x2; } characterRange;
@property <NSCoreTypesetterDelegate> *delegate;
@property (copy) id /* block */ laidOutLineFragment;
@property struct CGSize { double x1; double x2; } textContainerSize;

+ (bool)_allowsDefaultLineBreakStrategy;
+ (void)_lineMetricsForAttributes:(id)arg1 typesetterBehavior:(long long)arg2 usesFontLeading:(bool)arg3 applySpacings:(bool)arg4 usesSystemFontLeading:(bool)arg5 usesNegativeFontLeading:(bool)arg6 lineHeight:(double*)arg7 baselineOffset:(double*)arg8 spacing:(double*)arg9 applicationFrameworkContext:(long long)arg10;
+ (void)_lineMetricsFromAttributedString:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 typesetterBehavior:(long long)arg3 usesFontLeading:(bool)arg4 applySpacings:(bool)arg5 usesSystemFontLeading:(bool)arg6 usesNegativeFontLeading:(bool)arg7 lineHeight:(double*)arg8 baselineOffset:(double*)arg9 spacing:(double*)arg10 applicationFrameworkContext:(long long)arg11;
+ (void)_maximumAscentAndDescentForRuns:(struct __CFArray { }*)arg1 ascender:(double*)arg2 descender:(double*)arg3;
+ (bool)_supportsStringDrawingPath:(unsigned char)arg1;

- (void).cxx_destruct;
- (int)_NSFastDrawString:(id)arg1 length:(unsigned long long)arg2 attributes:(id)arg3 paragraphStyle:(id)arg4 typesetterBehavior:(long long)arg5 lineBreakMode:(long long)arg6 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg7 padding:(double)arg8 cgContext:(struct CGContext { }*)arg9 baselineRendering:(bool)arg10 usesFontLeading:(bool)arg11 usesScreenFont:(bool)arg12 scrollable:(bool)arg13 syncAlignment:(bool)arg14 mirrored:(bool)arg15 boundingRectPointer:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg16 baselineOffsetPointer:(double*)arg17 wantsTextLineFragments:(bool)arg18 applicationFrameworkContext:(long long)arg19;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_stringDrawingCoreTextEngineWithOriginalString:(id)arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 padding:(double)arg3 context:(struct CGContext { }*)arg4 forceClipping:(bool)arg5 styledTextOptions:(id)arg6 attributes:(id)arg7 stringDrawingOptions:(long long)arg8 drawingContext:(id)arg9 wantsTextLineFragments:(bool)arg10 validatedAttributedString:(id)arg11 firstNonRenderedCharacterIndex:(long long*)arg12 foundSoftHyphenAtEOL:(bool*)arg13 enginePathUsed:(unsigned char*)arg14;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })characterRange;
- (void)dealloc;
- (id)delegate;
- (id)init;
- (id /* block */)laidOutLineFragment;
- (void)layout;
- (void)setCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setLaidOutLineFragment:(id /* block */)arg1;
- (void)setTextContainerSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })textContainerSize;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPCModelGenericAVItemAssetLoadResult.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MediaPlaybackCore.framework/MPCModelGenericAVItemAssetLoadResult.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore (1)
 */

@interface MPCModelGenericAVItemAssetLoadResult : NSObject {
    bool  _allowsAssetCaching;
    bool  _allowsAssetInfoCaching;
    NSURL * _alternateHLSKeyCertificateURL;
    NSURL * _alternateHLSKeyServerURL;
    NSURL * _alternateHLSPlaylistURL;
    NSString * _assetPathExtension;
    long long  _assetProtectionType;
    long long  _assetQualityType;
    NSURL * _assetURL;
    bool  _iTunesStoreStream;
    bool  _isCloudStreamingAsset;
    bool  _isHLSAsset;
    bool  _isHomeSharingAsset;
    NSURL * _protectedContentSupportStorageFileURL;
    NSDictionary * _purchaseBundleDictionary;
    NSURL * _streamingKeyCertificateURL;
    NSURL * _streamingKeyServerURL;
    id  _suzeLeaseID;
    id /* block */  _willBecomeActivePlayerItemHandler;
}

@property (nonatomic) bool allowsAssetCaching;
@property (nonatomic) bool allowsAssetInfoCaching;
@property (nonatomic, copy) NSURL *alternateHLSKeyCertificateURL;
@property (nonatomic, copy) NSURL *alternateHLSKeyServerURL;
@property (nonatomic, copy) NSURL *alternateHLSPlaylistURL;
@property (nonatomic, copy) NSString *assetPathExtension;
@property (nonatomic) long long assetProtectionType;
@property (nonatomic) long long assetQualityType;
@property (nonatomic, copy) NSURL *assetURL;
@property (nonatomic, readonly) bool hasValidAsset;
@property (getter=isiTunesStoreStream, nonatomic) bool iTunesStoreStream;
@property (nonatomic) bool isCloudStreamingAsset;
@property (nonatomic) bool isHLSAsset;
@property (nonatomic) bool isHomeSharingAsset;
@property (nonatomic, copy) NSURL *protectedContentSupportStorageFileURL;
@property (nonatomic, copy) NSDictionary *purchaseBundleDictionary;
@property (nonatomic, copy) NSURL *streamingKeyCertificateURL;
@property (nonatomic, copy) NSURL *streamingKeyServerURL;
@property (nonatomic, retain) id suzeLeaseID;
@property (nonatomic, copy) id /* block */ willBecomeActivePlayerItemHandler;

+ (id)assetLoadResultWithStoreAssetPlaybackResponse:(id)arg1 assetLoadProperties:(id)arg2 error:(id*)arg3;

- (void).cxx_destruct;
- (bool)allowsAssetCaching;
- (bool)allowsAssetInfoCaching;
- (id)alternateHLSKeyCertificateURL;
- (id)alternateHLSKeyServerURL;
- (id)alternateHLSPlaylistURL;
- (id)assetPathExtension;
- (long long)assetProtectionType;
- (long long)assetQualityType;
- (id)assetURL;
- (bool)hasValidAsset;
- (bool)isCloudStreamingAsset;
- (bool)isHLSAsset;
- (bool)isHomeSharingAsset;
- (bool)isiTunesStoreStream;
- (id)protectedContentSupportStorageFileURL;
- (id)purchaseBundleDictionary;
- (void)setAllowsAssetCaching:(bool)arg1;
- (void)setAllowsAssetInfoCaching:(bool)arg1;
- (void)setAlternateHLSKeyCertificateURL:(id)arg1;
- (void)setAlternateHLSKeyServerURL:(id)arg1;
- (void)setAlternateHLSPlaylistURL:(id)arg1;
- (void)setAssetPathExtension:(id)arg1;
- (void)setAssetProtectionType:(long long)arg1;
- (void)setAssetQualityType:(long long)arg1;
- (void)setAssetURL:(id)arg1;
- (void)setITunesStoreStream:(bool)arg1;
- (void)setIsCloudStreamingAsset:(bool)arg1;
- (void)setIsHLSAsset:(bool)arg1;
- (void)setIsHomeSharingAsset:(bool)arg1;
- (void)setProtectedContentSupportStorageFileURL:(id)arg1;
- (void)setPurchaseBundleDictionary:(id)arg1;
- (void)setStreamingKeyCertificateURL:(id)arg1;
- (void)setStreamingKeyServerURL:(id)arg1;
- (void)setSuzeLeaseID:(id)arg1;
- (void)setWillBecomeActivePlayerItemHandler:(id /* block */)arg1;
- (id)streamingKeyCertificateURL;
- (id)streamingKeyServerURL;
- (id)suzeLeaseID;
- (id /* block */)willBecomeActivePlayerItemHandler;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

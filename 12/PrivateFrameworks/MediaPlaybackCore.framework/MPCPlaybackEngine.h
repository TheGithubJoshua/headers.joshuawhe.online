<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPCPlaybackEngine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MediaPlaybackCore.framework/MPCPlaybackEngine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore (1)
 */

@interface MPCPlaybackEngine : NSObject <MPCExplicitContentAuthorizationDelegate> {
    NSString * _audioSessionCategory;
    <MPCPlaybackEngineDelegate> * _delegate;
    MPProtocolProxy<MPCPlaybackEngineEventObserving> * _eventObserver;
    MPCPlaybackIntent * _fallbackPlaybackIntent;
    _MPCAVController * _implementation;
    _MPCLeaseManager * _leaseManager;
    _MPCMediaRemotePublisher * _mediaRemotePublisher;
    bool  _pictureInPictureSupported;
    NSString * _playerID;
    _MPCReportingController * _reportingController;
    bool  _scheduledPlaybackStatePreservation;
    bool  _stateRestorationSupported;
    bool  _systemMusicApplication;
    bool  _videoSupported;
}

@property (nonatomic, copy) NSString *audioSessionCategory;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MPCPlaybackEngineDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) MPProtocolProxy<MPCPlaybackEngineEventObserving> *eventObserver;
@property (nonatomic, retain) MPCPlaybackIntent *fallbackPlaybackIntent;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) _MPCAVController *implementation;
@property (nonatomic, readonly) _MPCLeaseManager *leaseManager;
@property (nonatomic, readonly) _MPCMediaRemotePublisher *mediaRemotePublisher;
@property (getter=isPictureInPictureSupported, nonatomic) bool pictureInPictureSupported;
@property (nonatomic, readonly, copy) NSString *playerID;
@property (nonatomic, readonly) MPCPlayerPath *playerPath;
@property (nonatomic, readonly) _MPCReportingController *reportingController;
@property (getter=hasScheduledPlaybackStatePreservation, nonatomic) bool scheduledPlaybackStatePreservation;
@property (getter=isStateRestorationSupported, nonatomic) bool stateRestorationSupported;
@property (readonly) Class superclass;
@property (getter=isSystemMusicApplication, nonatomic) bool systemMusicApplication;
@property (getter=isVideoSupported, nonatomic) bool videoSupported;
@property (nonatomic, readonly) UIView *videoView;

+ (void)preheatPlayback;
+ (bool)requiresMainThread;

- (void).cxx_destruct;
- (void)_initializePlaybackStack;
- (void)_preservePlaybackStateImmediately;
- (void)_restorePlaybackStateWithCompletion:(id /* block */)arg1;
- (void)addEngineObserver:(id)arg1;
- (void)addSupportedSpecializedQueueIdentifier:(id)arg1 localizedName:(id)arg2 queueType:(long long)arg3 queueParameters:(id)arg4;
- (id)audioSessionCategory;
- (void)becomeActive;
- (id)delegate;
- (id)eventObserver;
- (id)fallbackPlaybackIntent;
- (bool)hasScheduledPlaybackStatePreservation;
- (id)implementation;
- (id)initWithPlayerID:(id)arg1;
- (bool)isPictureInPictureSupported;
- (bool)isStateRestorationSupported;
- (bool)isSystemMusicApplication;
- (bool)isVideoSupported;
- (id)leaseManager;
- (id)mediaRemotePublisher;
- (id)playerID;
- (id)playerPath;
- (void)removeEngineObserver:(id)arg1;
- (void)removeSupportedSpecializedQueueIdentifier:(id)arg1;
- (void)reportUserSeekFromTime:(double)arg1 toTime:(double)arg2;
- (id)reportingController;
- (void)requestAuthorizationForExplicitItem:(id)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (void)restoreStateWithCompletion:(id /* block */)arg1;
- (void)schedulePlaybackStatePreservation;
- (void)setAudioSessionCategory:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFallbackPlaybackIntent:(id)arg1;
- (void)setPictureInPictureSupported:(bool)arg1;
- (void)setScheduledPlaybackStatePreservation:(bool)arg1;
- (void)setStateRestorationSupported:(bool)arg1;
- (void)setSystemMusicApplication:(bool)arg1;
- (void)setVideoSupported:(bool)arg1;
- (void)start;
- (id)videoView;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

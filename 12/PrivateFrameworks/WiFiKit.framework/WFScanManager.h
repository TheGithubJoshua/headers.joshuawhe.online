<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WFScanManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WiFiKit.framework/WFScanManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WiFiKit.framework/WiFiKit (1)
 */

@interface WFScanManager : NSObject {
    unsigned long long  _consecutiveZeroFilteredScanResults;
    unsigned long long  _consecutiveZeroUnFilteredScanResults;
    <WFScanManagerDelegate> * _delegate;
    bool  _doUnFilteredScanning;
    bool  _hotspotHelperScanning;
    NSMutableSet * _hotspotPluginNetworks;
    WFInterface * _interface;
    NSObject<OS_dispatch_queue> * _internalQueue;
    NSMutableSet * _networks;
    NSObject<OS_dispatch_queue> * _scanDispatchQueue;
    double  _scanInterval;
    NSMutableArray * _scanQueue;
    id /* block */  _singleScanBlock;
    long long  _state;
    bool  _supportsHotspotHelper;
    bool  _supportsUnfilteredScanning;
}

@property unsigned long long consecutiveZeroFilteredScanResults;
@property unsigned long long consecutiveZeroUnFilteredScanResults;
@property (nonatomic) <WFScanManagerDelegate> *delegate;
@property bool doUnFilteredScanning;
@property (nonatomic) bool hotspotHelperScanning;
@property (nonatomic, retain) NSMutableSet *hotspotPluginNetworks;
@property (nonatomic, retain) WFInterface *interface;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *internalQueue;
@property (nonatomic, retain) NSMutableSet *networks;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *scanDispatchQueue;
@property (nonatomic) double scanInterval;
@property (nonatomic, retain) NSMutableArray *scanQueue;
@property (nonatomic, copy) id /* block */ singleScanBlock;
@property (nonatomic) long long state;
@property (nonatomic) bool supportsHotspotHelper;
@property (nonatomic) bool supportsUnfilteredScanning;

- (void).cxx_destruct;
- (void)_cancelQueuedScan;
- (void)_checkForNoNetworksFound;
- (bool)_isScanning;
- (void)_processNextScan;
- (void)_queueScan;
- (void)_scan;
- (void)_scanningDidFinish;
- (void)_scanningWillStart;
- (void)_startHotspotPluginScan;
- (void)_stopNetworkPluginScan;
- (void)_updatePartialScanResults:(id)arg1;
- (unsigned long long)consecutiveZeroFilteredScanResults;
- (unsigned long long)consecutiveZeroUnFilteredScanResults;
- (id)delegate;
- (bool)doUnFilteredScanning;
- (id)hotspotHelperForScanRecord:(id)arg1;
- (bool)hotspotHelperScanning;
- (id)hotspotPluginNetworks;
- (id)init;
- (id)initWithScanInterval:(double)arg1 delegate:(id)arg2;
- (id)interface;
- (id)internalQueue;
- (id)networks;
- (void)pause;
- (void)resume;
- (id)scanDispatchQueue;
- (double)scanInterval;
- (id)scanQueue;
- (void)setConsecutiveZeroFilteredScanResults:(unsigned long long)arg1;
- (void)setConsecutiveZeroUnFilteredScanResults:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDoUnFilteredScanning:(bool)arg1;
- (void)setHotspotHelperScanning:(bool)arg1;
- (void)setHotspotPluginNetworks:(id)arg1;
- (void)setInterface:(id)arg1;
- (void)setInternalQueue:(id)arg1;
- (void)setNetworks:(id)arg1;
- (void)setScanDispatchQueue:(id)arg1;
- (void)setScanInterval:(double)arg1;
- (void)setScanQueue:(id)arg1;
- (void)setSingleScanBlock:(id /* block */)arg1;
- (void)setState:(long long)arg1;
- (void)setSupportsHotspotHelper:(bool)arg1;
- (void)setSupportsUnfilteredScanning:(bool)arg1;
- (id /* block */)singleScanBlock;
- (void)start;
- (long long)state;
- (void)stop;
- (bool)supportsHotspotHelper;
- (bool)supportsUnfilteredScanning;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDHomeKitHomeConfiguration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/AWDHomeKitHomeConfiguration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface AWDHomeKitHomeConfiguration : PBCodable <NSCopying> {
    NSMutableArray * _eventTriggers;
    struct { 
        unsigned int numAccessories : 1; 
        unsigned int numAccessoryServiceGroups : 1; 
        unsigned int numAdmins : 1; 
        unsigned int numAppleAudioAccessories : 1; 
        unsigned int numAppleMediaAccessories : 1; 
        unsigned int numAppleTVAccessories : 1; 
        unsigned int numBridgedAccessories : 1; 
        unsigned int numBridgedTargetControllers : 1; 
        unsigned int numCameraAccessories : 1; 
        unsigned int numCertifiedAccessories : 1; 
        unsigned int numCertifiedBridgedTargetControllers : 1; 
        unsigned int numCertifiedTargetControllers : 1; 
        unsigned int numConfiguredScenes : 1; 
        unsigned int numEventTriggers : 1; 
        unsigned int numHAPAccessories : 1; 
        unsigned int numMediaSystems : 1; 
        unsigned int numNotCertifiedAccessories : 1; 
        unsigned int numResidentsEnabled : 1; 
        unsigned int numRooms : 1; 
        unsigned int numScenes : 1; 
        unsigned int numServices : 1; 
        unsigned int numTargetControllers : 1; 
        unsigned int numTelevisionAccessories : 1; 
        unsigned int numTimerTriggers : 1; 
        unsigned int numTriggers : 1; 
        unsigned int numUsers : 1; 
        unsigned int numWholeHouseAudioAccessories : 1; 
        unsigned int numZones : 1; 
        unsigned int isOwner : 1; 
        unsigned int isPrimaryResident : 1; 
        unsigned int isResidentAvailable : 1; 
        unsigned int primaryReportingDevice : 1; 
    }  _has;
    bool  _isOwner;
    bool  _isPrimaryResident;
    bool  _isResidentAvailable;
    unsigned int  _numAccessories;
    unsigned int  _numAccessoryServiceGroups;
    unsigned int  _numAdmins;
    unsigned int  _numAppleAudioAccessories;
    unsigned int  _numAppleMediaAccessories;
    unsigned int  _numAppleTVAccessories;
    unsigned int  _numBridgedAccessories;
    unsigned int  _numBridgedTargetControllers;
    unsigned int  _numCameraAccessories;
    unsigned int  _numCertifiedAccessories;
    unsigned int  _numCertifiedBridgedTargetControllers;
    unsigned int  _numCertifiedTargetControllers;
    unsigned int  _numConfiguredScenes;
    unsigned int  _numEventTriggers;
    unsigned int  _numHAPAccessories;
    unsigned int  _numMediaSystems;
    unsigned int  _numNotCertifiedAccessories;
    unsigned int  _numResidentsEnabled;
    unsigned int  _numRooms;
    unsigned int  _numScenes;
    unsigned int  _numServices;
    unsigned int  _numTargetControllers;
    unsigned int  _numTelevisionAccessories;
    unsigned int  _numTimerTriggers;
    unsigned int  _numTriggers;
    unsigned int  _numUsers;
    unsigned int  _numWholeHouseAudioAccessories;
    unsigned int  _numZones;
    bool  _primaryReportingDevice;
}

@property (nonatomic, retain) NSMutableArray *eventTriggers;
@property (nonatomic) bool hasIsOwner;
@property (nonatomic) bool hasIsPrimaryResident;
@property (nonatomic) bool hasIsResidentAvailable;
@property (nonatomic) bool hasNumAccessories;
@property (nonatomic) bool hasNumAccessoryServiceGroups;
@property (nonatomic) bool hasNumAdmins;
@property (nonatomic) bool hasNumAppleAudioAccessories;
@property (nonatomic) bool hasNumAppleMediaAccessories;
@property (nonatomic) bool hasNumAppleTVAccessories;
@property (nonatomic) bool hasNumBridgedAccessories;
@property (nonatomic) bool hasNumBridgedTargetControllers;
@property (nonatomic) bool hasNumCameraAccessories;
@property (nonatomic) bool hasNumCertifiedAccessories;
@property (nonatomic) bool hasNumCertifiedBridgedTargetControllers;
@property (nonatomic) bool hasNumCertifiedTargetControllers;
@property (nonatomic) bool hasNumConfiguredScenes;
@property (nonatomic) bool hasNumEventTriggers;
@property (nonatomic) bool hasNumHAPAccessories;
@property (nonatomic) bool hasNumMediaSystems;
@property (nonatomic) bool hasNumNotCertifiedAccessories;
@property (nonatomic) bool hasNumResidentsEnabled;
@property (nonatomic) bool hasNumRooms;
@property (nonatomic) bool hasNumScenes;
@property (nonatomic) bool hasNumServices;
@property (nonatomic) bool hasNumTargetControllers;
@property (nonatomic) bool hasNumTelevisionAccessories;
@property (nonatomic) bool hasNumTimerTriggers;
@property (nonatomic) bool hasNumTriggers;
@property (nonatomic) bool hasNumUsers;
@property (nonatomic) bool hasNumWholeHouseAudioAccessories;
@property (nonatomic) bool hasNumZones;
@property (nonatomic) bool hasPrimaryReportingDevice;
@property (nonatomic) bool isOwner;
@property (nonatomic) bool isPrimaryResident;
@property (nonatomic) bool isResidentAvailable;
@property (nonatomic) unsigned int numAccessories;
@property (nonatomic) unsigned int numAccessoryServiceGroups;
@property (nonatomic) unsigned int numAdmins;
@property (nonatomic) unsigned int numAppleAudioAccessories;
@property (nonatomic) unsigned int numAppleMediaAccessories;
@property (nonatomic) unsigned int numAppleTVAccessories;
@property (nonatomic) unsigned int numBridgedAccessories;
@property (nonatomic) unsigned int numBridgedTargetControllers;
@property (nonatomic) unsigned int numCameraAccessories;
@property (nonatomic) unsigned int numCertifiedAccessories;
@property (nonatomic) unsigned int numCertifiedBridgedTargetControllers;
@property (nonatomic) unsigned int numCertifiedTargetControllers;
@property (nonatomic) unsigned int numConfiguredScenes;
@property (nonatomic) unsigned int numEventTriggers;
@property (nonatomic) unsigned int numHAPAccessories;
@property (nonatomic) unsigned int numMediaSystems;
@property (nonatomic) unsigned int numNotCertifiedAccessories;
@property (nonatomic) unsigned int numResidentsEnabled;
@property (nonatomic) unsigned int numRooms;
@property (nonatomic) unsigned int numScenes;
@property (nonatomic) unsigned int numServices;
@property (nonatomic) unsigned int numTargetControllers;
@property (nonatomic) unsigned int numTelevisionAccessories;
@property (nonatomic) unsigned int numTimerTriggers;
@property (nonatomic) unsigned int numTriggers;
@property (nonatomic) unsigned int numUsers;
@property (nonatomic) unsigned int numWholeHouseAudioAccessories;
@property (nonatomic) unsigned int numZones;
@property (nonatomic) bool primaryReportingDevice;

+ (Class)eventTriggersType;

- (void).cxx_destruct;
- (void)addEventTriggers:(id)arg1;
- (void)clearEventTriggers;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)eventTriggers;
- (id)eventTriggersAtIndex:(unsigned long long)arg1;
- (unsigned long long)eventTriggersCount;
- (bool)hasIsOwner;
- (bool)hasIsPrimaryResident;
- (bool)hasIsResidentAvailable;
- (bool)hasNumAccessories;
- (bool)hasNumAccessoryServiceGroups;
- (bool)hasNumAdmins;
- (bool)hasNumAppleAudioAccessories;
- (bool)hasNumAppleMediaAccessories;
- (bool)hasNumAppleTVAccessories;
- (bool)hasNumBridgedAccessories;
- (bool)hasNumBridgedTargetControllers;
- (bool)hasNumCameraAccessories;
- (bool)hasNumCertifiedAccessories;
- (bool)hasNumCertifiedBridgedTargetControllers;
- (bool)hasNumCertifiedTargetControllers;
- (bool)hasNumConfiguredScenes;
- (bool)hasNumEventTriggers;
- (bool)hasNumHAPAccessories;
- (bool)hasNumMediaSystems;
- (bool)hasNumNotCertifiedAccessories;
- (bool)hasNumResidentsEnabled;
- (bool)hasNumRooms;
- (bool)hasNumScenes;
- (bool)hasNumServices;
- (bool)hasNumTargetControllers;
- (bool)hasNumTelevisionAccessories;
- (bool)hasNumTimerTriggers;
- (bool)hasNumTriggers;
- (bool)hasNumUsers;
- (bool)hasNumWholeHouseAudioAccessories;
- (bool)hasNumZones;
- (bool)hasPrimaryReportingDevice;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isOwner;
- (bool)isPrimaryResident;
- (bool)isResidentAvailable;
- (void)mergeFrom:(id)arg1;
- (unsigned int)numAccessories;
- (unsigned int)numAccessoryServiceGroups;
- (unsigned int)numAdmins;
- (unsigned int)numAppleAudioAccessories;
- (unsigned int)numAppleMediaAccessories;
- (unsigned int)numAppleTVAccessories;
- (unsigned int)numBridgedAccessories;
- (unsigned int)numBridgedTargetControllers;
- (unsigned int)numCameraAccessories;
- (unsigned int)numCertifiedAccessories;
- (unsigned int)numCertifiedBridgedTargetControllers;
- (unsigned int)numCertifiedTargetControllers;
- (unsigned int)numConfiguredScenes;
- (unsigned int)numEventTriggers;
- (unsigned int)numHAPAccessories;
- (unsigned int)numMediaSystems;
- (unsigned int)numNotCertifiedAccessories;
- (unsigned int)numResidentsEnabled;
- (unsigned int)numRooms;
- (unsigned int)numScenes;
- (unsigned int)numServices;
- (unsigned int)numTargetControllers;
- (unsigned int)numTelevisionAccessories;
- (unsigned int)numTimerTriggers;
- (unsigned int)numTriggers;
- (unsigned int)numUsers;
- (unsigned int)numWholeHouseAudioAccessories;
- (unsigned int)numZones;
- (bool)primaryReportingDevice;
- (bool)readFrom:(id)arg1;
- (void)setEventTriggers:(id)arg1;
- (void)setHasIsOwner:(bool)arg1;
- (void)setHasIsPrimaryResident:(bool)arg1;
- (void)setHasIsResidentAvailable:(bool)arg1;
- (void)setHasNumAccessories:(bool)arg1;
- (void)setHasNumAccessoryServiceGroups:(bool)arg1;
- (void)setHasNumAdmins:(bool)arg1;
- (void)setHasNumAppleAudioAccessories:(bool)arg1;
- (void)setHasNumAppleMediaAccessories:(bool)arg1;
- (void)setHasNumAppleTVAccessories:(bool)arg1;
- (void)setHasNumBridgedAccessories:(bool)arg1;
- (void)setHasNumBridgedTargetControllers:(bool)arg1;
- (void)setHasNumCameraAccessories:(bool)arg1;
- (void)setHasNumCertifiedAccessories:(bool)arg1;
- (void)setHasNumCertifiedBridgedTargetControllers:(bool)arg1;
- (void)setHasNumCertifiedTargetControllers:(bool)arg1;
- (void)setHasNumConfiguredScenes:(bool)arg1;
- (void)setHasNumEventTriggers:(bool)arg1;
- (void)setHasNumHAPAccessories:(bool)arg1;
- (void)setHasNumMediaSystems:(bool)arg1;
- (void)setHasNumNotCertifiedAccessories:(bool)arg1;
- (void)setHasNumResidentsEnabled:(bool)arg1;
- (void)setHasNumRooms:(bool)arg1;
- (void)setHasNumScenes:(bool)arg1;
- (void)setHasNumServices:(bool)arg1;
- (void)setHasNumTargetControllers:(bool)arg1;
- (void)setHasNumTelevisionAccessories:(bool)arg1;
- (void)setHasNumTimerTriggers:(bool)arg1;
- (void)setHasNumTriggers:(bool)arg1;
- (void)setHasNumUsers:(bool)arg1;
- (void)setHasNumWholeHouseAudioAccessories:(bool)arg1;
- (void)setHasNumZones:(bool)arg1;
- (void)setHasPrimaryReportingDevice:(bool)arg1;
- (void)setIsOwner:(bool)arg1;
- (void)setIsPrimaryResident:(bool)arg1;
- (void)setIsResidentAvailable:(bool)arg1;
- (void)setNumAccessories:(unsigned int)arg1;
- (void)setNumAccessoryServiceGroups:(unsigned int)arg1;
- (void)setNumAdmins:(unsigned int)arg1;
- (void)setNumAppleAudioAccessories:(unsigned int)arg1;
- (void)setNumAppleMediaAccessories:(unsigned int)arg1;
- (void)setNumAppleTVAccessories:(unsigned int)arg1;
- (void)setNumBridgedAccessories:(unsigned int)arg1;
- (void)setNumBridgedTargetControllers:(unsigned int)arg1;
- (void)setNumCameraAccessories:(unsigned int)arg1;
- (void)setNumCertifiedAccessories:(unsigned int)arg1;
- (void)setNumCertifiedBridgedTargetControllers:(unsigned int)arg1;
- (void)setNumCertifiedTargetControllers:(unsigned int)arg1;
- (void)setNumConfiguredScenes:(unsigned int)arg1;
- (void)setNumEventTriggers:(unsigned int)arg1;
- (void)setNumHAPAccessories:(unsigned int)arg1;
- (void)setNumMediaSystems:(unsigned int)arg1;
- (void)setNumNotCertifiedAccessories:(unsigned int)arg1;
- (void)setNumResidentsEnabled:(unsigned int)arg1;
- (void)setNumRooms:(unsigned int)arg1;
- (void)setNumScenes:(unsigned int)arg1;
- (void)setNumServices:(unsigned int)arg1;
- (void)setNumTargetControllers:(unsigned int)arg1;
- (void)setNumTelevisionAccessories:(unsigned int)arg1;
- (void)setNumTimerTriggers:(unsigned int)arg1;
- (void)setNumTriggers:(unsigned int)arg1;
- (void)setNumUsers:(unsigned int)arg1;
- (void)setNumWholeHouseAudioAccessories:(unsigned int)arg1;
- (void)setNumZones:(unsigned int)arg1;
- (void)setPrimaryReportingDevice:(bool)arg1;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

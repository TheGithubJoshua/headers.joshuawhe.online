<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDAppleMediaAccessory.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDAppleMediaAccessory.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDAppleMediaAccessory : HMDMediaAccessory <HMDAccessoryUserManagement, HMFLogging> {
    HMDDevice * _device;
    bool  _deviceReachable;
    bool  _fixedPairingIdentityInCloud;
    HMFPairingIdentity * _lastCreatedPairingIdentity;
    HMFPairingIdentity * _pairingIdentity;
    HMDRemoteLoginHandler * _remoteLoginHandler;
    HMDAccessorySettingGroup * _rootSettings;
    HMDSoftwareUpdate * _softwareUpdate;
    HMFSoftwareVersion * _softwareVersion;
    HMDAccessorySymptomHandler * _symptomsHandler;
    HMDTargetControlManager * _targetControlManager;
    HMFWiFiNetworkInfo * _wifiNetworkInfo;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) HMDDevice *device;
@property (getter=isDeviceReachable, nonatomic) bool deviceReachable;
@property (nonatomic) bool fixedPairingIdentityInCloud;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HMFPairingIdentity *lastCreatedPairingIdentity;
@property (readonly, copy) HMFPairingIdentity *pairingIdentity;
@property (readonly) HMDRemoteLoginHandler *remoteLoginHandler;
@property (readonly) HMDAccessorySettingGroup *rootSettings;
@property (readonly) HMDSoftwareUpdate *softwareUpdate;
@property (readonly) HMFSoftwareVersion *softwareVersion;
@property (readonly) Class superclass;
@property (readonly) bool supportsUserManagement;
@property (readonly) HMDAccessorySymptomHandler *symptomsHandler;
@property (nonatomic, retain) HMDTargetControlManager *targetControlManager;
@property (readonly) HMFWiFiNetworkInfo *wifiNetworkInfo;

+ (id)__deviceMediaRouteIdentifier;
+ (bool)hasMessageReceiverChildren;
+ (bool)shouldAcceptMessage:(id)arg1 home:(id)arg2 privilege:(unsigned long long)arg3;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)__updateDeviceWithDeviceIdentifier:(id)arg1;
- (void)_fetchAvailableUpdate:(id)arg1;
- (void)_fixCloudKeyIfNeeded;
- (void)_registerForMessages;
- (void)_relayRequestMessage:(id)arg1 responseHandler:(id /* block */)arg2;
- (void)_startUpdate:(id)arg1;
- (void)_updateSoftwareVersion:(id)arg1;
- (void)addRootSettings;
- (void)addUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)assistantObject;
- (void)autoConfigureTargetControllers;
- (id)backingStoreObjects:(long long)arg1;
- (void)configure:(id)arg1 msgDispatcher:(id)arg2 accessoryConfigureGroup:(id)arg3;
- (void)createPairingIdentity;
- (void)dealloc;
- (id)description;
- (id)device;
- (id)deviceMonitor;
- (id)dumpSimpleState;
- (id)dumpState;
- (void)encodeWithCoder:(id)arg1;
- (bool)fixedPairingIdentityInCloud;
- (void)handleAddedRootSettingsModel:(id)arg1 message:(id)arg2;
- (void)handleAddedSoftwareUpdateModel:(id)arg1 message:(id)arg2;
- (void)handleCurrentDeviceChanged:(id)arg1;
- (void)handleCurrentDeviceUpdated:(id)arg1;
- (void)handleCurrentNetworkChangedNotification:(id)arg1;
- (void)handleDeviceIsNotReachable:(id)arg1;
- (void)handleDeviceIsReachable:(id)arg1;
- (void)handleDeviceReachabilityChange:(bool)arg1;
- (void)handleDeviceUpdated;
- (void)handleRemovedSoftwareUpdateModel:(id)arg1 message:(id)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithTransaction:(id)arg1 home:(id)arg2;
- (bool)isCurrentAccessory;
- (bool)isDeviceReachable;
- (bool)isRemotelyReachable;
- (id)lastCreatedPairingIdentity;
- (id)messageReceiverChildren;
- (id)modelObjectWithChangeType:(unsigned long long)arg1;
- (void)notifyClientsOfUpdatedRootSettings:(id)arg1;
- (id)pairingIdentity;
- (void)pairingsWithCompletionHandler:(id /* block */)arg1;
- (void)populateModelObject:(id)arg1 version:(long long)arg2;
- (long long)reachableTransports;
- (void)reconfigureOnMediaSystemDisolve;
- (id)remoteLoginHandler;
- (id)remoteMessageDestination;
- (void)removeUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)requiresHomeAppForManagement;
- (id)rootSettings;
- (id)runtimeState;
- (void)setDevice:(id)arg1;
- (void)setDeviceReachable:(bool)arg1;
- (void)setFixedPairingIdentityInCloud:(bool)arg1;
- (void)setLastCreatedPairingIdentity:(id)arg1;
- (void)setPairingIdentity:(id)arg1;
- (void)setRemotelyReachable:(bool)arg1;
- (void)setRootSettings:(id)arg1;
- (void)setSoftwareUpdate:(id)arg1;
- (void)setSoftwareVersion:(id)arg1;
- (void)setTargetControlManager:(id)arg1;
- (void)setWifiNetworkInfo:(id)arg1;
- (bool)shouldUpdateWithDevice:(id)arg1;
- (id)softwareUpdate;
- (id)softwareVersion;
- (void)startMonitoringReachability;
- (bool)supportsSettings;
- (bool)supportsSoftwareUpdate;
- (bool)supportsTargetControl;
- (bool)supportsUserManagement;
- (id)symptomsHandler;
- (id)targetControlManager;
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (id)transactionWithObjectChangeType:(unsigned long long)arg1;
- (void)updateRootGroup:(id)arg1;
- (void)updateSoftwareUpdate:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateWiFiNetworkInfo;
- (void)updateWithDevice:(id)arg1;
- (id)wifiNetworkInfo;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDTargetControllerManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDTargetControllerManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDTargetControllerManager : HMFObject <HMFLogging> {
    NSArray * _buttonConfiguration;
    bool  _configurationRefreshed;
    NSMutableSet * _configuredTargets;
    HMDHAPAccessory * _controller;
    NSString * _logID;
    unsigned char  _maximumTargets;
    NSObject<OS_dispatch_queue> * _propertyQueue;
    unsigned long long  _ticksPerSecond;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, retain) NSArray *buttonConfiguration;
@property (nonatomic) bool configurationRefreshed;
@property (nonatomic, retain) NSMutableSet *configuredTargets;
@property (nonatomic, readonly) HMDHAPAccessory *controller;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *logID;
@property (nonatomic) unsigned char maximumTargets;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *propertyQueue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSArray *targetUUIDs;
@property (nonatomic) unsigned long long ticksPerSecond;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)__accessoryIsNotReachable:(id)arg1;
- (void)__accessoryIsReachable:(id)arg1;
- (void)__accessoryNameUpdated:(id)arg1;
- (void)__accessoryRemoved:(id)arg1;
- (void)__characteristicEventsReceived:(id)arg1;
- (void)__handleActiveIdentifierChange:(id)arg1 forCharacteristic:(id)arg2;
- (id)__refreshedConfiguration:(id)arg1;
- (void)_addTargets:(id)arg1;
- (void)_auditTargets:(id)arg1;
- (void)_configureTargetAccessories:(id)arg1 reason:(id)arg2 targetAccessories:(id)arg3 responseHandler:(id /* block */)arg4;
- (id)_dataForAddTargets:(id)arg1 outError:(id*)arg2;
- (id)_dataForListTargetsWithOutError:(id*)arg1;
- (id)_dataForRemoveTargets:(id)arg1 outError:(id*)arg2;
- (id)_dataForResetTargetsWithOutError:(id*)arg1;
- (id)_dataForUpdateTarget:(id)arg1 name:(id)arg2 buttonConfiguration:(id)arg3 outError:(id*)arg4;
- (void)_handleActiveIdentifierReadResponses:(id)arg1;
- (void)_handleConfigureTargets:(id)arg1 responseHandler:(id /* block */)arg2;
- (void)_listTargetsWithCompletionHandler:(id /* block */)arg1;
- (void)_notifyConfigurationRefresh:(id)arg1;
- (int)_parseSupportedTargetConfiguration:(id)arg1;
- (void)_postSelectionChangeNotification:(bool)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)_readSupportedConfigurationWithCompletion:(id /* block */)arg1;
- (void)_refreshConfigurationWithCompletion:(id /* block */)arg1;
- (void)_registerForActiveIdentifierNotifications;
- (void)_removeTargets:(id)arg1;
- (void)_resetTargets;
- (void)_saveTargetUUIDs;
- (void)_updateName:(id)arg1 buttonConfiguration:(id)arg2 target:(id)arg3;
- (void)acknowledgeTargetControlService:(id)arg1 active:(bool)arg2;
- (void)addConfiguredTarget:(id)arg1;
- (void)addTargetAccessory:(id)arg1 buttonConfiguration:(id)arg2;
- (void)autoConfigureTargets;
- (id)buttonConfiguration;
- (bool)configurationRefreshed;
- (id)configuredTargets;
- (id)controller;
- (void)handleConfigureTargets:(id)arg1 responseHandler:(id /* block */)arg2;
- (id)init;
- (id)initWithTargetControllerAccessory:(id)arg1 targets:(id)arg2;
- (void)invalidate;
- (id)logID;
- (id)logIdentifier;
- (unsigned char)maximumTargets;
- (id)propertyQueue;
- (void)refreshConfigurationWithCompletion:(id /* block */)arg1;
- (void)registerForActiveIdentifierNotifications;
- (void)removeConfiguredTarget:(id)arg1;
- (void)removeTargetAccessory:(id)arg1;
- (void)resetConfiguredTargets;
- (void)setButtonConfiguration:(id)arg1;
- (void)setConfigurationRefreshed:(bool)arg1;
- (void)setConfiguredTargets:(id)arg1;
- (void)setMaximumTargets:(unsigned char)arg1;
- (void)setTicksPerSecond:(unsigned long long)arg1;
- (id)targetConfigurationMatchingAccessory:(id)arg1;
- (id)targetConfigurationMatchingIdentifier:(id)arg1;
- (id)targetUUIDs;
- (unsigned long long)ticksPerSecond;
- (void)updateButtonConfigurationForTarget:(id)arg1;
- (void)updateTargetAccessory:(id)arg1 name:(id)arg2 buttonConfiguration:(id)arg3;
- (void)updateTargets:(id)arg1;
- (id)workQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

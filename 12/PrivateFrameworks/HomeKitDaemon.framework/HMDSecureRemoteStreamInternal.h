<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDSecureRemoteStreamInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDSecureRemoteStreamInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDSecureRemoteStreamInternal : HMFObject <HMFLogging> {
    unsigned char  _cipherReadKey;
    unsigned char  _cipherReadNonce;
    unsigned char  _cipherWriteKey;
    unsigned char  _cipherWriteNonce;
    unsigned long long  _clientIdleTimeoutNanos;
    bool  _commitResponded;
    unsigned long long  _commitTimeoutNanos;
    id /* block */  _findPeerHandler;
    id /* block */  _getLocalIdentityHandler;
    NSObject<OS_dispatch_source> * _idleTimer;
    NSObject<OS_dispatch_queue> * _internalQueue;
    id /* block */  _internalRequestHandler;
    unsigned char  _pairVerifyDone;
    struct PairingSessionPrivate { } * _pairVerifySession;
    NSMutableDictionary * _prepareRequests;
    bool  _prepareResponded;
    id /* block */  _requestHandler;
    unsigned long long  _sendInternalTimeoutNanos;
    unsigned long long  _sendUserTimeoutNanos;
    unsigned long long  _serverIdleTimeoutNanos;
    NSString * _sessionID;
    bool  _started;
    id /* block */  _startedHandler;
    int  _state;
    id /* block */  _stoppedHandler;
    NSMutableDictionary * _transactions;
    id /* block */  _transportSendMessage;
    long long  _type;
    NSObject<OS_dispatch_queue> * _userQueue;
    NSMutableArray * _userTransactions;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (copy) id /* block */ findPeerHandler;
@property (copy) id /* block */ getLocalIdentityHandler;
@property (readonly) unsigned long long hash;
@property (copy) id /* block */ internalRequestHandler;
@property (copy) id /* block */ requestHandler;
@property (readonly) double requestTimeout;
@property (copy) id /* block */ startedHandler;
@property (copy) id /* block */ stoppedHandler;
@property (readonly) Class superclass;
@property (copy) id /* block */ transportSendMessage;

+ (id)logCategory;

- (void).cxx_destruct;
- (int)_clientHandleCommitResponse:(id)arg1;
- (int)_clientHandlePrepareResponse:(id)arg1;
- (int)_clientPairVerifyExchange:(id)arg1;
- (void)_clientRunStateMachine;
- (int)_clientSendCommitRequest:(id)arg1;
- (int)_clientSendPrepareRequest:(id)arg1;
- (void)_completeTransaction:(id)arg1 response:(id)arg2 status:(int)arg3;
- (void)_completeUserTransaction:(id)arg1 response:(id)arg2 status:(int)arg3;
- (void)_runStateMachine;
- (void)_sendRequest:(id)arg1 options:(id)arg2 responseHandler:(id /* block */)arg3;
- (void)_sendUserRequest:(id)arg1 options:(id)arg2 responseHandler:(id /* block */)arg3;
- (void)_serverCompletePrepareRequest:(id)arg1;
- (int)_serverHandleCommitRequest:(id)arg1 responseHandler:(id /* block */)arg2;
- (int)_serverHandleDecryptedRequest:(id)arg1 responseHandler:(id /* block */)arg2;
- (void)_serverHandleEncryptedRequest:(id)arg1 options:(id)arg2;
- (int)_serverHandlePrepareRequest:(id)arg1 responseHandler:(id /* block */)arg2;
- (void)_serverPairVerifyExchange:(id)arg1 options:(id)arg2;
- (void)_serverRunStateMachine;
- (int)_setupEncryption;
- (void)_start;
- (void)_stop:(int)arg1;
- (void)_transportReceivedMessage:(id)arg1 options:(id)arg2;
- (int)_updateIdleTimer;
- (void)dealloc;
- (id)dispatchQueue;
- (id /* block */)findPeerHandler;
- (id /* block */)getLocalIdentityHandler;
- (id)init;
- (id)initWithType:(long long)arg1 commitTimeout:(unsigned long long)arg2 clientIdleTimeout:(unsigned long long)arg3 serverIdleTimeout:(unsigned long long)arg4 sendInternalTimeout:(unsigned long long)arg5 sendUserTimeout:(unsigned long long)arg6;
- (id /* block */)internalRequestHandler;
- (id)logIdentifier;
- (id /* block */)requestHandler;
- (double)requestTimeout;
- (void)sendRequest:(id)arg1 options:(id)arg2 responseHandler:(id /* block */)arg3;
- (void)setDispatchQueue:(id)arg1;
- (void)setFindPeerHandler:(id /* block */)arg1;
- (void)setGetLocalIdentityHandler:(id /* block */)arg1;
- (void)setInternalRequestHandler:(id /* block */)arg1;
- (void)setRequestHandler:(id /* block */)arg1;
- (void)setStartedHandler:(id /* block */)arg1;
- (void)setStoppedHandler:(id /* block */)arg1;
- (void)setTransportSendMessage:(id /* block */)arg1;
- (void)start;
- (id /* block */)startedHandler;
- (void)stop;
- (id /* block */)stoppedHandler;
- (void)transportReceivedMessage:(id)arg1 options:(id)arg2;
- (id /* block */)transportSendMessage;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

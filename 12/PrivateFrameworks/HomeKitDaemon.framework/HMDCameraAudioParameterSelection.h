<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDCameraAudioParameterSelection.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDCameraAudioParameterSelection.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDCameraAudioParameterSelection : HMDCameraParameterSelectionBase {
    NSArray * _audioCodecsPreference;
    NSArray * _bitrateSettingsPreference;
    NSNumber * _comfortNoiseSupported;
    HMDSupportedRTPConfiguration * _rtpConfiguration;
    NSArray * _sampleRatesPreference;
    NSNumber * _selectedAudioChannelCount;
    HMDCameraAudioParameterCombination * _selectedAudioParameterCombination;
    HMDSelectedAudioParameters * _selectedAudioParameters;
    HMDBitRateSetting * _selectedBitRateSetting;
    HMDAudioCodecGroup * _selectedCodecGroupType;
    HMDAudioSampleRate * _selectedSampleRate;
    HMDStreamingCapabilities * _streamingCapabilities;
    HMDSupportedAudioStreamConfiguration * _supportedAudioStreamConfiguration;
    NSArray * _validAudioParameterCombinations;
}

@property (nonatomic, readonly) NSArray *audioCodecsPreference;
@property (nonatomic, readonly) NSArray *bitrateSettingsPreference;
@property (nonatomic, retain) NSNumber *comfortNoiseSupported;
@property (nonatomic, readonly) HMDSupportedRTPConfiguration *rtpConfiguration;
@property (nonatomic, readonly) NSArray *sampleRatesPreference;
@property (nonatomic, retain) NSNumber *selectedAudioChannelCount;
@property (nonatomic, retain) HMDCameraAudioParameterCombination *selectedAudioParameterCombination;
@property (nonatomic, retain) HMDSelectedAudioParameters *selectedAudioParameters;
@property (nonatomic, retain) HMDBitRateSetting *selectedBitRateSetting;
@property (nonatomic, retain) HMDAudioCodecGroup *selectedCodecGroupType;
@property (nonatomic, retain) HMDAudioSampleRate *selectedSampleRate;
@property (nonatomic, readonly) HMDStreamingCapabilities *streamingCapabilities;
@property (nonatomic, readonly) HMDSupportedAudioStreamConfiguration *supportedAudioStreamConfiguration;
@property (nonatomic, readonly) NSArray *validAudioParameterCombinations;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)_generateAllCombinations:(id)arg1;
- (bool)_selectParametersFromCodec:(id)arg1 bitRateSettings:(id)arg2 sampleRates:(id)arg3 audioChannelCount:(id)arg4;
- (id)audioCodecsPreference;
- (id)bitrateSettingsPreference;
- (id)comfortNoiseSupported;
- (id)createSRTPParamters;
- (id)createSelectedAudioParameters;
- (id)initWithSessionID:(id)arg1 supportedAudioConfiguration:(id)arg2 supportedRTPConfiguration:(id)arg3 streamingCapabilities:(id)arg4;
- (id)logIdentifier;
- (id)rtpConfiguration;
- (id)sampleRatesPreference;
- (bool)selectAudioParameters;
- (id)selectedAudioChannelCount;
- (id)selectedAudioParameterCombination;
- (id)selectedAudioParameters;
- (id)selectedBitRateSetting;
- (id)selectedCodecGroupType;
- (id)selectedSampleRate;
- (void)setComfortNoiseSupported:(id)arg1;
- (void)setSelectedAudioChannelCount:(id)arg1;
- (void)setSelectedAudioParameterCombination:(id)arg1;
- (void)setSelectedAudioParameters:(id)arg1;
- (void)setSelectedBitRateSetting:(id)arg1;
- (void)setSelectedCodecGroupType:(id)arg1;
- (void)setSelectedSampleRate:(id)arg1;
- (id)streamingCapabilities;
- (id)supportedAudioStreamConfiguration;
- (id)validAudioParameterCombinations;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

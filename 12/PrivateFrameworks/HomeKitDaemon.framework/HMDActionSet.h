<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDActionSet.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDActionSet.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDActionSet : HMFObject <HMDBackingStoreObjectProtocol, HMDHomeMessageReceiver, HMFDumpState, NSSecureCoding> {
    HMDApplicationData * _appData;
    NSMutableArray * _currentActions;
    bool  _executionInProgress;
    HMDHome * _home;
    NSDate * _lastExecutionDate;
    HMFMessageDispatcher * _msgDispatcher;
    NSString * _name;
    NSString * _type;
    NSUUID * _uuid;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, readonly) NSArray *actions;
@property (nonatomic, retain) HMDApplicationData *appData;
@property (nonatomic, retain) NSMutableArray *currentActions;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool executionInProgress;
@property (readonly) unsigned long long hash;
@property (nonatomic) HMDHome *home;
@property (nonatomic, retain) NSDate *lastExecutionDate;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, copy) NSSet *messageReceiverChildren;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (nonatomic, retain) HMFMessageDispatcher *msgDispatcher;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, readonly) NSString *serializedIdentifier;
@property (nonatomic, readonly) NSUUID *spiClientIdentifier;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *type;
@property (nonatomic, readonly) NSUUID *uuid;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (bool)hasMessageReceiverChildren;
+ (bool)isBuiltinActionSetType:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_execute:(id)arg1 captureCurrentState:(bool)arg2 writeRequestTuples:(id)arg3;
- (void)_executeWriteAction:(id)arg1 captureCurrentState:(bool)arg2 writeRequestTuples:(id)arg3;
- (bool)_fixupActions;
- (id)_generateOverallError:(id)arg1 forSource:(unsigned long long)arg2;
- (void)_handleAddActionRequest:(id)arg1;
- (void)_handleAddActionTransaction:(id)arg1 message:(id)arg2;
- (void)_handleRemoveAction:(id)arg1 message:(id)arg2;
- (void)_handleRemoveActionRequest:(id)arg1;
- (void)_handleRemoveActionTransaction:(id)arg1 message:(id)arg2;
- (void)_handleRemoveAppDataModel:(id)arg1 message:(id)arg2;
- (void)_handleRenameActionSetTransaction:(id)arg1 message:(id)arg2;
- (void)_handleRenameRequest:(id)arg1;
- (void)_handleReplaceActionValueRequest:(id)arg1;
- (void)_handleUpdateAppDataModel:(id)arg1 message:(id)arg2;
- (void)_issueReadRequests:(id)arg1;
- (void)_issueWriteRequests:(id)arg1 readResponse:(id)arg2 message:(id)arg3;
- (void)_logDuetEvent:(id)arg1 endDate:(id)arg2 message:(id)arg3;
- (void)_logDuetRoomEvent;
- (id)_logExecuteAction:(id)arg1;
- (void)_processActionSetModelUpdated:(id)arg1 message:(id)arg2;
- (void)_registerForMessages;
- (void)_removeAction:(id)arg1 message:(id)arg2;
- (void)_removeDonatedIntent;
- (id)actionWithUUID:(id)arg1;
- (id)actions;
- (id)allCharacteristicsInActionsForServices:(id)arg1;
- (id)appData;
- (id)assistantObject;
- (id)backingStoreObjects:(long long)arg1;
- (bool)configure:(id)arg1 messageDispatcher:(id)arg2 queue:(id)arg3;
- (bool)containsSecureCharacteristic;
- (bool)containsUnsecuringAction;
- (id)currentActions;
- (void)dealloc;
- (id)description;
- (id)dumpState;
- (void)encodeWithCoder:(id)arg1;
- (void)execute:(id)arg1;
- (void)executeWithTriggerSource:(id)arg1 captureCurrentState:(bool)arg2 completionHandler:(id /* block */)arg3;
- (bool)executionInProgress;
- (void)handleExecutionCompleted:(id)arg1 startDate:(id)arg2 error:(id)arg3 readResponse:(id)arg4 response:(id)arg5;
- (id)home;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 uuid:(id)arg2 type:(id)arg3 home:(id)arg4 queue:(id)arg5;
- (void)invalidate;
- (id)isAccessValidForExecutionWithMessage:(id)arg1;
- (id)lastExecutionDate;
- (id)messageDestination;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)modelObjectWithChangeType:(unsigned long long)arg1;
- (id)msgDispatcher;
- (id)name;
- (void)removeAccessory:(id)arg1;
- (void)removeActionForCharacteristic:(id)arg1;
- (void)removeService:(id)arg1;
- (id)serializedIdentifier;
- (void)setAppData:(id)arg1;
- (void)setCurrentActions:(id)arg1;
- (void)setExecutionInProgress:(bool)arg1;
- (void)setHome:(id)arg1;
- (void)setLastExecutionDate:(id)arg1;
- (void)setMsgDispatcher:(id)arg1;
- (void)setName:(id)arg1;
- (void)setType:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)spiClientIdentifier;
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (id)type;
- (id)url;
- (id)uuid;
- (id)workQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDSecureRemoteStream.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDSecureRemoteStream.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDSecureRemoteStream : HMFMessageTransport <HMFLogging, HMFObject> {
    HMDDevice * _currentDevice;
    bool  _idle;
    NSDate * _lastActivity;
    NSNumber * _maximumRemoteStreams;
    HMDAWDRemoteSessionMetric * _metric;
    bool  _open;
    HMDUser * _peer;
    HMDDevice * _peerDevice;
    HMFPairingIdentity * _peerIdentity;
    NSObject<OS_dispatch_queue> * _propertyQueue;
    long long  _qualityOfService;
    HMDSecureRemoteStreamInternal * _remoteSession;
    long long  _role;
    NSUUID * _sessionID;
    bool  _supportsSharedIdentities;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, readonly, copy) NSArray *attributeDescriptions;
@property (getter=isAuthenticated, readonly) bool authenticated;
@property (nonatomic, readonly) HMDDevice *currentDevice;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isIdle, readonly) bool idle;
@property (readonly, copy) NSDate *lastActivity;
@property (readonly, copy) NSNumber *maximumRemoteStreams;
@property (nonatomic, readonly) HMDAWDRemoteSessionMetric *metric;
@property (getter=isOpen, readonly) bool open;
@property (nonatomic, retain) HMDUser *peer;
@property (nonatomic, retain) HMDDevice *peerDevice;
@property (nonatomic, retain) HMFPairingIdentity *peerIdentity;
@property (readonly, copy) NSString *privateDescription;
@property (readonly, copy) NSString *propertyDescription;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *propertyQueue;
@property long long qualityOfService;
@property (nonatomic, retain) HMDSecureRemoteStreamInternal *remoteSession;
@property (readonly) long long role;
@property (nonatomic, readonly, copy) NSUUID *sessionID;
@property (readonly, copy) NSString *shortDescription;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsSharedIdentities;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)__handleAccountRemovedFromRegistry:(id)arg1;
- (void)__handleDeviceRemovedFromAccount:(id)arg1;
- (void)__handleRemovedIdentity:(id)arg1;
- (void)_closeWithError:(id)arg1;
- (void)_configureWithCompletionQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)closedWithError:(id)arg1;
- (id)currentDevice;
- (void)dealloc;
- (void)handleCompletedMessage:(id)arg1 options:(id)arg2 responsePayload:(id)arg3 error:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)handleSecureMessage:(id)arg1 fromTransport:(id)arg2;
- (id)initWithCurrentDevice:(id)arg1 peerDevice:(id)arg2 clientMode:(bool)arg3 sessionID:(id)arg4;
- (bool)isAuthenticated;
- (bool)isIdle;
- (bool)isOpen;
- (id)lastActivity;
- (id)logIdentifier;
- (id)maximumRemoteStreams;
- (id)metric;
- (void)notifyClientsUpdatedIdle:(bool)arg1;
- (id)peer;
- (id)peerDevice;
- (id)peerIdentity;
- (id)propertyDescription;
- (id)propertyQueue;
- (long long)qualityOfService;
- (id)remoteSession;
- (long long)role;
- (void)sendMessage:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)sessionID;
- (void)setIdle:(bool)arg1;
- (void)setMaximumRemoteStreams:(id)arg1;
- (void)setOpen:(bool)arg1;
- (void)setPeer:(id)arg1;
- (void)setPeerDevice:(id)arg1;
- (void)setPeerIdentity:(id)arg1;
- (void)setQualityOfService:(long long)arg1;
- (void)setRemoteSession:(id)arg1;
- (void)setSupportsSharedIdentities:(bool)arg1;
- (id)shortDescription;
- (void)startAndInvokeOnQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)stop;
- (bool)supportsSharedIdentities;
- (id)workQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

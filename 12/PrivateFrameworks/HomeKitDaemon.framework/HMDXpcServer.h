<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDXpcServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDXpcServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDXpcServer : HMFMessageDispatcher <HMDApplicationMonitorDelegate, HMFMessageReceiver, NSXPCListenerDelegate> {
    NSObject<OS_dispatch_group> * _activeMessageTracker;
    HMDApplicationMonitor * _appMonitor;
    HMDApplicationRegistry * _appRegistry;
    HMDBackgroundAppMessageFilter * _backgroundAppMsgFilter;
    HMDLostModeMessageFilter * _lostModeMessageFilter;
    HMDCentralMessageDispatcher * _recvDispatcher;
    NSUUID * _uuid;
    NSMutableSet * _xpcClients;
    NSXPCListener * _xpcListener;
    NSObject<OS_dispatch_queue> * _xpcWorkQueue;
}

@property (nonatomic, retain) NSObject<OS_dispatch_group> *activeMessageTracker;
@property (nonatomic) HMDApplicationMonitor *appMonitor;
@property (nonatomic, retain) HMDApplicationRegistry *appRegistry;
@property (nonatomic, retain) HMDBackgroundAppMessageFilter *backgroundAppMsgFilter;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HMDLostModeMessageFilter *lostModeMessageFilter;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (nonatomic, retain) HMDCentralMessageDispatcher *recvDispatcher;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSUUID *uuid;
@property (nonatomic, retain) NSMutableSet *xpcClients;
@property (nonatomic, retain) NSXPCListener *xpcListener;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *xpcWorkQueue;

- (void).cxx_destruct;
- (void)_handleResumeXPCConnectionRequest:(id)arg1;
- (void)_handleSuspendXPCConnectionRequest:(id)arg1;
- (void)_registerForMessages;
- (void)_sendMessage:(id)arg1 andInvokeCompletionHandler:(id /* block */)arg2 withDeliveryCompletion:(id /* block */)arg3;
- (id)activeMessageTracker;
- (id)appMonitor;
- (id)appRegistry;
- (void)applicationMonitorDidChangeActiveHomeKitAppStatus:(bool)arg1;
- (void)applicationMonitorDidChangeAppState:(id)arg1;
- (id)backgroundAppMsgFilter;
- (void)dealloc;
- (void)deregisterForMessage:(id)arg1 receiver:(id)arg2;
- (void)deregisterReceiver:(id)arg1;
- (void)dispatchMessage:(id)arg1 target:(id)arg2;
- (id)endPoint;
- (id)initWithReceiveDispatcher:(id)arg1 messageFilterChain:(id)arg2 registerAsMachService:(bool)arg3;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)lostModeMessageFilter;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)recvDispatcher;
- (void)registerForMessage:(id)arg1 receiver:(id)arg2 messageHandler:(id /* block */)arg3;
- (void)reset;
- (void)sendMessage:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)sendMessage:(id)arg1 target:(id)arg2 completionQueue:(id)arg3 deliveryCompletionHandler:(id /* block */)arg4;
- (void)setActiveMessageTracker:(id)arg1;
- (void)setAppMonitor:(id)arg1;
- (void)setAppRegistry:(id)arg1;
- (void)setBackgroundAppMsgFilter:(id)arg1;
- (void)setLostModeMessageFilter:(id)arg1;
- (void)setRecvDispatcher:(id)arg1;
- (void)setUuid:(id)arg1;
- (void)setXpcClients:(id)arg1;
- (void)setXpcListener:(id)arg1;
- (void)setXpcWorkQueue:(id)arg1;
- (bool)start;
- (bool)stop;
- (id)uuid;
- (id)xpcClients;
- (id)xpcListener;
- (id)xpcWorkQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

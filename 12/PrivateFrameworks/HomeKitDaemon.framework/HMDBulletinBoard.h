<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDBulletinBoard.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDBulletinBoard.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDBulletinBoard : HMFObject <NSSecureCoding> {
    NSMutableDictionary * _characteristicTuples;
    HMDHomeManager * _homeManager;
    HMDUserNotificationCenter * _notificationCenter;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (nonatomic, retain) NSMutableDictionary *characteristicTuples;
@property (nonatomic) HMDHomeManager *homeManager;
@property (nonatomic, retain) HMDUserNotificationCenter *notificationCenter;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

+ (id)_supportedNonSecureServices;
+ (id)_supportedSecureServices;
+ (id)_targetCurrentCharacteristicTypeMap;
+ (void)archive;
+ (id)bulletinSupportedCharacteristicsForService:(id)arg1;
+ (id)characteristicTupleKeyFromServiceContextID:(id)arg1 currentType:(id)arg2;
+ (bool)isBulletinSupportedForCharacteristicType:(id)arg1 serviceType:(id)arg2;
+ (bool)isBulletinSupportedForNonSecureCharacteristicType:(id)arg1 serviceType:(id)arg2;
+ (bool)isCriticalNonSecureServiceType:(id)arg1;
+ (bool)presentationValueOfCharacteristic:(id)arg1 equalTo:(id)arg2;
+ (id)sharedBulletinBoard;
+ (bool)supportsSecureCoding;
+ (id)unarchive;

- (void).cxx_destruct;
- (bool)_hasDuplicateBulletinForCharacteristic:(id)arg1;
- (id)_insertImageBulletinsForChangedCharacteristics:(id)arg1 snapshotData:(id)arg2;
- (id)_insertRequestWithTitle:(id)arg1 snapshotData:(id)arg2 message:(id)arg3 requestIdentifier:(id)arg4 bulletinType:(unsigned long long)arg5 actionURL:(id)arg6 bulletinContext:(struct NSDictionary { Class x1; }*)arg7 actionContext:(struct NSDictionary { Class x1; }*)arg8;
- (id)_lookupRequestForCharacteristic:(id)arg1;
- (void)_migrateBulletins:(id)arg1 requests:(id)arg2;
- (void)_removeBulletinsUsingPredicate:(id)arg1;
- (id)_requestWithRecordID:(id)arg1;
- (bool)_shouldPostBulletinOnCurrentValueChangeForCharacteristic:(id)arg1;
- (void)_updateCharacteristicTupleFor:(id)arg1 withCurrentType:(id)arg2 changedByThisDevice:(bool)arg3;
- (id)characteristicTuples;
- (void)configureHomeManager:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)homeManager;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)insertBulletinForIncomingInvitation:(id)arg1;
- (id)insertBulletinForSecureTrigger:(id)arg1;
- (void)insertBulletinsForChangedCharacteristics:(id)arg1 changedByThisDevice:(bool)arg2 completion:(id /* block */)arg3;
- (void)insertImageBulletinsForChangedCharacteristics:(id)arg1 snapshotData:(id)arg2 completion:(id /* block */)arg3;
- (bool)isTargetCharacteristic:(id)arg1 matchCurrentCharacteristic:(id)arg2;
- (id)notificationCenter;
- (void)refreshHomeBadgeNumber;
- (void)removeAllBulletins;
- (void)removeBulletinWithRecordID:(id)arg1;
- (void)removeBulletinsForAccessory:(id)arg1;
- (void)removeBulletinsForHome:(id)arg1;
- (void)removeBulletinsForService:(id)arg1;
- (void)removeBulletinsForTrigger:(id)arg1;
- (void)setCharacteristicTuples:(id)arg1;
- (void)setHomeManager:(id)arg1;
- (void)setNotificationCenter:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)updateBulletinForFirmwareUpdateInHome:(id)arg1;
- (id)workQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDUser.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDUser.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDUser : HMFObject <HMDBackingStoreObjectProtocol, HMDHomeMessageReceiver, HMFDumpState, HMFLogging, NSSecureCoding> {
    HMDAccountHandle * _accountHandle;
    HMDAccountIdentifier * _accountIdentifier;
    HMDAssistantAccessControl * _assistantAccessControl;
    NSObject<OS_dispatch_queue> * _clientQueue;
    NSString * _displayName;
    HMDHome * _home;
    HAPPairingIdentity * _pairingIdentity;
    HMUserPresenceAuthorization * _presenceAuthStatus;
    unsigned long long  _privilege;
    NSObject<OS_dispatch_queue> * _propertyQueue;
    NSMutableArray * _relayAccessTokens;
    NSString * _relayIdentifier;
    bool  _remoteAccessAllowed;
    NSString * _userID;
    NSUUID * _uuid;
}

@property (copy) HMDAccountIdentifier *accountIdentifier;
@property (getter=isAdministrator, readonly) bool administrator;
@property (retain) HMDAssistantAccessControl *assistantAccessControl;
@property (readonly, copy) AVOutputDeviceAuthorizedPeer *av_authorizedPeer;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *clientQueue;
@property (getter=isCurrentUser, readonly) bool currentUser;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *displayName;
@property (nonatomic, readonly, copy) NSString *encodingRemoteDisplayName;
@property (readonly) unsigned long long hash;
@property HMDHome *home;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, copy) NSSet *messageReceiverChildren;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (getter=isOwner, readonly) bool owner;
@property (copy) HAPPairingIdentity *pairingIdentity;
@property (copy) HMUserPresenceAuthorization *presenceAuthStatus;
@property unsigned long long privilege;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *propertyQueue;
@property (copy) NSString *relayIdentifier;
@property (getter=isRemoteAccessAllowed) bool remoteAccessAllowed;
@property (getter=isRemoteGateway, readonly) bool remoteGateway;
@property (readonly) Class superclass;
@property (copy) NSString *userID;
@property (setter=setUUID:, copy) NSUUID *uuid;
@property (getter=isValid, readonly) bool valid;

+ (id)UUIDWithUserID:(id)arg1 forHomeIdentifier:(id)arg2 uuid:(id)arg3 pairingIdentity:(id)arg4;
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2;
+ (bool)hasMessageReceiverChildren;
+ (id)logCategory;
+ (id)ownerWithUserID:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 homeManager:(id)arg4;
+ (bool)supportsSecureCoding;
+ (id)userIDForAccountHandle:(id)arg1;
+ (id)userWithDictionary:(id)arg1 forHome:(id)arg2;

- (void).cxx_destruct;
- (void)__handleAddedAccount:(id)arg1;
- (void)__handleRemovedAccount:(id)arg1;
- (void)_addRelayAccessToken:(id)arg1;
- (unsigned long long)_compatiblePrivilege;
- (void)_fixupRelayAccessTokens;
- (void)_handleAssistantAccessControlUpdate:(id)arg1;
- (void)_handlePairingIdentityRequest:(id)arg1;
- (void)_migrateRelayAccessTokensCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(id /* block */)arg3;
- (id)_relayAccessTokenForIdentifier:(id)arg1;
- (void)_removeRelayAccessToken:(id)arg1;
- (void)_transactionUserUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (id)account;
- (id)accountHandle;
- (id)accountIdentifier;
- (void)addRelayAccessToken:(id)arg1;
- (id)assistantAccessControl;
- (id)attributeDescriptions;
- (id)av_authorizedPeer;
- (id)backingStoreObjects:(long long)arg1;
- (id)clientQueue;
- (void)configureWithHome:(id)arg1;
- (bool)containsRelayAccessToken:(id)arg1;
- (void)dealloc;
- (void)deregisterIdentity;
- (id)dictionaryEncoding;
- (id)displayName;
- (id)dumpState;
- (void)encodeWithCoder:(id)arg1;
- (id)encodingRemoteDisplayName;
- (void)handleAssistantAccessControlUpdate:(id)arg1;
- (unsigned long long)hash;
- (id)home;
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;
- (id)initWithCoder:(id)arg1;
- (id)initWithModelObject:(id)arg1;
- (bool)isAdministrator;
- (bool)isCurrentUser;
- (bool)isCurrentUserAndOwner;
- (bool)isEqual:(id)arg1;
- (bool)isOwner;
- (bool)isRemoteAccessAllowed;
- (bool)isRemoteGateway;
- (bool)isValid;
- (id)logIdentifier;
- (id)messageDestination;
- (id)messageDispatcher;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (void)migrateAfterCloudMerge:(id /* block */)arg1;
- (void)migrateCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(id /* block */)arg3;
- (id)modelObjectWithChangeType:(unsigned long long)arg1;
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;
- (id)pairingIdentity;
- (id)pairingUsername;
- (id)presenceAuthStatus;
- (unsigned long long)privilege;
- (id)propertyQueue;
- (id)publicKey;
- (bool)refreshDisplayName;
- (void)registerForMessages;
- (void)registerIdentity;
- (id)relayAccessTokenForAccessory:(id)arg1;
- (id)relayAccessTokens;
- (id)relayIdentifier;
- (void)removeAccessoriesFromAssistantAccessControlList:(id)arg1;
- (void)removeRelayAccessToken:(id)arg1;
- (bool)requiresMakoSupport;
- (void)setAccountHandle:(id)arg1;
- (void)setAccountIdentifier:(id)arg1;
- (void)setAssistantAccessControl:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setHome:(id)arg1;
- (void)setPairingIdentity:(id)arg1;
- (void)setPresenceAuthStatus:(id)arg1;
- (void)setPrivilege:(unsigned long long)arg1;
- (void)setRelayIdentifier:(id)arg1;
- (void)setRemoteAccessAllowed:(bool)arg1;
- (void)setUUID:(id)arg1;
- (void)setUserID:(id)arg1;
- (id)shortDescription;
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (bool)updateAdministrator:(bool)arg1;
- (void)updateRelayIdentifier:(id)arg1;
- (bool)updateRemoteAccessAllowed:(bool)arg1;
- (id)userID;
- (id)uuid;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

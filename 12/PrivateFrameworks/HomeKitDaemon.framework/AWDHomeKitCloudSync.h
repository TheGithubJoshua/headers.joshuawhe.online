<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDHomeKitCloudSync.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/AWDHomeKitCloudSync.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface AWDHomeKitCloudSync : PBCodable <NSCopying> {
    int  _dataSyncState;
    unsigned int  _fetchCount;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int dataSyncState : 1; 
        unsigned int fetchCount : 1; 
        unsigned int homeManagerFetchCount : 1; 
        unsigned int homeManagerUploadCount : 1; 
        unsigned int homeZoneFetchCount : 1; 
        unsigned int homeZoneUploadCount : 1; 
        unsigned int pushCount : 1; 
        unsigned int uploadCount : 1; 
        unsigned int uploadErrorCount : 1; 
        unsigned int hasDecryptionFailed : 1; 
        unsigned int lastDecryptionFailed : 1; 
        unsigned int uploadMaximumDelayReached : 1; 
    }  _has;
    bool  _hasDecryptionFailed;
    unsigned int  _homeManagerFetchCount;
    unsigned int  _homeManagerUploadCount;
    unsigned int  _homeZoneFetchCount;
    unsigned int  _homeZoneUploadCount;
    bool  _lastDecryptionFailed;
    unsigned int  _pushCount;
    unsigned long long  _timestamp;
    NSMutableArray * _topErrors;
    NSMutableArray * _topReasons;
    unsigned int  _uploadCount;
    unsigned int  _uploadErrorCount;
    bool  _uploadMaximumDelayReached;
}

@property (nonatomic) int dataSyncState;
@property (nonatomic) unsigned int fetchCount;
@property (nonatomic) bool hasDataSyncState;
@property (nonatomic) bool hasDecryptionFailed;
@property (nonatomic) bool hasFetchCount;
@property (nonatomic) bool hasHasDecryptionFailed;
@property (nonatomic) bool hasHomeManagerFetchCount;
@property (nonatomic) bool hasHomeManagerUploadCount;
@property (nonatomic) bool hasHomeZoneFetchCount;
@property (nonatomic) bool hasHomeZoneUploadCount;
@property (nonatomic) bool hasLastDecryptionFailed;
@property (nonatomic) bool hasPushCount;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasUploadCount;
@property (nonatomic) bool hasUploadErrorCount;
@property (nonatomic) bool hasUploadMaximumDelayReached;
@property (nonatomic) unsigned int homeManagerFetchCount;
@property (nonatomic) unsigned int homeManagerUploadCount;
@property (nonatomic) unsigned int homeZoneFetchCount;
@property (nonatomic) unsigned int homeZoneUploadCount;
@property (nonatomic) bool lastDecryptionFailed;
@property (nonatomic) unsigned int pushCount;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic, retain) NSMutableArray *topErrors;
@property (nonatomic, retain) NSMutableArray *topReasons;
@property (nonatomic) unsigned int uploadCount;
@property (nonatomic) unsigned int uploadErrorCount;
@property (nonatomic) bool uploadMaximumDelayReached;

+ (Class)topErrorsType;
+ (Class)topReasonsType;

- (void).cxx_destruct;
- (int)StringAsDataSyncState:(id)arg1;
- (void)addTopErrors:(id)arg1;
- (void)addTopReasons:(id)arg1;
- (void)clearTopErrors;
- (void)clearTopReasons;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)dataSyncState;
- (id)dataSyncStateAsString:(int)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)fetchCount;
- (bool)hasDataSyncState;
- (bool)hasDecryptionFailed;
- (bool)hasFetchCount;
- (bool)hasHasDecryptionFailed;
- (bool)hasHomeManagerFetchCount;
- (bool)hasHomeManagerUploadCount;
- (bool)hasHomeZoneFetchCount;
- (bool)hasHomeZoneUploadCount;
- (bool)hasLastDecryptionFailed;
- (bool)hasPushCount;
- (bool)hasTimestamp;
- (bool)hasUploadCount;
- (bool)hasUploadErrorCount;
- (bool)hasUploadMaximumDelayReached;
- (unsigned long long)hash;
- (unsigned int)homeManagerFetchCount;
- (unsigned int)homeManagerUploadCount;
- (unsigned int)homeZoneFetchCount;
- (unsigned int)homeZoneUploadCount;
- (bool)isEqual:(id)arg1;
- (bool)lastDecryptionFailed;
- (void)mergeFrom:(id)arg1;
- (unsigned int)pushCount;
- (bool)readFrom:(id)arg1;
- (void)setDataSyncState:(int)arg1;
- (void)setFetchCount:(unsigned int)arg1;
- (void)setHasDataSyncState:(bool)arg1;
- (void)setHasDecryptionFailed:(bool)arg1;
- (void)setHasFetchCount:(bool)arg1;
- (void)setHasHasDecryptionFailed:(bool)arg1;
- (void)setHasHomeManagerFetchCount:(bool)arg1;
- (void)setHasHomeManagerUploadCount:(bool)arg1;
- (void)setHasHomeZoneFetchCount:(bool)arg1;
- (void)setHasHomeZoneUploadCount:(bool)arg1;
- (void)setHasLastDecryptionFailed:(bool)arg1;
- (void)setHasPushCount:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasUploadCount:(bool)arg1;
- (void)setHasUploadErrorCount:(bool)arg1;
- (void)setHasUploadMaximumDelayReached:(bool)arg1;
- (void)setHomeManagerFetchCount:(unsigned int)arg1;
- (void)setHomeManagerUploadCount:(unsigned int)arg1;
- (void)setHomeZoneFetchCount:(unsigned int)arg1;
- (void)setHomeZoneUploadCount:(unsigned int)arg1;
- (void)setLastDecryptionFailed:(bool)arg1;
- (void)setPushCount:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setTopErrors:(id)arg1;
- (void)setTopReasons:(id)arg1;
- (void)setUploadCount:(unsigned int)arg1;
- (void)setUploadErrorCount:(unsigned int)arg1;
- (void)setUploadMaximumDelayReached:(bool)arg1;
- (unsigned long long)timestamp;
- (id)topErrors;
- (id)topErrorsAtIndex:(unsigned long long)arg1;
- (unsigned long long)topErrorsCount;
- (id)topReasons;
- (id)topReasonsAtIndex:(unsigned long long)arg1;
- (unsigned long long)topReasonsCount;
- (unsigned int)uploadCount;
- (unsigned int)uploadErrorCount;
- (bool)uploadMaximumDelayReached;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

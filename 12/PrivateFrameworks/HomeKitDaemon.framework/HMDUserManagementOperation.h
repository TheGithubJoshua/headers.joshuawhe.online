<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDUserManagementOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDUserManagementOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDUserManagementOperation : HMFObject <HMFTimerDelegate, NSSecureCoding> {
    HMDAccessory * _accessory;
    bool  _backingOff;
    double  _backoffInterval;
    HMFTimer * _backoffTimer;
    NSObject<OS_dispatch_queue> * _clientQueue;
    <HMDUserManagementOperationDelegate> * _delegate;
    NSMutableArray * _dependencies;
    bool  _executing;
    NSDate * _expirationDate;
    HMFTimer * _expirationTimer;
    NSUUID * _identifier;
    bool  _lastOperationFailed;
    HMDUserManagementOperationManager * _operationManager;
    unsigned long long  _operationType;
    HAPPairingIdentity * _ownerPairingIdentity;
    NSObject<OS_dispatch_queue> * _propertyQueue;
    unsigned long long  _state;
    HMDUser * _user;
}

@property (nonatomic, retain) HMDAccessory *accessory;
@property (nonatomic, readonly) HMDAccessoryInvitation *accessoryInvitation;
@property (nonatomic, readonly) NSDictionary *accessoryInvitationInformation;
@property (getter=isBackingOff, nonatomic) bool backingOff;
@property (nonatomic, readonly) double backoffInterval;
@property (nonatomic, retain) HMFTimer *backoffTimer;
@property (getter=isCancelled, nonatomic, readonly) bool cancelled;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly, copy) NSString *debugDescription;
@property <HMDUserManagementOperationDelegate> *delegate;
@property (nonatomic, readonly, copy) NSArray *dependencies;
@property (readonly, copy) NSString *description;
@property (getter=isExecuting, nonatomic) bool executing;
@property (nonatomic, readonly) NSDate *expirationDate;
@property (nonatomic, readonly) HMFTimer *expirationTimer;
@property (getter=isExpired, nonatomic, readonly) bool expired;
@property (getter=isFinished, nonatomic, readonly) bool finished;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSUUID *identifier;
@property (nonatomic) bool lastOperationFailed;
@property (nonatomic, retain) HMDUserManagementOperationManager *operationManager;
@property (nonatomic, readonly) unsigned long long operationType;
@property (nonatomic, retain) HAPPairingIdentity *ownerPairingIdentity;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *propertyQueue;
@property (getter=isReady, nonatomic, readonly) bool ready;
@property (nonatomic) unsigned long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) HMDUser *user;

+ (id)addUserManagementOperationForUser:(id)arg1 accessory:(id)arg2 model:(id)arg3;
+ (id)operationWithDictionary:(id)arg1 home:(id)arg2;
+ (id)removeUserManagementOperationForUser:(id)arg1 accessory:(id)arg2 model:(id)arg3;
+ (id)shortDescription;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (long long)_accessoryInvitationState;
- (void)_addPairingToHAPAccessory:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_endBackoffTimer;
- (bool)_isFinished;
- (void)_removePairingFromHAPAccessory:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_setupExpirationTimer;
- (void)_startBackoffTimer;
- (id)accessory;
- (id)accessoryInvitation;
- (id)accessoryInvitationInformation;
- (void)addDependency:(id)arg1;
- (double)backoffInterval;
- (id)backoffTimer;
- (void)cancel;
- (id)clientQueue;
- (id)debugDescription;
- (id)delegate;
- (id)dependencies;
- (id)description;
- (id)descriptionWithPointer:(bool)arg1;
- (id)dictionaryEncoding;
- (void)encodeWithCoder:(id)arg1;
- (void)executeWithCompletionQueue:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)expirationDate;
- (id)expirationTimer;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithOperationType:(unsigned long long)arg1 identifier:(id)arg2 user:(id)arg3 accessory:(id)arg4 expiration:(id)arg5;
- (bool)isBackingOff;
- (bool)isCancelled;
- (bool)isExecuting;
- (bool)isExpired;
- (bool)isFinished;
- (bool)isReady;
- (bool)isValid;
- (bool)lastOperationFailed;
- (bool)mergeWithOperation:(id)arg1;
- (id)modelObjectWithChangeType:(unsigned long long)arg1;
- (double)nextBackoffInterval;
- (id)operationManager;
- (unsigned long long)operationType;
- (id)ownerPairingIdentity;
- (id)propertyQueue;
- (void)setAccessory:(id)arg1;
- (void)setBackingOff:(bool)arg1;
- (void)setBackoffTimer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExecuting:(bool)arg1;
- (void)setLastOperationFailed:(bool)arg1;
- (void)setOperationManager:(id)arg1;
- (void)setOwnerPairingIdentity:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (id)shortDescription;
- (unsigned long long)state;
- (void)timerDidFire:(id)arg1;
- (id)user;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDAccessorySetting.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDAccessorySetting.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDAccessorySetting : HMFObject <HMDAccessorySettingProtocol, HMDAccessorySettingUpdateDelegate, HMDAccessorySettingUpdateProtocol, HMDBackingStoreObjectProtocol, HMDHomeMessageReceiver, HMFLogging, NSSecureCoding> {
    NSObject<OS_dispatch_queue> * _clientQueue;
    unsigned long long  _configurationVersion;
    NSMutableSet * _constraintItemsMarkedForRemoval;
    NSMutableArray * _constraints;
    HMDAccessorySettingContainer * _container;
    HMDAccessorySettingGroup * _group;
    NSUUID * _identifier;
    HMDAccessorySetting * _mediaSystemSetting;
    HMFMessageDestination * _messageDestination;
    HMFMessageDispatcher * _messageDispatcher;
    NSString * _name;
    unsigned long long  _properties;
    NSObject<OS_dispatch_queue> * _propertyQueue;
    long long  _type;
    HMDAccessorySettingUpdateBase * _updateSetting;
    id  _value;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *clientQueue;
@property (nonatomic) unsigned long long configurationVersion;
@property (readonly, copy) NSArray *constraints;
@property (nonatomic, retain) HMDAccessorySettingContainer *container;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property HMDAccessorySettingGroup *group;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSUUID *identifier;
@property (readonly) NSString *keyPath;
@property HMDAccessorySetting *mediaSystemSetting;
@property (nonatomic, retain) HMFMessageDestination *messageDestination;
@property (nonatomic, retain) HMFMessageDispatcher *messageDispatcher;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly, copy) NSSet *messageReceiverChildren;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (readonly) HMDAccessorySettingModel *model;
@property (readonly, copy) NSArray *models;
@property (readonly, copy) NSString *name;
@property (readonly) unsigned long long properties;
@property (readonly) NSObject<OS_dispatch_queue> *propertyQueue;
@property (readonly) Class superclass;
@property (readonly) long long type;
@property (nonatomic, retain) HMDAccessorySettingUpdateBase *updateSetting;
@property (readonly, copy) id value;

+ (bool)hasMessageReceiverChildren;
+ (id)logCategory;
+ (id)supportedConstraintClasses;
+ (id)supportedValueClasses;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)__init;
- (void)_fixupAccessorySetting;
- (id)_fixupMergeStrategyConstraints;
- (void)_handleAddConstraint:(id)arg1;
- (void)_handleRemoveConstraint:(id)arg1;
- (void)_handleReplaceConstraints:(id)arg1;
- (void)_handleReplaceConstraints:(id)arg1 additions:(id)arg2 removals:(id)arg3 completion:(id /* block */)arg4;
- (void)_handleUpdateValue:(id)arg1;
- (void)_handleUpdatedConstraints:(id)arg1;
- (void)_mergeConstraintsLocallyWithAdditions:(id)arg1 removals:(id)arg2;
- (void)_relayConstraintsMessage:(id)arg1 toTargetAccessory:(id)arg2 additions:(id)arg3 removals:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)_relayRequestMessage:(id)arg1 targetAccessory:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_relayRequestMessageNoRemoteCheck:(id)arg1 targetAccessory:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_replaceConstraints:(id)arg1 additions:(id)arg2 removals:(id)arg3 completion:(id /* block */)arg4;
- (void)_saveHomeConfiguration:(id)arg1;
- (id)accessoryFromTarget;
- (void)addConstraint:(id)arg1;
- (id)clientQueue;
- (bool)compareConstraints:(id)arg1;
- (unsigned long long)configurationVersion;
- (void)configureWithContainer:(id)arg1 messageDispatcher:(id)arg2;
- (id)constraintWithIdentifier:(id)arg1;
- (id)constraints;
- (id)container;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)description:(id)arg1 indent:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (void)fixupAccessorySetting;
- (id)group;
- (void)handleAddConstraint:(id)arg1;
- (void)handleRemoveConstraint:(id)arg1;
- (void)handleReplaceConstraints:(id)arg1 additions:(id)arg2 removals:(id)arg3 completion:(id /* block */)arg4;
- (void)handleUpdateValue:(id)arg1;
- (unsigned long long)hash;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithModel:(id)arg1;
- (bool)isConstraintMergeStrategyReflection;
- (bool)isEqual:(id)arg1;
- (bool)isValid:(id*)arg1;
- (id)keyPath;
- (id)logIdentifier;
- (id)mediaSystemSetting;
- (void)mergeConstraintsFromOther:(id)arg1;
- (id)messageDestination;
- (id)messageDispatcher;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)model;
- (id)models;
- (id)modelsForConstraintsUpdate:(id)arg1;
- (id)name;
- (unsigned long long)properties;
- (id)propertyQueue;
- (void)registerForMessages;
- (id)remoteMessageDestination:(id)arg1;
- (void)removeConstraint:(id)arg1;
- (void)replaceConstraints:(id)arg1 additions:(id)arg2 removals:(id)arg3 completion:(id /* block */)arg4;
- (void)sendReflectedNotification:(bool)arg1;
- (void)setConfigurationVersion:(unsigned long long)arg1;
- (void)setConstraints:(id)arg1;
- (void)setContainer:(id)arg1;
- (void)setGroup:(id)arg1;
- (void)setMediaSystemSetting:(id)arg1;
- (void)setMessageDestination:(id)arg1;
- (void)setMessageDispatcher:(id)arg1;
- (void)setUpdateSetting:(id)arg1;
- (void)setValue:(id)arg1;
- (void)settingUpdate:(id)arg1 didCompleteWithError:(id)arg2;
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;
- (id)transactionWithObjectChangeType:(unsigned long long)arg1;
- (long long)type;
- (void)updateMediaSystemSettings:(id)arg1;
- (id)updateSetting;
- (id)value;
- (id)valueUpdateNotificationWithMessage:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMDDataStreamBulkSendProtocol.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeKitDaemon.framework/HMDDataStreamBulkSendProtocol.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon (484.7.17.1)
 */

@interface HMDDataStreamBulkSendProtocol : NSObject <HMDDataStreamProtocol, HMFLogging> {
    id  _accessory;
    NSMapTable * _activeBulkSendSessions;
    <HMDDataStreamProtocolDelegate> * _dataStream;
    bool  _isConnected;
    NSMapTable * _listeners;
    unsigned int  _nextSessionIdentifier;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (nonatomic) id accessory;
@property (nonatomic, retain) NSMapTable *activeBulkSendSessions;
@property (nonatomic) <HMDDataStreamProtocolDelegate> *dataStream;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isConnected;
@property (nonatomic, retain) NSMapTable *listeners;
@property (nonatomic) unsigned int nextSessionIdentifier;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

+ (id)logCategory;
+ (id)protocolName;

- (void).cxx_destruct;
- (void)_cancelSessionWithIdentifier:(id)arg1 reason:(unsigned short)arg2 hadReceivedEof:(bool)arg3;
- (void)_closeAllSessionsWithError:(id)arg1;
- (id)_createSessionCandidateWithRequestHeader:(id)arg1;
- (id)_createSessionFromCandidate:(id)arg1 queue:(id)arg2;
- (id)_createSessionIdentifier;
- (id)_getBulkSendSessionForSessionIdentifier:(id)arg1;
- (void)_handleCloseMessage:(id)arg1;
- (void)_handleDataMessage:(id)arg1;
- (void)_handleOpenWithRequestHeader:(id)arg1 payload:(id)arg2;
- (void)_pumpMessage:(id)arg1 session:(id)arg2;
- (void)_pumpReceiveFailure:(id)arg1 session:(id)arg2;
- (void)_rejectSessionCandidate:(id)arg1 reason:(unsigned short)arg2;
- (void)_removeBulkSendSessionForSessionIdentifier:(id)arg1;
- (void)_sendAckMessageWithIdentifier:(id)arg1;
- (void)_sendCloseMessageWithIdentifier:(id)arg1 reason:(unsigned short)arg2;
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 bulkSendStatus:(unsigned short)arg2;
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 status:(unsigned short)arg2;
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 streamIdentifier:(id)arg2;
- (void)_startSessionCandidate:(id)arg1 queue:(id)arg2 callback:(id /* block */)arg3;
- (id)accessory;
- (id)activeBulkSendSessions;
- (void)addListener:(id)arg1 fileType:(id)arg2;
- (void)asyncBulkSendSessionCandidate:(id)arg1 didAcceptOnQueue:(id)arg2 callback:(id /* block */)arg3;
- (void)asyncBulkSendSessionCandidate:(id)arg1 didRejectWithReason:(unsigned short)arg2;
- (void)asyncBulkSendSessionDidCancelSessionWithIdentifier:(id)arg1 reason:(unsigned short)arg2 hadReceivedEof:(bool)arg3;
- (id)dataStream;
- (void)dataStream:(id)arg1 didFailWithError:(id)arg2;
- (void)dataStream:(id)arg1 didReceiveEvent:(id)arg2 header:(id)arg3 payload:(id)arg4;
- (void)dataStream:(id)arg1 didReceiveRequest:(id)arg2 header:(id)arg3 payload:(id)arg4;
- (void)dataStream:(id)arg1 didReceiveResponse:(id)arg2 header:(id)arg3 payload:(id)arg4;
- (void)dataStreamDidClose:(id)arg1;
- (void)dataStreamDidOpen:(id)arg1;
- (id)initWithQueue:(id)arg1 accessory:(id)arg2;
- (bool)isConnected;
- (id)listeners;
- (unsigned int)nextSessionIdentifier;
- (id)queue;
- (void)removeListener:(id)arg1;
- (void)setAccessory:(id)arg1;
- (void)setActiveBulkSendSessions:(id)arg1;
- (void)setDataStream:(id)arg1;
- (void)setIsConnected:(bool)arg1;
- (void)setListeners:(id)arg1;
- (void)setNextSessionIdentifier:(unsigned int)arg1;
- (void)setQueue:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SBKUniversalPlaybackPositionStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreBookkeeper.framework/SBKUniversalPlaybackPositionStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreBookkeeper.framework/StoreBookkeeper (1)
 */

@interface SBKUniversalPlaybackPositionStore : NSObject {
    id  _accountsObserver;
    unsigned long long  _automaticSynchronizeOptions;
    double  _autorefreshInterval;
    SBKAsynchronousTask * _bagLookupTask;
    SBKAsynchronousTask * _currentTask;
    SBKRequestHandler * _currentTaskRequestHandler;
    <SBKUniversalPlaybackPositionDataSource> * _dataSource;
    NSDate * _dateToFireNextTimer;
    NSString * _domain;
    bool  _hasLocalChangesToSync;
    double  _initialAutosyncInterval;
    bool  _isActive;
    SBKAsynchronousTask * _lookupDomainVersionTask;
    NSMutableArray * _pendingTaskBlocks;
    double  _pollingLimitFromBag;
    id  _prefsObserver;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _refreshTimerActive;
    NSTimer * _timer;
}

@property unsigned long long automaticSynchronizeOptions;
@property (retain) SBKAsynchronousTask *bagLookupTask;
@property (retain) SBKAsynchronousTask *currentTask;
@property (retain) SBKRequestHandler *currentTaskRequestHandler;
@property (readonly) <SBKUniversalPlaybackPositionDataSource> *dataSource;
@property (retain) NSDate *dateToFireNextTimer;
@property bool hasLocalChangesToSync;
@property (retain) SBKAsynchronousTask *lookupDomainVersionTask;
@property (retain) NSTimer *timer;

+ (id)keyValueStoreItemIdentifierForItem:(id)arg1;

- (void).cxx_destruct;
- (id)_accountForSyncing;
- (bool)_automaticallySynchronizeLocalChangesOnResignActive;
- (bool)_automaticallySynchronizeOnBecomeActive;
- (double)_effectiveAutorefreshRate;
- (void)_onQueueLoadBagContextWithCompletionHandler:(id /* block */)arg1;
- (void)_onQueueLoadRemoteDomainVersionWithCompletionBlock:(id /* block */)arg1;
- (void)_onQueuePullMetadataItemWithItemIdentifier:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)_onQueuePushMetadataItem:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)_onQueueResumeTimer;
- (void)_onQueueRunNextPendingTaskBlock;
- (void)_onQueueRunTaskWithName:(id)arg1 taskCompletionHandler:(id /* block */)arg2 runTaskBlock:(id /* block */)arg3;
- (void)_onQueueScheduleTimer;
- (void)_onQueueStartNewTimer;
- (void)_onQueueStartNewTimerWithTimeIntervalSinceNow:(double)arg1;
- (void)_onQueueStopTimer;
- (void)_onQueueSuspendTimer;
- (void)_onQueueSynchronizeImmediatelyWithCompletionHandler:(id /* block */)arg1;
- (void)_onQueueSynchronizeWithAutosynchronizeMask:(unsigned long long)arg1 withCompletionBlock:(id /* block */)arg2;
- (void)_onQueueUpdateTimerForActiveChanges;
- (void)_onQueueUpdateTimerForAutomaticSyncOptionChanges;
- (void)_timerFired:(id)arg1;
- (bool)_timerIsStopped;
- (void)_updateAutorefreshRateSettingAndRestartTimer:(bool)arg1;
- (void)_updateForStoreAccountsChange;
- (void)_updateSettingsFromLoadedBagContext:(id)arg1;
- (unsigned long long)automaticSynchronizeOptions;
- (bool)automaticallySynchronizeLocalChangesOnResignActive;
- (bool)automaticallySynchronizeOnBecomeActive;
- (id)bagLookupTask;
- (void)becomeActive;
- (void)checkForAvailabilityWithCompletionBlock:(id /* block */)arg1;
- (id)currentTask;
- (id)currentTaskRequestHandler;
- (id)dataSource;
- (id)dateToFireNextTimer;
- (void)dealloc;
- (void)deprecated_setDataSource:(id)arg1;
- (bool)hasLocalChangesToSync;
- (id)init;
- (id)initWithDomain:(id)arg1 dataSource:(id)arg2 automaticSynchronizeOptions:(unsigned long long)arg3 isActive:(bool)arg4;
- (id)initWithInitialUpdateDelay:(double)arg1;
- (void)loadBagContextWithCompletionBlock:(id /* block */)arg1;
- (void)loadRemoteDomainVersionWithCompletionBlock:(id /* block */)arg1;
- (id)lookupDomainVersionTask;
- (void)pullMetadataItemWithItemIdentifier:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)pushMetadataItem:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)resignActive;
- (void)setAutomaticSynchronizeOptions:(unsigned long long)arg1;
- (void)setAutomaticallySynchronizeLocalChangesOnResignActive:(bool)arg1;
- (void)setAutomaticallySynchronizeOnBecomeActive:(bool)arg1;
- (void)setBagLookupTask:(id)arg1;
- (void)setCurrentTask:(id)arg1;
- (void)setCurrentTaskRequestHandler:(id)arg1;
- (void)setDateToFireNextTimer:(id)arg1;
- (void)setHasLocalChangesToSync:(bool)arg1;
- (void)setLookupDomainVersionTask:(id)arg1;
- (void)setTimer:(id)arg1;
- (void)synchronizeImmediatelyWithCompletionBlock:(id /* block */)arg1;
- (void)synchronizeImmediatelyWithCompletionHandler:(id /* block */)arg1;
- (id)timer;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

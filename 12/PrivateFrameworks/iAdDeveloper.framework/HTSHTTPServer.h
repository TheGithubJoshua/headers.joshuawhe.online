<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HTSHTTPServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iAdDeveloper.framework/HTSHTTPServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iAdDeveloper.framework/iAdDeveloper (1)
 */

@interface HTSHTTPServer : NSObject {
    NSMutableArray * _activeConnections;
    NSMutableDictionary * _authTokens;
    double  _bandwidthStddev;
    unsigned long long  _bytesWritten;
    int  _cacheMaxAge;
    struct __CFHTTPMessage { } * _currentRequest;
    <HTSHTTPServerDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    bool  _digestAuthenticationEnabled;
    NSString * _documentRoot;
    double  _kbps;
    double  _lastReplenishTime;
    double  _latency;
    double  _latencyStddev;
    int  _listenSocket4;
    NSObject<OS_dispatch_source> * _listenSource4;
    NSString * _nodename;
    bool  _pipeliningEnabled;
    unsigned short  _port;
    NSObject<OS_dispatch_queue> * _serverQueue;
    unsigned long long  _totalBytesWritten;
}

@property (nonatomic) double bandwidthStddev;
@property (nonatomic) int cacheMaxAge;
@property (nonatomic) struct __CFHTTPMessage { }*currentRequest;
@property (nonatomic) <HTSHTTPServerDelegate> *delegate;
@property (nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (nonatomic) bool digestAuthenticationEnabled;
@property (nonatomic, copy) NSString *documentRoot;
@property (nonatomic) double kbps;
@property (nonatomic) double latency;
@property (nonatomic) double latencyStddev;
@property (nonatomic) bool pipeliningEnabled;
@property (nonatomic, readonly) unsigned short port;
@property (nonatomic, readonly) unsigned long long totalBytesWritten;
@property (nonatomic, readonly) NSString *urlString;

- (id)_authenticationResponseForRequest:(id)arg1;
- (void)_cleanupListenSocket;
- (void)_connection:(id)arg1 didReceiveRequest:(id)arg2;
- (void)_connection:(id)arg1 hadError:(id)arg2;
- (void)_connectionComplete:(id)arg1;
- (double)_currentLatency;
- (void)_handleGeneralRequest:(id)arg1 fromConnection:(id)arg2;
- (bool)_listenOnPort:(unsigned short)arg1;
- (id)_mimeTypeForExtension:(id)arg1;
- (void)_respondWithData:(id)arg1 mimeType:(id)arg2 toRequest:(id)arg3 connection:(id)arg4;
- (id)_restrictedFilePathForRelativePath:(id)arg1;
- (void)_returnResponse:(id)arg1 toConnection:(id)arg2 closeAfterSending:(bool)arg3;
- (unsigned long long)availableBandwidth;
- (double)bandwidthStddev;
- (int)cacheMaxAge;
- (void)consumedBandwidth:(unsigned long long)arg1;
- (struct __CFHTTPMessage { }*)currentRequest;
- (void)dealloc;
- (id)delegate;
- (id)delegateQueue;
- (bool)digestAuthenticationEnabled;
- (id)documentRoot;
- (id)init;
- (id)initWithPort:(unsigned short)arg1 documentRoot:(id)arg2;
- (double)kbps;
- (double)latency;
- (double)latencyStddev;
- (bool)pipeliningEnabled;
- (unsigned short)port;
- (void)resetNetworkSetup;
- (void)setBandwidthStddev:(double)arg1;
- (void)setCacheMaxAge:(int)arg1;
- (void)setCurrentRequest:(struct __CFHTTPMessage { }*)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)setDigestAuthenticationEnabled:(bool)arg1;
- (void)setDocumentRoot:(id)arg1;
- (void)setKbps:(double)arg1;
- (void)setLatency:(double)arg1;
- (void)setLatencyStddev:(double)arg1;
- (void)setPipeliningEnabled:(bool)arg1;
- (unsigned long long)totalBytesWritten;
- (id)urlString;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

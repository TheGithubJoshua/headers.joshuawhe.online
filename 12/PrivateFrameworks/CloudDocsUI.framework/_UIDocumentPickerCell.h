<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIDocumentPickerCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudDocsUI.framework/_UIDocumentPickerCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudDocsUI.framework/CloudDocsUI (113.100.4)
 */

@interface _UIDocumentPickerCell : UICollectionViewTableCell {
    UILongPressGestureRecognizer * _actionGestureRecognizer;
    NSArray * _actions;
    NSArray * _activeConstraints;
    NSArray * _availableActions;
    UIView * _cachedSelectedBackgroundView;
    long long  _cellStyle;
    _UIDocumentPickerDocumentCollectionViewController * _collectionView;
    NSArray * _gridConstraints;
    NSLayoutConstraint * _indentationConstraint;
    UIView * _indentationHelperView;
    NSArray * _indentedConstraints;
    _UIDocumentPickerContainerItem * _item;
    UILongPressGestureRecognizer * _pickableDiagnosticGestureRecognizer;
    UIProgressView * _progressView;
    UIImageView * _selectionView;
    NSMutableArray * _selectionViewConstraints;
    UIView * _selectionViewsThumbnailView;
    UILabel * _subtitle2Label;
    UILabel * _subtitleJoiner;
    UILabel * _subtitleLabel;
    NSArray * _tableConstraints;
    UIImageView * _tagView;
    NSLayoutConstraint * _thumbnailCenterHeightConstraint;
    NSLayoutConstraint * _thumbnailCenterWidthConstraint;
    UIImageView * _thumbnailView;
    UILabel * _titleLabel;
    bool  _transitioningLayout;
}

@property (nonatomic, retain) UILongPressGestureRecognizer *actionGestureRecognizer;
@property (nonatomic, retain) NSArray *actions;
@property (nonatomic, retain) NSArray *activeConstraints;
@property (nonatomic, retain) NSArray *availableActions;
@property (nonatomic, retain) UIView *cachedSelectedBackgroundView;
@property (nonatomic) long long cellStyle;
@property (nonatomic) _UIDocumentPickerDocumentCollectionViewController *collectionView;
@property (nonatomic, retain) NSArray *gridConstraints;
@property (nonatomic, retain) NSLayoutConstraint *indentationConstraint;
@property (nonatomic, retain) UIView *indentationHelperView;
@property (nonatomic, retain) NSArray *indentedConstraints;
@property (nonatomic, retain) _UIDocumentPickerContainerItem *item;
@property (nonatomic, retain) UILongPressGestureRecognizer *pickableDiagnosticGestureRecognizer;
@property (nonatomic, retain) UIProgressView *progressView;
@property (nonatomic, retain) UIImageView *selectionView;
@property (nonatomic, retain) NSMutableArray *selectionViewConstraints;
@property (nonatomic, retain) UIView *selectionViewsThumbnailView;
@property (nonatomic, retain) UILabel *subtitle2Label;
@property (nonatomic, retain) UILabel *subtitleJoiner;
@property (nonatomic, retain) UILabel *subtitleLabel;
@property (nonatomic, retain) NSArray *tableConstraints;
@property (nonatomic, retain) UIImageView *tagView;
@property (nonatomic, retain) NSLayoutConstraint *thumbnailCenterHeightConstraint;
@property (nonatomic, retain) NSLayoutConstraint *thumbnailCenterWidthConstraint;
@property (nonatomic, retain) UIImageView *thumbnailView;
@property (nonatomic, retain) UILabel *titleLabel;
@property (getter=isTransitioningLayout, nonatomic) bool transitioningLayout;

+ (id)_subtitleFontForTable:(bool)arg1;
+ (id)_titleFontForTable:(bool)arg1;
+ (struct CGSize { double x1; double x2; })defaultSizeForCellStyle:(long long)arg1 traitCollection:(id)arg2;
+ (struct CGSize { double x1; double x2; })thumbnailSizeForTraits:(id)arg1 cellStyle:(long long)arg2;

- (void).cxx_destruct;
- (void)_activityAction:(id)arg1;
- (void)_deleteAction:(id)arg1;
- (void)_dynamicTypeSizeChanged:(id)arg1;
- (void)_infoAction:(id)arg1;
- (void)_moreAction:(id)arg1;
- (void)_moveAction:(id)arg1;
- (void)_renameAction:(id)arg1;
- (void)_showActions:(id)arg1;
- (void)_showPickableDiagnostic;
- (void)_udpateLabelAlpha;
- (void)_updateAccessoryType;
- (void)_updateConstraintsForCellStyle;
- (void)_updateFonts;
- (void)_updateIconSize;
- (void)_updateSelectionState:(bool)arg1;
- (void)_updateSeparatorInset;
- (id)actionGestureRecognizer;
- (id)actions;
- (id)activeConstraints;
- (void)applyLayoutAttributes:(id)arg1;
- (id)availableActions;
- (id)cachedSelectedBackgroundView;
- (bool)canBecomeFirstResponder;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (long long)cellStyle;
- (id)collectionView;
- (void)dealloc;
- (void)didTransitionFromLayout:(id)arg1 toLayout:(id)arg2;
- (id)gridConstraints;
- (id)indentationConstraint;
- (id)indentationHelperView;
- (id)indentedConstraints;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isTransitioningLayout;
- (id)item;
- (id)pickableDiagnosticGestureRecognizer;
- (void)prepareForReuse;
- (id)progressView;
- (void)reloadItem:(bool)arg1;
- (id)selectionView;
- (id)selectionViewConstraints;
- (id)selectionViewsThumbnailView;
- (void)setActionGestureRecognizer:(id)arg1;
- (void)setActions:(id)arg1;
- (void)setActiveConstraints:(id)arg1;
- (void)setAvailableActions:(id)arg1;
- (void)setCachedSelectedBackgroundView:(id)arg1;
- (void)setCellStyle:(long long)arg1;
- (void)setCollectionView:(id)arg1;
- (void)setEditing:(bool)arg1;
- (void)setGridConstraints:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setIndentationConstraint:(id)arg1;
- (void)setIndentationHelperView:(id)arg1;
- (void)setIndentedConstraints:(id)arg1;
- (void)setItem:(id)arg1;
- (void)setPickableDiagnosticGestureRecognizer:(id)arg1;
- (void)setProgressView:(id)arg1;
- (void)setSelected:(bool)arg1;
- (void)setSelectionView:(id)arg1;
- (void)setSelectionViewConstraints:(id)arg1;
- (void)setSelectionViewsThumbnailView:(id)arg1;
- (void)setSubtitle2Label:(id)arg1;
- (void)setSubtitleJoiner:(id)arg1;
- (void)setSubtitleLabel:(id)arg1;
- (void)setTableConstraints:(id)arg1;
- (void)setTagView:(id)arg1;
- (void)setThumbnailCenterHeightConstraint:(id)arg1;
- (void)setThumbnailCenterWidthConstraint:(id)arg1;
- (void)setThumbnailView:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setTransitioningLayout:(bool)arg1;
- (id)subtitle2Label;
- (id)subtitleJoiner;
- (id)subtitleLabel;
- (id)tableConstraints;
- (id)tagView;
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;
- (id)thumbnailCenterHeightConstraint;
- (id)thumbnailCenterWidthConstraint;
- (id)thumbnailView;
- (id)titleLabel;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateActionGestureRecognizer;
- (void)updateForEditingState:(bool)arg1;
- (void)willTransitionFromLayout:(id)arg1 toLayout:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

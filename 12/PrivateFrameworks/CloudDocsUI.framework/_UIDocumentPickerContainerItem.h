<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIDocumentPickerContainerItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudDocsUI.framework/_UIDocumentPickerContainerItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudDocsUI.framework/CloudDocsUI (113.100.4)
 */

@interface _UIDocumentPickerContainerItem : NSObject <_UIDocumentPickerDirectoryObserverItem> {
    bool  _cachedIsAlias;
    bool  _hasCachedIsAlias;
    _UIDocumentPickerURLContainerModel * _model;
    long long  _modelDisplayCount;
    _UIDocumentPickerContainerModel * _parentModel;
    NSString * _pickabilityReason;
    bool  _pickable;
    id  _resourceIdentifier;
    NSOperation * _thumbnailLoadOperation;
    NSMapTable * _thumbnailsBySize;
    long long  _type;
    _UIDocumentPickerURLContainerModel * _weak_model;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, retain) _UIDocumentPickerContainerModel *model;
@property (nonatomic, readonly) NSDate *modificationDate;
@property (nonatomic) _UIDocumentPickerContainerModel *parentModel;
@property (nonatomic, copy) NSString *pickabilityReason;
@property (nonatomic) bool pickable;
@property (nonatomic, readonly) bool renameable;
@property (nonatomic, readonly, retain) NSString *subtitle;
@property (nonatomic, readonly, retain) NSString *subtitle2;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSMapTable *thumbnailsBySize;
@property (nonatomic, readonly, retain) NSString *title;
@property (nonatomic, readonly) long long type;
@property (nonatomic, readonly, retain) NSURL *url;
@property (nonatomic, readonly, retain) NSURL *urlInLocalContainer;

+ (id)_blockingBadgeForContainer:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 scale:(double)arg3;
+ (id)_blockingFolderIconForURL:(id)arg1 container:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 scale:(double)arg4;
+ (id)_blockingIconForDocumentProxy:(id)arg1 withSize:(struct CGSize { double x1; double x2; })arg2;
+ (id)_blockingIconForURL:(id)arg1 withSize:(struct CGSize { double x1; double x2; })arg2;
+ (id)_blockingThumbnailForItem:(id)arg1 documentProxy:(id)arg2 withSize:(struct CGSize { double x1; double x2; })arg3 scale:(double)arg4 wantsBorder:(bool*)arg5 generatedThumbnail:(bool*)arg6;
+ (id)_lruThumbnailArray;
+ (void)clearLRUThumbnailCache;
+ (void)markThumbnailAsRecentlyUsed:(id)arg1;

- (void).cxx_destruct;
- (id)_blipWithTags:(id)arg1 height:(double)arg2 scale:(double)arg3;
- (id)_blockingThumbnailWithSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2 wantsBorder:(bool*)arg3;
- (id)_createThumbnailWithSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2;
- (void)_ensureModelPresent;
- (id)_formattedSubtitleForNumberOfItems:(unsigned long long)arg1;
- (void)_modelChanged;
- (id)_resourceIdentifier;
- (id)contentType;
- (void)dealloc;
- (void)decrementModelDisplayCount;
- (id)description;
- (unsigned long long)hash;
- (void)incrementModelDisplayCount;
- (unsigned long long)indentationLevel;
- (id)init;
- (bool)isActionApplicableForItem:(long long)arg1;
- (bool)isAlias;
- (bool)isEqual:(id)arg1;
- (id)model;
- (void)modelChanged;
- (id)modificationDate;
- (id)parentModel;
- (id)pickabilityReason;
- (bool)pickable;
- (bool)renameable;
- (void)setParentModel:(id)arg1;
- (void)setPickabilityReason:(id)arg1;
- (void)setPickable:(bool)arg1;
- (void)setThumbnailsBySize:(id)arg1;
- (id)sortPath;
- (id)subtitle;
- (id)subtitle2;
- (id)tagBlipsWithHeight:(double)arg1 scale:(double)arg2;
- (id)tags;
- (id)thumbnailWithSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2;
- (id)thumbnailsBySize;
- (id)title;
- (long long)type;
- (id)url;
- (id)urlInLocalContainer;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

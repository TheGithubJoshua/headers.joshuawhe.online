<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>W5WiFiStatus.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WiFiVelocity.framework/W5WiFiStatus.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WiFiVelocity.framework/WiFiVelocity (111)
 */

@interface W5WiFiStatus : NSObject <NSCopying, NSSecureCoding> {
    NSString * _bssid;
    NSData * _btcConfig;
    int  _btcMode;
    NSData * _btcProfiles2GHz;
    NSData * _btcProfiles5GHz;
    NSArray * _cachedScanResults;
    NSData * _chainAck;
    W5WiFiChannel * _channel;
    NSString * _countryCode;
    NSData * _desense;
    NSData * _desenseLevel;
    NSArray * _dnsAddresses;
    unsigned int  _eapolControlMode;
    unsigned int  _eapolSupplicantState;
    long long  _guardInterval;
    NSString * _interfaceName;
    NSArray * _ipv4Addresses;
    long long  _ipv4ConfigMethod;
    NSString * _ipv4RouterAddress;
    NSArray * _ipv6Addresses;
    long long  _ipv6ConfigMethod;
    NSString * _ipv6RouterAddress;
    W5WiFiPreferredNetwork * _lastJoinedPreferredNetwork;
    W5WiFiScanResult * _lastJoinedScanResult;
    NSArray * _linkQualityUpdates;
    NSString * _macAddress;
    long long  _mcsIndex;
    NSString * _networkServiceID;
    long long  _noise;
    long long  _numberOfSpacialStreams;
    int  _opMode;
    int  _phyMode;
    NSData * _power;
    bool  _powerOn;
    long long  _rssi;
    long long  _security;
    NSData * _ssid;
    NSString * _ssidString;
    NSArray * _supportedChannels;
    NSData * _txChainPower;
    double  _txRate;
}

@property (nonatomic, copy) NSString *bssid;
@property (nonatomic, copy) NSData *btcConfig;
@property (nonatomic) int btcMode;
@property (nonatomic, copy) NSData *btcProfiles2GHz;
@property (nonatomic, copy) NSData *btcProfiles5GHz;
@property (nonatomic, copy) NSArray *cachedScanResults;
@property (nonatomic, copy) NSData *chainAck;
@property (nonatomic, copy) W5WiFiChannel *channel;
@property (nonatomic, copy) NSString *countryCode;
@property (nonatomic, copy) NSData *desense;
@property (nonatomic, copy) NSData *desenseLevel;
@property (nonatomic, copy) NSArray *dnsAddresses;
@property (nonatomic) unsigned int eapolControlMode;
@property (nonatomic) unsigned int eapolSupplicantState;
@property (nonatomic) long long guardInterval;
@property (nonatomic, copy) NSString *interfaceName;
@property (nonatomic, copy) NSArray *ipv4Addresses;
@property (nonatomic) long long ipv4ConfigMethod;
@property (nonatomic, copy) NSString *ipv4RouterAddress;
@property (nonatomic, copy) NSArray *ipv6Addresses;
@property (nonatomic) long long ipv6ConfigMethod;
@property (nonatomic, copy) NSString *ipv6RouterAddress;
@property (nonatomic, copy) W5WiFiPreferredNetwork *lastJoinedPreferredNetwork;
@property (nonatomic, copy) W5WiFiScanResult *lastJoinedScanResult;
@property (nonatomic, copy) NSArray *linkQualityUpdates;
@property (nonatomic, copy) NSString *macAddress;
@property (nonatomic) long long mcsIndex;
@property (nonatomic, copy) NSString *networkServiceID;
@property (nonatomic) long long noise;
@property (nonatomic) long long numberOfSpacialStreams;
@property (nonatomic) int opMode;
@property (nonatomic) int phyMode;
@property (nonatomic, copy) NSData *power;
@property (nonatomic) bool powerOn;
@property (nonatomic) long long rssi;
@property (nonatomic) long long security;
@property (nonatomic, copy) NSData *ssid;
@property (nonatomic, copy) NSString *ssidString;
@property (nonatomic, copy) NSArray *supportedChannels;
@property (nonatomic, copy) NSData *txChainPower;
@property (nonatomic) double txRate;

+ (bool)supportsSecureCoding;

- (id)bssid;
- (id)btcConfig;
- (int)btcMode;
- (id)btcProfiles2GHz;
- (id)btcProfiles5GHz;
- (id)cachedScanResults;
- (id)chainAck;
- (id)channel;
- (bool)conformsToProtocol:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)countryCode;
- (void)dealloc;
- (id)description;
- (id)desense;
- (id)desenseLevel;
- (id)dnsAddresses;
- (unsigned int)eapolControlMode;
- (unsigned int)eapolSupplicantState;
- (void)encodeWithCoder:(id)arg1;
- (long long)guardInterval;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)interfaceName;
- (id)ipv4Addresses;
- (long long)ipv4ConfigMethod;
- (id)ipv4RouterAddress;
- (id)ipv6Addresses;
- (long long)ipv6ConfigMethod;
- (id)ipv6RouterAddress;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToWiFiStatus:(id)arg1;
- (id)lastJoinedPreferredNetwork;
- (id)lastJoinedScanResult;
- (id)linkQualityUpdates;
- (id)macAddress;
- (long long)mcsIndex;
- (id)networkServiceID;
- (long long)noise;
- (long long)numberOfSpacialStreams;
- (int)opMode;
- (int)phyMode;
- (id)power;
- (bool)powerOn;
- (long long)rssi;
- (long long)security;
- (void)setBssid:(id)arg1;
- (void)setBtcConfig:(id)arg1;
- (void)setBtcMode:(int)arg1;
- (void)setBtcProfiles2GHz:(id)arg1;
- (void)setBtcProfiles5GHz:(id)arg1;
- (void)setCachedScanResults:(id)arg1;
- (void)setChainAck:(id)arg1;
- (void)setChannel:(id)arg1;
- (void)setCountryCode:(id)arg1;
- (void)setDesense:(id)arg1;
- (void)setDesenseLevel:(id)arg1;
- (void)setDnsAddresses:(id)arg1;
- (void)setEapolControlMode:(unsigned int)arg1;
- (void)setEapolSupplicantState:(unsigned int)arg1;
- (void)setGuardInterval:(long long)arg1;
- (void)setInterfaceName:(id)arg1;
- (void)setIpv4Addresses:(id)arg1;
- (void)setIpv4ConfigMethod:(long long)arg1;
- (void)setIpv4RouterAddress:(id)arg1;
- (void)setIpv6Addresses:(id)arg1;
- (void)setIpv6ConfigMethod:(long long)arg1;
- (void)setIpv6RouterAddress:(id)arg1;
- (void)setLastJoinedPreferredNetwork:(id)arg1;
- (void)setLastJoinedScanResult:(id)arg1;
- (void)setLinkQualityUpdates:(id)arg1;
- (void)setMacAddress:(id)arg1;
- (void)setMcsIndex:(long long)arg1;
- (void)setNetworkServiceID:(id)arg1;
- (void)setNoise:(long long)arg1;
- (void)setNumberOfSpacialStreams:(long long)arg1;
- (void)setOpMode:(int)arg1;
- (void)setPhyMode:(int)arg1;
- (void)setPower:(id)arg1;
- (void)setPowerOn:(bool)arg1;
- (void)setRssi:(long long)arg1;
- (void)setSecurity:(long long)arg1;
- (void)setSsid:(id)arg1;
- (void)setSsidString:(id)arg1;
- (void)setSupportedChannels:(id)arg1;
- (void)setTxChainPower:(id)arg1;
- (void)setTxRate:(double)arg1;
- (id)ssid;
- (id)ssidString;
- (id)supportedChannels;
- (id)txChainPower;
- (double)txRate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

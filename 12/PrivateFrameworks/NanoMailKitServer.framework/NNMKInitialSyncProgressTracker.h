<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NNMKInitialSyncProgressTracker.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMailKitServer.framework/NNMKInitialSyncProgressTracker.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMailKitServer.framework/NanoMailKitServer (1)
 */

@interface NNMKInitialSyncProgressTracker : NSObject {
    <NNMKInitialSyncProgressTrackerDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _executionQueue;
    NSMutableSet * _initialSyncMessageIdsOfContentToAck;
    NSMutableSet * _initialSyncMessageIdsToSyncContent;
    unsigned long long  _initialSyncMessagesCount;
    double  _initialSyncProgress;
    bool  _isWaitingForAccounts;
    bool  _isWaitingForMessageContent;
    bool  _isWaitingForMessageHeaders;
    <NNMKSyncStateManager> * _syncStateManager;
    bool  _timeoutCanceledForAccounts;
    bool  _timeoutCanceledForMessageContent;
    bool  _timeoutCanceledForMessageHeaders;
    bool  _trackingInitialSync;
}

@property (nonatomic) <NNMKInitialSyncProgressTrackerDelegate> *delegate;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *executionQueue;
@property (nonatomic, retain) NSMutableSet *initialSyncMessageIdsOfContentToAck;
@property (nonatomic, retain) NSMutableSet *initialSyncMessageIdsToSyncContent;
@property (nonatomic) unsigned long long initialSyncMessagesCount;
@property (nonatomic) double initialSyncProgress;
@property (nonatomic, readonly) bool isTrackingInitialSync;
@property (nonatomic) bool isWaitingForAccounts;
@property (nonatomic) bool isWaitingForMessageContent;
@property (nonatomic) bool isWaitingForMessageHeaders;
@property (nonatomic, retain) <NNMKSyncStateManager> *syncStateManager;
@property (nonatomic) bool timeoutCanceledForAccounts;
@property (nonatomic) bool timeoutCanceledForMessageContent;
@property (nonatomic) bool timeoutCanceledForMessageHeaders;
@property (nonatomic) bool trackingInitialSync;

+ (double)syncTimeout;

- (void).cxx_destruct;
- (void)_handleInitialSyncCompleted;
- (void)cancelTimeout;
- (id)delegate;
- (id)executionQueue;
- (void)finishedSendingInitialSyncContentToPairedDevice;
- (void)incrementProgressBy:(double)arg1;
- (id)initialSyncMessageIdsOfContentToAck;
- (id)initialSyncMessageIdsToSyncContent;
- (unsigned long long)initialSyncMessagesCount;
- (double)initialSyncProgress;
- (void)initialSyncTimedOut;
- (bool)isTrackingInitialSync;
- (bool)isWaitingForAccounts;
- (bool)isWaitingForMessageContent;
- (bool)isWaitingForMessageHeaders;
- (void)resetFlags;
- (void)setDelegate:(id)arg1;
- (void)setExecutionQueue:(id)arg1;
- (void)setInitialSyncMessageIdsOfContentToAck:(id)arg1;
- (void)setInitialSyncMessageIdsToSyncContent:(id)arg1;
- (void)setInitialSyncMessagesCount:(unsigned long long)arg1;
- (void)setInitialSyncProgress:(double)arg1;
- (void)setIsWaitingForAccounts:(bool)arg1;
- (void)setIsWaitingForMessageContent:(bool)arg1;
- (void)setIsWaitingForMessageHeaders:(bool)arg1;
- (void)setSyncStateManager:(id)arg1;
- (void)setTimeoutCanceledForAccounts:(bool)arg1;
- (void)setTimeoutCanceledForMessageContent:(bool)arg1;
- (void)setTimeoutCanceledForMessageHeaders:(bool)arg1;
- (void)setTrackingInitialSync:(bool)arg1;
- (void)startSyncTimeoutForAccounts;
- (void)startSyncTimeoutForMessageContent;
- (void)startSyncTimeoutForMessageHeaders;
- (void)startTrackingInitialSync;
- (void)syncCompleted;
- (void)syncFailedWithError:(id)arg1;
- (id)syncStateManager;
- (bool)timeoutCanceledForAccounts;
- (bool)timeoutCanceledForMessageContent;
- (bool)timeoutCanceledForMessageHeaders;
- (bool)trackingInitialSync;
- (void)updateProgressWithAccountsArrivedInPairedDevice;
- (void)updateProgressWithAccountsSent;
- (void)updateProgressWithContentCompletelySyncedForMessageId:(id)arg1;
- (void)updateProgressWithMessageContentArrivedInPairedDevice:(id)arg1;
- (void)updateProgressWithMessageContentDownloadFailed:(id)arg1;
- (void)updateProgressWithMessageHeadersArrivedInPairedDevice;
- (void)updateProgressWithMessageHeadersSent:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

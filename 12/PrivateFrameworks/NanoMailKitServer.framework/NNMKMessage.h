<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NNMKMessage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMailKitServer.framework/NNMKMessage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMailKitServer.framework/NanoMailKitServer (1)
 */

@interface NNMKMessage : NSObject <NNMKMailboxItem, NSCopying, NSSecureCoding> {
    NSString * _accountId;
    NSArray * _bcc;
    NSArray * _cc;
    NSString * _conversationId;
    NSDate * _dateReceived;
    NSDate * _dateSent;
    NSString * _from;
    unsigned long long  _isSpecialMailboxSpecific;
    bool  _isThreadSpecific;
    NSString * _mailboxId;
    NSString * _messageId;
    NSString * _messageIdHeader;
    NSString * _notificationMessageId;
    NSString * _preview;
    NSString * _publisherBulletinId;
    bool  _replaceStandaloneNotification;
    NSString * _serverId;
    unsigned long long  _source;
    unsigned long long  _status;
    unsigned long long  _statusVersion;
    NSString * _subject;
    NSArray * _to;
    unsigned long long  _visibleStatus;
}

@property (nonatomic, copy) NSString *accountId;
@property (nonatomic, copy) NSArray *bcc;
@property (nonatomic, copy) NSArray *cc;
@property (nonatomic, copy) NSString *conversationId;
@property (nonatomic, copy) NSDate *dateReceived;
@property (nonatomic, copy) NSDate *dateSent;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *from;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long isSpecialMailboxSpecific;
@property (nonatomic) bool isThreadSpecific;
@property (nonatomic, copy) NSString *mailboxId;
@property (nonatomic, copy) NSString *messageId;
@property (nonatomic, copy) NSString *messageIdHeader;
@property (nonatomic, copy) NSString *notificationMessageId;
@property (nonatomic, retain) NSString *preview;
@property (nonatomic, copy) NSString *publisherBulletinId;
@property (nonatomic) bool replaceStandaloneNotification;
@property (nonatomic, copy) NSString *serverId;
@property (nonatomic) unsigned long long source;
@property (nonatomic) unsigned long long status;
@property (nonatomic) unsigned long long statusVersion;
@property (nonatomic, retain) NSString *subject;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSArray *to;
@property (nonatomic) unsigned long long visibleStatus;

+ (id)URLForMessageId:(id)arg1;
+ (id)URLForMessageId:(id)arg1 attachmentID:(id)arg2;
+ (unsigned long long)addState:(unsigned long long)arg1 toStatus:(unsigned long long)arg2;
+ (id)attachmentIdForURL:(id)arg1;
+ (bool)checkStatus:(unsigned long long)arg1 stateToCheck:(unsigned long long)arg2;
+ (id)generateConversationIdWithAccountId:(id)arg1 conversationId:(id)arg2;
+ (id)generateMessageHashForMessage:(id)arg1;
+ (id)generateNotificationIdWithFolderId:(id)arg1 remoteId:(id)arg2;
+ (bool)isMessageURL:(id)arg1;
+ (bool)messageHasMultipleRecipients:(id)arg1;
+ (id)messageIdForURL:(id)arg1;
+ (id)messageIdsFromMessages:(id)arg1;
+ (unsigned long long)removeState:(unsigned long long)arg1 fromStatus:(unsigned long long)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)accountId;
- (void)addState:(unsigned long long)arg1;
- (id)bcc;
- (id)cc;
- (bool)checkState:(unsigned long long)arg1;
- (id)conversationId;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dateReceived;
- (id)dateSent;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)from;
- (id)initWithCoder:(id)arg1;
- (bool)isFromSource:(unsigned long long)arg1;
- (unsigned long long)isSpecialMailboxSpecific;
- (bool)isThreadSpecific;
- (id)mailboxId;
- (id)messageId;
- (id)messageIdHeader;
- (id)notificationMessageId;
- (id)preview;
- (id)publisherBulletinId;
- (void)removeState:(unsigned long long)arg1;
- (bool)replaceStandaloneNotification;
- (id)serverId;
- (void)setAccountId:(id)arg1;
- (void)setBcc:(id)arg1;
- (void)setCc:(id)arg1;
- (void)setConversationId:(id)arg1;
- (void)setDateReceived:(id)arg1;
- (void)setDateSent:(id)arg1;
- (void)setFrom:(id)arg1;
- (void)setIsSpecialMailboxSpecific:(unsigned long long)arg1;
- (void)setIsThreadSpecific:(bool)arg1;
- (void)setMailboxId:(id)arg1;
- (void)setMessageId:(id)arg1;
- (void)setMessageIdHeader:(id)arg1;
- (void)setNotificationMessageId:(id)arg1;
- (void)setPreview:(id)arg1;
- (void)setPublisherBulletinId:(id)arg1;
- (void)setReplaceStandaloneNotification:(bool)arg1;
- (void)setServerId:(id)arg1;
- (void)setSource:(unsigned long long)arg1;
- (void)setStatus:(unsigned long long)arg1;
- (void)setStatusVersion:(unsigned long long)arg1;
- (void)setSubject:(id)arg1;
- (void)setTo:(id)arg1;
- (void)setVisibleStatus:(unsigned long long)arg1;
- (unsigned long long)source;
- (unsigned long long)status;
- (unsigned long long)statusVersion;
- (id)subject;
- (id)to;
- (unsigned long long)visibleStatus;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

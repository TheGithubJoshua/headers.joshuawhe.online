<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NNMKDeviceSyncRegistry.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMailKitServer.framework/NNMKDeviceSyncRegistry.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMailKitServer.framework/NanoMailKitServer (1)
 */

@interface NNMKDeviceSyncRegistry : NSObject {
    unsigned long long  _currentDatabaseSchemaVersion;
    NNMKSQLiteConnection * _database;
    double  _deviceScreenScale;
    double  _deviceScreenWidth;
    NSDate * _disconnectedSince;
    unsigned long long  _fullSyncVersion;
    bool  _isMessagesSyncSuspendedByConnectivity;
    bool  _organizeByThread;
    NSString * _path;
    bool  _protectedContentChannelSupported;
    bool  _recreatedFromScratch;
    NSNumber * _supportsWebKit;
}

@property (nonatomic) unsigned long long currentDatabaseSchemaVersion;
@property (nonatomic, retain) NNMKSQLiteConnection *database;
@property (nonatomic) double deviceScreenScale;
@property (nonatomic) double deviceScreenWidth;
@property (nonatomic, retain) NSDate *disconnectedSince;
@property (nonatomic) unsigned long long fullSyncVersion;
@property (nonatomic) bool isMessagesSyncSuspendedByConnectivity;
@property (nonatomic) bool organizeByThread;
@property (nonatomic, readonly) NSString *path;
@property (nonatomic) bool protectedContentChannelSupported;
@property (nonatomic, readonly) bool recreatedFromScratch;
@property (nonatomic) NSNumber *supportsWebKit;

- (void).cxx_destruct;
- (void)_deleteAllObjectsFromTable:(id)arg1;
- (void)_deleteAllObjectsFromTable:(id)arg1 mailboxId:(id)arg2;
- (id)_idsIdentifiersForObjectId:(id)arg1 type:(id)arg2;
- (void)_insureTransactionFor:(id /* block */)arg1;
- (void)_loadAllControlValues;
- (id)_mailboxFromCurrentRowInStatement:(struct sqlite3_stmt { }*)arg1;
- (void)_removeControlValueForKey:(id)arg1;
- (id)_selectMailboxesWhere:(id)arg1 blockForBinding:(id /* block */)arg2;
- (id)_selectSyncedAccountsWhere:(id)arg1 blockForBinding:(id /* block */)arg2;
- (id)_selectSyncedMessagesIdsWhere:(id)arg1 count:(unsigned long long)arg2 blockForBinding:(id /* block */)arg3;
- (id)_selectSyncedMessagesWhere:(id)arg1 blockForBinding:(id /* block */)arg2;
- (void)_setControlValueForKey:(id)arg1 withBlockForBinding:(id /* block */)arg2;
- (id)_ungroupGroupedValue:(id)arg1;
- (id)accountIdForUsername:(id)arg1;
- (unsigned long long)accountSourceTypeForAccountId:(id)arg1;
- (unsigned long long)accountSourceTypeForMailboxId:(id)arg1;
- (unsigned long long)accountSourceTypeForMessageId:(id)arg1;
- (id)activeMailboxes;
- (void)addObjectIds:(id)arg1 type:(id)arg2 resendInterval:(unsigned long long)arg3 forIDSIdentifierNotYetAckd:(id)arg4;
- (void)addOrUpdateMailbox:(id)arg1;
- (void)addOrUpdateSyncedAccount:(id)arg1;
- (void)addOrUpdateSyncedMessage:(id)arg1;
- (id)allSyncedAccountsKeyedByAccountId;
- (void)beginUpdates;
- (void)cleanUpForFullSyncWithMailbox:(id)arg1;
- (void)cleanUpForInitialSync;
- (bool)containsSyncedMessageForMessageWithId:(id)arg1;
- (unsigned long long)currentDatabaseSchemaVersion;
- (id)database;
- (id)datesForIDSIdentifiersScheduledToBeResent;
- (void)deleteAllMailboxes;
- (void)deleteMailboxWithId:(id)arg1;
- (void)deleteMailboxWithId:(id)arg1 startTransaction:(bool)arg2;
- (void)deleteObjectId:(id)arg1 fromIDSIdentifiersNotYetAckdOfType:(id)arg2;
- (double)deviceScreenScale;
- (double)deviceScreenWidth;
- (id)disconnectedSince;
- (void)endUpdates;
- (id)firstSyncedMessageIdsContentNotSyncedOrRequestedByUser:(unsigned long long)arg1;
- (unsigned long long)fullSyncVersion;
- (bool)hasMailboxSyncedActive;
- (void)incrementSyncVersionForMailboxId:(id)arg1;
- (id)initWithPath:(id)arg1;
- (void)insertDeletedMessageId:(id)arg1 mailboxId:(id)arg2;
- (bool)isMessagesSyncSuspendedByConnectivity;
- (id)mailboxIdForDeletedMessageId:(id)arg1;
- (id)mailboxWithId:(id)arg1;
- (id)mailboxes;
- (id)mailboxesForAccountId:(id)arg1;
- (void)markIDSIdentifierAsAckd:(id)arg1;
- (id)messageIdForSanitizedMessageId:(id)arg1;
- (id)objectIdsForIDSIdentifierNotYetAckd:(id)arg1 type:(id*)arg2 resendInterval:(unsigned long long*)arg3;
- (id)objectIdsForType:(id)arg1;
- (id)oldestDateReceivedForMailboxId:(id)arg1;
- (bool)organizeByThread;
- (id)path;
- (id)pendingComposedMessageIds;
- (void)prepareIDSIdentifiersForResendForErrorCode:(long long)arg1;
- (long long)progressForComposedMessageWithId:(id)arg1;
- (bool)protectedContentChannelSupported;
- (bool)recreatedFromScratch;
- (void)removePendingComposedMessages;
- (void)removeProgressForComposedMessageWithId:(id)arg1;
- (void)removeSyncedAccountForAccountWithId:(id)arg1;
- (void)removeSyncedMessageForMessageWithId:(id)arg1;
- (void)removeSyncedMessagesBeforeDateReceived:(id)arg1 mailbox:(id)arg2;
- (void)rescheduleIDSIdentifier:(id)arg1 resendInterval:(unsigned long long)arg2 withDateToResend:(id)arg3 errorCode:(long long)arg4;
- (void)resetSyncRequestedFromMailboxes;
- (void)setCurrentDatabaseSchemaVersion:(unsigned long long)arg1;
- (void)setDatabase:(id)arg1;
- (void)setDeviceScreenScale:(double)arg1;
- (void)setDeviceScreenWidth:(double)arg1;
- (void)setDisconnectedSince:(id)arg1;
- (void)setFullSyncVersion:(unsigned long long)arg1;
- (void)setIsMessagesSyncSuspendedByConnectivity:(bool)arg1;
- (void)setOrganizeByThread:(bool)arg1;
- (void)setProgress:(long long)arg1 forComposedMessageWithId:(id)arg2;
- (void)setProtectedContentChannelSupported:(bool)arg1;
- (void)setSupportsWebKit:(id)arg1;
- (id)supportsWebKit;
- (id)syncEnabledMailboxes;
- (unsigned long long)syncVersionForMailboxId:(id)arg1;
- (id)syncedAccountForAccountWithId:(id)arg1;
- (id)syncedAccountIdsResendRequested;
- (id)syncedMessageForMessageWithId:(id)arg1;
- (id)syncedMessageIdsContentRequestedByUser;
- (id)syncedMessageIdsResendRequested;
- (unsigned long long)syncedMessagesCount;
- (unsigned long long)syncedMessagesCountForMailboxId:(id)arg1;
- (id)syncedMessagesForConversationWithId:(id)arg1;
- (id)syncedMessagesKeyedByMessageIdAfterDateReceived:(id)arg1 mailboxId:(id)arg2;
- (id)typeForIDSIdentifierNotYetAckd:(id)arg1;
- (void)updateSourceType:(unsigned long long)arg1 forAccountId:(id)arg2;
- (void)updateSyncActiveForMailbox:(id)arg1;
- (void)updateSyncEnabledForMailbox:(id)arg1;
- (void)updateSyncRequestedForMailbox:(id)arg1;
- (void)updateSyncVersion:(unsigned long long)arg1 forMailboxId:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

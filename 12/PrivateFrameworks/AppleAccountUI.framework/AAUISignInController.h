<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AAUISignInController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AppleAccountUI.framework/AAUISignInController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI (1)
 */

@interface AAUISignInController : UINavigationController <AAUISignInViewControllerDelegate> {
    bool  __shouldForceOperation;
    NSDictionary * _authenticationResults;
    <AIDAServiceOwnerProtocol> * _serviceOwnersManager;
    NSString * _serviceType;
}

@property (setter=_setAuthenticationResults:, nonatomic, retain) NSDictionary *_authenticationResults;
@property (setter=_setServiceOwnersManager:, nonatomic, retain) <AIDAServiceOwnerProtocol> *_serviceOwnersManager;
@property (setter=_setShouldForceOperation:, nonatomic) bool _shouldForceOperation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AAUISignInControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *serviceType;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_allowsAccountCreationForService:(id)arg1;
- (void)_attemptSignInForService:(id)arg1 withAuthenticationResults:(id)arg2 parentViewController:(id)arg3 completion:(id /* block */)arg4;
- (void)_attemptSignInForServices:(id)arg1 withAuthenticationResults:(id)arg2 parentViewController:(id)arg3 completion:(id /* block */)arg4;
- (id)_authenticationResults;
- (void)_commonInit;
- (id)_continueUsingControllerForAccount:(id)arg1 serviceType:(id)arg2 inViewController:(id)arg3 completion:(id /* block */)arg4;
- (void)_delegate_signInControllerDidCancel;
- (void)_delegate_signInControllerDidCompleteWithSuccess:(bool)arg1 error:(id)arg2;
- (bool)_isAuthenticatingPrimary:(id)arg1;
- (void)_mainQueue_continueSignInWithAuthenticationResults:(id)arg1 parentViewController:(id)arg2;
- (void)_mainQueue_presentAlertForError:(id)arg1 inViewController:(id)arg2 completion:(id /* block */)arg3;
- (void)_mainQueue_presentContinueUsingInViewController:(id)arg1 account:(id)arg2 serviceType:(id)arg3 completion:(id /* block */)arg4;
- (void)_mainQueue_presentSpinnerViewControllerInParentViewController:(id)arg1 withCompletion:(id /* block */)arg2;
- (id)_messageStringForService:(id)arg1;
- (void)_performAuthenticationForAccount:(id)arg1 serviceType:(id)arg2 inViewController:(id)arg3 completion:(id /* block */)arg4;
- (void)_performSilentRenewalWithResults:(id)arg1 completion:(id /* block */)arg2;
- (id)_serviceOwnersManager;
- (void)_setAuthenticationResults:(id)arg1;
- (void)_setServiceOwnersManager:(id)arg1;
- (void)_setShouldForceOperation:(bool)arg1;
- (bool)_shouldForceOperation;
- (bool)_showsServiceIconsForService:(id)arg1;
- (id)_signInViewController;
- (id)_spinnerMessageForService:(id)arg1;
- (id)_spinnerViewController;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareInViewController:(id)arg1 completion:(id /* block */)arg2;
- (id)serviceType;
- (void)setServiceType:(id)arg1;
- (void)signInViewController:(id)arg1 didCompleteWithAuthenticationResults:(id)arg2;
- (void)signInViewControllerDidCancel:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

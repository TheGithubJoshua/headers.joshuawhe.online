<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AAUISignInViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AppleAccountUI.framework/AAUISignInViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AppleAccountUI.framework/AppleAccountUI (1)
 */

@interface AAUISignInViewController : UIViewController <AKAppleIDAuthenticationInAppContextPasswordDelegate, RemoteUIControllerDelegate, UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate> {
    AAUIHeaderView * _accountsHeaderView;
    long long  _akServiceType;
    bool  _allowsAccountCreation;
    NSArray * _compactConstraints;
    <AAUISignInViewControllerDelegate> * _delegate;
    NSArray * _expandedConstraints;
    UITableViewCell * _passwordCell;
    id /* block */  _passwordHandler;
    bool  _shouldAnticipatePiggybacking;
    bool  _showServiceIcons;
    UITableViewHeaderFooterView * _tableFooterView;
    UITableViewHeaderFooterView * _tableHeaderView;
    UITableView * _tableView;
    UITableViewCell * _usernameCell;
}

@property (setter=_setAkServiceType:, nonatomic) long long _akServiceType;
@property (setter=_setShouldAnticipatePiggybacking:, nonatomic) bool _shouldAnticipatePiggybacking;
@property (nonatomic) bool allowsAccountCreation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AAUISignInViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UILabel *messageLabel;
@property (nonatomic) bool showServiceIcons;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UILabel *titleLabel;
@property (nonatomic, retain) AAUIBuddyView *view;

+ (void)phoneNumberSupportedWithCompletion:(id /* block */)arg1;

- (void).cxx_destruct;
- (id)_accountsHeaderView;
- (void)_actionButtonSelected:(id)arg1;
- (long long)_akServiceType;
- (void)_attemptAuthentication;
- (void)_attemptAuthenticationWithContext:(id)arg1;
- (id)_authorizationValueForAuthenticationResults:(id)arg1;
- (void)_beginObservingKeyboardWillShowNotifications;
- (void)_beginObservingSizeCategoryNotification;
- (void)_beginObservingTextFieldDidChangeNotifications;
- (id)_cancelBarButtonItem;
- (void)_cancelButtonSelected:(id)arg1;
- (void)_cancelPasswordDelegateIfNecessary;
- (void)_delegate_signInViewControllerDidCancel;
- (void)_delegate_signInViewControllerDidCompleteWithAuthenticationResults:(id)arg1;
- (void)_endObservingKeyboardWillShowNotifications;
- (void)_endObservingSizeCategoryNotification;
- (void)_endObservingTextFieldDidChangeNotifications;
- (bool)_hasValidCredentials;
- (bool)_isGreenTeaCapable;
- (bool)_isPasswordFieldVisible;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (id)_nextBarButtonItem;
- (void)_nextButtonSelected:(id)arg1;
- (id)_passwordCell;
- (id)_passwordFieldIndexPath;
- (void)_presentCreateAppleIDPane;
- (void)_presentForgotAppleIDPane;
- (void)_prewarmSignInFlowIfApplicable;
- (void)_repairCloudAccountWithAuthenticationResults:(id)arg1;
- (void)_setAkServiceType:(long long)arg1;
- (void)_setEnabled:(bool)arg1;
- (void)_setPasswordFieldHidden:(bool)arg1;
- (void)_setShouldAnticipatePiggybacking:(bool)arg1;
- (void)_setUsernameCellWaiting:(bool)arg1;
- (bool)_shouldAnticipatePiggybacking;
- (id)_stringForFooter;
- (id)_tableFooterView;
- (id)_tableHeaderView;
- (id)_tableView;
- (void)_textFieldDidChange:(id)arg1;
- (void)_updateConstraintsForTraitCollection:(id)arg1;
- (void)_updateContentInsetWithHeight:(double)arg1;
- (id)_usernameCell;
- (bool)allowsAccountCreation;
- (id)authenticationContext;
- (void)constrainView:(id)arg1 toFillHeaderFooterView:(id)arg2;
- (void)context:(id)arg1 needsPasswordWithCompletion:(id /* block */)arg2;
- (void)dealloc;
- (id)delegate;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loadView;
- (id)messageLabel;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (bool)remoteUIController:(id)arg1 shouldLoadRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)setAllowsAccountCreation:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setShowServiceIcons:(bool)arg1;
- (bool)showServiceIcons;
- (void)sizeCategoryDidChange:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldDrawTopSeparatorForSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementString:(id)arg3;
- (bool)textFieldShouldReturn:(id)arg1;
- (id)titleLabel;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ABBufferQueryCursor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AddressBookLegacy.framework/ABBufferQueryCursor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy (30)
 */

@interface ABBufferQueryCursor : NSObject {
    unsigned long long  _blobBytesWritten;
    unsigned long long  _blobLength;
    int  _contactLinkUUIDColumn;
    int  _contactPreferredForImageColumn;
    unsigned long long  _countOfContactsInBuffer;
    long long  _currentMultivalue;
    int  _currentMultivalueIdentifier;
    int  _currentPropertyID;
    int  _currentRecordID;
    bool  _hasFoundAnyImageDataForCurrentContact;
    struct sqlite3_blob { } * _incompleteBlob;
    CNManagedConfiguration * _managedConfiguration;
    unsigned long long  _maxBufferSize;
    unsigned long long  _maxContactsPerBatch;
    int  _multivalueEntryKeyColumn;
    int  _multivalueEntryValueColumn;
    int  _multivalueIdentifierColumn;
    int  _multivalueLabelColumn;
    int  _multivaluePropertyIDColumn;
    int  _multivalueUUIDColumn;
    int  _multivalueValueColumn;
    NSMutableData * _mutableData;
    int  _personLinkColumn;
    ABBufferQuery * _query;
    long long  _resumeToken;
}

@property (nonatomic) unsigned long long blobBytesWritten;
@property (nonatomic) unsigned long long blobLength;
@property (nonatomic) int contactLinkUUIDColumn;
@property (nonatomic) int contactPreferredForImageColumn;
@property (nonatomic) unsigned long long countOfContactsInBuffer;
@property (nonatomic) long long currentMultivalue;
@property (nonatomic) int currentMultivalueIdentifier;
@property (nonatomic) int currentPropertyID;
@property (nonatomic) int currentRecordID;
@property (nonatomic) bool hasFoundAnyImageDataForCurrentContact;
@property (nonatomic) struct sqlite3_blob { }*incompleteBlob;
@property (nonatomic, retain) CNManagedConfiguration *managedConfiguration;
@property (nonatomic) unsigned long long maxBufferSize;
@property (nonatomic) unsigned long long maxContactsPerBatch;
@property (nonatomic) int multivalueEntryKeyColumn;
@property (nonatomic) int multivalueEntryValueColumn;
@property (nonatomic) int multivalueIdentifierColumn;
@property (nonatomic) int multivalueLabelColumn;
@property (nonatomic) int multivaluePropertyIDColumn;
@property (nonatomic) int multivalueUUIDColumn;
@property (nonatomic) int multivalueValueColumn;
@property (nonatomic, retain) NSMutableData *mutableData;
@property (nonatomic) int personLinkColumn;
@property (nonatomic, readonly) ABBufferQuery *query;
@property (nonatomic) long long resumeToken;

- (unsigned long long)blobBytesWritten;
- (unsigned long long)blobLength;
- (int)contactLinkUUIDColumn;
- (int)contactPreferredForImageColumn;
- (unsigned long long)countOfContactsInBuffer;
- (long long)currentMultivalue;
- (int)currentMultivalueIdentifier;
- (int)currentPropertyID;
- (int)currentRecordID;
- (void)dealloc;
- (void)fetchNextBatchWithReply:(id /* block */)arg1;
- (bool)hasFoundAnyImageDataForCurrentContact;
- (struct sqlite3_blob { }*)incompleteBlob;
- (id)initWithAddressBook:(void*)arg1 predicate:(id)arg2 propertyIdentifierSet:(struct __CFSet { }*)arg3 includeLinkedContacts:(bool)arg4 sortOrder:(unsigned int)arg5 suggestedContactsPerBatch:(unsigned long long)arg6 managedConfiguration:(id)arg7;
- (id)initWithAddressBook:(void*)arg1 query:(id)arg2 queryBinder:(id /* block */)arg3 propertyIdentifierSet:(struct __CFSet { }*)arg4 includeLinkedContacts:(bool)arg5 sortOrder:(unsigned int)arg6 suggestedContactsPerBatch:(unsigned long long)arg7 managedConfiguration:(id)arg8;
- (id)initWithQuery:(id)arg1 batchSize:(unsigned long long)arg2 managedConfiguration:(id)arg3;
- (id)managedConfiguration;
- (unsigned long long)maxBufferSize;
- (unsigned long long)maxContactsPerBatch;
- (int)multivalueEntryKeyColumn;
- (int)multivalueEntryValueColumn;
- (int)multivalueIdentifierColumn;
- (int)multivalueLabelColumn;
- (int)multivaluePropertyIDColumn;
- (int)multivalueUUIDColumn;
- (int)multivalueValueColumn;
- (id)mutableData;
- (int)personLinkColumn;
- (id)query;
- (long long)resumeToken;
- (void)setBlobBytesWritten:(unsigned long long)arg1;
- (void)setBlobLength:(unsigned long long)arg1;
- (void)setContactLinkUUIDColumn:(int)arg1;
- (void)setContactPreferredForImageColumn:(int)arg1;
- (void)setCountOfContactsInBuffer:(unsigned long long)arg1;
- (void)setCurrentMultivalue:(long long)arg1;
- (void)setCurrentMultivalueIdentifier:(int)arg1;
- (void)setCurrentPropertyID:(int)arg1;
- (void)setCurrentRecordID:(int)arg1;
- (void)setHasFoundAnyImageDataForCurrentContact:(bool)arg1;
- (void)setIncompleteBlob:(struct sqlite3_blob { }*)arg1;
- (void)setManagedConfiguration:(id)arg1;
- (void)setMaxBufferSize:(unsigned long long)arg1;
- (void)setMaxContactsPerBatch:(unsigned long long)arg1;
- (void)setMultivalueEntryKeyColumn:(int)arg1;
- (void)setMultivalueEntryValueColumn:(int)arg1;
- (void)setMultivalueIdentifierColumn:(int)arg1;
- (void)setMultivalueLabelColumn:(int)arg1;
- (void)setMultivaluePropertyIDColumn:(int)arg1;
- (void)setMultivalueUUIDColumn:(int)arg1;
- (void)setMultivalueValueColumn:(int)arg1;
- (void)setMutableData:(id)arg1;
- (void)setPersonLinkColumn:(int)arg1;
- (void)setResumeToken:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ABVCardRecord.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AddressBookLegacy.framework/ABVCardRecord.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy (30)
 */

@interface ABVCardRecord : NSObject {
    struct __CFArray { } * _properties;
    void * _record;
}

+ (void)clearPrivateFields;
+ (bool)includeABClipRectInVCardPhotos;
+ (bool)includeImageURIInVCards;
+ (bool)includeNotesInVCards;
+ (bool)includePhotosInVCards;
+ (bool)includeREVInVCards;
+ (bool)privateVCardEnabled;
+ (void)setIncludeNotesInVCards:(bool)arg1;
+ (void)setIncludePhotosInVCards:(bool)arg1;
+ (void)setIncludeREVInVCards:(bool)arg1;
+ (void)setPrivateVCardEnabled:(bool)arg1;
+ (void)setVCardField:(id)arg1 isPrivate:(bool)arg2;
+ (struct __CFArray { }*)supportedProperties;
+ (bool)vcardFieldisPrivate:(id)arg1;

- (id)ISO8061StringFromDate:(id)arg1;
- (id)ISO8061StringFromDateTime:(id)arg1;
- (id)_21vCardRepresentationAsData;
- (void)_addPersonSounds:(void*)arg1 identifier:(int)arg2 toActivityAlerts:(id*)arg3 activity:(id)arg4 alert:(id)arg5;
- (void)_appendPropValue:(id)arg1 forPropKey:(id)arg2 toOutString:(id)arg3 usingDelimiter:(id)arg4 inGroup:(id)arg5;
- (id)_copyGroupVCardRepresentationAsStringIncludeExternalProperties:(bool)arg1;
- (id)_copyVCardRepresentationAsStringIncludeExternalProperties:(bool)arg1 withPhoto:(id)arg2 extraPhotoParameters:(id)arg3 includePrivateData:(bool)arg4;
- (id)_dictionaryForActivityAlerts;
- (id)_fullName;
- (id)_fullNameIncludingAuxiliaryElements:(bool)arg1;
- (bool)_isCompany;
- (id)_prodID;
- (id)_realCompositeName;
- (bool)_showField:(unsigned int)arg1;
- (bool)_showField:(unsigned int)arg1 identifier:(int)arg2;
- (id)_typeParameterForToneType:(id)arg1;
- (bool)_usesArrayForExternalPropKey:(id)arg1;
- (id)_vCardKeyForAddressLabel:(id)arg1 vCard3:(bool)arg2;
- (struct __CFString { }*)_vCardKeyForEmailLabel:(id)arg1;
- (struct __CFString { }*)_vCardKeyForGenericLabel:(id)arg1;
- (id)_vCardKeysForPhoneLabel:(id)arg1;
- (id)_valueForPersonSounds:(void*)arg1 identifier:(int)arg2;
- (id)alternateName;
- (void)appendLabel:(id)arg1 toVCardRep:(id)arg2 inGroup:(id)arg3;
- (void*)copyValueForProperty:(unsigned int)arg1;
- (id)dataForInstantMessageProperties;
- (id)dataForSocialProfileProperty:(void*)arg1 groupCount:(long long*)arg2 includePrivateData:(bool)arg3;
- (id)dataForSoundProperty:(void*)arg1;
- (void)dealloc;
- (id)encodedDataForValue:(id)arg1 charsetName:(id*)arg2;
- (id)encodedLineForValue:(id)arg1;
- (id)imageData;
- (id)init;
- (id)initWithRecord:(void*)arg1;
- (id)initWithVCardRepresentation:(id)arg1;
- (id)newISO8061StringFromDate:(id)arg1;
- (id)propertyLineForGenericABProperty21:(unsigned int)arg1 vCardProperty:(id)arg2;
- (id)propertyLineForGenericABProperty:(unsigned int)arg1 vCardProperty:(id)arg2 is21:(bool)arg3 groupCount:(long long*)arg4;
- (id)propertyLineForIMHandles:(id)arg1 labels:(id)arg2 vCardProperty:(id)arg3;
- (id)propertyLineForIMPPProperty:(bool)arg1 groupCount:(long long*)arg2 includePrivateData:(bool)arg3;
- (id)propertyLineForInstantMessageHandles:(bool)arg1 groupCount:(long long*)arg2 includePrivateData:(bool)arg3;
- (void*)record;
- (bool)setValue:(void*)arg1 forProperty:(unsigned int)arg2;
- (id)stringForAlternateBirthdayComponent:(id)arg1 key:(id)arg2 format:(id)arg3;
- (id)stringFromAlternateBirthday:(id)arg1;
- (bool)useThumbnailImageFormatIfAvailable;
- (id)vCardRepresentationForMode:(int)arg1;
- (void*)valueForProperty:(unsigned int)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDRecordFetchAggregator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudKitDaemon.framework/CKDRecordFetchAggregator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon (736.235)
 */

@interface CKDRecordFetchAggregator : CKDDatabaseOperation {
    NSDictionary * _assetTransferOptionsByRecordTypeAndKey;
    unsigned long long  _curFetchOrder;
    CKDFetchRecordsOperation * _currentFetchOp;
    NSSet * _desiredKeys;
    id /* block */  _fetchAggregatorCompletionBlock;
    bool  _fetchAssetContents;
    NSObject<OS_dispatch_group> * _fetchGroup;
    NSMutableDictionary * _fetchInfosByOrder;
    NSObject<OS_dispatch_queue> * _fetchQueue;
    NSObject<OS_dispatch_source> * _fetchSource;
    bool  _forceDecryptionAttempt;
    unsigned long long  _highestReturnedOrder;
    bool  _markedToFinishByParent;
    bool  _preserveOrdering;
    CKDRecordCache * _recordCache;
    NSObject<OS_dispatch_source> * _recordReadySource;
    bool  _started;
    bool  _useRecordCache;
}

@property (nonatomic, retain) NSDictionary *assetTransferOptionsByRecordTypeAndKey;
@property unsigned long long curFetchOrder;
@property (nonatomic) CKDFetchRecordsOperation *currentFetchOp;
@property (nonatomic, retain) NSSet *desiredKeys;
@property (nonatomic, copy) id /* block */ fetchAggregatorCompletionBlock;
@property (nonatomic) bool fetchAssetContents;
@property (nonatomic, retain) NSObject<OS_dispatch_group> *fetchGroup;
@property (nonatomic, retain) NSMutableDictionary *fetchInfosByOrder;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *fetchQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *fetchSource;
@property (nonatomic) bool forceDecryptionAttempt;
@property unsigned long long highestReturnedOrder;
@property (getter=isMarkedToFinishByParent) bool markedToFinishByParent;
@property (nonatomic) bool preserveOrdering;
@property (nonatomic, readonly) CKDRecordCache *recordCache;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *recordReadySource;
@property bool started;
@property (nonatomic) bool useRecordCache;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (void)_addRecordFetchInfos:(id)arg1;
- (id)_fetchRecord:(id)arg1 recordReadyHandle:(bool*)arg2 withRecordCompletion:(id /* block */)arg3;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_finishRecordFetchAggregator;
- (void)_flushFetchedRecordsToConsumerLocked;
- (void)_flushFetchedRecordsToConsumerNoOrderingLocked;
- (void)_flushFetchedRecordsToConsumerOrderedLocked;
- (void)_lockedSendFetchRequest;
- (void)_performCallbackForFetchInfoLocked:(id)arg1;
- (void)_recordFetchesAvailable;
- (id)activityCreate;
- (id)assetTransferOptionsByRecordTypeAndKey;
- (unsigned long long)curFetchOrder;
- (id)currentFetchOp;
- (void)dealloc;
- (id)description;
- (id)desiredKeys;
- (id /* block */)fetchAggregatorCompletionBlock;
- (bool)fetchAssetContents;
- (id)fetchGroup;
- (id)fetchInfosByOrder;
- (id)fetchQueue;
- (void)fetchRecords:(id)arg1 withPerRecordCompletion:(id /* block */)arg2;
- (id)fetchSource;
- (void)finishIfAppropriate;
- (bool)forceDecryptionAttempt;
- (unsigned long long)highestReturnedOrder;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;
- (bool)isMarkedToFinishByParent;
- (void)main;
- (bool)preserveOrdering;
- (id)recordCache;
- (id)recordReadySource;
- (void)setAssetTransferOptionsByRecordTypeAndKey:(id)arg1;
- (void)setCurFetchOrder:(unsigned long long)arg1;
- (void)setCurrentFetchOp:(id)arg1;
- (void)setDesiredKeys:(id)arg1;
- (void)setFetchAggregatorCompletionBlock:(id /* block */)arg1;
- (void)setFetchAssetContents:(bool)arg1;
- (void)setFetchGroup:(id)arg1;
- (void)setFetchInfosByOrder:(id)arg1;
- (void)setFetchQueue:(id)arg1;
- (void)setFetchSource:(id)arg1;
- (void)setForceDecryptionAttempt:(bool)arg1;
- (void)setHighestReturnedOrder:(unsigned long long)arg1;
- (void)setMarkedToFinishByParent:(bool)arg1;
- (void)setPreserveOrdering:(bool)arg1;
- (void)setRecordReadySource:(id)arg1;
- (void)setStarted:(bool)arg1;
- (void)setUseRecordCache:(bool)arg1;
- (bool)started;
- (bool)useRecordCache;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

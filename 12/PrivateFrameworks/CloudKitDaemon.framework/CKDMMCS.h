<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDMMCS.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudKitDaemon.framework/CKDMMCS.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon (736.235)
 */

@interface CKDMMCS : NSObject {
    CKDMMCSEngineContext * _MMCSEngineContext;
    CKDAssetCache * _assetCache;
    long long  _checkoutCount;
    CKDClientContext * _clientContext;
    bool  _didDrop;
    NSString * _path;
}

@property (nonatomic, retain) CKDMMCSEngineContext *MMCSEngineContext;
@property (nonatomic, retain) CKDAssetCache *assetCache;
@property (nonatomic) long long checkoutCount;
@property (nonatomic) CKDClientContext *clientContext;
@property (nonatomic) bool didDrop;
@property (getter=getMaxChunkCountForSection, nonatomic, readonly) unsigned int maxChunkCountForSection;
@property (nonatomic, retain) NSString *path;

+ (id)MMCSWrapperForApplicationBundleID:(id)arg1 assetDirectoryContext:(id)arg2 isUTAccount:(bool)arg3 error:(id*)arg4;
+ (long long)_commonErrorCodeWithMMCSError:(id)arg1;
+ (long long)_errorCodeWithMMCSGetError:(id)arg1;
+ (long long)_errorCodeWithMMCSPutError:(id)arg1;
+ (long long)_errorCodeWithMMCSRegisterError:(id)arg1;
+ (id)_errorWithMMCSError:(id)arg1 description:(id)arg2 operationType:(long long)arg3;
+ (id)_errorWithMMCSError:(id)arg1 path:(id)arg2 description:(id)arg3 operationType:(long long)arg4;
+ (id)_userInfoFromMMCSRetryableError:(id)arg1;
+ (bool)isTrackingItemID:(unsigned long long)arg1;
+ (id)protocolHeaders;
+ (id)protocolVersion;
+ (void)purgeMMCSDirectoryWithPath:(id)arg1;
+ (id)sharedItemIDs;
+ (id)sharedMMCSItemReaders;
+ (id)sharedWrappersByPath;
+ (void)startTrackingItemIDsForMMCSItems:(id)arg1;
+ (void)startTrackingMMCSItemReader:(id)arg1;
+ (void)stopTrackingItemIDsForMMCSItems:(id)arg1;
+ (void)stopTrackingMMCSItemReader:(id)arg1;
+ (id)zeroSizeFileSignature;

- (void).cxx_destruct;
- (id)CKStatusReportArray;
- (id)MMCSEngineContext;
- (id)_contextToGetItemGroup:(id)arg1 operation:(id)arg2 options:(id)arg3 progress:(id /* block */)arg4 command:(id /* block */)arg5 completionHandler:(id /* block */)arg6;
- (id)_contextToGetOrPutChunkKeysItemGroup:(id)arg1 operation:(id)arg2 options:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)_contextToGetSectionItem:(id)arg1 operation:(id)arg2 options:(id)arg3 progress:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (id)_contextToPutItemGroup:(id)arg1 operation:(id)arg2 options:(id)arg3 progress:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (id)_contextToPutSectionItem:(id)arg1 operation:(id)arg2 options:(id)arg3 progress:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (id)_contextToRegisterItemGroup:(id)arg1 operation:(id)arg2 options:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (bool)_getRegisteredItemsGreaterThan:(unsigned long long)arg1 itemIds:(unsigned long long*)arg2 itemCount:(unsigned long long*)arg3 error:(id*)arg4;
- (void)_logMMCSOptions:(id)arg1;
- (id)_referenceIdentifierFromAssetKey:(id)arg1;
- (void)_unregisterItemIDs:(id)arg1;
- (id)assetCache;
- (long long)checkoutCount;
- (id)clientContext;
- (void)dealloc;
- (bool)didDrop;
- (void)drop;
- (id)getChunkKeysItemGroupSet:(id)arg1 operation:(id)arg2 options:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)getItemGroupSet:(id)arg1 operation:(id)arg2 shouldFetchAssetContentInMemory:(bool)arg3 options:(id)arg4 progress:(id /* block */)arg5 command:(id /* block */)arg6 completionHandler:(id /* block */)arg7;
- (struct _mmcs_engine { }*)getMMCSEngine;
- (unsigned int)getMaxChunkCountForSection;
- (id)getSectionItem:(id)arg1 operation:(id)arg2 options:(id)arg3 progress:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (id)initWithMMCSEngineContext:(id)arg1 path:(id)arg2;
- (id)path;
- (void)performOnRunLoop:(id /* block */)arg1;
- (id)putChunkKeysItemGroupSet:(id)arg1 operation:(id)arg2 options:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)putItemGroupSet:(id)arg1 operation:(id)arg2 options:(id)arg3 progress:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (id)putSectionItem:(id)arg1 operation:(id)arg2 options:(id)arg3 progress:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (id)registerItemGroupSet:(id)arg1 operation:(id)arg2 options:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (bool)registeredItemCount:(unsigned long long*)arg1 error:(id*)arg2;
- (void)setAssetCache:(id)arg1;
- (void)setCheckoutCount:(long long)arg1;
- (void)setClientContext:(id)arg1;
- (void)setDidDrop:(bool)arg1;
- (void)setMMCSEngineContext:(id)arg1;
- (void)setPath:(id)arg1;
- (void)showRegisteredItems;
- (void)unregisterItemIDs:(id)arg1;
- (void)unregisterItemIDs:(id)arg1 completionBlock:(id /* block */)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

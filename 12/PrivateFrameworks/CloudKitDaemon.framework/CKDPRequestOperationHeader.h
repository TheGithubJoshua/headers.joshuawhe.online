<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDPRequestOperationHeader.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudKitDaemon.framework/CKDPRequestOperationHeader.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon (736.235)
 */

@interface CKDPRequestOperationHeader : PBCodable <NSCopying> {
    NSString * _applicationBundle;
    unsigned long long  _applicationConfigVersion;
    NSString * _applicationContainer;
    int  _applicationContainerEnvironment;
    NSString * _applicationVersion;
    CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions * _assetAuthorizeGetRequestOptions;
    NSData * _clientChangeToken;
    NSString * _deviceAssignedName;
    unsigned long long  _deviceFlowControlBudget;
    unsigned long long  _deviceFlowControlBudgetCap;
    NSString * _deviceFlowControlKey;
    float  _deviceFlowControlRegeneration;
    NSString * _deviceHardwareID;
    NSString * _deviceHardwareVersion;
    CKDPIdentifier * _deviceIdentifier;
    NSString * _deviceLibraryName;
    NSString * _deviceLibraryVersion;
    unsigned long long  _deviceProtocolVersion;
    bool  _deviceSoftwareIsAppleInternal;
    NSString * _deviceSoftwareVersion;
    unsigned long long  _globalConfigVersion;
    struct { 
        unsigned int applicationConfigVersion : 1; 
        unsigned int deviceFlowControlBudget : 1; 
        unsigned int deviceFlowControlBudgetCap : 1; 
        unsigned int deviceProtocolVersion : 1; 
        unsigned int globalConfigVersion : 1; 
        unsigned int operationGroupQuantity : 1; 
        unsigned int applicationContainerEnvironment : 1; 
        unsigned int deviceFlowControlRegeneration : 1; 
        unsigned int isolationLevel : 1; 
        unsigned int targetDatabase : 1; 
        unsigned int deviceSoftwareIsAppleInternal : 1; 
    }  _has;
    int  _isolationLevel;
    CKDPLocale * _locale;
    NSString * _mmcsProtocolVersion;
    NSString * _operationGroupName;
    unsigned long long  _operationGroupQuantity;
    NSMutableArray * _serviceIdentityKeyIDs;
    int  _targetDatabase;
    NSString * _userIDContainerID;
    NSString * _userToken;
}

@property (nonatomic, retain) NSString *applicationBundle;
@property (nonatomic) unsigned long long applicationConfigVersion;
@property (nonatomic, retain) NSString *applicationContainer;
@property (nonatomic) int applicationContainerEnvironment;
@property (nonatomic, retain) NSString *applicationVersion;
@property (nonatomic, retain) CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions *assetAuthorizeGetRequestOptions;
@property (nonatomic, retain) NSData *clientChangeToken;
@property (nonatomic, retain) NSString *deviceAssignedName;
@property (nonatomic) unsigned long long deviceFlowControlBudget;
@property (nonatomic) unsigned long long deviceFlowControlBudgetCap;
@property (nonatomic, retain) NSString *deviceFlowControlKey;
@property (nonatomic) float deviceFlowControlRegeneration;
@property (nonatomic, retain) NSString *deviceHardwareID;
@property (nonatomic, retain) NSString *deviceHardwareVersion;
@property (nonatomic, retain) CKDPIdentifier *deviceIdentifier;
@property (nonatomic, retain) NSString *deviceLibraryName;
@property (nonatomic, retain) NSString *deviceLibraryVersion;
@property (nonatomic) unsigned long long deviceProtocolVersion;
@property (nonatomic) bool deviceSoftwareIsAppleInternal;
@property (nonatomic, retain) NSString *deviceSoftwareVersion;
@property (nonatomic) unsigned long long globalConfigVersion;
@property (nonatomic, readonly) bool hasApplicationBundle;
@property (nonatomic) bool hasApplicationConfigVersion;
@property (nonatomic, readonly) bool hasApplicationContainer;
@property (nonatomic) bool hasApplicationContainerEnvironment;
@property (nonatomic, readonly) bool hasApplicationVersion;
@property (nonatomic, readonly) bool hasAssetAuthorizeGetRequestOptions;
@property (nonatomic, readonly) bool hasClientChangeToken;
@property (nonatomic, readonly) bool hasDeviceAssignedName;
@property (nonatomic) bool hasDeviceFlowControlBudget;
@property (nonatomic) bool hasDeviceFlowControlBudgetCap;
@property (nonatomic, readonly) bool hasDeviceFlowControlKey;
@property (nonatomic) bool hasDeviceFlowControlRegeneration;
@property (nonatomic, readonly) bool hasDeviceHardwareID;
@property (nonatomic, readonly) bool hasDeviceHardwareVersion;
@property (nonatomic, readonly) bool hasDeviceIdentifier;
@property (nonatomic, readonly) bool hasDeviceLibraryName;
@property (nonatomic, readonly) bool hasDeviceLibraryVersion;
@property (nonatomic) bool hasDeviceProtocolVersion;
@property (nonatomic) bool hasDeviceSoftwareIsAppleInternal;
@property (nonatomic, readonly) bool hasDeviceSoftwareVersion;
@property (nonatomic) bool hasGlobalConfigVersion;
@property (nonatomic) bool hasIsolationLevel;
@property (nonatomic, readonly) bool hasLocale;
@property (nonatomic, readonly) bool hasMmcsProtocolVersion;
@property (nonatomic, readonly) bool hasOperationGroupName;
@property (nonatomic) bool hasOperationGroupQuantity;
@property (nonatomic) bool hasTargetDatabase;
@property (nonatomic, readonly) bool hasUserIDContainerID;
@property (nonatomic, readonly) bool hasUserToken;
@property (nonatomic) int isolationLevel;
@property (nonatomic, retain) CKDPLocale *locale;
@property (nonatomic, retain) NSString *mmcsProtocolVersion;
@property (nonatomic, retain) NSString *operationGroupName;
@property (nonatomic) unsigned long long operationGroupQuantity;
@property (nonatomic, retain) NSMutableArray *serviceIdentityKeyIDs;
@property (nonatomic) int targetDatabase;
@property (nonatomic, retain) NSString *userIDContainerID;
@property (nonatomic, retain) NSString *userToken;

+ (Class)serviceIdentityKeyIDsType;

- (void).cxx_destruct;
- (int)StringAsApplicationContainerEnvironment:(id)arg1;
- (int)StringAsIsolationLevel:(id)arg1;
- (int)StringAsTargetDatabase:(id)arg1;
- (id)_applicationContainerEnvironmentCKLogValue;
- (id)_isolationLevelCKLogValue;
- (id)_targetDatabaseCKLogValue;
- (void)addServiceIdentityKeyIDs:(id)arg1;
- (id)applicationBundle;
- (unsigned long long)applicationConfigVersion;
- (id)applicationContainer;
- (int)applicationContainerEnvironment;
- (id)applicationContainerEnvironmentAsString:(int)arg1;
- (id)applicationVersion;
- (id)assetAuthorizeGetRequestOptions;
- (void)clearServiceIdentityKeyIDs;
- (id)clientChangeToken;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)deviceAssignedName;
- (unsigned long long)deviceFlowControlBudget;
- (unsigned long long)deviceFlowControlBudgetCap;
- (id)deviceFlowControlKey;
- (float)deviceFlowControlRegeneration;
- (id)deviceHardwareID;
- (id)deviceHardwareVersion;
- (id)deviceIdentifier;
- (id)deviceLibraryName;
- (id)deviceLibraryVersion;
- (unsigned long long)deviceProtocolVersion;
- (bool)deviceSoftwareIsAppleInternal;
- (id)deviceSoftwareVersion;
- (id)dictionaryRepresentation;
- (unsigned long long)globalConfigVersion;
- (bool)hasApplicationBundle;
- (bool)hasApplicationConfigVersion;
- (bool)hasApplicationContainer;
- (bool)hasApplicationContainerEnvironment;
- (bool)hasApplicationVersion;
- (bool)hasAssetAuthorizeGetRequestOptions;
- (bool)hasClientChangeToken;
- (bool)hasDeviceAssignedName;
- (bool)hasDeviceFlowControlBudget;
- (bool)hasDeviceFlowControlBudgetCap;
- (bool)hasDeviceFlowControlKey;
- (bool)hasDeviceFlowControlRegeneration;
- (bool)hasDeviceHardwareID;
- (bool)hasDeviceHardwareVersion;
- (bool)hasDeviceIdentifier;
- (bool)hasDeviceLibraryName;
- (bool)hasDeviceLibraryVersion;
- (bool)hasDeviceProtocolVersion;
- (bool)hasDeviceSoftwareIsAppleInternal;
- (bool)hasDeviceSoftwareVersion;
- (bool)hasGlobalConfigVersion;
- (bool)hasIsolationLevel;
- (bool)hasLocale;
- (bool)hasMmcsProtocolVersion;
- (bool)hasOperationGroupName;
- (bool)hasOperationGroupQuantity;
- (bool)hasTargetDatabase;
- (bool)hasUserIDContainerID;
- (bool)hasUserToken;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (int)isolationLevel;
- (id)isolationLevelAsString:(int)arg1;
- (id)locale;
- (void)mergeFrom:(id)arg1;
- (id)mmcsProtocolVersion;
- (id)operationGroupName;
- (unsigned long long)operationGroupQuantity;
- (bool)readFrom:(id)arg1;
- (id)serviceIdentityKeyIDs;
- (id)serviceIdentityKeyIDsAtIndex:(unsigned long long)arg1;
- (unsigned long long)serviceIdentityKeyIDsCount;
- (void)setApplicationBundle:(id)arg1;
- (void)setApplicationConfigVersion:(unsigned long long)arg1;
- (void)setApplicationContainer:(id)arg1;
- (void)setApplicationContainerEnvironment:(int)arg1;
- (void)setApplicationVersion:(id)arg1;
- (void)setAssetAuthorizeGetRequestOptions:(id)arg1;
- (void)setClientChangeToken:(id)arg1;
- (void)setDeviceAssignedName:(id)arg1;
- (void)setDeviceFlowControlBudget:(unsigned long long)arg1;
- (void)setDeviceFlowControlBudgetCap:(unsigned long long)arg1;
- (void)setDeviceFlowControlKey:(id)arg1;
- (void)setDeviceFlowControlRegeneration:(float)arg1;
- (void)setDeviceHardwareID:(id)arg1;
- (void)setDeviceHardwareVersion:(id)arg1;
- (void)setDeviceIdentifier:(id)arg1;
- (void)setDeviceLibraryName:(id)arg1;
- (void)setDeviceLibraryVersion:(id)arg1;
- (void)setDeviceProtocolVersion:(unsigned long long)arg1;
- (void)setDeviceSoftwareIsAppleInternal:(bool)arg1;
- (void)setDeviceSoftwareVersion:(id)arg1;
- (void)setGlobalConfigVersion:(unsigned long long)arg1;
- (void)setHasApplicationConfigVersion:(bool)arg1;
- (void)setHasApplicationContainerEnvironment:(bool)arg1;
- (void)setHasDeviceFlowControlBudget:(bool)arg1;
- (void)setHasDeviceFlowControlBudgetCap:(bool)arg1;
- (void)setHasDeviceFlowControlRegeneration:(bool)arg1;
- (void)setHasDeviceProtocolVersion:(bool)arg1;
- (void)setHasDeviceSoftwareIsAppleInternal:(bool)arg1;
- (void)setHasGlobalConfigVersion:(bool)arg1;
- (void)setHasIsolationLevel:(bool)arg1;
- (void)setHasOperationGroupQuantity:(bool)arg1;
- (void)setHasTargetDatabase:(bool)arg1;
- (void)setIsolationLevel:(int)arg1;
- (void)setLocale:(id)arg1;
- (void)setMmcsProtocolVersion:(id)arg1;
- (void)setOperationGroupName:(id)arg1;
- (void)setOperationGroupQuantity:(unsigned long long)arg1;
- (void)setServiceIdentityKeyIDs:(id)arg1;
- (void)setTargetDatabase:(int)arg1;
- (void)setUserIDContainerID:(id)arg1;
- (void)setUserToken:(id)arg1;
- (int)targetDatabase;
- (id)targetDatabaseAsString:(int)arg1;
- (id)userIDContainerID;
- (id)userToken;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

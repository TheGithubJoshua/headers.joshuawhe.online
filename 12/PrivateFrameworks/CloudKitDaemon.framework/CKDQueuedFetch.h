<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDQueuedFetch.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudKitDaemon.framework/CKDQueuedFetch.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon (736.235)
 */

@interface CKDQueuedFetch : NSObject {
    NSObject<OS_dispatch_queue> * _callbackQueue;
    id /* block */  _completionHandler;
    NSMutableDictionary * _completionHandlersByItemID;
    CKDClientContext * _context;
    NSMutableSet * _dependentOperationIDs;
    NSMutableDictionary * _dependentOperationIDsByItemID;
    CKDQueuedFetch * _equivalentRunningFetch;
    long long  _highestQOS;
    CKDOperation * _initialOperation;
    bool  _isFinished;
    unsigned long long  _lastCompletionHandlerCount;
    NSDate * _lastRequestDate;
    NSOperationQueue * _operationQueue;
    NSDate * _queuedDate;
    NSString * _runningOperationID;
    long long  _scope;
    NSDate * _startDate;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, copy) id /* block */ completionHandler;
@property (nonatomic, retain) NSMutableDictionary *completionHandlersByItemID;
@property (nonatomic) CKDClientContext *context;
@property (nonatomic, retain) NSMutableSet *dependentOperationIDs;
@property (nonatomic, retain) NSMutableDictionary *dependentOperationIDsByItemID;
@property (nonatomic) CKDQueuedFetch *equivalentRunningFetch;
@property (nonatomic) long long highestQOS;
@property (nonatomic, retain) CKDOperation *initialOperation;
@property (nonatomic) bool isFinished;
@property (nonatomic) unsigned long long lastCompletionHandlerCount;
@property (nonatomic, retain) NSDate *lastRequestDate;
@property (nonatomic) NSOperationQueue *operationQueue;
@property (nonatomic, retain) NSDate *queuedDate;
@property (nonatomic, retain) NSString *runningOperationID;
@property (nonatomic) long long scope;
@property (nonatomic, retain) NSDate *startDate;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (void)addCallbackForItemWithID:(id)arg1 operation:(id)arg2 callback:(id /* block */)arg3;
- (id)allItemIDs;
- (id)callbackQueue;
- (id)callbacksForItemWithID:(id)arg1;
- (bool)canBeUsedForOperation:(id)arg1;
- (bool)canBeUsedForPendingFetch:(id)arg1;
- (id /* block */)completionHandler;
- (id)completionHandlersByItemID;
- (id)context;
- (void)createFetchOperationForItemIDs:(id)arg1 operationQueue:(id)arg2 operationConfigurationBlock:(id /* block */)arg3;
- (id)dependentOperationIDs;
- (id)dependentOperationIDsByItemID;
- (bool)dependentOperationListContainsOperationID:(id)arg1;
- (bool)dependentOperationListContainsRunningFetch:(id)arg1;
- (id)description;
- (id)equivalentRunningFetch;
- (void)finishFetchOperationWithError:(id)arg1;
- (long long)highestQOS;
- (id)init;
- (id)initWithOperation:(id)arg1 context:(id)arg2 operationQueue:(id)arg3;
- (id)initialOperation;
- (bool)isFinished;
- (unsigned long long)lastCompletionHandlerCount;
- (id)lastRequestDate;
- (int)numberOfCallbacks;
- (id)operationQueue;
- (void)performCallbacksForItemWithID:(id)arg1 withItem:(id)arg2 error:(id)arg3;
- (id)queuedDate;
- (void)removeCallbacksForItemWithID:(id)arg1;
- (id)runningOperationID;
- (long long)scope;
- (void)setCallbackQueue:(id)arg1;
- (void)setCompletionHandler:(id /* block */)arg1;
- (void)setCompletionHandlersByItemID:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDependentOperationIDs:(id)arg1;
- (void)setDependentOperationIDsByItemID:(id)arg1;
- (void)setEquivalentRunningFetch:(id)arg1;
- (void)setHighestQOS:(long long)arg1;
- (void)setInitialOperation:(id)arg1;
- (void)setIsFinished:(bool)arg1;
- (void)setLastCompletionHandlerCount:(unsigned long long)arg1;
- (void)setLastRequestDate:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setQueuedDate:(id)arg1;
- (void)setRunningOperationID:(id)arg1;
- (void)setScope:(long long)arg1;
- (void)setStartDate:(id)arg1;
- (void)start;
- (id)startDate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

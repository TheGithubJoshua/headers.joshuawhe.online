<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDPShare.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudKitDaemon.framework/CKDPShare.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon (736.235)
 */

@interface CKDPShare : PBCodable <NSCopying> {
    bool  _anonymousPublicAccess;
    NSString * _displayedHostname;
    NSString * _etag;
    struct { 
        unsigned int publicAccess : 1; 
        unsigned int anonymousPublicAccess : 1; 
        unsigned int publisherModel : 1; 
    }  _has;
    NSMutableArray * _invitedKeyToRemoves;
    CKDPProtectionInfo * _invitedPcs;
    NSString * _origin;
    NSMutableArray * _participants;
    NSMutableArray * _potentialMatchs;
    int  _publicAccess;
    bool  _publisherModel;
    CKDPProtectionInfo * _selfAddedPcs;
    CKDPShareIdentifier * _shareId;
    NSData * _shortTokenHash;
    NSString * _shortTokenRoutingKey;
}

@property (nonatomic) bool anonymousPublicAccess;
@property (nonatomic, retain) NSString *displayedHostname;
@property (nonatomic, retain) NSString *etag;
@property (nonatomic) bool hasAnonymousPublicAccess;
@property (nonatomic, readonly) bool hasDisplayedHostname;
@property (nonatomic, readonly) bool hasEtag;
@property (nonatomic, readonly) bool hasInvitedPcs;
@property (nonatomic, readonly) bool hasOrigin;
@property (nonatomic) bool hasPublicAccess;
@property (nonatomic) bool hasPublisherModel;
@property (nonatomic, readonly) bool hasSelfAddedPcs;
@property (nonatomic, readonly) bool hasShareId;
@property (nonatomic, readonly) bool hasShortTokenHash;
@property (nonatomic, readonly) bool hasShortTokenRoutingKey;
@property (nonatomic, retain) NSMutableArray *invitedKeyToRemoves;
@property (nonatomic, retain) CKDPProtectionInfo *invitedPcs;
@property (nonatomic, retain) NSString *origin;
@property (nonatomic, retain) NSMutableArray *participants;
@property (nonatomic, retain) NSMutableArray *potentialMatchs;
@property (nonatomic) int publicAccess;
@property (nonatomic) bool publisherModel;
@property (nonatomic, retain) CKDPProtectionInfo *selfAddedPcs;
@property (nonatomic, retain) CKDPShareIdentifier *shareId;
@property (nonatomic, retain) NSData *shortTokenHash;
@property (nonatomic, retain) NSString *shortTokenRoutingKey;

+ (Class)invitedKeyToRemoveType;
+ (Class)participantType;
+ (Class)potentialMatchType;

- (void).cxx_destruct;
- (int)StringAsPublicAccess:(id)arg1;
- (id)_publicAccessCKLogValue;
- (void)addInvitedKeyToRemove:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)addPotentialMatch:(id)arg1;
- (bool)anonymousPublicAccess;
- (void)clearInvitedKeyToRemoves;
- (void)clearParticipants;
- (void)clearPotentialMatchs;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)displayedHostname;
- (id)etag;
- (bool)hasAnonymousPublicAccess;
- (bool)hasDisplayedHostname;
- (bool)hasEtag;
- (bool)hasInvitedPcs;
- (bool)hasOrigin;
- (bool)hasPublicAccess;
- (bool)hasPublisherModel;
- (bool)hasSelfAddedPcs;
- (bool)hasShareId;
- (bool)hasShortTokenHash;
- (bool)hasShortTokenRoutingKey;
- (unsigned long long)hash;
- (id)invitedKeyToRemoveAtIndex:(unsigned long long)arg1;
- (id)invitedKeyToRemoves;
- (unsigned long long)invitedKeyToRemovesCount;
- (id)invitedPcs;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)origin;
- (id)participantAtIndex:(unsigned long long)arg1;
- (id)participants;
- (unsigned long long)participantsCount;
- (id)potentialMatchAtIndex:(unsigned long long)arg1;
- (id)potentialMatchs;
- (unsigned long long)potentialMatchsCount;
- (int)publicAccess;
- (id)publicAccessAsString:(int)arg1;
- (bool)publisherModel;
- (bool)readFrom:(id)arg1;
- (id)selfAddedPcs;
- (void)setAnonymousPublicAccess:(bool)arg1;
- (void)setDisplayedHostname:(id)arg1;
- (void)setEtag:(id)arg1;
- (void)setHasAnonymousPublicAccess:(bool)arg1;
- (void)setHasPublicAccess:(bool)arg1;
- (void)setHasPublisherModel:(bool)arg1;
- (void)setInvitedKeyToRemoves:(id)arg1;
- (void)setInvitedPcs:(id)arg1;
- (void)setOrigin:(id)arg1;
- (void)setParticipants:(id)arg1;
- (void)setPotentialMatchs:(id)arg1;
- (void)setPublicAccess:(int)arg1;
- (void)setPublisherModel:(bool)arg1;
- (void)setSelfAddedPcs:(id)arg1;
- (void)setShareId:(id)arg1;
- (void)setShortTokenHash:(id)arg1;
- (void)setShortTokenRoutingKey:(id)arg1;
- (id)shareId;
- (id)shortTokenHash;
- (id)shortTokenRoutingKey;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

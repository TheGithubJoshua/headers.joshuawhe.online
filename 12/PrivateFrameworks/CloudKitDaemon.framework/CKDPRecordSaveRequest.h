<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDPRecordSaveRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudKitDaemon.framework/CKDPRecordSaveRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon (736.235)
 */

@interface CKDPRecordSaveRequest : PBRequest <NSCopying> {
    CKDPRecordSaveRequestConflictLoserUpdate * _conflictLoserUpdate;
    NSMutableArray * _conflictLosersToResolves;
    NSString * _etag;
    NSMutableArray * _fieldsToDeleteIfExistOnMerges;
    struct { 
        unsigned int saveSemantics : 1; 
        unsigned int merge : 1; 
    }  _has;
    bool  _merge;
    NSString * _parentChainProtectionInfoTag;
    CKDPRecord * _record;
    NSString * _recordProtectionInfoTag;
    CKDPRequestedFields * _requestedFields;
    int  _saveSemantics;
    NSString * _shareEtag;
    CKDPRecordSaveRequestShareIdUpdate * _shareIDUpdate;
    NSString * _zoneProtectionInfoTag;
}

@property (nonatomic, retain) CKDPRecordSaveRequestConflictLoserUpdate *conflictLoserUpdate;
@property (nonatomic, retain) NSMutableArray *conflictLosersToResolves;
@property (nonatomic, retain) NSString *etag;
@property (nonatomic, retain) NSMutableArray *fieldsToDeleteIfExistOnMerges;
@property (nonatomic, readonly) bool hasConflictLoserUpdate;
@property (nonatomic, readonly) bool hasEtag;
@property (nonatomic) bool hasMerge;
@property (nonatomic, readonly) bool hasParentChainProtectionInfoTag;
@property (nonatomic, readonly) bool hasRecord;
@property (nonatomic, readonly) bool hasRecordProtectionInfoTag;
@property (nonatomic, readonly) bool hasRequestedFields;
@property (nonatomic) bool hasSaveSemantics;
@property (nonatomic, readonly) bool hasShareEtag;
@property (nonatomic, readonly) bool hasShareIDUpdate;
@property (nonatomic, readonly) bool hasZoneProtectionInfoTag;
@property (nonatomic) bool merge;
@property (nonatomic, retain) NSString *parentChainProtectionInfoTag;
@property (nonatomic, retain) CKDPRecord *record;
@property (nonatomic, retain) NSString *recordProtectionInfoTag;
@property (nonatomic, retain) CKDPRequestedFields *requestedFields;
@property (nonatomic) int saveSemantics;
@property (nonatomic, retain) NSString *shareEtag;
@property (nonatomic, retain) CKDPRecordSaveRequestShareIdUpdate *shareIDUpdate;
@property (nonatomic, retain) NSString *zoneProtectionInfoTag;

+ (Class)conflictLosersToResolveType;
+ (Class)fieldsToDeleteIfExistOnMergeType;
+ (id)options;

- (void).cxx_destruct;
- (int)StringAsSaveSemantics:(id)arg1;
- (void)addConflictLosersToResolve:(id)arg1;
- (void)addFieldsToDeleteIfExistOnMerge:(id)arg1;
- (void)clearConflictLosersToResolves;
- (void)clearFieldsToDeleteIfExistOnMerges;
- (id)conflictLoserUpdate;
- (id)conflictLosersToResolveAtIndex:(unsigned long long)arg1;
- (id)conflictLosersToResolves;
- (unsigned long long)conflictLosersToResolvesCount;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)etag;
- (id)fieldsToDeleteIfExistOnMergeAtIndex:(unsigned long long)arg1;
- (id)fieldsToDeleteIfExistOnMerges;
- (unsigned long long)fieldsToDeleteIfExistOnMergesCount;
- (bool)hasConflictLoserUpdate;
- (bool)hasEtag;
- (bool)hasMerge;
- (bool)hasParentChainProtectionInfoTag;
- (bool)hasRecord;
- (bool)hasRecordProtectionInfoTag;
- (bool)hasRequestedFields;
- (bool)hasSaveSemantics;
- (bool)hasShareEtag;
- (bool)hasShareIDUpdate;
- (bool)hasZoneProtectionInfoTag;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)merge;
- (void)mergeFrom:(id)arg1;
- (id)parentChainProtectionInfoTag;
- (bool)readFrom:(id)arg1;
- (id)record;
- (id)recordProtectionInfoTag;
- (unsigned int)requestTypeCode;
- (id)requestedFields;
- (Class)responseClass;
- (int)saveSemantics;
- (id)saveSemanticsAsString:(int)arg1;
- (void)setConflictLoserUpdate:(id)arg1;
- (void)setConflictLosersToResolves:(id)arg1;
- (void)setEtag:(id)arg1;
- (void)setFieldsToDeleteIfExistOnMerges:(id)arg1;
- (void)setHasMerge:(bool)arg1;
- (void)setHasSaveSemantics:(bool)arg1;
- (void)setMerge:(bool)arg1;
- (void)setParentChainProtectionInfoTag:(id)arg1;
- (void)setRecord:(id)arg1;
- (void)setRecordProtectionInfoTag:(id)arg1;
- (void)setRequestedFields:(id)arg1;
- (void)setSaveSemantics:(int)arg1;
- (void)setShareEtag:(id)arg1;
- (void)setShareIDUpdate:(id)arg1;
- (void)setZoneProtectionInfoTag:(id)arg1;
- (id)shareEtag;
- (id)shareIDUpdate;
- (void)writeTo:(id)arg1;
- (id)zoneProtectionInfoTag;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

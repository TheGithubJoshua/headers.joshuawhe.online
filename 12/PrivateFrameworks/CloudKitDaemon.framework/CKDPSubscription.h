<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDPSubscription.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudKitDaemon.framework/CKDPSubscription.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon (736.235)
 */

@interface CKDPSubscription : PBCodable <NSCopying> {
    int  _evaluationType;
    NSMutableArray * _filters;
    bool  _fireOnce;
    struct { 
        unsigned int evaluationType : 1; 
        unsigned int owner : 1; 
        unsigned int fireOnce : 1; 
    }  _has;
    CKDPIdentifier * _identifier;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _mutationTriggers;
    CKDPSubscriptionNotification * _notification;
    int  _owner;
    NSMutableArray * _recordTypes;
    CKDPRecordZoneIdentifier * _zoneIdentifier;
}

@property (nonatomic) int evaluationType;
@property (nonatomic, retain) NSMutableArray *filters;
@property (nonatomic) bool fireOnce;
@property (nonatomic) bool hasEvaluationType;
@property (nonatomic) bool hasFireOnce;
@property (nonatomic, readonly) bool hasIdentifier;
@property (nonatomic, readonly) bool hasNotification;
@property (nonatomic) bool hasOwner;
@property (nonatomic, readonly) bool hasZoneIdentifier;
@property (nonatomic, retain) CKDPIdentifier *identifier;
@property (nonatomic, readonly) int*mutationTriggers;
@property (nonatomic, readonly) unsigned long long mutationTriggersCount;
@property (nonatomic, retain) CKDPSubscriptionNotification *notification;
@property (nonatomic) int owner;
@property (nonatomic, retain) NSMutableArray *recordTypes;
@property (nonatomic, retain) CKDPRecordZoneIdentifier *zoneIdentifier;

+ (Class)filtersType;
+ (Class)recordTypesType;

- (void).cxx_destruct;
- (int)StringAsEvaluationType:(id)arg1;
- (int)StringAsMutationTriggers:(id)arg1;
- (int)StringAsOwner:(id)arg1;
- (void)addFilters:(id)arg1;
- (void)addMutationTriggers:(int)arg1;
- (void)addRecordTypes:(id)arg1;
- (void)clearFilters;
- (void)clearMutationTriggers;
- (void)clearRecordTypes;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (int)evaluationType;
- (id)evaluationTypeAsString:(int)arg1;
- (id)filters;
- (id)filtersAtIndex:(unsigned long long)arg1;
- (unsigned long long)filtersCount;
- (bool)fireOnce;
- (bool)hasEvaluationType;
- (bool)hasFireOnce;
- (bool)hasIdentifier;
- (bool)hasNotification;
- (bool)hasOwner;
- (bool)hasZoneIdentifier;
- (unsigned long long)hash;
- (id)identifier;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (int*)mutationTriggers;
- (id)mutationTriggersAsString:(int)arg1;
- (int)mutationTriggersAtIndex:(unsigned long long)arg1;
- (unsigned long long)mutationTriggersCount;
- (id)notification;
- (int)owner;
- (id)ownerAsString:(int)arg1;
- (bool)readFrom:(id)arg1;
- (id)recordTypes;
- (id)recordTypesAtIndex:(unsigned long long)arg1;
- (unsigned long long)recordTypesCount;
- (void)setEvaluationType:(int)arg1;
- (void)setFilters:(id)arg1;
- (void)setFireOnce:(bool)arg1;
- (void)setHasEvaluationType:(bool)arg1;
- (void)setHasFireOnce:(bool)arg1;
- (void)setHasOwner:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMutationTriggers:(int*)arg1 count:(unsigned long long)arg2;
- (void)setNotification:(id)arg1;
- (void)setOwner:(int)arg1;
- (void)setRecordTypes:(id)arg1;
- (void)setZoneIdentifier:(id)arg1;
- (void)writeTo:(id)arg1;
- (id)zoneIdentifier;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

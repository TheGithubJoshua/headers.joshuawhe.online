<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKDPZoneRetrieveResponseZoneSummary.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudKitDaemon.framework/CKDPZoneRetrieveResponseZoneSummary.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon (736.235)
 */

@interface CKDPZoneRetrieveResponseZoneSummary : PBCodable <NSCopying> {
    long long  _assetQuotaUsage;
    CKDPZoneCapabilities * _capabilities;
    NSData * _clientChangeToken;
    NSData * _currentServerContinuationToken;
    int  _deviceCount;
    struct { 
        unsigned int assetQuotaUsage : 1; 
        unsigned int metadataQuotaUsage : 1; 
        unsigned int deviceCount : 1; 
        unsigned int zoneKeyRollAllowed : 1; 
        unsigned int zoneishPcsNeedsRolled : 1; 
    }  _has;
    long long  _metadataQuotaUsage;
    CKDPZone * _targetZone;
    bool  _zoneKeyRollAllowed;
    NSString * _zonePcsModificationDevice;
    CKDPDate * _zonePcsModificationTime;
    bool  _zoneishPcsNeedsRolled;
}

@property (nonatomic) long long assetQuotaUsage;
@property (nonatomic, retain) CKDPZoneCapabilities *capabilities;
@property (nonatomic, retain) NSData *clientChangeToken;
@property (nonatomic, retain) NSData *currentServerContinuationToken;
@property (nonatomic) int deviceCount;
@property (nonatomic) bool hasAssetQuotaUsage;
@property (nonatomic, readonly) bool hasCapabilities;
@property (nonatomic, readonly) bool hasClientChangeToken;
@property (nonatomic, readonly) bool hasCurrentServerContinuationToken;
@property (nonatomic) bool hasDeviceCount;
@property (nonatomic) bool hasMetadataQuotaUsage;
@property (nonatomic, readonly) bool hasTargetZone;
@property (nonatomic) bool hasZoneKeyRollAllowed;
@property (nonatomic, readonly) bool hasZonePcsModificationDevice;
@property (nonatomic, readonly) bool hasZonePcsModificationTime;
@property (nonatomic) bool hasZoneishPcsNeedsRolled;
@property (nonatomic) long long metadataQuotaUsage;
@property (nonatomic, retain) CKDPZone *targetZone;
@property (nonatomic) bool zoneKeyRollAllowed;
@property (nonatomic, retain) NSString *zonePcsModificationDevice;
@property (nonatomic, retain) CKDPDate *zonePcsModificationTime;
@property (nonatomic) bool zoneishPcsNeedsRolled;

- (void).cxx_destruct;
- (long long)assetQuotaUsage;
- (id)capabilities;
- (id)clientChangeToken;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentServerContinuationToken;
- (id)description;
- (int)deviceCount;
- (id)dictionaryRepresentation;
- (bool)hasAssetQuotaUsage;
- (bool)hasCapabilities;
- (bool)hasClientChangeToken;
- (bool)hasCurrentServerContinuationToken;
- (bool)hasDeviceCount;
- (bool)hasMetadataQuotaUsage;
- (bool)hasTargetZone;
- (bool)hasZoneKeyRollAllowed;
- (bool)hasZonePcsModificationDevice;
- (bool)hasZonePcsModificationTime;
- (bool)hasZoneishPcsNeedsRolled;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (long long)metadataQuotaUsage;
- (bool)readFrom:(id)arg1;
- (void)setAssetQuotaUsage:(long long)arg1;
- (void)setCapabilities:(id)arg1;
- (void)setClientChangeToken:(id)arg1;
- (void)setCurrentServerContinuationToken:(id)arg1;
- (void)setDeviceCount:(int)arg1;
- (void)setHasAssetQuotaUsage:(bool)arg1;
- (void)setHasDeviceCount:(bool)arg1;
- (void)setHasMetadataQuotaUsage:(bool)arg1;
- (void)setHasZoneKeyRollAllowed:(bool)arg1;
- (void)setHasZoneishPcsNeedsRolled:(bool)arg1;
- (void)setMetadataQuotaUsage:(long long)arg1;
- (void)setTargetZone:(id)arg1;
- (void)setZoneKeyRollAllowed:(bool)arg1;
- (void)setZonePcsModificationDevice:(id)arg1;
- (void)setZonePcsModificationTime:(id)arg1;
- (void)setZoneishPcsNeedsRolled:(bool)arg1;
- (id)targetZone;
- (void)writeTo:(id)arg1;
- (bool)zoneKeyRollAllowed;
- (id)zonePcsModificationDevice;
- (id)zonePcsModificationTime;
- (bool)zoneishPcsNeedsRolled;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

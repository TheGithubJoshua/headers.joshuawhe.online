<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CARSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CarKit.framework/CARSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CarKit.framework/CarKit (1)
 */

@interface CARSession : NSObject <CARSessionCommandDelegate> {
    NSData * _MFiCertificateSerialNumber;
    bool  _authenticated;
    CARSessionConfiguration * _configuration;
    struct OpaqueFigEndpoint { } * _endpoint;
    CARInputDeviceManager * _inputDeviceManager;
    int  _mapsAmbientBrightnessNotifyToken;
    NSNumber * _mapsFallbackAmbientBrightness;
    NSArray * _screenIDs;
    NSArray * _screenInfo;
    <CARSessionDelegate> * _sessionDelegate;
}

@property (nonatomic, readonly, copy) NSDictionary *APEndPointInfo;
@property (nonatomic, readonly, copy) NSData *MFiCertificateSerialNumber;
@property (getter=isAuthenticated, nonatomic, readonly) bool authenticated;
@property (nonatomic, readonly) CARSessionConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSNumber *electronicTollCollectionAvailable;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) CARInputDeviceManager *inputDeviceManager;
@property (nonatomic, readonly, copy) NSNumber *limitUserInterfaces;
@property (nonatomic) int mapsAmbientBrightnessNotifyToken;
@property (nonatomic, retain) NSNumber *mapsFallbackAmbientBrightness;
@property (nonatomic, readonly, copy) NSNumber *nightMode;
@property (nonatomic, copy) NSArray *screenIDs;
@property (nonatomic, copy) NSArray *screenInfo;
@property (nonatomic) <CARSessionDelegate> *sessionDelegate;
@property (readonly) Class superclass;

+ (long long)_siriRequestEventForEndpointAction:(id)arg1;

- (void).cxx_destruct;
- (id)APEndPointInfo;
- (id)MFiCertificateSerialNumber;
- (id)_endpointValueForKey:(struct __CFString { }*)arg1;
- (void)_fetchAuthenticationStatus;
- (void)_fetchMapsFallbackAmbientBrightnessWithToken:(int)arg1;
- (void)_handleOpenURL:(id)arg1;
- (void)_handleSiriRequestEvent:(long long)arg1 withPayload:(id)arg2;
- (void)_performExtendedEndpointAction:(id /* block */)arg1;
- (void)_setEndpointValue:(void*)arg1 forKey:(struct __CFString { }*)arg2;
- (id)borrowScreenForClient:(id)arg1 reason:(id)arg2;
- (id)configuration;
- (void)dealloc;
- (id)description;
- (id)electronicTollCollectionAvailable;
- (struct OpaqueFigEndpoint { }*)endpoint;
- (id)initWithFigEndpoint:(struct OpaqueFigEndpoint { }*)arg1;
- (id)inputDeviceManager;
- (bool)isAuthenticated;
- (id)limitUserInterfaces;
- (int)mapsAmbientBrightnessNotifyToken;
- (id)mapsFallbackAmbientBrightness;
- (unsigned long long)navigationOwner;
- (id)nightMode;
- (bool)ownsScreen;
- (bool)recognizingSpeech;
- (void)releaseTurnByTurnOwnership;
- (void)requestCarUI;
- (void)requestCarUIForURL:(id)arg1;
- (void)requestTurnByTurnOwnership;
- (id)screenIDs;
- (id)screenInfo;
- (void)sendCommand:(id)arg1 withParameters:(id)arg2;
- (id)sessionDelegate;
- (void)setInputDeviceManager:(id)arg1;
- (void)setInputMode:(unsigned long long)arg1 forInputDevice:(id)arg2;
- (void)setMapsAmbientBrightnessNotifyToken:(int)arg1;
- (void)setMapsFallbackAmbientBrightness:(id)arg1;
- (void)setScreenIDs:(id)arg1;
- (void)setScreenInfo:(id)arg1;
- (void)setSessionDelegate:(id)arg1;
- (void)setSiriForwardingEnabled:(bool)arg1;
- (id)systemNightMode;
- (void)takeScreenForClient:(id)arg1 reason:(id)arg2;
- (void)takeScreenForConnection;
- (void)unborrowScreenForToken:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKPaymentProvisioningController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PKPaymentProvisioningController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PKPaymentProvisioningController : NSObject <CLLocationManagerDelegate, PKPaymentWebServiceDelegate> {
    NSSet * _allowedFeatureIdentifiers;
    NSArray * _allowedPaymentNetworks;
    NSMutableArray * _associatedCredentials;
    NSSet * _automaticExpressModes;
    PKPaymentProvisioningControllerCredentialQueue * _credentialProvisioningQueue;
    PKPaymentCredential * _currentCredential;
    NSLock * _delegateLock;
    NSHashTable * _delegates;
    NSTimer * _descriptionTimer;
    PKPaymentEligibilityResponse * _eligibilityResponse;
    NSString * _localizedProgressDescription;
    id /* block */  _locationCompletion;
    CLLocationManager * _locationManager;
    NSObject<OS_dispatch_source> * _locationTimer;
    PKPaymentSetupMoreInfoItem * _marketExpressInfoItem;
    NSArray * _moreInfoItems;
    PKPaymentSetupProductModel * _paymentSetupProductModel;
    NSString * _productIdentifier;
    PKPaymentPass * _provisionedPass;
    NSString * _provisioningNonce;
    PKPaymentProvisioningResponse * _provisioningResponse;
    bool  _provisioningUserInterfaceIsVisible;
    bool  _proxyTargetDeviceWebServiceInUse;
    NSArray * _purchaseCredentials;
    NSString * _referrerIdentifier;
    NSSet * _requiredTransitNetworkIdentifiers;
    PKPaymentRequirementsResponse * _requirementsResponse;
    long long  _state;
    NSSet * _supportedFeatureIdentifierStrings;
    unsigned long long  _targetDeviceSupportsTypeF;
    NSMutableSet * _tasks;
    PKPaymentWebService * _webService;
}

@property (nonatomic, readonly, copy) NSArray *allCredentials;
@property (nonatomic, retain) NSSet *allowedFeatureIdentifiers;
@property (nonatomic, retain) NSArray *allowedPaymentNetworks;
@property (nonatomic, readonly, copy) NSArray *associatedCredentials;
@property (nonatomic, readonly) NSSet *automaticExpressModes;
@property (nonatomic, readonly) PKPaymentProvisioningControllerCredentialQueue *credentialProvisioningQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PKPaymentEligibilityResponse *eligibilityResponse;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *localizedProgressDescription;
@property (nonatomic, readonly) NSArray *moreInfoItems;
@property (nonatomic, readonly) PKPaymentSetupProductModel *paymentSetupProductModel;
@property (nonatomic, readonly, copy) NSString *productIdentifier;
@property (nonatomic, readonly) PKPaymentPass *provisionedPass;
@property (nonatomic, readonly) PKPaymentProvisioningResponse *provisioningResponse;
@property (nonatomic, readonly, copy) NSArray *purchaseCredentials;
@property (nonatomic, copy) NSString *referrerIdentifier;
@property (nonatomic, retain) NSSet *requiredTransitNetworkIdentifiers;
@property (nonatomic, readonly) PKPaymentRequirementsResponse *requirementsResponse;
@property (nonatomic) long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool suppressDefaultCardholderNameField;
@property (nonatomic, readonly) PKPaymentWebService *webService;

// Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore

- (void).cxx_destruct;
- (void)_addAccountToProductMatchingFeatureIdentifier:(unsigned long long)arg1;
- (void)_addAssociatedCredential:(id)arg1;
- (void)_associateCredential:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_associateCredentials:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (bool)_credentialIsValidForSetupConfiguration:(id)arg1;
- (long long)_defaultResetState;
- (id)_displayableErrorOverrideForUnderlyingError:(id)arg1;
- (id)_doesDisplayableErrorConstitutePreflightFailure:(id)arg1;
- (void)_downloadMoreInfoItemURLs:(id)arg1 withMetadata:(id)arg2 completion:(id /* block */)arg3;
- (void)_downloadRemoteAssetsForPaymentPass:(id)arg1 paymentCredential:(id)arg2 completion:(id /* block */)arg3;
- (id)_fetchOrCreateProductsForIdentifier:(unsigned long long)arg1;
- (id)_filterPaymentSetupProducts:(id)arg1;
- (void)_handleProvisioningError:(id)arg1 forRequest:(id)arg2;
- (bool)_hasSetupConfiguration;
- (void)_informDelegatesOfPaymentPassUpdateOnCredential:(id)arg1;
- (void)_ingestPaymentPass:(id)arg1 withCompletion:(id /* block */)arg2;
- (bool)_isValidLocation:(id)arg1;
- (void)_loadMoreInfoItemForMarket:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)_mockBrowseBanksResponse;
- (unsigned long long)_noteProvisioningDidBegin;
- (void)_noteProvisioningDidEndWithTaskIdentifier:(unsigned long long)arg1;
- (void)_passAlreadyProvisioned;
- (id)_paymentPassWithPaymentMethodType:(unsigned long long)arg1;
- (void)_provisioningNonceWithCompletion:(id /* block */)arg1;
- (void)_queryEligibilityForCredential:(id)arg1 completion:(id /* block */)arg2;
- (void)_queryRequirementsForCredential:(id)arg1 completion:(id /* block */)arg2;
- (void)_requestEligibility:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_requestProvisioning:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_requestRequirements:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_setLocalizedProgressDescription:(id)arg1;
- (void)_setState:(long long)arg1 notify:(bool)arg2;
- (void)_setupAccountCredentialForProvisioning:(id)arg1 completion:(id /* block */)arg2;
- (void)_startLocationSearchWithTimeout:(double)arg1 completion:(id /* block */)arg2;
- (void)_updateCredentialWithPaymentPass:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateCredentialWithPaymentPassAssets:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateLocalizedProgressAndInvalidateTimer;
- (void)_verifyPassIsSupportedForExpressInLocalMarket:(id)arg1 completion:(id /* block */)arg2;
- (void)acceptTerms;
- (void)addDelegate:(id)arg1;
- (id)allCredentials;
- (id)allowedFeatureIdentifiers;
- (id)allowedPaymentNetworks;
- (void)associateCredentials:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)associatedCredentials;
- (id)associatedCredentialsForDefaultBehaviour;
- (id)automaticExpressModes;
- (void)browsableBankAppsWithCompletionHandler:(id /* block */)arg1;
- (id)credentialProvisioningQueue;
- (void)dealloc;
- (id)displayableErrorForError:(id)arg1;
- (id)displayableErrorForProvisioningError:(id)arg1;
- (id)eligibilityResponse;
- (bool)hasCreditPaymentPass;
- (bool)hasDebitPaymentPass;
- (bool)hasPaymentPass;
- (void)ingestPaymentPassForCredential:(id)arg1 completion:(id /* block */)arg2;
- (id)initWithWebService:(id)arg1;
- (id)initWithWebService:(id)arg1 paymentSetupRequest:(id)arg2;
- (id)localizedProgressDescription;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (id)moreInfoItems;
- (void)noteProvisioningUserInterfaceDidAppear;
- (void)noteProvisioningUserInterfaceDidDisappear;
- (id)passesWithPaymentMethodType:(unsigned long long)arg1;
- (id)paymentSetupProductModel;
- (void)paymentWebService:(id)arg1 didCompleteTSMConnectionForTaskID:(unsigned long long)arg2;
- (void)paymentWebService:(id)arg1 didQueueTSMConnectionForTaskID:(unsigned long long)arg2;
- (void)preflightWithCompletion:(id /* block */)arg1;
- (id)productIdentifier;
- (id)provisionedPass;
- (id)provisioningResponse;
- (bool)provisioningUserInterfaceIsVisible;
- (id)purchaseCredentials;
- (id)referrerIdentifier;
- (void)registerDevice:(id /* block */)arg1;
- (void)removeDelegate:(id)arg1;
- (void)removeProvisionedPass;
- (void)requestEligibility:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)requestProvisioning:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)requestProvisioningMethodMetadataForProduct:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)requestPurchasesForProduct:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)requestRequirements:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)requiredTransitNetworkIdentifiers;
- (id)requirementsResponse;
- (void)reset;
- (void)resetForNewProvisioning;
- (void)resolveAmbiguousRequirementsWithProductIdentifier:(id)arg1;
- (void)resolveProvisioningForCredential:(id)arg1;
- (void)resolveRequirementsUsingAlreadyProvisionedRemoteCredential:(id)arg1;
- (void)resolveRequirementsUsingProduct:(id)arg1;
- (void)resolveRequirementsUsingProvisioningMethodMetadata:(id)arg1;
- (void)retrieveAccountCredentials:(id /* block */)arg1;
- (void)retrieveAllAvaialbleCredentials:(id /* block */)arg1;
- (void)retrieveRemoteCredentials:(id /* block */)arg1;
- (void)setAllowedFeatureIdentifiers:(id)arg1;
- (void)setAllowedPaymentNetworks:(id)arg1;
- (void)setReferrerIdentifier:(id)arg1;
- (void)setRequiredTransitNetworkIdentifiers:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setupAccountCredentialForProvisioning:(id)arg1 completion:(id /* block */)arg2;
- (void)setupFeatures:(id /* block */)arg1;
- (void)setupProductForProvisioning:(id)arg1 includePurchases:(bool)arg2 withCompletionHandler:(id /* block */)arg3;
- (long long)state;
- (id)supportedFeatureIdentifierStrings;
- (bool)suppressDefaultCardholderNameField;
- (void)updatePaymentSetupProductModelWithCompletionHandler:(id /* block */)arg1;
- (void)updateRemoteCredentials:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)validatePreconditions:(id /* block */)arg1;
- (void)validatePreconditionsAndRegister:(id /* block */)arg1;
- (void)validatePreconditionsRegisterAndAssociateRemoteCredentials:(id /* block */)arg1;
- (id)webService;

// Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI

- (id)alertForDisplayableError:(id)arg1;
- (id)alertForDisplayableError:(id)arg1 earlyExitHandler:(id /* block */)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

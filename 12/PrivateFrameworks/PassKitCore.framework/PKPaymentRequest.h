<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKPaymentRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PKPaymentRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PKPaymentRequest : NSObject <NSSecureCoding> {
    unsigned long long  _APIType;
    NSString * _CTDataConnectionServiceType;
    struct __SecAccessControl { } * _accesssControlRef;
    bool  _accountPaymentSupportsPeerPayment;
    bool  _accountPaymentUsePeerPaymentBalance;
    AKAppleIDAuthenticationContext * _appleIDAuthenticationContext;
    PKApplePayTrustSignatureRequest * _applePayTrustSignatureRequest;
    NSData * _applicationData;
    NSArray * _bankAccounts;
    const void * _billingAddress;
    PKContact * _billingContact;
    double  _clientCallbackTimeout;
    unsigned long long  _confirmationStyle;
    NSString * _countryCode;
    NSString * _currencyCode;
    bool  _deviceSupportsPeerPaymentAccountPayment;
    bool  _expectsMerchantSession;
    NSData * _externalizedContext;
    NSString * _localizedBiometricConfirmationTitle;
    NSString * _localizedConfirmationTitle;
    NSString * _localizedNavigationTitle;
    NSString * _localizedPasswordButtonTitle;
    NSString * _localizedSummaryItemsTitle;
    unsigned long long  _merchantCapabilities;
    NSString * _merchantIdentifier;
    PKPaymentMerchantSession * _merchantSession;
    NSURL * _originatingURL;
    NSString * _passSerialNumber;
    NSString * _passTypeIdentifier;
    NSArray * _paymentContentItems;
    NSDate * _paymentDate;
    long long  _paymentFrequency;
    NSArray * _paymentSummaryItems;
    NSTimeZone * _paymentTimeZone;
    unsigned long long  _requestType;
    unsigned long long  _requestor;
    NSSet * _requiredBillingContactFields;
    NSSet * _requiredShippingContactFields;
    bool  _requiresAddressPrecision;
    const void * _shippingAddress;
    PKContact * _shippingContact;
    bool  _shippingEditable;
    NSString * _shippingEditableMessage;
    NSArray * _shippingMethods;
    unsigned long long  _shippingType;
    NSString * _sourceApplicationBundleIdentifier;
    NSString * _sourceApplicationSecondaryIdentifier;
    NSSet * _supportedCountries;
    NSArray * _supportedNetworks;
    bool  _supportsInstantFundsIn;
    bool  _suppressTotal;
    NSArray * _thumbnailURLs;
}

@property (nonatomic) unsigned long long APIType;
@property (nonatomic, retain) NSString *CTDataConnectionServiceType;
@property (nonatomic) struct __SecAccessControl { }*accesssControlRef;
@property (nonatomic) bool accountPaymentSupportsPeerPayment;
@property (nonatomic) bool accountPaymentUsePeerPaymentBalance;
@property (nonatomic, retain) AKAppleIDAuthenticationContext *appleIDAuthenticationContext;
@property (nonatomic, retain) PKApplePayTrustSignatureRequest *applePayTrustSignatureRequest;
@property (nonatomic, copy) NSData *applicationData;
@property (nonatomic, retain) NSArray *bankAccounts;
@property (nonatomic) const void*billingAddress;
@property (nonatomic, retain) PKContact *billingContact;
@property (nonatomic) double clientCallbackTimeout;
@property (nonatomic) unsigned long long confirmationStyle;
@property (nonatomic, copy) NSString *countryCode;
@property (nonatomic, copy) NSString *currencyCode;
@property (nonatomic) bool deviceSupportsPeerPaymentAccountPayment;
@property (nonatomic) bool expectsMerchantSession;
@property (nonatomic, copy) NSData *externalizedContext;
@property (nonatomic, copy) NSString *localizedBiometricConfirmationTitle;
@property (nonatomic, copy) NSString *localizedConfirmationTitle;
@property (nonatomic, copy) NSString *localizedNavigationTitle;
@property (nonatomic, copy) NSString *localizedPasswordButtonTitle;
@property (nonatomic, copy) NSString *localizedSummaryItemsTitle;
@property (nonatomic) unsigned long long merchantCapabilities;
@property (nonatomic, copy) NSString *merchantIdentifier;
@property (nonatomic, retain) PKPaymentMerchantSession *merchantSession;
@property (nonatomic, retain) NSURL *originatingURL;
@property (nonatomic, copy) NSString *passSerialNumber;
@property (nonatomic, copy) NSString *passTypeIdentifier;
@property (nonatomic, copy) NSArray *paymentContentItems;
@property (nonatomic, copy) NSDate *paymentDate;
@property (nonatomic) long long paymentFrequency;
@property (nonatomic, copy) NSArray *paymentSummaryItems;
@property (nonatomic, copy) NSTimeZone *paymentTimeZone;
@property (nonatomic) unsigned long long requestType;
@property (nonatomic) unsigned long long requestor;
@property (nonatomic) unsigned long long requiredBillingAddressFields;
@property (nonatomic, retain) NSSet *requiredBillingContactFields;
@property (nonatomic) unsigned long long requiredShippingAddressFields;
@property (nonatomic, retain) NSSet *requiredShippingContactFields;
@property (nonatomic) bool requiresAddressPrecision;
@property (nonatomic) const void*shippingAddress;
@property (nonatomic, retain) PKContact *shippingContact;
@property (getter=isShippingEditable, nonatomic) bool shippingEditable;
@property (nonatomic, copy) NSString *shippingEditableMessage;
@property (nonatomic, copy) NSArray *shippingMethods;
@property (nonatomic) unsigned long long shippingType;
@property (nonatomic, retain) NSString *sourceApplicationBundleIdentifier;
@property (nonatomic, retain) NSString *sourceApplicationSecondaryIdentifier;
@property (nonatomic, copy) NSSet *supportedCountries;
@property (nonatomic, copy) NSArray *supportedNetworks;
@property (nonatomic) bool supportsInstantFundsIn;
@property (nonatomic) bool suppressTotal;
@property (nonatomic, retain) NSArray *thumbnailURLs;

+ (id)availableNetworks;
+ (id)errorFromDictionary:(id)arg1;
+ (id)paymentBillingAddressInvalidErrorWithKey:(id)arg1 localizedDescription:(id)arg2;
+ (id)paymentContactInvalidErrorWithContactField:(id)arg1 localizedDescription:(id)arg2;
+ (id)paymentShippingAddressInvalidErrorWithKey:(id)arg1 localizedDescription:(id)arg2;
+ (id)paymentShippingAddressUnserviceableErrorWithLocalizedDescription:(id)arg1;
+ (id)requestWithProtobuf:(id)arg1;
+ (bool)supportsSecureCoding;
+ (long long)version;

- (void).cxx_destruct;
- (unsigned long long)APIType;
- (id)CTDataConnectionServiceType;
- (id)_addressFieldsToContactFields:(unsigned long long)arg1;
- (unsigned long long)_contactFieldsToAddressFields:(id)arg1;
- (id)_transactionAmount;
- (struct __SecAccessControl { }*)accesssControlRef;
- (bool)accountPaymentSupportsPeerPayment;
- (bool)accountPaymentUsePeerPaymentBalance;
- (id)appleIDAuthenticationContext;
- (id)applePayTrustSignatureRequest;
- (id)applicationData;
- (id)bankAccounts;
- (const void*)billingAddress;
- (id)billingContact;
- (double)clientCallbackTimeout;
- (unsigned long long)confirmationStyle;
- (id)countryCode;
- (id)currencyCode;
- (bool)deviceSupportsPeerPaymentAccountPayment;
- (id)disbursementPaymentRequest;
- (void)encodeWithCoder:(id)arg1;
- (bool)expectsMerchantSession;
- (id)externalizedContext;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1 error:(id*)arg2;
- (bool)isDisbursementPaymentRequest;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToPaymentRequest:(id)arg1;
- (bool)isPeerPaymentRequest;
- (bool)isServiceProviderPaymentRequest;
- (bool)isShippingEditable;
- (id)localizedBiometricConfirmationTitle;
- (id)localizedConfirmationTitle;
- (id)localizedNavigationTitle;
- (id)localizedPasswordButtonTitle;
- (id)localizedSummaryItemsTitle;
- (unsigned long long)merchantCapabilities;
- (id)merchantIdentifier;
- (id)merchantSession;
- (id)originatingURL;
- (id)passSerialNumber;
- (id)passTypeIdentifier;
- (id)paymentContentItems;
- (id)paymentDate;
- (long long)paymentFrequency;
- (id)paymentSummaryItems;
- (id)paymentTimeZone;
- (id)peerPaymentRequest;
- (id)protobuf;
- (unsigned long long)requestType;
- (unsigned long long)requestor;
- (unsigned long long)requiredBillingAddressFields;
- (id)requiredBillingContactFields;
- (unsigned long long)requiredShippingAddressFields;
- (id)requiredShippingContactFields;
- (bool)requiresAddressPrecision;
- (id)serviceProviderPaymentRequest;
- (void)setAPIType:(unsigned long long)arg1;
- (void)setAccesssControlRef:(struct __SecAccessControl { }*)arg1;
- (void)setAccountPaymentSupportsPeerPayment:(bool)arg1;
- (void)setAccountPaymentUsePeerPaymentBalance:(bool)arg1;
- (void)setAppleIDAuthenticationContext:(id)arg1;
- (void)setApplePayTrustSignatureRequest:(id)arg1;
- (void)setApplicationData:(id)arg1;
- (void)setBankAccounts:(id)arg1;
- (void)setBillingAddress:(void*)arg1;
- (void)setBillingContact:(id)arg1;
- (void)setCTDataConnectionServiceType:(id)arg1;
- (void)setClientCallbackTimeout:(double)arg1;
- (void)setConfirmationStyle:(unsigned long long)arg1;
- (void)setCountryCode:(id)arg1;
- (void)setCurrencyCode:(id)arg1;
- (void)setDeviceSupportsPeerPaymentAccountPayment:(bool)arg1;
- (void)setExpectsMerchantSession:(bool)arg1;
- (void)setExternalizedContext:(id)arg1;
- (void)setLocalizedBiometricConfirmationTitle:(id)arg1;
- (void)setLocalizedConfirmationTitle:(id)arg1;
- (void)setLocalizedNavigationTitle:(id)arg1;
- (void)setLocalizedPasswordButtonTitle:(id)arg1;
- (void)setLocalizedSummaryItemsTitle:(id)arg1;
- (void)setMerchantCapabilities:(unsigned long long)arg1;
- (void)setMerchantIdentifier:(id)arg1;
- (void)setMerchantSession:(id)arg1;
- (void)setOriginatingURL:(id)arg1;
- (void)setPassSerialNumber:(id)arg1;
- (void)setPassTypeIdentifier:(id)arg1;
- (void)setPaymentContentItems:(id)arg1;
- (void)setPaymentDate:(id)arg1;
- (void)setPaymentFrequency:(long long)arg1;
- (void)setPaymentSummaryItems:(id)arg1;
- (void)setPaymentTimeZone:(id)arg1;
- (void)setRequestType:(unsigned long long)arg1;
- (void)setRequestor:(unsigned long long)arg1;
- (void)setRequiredBillingAddressFields:(unsigned long long)arg1;
- (void)setRequiredBillingContactFields:(id)arg1;
- (void)setRequiredShippingAddressFields:(unsigned long long)arg1;
- (void)setRequiredShippingContactFields:(id)arg1;
- (void)setRequiresAddressPrecision:(bool)arg1;
- (void)setShippingAddress:(void*)arg1;
- (void)setShippingContact:(id)arg1;
- (void)setShippingEditable:(bool)arg1;
- (void)setShippingEditableMessage:(id)arg1;
- (void)setShippingMethods:(id)arg1;
- (void)setShippingType:(unsigned long long)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setSupportedCountries:(id)arg1;
- (void)setSupportedNetworks:(id)arg1;
- (void)setSupportsInstantFundsIn:(bool)arg1;
- (void)setSuppressTotal:(bool)arg1;
- (void)setThumbnailURLs:(id)arg1;
- (const void*)shippingAddress;
- (id)shippingContact;
- (id)shippingEditableMessage;
- (id)shippingMethods;
- (unsigned long long)shippingType;
- (id)sourceApplicationBundleIdentifier;
- (id)sourceApplicationSecondaryIdentifier;
- (id)supportedCountries;
- (id)supportedNetworks;
- (bool)supportsInstantFundsIn;
- (bool)suppressTotal;
- (id)thumbnailURLs;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

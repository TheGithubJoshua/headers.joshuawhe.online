<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PDApplePayCloudStoreContainer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PDApplePayCloudStoreContainer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PDApplePayCloudStoreContainer : PDCloudStoreContainer <PDAccountManagerObserver> {
    PDAccountManager * _accountManager;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _fetchLock;
    NSMutableSet * _fetchingTransactionsForUniqueIDs;
    PDPaymentWebServiceCoordinator * _paymentWebServiceCoordinator;
    PKPeerPaymentAccount * _peerPaymentAccount;
    bool  _proactiveFetchInProgress;
    PKPaymentTransactionProcessor * _transactionProcessor;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (void)invalidateServerChangeTokens;

- (void).cxx_destruct;
- (id)_accountEventRecordsFromArray:(id)arg1;
- (bool)_canFormTransactionFromCloudStoreRecord:(id)arg1;
- (bool)_canSyncTransactionToCloudKit:(id)arg1;
- (id)_cloudStoreSpecificKeysForItem:(id)arg1 paymentPass:(id)arg2;
- (void)_fetchAndParseAccountEventRecordsForRecords:(id)arg1 operationGroupName:(id)arg2 operationGroupNameSuffix:(id)arg3 shouldUpdateLocalDatabase:(bool)arg4 userInfo:(id)arg5 updateReasons:(unsigned long long)arg6 completion:(id /* block */)arg7;
- (void)_fetchMissingRecordsFromModifiedRecords:(id)arg1 operationGroupName:(id)arg2 operationGroupNameSuffix:(id)arg3 userInfo:(id)arg4 completion:(id /* block */)arg5;
- (void)_fetchTransactionsFailedForPassUniqueIdentifier:(id)arg1;
- (void)_handlePeerPaymentAccountChanged:(id)arg1;
- (id)_insertOrUpdatePaymentTransaction:(id)arg1 withOriginDeviceID:(id)arg2 forPassUniqueIdentifier:(id)arg3 paymentApplication:(id)arg4 withInsertionMode:(unsigned long long)arg5 performTruncation:(bool)arg6;
- (bool)_isAccountEventAssociatedObjectFromRecordType:(id)arg1;
- (bool)_isAccountEventFromRecordType:(id)arg1;
- (bool)_isTransactionItemFromRecordType:(id)arg1;
- (id)_originDeviceIDForCloudStoreRecord:(id)arg1;
- (void)_parseAccountEventsFromRecords:(id)arg1 shouldUpdateLocalDatabase:(bool)arg2 updateReasons:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (id)_parseTransactionRecords:(id)arg1 counterpartRecords:(id)arg2 shouldUpdateLocalDatabase:(bool)arg3 userInfo:(id)arg4 updateReasons:(unsigned long long)arg5;
- (id)_passUniqueIdentifierForCloudStoreRecord:(id)arg1;
- (id)_paymentApplicationForPassUniqueIdentifier:(id)arg1;
- (id)_recordTypeForAssociatedRecordForAccountEvent:(id)arg1;
- (id)_recordTypesForAccountEvents;
- (id)_recordsFromAccountEvent:(id)arg1;
- (void)_resetFetchTransactionsForPassUniqueIdentifier:(id)arg1;
- (void)_saveTransactionFetchRetries:(id)arg1;
- (id)_serviceIdentfierToRecordDictionaryFromArray:(id)arg1;
- (id)_serviceIdentifierForRecord:(id)arg1;
- (id)_serviceIdentifierForRecordType:(id)arg1 recordID:(id)arg2;
- (bool)_shouldFetchTransactionsForPassUniqueIdentifier:(id)arg1;
- (id)_strippedRecordName:(id)arg1;
- (id)_transactionFetchRetries;
- (void)accountManager:(id)arg1 didAddAccount:(id)arg2;
- (void)accountManager:(id)arg1 didRemoveAccount:(id)arg2;
- (void)allItemsOfItemType:(unsigned long long)arg1 storeLocally:(bool)arg2 completion:(id /* block */)arg3;
- (void)allItemsOfItemType:(unsigned long long)arg1 storeLocally:(bool)arg2 userInfo:(id)arg3 completion:(id /* block */)arg4;
- (id)allRecordNamesAssociatedWithRecordName:(id)arg1 inZone:(id)arg2;
- (bool)canInitializeContainer;
- (bool)canSyncTransactionFromCloudKitForPassUniqueIdentifier:(id)arg1;
- (bool)canSyncTransactionToCloudKitWithBackingData:(bool)arg1 passUniqueIdentifier:(id)arg2 serviceIdentifier:(id)arg3;
- (void)cloudStoreAccountChanged:(id)arg1;
- (id)cloudStoreSpecificKeysForItem:(id)arg1;
- (void)createZones:(id)arg1 operationGroupNameSuffix:(id)arg2 completion:(id /* block */)arg3;
- (void)createZones:(id)arg1 operationGroupNameSuffix:(id)arg2 userInfo:(id)arg3 completion:(id /* block */)arg4;
- (void)fetchAndStoreRecordsForPaymentPassWithUniqueIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)generateRandomTransactionForPassWithUniqueIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)initWithDataSource:(id)arg1 transactionProcessor:(id)arg2 paymentWebServiceCoordinator:(id)arg3 accountManager:(id)arg4;
- (void)invalidateCloudStoreIfPossibleWithOperationGroupNameSuffix:(id)arg1;
- (void)passWithUniqueIdentifierDidDisappear:(id)arg1;
- (void)populateEvents:(id)arg1 forAccountIdentifier:(id)arg2 completion:(id /* block */)arg3;
- (void)processFetchedCloudStoreDataWithModifiedRecords:(id)arg1 deletedRecords:(id)arg2 operationGroupName:(id)arg3 operationGroupNameSuffix:(id)arg4 shouldUpdateLocalDatabase:(bool)arg5 userInfo:(id)arg6 completion:(id /* block */)arg7;
- (void)processResultWithError:(id)arg1 nextExpectedState:(unsigned long long)arg2 operationGroupNameSuffix:(id)arg3 retryCount:(unsigned long long)arg4 shouldRetry:(bool)arg5 completion:(id /* block */)arg6;
- (void)readCachedContainerValues;
- (id)recordTypeForRecordID:(id)arg1;
- (void)requestUpdatesForPassUniqueIdentifier:(id)arg1;
- (void)saveCachedContainerValues;
- (void)setContainerState:(unsigned long long)arg1 operationGroupNameSuffix:(id)arg2 retryCount:(unsigned long long)arg3 completion:(id /* block */)arg4;
- (void)uploadTransaction:(id)arg1 forPassWithUniqueIdentifier:(id)arg2 completion:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

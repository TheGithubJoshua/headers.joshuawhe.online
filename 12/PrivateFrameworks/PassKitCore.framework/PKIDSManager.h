<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKIDSManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PKIDSManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PKIDSManager : NSObject <IDSServiceDelegate> {
    NSObject<OS_dispatch_queue> * _callbackQueue;
    NSMutableDictionary * _completionHandlers;
    <PKIDSManagerDataSource> * _dataSource;
    NSHashTable * _delegates;
    NSLock * _delegatesLock;
    NSObject<OS_dispatch_queue> * _internalQueue;
    NSMutableArray * _paymentRequests;
    NSMutableArray * _pendingCancellations;
    NSMutableDictionary * _pendingDiscoveries;
    PKProximityAdvertiser * _proximityAdvertiser;
    NSMutableDictionary * _recentlySeenUUIDs;
    NSMutableArray * _remoteDevices;
    int  _requestCLTMThrottleUncapToken;
    IDSService * _service;
    NSMutableDictionary * _thumbnailCompletionHandlers;
}

@property (nonatomic) <PKIDSManagerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSArray *delegates;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *internalQueue;
@property (nonatomic, readonly) NSArray *paymentRequests;
@property (nonatomic, retain) NSMutableArray *pendingCancellations;
@property (nonatomic, retain) NSMutableDictionary *pendingDiscoveries;
@property (nonatomic, retain) NSMutableDictionary *recentlySeenUUIDs;
@property (nonatomic, readonly) NSArray *remoteDevices;
@property (nonatomic, retain) IDSService *service;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_archiveDevicesToDisk;
- (id)_fetchPaymentInstrumentsForRequestingDevice:(id)arg1;
- (void)_paymentCancellationReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_paymentClientUpdateReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_paymentDiscoveryRequestReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_paymentDiscoveryResponseReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_paymentHostUpdateReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_paymentRequestReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_paymentResponseReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_paymentResultReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_paymentSetupRequestReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_populateDevicesIfNeeded;
- (void)_postCTLMThrottleUncapNotification;
- (id)_preparePaymentDeviceResponseForRequestingDevice:(id)arg1;
- (void)_queue_addThumbnailCompletionHandler:(id /* block */)arg1 forKey:(id)arg2;
- (id)_queue_cancelRemotePaymentRequest:(id)arg1 completion:(id /* block */)arg2;
- (bool)_queue_deviceIsRegistered:(id)arg1;
- (bool)_queue_hasRegisteredAccounts;
- (bool)_queue_hasRemoteDevices;
- (void)_queue_logCloudPairingState;
- (void)_queue_removeThumbnailCompletionHandlersForKeys:(id)arg1;
- (id)_queue_requestForIdentifier:(id)arg1;
- (void)_queue_sendDeviceDiscoveryRequestToAllDevicesWithProximity:(bool)arg1;
- (void)_queue_sendDeviceDiscoveryRequestWithProximity:(bool)arg1 devices:(id)arg2;
- (void)_queue_sendDiscoveryResponse:(id)arg1 toDeviceWithFromID:(id)arg2;
- (void)_registerCTLMThrottleUncapNotification;
- (void)_registerListeners;
- (id)_remoteDevicesWithArchive;
- (void)_thumbnailRequestReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_thumbnailResponseReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)_unregisterCTLMThrottleUncapNotification;
- (void)addDelegate:(id)arg1;
- (id)cancelRemotePaymentRequest:(id)arg1 completion:(id /* block */)arg2;
- (id)dataSource;
- (void)dealloc;
- (id)delegates;
- (void)deleteArchivedDevices;
- (void)discoverRemoteDevices;
- (void)discoverRemoteDevicesWithProximity:(bool)arg1;
- (bool)hasRemoteDevices;
- (id)init;
- (id)initWithIDSService:(id)arg1;
- (id)initWithTargetQueue:(id)arg1;
- (id)internalQueue;
- (void)invalidateMessage:(id)arg1;
- (id)paymentRequests;
- (id)pendingCancellations;
- (id)pendingDiscoveries;
- (id)recentlySeenUUIDs;
- (id)remoteDevices;
- (void)removeDelegate:(id)arg1;
- (id)requestForIdentifier:(id)arg1;
- (id)requestInstrumentThumbnail:(id)arg1 forRemoteDevice:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 completion:(id /* block */)arg4;
- (id)sendPayment:(id)arg1 forRemotePaymentRequest:(id)arg2 completion:(id /* block */)arg3;
- (id)sendPaymentClientUpdate:(id)arg1 forRemotePaymentRequest:(id)arg2 completion:(id /* block */)arg3;
- (id)sendPaymentHostUpdate:(id)arg1 forRemotePaymentRequest:(id)arg2 completion:(id /* block */)arg3;
- (id)sendPaymentResult:(id)arg1 forRemotePaymentRequest:(id)arg2 completion:(id /* block */)arg3;
- (id)sendPaymentStatus:(long long)arg1 forRemotePaymentRequest:(id)arg2 completion:(id /* block */)arg3;
- (id)sendRemotePaymentRequest:(id)arg1 completion:(id /* block */)arg2;
- (id)sendSetupRequest:(id)arg1 appDisplayName:(id)arg2 completion:(id /* block */)arg3;
- (id)service;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(bool)arg4 error:(id)arg5;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4;
- (void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)service:(id)arg1 activeAccountsChanged:(id)arg2;
- (void)service:(id)arg1 devicesChanged:(id)arg2;
- (void)setDataSource:(id)arg1;
- (void)setInternalQueue:(id)arg1;
- (void)setPendingCancellations:(id)arg1;
- (void)setPendingDiscoveries:(id)arg1;
- (void)setRecentlySeenUUIDs:(id)arg1;
- (void)setService:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKPaymentAuthorizationStateMachine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PKPaymentAuthorizationStateMachine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PKPaymentAuthorizationStateMachine : NSObject <CBCentralManagerDelegate, PKContinuityPaymentCoordinatorDelegate> {
    <PKAggregateDictionaryProtocol> * _aggregateDictionary;
    bool  _awaitingClientCallbackReply;
    bool  _awaitingWebServiceResponse;
    CBCentralManager * _bluetoothCentralManager;
    NSMutableArray * _callbackQueue;
    NSObject<OS_dispatch_source> * _clientCallbackTimer;
    PKContinuityPaymentCoordinator * _continuityPaymentCoordinator;
    PKContinuityPaymentService * _continuityPaymentService;
    NSObject<OS_dispatch_group> * _delayAuthorizedStateGroup;
    <PKPaymentAuthorizationStateMachineDelegate> * _delegate;
    bool  _detectedBluetoothOn;
    bool  _hasReceivedRemoteDeviceUpdate;
    unsigned long long  _hostApplicationState;
    PKInAppPaymentSession * _inAppPaymentSession;
    NSString * _instanceIdentifier;
    PKPaymentAuthorizationDataModel * _model;
    PKPaymentAuthorizationClientCallbackStateParam * _mostRecentClientCallback;
    PKPaymentService * _paymentService;
    PKPaymentWebService * _paymentWebService;
    PKPeerPaymentSession * _peerPaymentSession;
    unsigned long long  _prepareTransactionDetailsCounter;
    unsigned long long  _state;
    double  _updatePaymentDeviceTimeout;
}

@property (nonatomic, retain) <PKAggregateDictionaryProtocol> *aggregateDictionary;
@property (nonatomic) bool awaitingClientCallbackReply;
@property (nonatomic) bool awaitingWebServiceResponse;
@property (nonatomic, retain) CBCentralManager *bluetoothCentralManager;
@property (nonatomic, retain) NSMutableArray *callbackQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *clientCallbackTimer;
@property (nonatomic, retain) PKContinuityPaymentCoordinator *continuityPaymentCoordinator;
@property (nonatomic, retain) PKContinuityPaymentService *continuityPaymentService;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSObject<OS_dispatch_group> *delayAuthorizedStateGroup;
@property (nonatomic) <PKPaymentAuthorizationStateMachineDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool detectedBluetoothOn;
@property (nonatomic) bool hasReceivedRemoteDeviceUpdate;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long hostApplicationState;
@property (nonatomic, retain) PKInAppPaymentSession *inAppPaymentSession;
@property (nonatomic, retain) NSString *instanceIdentifier;
@property (nonatomic, retain) PKPaymentAuthorizationDataModel *model;
@property (nonatomic, retain) PKPaymentAuthorizationClientCallbackStateParam *mostRecentClientCallback;
@property (nonatomic, retain) PKPaymentService *paymentService;
@property (nonatomic, retain) PKPaymentWebService *paymentWebService;
@property (nonatomic, retain) PKPeerPaymentSession *peerPaymentSession;
@property (nonatomic) unsigned long long prepareTransactionDetailsCounter;
@property (setter=_setState:, nonatomic) unsigned long long state;
@property (readonly) Class superclass;
@property (nonatomic) double updatePaymentDeviceTimeout;
@property (nonatomic, readonly) bool useSecureElement;

- (void).cxx_destruct;
- (void)__setState:(unsigned long long)arg1 param:(id)arg2;
- (void)_advanceToNextState;
- (void)_applyBillingInformationToAuthorizedQuote:(id)arg1;
- (void)_applyBillingInformationToPayment:(id)arg1;
- (void)_applyShippingInformationToPayment:(id)arg1;
- (void)_applyShippingMethodToPayment:(id)arg1;
- (void)_applyWebServiceConfigurationIfNeeded;
- (id)_billingInformationFromPaymentRequest:(id)arg1;
- (void)_cancelClientCallbackTimer;
- (void)_clientCallbackTimedOut;
- (id)_createNewRemotePaymentRequest;
- (id)_dequeuePendingCallbackParam;
- (void)_deviceUpdateDidTimeout;
- (void)_dispatchNextCallbackParam;
- (void)_enqeueDidAuthorizePurchaseWithParam:(id)arg1;
- (void)_enqueueCallbackOfKind:(long long)arg1 withObject:(id)arg2;
- (void)_enqueueDidAuthorizeAccountServicePaymentRequestWithApplePayTrustSignature:(id)arg1;
- (void)_enqueueDidAuthorizeDisbursementWithVoucher:(id)arg1;
- (void)_enqueueDidAuthorizePaymentWithByPassPayment:(id)arg1;
- (void)_enqueueDidAuthorizePaymentWithPayment:(id)arg1;
- (void)_enqueueDidAuthorizePaymentWithRemotePayment:(id)arg1;
- (void)_enqueueDidAuthorizePaymentWithToken:(id)arg1;
- (void)_enqueueDidAuthorizePeerPaymentQuoteWithAuthorizedQuote:(id)arg1;
- (void)_enqueueDidRequestMerchantSession;
- (void)_enqueueDidSelectPaymentMethodWithQuote:(id)arg1;
- (void)_enqueueDidSelectPaymentPass:(id)arg1;
- (void)_enqueueDidSelectPaymentPass:(id)arg1 paymentApplication:(id)arg2;
- (void)_enqueueDidSelectRemotePaymentInstrument:(id)arg1;
- (void)_enqueueDidSelectRemotePaymentInstrument:(id)arg1 paymentApplication:(id)arg2;
- (void)_enqueueDidSelectShippingContact:(id)arg1;
- (void)_enqueueDidUpdateAccountServicePaymentMethod:(id)arg1;
- (void)_enqueueInitialCallbacks;
- (void)_handleStateMachineWillStartNotification:(id)arg1;
- (id)_pendingTransactionOnAlternateFundingSourceForAutorizedPeerPaymentQuote:(id)arg1;
- (id)_pendingTransactionOnPeerPaymentPassForAuthorizedPeerPaymentQuote:(id)arg1;
- (void)_performAuthorizationWithParam:(id)arg1;
- (void)_performCancelRemotePaymentRequest;
- (void)_performDidAuthorizeCallbackWithParam:(id)arg1;
- (void)_performNonceRequestWithParam:(id)arg1;
- (void)_performPrepareTransactionDetailsRequestWithParam:(id)arg1;
- (void)_performRewrapRequestWithParam:(id)arg1;
- (void)_performSendClientUpdateWithShippingMethods:(id)arg1 paymentSummaryItems:(id)arg2 paymentApplication:(id)arg3 status:(long long)arg4;
- (void)_performSendPaymentResult:(id)arg1;
- (void)_performSendRemotePaymentRequest;
- (void)_performUpdatePaymentDevices;
- (void)_postStateMachineWillStartNotification;
- (void)_processBluetoothState:(long long)arg1;
- (void)_processErrorsForDataType:(long long)arg1;
- (void)_registerForNotifications;
- (void)_removeWebServiceConfigurationIfNeeded;
- (void)_sendDidTransitionFromState:(unsigned long long)arg1 toState:(unsigned long long)arg2 withParam:(id)arg3;
- (void)_setState:(unsigned long long)arg1;
- (void)_setState:(unsigned long long)arg1 param:(id)arg2;
- (void)_simulatePayment;
- (void)_start;
- (void)_startClientCallbackTimer;
- (void)_startHandoff;
- (void)_startPayment;
- (void)_startRemoteDeviceUpdate;
- (id)_transactionWithPaymentToken:(id)arg1;
- (id)_transactionWithPurchase:(id)arg1 paymentHash:(id)arg2;
- (void)_unregisterForNotifications;
- (void)_updateModelWithShippingMethods:(id)arg1 paymentSummaryItems:(id)arg2;
- (id)aggregateDictionary;
- (bool)awaitingClientCallbackReply;
- (bool)awaitingWebServiceResponse;
- (void)beginDelayingAuthorizedState;
- (id)bluetoothCentralManager;
- (id)callbackQueue;
- (bool)canSelectPaymentOptions;
- (void)centralManagerDidUpdateState:(id)arg1;
- (id)clientCallbackTimer;
- (id)continuityPaymentCoordinator;
- (void)continuityPaymentCoordinator:(id)arg1 didReceivePayment:(id)arg2;
- (void)continuityPaymentCoordinator:(id)arg1 didReceiveUpdatedPaymentDevices:(id)arg2;
- (void)continuityPaymentCoordinator:(id)arg1 didTimeoutTotalWithPaymentDevices:(id)arg2;
- (void)continuityPaymentCoordinatorDidReceiveCancellation:(id)arg1;
- (void)continuityPaymentCoordinatorDidTimeoutUpdatePaymentDevices:(id)arg1;
- (id)continuityPaymentService;
- (void)dealloc;
- (void)delayAuthorizedStateByDuration:(double)arg1;
- (id)delayAuthorizedStateGroup;
- (id)delegate;
- (id)description;
- (bool)detectedBluetoothOn;
- (void)didAuthenticateWithAuthenticatorEvaluationResponse:(id)arg1;
- (void)didAuthenticateWithCredential:(id)arg1;
- (void)didBecomeActive:(bool)arg1;
- (void)didBecomeOccluded:(bool)arg1;
- (void)didCancel;
- (void)didEncounterError:(id)arg1;
- (void)didEncounterFatalError:(id)arg1;
- (void)didReceiveMerchantSessionCompleteWithSession:(id)arg1 error:(id)arg2;
- (void)didReceivePaymentAuthorizationResult:(id)arg1;
- (void)didReceivePaymentAuthorizationStatus:(long long)arg1;
- (void)didReceivePaymentMethodCompleteWithSummaryItems:(id)arg1;
- (void)didReceivePaymentMethodCompleteWithUpdate:(id)arg1;
- (void)didReceiveShippingContactCompleteWithStatus:(long long)arg1 shippingMethods:(id)arg2 paymentSummaryItems:(id)arg3;
- (void)didReceiveShippingContactCompleteWithUpdate:(id)arg1;
- (void)didReceiveShippingMethodCompleteWithStatus:(long long)arg1 paymentSummaryItems:(id)arg2;
- (void)didReceiveShippingMethodCompleteWithUpdate:(id)arg1;
- (void)didReceiveUpdateAccountServicePaymentMethodCompleteWithUpdate:(id)arg1 signatureRequest:(id)arg2;
- (void)didRequestMerchantSession;
- (void)didResignActive:(bool)arg1;
- (void)didResolveError;
- (void)didSelectBankAccount:(id)arg1;
- (void)didSelectBillingAddress:(id)arg1;
- (void)didSelectPaymentPass:(id)arg1;
- (void)didSelectPaymentPass:(id)arg1 paymentApplication:(id)arg2;
- (void)didSelectRemotePaymentInstrument:(id)arg1;
- (void)didSelectRemotePaymentInstrument:(id)arg1 paymentApplication:(id)arg2;
- (void)didSelectShippingContact:(id)arg1;
- (void)didSelectShippingEmail:(id)arg1;
- (void)didSelectShippingMethod:(id)arg1;
- (void)didSelectShippingName:(id)arg1;
- (void)didSelectShippingPhoneNumber:(id)arg1;
- (void)didUpdatePeerPaymentBalance:(id)arg1;
- (void)endDelayingAuthorizedState;
- (bool)hasPendingCallbacks;
- (bool)hasReceivedRemoteDeviceUpdate;
- (unsigned long long)hostApplicationState;
- (id)inAppPaymentSession;
- (id)init;
- (id)instanceIdentifier;
- (id)model;
- (id)mostRecentClientCallback;
- (id)paymentService;
- (id)paymentWebService;
- (id)peerPaymentSession;
- (unsigned long long)prepareTransactionDetailsCounter;
- (void)setAggregateDictionary:(id)arg1;
- (void)setAwaitingClientCallbackReply:(bool)arg1;
- (void)setAwaitingWebServiceResponse:(bool)arg1;
- (void)setBluetoothCentralManager:(id)arg1;
- (void)setCallbackQueue:(id)arg1;
- (void)setClientCallbackTimer:(id)arg1;
- (void)setContinuityPaymentCoordinator:(id)arg1;
- (void)setContinuityPaymentService:(id)arg1;
- (void)setDelayAuthorizedStateGroup:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetectedBluetoothOn:(bool)arg1;
- (void)setHasReceivedRemoteDeviceUpdate:(bool)arg1;
- (void)setHostApplicationState:(unsigned long long)arg1;
- (void)setInAppPaymentSession:(id)arg1;
- (void)setInstanceIdentifier:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setMostRecentClientCallback:(id)arg1;
- (void)setPaymentService:(id)arg1;
- (void)setPaymentWebService:(id)arg1;
- (void)setPeerPaymentSession:(id)arg1;
- (void)setPrepareTransactionDetailsCounter:(unsigned long long)arg1;
- (void)setUpdatePaymentDeviceTimeout:(double)arg1;
- (void)start;
- (unsigned long long)state;
- (double)updatePaymentDeviceTimeout;
- (bool)useSecureElement;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

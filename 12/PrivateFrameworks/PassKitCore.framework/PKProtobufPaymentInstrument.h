<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKProtobufPaymentInstrument.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PKProtobufPaymentInstrument.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PKProtobufPaymentInstrument : PBCodable <NSCopying> {
    NSMutableArray * _associatedWebDomains;
    NSString * _displayName;
    struct { 
        unsigned int ingestedDate : 1; 
        unsigned int peerPaymentAccountBalance : 1; 
        unsigned int peerPaymentAccountState : 1; 
        unsigned int hasAssociatedPeerPaymentAccount : 1; 
        unsigned int supportsAutomaticSelection : 1; 
    }  _has;
    bool  _hasAssociatedPeerPaymentAccount;
    double  _ingestedDate;
    NSString * _issuerCountryCode;
    NSData * _manifestHash;
    NSString * _organizationName;
    NSString * _passID;
    NSMutableArray * _paymentApplications;
    long long  _peerPaymentAccountBalance;
    NSString * _peerPaymentAccountCurrency;
    unsigned int  _peerPaymentAccountState;
    NSString * _primaryAccountIdentifier;
    NSString * _primaryAccountNumberSuffix;
    bool  _supportsAutomaticSelection;
}

@property (nonatomic, retain) NSMutableArray *associatedWebDomains;
@property (nonatomic, retain) NSString *displayName;
@property (nonatomic) bool hasAssociatedPeerPaymentAccount;
@property (nonatomic, readonly) bool hasDisplayName;
@property (nonatomic) bool hasHasAssociatedPeerPaymentAccount;
@property (nonatomic) bool hasIngestedDate;
@property (nonatomic, readonly) bool hasIssuerCountryCode;
@property (nonatomic, readonly) bool hasManifestHash;
@property (nonatomic, readonly) bool hasOrganizationName;
@property (nonatomic, readonly) bool hasPassID;
@property (nonatomic) bool hasPeerPaymentAccountBalance;
@property (nonatomic, readonly) bool hasPeerPaymentAccountCurrency;
@property (nonatomic) bool hasPeerPaymentAccountState;
@property (nonatomic, readonly) bool hasPrimaryAccountIdentifier;
@property (nonatomic, readonly) bool hasPrimaryAccountNumberSuffix;
@property (nonatomic) bool hasSupportsAutomaticSelection;
@property (nonatomic) double ingestedDate;
@property (nonatomic, retain) NSString *issuerCountryCode;
@property (nonatomic, retain) NSData *manifestHash;
@property (nonatomic, retain) NSString *organizationName;
@property (nonatomic, retain) NSString *passID;
@property (nonatomic, retain) NSMutableArray *paymentApplications;
@property (nonatomic) long long peerPaymentAccountBalance;
@property (nonatomic, retain) NSString *peerPaymentAccountCurrency;
@property (nonatomic) unsigned int peerPaymentAccountState;
@property (nonatomic, retain) NSString *primaryAccountIdentifier;
@property (nonatomic, retain) NSString *primaryAccountNumberSuffix;
@property (nonatomic) bool supportsAutomaticSelection;

+ (Class)associatedWebDomainsType;
+ (Class)paymentApplicationsType;

- (void).cxx_destruct;
- (void)addAssociatedWebDomains:(id)arg1;
- (void)addPaymentApplications:(id)arg1;
- (id)associatedWebDomains;
- (id)associatedWebDomainsAtIndex:(unsigned long long)arg1;
- (unsigned long long)associatedWebDomainsCount;
- (void)clearAssociatedWebDomains;
- (void)clearPaymentApplications;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)displayName;
- (bool)hasAssociatedPeerPaymentAccount;
- (bool)hasDisplayName;
- (bool)hasHasAssociatedPeerPaymentAccount;
- (bool)hasIngestedDate;
- (bool)hasIssuerCountryCode;
- (bool)hasManifestHash;
- (bool)hasOrganizationName;
- (bool)hasPassID;
- (bool)hasPeerPaymentAccountBalance;
- (bool)hasPeerPaymentAccountCurrency;
- (bool)hasPeerPaymentAccountState;
- (bool)hasPrimaryAccountIdentifier;
- (bool)hasPrimaryAccountNumberSuffix;
- (bool)hasSupportsAutomaticSelection;
- (unsigned long long)hash;
- (double)ingestedDate;
- (bool)isEqual:(id)arg1;
- (id)issuerCountryCode;
- (id)manifestHash;
- (void)mergeFrom:(id)arg1;
- (id)organizationName;
- (id)passID;
- (id)paymentApplications;
- (id)paymentApplicationsAtIndex:(unsigned long long)arg1;
- (unsigned long long)paymentApplicationsCount;
- (long long)peerPaymentAccountBalance;
- (id)peerPaymentAccountCurrency;
- (unsigned int)peerPaymentAccountState;
- (id)primaryAccountIdentifier;
- (id)primaryAccountNumberSuffix;
- (bool)readFrom:(id)arg1;
- (void)setAssociatedWebDomains:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setHasAssociatedPeerPaymentAccount:(bool)arg1;
- (void)setHasHasAssociatedPeerPaymentAccount:(bool)arg1;
- (void)setHasIngestedDate:(bool)arg1;
- (void)setHasPeerPaymentAccountBalance:(bool)arg1;
- (void)setHasPeerPaymentAccountState:(bool)arg1;
- (void)setHasSupportsAutomaticSelection:(bool)arg1;
- (void)setIngestedDate:(double)arg1;
- (void)setIssuerCountryCode:(id)arg1;
- (void)setManifestHash:(id)arg1;
- (void)setOrganizationName:(id)arg1;
- (void)setPassID:(id)arg1;
- (void)setPaymentApplications:(id)arg1;
- (void)setPeerPaymentAccountBalance:(long long)arg1;
- (void)setPeerPaymentAccountCurrency:(id)arg1;
- (void)setPeerPaymentAccountState:(unsigned int)arg1;
- (void)setPrimaryAccountIdentifier:(id)arg1;
- (void)setPrimaryAccountNumberSuffix:(id)arg1;
- (void)setSupportsAutomaticSelection:(bool)arg1;
- (bool)supportsAutomaticSelection;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

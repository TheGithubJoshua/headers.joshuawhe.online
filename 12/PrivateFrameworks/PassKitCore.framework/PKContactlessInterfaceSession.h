<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKContactlessInterfaceSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PKContactlessInterfaceSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PKContactlessInterfaceSession : PKPaymentSession <NFLoyaltyAndPaymentSessionDelegate> {
    NSArray * _activatedHostCards;
    PKPaymentApplication * _activatedPaymentApplication;
    PKPaymentPass * _activatedPaymentPass;
    NSArray * _activatedValueAddedServicePasses;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    unsigned char  _cardEmulationMode;
    <PKContactlessInterfaceSessionDelegate> * _delegate;
    unsigned long long  _expressActivity;
    bool  _felicaStateChanged;
    _Atomic bool  _fieldPresent;
    PKFieldProperties * _fieldProperties;
    PKFieldProperties * _fieldPropertiesToLookup;
    bool  _handlingExpress;
    _Atomic bool  _persistentCardEmulation;
    bool  _prioritySessionExists;
    unsigned long long  _state;
    unsigned long long  _transactionStartTime;
    NSArray * _valueAddedServiceTransactions;
}

@property (nonatomic, readonly) PKPaymentApplication *activatedPaymentApplication;
@property (nonatomic, readonly) PKPaymentPass *activatedPaymentPass;
@property (nonatomic, readonly) NSArray *activatedValueAddedServicePasses;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKContactlessInterfaceSessionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool fieldPresent;
@property (nonatomic, readonly) PKFieldProperties *fieldProperties;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool persistentCardEmulationQueued;
@property (nonatomic, readonly) unsigned long long state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) PKTransitAppletHistory *transitAppletState;

+ (id)transitAppletStateFromPaymentSession:(id)arg1 withPaymentApplication:(id)arg2;

- (void).cxx_destruct;
- (id)_appletForPaymentApplication:(id)arg1;
- (id)_appletWithIdentifier:(id)arg1;
- (void)_endFieldPropertiesLookup;
- (void)_endLookupAndNotifyForFieldProperties:(id)arg1;
- (id)_filteredLoyaltyPassesFromVASTransactions:(id)arg1 activatedPasses:(id)arg2;
- (void)_processEndEvent:(id)arg1 withPartialContext:(id)arg2 groupHeadIdentifier:(id)arg3 groupAppletIdentifiers:(id)arg4;
- (void)_sendPersistentCardEmulationForPaymentPass:(id)arg1 paymentApplication:(id)arg2;
- (void)_startLookupForFieldProperties:(id)arg1;
- (bool)activatePaymentApplication:(id)arg1 forPaymentPass:(id)arg2;
- (bool)activatePaymentApplication:(id)arg1 forPaymentPass:(id)arg2 markAsDefault:(bool)arg3;
- (bool)activateValueAddedServicePassWhitelist:(id)arg1 greylist:(id)arg2;
- (bool)activateValueAddedServicePasses:(id)arg1;
- (id)activatedPaymentApplication;
- (id)activatedPaymentPass;
- (id)activatedValueAddedServicePasses;
- (bool)authorizeAndStartCardEmulationWithCredential:(id)arg1;
- (bool)authorizeAndStartCardEmulationWithCredential:(id)arg1 deferAuthorization:(bool)arg2;
- (id)delegate;
- (bool)fieldPresent;
- (id)fieldProperties;
- (id)initWithInternalSession:(id)arg1 targetQueue:(id)arg2;
- (void)invalidateSessionWithCompletion:(id /* block */)arg1;
- (void)loyaltyAndPaymentSession:(id)arg1 didEndTransaction:(id)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didEnterFieldWithNotification:(id)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didExpireTransactionForApplet:(id)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didExpressModeStateChange:(unsigned int)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didFailDeferredAuthorization:(bool)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didFelicaStateChange:(id)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didPerformValueAddedServiceTransactions:(id)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didSelectApplet:(id)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didSelectValueAddedService:(bool)arg2;
- (void)loyaltyAndPaymentSession:(id)arg1 didStartTransaction:(id)arg2;
- (void)loyaltyAndPaymentSessionDidEndUnexpectedly:(id)arg1;
- (void)loyaltyAndPaymentSessionDidExitField:(id)arg1;
- (void)loyaltyAndPaymentSessionDidReceiveActivityTimeout:(id)arg1;
- (void)loyaltyAndPaymentSessionHasPendingServerRequest:(id)arg1;
- (bool)paymentApplicationSupportsAutomaticAuthorization:(id)arg1;
- (bool)persistentCardEmulationQueued;
- (bool)queuePersistentCardEmulation;
- (void)resetExpressState;
- (bool)resetPersistentCardEmulation;
- (void)setDelegate:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (unsigned long long)state;
- (bool)stopCardEmulation;
- (id)transitAppletState;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PDPeerPaymentWebServiceCoordinator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PDPeerPaymentWebServiceCoordinator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PDPeerPaymentWebServiceCoordinator : NSObject <PDCloudStoreNotificationCoordinatorObserver, PDPushNotificationConsumer, PDScheduledActivityClient> {
    PKPeerPaymentAccount * _account;
    PDPeerPaymentWebServiceArchiver * _archiver;
    PDAssertionManager * _assertionManager;
    PDCloudStoreNotificationCoordinator * _cloudStoreNotificationCoordinator;
    <PDPeerPaymentWebServiceCoordinatorDataSource> * _dataSource;
    bool  _isFetchingAccount;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lockObservers;
    PKPeerPaymentAccount * _mockAccount;
    NSHashTable * _observers;
    <PDWebServiceCoordinatorPassStore> * _passStore;
    PKPaymentWebService * _paymentWebService;
    NSMutableArray * _pendingAccountFetches;
    PDPushNotificationManager * _pushNotificationManager;
    NSMutableArray * _queuedPendingAccountFetches;
    NSObject<OS_dispatch_queue> * _replyQueue;
    PKPeerPaymentWebService * _sharedPeerPaymentWebService;
    NSObject<OS_dispatch_queue> * _sharedPeerPaymentWebServiceQueue;
    PDUserNotificationManager * _userNotificationManager;
}

@property (nonatomic, retain) PDCloudStoreNotificationCoordinator *cloudStoreNotificationCoordinator;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PKPaymentWebService *paymentWebService;
@property (nonatomic, readonly) PKPeerPaymentWebService *sharedPeerPaymentWebService;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_accessObserversWithHandler:(id /* block */)arg1;
- (void)_archiveSharedPeerPaymentWebServiceContext;
- (void)_completeUpdatingAccount;
- (void)_downloadAssociatedPeerPaymentPassWithCompletion:(id /* block */)arg1;
- (void)_handleUpdatedAccount:(id)arg1 withOldAccount:(id)arg2;
- (bool)_hasAssociatedPeerPaymentPass;
- (void)_initalizeCloudStore;
- (void)_initalizeCloudStoreIfNecessary;
- (void)_initalizeCloudStoreIfNecessaryWithCompletion:(id /* block */)arg1;
- (id)_mockAccountInitialState;
- (unsigned long long)_peerPaymentErrorStateForRegistrationResponse:(id)arg1 error:(id)arg2;
- (bool)_peerPaymentPassExists;
- (void)_performPeerPaymentPassDownloadActivity;
- (void)_performPeerPaymentReregisterActivityForReason:(id)arg1;
- (void)_registerWithPeerPaymentWebService:(id)arg1 registerURL:(id)arg2 pushToken:(id)arg3 completion:(id /* block */)arg4;
- (void)_schedulePeerPaymentCoordinatorActivities;
- (void)_schedulePeerPaymentReregisterActivityForReason:(id)arg1;
- (bool)_shouldAttemptBackgroundPeerPaymentPassDownload;
- (void)_updateAccountWithCompletion:(id /* block */)arg1;
- (void)_updateSharedCacheWithAccount:(id)arg1;
- (void)_updateSharedCacheWithWebService:(id)arg1;
- (void)accountWithCompletion:(id /* block */)arg1;
- (void)applyPushNotificationToken:(id)arg1;
- (void)checkTLKsMissingWithCompletion:(id /* block */)arg1;
- (id)cloudStoreNotificationCoordinator;
- (void)cloudStoreNotificationCoordinator:(id)arg1 createdZoneWithName:(id)arg2;
- (void)cloudStoreStatusWithCompletion:(id /* block */)arg1;
- (void)dealloc;
- (void)deleteAccountWithCompletion:(id /* block */)arg1;
- (void)deleteSharedWebServiceWithDiagnosticReason:(id)arg1;
- (void)downloadPassIfNecessaryWithCompletion:(id /* block */)arg1;
- (void)handleCompanionSerialNumberChanged;
- (void)handleMigratedAccount:(id)arg1;
- (void)handlePassLibraryChangedWithPassUniqueIdentifier:(id)arg1;
- (void)handlePushNotificationForTopic:(id)arg1 userInfo:(id)arg2;
- (void)identityVerificationResponseWithCompletion:(id /* block */)arg1;
- (id)initWithPushNotificationManager:(id)arg1 paymentWebService:(id)arg2 assertionManager:(id)arg3 dataSource:(id)arg4;
- (id)initWithPushNotificationManager:(id)arg1 paymentWebService:(id)arg2 assertionManager:(id)arg3 dataSource:(id)arg4 passStore:(id)arg5;
- (id)initWithPushNotificationManager:(id)arg1 paymentWebService:(id)arg2 assertionManager:(id)arg3 userNotificationManager:(id)arg4 dataSource:(id)arg5 passStore:(id)arg6;
- (void)initalizeCloudStoreIfNecessaryWithCompletion:(id /* block */)arg1;
- (void)initalizeCloudStoreIfNecessaryWithHandler:(id /* block */)arg1;
- (id)paymentWebService;
- (void)performScheduledActivityWithIdentifier:(id)arg1 activityCriteria:(id)arg2;
- (id)pushNotificationTopics;
- (void)receivedPeerPaymentMessage:(id)arg1;
- (void)registerDeviceWithCompletion:(id /* block */)arg1;
- (void)registerDeviceWithRegistrationURL:(id)arg1 pushToken:(id)arg2 completion:(id /* block */)arg3;
- (void)registerObserver:(id)arg1;
- (void)registrationStatusWithCompletion:(id /* block */)arg1;
- (void)resetApplePayManateeViewWithCompletion:(id /* block */)arg1;
- (void)setCloudStoreNotificationCoordinator:(id)arg1;
- (void)setPaymentWebService:(id)arg1;
- (id)sharedPeerPaymentWebService;
- (id)sharedWebService;
- (void)submitDeviceScoreIdentifiersForTransaction:(id)arg1 completion:(id /* block */)arg2;
- (void)unregisterDeviceWithCompletion:(id /* block */)arg1;
- (void)unregisterObserver:(id)arg1;
- (void)updateAccountWithCompletion:(id /* block */)arg1;
- (void)updateMockAccountBalanceByAddingAmount:(id)arg1 completion:(id /* block */)arg2;
- (void)updateSharedWebServiceContext:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

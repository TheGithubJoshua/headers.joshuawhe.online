<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKVirtualCard.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PKVirtualCard.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PKVirtualCard : NSObject <NSCopying, NSSecureCoding> {
    NSString * _FPANSuffix;
    NSString * _cardholderName;
    NSString * _displayName;
    NSData * _encryptedData;
    NSData * _ephemeralPublicKey;
    NSString * _expiration;
    NSString * _identifier;
    PKVirtualCardCredentials * _keychainCardCredentials;
    NSDate * _lastAutoFilledBySafari;
    NSDate * _lastUpdatedDate;
    bool  _requiresAuthentication;
    long long  _state;
    bool  _supportsLocalStorage;
    long long  _type;
}

@property (nonatomic, copy) NSString *FPANSuffix;
@property (nonatomic, copy) NSString *cardholderName;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic, copy) NSData *encryptedData;
@property (nonatomic, copy) NSData *ephemeralPublicKey;
@property (nonatomic, copy) NSString *expiration;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) PKVirtualCardCredentials *keychainCardCredentials;
@property (nonatomic, copy) NSDate *lastAutoFilledBySafari;
@property (nonatomic, copy) NSDate *lastUpdatedDate;
@property (nonatomic) bool requiresAuthentication;
@property (nonatomic) long long state;
@property (nonatomic) bool supportsLocalStorage;
@property (nonatomic) long long type;

// Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore

+ (void)deleteAllLocalKeychainVirtualCards;
+ (void)queryKeychainForVirtualCards:(id /* block */)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)FPANSuffix;
- (id)_wrapperWithType:(unsigned long long)arg1 identifier:(id)arg2;
- (id)cardholderName;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)deleteKeychainVirtualCard;
- (void)deleteLocalKeychainVirtualCard;
- (id)description;
- (id)dictionaryRepresentation;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (id)encryptedData;
- (id)ephemeralPublicKey;
- (id)expiration;
- (id)generateHashWithPrimaryAccountNumber:(id)arg1 expirationDate:(id)arg2;
- (bool)hasSensitiveCredentials;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithKeychainData:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToSafariEntryWithPrimaryAccountNumber:(id)arg1 expirationDate:(id)arg2;
- (bool)isValidFromKeychain;
- (id)keychainCardCredentials;
- (id)keychainVirtualCard;
- (id)lastAutoFilledBySafari;
- (id)lastUpdatedDate;
- (id)mergeVirtualCardWith:(id)arg1;
- (bool)requiresAuthentication;
- (void)setCardholderName:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setEncryptedData:(id)arg1;
- (void)setEphemeralPublicKey:(id)arg1;
- (void)setExpiration:(id)arg1;
- (void)setFPANSuffix:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setKeychainCardCredentials:(id)arg1;
- (void)setLastAutoFilledBySafari:(id)arg1;
- (void)setLastAutoFilledBySafariWithCompletion:(id /* block */)arg1;
- (void)setLastUpdatedDate:(id)arg1;
- (void)setRequiresAuthentication:(bool)arg1;
- (void)setState:(long long)arg1;
- (void)setSupportsLocalStorage:(bool)arg1;
- (void)setType:(long long)arg1;
- (long long)state;
- (bool)supportsLocalStorage;
- (long long)type;
- (void)writeKeychainVirtualCardToKeychain;

// Image: /System/Library/PrivateFrameworks/PassKitUIFoundation.framework/PassKitUIFoundation

- (id)cardIcon;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

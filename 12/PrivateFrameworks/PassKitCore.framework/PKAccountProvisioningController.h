<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKAccountProvisioningController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitCore.framework/PKAccountProvisioningController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (1)
 */

@interface PKAccountProvisioningController : NSObject {
    PKAccountCredential * _accountCredential;
    PKAccountService * _accountService;
    NSObject<OS_dispatch_source> * _activationTimer;
    unsigned long long  _addToAMPState;
    unsigned long long  _addToIDMSState;
    unsigned long long  _addToVPANState;
    <PKAccountProvisioningControllerDelegate> * _delegate;
    bool  _didAddToAMP;
    unsigned long long  _localPassActivationState;
    unsigned long long  _makeAccountPassDefaultOnLocalDeviceState;
    bool  _makeDefaultInAMP;
    double  _passActivationTimeout;
    unsigned long long  _provisionLocalPassState;
    unsigned long long  _provisionWatchPassState;
    NSString * _provisionedPassUniqueID;
    PKPaymentProvisioningController * _provisioningController;
    NPKCompanionAgentConnection * _watchConnection;
}

@property (nonatomic, readonly) unsigned long long addToAMPState;
@property (nonatomic, readonly) unsigned long long addToIDMSState;
@property (nonatomic, readonly) unsigned long long addToVPANState;
@property (nonatomic) <PKAccountProvisioningControllerDelegate> *delegate;
@property (nonatomic) bool didAddToAMP;
@property (nonatomic, readonly) unsigned long long localPassActivationState;
@property (nonatomic, readonly) unsigned long long makeAccountPassDefaultOnLocalDeviceState;
@property (nonatomic) double passActivationTimeout;
@property (nonatomic, readonly) unsigned long long provisionLocalPassState;
@property (nonatomic, readonly) unsigned long long provisionWatchPassState;
@property (nonatomic, copy) NSString *provisionedPassUniqueID;

+ (bool)_isPaymentPassActivated:(id)arg1 forAccountCredential:(id)arg2;

- (void).cxx_destruct;
- (void)_handlePassActiviated;
- (void)_informDelegateOfError:(id)arg1;
- (void)_informDelegateOfStateUpdate;
- (void)_passLibraryDidChange:(id)arg1;
- (void)_processRemainingTasks;
- (void)_provisionAccountCredenital:(id)arg1 provisoningController:(id)arg2 completion:(id /* block */)arg3;
- (void)_startPassActivationObserver;
- (void)_stopPassActivationObserver;
- (void)addToAMPAsDefault:(bool)arg1;
- (unsigned long long)addToAMPState;
- (void)addToIDMS;
- (unsigned long long)addToIDMSState;
- (unsigned long long)addToVPANState;
- (void)addVPAN;
- (void)dealloc;
- (id)delegate;
- (bool)didAddToAMP;
- (id)initWithAccountCredential:(id)arg1 provisioningController:(id)arg2 accountService:(id)arg3;
- (unsigned long long)localPassActivationState;
- (void)makeAccountPassDefaultOnLocalDevice;
- (unsigned long long)makeAccountPassDefaultOnLocalDeviceState;
- (double)passActivationTimeout;
- (void)provisionAccountPassToLocalDevice;
- (void)provisionAccountPassToWatchAsDefault:(bool)arg1;
- (unsigned long long)provisionLocalPassState;
- (unsigned long long)provisionWatchPassState;
- (id)provisionedPassUniqueID;
- (void)setDelegate:(id)arg1;
- (void)setDidAddToAMP:(bool)arg1;
- (void)setPassActivationTimeout:(double)arg1;
- (void)setProvisionedPassUniqueID:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

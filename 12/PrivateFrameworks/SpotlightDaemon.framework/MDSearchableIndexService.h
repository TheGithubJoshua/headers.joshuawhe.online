<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MDSearchableIndexService.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SpotlightDaemon.framework/MDSearchableIndexService.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SpotlightDaemon.framework/SpotlightDaemon (1)
 */

@interface MDSearchableIndexService : NSObject <CSSearchableIndexInterface, CSSearchableIndexServiceInterface> {
    CSIndexingQueue * _activityQueue;
    NSString * _clientBundleID;
    NSObject<OS_xpc_object> * _clientConnection;
    NSObject<OS_dispatch_queue> * _clientQueue;
    unsigned int  _clientUID;
    NSObject<MDIndexer> * _indexer;
    bool  _isInternal;
    NSString * _protectionClass;
    bool  _quotaDisabled;
    bool  _searchInternal;
}

@property (nonatomic, readonly) CSIndexingQueue *activityQueue;
@property (nonatomic, copy) NSString *clientBundleID;
@property (nonatomic, retain) NSObject<OS_xpc_object> *clientConnection;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *clientQueue;
@property (nonatomic) unsigned int clientUID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<MDIndexer> *indexer;
@property (nonatomic) bool isInternal;
@property (nonatomic, readonly) NSString *processDescription;
@property (nonatomic, copy) NSString *protectionClass;
@property (nonatomic) bool quotaDisabled;
@property (nonatomic) bool searchInternal;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_canProcessIndexDataForBundle:(id)arg1 itemsDecoder:(id)arg2 deletesDecoder:(id)arg3 clientState:(id)arg4 clientStateName:(id)arg5 outError:(id*)arg6;
- (id)_checkBundleIDHelper:(id)arg1;
- (id)_checkItems:(id)arg1 identifiers:(id)arg2 protectionClass:(id)arg3 bundleID:(id)arg4;
- (id)_checkNonEmptyBundle:(id)arg1 protectionClass:(id)arg2;
- (void)_deleteAllSearchableItemsWithBundleID:(id)arg1 protectionClass:(id)arg2 shouldGC:(bool)arg3 options:(long long)arg4 completionHandler:(id /* block */)arg5;
- (bool)_deleteInteractions:(id)arg1 forGroup:(bool)arg2;
- (void)_dispatchActivities:(id)arg1;
- (void)_dispatchActivities:(id)arg1 bundleID:(id)arg2;
- (void)_dispatchToReceiversWithBundleID:(id)arg1 protectionClass:(id)arg2 options:(long long)arg3 items:(id)arg4 itemsText:(id)arg5 itemsHTML:(id)arg6 deletes:(id)arg7;
- (void)_forceAppWithBundleID:(id)arg1 toPerformJob:(id)arg2;
- (void)_issueCommand:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)_jobForIndex:(long long)arg1;
- (void)_makeActivityQueueIfNecessary;
- (void)_performIndexJob:(id)arg1 acknowledgementHandler:(id /* block */)arg2;
- (void)_processIndexDataForBundle:(id)arg1 protectionClass:(id)arg2 options:(long long)arg3 items:(id)arg4 itemsText:(id)arg5 clientState:(id)arg6 clientStateName:(id)arg7 deletes:(id)arg8 completionHandler:(id /* block */)arg9;
- (id)activityQueue;
- (bool)addInteraction:(id)arg1;
- (void)addInteraction:(id)arg1 intentClassName:(id)arg2 bundleID:(id)arg3 protectionClass:(id)arg4 options:(long long)arg5 completionHandler:(id /* block */)arg6;
- (bool)changeState:(id)arg1;
- (void)changeStateOfSearchableItemsWithUIDs:(id)arg1 toState:(long long)arg2 protectionClass:(id)arg3 forBundleID:(id)arg4 forUTIType:(id)arg5 options:(long long)arg6;
- (bool)checkIn:(id)arg1;
- (void)checkInWithProtectionClass:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)clientBundleID;
- (id)clientConnection;
- (id)clientQueue;
- (unsigned int)clientUID;
- (bool)dataMigration:(id)arg1;
- (bool)deleteActionsBeforeTime:(id)arg1;
- (void)deleteActionsBeforeTime:(double)arg1 options:(long long)arg2 completionHandler:(id /* block */)arg3;
- (bool)deleteActionsWithIdentifiers:(id)arg1;
- (void)deleteActionsWithIdentifiers:(id)arg1 options:(long long)arg2 completionHandler:(id /* block */)arg3;
- (bool)deleteAllInteractions:(id)arg1;
- (void)deleteAllInteractionsWithBundleID:(id)arg1 protectionClass:(id)arg2 options:(long long)arg3 completionHandler:(id /* block */)arg4;
- (void)deleteAllSearchableItemsWithBundleID:(id)arg1 protectionClass:(id)arg2 shouldGC:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)deleteAllSearchableItemsWithProtectionClass:(id)arg1 forBundleID:(id)arg2 options:(long long)arg3 completionHandler:(id /* block */)arg4;
- (bool)deleteAllUserActivities:(id)arg1;
- (void)deleteAllUserActivities:(id)arg1 options:(long long)arg2 completionHandler:(id /* block */)arg3;
- (bool)deleteBundle:(id)arg1;
- (bool)deleteDomains:(id)arg1;
- (void)deleteInteractionsWithGroupIdentifiers:(id)arg1 bundleID:(id)arg2 protectionClass:(id)arg3 options:(long long)arg4 completionHandler:(id /* block */)arg5;
- (void)deleteInteractionsWithIdentifiers:(id)arg1 bundleID:(id)arg2 protectionClass:(id)arg3 options:(long long)arg4 completionHandler:(id /* block */)arg5;
- (void)deleteSearchableItemsSinceDate:(id)arg1 protectionClass:(id)arg2 forBundleID:(id)arg3 options:(long long)arg4 completionHandler:(id /* block */)arg5;
- (void)deleteSearchableItemsWithDomainIdentifiers:(id)arg1 protectionClass:(id)arg2 forBundleID:(id)arg3 options:(long long)arg4 completionHandler:(id /* block */)arg5;
- (bool)deleteSinceDate:(id)arg1;
- (bool)deleteUserActivitiesWithPersistentIdentifiers:(id)arg1;
- (void)deleteUserActivitiesWithPersistentIdentifiers:(id)arg1 bundleID:(id)arg2 options:(long long)arg3 completionHandler:(id /* block */)arg4;
- (bool)donateRelevantActions:(id)arg1;
- (void)donateRelevantActions:(id)arg1 bundleID:(id)arg2 options:(long long)arg3 completionHandler:(id /* block */)arg4;
- (bool)fetchAttributes:(id)arg1;
- (void)fetchAttributes:(id)arg1 protectionClass:(id)arg2 bundleID:(id)arg3 identifiers:(id)arg4 reply:(id)arg5 completionHandler:(id /* block */)arg6;
- (bool)fetchClientState:(id)arg1;
- (void)fetchLastClientStateWithProtectionClass:(id)arg1 forBundleID:(id)arg2 clientStateName:(id)arg3 options:(long long)arg4 completionHandler:(id /* block */)arg5;
- (void)flushUserActivities;
- (bool)handleCommand:(const char *)arg1 info:(id)arg2;
- (void)indexFromBundle:(id)arg1 protectionClass:(id)arg2 options:(long long)arg3 items:(id)arg4 itemsText:(id)arg5 itemsHTML:(id)arg6 clientState:(id)arg7 clientStateName:(id)arg8 deletes:(id)arg9 completionHandler:(id /* block */)arg10;
- (void)indexSearchableItems:(id)arg1 deleteSearchableItemsWithIdentifiers:(id)arg2 clientState:(id)arg3 clientStateName:(id)arg4 protectionClass:(id)arg5 forBundleID:(id)arg6 options:(long long)arg7 completionHandler:(id /* block */)arg8;
- (void)indexSearchableItems:(id)arg1 deleteSearchableItemsWithIdentifiers:(id)arg2 clientState:(id)arg3 protectionClass:(id)arg4 forBundleID:(id)arg5 options:(long long)arg6 completionHandler:(id /* block */)arg7;
- (id)indexer;
- (bool)isInternal;
- (bool)issueCommand:(id)arg1;
- (void)performDataMigrationWithTimeout:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)performIndexJob:(id)arg1;
- (void)performIndexJob:(id)arg1 acknowledgementHandler:(id /* block */)arg2;
- (bool)processActivities:(id)arg1;
- (id)processDescription;
- (bool)processIndexData:(id)arg1;
- (id)protectionClass;
- (void)provideDataForBundle:(id)arg1 identifier:(id)arg2 type:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)provideFileURLForBundle:(id)arg1 identifier:(id)arg2 type:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)quotaDisabled;
- (bool)searchInternal;
- (void)setClientBundleID:(id)arg1;
- (void)setClientConnection:(id)arg1;
- (void)setClientQueue:(id)arg1;
- (void)setClientUID:(unsigned int)arg1;
- (void)setIndexer:(id)arg1;
- (void)setIsInternal:(bool)arg1;
- (void)setProtectionClass:(id)arg1;
- (void)setQuotaDisabled:(bool)arg1;
- (void)setSearchInternal:(bool)arg1;
- (void)userPerformedAction:(id)arg1 withItem:(id)arg2 protectionClass:(id)arg3;
- (bool)willModify:(id)arg1;
- (void)willModifySearchableItemsWithIdentifiers:(id)arg1 protectionClass:(id)arg2 forBundleID:(id)arg3 options:(long long)arg4 completionHandler:(id /* block */)arg5;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

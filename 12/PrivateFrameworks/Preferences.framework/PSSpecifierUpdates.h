<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PSSpecifierUpdates.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Preferences.framework/PSSpecifierUpdates.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Preferences.framework/Preferences (1.0)
 */

@interface PSSpecifierUpdates : NSObject <NSCopying> {
    PSSpecifierUpdateContext * _context;
    NSMutableArray * _currentSpecifiers;
    PSSpecifierGroupIndex * _groupIndex;
    NSArray * _originalSpecifiers;
    NSMutableArray * _updates;
    bool  _wantsDebugCallbacks;
}

@property (nonatomic, copy) PSSpecifierUpdateContext *context;
@property (nonatomic, readonly, copy) NSArray *currentSpecifiers;
@property (nonatomic, readonly, copy) PSSpecifierGroupIndex *groupIndex;
@property (nonatomic, readonly, copy) NSArray *originalSpecifiers;
@property (nonatomic, readonly, copy) NSArray *updates;

+ (void)_assertSpecifierIDsAreUnique:(id)arg1;
+ (Class)_groupIndexClass;
+ (bool)_wantsDebugCallbacks;
+ (id)updatesByDiffingSpecifiers:(id)arg1 withSpecifiers:(id)arg2 changedBlock:(id /* block */)arg3;
+ (id)updatesWithSpecifiers:(id)arg1;

- (void).cxx_destruct;
- (bool)_addAndApplyOperation:(id)arg1;
- (void)_didApplyOperation:(id)arg1;
- (bool)_enumerateArrayWithConjuctionalResult:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)_groupIndexCreatingIfNecessary;
- (id)_init;
- (id)_initForCopyWithOriginalSpecifiers:(id)arg1 currentSpecifiers:(id)arg2 updates:(id)arg3;
- (void)_operationFailed:(id)arg1 reason:(id)arg2;
- (bool)_removeOneSpecifierOnlyAtIndex:(unsigned long long)arg1;
- (bool)appendSpecifier:(id)arg1;
- (bool)appendSpecifier:(id)arg1 toGroup:(id)arg2;
- (bool)appendSpecifier:(id)arg1 toGroupAtGroupIndex:(unsigned long long)arg2;
- (bool)appendSpecifier:(id)arg1 toGroupWithID:(id)arg2;
- (bool)appendSpecifiers:(id)arg1;
- (bool)appendSpecifiers:(id)arg1 toGroup:(id)arg2;
- (bool)appendSpecifiers:(id)arg1 toGroupAtGroupIndex:(unsigned long long)arg2;
- (bool)appendSpecifiers:(id)arg1 toGroupWithID:(id)arg2;
- (id)context;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentSpecifiers;
- (id)description;
- (void)enumerateUpdatesUsingBlock:(id /* block */)arg1;
- (id)groupIndex;
- (unsigned long long)indexOfSpecifier:(id)arg1;
- (unsigned long long)indexOfSpecifierWithID:(id)arg1;
- (id)init;
- (id)initWithSpecifiers:(id)arg1;
- (id)initWithSpecifiers:(id)arg1 applyUpdates:(id)arg2;
- (bool)insertContiguousSpecifiers:(id)arg1 afterSpecifier:(id)arg2;
- (bool)insertContiguousSpecifiers:(id)arg1 afterSpecifierWithID:(id)arg2;
- (bool)insertContiguousSpecifiers:(id)arg1 atIndex:(unsigned long long)arg2;
- (bool)insertSpecifier:(id)arg1 afterSpecifier:(id)arg2;
- (bool)insertSpecifier:(id)arg1 afterSpecifierWithID:(id)arg2;
- (bool)insertSpecifier:(id)arg1 atIndex:(unsigned long long)arg2;
- (bool)insertSpecifier:(id)arg1 atIndexPath:(id)arg2;
- (bool)moveSpecifier:(id)arg1 toIndex:(unsigned long long)arg2;
- (bool)moveSpecifierAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (bool)moveSpecifierAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (id)originalSpecifiers;
- (bool)reloadSpecifier:(id)arg1;
- (bool)reloadSpecifierAtIndex:(unsigned long long)arg1;
- (bool)reloadSpecifierAtIndexPath:(id)arg1;
- (bool)reloadSpecifierWithID:(id)arg1;
- (bool)reloadSpecifiers:(id)arg1;
- (bool)reloadSpecifiersInGroup:(id)arg1;
- (bool)reloadSpecifiersInGroupAtGroupIndex:(unsigned long long)arg1;
- (bool)reloadSpecifiersInGroupWithID:(id)arg1;
- (bool)reloadSpecifiersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)reloadSpecifiersWithIDs:(id)arg1;
- (bool)removeSpecifier:(id)arg1;
- (bool)removeSpecifierAtIndex:(unsigned long long)arg1;
- (bool)removeSpecifierAtIndexPath:(id)arg1;
- (bool)removeSpecifierWithID:(id)arg1;
- (bool)removeSpecifiers:(id)arg1;
- (bool)removeSpecifiersInGroup:(id)arg1;
- (bool)removeSpecifiersInGroupAtGroupIndex:(unsigned long long)arg1;
- (bool)removeSpecifiersInGroupWithID:(id)arg1;
- (bool)removeSpecifiersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)removeSpecifiersWithIDs:(id)arg1;
- (void)setContext:(id)arg1;
- (id)specifierForID:(id)arg1;
- (id)specifiersAfterApplyingUpdatesToIndex:(unsigned long long)arg1;
- (id)stepByStepDescription;
- (bool)swapSpecifier:(id)arg1 withSpecifier:(id)arg2;
- (bool)swapSpecifierAtIndex:(unsigned long long)arg1 withSpecifierAtIndex:(unsigned long long)arg2;
- (id)updates;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

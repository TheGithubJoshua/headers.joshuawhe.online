<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PSTableCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Preferences.framework/PSTableCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Preferences.framework/Preferences (1.0)
 */

@interface PSTableCell : UITableViewCell {
    int  _alignment;
    bool  _cellEnabled;
    bool  _checked;
    UIImageView * _checkedImageView;
    PSTableCellHighlightContext * _customHighlightContext;
    bool  _forceHideDisclosureIndicator;
    NSString * _hiddenTitle;
    bool  _isCopyable;
    bool  _lazyIcon;
    NSString * _lazyIconAppID;
    bool  _lazyIconDontUnload;
    bool  _lazyIconForceSynchronous;
    NSURL * _lazyIconURL;
    UILongPressGestureRecognizer * _longTapRecognizer;
    SEL  _pAction;
    id  _pTarget;
    bool  _reusedCell;
    bool  _shouldHideTitle;
    PSSpecifier * _specifier;
    long long  _type;
    NSURLSession * _urlSession;
    id  _value;
}

@property (nonatomic) bool forceHideDisclosureIndicator;
@property (nonatomic) bool isCopyable;
@property (nonatomic, retain) UILongPressGestureRecognizer *longTapRecognizer;
@property (nonatomic) bool reusedCell;
@property (nonatomic, retain) PSSpecifier *specifier;
@property (nonatomic) long long type;

+ (Class)cellClassForSpecifier:(id)arg1;
+ (long long)cellStyle;
+ (long long)cellTypeFromString:(id)arg1;
+ (double)defaultCellHeight;
+ (id)reuseIdentifierForBasicCellTypes:(long long)arg1;
+ (id)reuseIdentifierForClassAndType:(long long)arg1;
+ (id)reuseIdentifierForSpecifier:(id)arg1;
+ (id)stringFromCellType:(long long)arg1;

- (void).cxx_destruct;
- (id)_automationID;
- (id)_checkmarkImage:(bool)arg1;
- (id)_contentString;
- (id)_copyableText;
- (id)_disclosureChevronImage:(bool)arg1;
- (void)_invalidateHighlightContext;
- (void)_updateAccessoryTypeForSpecifier:(id)arg1;
- (id)_urlSession;
- (SEL)action;
- (id)blankIcon;
- (bool)canBeChecked;
- (bool)canBecomeFirstResponder;
- (bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (bool)canReload;
- (SEL)cellAction;
- (bool)cellEnabled;
- (void)cellRemovedFromView;
- (id)cellTarget;
- (void)copy:(id)arg1;
- (void)dealloc;
- (bool)forceHideDisclosureIndicator;
- (void)forceSynchronousIconLoadOnNextIconLoad;
- (id)getIcon;
- (id)getLazyIcon;
- (id)getLazyIconID;
- (void)highlightCellForDuration:(double)arg1 animateUnighlight:(bool)arg2;
- (id)iconImageView;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;
- (bool)isChecked;
- (bool)isCopyable;
- (void)layoutSubviews;
- (id)lazyIconQueue:(id)arg1;
- (void)longPressed:(id)arg1;
- (id)longTapRecognizer;
- (void)prepareForReuse;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (void)reloadWithSpecifier:(id)arg1 animated:(bool)arg2;
- (bool)reusedCell;
- (id)scriptingInfoWithChildren;
- (void)setAction:(SEL)arg1;
- (void)setAlignment:(int)arg1;
- (void)setCellAction:(SEL)arg1;
- (void)setCellEnabled:(bool)arg1;
- (void)setCellTarget:(id)arg1;
- (void)setChecked:(bool)arg1;
- (void)setForceHideDisclosureIndicator:(bool)arg1;
- (void)setHighlighted:(bool)arg1 animated:(bool)arg2;
- (void)setIcon:(id)arg1;
- (void)setIsCopyable:(bool)arg1;
- (void)setLongTapRecognizer:(id)arg1;
- (void)setReusedCell:(bool)arg1;
- (void)setSelected:(bool)arg1 animated:(bool)arg2;
- (void)setShouldHideTitle:(bool)arg1;
- (void)setSpecifier:(id)arg1;
- (void)setTarget:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setType:(long long)arg1;
- (void)setValue:(id)arg1;
- (void)setValueChangedTarget:(id)arg1 action:(SEL)arg2 specifier:(id)arg3;
- (id)specifier;
- (id)target;
- (double)textFieldOffset;
- (id)title;
- (id)titleLabel;
- (id)titleTextLabel;
- (long long)type;
- (id)value;
- (id)valueLabel;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

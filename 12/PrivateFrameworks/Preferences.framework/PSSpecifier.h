<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PSSpecifier.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Preferences.framework/PSSpecifier.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Preferences.framework/Preferences (1.0)
 */

@interface PSSpecifier : NSObject {
    SEL  _buttonAction;
    SEL  _confirmationAction;
    SEL  _confirmationCancelAction;
    SEL  _controllerLoadAction;
    NSString * _name;
    NSMutableDictionary * _properties;
    NSDictionary * _shortTitleDict;
    bool  _showContentString;
    NSDictionary * _titleDict;
    id  _userInfo;
    NSArray * _values;
    id  _weakUserInfo;
    SEL  action;
    long long  autoCapsType;
    long long  autoCorrectionType;
    SEL  cancel;
    long long  cellType;
    Class  detailControllerClass;
    Class  editPaneClass;
    SEL  getter;
    long long  keyboardType;
    SEL  setter;
    id  target;
    unsigned long long  textFieldType;
}

@property (nonatomic, retain) IMAccount *CNFRegAccount;
@property (nonatomic, retain) CNFRegAlias *CNFRegAlias;
@property (nonatomic, retain) CNFRegAlias *CNFRegCallerIdAlias;
@property (nonatomic) SEL buttonAction;
@property (nonatomic) long long cellType;
@property (nonatomic) SEL confirmationAction;
@property (nonatomic) SEL confirmationCancelAction;
@property (nonatomic) SEL controllerLoadAction;
@property (nonatomic) Class detailControllerClass;
@property (nonatomic) Class editPaneClass;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) NSDictionary *shortTitleDictionary;
@property (nonatomic) bool showContentString;
@property (nonatomic) id target;
@property (nonatomic, retain) NSDictionary *titleDictionary;
@property (nonatomic, readonly) CTXPCServiceSubscriptionContext *tps_subscriptionContext;
@property (nonatomic, readonly, copy) NSOrderedSet *tps_subscriptions;
@property (nonatomic, retain) id userInfo;
@property (nonatomic, retain) NSArray *values;
@property (nonatomic) id weakUserInfo;

// Image: /System/Library/PrivateFrameworks/Preferences.framework/Preferences

+ (long long)autoCapsTypeForString:(id)arg1;
+ (long long)autoCorrectionTypeForNumber:(id)arg1;
+ (id)deleteButtonSpecifierWithName:(id)arg1 target:(id)arg2 action:(SEL)arg3;
+ (id)emptyGroupSpecifier;
+ (id)groupSpecifierWithID:(id)arg1;
+ (id)groupSpecifierWithID:(id)arg1 name:(id)arg2;
+ (id)groupSpecifierWithName:(id)arg1;
+ (long long)keyboardTypeForString:(id)arg1;
+ (id)preferenceSpecifierNamed:(id)arg1 target:(id)arg2 set:(SEL)arg3 get:(SEL)arg4 detail:(Class)arg5 cell:(long long)arg6 edit:(Class)arg7;
+ (id)specifierWithSpecifier:(id)arg1;

- (void).cxx_destruct;
- (SEL)buttonAction;
- (long long)cellType;
- (SEL)confirmationAction;
- (SEL)confirmationCancelAction;
- (SEL)controllerLoadAction;
- (id)description;
- (Class)detailControllerClass;
- (Class)editPaneClass;
- (bool)hasValidGetter;
- (bool)hasValidSetter;
- (id)identifier;
- (id)init;
- (id)initWithName:(id)arg1 target:(id)arg2 set:(SEL)arg3 get:(SEL)arg4 detail:(Class)arg5 cell:(long long)arg6 edit:(Class)arg7;
- (bool)isEqualToSpecifier:(id)arg1;
- (SEL)legacyAction;
- (SEL)legacyCancel;
- (void)loadValuesAndTitlesFromDataSource;
- (id)name;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)performButtonAction;
- (void)performConfirmationAction;
- (void)performConfirmationCancelAction;
- (void)performControllerLoadAction;
- (id)performGetter;
- (void)performLegacyAction;
- (void)performSetterWithValue:(id)arg1;
- (id)properties;
- (id)propertyForKey:(id)arg1;
- (void)removePropertyForKey:(id)arg1;
- (void)setButtonAction:(SEL)arg1;
- (void)setCellType:(long long)arg1;
- (void)setConfirmationAction:(SEL)arg1;
- (void)setConfirmationCancelAction:(SEL)arg1;
- (void)setControllerLoadAction:(SEL)arg1;
- (void)setDetailControllerClass:(Class)arg1;
- (void)setEditPaneClass:(Class)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setKeyboardType:(long long)arg1 autoCaps:(long long)arg2 autoCorrection:(long long)arg3;
- (void)setLegacyAction:(SEL)arg1;
- (void)setLegacyCancel:(SEL)arg1;
- (void)setName:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setProperties:(id)arg1;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
- (void)setShortTitleDictionary:(id)arg1;
- (void)setShowContentString:(bool)arg1;
- (void)setTarget:(id)arg1;
- (void)setTitleDictionary:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (void)setValues:(id)arg1;
- (void)setValues:(id)arg1 titles:(id)arg2;
- (void)setValues:(id)arg1 titles:(id)arg2 shortTitles:(id)arg3;
- (void)setValues:(id)arg1 titles:(id)arg2 shortTitles:(id)arg3 usingLocalizedTitleSorting:(bool)arg4;
- (void)setVersionLabelEnabled:(bool)arg1;
- (void)setWeakUserInfo:(id)arg1;
- (void)setupIconImageWithBundle:(id)arg1;
- (void)setupIconImageWithPath:(id)arg1;
- (id)shortTitleDictionary;
- (bool)showContentString;
- (id)target;
- (long long)titleCompare:(id)arg1;
- (id)titleDictionary;
- (id)userInfo;
- (id)values;
- (bool)versionLabelEnabled;
- (id)weakUserInfo;

// Image: /System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AccessibilityUIUtilities.framework/AccessibilityUIUtilities

+ (id)ax_stepperSpecifierWithDelegate:(id)arg1;

- (void)ax_setStepperDelegate:(id)arg1;
- (id)ax_stepperDelegate;

// Image: /System/Library/PrivateFrameworks/AccountsUI.framework/AccountsUI

+ (id)_bundle;
+ (id)_dataclassIconCache;
+ (id)_iconForDataclass:(id)arg1;
+ (id)acui_linkListCellSpecifierForDataclass:(id)arg1 target:(id)arg2 set:(SEL)arg3 get:(SEL)arg4 detail:(Class)arg5;
+ (id)acui_specifierForAppWithBundleID:(id)arg1 target:(id)arg2 set:(SEL)arg3 get:(SEL)arg4;
+ (id)acui_specifierForDataclass:(id)arg1 target:(id)arg2 set:(SEL)arg3 get:(SEL)arg4;
+ (id)groupSpecifierWithFooterLinkButton:(id)arg1;
+ (id)groupSpecifierWithFooterText:(id)arg1 linkButton:(id)arg2;
+ (id)groupSpecifierWithFooterText:(id)arg1 linkButtons:(id)arg2;
+ (id)groupSpecifierWithHeader:(id)arg1 footer:(id)arg2;
+ (id)groupSpecifierWithHeader:(id)arg1 footer:(id)arg2 linkButtons:(id)arg3;

- (id)acui_appBundleID;
- (id)acui_dataclass;

// Image: /System/Library/PrivateFrameworks/CommunicationsSetupUI.framework/CommunicationsSetupUI

- (id)CNFRegAccount;
- (id)CNFRegAlias;
- (id)CNFRegCallerIdAlias;
- (void)setCNFRegAccount:(id)arg1;
- (void)setCNFRegAlias:(id)arg1;
- (void)setCNFRegCallerIdAlias:(id)arg1;

// Image: /System/Library/PrivateFrameworks/DataAccessUI.framework/DataAccessUI

+ (id)buttonSpecifierWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 confirmationInfo:(id)arg4;
+ (id)switchSpecifierWithTitle:(id)arg1 target:(id)arg2 setter:(SEL)arg3 getter:(SEL)arg4 key:(id)arg5;

// Image: /System/Library/PrivateFrameworks/ScreenTimeUI.framework/ScreenTimeUI

+ (id)st_emptyGroupSpecifier;

// Image: /System/Library/PrivateFrameworks/TelephonyPreferences.framework/TelephonyPreferences

- (id)tps_subscriptionContext;
- (id)tps_subscriptions;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NMRNowPlayingController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMediaRemote.framework/NMRNowPlayingController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote (880.30)
 */

@interface NMRNowPlayingController : NSObject <NMROriginObserverDelegate> {
    NMROrigin * _activeNowPlayingOrigin;
    NSString * _activeNowPlayingOriginExplanationLog;
    <NMRNowPlayingControllerDelegate> * _delegate;
    unsigned long long  _filteringOptions;
    NSArray * _nowPlayingOrigins;
    NSHashTable * _observerDelegates;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _observerLock;
    NSMapTable * _originControllers;
    NSObject<OS_dispatch_queue> * _queue;
    unsigned long long  _registeredObserversCount;
    bool  _shouldObserveArtwork;
    bool  _shouldObservePlaybackQueue;
}

@property (nonatomic, readonly) NMROrigin *activeNowPlayingOrigin;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NMRNowPlayingControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned long long filteringOptions;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *nowPlayingOrigins;
@property (nonatomic) bool shouldObserveArtwork;
@property (nonatomic) bool shouldObservePlaybackQueue;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addOriginControllerWithOrigin:(id)arg1;
- (void)_enumerateObserverDelegates:(id /* block */)arg1;
- (id)_evaluateActiveNowPlayingOriginForOrderedOrigins:(id)arg1;
- (void)_evaluateNowPlayingOrigins;
- (id)_evaluateNowPlayingOriginsFromOrigins:(id)arg1;
- (id)_nowPlayingStateForOrigin:(id)arg1;
- (id)_originControllerForOrigin:(id)arg1;
- (void)_removeOriginControllerWithOrigin:(id)arg1;
- (void)_setupOriginControllers;
- (void)_updateNowPlayingStateForOrigin:(id)arg1 completion:(id /* block */)arg2;
- (void)_updateOriginControllers:(id)arg1;
- (id)activeNowPlayingOrigin;
- (void)addObserverDelegate:(id)arg1;
- (void)beginObservingOrigins;
- (void)dealloc;
- (id)delegate;
- (void)endObservingOrigins;
- (unsigned long long)filteringOptions;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)launchNowPlayingURLForOrigin:(id)arg1;
- (id)nowPlayingOrigins;
- (id)nowPlayingStateForOrigin:(id)arg1;
- (void)originObserver:(id)arg1 didUpdateElapsedTimeForOrigin:(id)arg2;
- (void)originObserver:(id)arg1 didUpdateNowPlayingApplicationBundleIdentifierForOrigin:(id)arg2;
- (void)originObserver:(id)arg1 didUpdateNowPlayingInfoForOrigin:(id)arg2;
- (void)originObserver:(id)arg1 didUpdatePlaybackQueueForOrigin:(id)arg2;
- (void)originObserver:(id)arg1 didUpdatePlaybackStateForOrigin:(id)arg2;
- (void)originObserver:(id)arg1 didUpdateSupportedCommandsForOrigin:(id)arg2;
- (void)originObserver:(id)arg1 didUpdateTimestampForOrigin:(id)arg2;
- (id)playbackQueueForOrigin:(id)arg1;
- (void)prepareLocalOriginObserverForNewPlaybackIntent;
- (void)removeObserverDelegate:(id)arg1;
- (void)sendMediaRemoteCommand:(unsigned int)arg1 toOrigin:(id)arg2 options:(id)arg3 launchApp:(bool)arg4;
- (void)setDelegate:(id)arg1;
- (void)setOriginCommandHandler:(id)arg1 forOrigin:(id)arg2;
- (void)setOriginObserver:(id)arg1 forOrigin:(id)arg2;
- (void)setShouldObserveArtwork:(bool)arg1;
- (void)setShouldObservePlaybackQueue:(bool)arg1;
- (bool)shouldObserveArtwork;
- (bool)shouldObservePlaybackQueue;
- (void)updateNowPlayingStateForAllOriginsWithCompletion:(id /* block */)arg1;
- (void)updateNowPlayingStateForOrigin:(id)arg1 completion:(id /* block */)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

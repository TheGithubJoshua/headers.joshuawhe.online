<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NMRNowPlayingState.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMediaRemote.framework/NMRNowPlayingState.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote (880.30)
 */

@interface NMRNowPlayingState : NSObject <NSCopying> {
    float  _preferredPlaybackRate;
}

@property (getter=isAddToLibraryActive, nonatomic, readonly) bool addToLibraryActive;
@property (getter=isAddToLibraryCommandEnabled, nonatomic, readonly) bool addToLibraryCommandEnabled;
@property (getter=isAddToLibraryCommandSupported, nonatomic, readonly) bool addToLibraryCommandSupported;
@property (getter=isAdvertisement, nonatomic, readonly) bool advertisement;
@property (nonatomic, readonly) NSString *album;
@property (getter=isAlwaysLive, nonatomic, readonly) bool alwaysLive;
@property (nonatomic, readonly) NSString *applicationBundleIdentifier;
@property (nonatomic, readonly) NSString *applicationDisplayName;
@property (nonatomic, readonly) NSData *applicationIconImageData;
@property (nonatomic, readonly) NSString *artist;
@property (nonatomic, readonly) MPArtworkCatalog *artworkCatalog;
@property (nonatomic, readonly) NSData *artworkImageData;
@property (getter=isBanCommandEnabled, nonatomic, readonly) bool banCommandEnabled;
@property (nonatomic, readonly) long long banCommandPresentationStyle;
@property (getter=isBanCommandSupported, nonatomic, readonly) bool banCommandSupported;
@property (getter=isBannedActive, nonatomic, readonly) bool bannedActive;
@property (getter=isBookmarkCommandEnabled, nonatomic, readonly) bool bookmarkCommandEnabled;
@property (getter=isBookmarkCommandSupported, nonatomic, readonly) bool bookmarkCommandSupported;
@property (getter=isBookmarkedActive, nonatomic, readonly) bool bookmarkedActive;
@property (nonatomic, readonly) NSString *displayTitle;
@property (nonatomic, readonly) double duration;
@property (nonatomic, readonly) double elapsedTime;
@property (nonatomic, readonly) double elapsedTimeAtLastUpdate;
@property (getter=isExplicitTrack, nonatomic, readonly) bool explicitTrack;
@property (nonatomic, readonly) double fastForwardTimeInterval;
@property (getter=isFirstPartyApp, nonatomic, readonly) bool firstPartyApp;
@property (nonatomic, readonly) bool hasNowPlayingInfo;
@property (nonatomic, readonly) bool hasSupportedFeedbackCommands;
@property (nonatomic, readonly) MPIdentifierSet *identifiers;
@property (nonatomic, readonly) bool isPlayingRadio;
@property (nonatomic, readonly) NSNumber *itemAlbumPersistentID;
@property (nonatomic, readonly) NSNumber *itemCompanionPersistentID;
@property (nonatomic, readonly) NSNumber *itemPersistentID;
@property (getter=isLikeCommandEnabled, nonatomic, readonly) bool likeCommandEnabled;
@property (nonatomic, readonly) long long likeCommandPresentationStyle;
@property (getter=isLikeCommandSupported, nonatomic, readonly) bool likeCommandSupported;
@property (getter=isLikedActive, nonatomic, readonly) bool likedActive;
@property (nonatomic, readonly) NSString *localizedBanTitle;
@property (nonatomic, readonly) NSString *localizedBookmarkTitle;
@property (nonatomic, readonly) NSString *localizedLikeTitle;
@property (nonatomic, readonly) NSNumber *nextTrackCommandEnabled;
@property (nonatomic, readonly) float playbackRate;
@property (getter=isPlaybackRateCommandSupported, nonatomic, readonly) bool playbackRateCommandSupported;
@property (nonatomic, readonly) unsigned int playbackState;
@property (getter=isPlaying, nonatomic, readonly) bool playing;
@property (nonatomic, readonly) float preferredPlaybackRate;
@property (nonatomic, readonly) NSNumber *previousTrackCommandEnabled;
@property (nonatomic, readonly) NSString *radioStationHash;
@property (nonatomic, readonly) NSNumber *radioStationIdentifier;
@property (nonatomic, readonly) NSString *radioStationName;
@property (nonatomic, readonly) int repeatMode;
@property (getter=isRepeatModeCommandSupported, nonatomic, readonly) bool repeatModeCommandSupported;
@property (nonatomic, readonly) double rewindTimeInterval;
@property (nonatomic, readonly) int shuffleMode;
@property (getter=isShuffleModeCommandSupported, nonatomic, readonly) bool shuffleModeCommandSupported;
@property (getter=isSkipBackwardCommandEnabled, nonatomic, readonly) bool skipBackwardCommandEnabled;
@property (getter=isSkipForwardCommandEnabled, nonatomic, readonly) bool skipForwardCommandEnabled;
@property (nonatomic, readonly) NSNumber *storeAdamID;
@property (nonatomic, readonly) NSDate *timestamp;
@property (nonatomic, readonly) NSString *title;

+ (id)emptyNowPlayingState;

- (id)album;
- (id)applicationBundleIdentifier;
- (id)applicationDisplayName;
- (id)applicationIconImageData;
- (id)artist;
- (id)artworkCatalog;
- (id)artworkImageData;
- (long long)banCommandPresentationStyle;
- (unsigned long long)compareWithNowPlayingState:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)displayTitle;
- (double)duration;
- (double)elapsedTime;
- (double)elapsedTimeAtLastUpdate;
- (double)fastForwardTimeInterval;
- (bool)hasNowPlayingInfo;
- (bool)hasSupportedFeedbackCommands;
- (id)identifiers;
- (bool)isAddToLibraryActive;
- (bool)isAddToLibraryCommandEnabled;
- (bool)isAddToLibraryCommandSupported;
- (bool)isAdvertisement;
- (bool)isAlwaysLive;
- (bool)isBanCommandEnabled;
- (bool)isBanCommandSupported;
- (bool)isBannedActive;
- (bool)isBookmarkCommandEnabled;
- (bool)isBookmarkCommandSupported;
- (bool)isBookmarkedActive;
- (bool)isExplicitTrack;
- (bool)isFirstPartyApp;
- (bool)isLikeCommandEnabled;
- (bool)isLikeCommandSupported;
- (bool)isLikedActive;
- (bool)isPlaybackRateCommandSupported;
- (bool)isPlaying;
- (bool)isPlayingRadio;
- (bool)isRepeatModeCommandSupported;
- (bool)isShuffleModeCommandSupported;
- (bool)isSkipBackwardCommandEnabled;
- (bool)isSkipForwardCommandEnabled;
- (id)itemAlbumPersistentID;
- (id)itemCompanionPersistentID;
- (id)itemPersistentID;
- (long long)likeCommandPresentationStyle;
- (id)localizedBanTitle;
- (id)localizedBookmarkTitle;
- (id)localizedLikeTitle;
- (id)nextTrackCommandEnabled;
- (float)playbackRate;
- (unsigned int)playbackState;
- (float)preferredPlaybackRate;
- (id)previousTrackCommandEnabled;
- (id)radioStationHash;
- (id)radioStationIdentifier;
- (id)radioStationName;
- (int)repeatMode;
- (double)rewindTimeInterval;
- (int)shuffleMode;
- (id)storeAdamID;
- (id)timestamp;
- (id)title;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_NMRCommandInfoProtobuf.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMediaRemote.framework/_NMRCommandInfoProtobuf.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote (880.30)
 */

@interface _NMRCommandInfoProtobuf : PBCodable <NSCopying> {
    bool  _active;
    int  _command;
    bool  _enabled;
    struct { 
        unsigned int command : 1; 
        unsigned int maximumRating : 1; 
        unsigned int minimumRating : 1; 
        unsigned int presentationStyle : 1; 
        unsigned int repeatMode : 1; 
        unsigned int shuffleMode : 1; 
        unsigned int active : 1; 
        unsigned int enabled : 1; 
    }  _has;
    NSString * _localizedShortTitle;
    NSString * _localizedTitle;
    float  _maximumRating;
    float  _minimumRating;
    struct { 
        double *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _preferredIntervals;
    int  _presentationStyle;
    int  _repeatMode;
    int  _shuffleMode;
    struct { 
        float *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _supportedRates;
}

@property (nonatomic) bool active;
@property (nonatomic) int command;
@property (nonatomic) bool enabled;
@property (nonatomic) bool hasActive;
@property (nonatomic) bool hasCommand;
@property (nonatomic) bool hasEnabled;
@property (nonatomic, readonly) bool hasLocalizedShortTitle;
@property (nonatomic, readonly) bool hasLocalizedTitle;
@property (nonatomic) bool hasMaximumRating;
@property (nonatomic) bool hasMinimumRating;
@property (nonatomic) bool hasPresentationStyle;
@property (nonatomic) bool hasRepeatMode;
@property (nonatomic) bool hasShuffleMode;
@property (nonatomic, retain) NSString *localizedShortTitle;
@property (nonatomic, retain) NSString *localizedTitle;
@property (nonatomic) float maximumRating;
@property (nonatomic) float minimumRating;
@property (nonatomic, readonly) double*preferredIntervals;
@property (nonatomic, readonly) unsigned long long preferredIntervalsCount;
@property (nonatomic) int presentationStyle;
@property (nonatomic) int repeatMode;
@property (nonatomic) int shuffleMode;
@property (nonatomic, readonly) float*supportedRates;
@property (nonatomic, readonly) unsigned long long supportedRatesCount;

- (void).cxx_destruct;
- (int)StringAsCommand:(id)arg1;
- (int)StringAsRepeatMode:(id)arg1;
- (int)StringAsShuffleMode:(id)arg1;
- (bool)active;
- (void)addPreferredInterval:(double)arg1;
- (void)addSupportedRate:(float)arg1;
- (void)clearPreferredIntervals;
- (void)clearSupportedRates;
- (int)command;
- (id)commandAsString:(int)arg1;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)enabled;
- (bool)hasActive;
- (bool)hasCommand;
- (bool)hasEnabled;
- (bool)hasLocalizedShortTitle;
- (bool)hasLocalizedTitle;
- (bool)hasMaximumRating;
- (bool)hasMinimumRating;
- (bool)hasPresentationStyle;
- (bool)hasRepeatMode;
- (bool)hasShuffleMode;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)localizedShortTitle;
- (id)localizedTitle;
- (float)maximumRating;
- (void)mergeFrom:(id)arg1;
- (float)minimumRating;
- (double)preferredIntervalAtIndex:(unsigned long long)arg1;
- (double*)preferredIntervals;
- (unsigned long long)preferredIntervalsCount;
- (int)presentationStyle;
- (bool)readFrom:(id)arg1;
- (int)repeatMode;
- (id)repeatModeAsString:(int)arg1;
- (void)setActive:(bool)arg1;
- (void)setCommand:(int)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setHasActive:(bool)arg1;
- (void)setHasCommand:(bool)arg1;
- (void)setHasEnabled:(bool)arg1;
- (void)setHasMaximumRating:(bool)arg1;
- (void)setHasMinimumRating:(bool)arg1;
- (void)setHasPresentationStyle:(bool)arg1;
- (void)setHasRepeatMode:(bool)arg1;
- (void)setHasShuffleMode:(bool)arg1;
- (void)setLocalizedShortTitle:(id)arg1;
- (void)setLocalizedTitle:(id)arg1;
- (void)setMaximumRating:(float)arg1;
- (void)setMinimumRating:(float)arg1;
- (void)setPreferredIntervals:(double*)arg1 count:(unsigned long long)arg2;
- (void)setPresentationStyle:(int)arg1;
- (void)setRepeatMode:(int)arg1;
- (void)setShuffleMode:(int)arg1;
- (void)setSupportedRates:(float*)arg1 count:(unsigned long long)arg2;
- (int)shuffleMode;
- (id)shuffleModeAsString:(int)arg1;
- (float)supportedRateAtIndex:(unsigned long long)arg1;
- (float*)supportedRates;
- (unsigned long long)supportedRatesCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

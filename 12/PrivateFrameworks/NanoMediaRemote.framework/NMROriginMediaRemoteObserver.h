<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NMROriginMediaRemoteObserver.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoMediaRemote.framework/NMROriginMediaRemoteObserver.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote (880.30)
 */

@interface NMROriginMediaRemoteObserver : NSObject <NMROriginObserver, NMRPlaybackQueueDelegate> {
    NMRMediaRemoteUpdater * _artworkUpdater;
    NMRMediaRemoteUpdater * _bundleIDUpdater;
    <NMROriginObserverDelegate> * _delegate;
    unsigned long long  _filteringOptions;
    bool  _isEnforcingApplicationFilter;
    bool  _isRegisteredForMediaRemoteNotifications;
    NMRMediaRemoteNowPlayingState * _mutableNowPlayingState;
    NMRNowPlayingClient * _nowPlayingClient;
    void * _nowPlayingContentItemRef;
    NMRMediaRemoteUpdater * _nowPlayingInfoUpdater;
    NMROrigin * _origin;
    NMRPlaybackQueue * _playbackQueue;
    NMRMediaRemoteUpdater * _playbackStateUpdater;
    NSObject<OS_dispatch_queue> * _serialQueue;
    bool  _shouldObserveArtwork;
    bool  _shouldObservePlaybackQueue;
    NMRMediaRemoteUpdater * _supportedCommandsUpdater;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NMROriginObserverDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NMRNowPlayingState *nowPlayingState;
@property (nonatomic, readonly) NMROrigin *origin;
@property (nonatomic, readonly) NMRPlaybackQueue *playbackQueue;
@property (nonatomic) bool shouldObserveArtwork;
@property (nonatomic) bool shouldObservePlaybackQueue;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_configureMediaRemoteUpdaters;
- (id)_filteredSupportedCommands:(id)arg1;
- (void)_handleContentItemArtworkDidChangeNotification:(id)arg1;
- (void)_handleContentItemsDidChangeNotification:(id)arg1;
- (void)_handleNowPlayingApplicationDidChangeNotification:(id)arg1;
- (void)_handleNowPlayingApplicationPlaybackStateDidChangeNotification:(id)arg1;
- (void)_handlePlaybackQueueDidChangeNotification:(id)arg1;
- (void)_handleSupportedCommandsDidChangeNotification:(id)arg1;
- (bool)_hasEqualIdentifierWithContentItem:(void*)arg1;
- (void)_notifyObserverOfUpdatedElapsedTime;
- (void)_notifyObserverOfUpdatedNowPlayingApplicationBundleID;
- (void)_notifyObserverOfUpdatedNowPlayingInfo;
- (void)_notifyObserverOfUpdatedPlaybackState;
- (void)_notifyObserverOfUpdatedSupportedCommands;
- (void)_notifyObserversOfUpdatedPlaybackQueue;
- (void)_notifyObserversOfUpdatedTimestamp;
- (void)_registerForMediaRemoteNotifications;
- (void)_unregisterForMediaRemoteNotifications;
- (void)_updateArtworkWithCompletion:(id /* block */)arg1;
- (void)_updateEverything;
- (void)_updateIsEnforcingApplicationFilter;
- (void)_updateNowPlayingApplicationInfoWithOptions:(unsigned long long)arg1 withCompletion:(id /* block */)arg2;
- (void)_updateNowPlayingClientWithCompletion:(id /* block */)arg1;
- (void)_updateNowPlayingContentItem:(void*)arg1;
- (void)_updateNowPlayingInfoWithCompletion:(id /* block */)arg1;
- (void)_updatePlaybackStateWithCompletion:(id /* block */)arg1;
- (void)_updateSupportedCommandsWithCompletion:(id /* block */)arg1;
- (void)beginObserving;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (void)endObserving;
- (id)initWithOrigin:(id)arg1 options:(unsigned long long)arg2;
- (id)nowPlayingState;
- (id)origin;
- (id)playbackQueue;
- (void)playbackQueue:(id)arg1 contentItemsDidChange:(id)arg2;
- (void)playbackQueueDidChange:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setShouldObserveArtwork:(bool)arg1;
- (void)setShouldObservePlaybackQueue:(bool)arg1;
- (bool)shouldObserveArtwork;
- (bool)shouldObservePlaybackQueue;
- (void)updateNowPlayingStateWithCompletion:(id /* block */)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MFSearchableIndexScheduler.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Message.framework/MFSearchableIndexScheduler.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Message.framework/Message (3445.120.0.1.2)
 */

@interface MFSearchableIndexScheduler : NSObject <MFSearchableIndexSchedulableDelegate> {
    NSMutableDictionary * _activities;
    MFSearchableIndexBudgetConfiguration * _budgetConfiguration;
    NSString * _budgetTimeUserDefaultsKey;
    long long  _budgetedItemCountRemaining;
    double  _budgetedTimeRemaining;
    bool  _dataSourceIndexingPermitted;
    NSMutableSet * _indexingEnabledForActivityTypes;
    NSObject<OS_dispatch_queue> * _indexingStateQueue;
    double  _maintenanceIndexingTime;
    double  _noActivityIndexingTime;
    <MFSearchableIndexSchedulable> * _schedulable;
    bool  _scheduling;
}

@property (nonatomic, retain) NSMutableDictionary *activities;
@property (nonatomic, readonly) MFSearchableIndexBudgetConfiguration *budgetConfiguration;
@property (nonatomic, copy) NSString *budgetTimeUserDefaultsKey;
@property long long budgetedItemCountRemaining;
@property double budgetedTimeRemaining;
@property (getter=isDataSourceIndexingPermitted) bool dataSourceIndexingPermitted;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableSet *indexingEnabledForActivityTypes;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *indexingStateQueue;
@property double maintenanceIndexingTime;
@property double noActivityIndexingTime;
@property (nonatomic, readonly) <MFSearchableIndexSchedulable> *schedulable;
@property (getter=isScheduling, nonatomic) bool scheduling;
@property (readonly) Class superclass;

+ (id)activityTypes;
+ (id)budgetTimeUserDefaultsKeyForIndexName:(id)arg1;
+ (id)deferrableActivityTypes;
+ (bool)isDeferrableActivityType:(id)arg1;
+ (id)log;

- (void).cxx_destruct;
- (void)_beginIndexingForActivityType:(id)arg1 activity:(id)arg2;
- (double)_budgetTimeFromUserDefaults;
- (void)_deferActivitiesIfNecessary;
- (void)_disableIndexingForActivityType:(id)arg1 defer:(bool)arg2;
- (void)_enableIndexingForActivityType:(id)arg1;
- (bool)_isIndexingEnabledByActivities;
- (bool)_isIndexingEnabledForActivityType:(id)arg1;
- (void)_logIndexingPowerEventWithIdentifier:(id)arg1 additionalEventData:(id)arg2 usePersistentLog:(bool)arg3;
- (void)_setBudgetedTimeRemaining:(double)arg1;
- (void)_setDataSourceIndexingPermitted:(bool)arg1;
- (void)_startScheduling;
- (void)_stopAllIndexing;
- (void)_stopIndexingForActivityType:(id)arg1 shouldDeferIfPossible:(bool)arg2;
- (void)_stopScheduling;
- (id)_xpcActivityIdentifierForActivityType:(id)arg1;
- (id /* block */)_xpcCriteriaBuilderBlockForActivityType:(id)arg1;
- (id)activities;
- (void)beginIndexingForActivityType:(id)arg1 activity:(id)arg2;
- (id)budgetConfiguration;
- (id)budgetTimeUserDefaultsKey;
- (long long)budgetedItemCountRemaining;
- (long long)budgetedItemCountRemainingForSearchableIndexSchedulable:(id)arg1;
- (double)budgetedTimeRemaining;
- (double)budgetedTimeRemainingForSearchableIndexSchedulable:(id)arg1;
- (void)dealloc;
- (void)deferIndexingForActivityType:(id)arg1;
- (void)didFinishIndexingBacklogForSearchableIndexSchedulable:(id)arg1;
- (bool)hasAvailableIndexingBudgetForSearchableIndexSchedulable:(id)arg1;
- (void)indexingDidResumeForSearchableIndexSchedulable:(id)arg1;
- (id)indexingEnabledForActivityTypes;
- (id)indexingStateQueue;
- (id)initWithSchedulable:(id)arg1 budgetConfiguration:(id)arg2;
- (bool)isDataSourceIndexingPermitted;
- (bool)isIndexingEnabledForActivityType:(id)arg1;
- (bool)isScheduling;
- (double)maintenanceIndexingTime;
- (double)noActivityIndexingTime;
- (id)schedulable;
- (void)searchableIndexSchedulable:(id)arg1 didGenerateImportantPowerEventWithIdentifier:(id)arg2 eventData:(id)arg3;
- (void)searchableIndexSchedulable:(id)arg1 didGeneratePowerEventWithIdentifier:(id)arg2 eventData:(id)arg3;
- (void)searchableIndexSchedulable:(id)arg1 didIndexForTime:(double)arg2;
- (void)searchableIndexSchedulable:(id)arg1 didIndexItemCount:(long long)arg2;
- (void)setActivities:(id)arg1;
- (void)setBudgetTimeUserDefaultsKey:(id)arg1;
- (void)setBudgetedItemCountRemaining:(long long)arg1;
- (void)setBudgetedTimeRemaining:(double)arg1;
- (void)setDataSourceIndexingPermitted:(bool)arg1;
- (void)setIndexingEnabledForActivityTypes:(id)arg1;
- (void)setIndexingStateQueue:(id)arg1;
- (void)setMaintenanceIndexingTime:(double)arg1;
- (void)setNoActivityIndexingTime:(double)arg1;
- (void)setScheduling:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

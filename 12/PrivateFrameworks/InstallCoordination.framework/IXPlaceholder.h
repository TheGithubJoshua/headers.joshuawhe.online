<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>IXPlaceholder.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/InstallCoordination.framework/IXPlaceholder.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination (1)
 */

@interface IXPlaceholder : IXOwnedDataPromise <NSSecureCoding>

@property (nonatomic, readonly, copy) NSString *bundleID;
@property (nonatomic, readonly, copy) NSString *bundleName;
@property (nonatomic, readonly) bool hasEntitlementsPromise;
@property (nonatomic, readonly) bool hasIconPromise;
@property (nonatomic, readonly) bool hasPlugInPlaceholderPromises;
@property (nonatomic, readonly) unsigned long long installType;
@property (nonatomic, copy) MIStoreMetadata *metadata;
@property (nonatomic, readonly) unsigned long long placeholderType;
@property (nonatomic, retain) IXPlaceholderSeed *seed;

+ (id)_iconDataForBundle:(struct __CFBundle { }*)arg1 error:(id*)arg2;
+ (id)_infoPlistLocalizationDictionaryForBundleURL:(id)arg1 error:(id*)arg2;
+ (id)_placeholderForBundle:(id)arg1 client:(unsigned long long)arg2 withParent:(id)arg3 installType:(unsigned long long)arg4 metadata:(id)arg5 error:(id*)arg6;
+ (id)placeholderForInstallable:(id)arg1 client:(unsigned long long)arg2 installType:(unsigned long long)arg3 metadata:(id)arg4 error:(id*)arg5;
+ (id)placeholderForRemovableSystemAppWithBundleID:(id)arg1 client:(unsigned long long)arg2 installType:(unsigned long long)arg3 error:(id*)arg4;
+ (bool)supportsSecureCoding;

- (bool)_doInitWithBundleName:(id)arg1 bundleID:(id)arg2 installType:(unsigned long long)arg3 isPlugin:(bool)arg4;
- (id)bundleID;
- (id)bundleName;
- (void)encodeWithCoder:(id)arg1;
- (id)entitlementsPromiseWithError:(id*)arg1;
- (bool)hasEntitlementsPromise;
- (bool)hasIconPromise;
- (bool)hasPlugInPlaceholderPromises;
- (id)iconPromiseWithError:(id*)arg1;
- (id)infoPlistLocalizationsWithError:(id*)arg1;
- (id)initAppPlaceholderWithBundleName:(id)arg1 bundleID:(id)arg2 installType:(unsigned long long)arg3 client:(unsigned long long)arg4;
- (id)initPlugInPlaceholderWithBundleName:(id)arg1 bundleID:(id)arg2 parentPlaceholder:(id)arg3 client:(unsigned long long)arg4;
- (id)initWithCoder:(id)arg1;
- (id)initWithSeed:(id)arg1;
- (unsigned long long)installType;
- (bool)launchProhibited:(bool*)arg1 error:(id*)arg2;
- (id)metadata;
- (id)metadataWithError:(id*)arg1;
- (id)placeholderAttributesWithError:(id*)arg1;
- (unsigned long long)placeholderType;
- (id)plugInPlaceholderPromisesWithError:(id*)arg1;
- (Class)seedClass;
- (void)setBundleID:(id)arg1;
- (void)setBundleName:(id)arg1;
- (bool)setConfigurationCompleteWithError:(id*)arg1;
- (bool)setEntitlementsPromise:(id)arg1 error:(id*)arg2;
- (bool)setIconPromise:(id)arg1 error:(id*)arg2;
- (bool)setInfoPlistLocalizations:(id)arg1 error:(id*)arg2;
- (bool)setLaunchProhibited:(bool)arg1 error:(id*)arg2;
- (void)setMetadata:(id)arg1;
- (bool)setMetadata:(id)arg1 error:(id*)arg2;
- (bool)setPlaceholderAttributes:(id)arg1 error:(id*)arg2;
- (bool)setPlugInPlaceholderPromises:(id)arg1 error:(id*)arg2;
- (bool)setSinfData:(id)arg1 error:(id*)arg2;
- (id)sinfDataWithError:(id*)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

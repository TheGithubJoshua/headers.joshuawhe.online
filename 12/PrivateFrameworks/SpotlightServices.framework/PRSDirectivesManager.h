<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PRSDirectivesManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SpotlightServices.framework/PRSDirectivesManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SpotlightServices.framework/SpotlightServices (1191.57)
 */

@interface PRSDirectivesManager : NSObject {
    PRSL2FeatureVectorProcessingContext * _processingContext;
    double  _weightX;
    double  _weightY;
    struct _as_is { unsigned long long x1; unsigned long long x2; } * directive_as_is;
    struct _as_is_range { unsigned long long x1; unsigned long long x2; unsigned long long x3; } * directive_as_is_range;
    struct fan_out_value { unsigned long long x1; unsigned long long x2; } * directive_fan_out;
    struct _id_mapping { unsigned long long x1; unsigned long long x2; union { struct __CFDictionary {} *x_3_1_1; int x_3_1_2[5]; } x3; char *x4; } * directive_id_mapping;
    struct _is_populated { unsigned long long x1; unsigned long long x2; float x3[5]; float x4[5]; unsigned long long x5; } * directive_is_populated;
    struct _local_resultset_id_values_mapping { 
        unsigned long long start_idx; 
        unsigned long long end_idx; 
        struct __CFDictionary {} *mapping; 
        unsigned long long numPRSRankingBundleFeatures; 
        unsigned long long *PRSRankingBundleFeatureOrder; 
        id /* block */ *PRSRankingBundleFeaturePickers; 
        float *score_vector; 
        unsigned long long mapSize; 
    }  directive_local_resultset_id_values_mapping;
    struct _one_sided_inverse { unsigned long long x1; unsigned long long x2; } * directive_one_sided_inverse;
    struct _parsec_resultset_id_values_mapping { 
        unsigned long long start_idx; 
        unsigned long long end_idx; 
        unsigned long long numFeatures; 
        struct __CFDictionary {} *mapping; 
        id /* block */ *PRSRankingBundleFeaturePickers; 
        float *score_vector; 
        unsigned long long mapSize; 
    }  directive_parsec_resultset_id_values_mapping;
    struct _quantize { unsigned long long x1; unsigned long long x2; float *x3; unsigned long long x4; } * directive_quantize;
    struct _replace_if { unsigned long long x1; unsigned long long x2; float x3[2]; float x4[2]; unsigned long long x5; } * directive_replace_if;
    struct _replace_then_min { unsigned long long x1; unsigned long long x2; float x3[5]; float x4[5]; float x5; unsigned long long x6; } * directive_replace_then_min;
    struct _resultset_id_mapping { unsigned long long x1; unsigned long long x2; union { struct __CFDictionary {} *x_3_1_1; int x_3_1_2[5]; } x3; char *x4; float *x5; } * directive_resultset_id_mapping;
    struct _resultset_id_score_mapping { unsigned long long x1; unsigned long long x2; union { struct __CFDictionary {} *x_3_1_1; int x_3_1_2[5]; } x3; struct __CFDictionary {} *x4; char *x5; float *x6; } * directive_resultset_id_score_mapping;
    struct _value_if_not_exist { unsigned long long x1; unsigned long long x2; float x3; } * directive_value_if_not_exist;
    NSMutableIndexSet * disabledFeatureIndices;
    int  indexOfAsIs;
    int  indexOfAsIsRange;
    int  indexOfFanOutValue;
    int  indexOfIdMapping;
    int  indexOfIsPopulated;
    int  indexOfOneSidedInverse;
    int  indexOfQuantize;
    int  indexOfReplaceIf;
    int  indexOfReplaceThenMin;
    int  indexOfResultSetIdMapping;
    int  indexOfResultSetIdScoreMapping;
    int  indexOfValueIfNotExist;
    NSMutableDictionary * mapInflatedIndexToSize;
    int  sizeOfAsIs;
    int  sizeOfAsIsRange;
    int  sizeOfFanOutValue;
    int  sizeOfIdMapping;
    int  sizeOfIsPopulated;
    int  sizeOfOneSidedInverse;
    int  sizeOfQuantize;
    int  sizeOfReplaceIf;
    int  sizeOfReplaceThenMin;
    int  sizeOfResultSetIdMapping;
    int  sizeOfResultSetIdScoreMapping;
    int  sizeOfValueIfNotExist;
}

@property (nonatomic, retain) PRSL2FeatureVectorProcessingContext *processingContext;
@property (nonatomic) double weightX;
@property (nonatomic) double weightY;

+ (id)descriptorsForModelInputScore;
+ (void)initialize;

- (void).cxx_destruct;
- (void)cleanup;
- (void)dealloc;
- (unsigned long long)getDirectiveTypeFromString:(id)arg1;
- (id)init;
- (void)processDirectives:(id)arg1;
- (void)processL2FeatureVector:(id)arg1 populatingValues:(float*)arg2 scoreValue:(char *)arg3 count:(int)arg4;
- (void)processResultSetValuesWithMap:(id)arg1 serverFeatures:(id)arg2;
- (id)processingContext;
- (void)setProcessingContext:(id)arg1;
- (void)setWeightX:(double)arg1;
- (void)setWeightY:(double)arg1;
- (double)weightX;
- (double)weightY;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

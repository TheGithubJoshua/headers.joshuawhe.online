<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PRSL2FeatureVector.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SpotlightServices.framework/PRSL2FeatureVector.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SpotlightServices.framework/SpotlightServices (1191.57)
 */

@interface PRSL2FeatureVector : NSObject <NSCopying> {
    NSString * _bundleID;
    struct PRSL2FeatureScoreSmallCache { 
        unsigned short features[32]; 
        float scores[32]; 
        unsigned short count; 
    }  _cache;
    NSString * _device_type;
    float  _experimentalScore;
    void * _featureData;
    unsigned short  _featureDataSize;
    unsigned char  _flags;
    struct ranking_index_score_t { 
        unsigned long long lsb; 
        unsigned long long msb; 
    }  _indexScore;
    float  _originalL2Score;
    NSDictionary * _searchThroughCEPData;
    unsigned char  _values;
}

@property (nonatomic, retain) NSString *bundleID;
@property (nonatomic, retain) NSString *device_type;
@property (nonatomic) bool displayNameFuzzySpecialInsertion;
@property (nonatomic) float experimentalScore;
@property (nonatomic) struct ranking_index_score_t { unsigned long long x1; unsigned long long x2; } indexScore;
@property (nonatomic) bool isAppInDock;
@property (nonatomic) bool isSiriAction;
@property (nonatomic) float originalL2Score;
@property (nonatomic, readonly) bool receiverIsVip;
@property (nonatomic, retain) NSDictionary *searchThroughCEPData;
@property (nonatomic, readonly) bool senderIsVip;
@property (nonatomic, readonly) bool vipSenderMatchesQuery;

+ (id)contextWithFeatureOrder:(id)arg1 withInflation:(unsigned long long)arg2 withInflatedIndexToSize:(id)arg3;
+ (struct FeatureInfo { id x1; unsigned short x2; unsigned char x3; }*)featureForName:(id)arg1;
+ (struct __CFSet { }*)getL2FeatureSet;
+ (void)initialize;

- (void).cxx_destruct;
- (id)_dictionaryRepresentationWithoutDefaultValues:(bool)arg1;
- (id)bundleID;
- (void)cleanup;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)device_type;
- (id)dictionaryRepresentation;
- (id)dictionaryRepresentationWithoutDefaultValues;
- (bool)displayNameFuzzySpecialInsertion;
- (float)experimentalScore;
- (float*)getAllScores:(float)arg1;
- (struct ranking_index_score_t { unsigned long long x1; unsigned long long x2; })indexScore;
- (id)init;
- (bool)isAppInDock;
- (bool)isSiriAction;
- (float)originalL2Score;
- (bool)receiverIsVip;
- (float)scoreForFeature:(unsigned short)arg1;
- (id)searchThroughCEPData;
- (bool)senderIsVip;
- (bool)serializeToJSON:(void*)arg1 valuesOnly:(bool)arg2 ignoreDefaultValues:(bool)arg3;
- (void)setBundleID:(id)arg1;
- (void)setDevice_type:(id)arg1;
- (void)setDisplayNameFuzzySpecialInsertion:(bool)arg1;
- (void)setExperimentalScore:(float)arg1;
- (void)setIndexScore:(struct ranking_index_score_t { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setIsAppInDock:(bool)arg1;
- (void)setIsSiriAction:(bool)arg1;
- (void)setOriginalL2Score:(float)arg1;
- (void)setScores:(float*)arg1 forFeatures:(unsigned short*)arg2 count:(unsigned long long)arg3;
- (void)setSearchThroughCEPData:(id)arg1;
- (bool)vipSenderMatchesQuery;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

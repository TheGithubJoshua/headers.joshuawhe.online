<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ENGroupContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Engram.framework/ENGroupContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Engram.framework/Engram (1)
 */

@interface ENGroupContext : NSObject {
    ENAccountIdentity * _accountIdentity;
    NSArray * _allMiddlewares;
    <ENGroupContextDataSource> * _dataSource;
    NSMutableArray * _middlewares;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (nonatomic, retain) ENAccountIdentity *accountIdentity;
@property (nonatomic, readonly) NSArray *allMiddlewares;
@property (nonatomic, retain) <ENGroupContextDataSource> *dataSource;
@property (nonatomic, retain) NSMutableArray *middlewares;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;

+ (id)_errorWithNotFoundItems:(id)arg1;
+ (id)_missingItemsInNotFoundError:(id)arg1 remainingErrors:(id*)arg2;

- (void).cxx_destruct;
- (void)_cacheGroup:(id)arg1 completion:(id /* block */)arg2;
- (void)_didCacheGroup:(id)arg1 completion:(id /* block */)arg2;
- (void)_didCreateGroup:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveDecryptionFailureForGroup:(id)arg1 completion:(id /* block */)arg2;
- (void)_didReceiveRegistrationIdentityUpdateWithCompletion:(id /* block */)arg1;
- (void)_didUpdateGroup:(id)arg1 withNewGroup:(id)arg2 completion:(id /* block */)arg3;
- (void)_dropLocalCache:(id /* block */)arg1;
- (void)_dropLocalCacheForGroupID:(id)arg1 compeltion:(id /* block */)arg2;
- (void)_fetchAllLocalKnownGroups:(id /* block */)arg1;
- (void)_fetchGroupWithGroupID:(id)arg1 skipCache:(bool)arg2 completion:(id /* block */)arg3;
- (void)_groupFromPublicDataRepresentation:(id)arg1 completion:(id /* block */)arg2;
- (id)_middlwareConformingToProtocol:(id)arg1;
- (void)_noteDecryptionFailureForGroup:(id)arg1 completion:(id /* block */)arg2;
- (void)_noteRegistrationIdentityUpdate;
- (void)_participantsForCypher:(id)arg1 completion:(id /* block */)arg2;
- (void)_publicDataRepresentationForGroup:(id)arg1 completion:(id /* block */)arg2;
- (void)_qCacheGroup:(id)arg1 toMiddlewares:(id)arg2 completion:(id /* block */)arg3;
- (id)_qCacheMiddlewares;
- (id)_qCacheMiddlewaresContainedInCost:(long long)arg1;
- (void)_qDidCacheGroup:(id)arg1;
- (void)_qDidCreateGroup:(id)arg1;
- (void)_qDidReceiveDecryptionFailureForGroup:(id)arg1;
- (void)_qDidReceiveRegistrationIdentityUpdate;
- (void)_qDidUpdateGroup:(id)arg1 withGroup:(id)arg2;
- (void)_qFetchCachedGroupWithGroupID:(id)arg1 completion:(id /* block */)arg2;
- (void)_qFetchDataSourceGroupWithGroupID:(id)arg1 completion:(id /* block */)arg2;
- (id)_qObserverMiddlewares;
- (void)_qUpsertGroupWithParticipants:(id)arg1 previousGroup:(id)arg2 sharedApplicationData:(id)arg3 completion:(id /* block */)arg4;
- (void)_validateCachedGroup:(id)arg1 isParentOfGroup:(id)arg2 completion:(id /* block */)arg3;
- (id)accountIdentity;
- (id)allMiddlewares;
- (void)appendMiddleware:(id)arg1;
- (void)cacheIncomingGroup:(id)arg1 completion:(id /* block */)arg2;
- (void)createGroupWithParticipants:(id)arg1 sharedApplicationData:(id)arg2 completion:(id /* block */)arg3;
- (id)dataSource;
- (void)fetchGroupWithGroupID:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchLatestGroupWithStableID:(id)arg1 completion:(id /* block */)arg2;
- (id)initWithAccountIdentity:(id)arg1 dataSource:(id)arg2 queue:(id)arg3;
- (id)middlewares;
- (id)queue;
- (void)removeMiddleware:(id)arg1;
- (void)setAccountIdentity:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setMiddlewares:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)updateGroup:(id)arg1 withParticipants:(id)arg2 sharedApplicationData:(id)arg3 completion:(id /* block */)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

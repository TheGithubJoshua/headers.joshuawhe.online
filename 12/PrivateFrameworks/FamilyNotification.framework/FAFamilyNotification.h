<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FAFamilyNotification.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FamilyNotification.framework/FAFamilyNotification.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FamilyNotification.framework/FamilyNotification (1)
 */

@interface FAFamilyNotification : NSObject <NSSecureCoding> {
    NSString * _actionButtonLabel;
    NSURL * _activateActionURL;
    NSURL * _clearActionURL;
    NSString * _clientIdentifier;
    NSString * _delegateMachServiceName;
    NSURL * _dismissActionlURL;
    unsigned long long  _displayStyle;
    NSDate * _expiryDate;
    NSNumber * _familyMemberDSID;
    bool  _hasActionButton;
    NSString * _identifier;
    NSString * _informativeText;
    NSData * _launchActionArguments;
    NSURL * _launchActionURL;
    NSString * _otherButtonLabel;
    NSDate * _relevanceDate;
    bool  _shouldPersistWhenActivated;
    bool  _shouldPersistWhenDismissed;
    NSString * _title;
    NSString * _unlockActionLabel;
    NSDictionary * _userInfo;
    NSString * _uuid;
}

@property (copy) NSString *actionButtonLabel;
@property (copy) NSURL *activateActionURL;
@property (copy) NSURL *clearActionURL;
@property (copy) NSString *clientIdentifier;
@property (copy) NSString *delegateMachServiceName;
@property (copy) NSURL *dismissActionlURL;
@property unsigned long long displayStyle;
@property (copy) NSDate *expiryDate;
@property (copy) NSNumber *familyMemberDSID;
@property bool hasActionButton;
@property (copy) NSString *identifier;
@property (copy) NSString *informativeText;
@property (copy) NSData *launchActionArguments;
@property (copy) NSURL *launchActionURL;
@property (copy) NSString *otherButtonLabel;
@property (copy) NSDate *relevanceDate;
@property bool shouldPersistWhenActivated;
@property bool shouldPersistWhenDismissed;
@property (copy) NSString *title;
@property (copy) NSString *unlockActionLabel;
@property (copy) NSDictionary *userInfo;
@property (copy) NSString *uuid;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)actionButtonLabel;
- (id)activateActionURL;
- (id)cacheDictionaryRepresentation;
- (id)clearActionURL;
- (id)clientIdentifier;
- (id)delegateMachServiceName;
- (id)description;
- (id)dismissActionlURL;
- (unsigned long long)displayStyle;
- (void)encodeWithCoder:(id)arg1;
- (id)expiryDate;
- (id)familyMemberDSID;
- (bool)hasActionButton;
- (id)identifier;
- (id)informativeText;
- (id)init;
- (id)initWithCacheDictionaryRepresentation:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)launchActionArguments;
- (id)launchActionURL;
- (id)otherButtonLabel;
- (id)relevanceDate;
- (void)setActionButtonLabel:(id)arg1;
- (void)setActivateActionURL:(id)arg1;
- (void)setClearActionURL:(id)arg1;
- (void)setClientIdentifier:(id)arg1;
- (void)setDelegateMachServiceName:(id)arg1;
- (void)setDismissActionlURL:(id)arg1;
- (void)setDisplayStyle:(unsigned long long)arg1;
- (void)setExpiryDate:(id)arg1;
- (void)setFamilyMemberDSID:(id)arg1;
- (void)setHasActionButton:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInformativeText:(id)arg1;
- (void)setLaunchActionArguments:(id)arg1;
- (void)setLaunchActionURL:(id)arg1;
- (void)setOtherButtonLabel:(id)arg1;
- (void)setRelevanceDate:(id)arg1;
- (void)setShouldPersistWhenActivated:(bool)arg1;
- (void)setShouldPersistWhenDismissed:(bool)arg1;
- (void)setTitle:(id)arg1;
- (void)setUnlockActionLabel:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (void)setUuid:(id)arg1;
- (bool)shouldPersistWhenActivated;
- (bool)shouldPersistWhenDismissed;
- (id)title;
- (id)unlockActionLabel;
- (id)userInfo;
- (id)uuid;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TPSSubscriptionLabeler.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TelephonyPreferences.framework/TPSSubscriptionLabeler.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TelephonyPreferences.framework/TelephonyPreferences (1)
 */

@interface TPSSubscriptionLabeler : NSObject {
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSString * _applicableLanguage;
    NSArray * _applicableUnlocalizedLabels;
    NSArray * _cachedResult;
    NSMutableDictionary * _labelDictionary;
    NSLocale * _updatingLocale;
    NSURL * _url;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *accessQueue;
@property (nonatomic, retain) NSString *applicableLanguage;
@property (nonatomic, retain) NSArray *applicableUnlocalizedLabels;
@property (nonatomic, retain) NSArray *cachedResult;
@property (nonatomic, retain) NSMutableDictionary *labelDictionary;
@property (nonatomic, retain) NSLocale *updatingLocale;
@property (nonatomic, retain) NSURL *url;

+ (bool)_dictionary:(id)arg1 containsCollationEquivalentKey:(id)arg2;
+ (id)_groupStringsByCollationEquivalency:(id)arg1;
+ (id)_resultWithAllCharacters:(id /* block */)arg1 string:(id)arg2;
+ (id)displayShortLabelStringsForLongFormShortLabels:(id)arg1;
+ (id)fontAttributeDictionary;
+ (bool)isExclusivelyCJKString:(id)arg1 characterSets:(id)arg2;
+ (bool)isString:(id)arg1 exclusivelyInCharacterSet:(struct USet { }*)arg2;
+ (id)localizedBadgeLabelsForUnlocalizedLabels:(id)arg1;
+ (id)localizedBadgeLabelsForUnlocalizedLabels:(id)arg1 languageIdentifiers:(id)arg2;
+ (id)localizedBadgeLabelsForUnlocalizedLabels:(id)arg1 languageStringOverrides:(id)arg2;
+ (id)localizedLabelForLabel:(id)arg1;
+ (id)localizedLabelForLabel:(id)arg1 longForm:(bool)arg2 languageStringOverrides:(id)arg3;
+ (id)localizedLabelsForLabels:(id)arg1 languageIdentifiers:(id)arg2;
+ (id)localizedLabelsForLabels:(id)arg1 languageStringOverrides:(id)arg2;
+ (id)localizedStringDictionaryForLanguageIdentifiers:(id)arg1 selectedLanguage:(id*)arg2;
+ (id)standardLabelIdentifiers;
+ (id)stringByShorteningString:(id)arg1 maximumWidth:(double)arg2 attributes:(id)arg3;
+ (id)stringsByAbbreviatingToPrefixesOfStrings:(id)arg1;
+ (id)stringsByClippingStrings:(id)arg1 toWidthOfString:(id)arg2;
+ (id)stringsByNumericallyDisambiguatingStrings:(id)arg1;
+ (double)widthOfString:(id)arg1 attributes:(id)arg2;

- (void).cxx_destruct;
- (void)_validateLabelsForInstalledUnlocalizedLabels:(id)arg1 languageIdentifiers:(id)arg2;
- (id)accessQueue;
- (id)applicableLanguage;
- (id)applicableUnlocalizedLabels;
- (id)cachedLocalizedLabelsForUnlocalizedLabels:(id)arg1;
- (id)cachedLocalizedLabelsForUnlocalizedLabels:(id)arg1 languageIdentifiers:(id)arg2;
- (id)cachedResult;
- (id)initWithLabelStorage:(id)arg1;
- (id)labelDictionary;
- (void)setAccessQueue:(id)arg1;
- (void)setApplicableLanguage:(id)arg1;
- (void)setApplicableUnlocalizedLabels:(id)arg1;
- (void)setCachedResult:(id)arg1;
- (void)setLabelDictionary:(id)arg1;
- (void)setUpdatingLocale:(id)arg1;
- (void)setUrl:(id)arg1;
- (id)updatingLocale;
- (id)url;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

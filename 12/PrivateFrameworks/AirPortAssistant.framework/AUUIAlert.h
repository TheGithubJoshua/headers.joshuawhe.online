<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AUUIAlert.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AirPortAssistant.framework/AUUIAlert.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AirPortAssistant.framework/AirPortAssistant (116.11)
 */

@interface AUUIAlert : NSObject <UIAlertViewDelegate> {
    id  alert;
    UIAlertAction * alternateAction;
    long long  alternateButtonIndex;
    NSString * alternateButtonTitle;
    UIAlertAction * cancelAction;
    long long  cancelButtonIndex;
    NSString * cancelButtonTitle;
    id  context;
    <AUUIAlertDelegate> * delegate;
    UIAlertAction * destructiveAction;
    long long  destructiveButtonIndex;
    NSString * destructiveButtonTitle;
    NSString * message;
    bool  modernAlerts;
    UIAlertAction * okAction;
    long long  okButtonIndex;
    NSString * okButtonTitle;
    bool  prepared;
    bool  stackButtons;
    long long  tag;
    NSString * title;
    id  viewController;
}

@property (nonatomic, retain) id alert;
@property (nonatomic, retain) UIAlertAction *alternateAction;
@property (nonatomic, retain) NSString *alternateButtonTitle;
@property (nonatomic, retain) UIAlertAction *cancelAction;
@property (nonatomic, retain) NSString *cancelButtonTitle;
@property (nonatomic, retain) id context;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AUUIAlertDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIAlertAction *destructiveAction;
@property (nonatomic, retain) NSString *destructiveButtonTitle;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *message;
@property (nonatomic, retain) UIAlertAction *okAction;
@property (nonatomic, retain) NSString *okButtonTitle;
@property (nonatomic) bool stackButtons;
@property (readonly) Class superclass;
@property (nonatomic) long long tag;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) id viewController;

- (id)alert;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (bool)alertViewShouldEnableFirstOtherButton:(id)arg1;
- (id)alternateAction;
- (id)alternateButtonTitle;
- (void)applicationDidEnterBackgroundNotification:(id)arg1;
- (id)cancelAction;
- (id)cancelButtonTitle;
- (id)context;
- (void)dealloc;
- (id)delegate;
- (id)destructiveAction;
- (id)destructiveButtonTitle;
- (void)dismissWithCancelActionAnimated:(bool)arg1;
- (void)dismissWithNoActionAnimated:(bool)arg1;
- (void)dismissWithOKActionAnimated:(bool)arg1;
- (void)enableAlternateAction:(bool)arg1;
- (void)enableCancelAction:(bool)arg1;
- (void)enableDestructiveAction:(bool)arg1;
- (void)enableOKAction:(bool)arg1;
- (id)initWithViewController:(id)arg1;
- (id)initWithViewController:(id)arg1 actionSheet:(bool)arg2;
- (id)message;
- (id)okAction;
- (id)okButtonTitle;
- (void)prepareToShow;
- (void)setAlert:(id)arg1;
- (void)setAlternateAction:(id)arg1;
- (void)setAlternateButtonTitle:(id)arg1;
- (void)setCancelAction:(id)arg1;
- (void)setCancelButtonTitle:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDestructiveAction:(id)arg1;
- (void)setDestructiveButtonTitle:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)setOkAction:(id)arg1;
- (void)setOkButtonTitle:(id)arg1;
- (void)setStackButtons:(bool)arg1;
- (void)setTag:(long long)arg1;
- (void)setTitle:(id)arg1;
- (void)setViewController:(id)arg1;
- (void)show;
- (bool)stackButtons;
- (long long)tag;
- (id)title;
- (id)viewController;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

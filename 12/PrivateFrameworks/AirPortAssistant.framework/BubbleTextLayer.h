<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BubbleTextLayer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AirPortAssistant.framework/BubbleTextLayer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AirPortAssistant.framework/AirPortAssistant (116.11)
 */

@interface BubbleTextLayer : CALayer {
    NSMutableArray * _annotationPoints;
    double  _ascent;
    struct CGSize { 
        double width; 
        double height; 
    }  _boundsSizeConstraint;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _bubbleFrame;
    struct CGSize { 
        double width; 
        double height; 
    }  _bubbleSize;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    struct __CTFont { } * _curCTFont;
    double  _descent;
    void * _font;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _fontBounds;
    struct CGColor { } * _generalShadowColor;
    double  _leading;
    CALayer * _leftImageLayer;
    struct CGSize { 
        double width; 
        double height; 
    }  _leftImageLayerSize;
    id  _owningView;
    CALayer * _rightAccessoryLayer;
    struct CGSize { 
        double width; 
        double height; 
    }  _rightAccessoryLayerSize;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _textFrame;
    struct CGSize { 
        double width; 
        double height; 
    }  _textSize;
    struct __CTLine { } * _theLine;
    struct CGColor { } * _whiteShadowColor;
}

@property (nonatomic) struct CGSize { double x1; double x2; } boundsSizeConstraint;
@property (nonatomic, retain) struct CGColor { }*fillColor;
@property (nonatomic, retain) struct CGColor { }*fillColor2;
@property (nonatomic) double fontSize;
@property (nonatomic, retain) struct CGColor { }*foregroundColor;
@property (nonatomic, retain) struct CGColor { }*frameColor;
@property (nonatomic) double frameWidth;
@property (nonatomic, retain) struct CGImage { }*image;
@property (nonatomic) id owningView;
@property (nonatomic, retain) CALayer *rightAccessoryLayer;
@property (nonatomic, retain) id string;
@property (nonatomic, readonly) double textBaselineOffset;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } textFrame;

+ (bool)needsDisplayForKey:(id)arg1;

- (void)addAnnotationPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })boundsSizeConstraint;
- (struct CGSize { double x1; double x2; })calculatePreferredSubframeSizes;
- (void)dealloc;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (struct CGSize { double x1; double x2; })getImagePreferredSize;
- (struct CGSize { double x1; double x2; })getRightAccessoryLayerPreferredSize;
- (struct CGImage { }*)image;
- (id)initWithOwningView:(id)arg1;
- (bool)isAnnotationBubble;
- (void)layoutSublayers;
- (id)owningView;
- (struct CGSize { double x1; double x2; })preferredFrameSize;
- (id)rightAccessoryLayer;
- (void)setBoundsSizeConstraint:(struct CGSize { double x1; double x2; })arg1;
- (void)setFont:(id)arg1;
- (void)setImage:(struct CGImage { }*)arg1;
- (void)setOwningView:(id)arg1;
- (void)setRightAccessoryLayer:(id)arg1;
- (double)textBaselineOffset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })textFrame;
- (struct CGSize { double x1; double x2; })textPreferredFrameSizeForLayerSize:(struct CGSize { double x1; double x2; })arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

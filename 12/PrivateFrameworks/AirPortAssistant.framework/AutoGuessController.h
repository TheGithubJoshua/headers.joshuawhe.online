<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AutoGuessController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AirPortAssistant.framework/AutoGuessController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AirPortAssistant.framework/AirPortAssistant (116.11)
 */

@interface AutoGuessController : AssistantCallbackController {
    struct ACPBrowserSession { } * _acpBrowserSession;
    NSThread * _autoGuessThread;
    bool  _autoJoinState;
    int  _bonjourBrowseStatus;
    NSTimer * _browseReadyTimer;
    NSMutableDictionary * _browsedBases;
    int  _currentAutoGuessUISelector;
    NSString * _currentParamString;
    id  _delegate;
    NSDictionary * _guessCompletionDict;
    struct AutoGuessContext { } * _guessContext;
    int  _lastAutoGuessUISelector;
    NSDictionary * _lastInstrumentation;
    NSString * _lastParamString;
    bool  _onShortTimer;
    NSDictionary * _targetBrowseRecord;
    NSString * _targetMACAddress;
    NSDictionary * _targetScanRecord;
    bool  _updatedTargetInfo;
    NSArray * _wifiScanInfos;
    int  _wifiScanStatus;
    NSDictionary * unconfiguredDeviceThatIsBeingSetup;
}

@property (retain) NSTimer *_browseReadyTimer;
@property (retain) NSMutableDictionary *_browsedBases;
@property (retain) NSArray *_wifiScanInfos;
@property int currentAutoGuessUISelector;
@property (retain) NSString *currentParamString;
@property <AutoGuessUIDelegate> *delegate;
@property (nonatomic, retain) NSDictionary *guessCompletionDict;
@property int lastAutoGuessUISelector;
@property (retain) NSDictionary *lastInstrumentation;
@property (retain) NSString *lastParamString;
@property (retain) NSDictionary *targetBrowseRecord;
@property (retain) NSString *targetMACAddress;
@property (retain) NSDictionary *targetScanRecord;
@property (retain) NSDictionary *unconfiguredDeviceThatIsBeingSetup;

+ (id)fullAutoGuessDictionaryFromCompletionDict:(id)arg1;
+ (bool)isRestoreAnOptionForTheRecommendations:(id)arg1;
+ (id)primaryRecommendationDictionaryFromCompletionDict:(id)arg1;
+ (id)recommendationStringFromCompletionDict:(id)arg1;
+ (id)recommendationToActionChoice:(id)arg1;
+ (id)restoreOfferFromCompletionDict:(id)arg1;
+ (id)restoreRecommendationDictionaryFromCompletionDict:(id)arg1;
+ (id)shortProductNameForUnconfiguredDeviceFromAutoGuessResults:(id)arg1;
+ (id)shortProductNameFromBaseStationDictionary:(id)arg1;
+ (bool)shouldShowPasswordUIForRecommendation:(id)arg1;
+ (id)sourceBaseStationFromRecommendation:(id)arg1;
+ (id)sourceNetworkFromRecommendation:(id)arg1;
+ (id)unconfiguredBaseStationCanBeConfiguredFromCompletionDict:(id)arg1;
+ (id)unconfiguredBaseStationFromGuessCompleteDict:(id)arg1;
+ (id)unconfiguredBaseStationFromRecommendation:(id)arg1;

- (id)_browseReadyTimer;
- (id)_browsedBases;
- (id)_wifiScanInfos;
- (void)autoGuessEngineComplete;
- (int)bonjourBrowseStatus;
- (void)bonjourTXTRemoved:(id)arg1;
- (void)bonjourTXTUpdated:(id)arg1;
- (void)browseReadyTimerCallback:(id)arg1;
- (int)cancelAutoGuess;
- (void)cancelBonjourBrowser;
- (void)cancelWiFiScanner;
- (id)createCompletionDictFromAutoGuessResults:(id)arg1;
- (int)currentAutoGuessUISelector;
- (id)currentParamString;
- (void)dealloc;
- (id)delegate;
- (id)guessCompletionDict;
- (id)init;
- (int)lastAutoGuessUISelector;
- (id)lastInstrumentation;
- (id)lastParamString;
- (bool)okToSwitchToShortBonjourTimeout:(id)arg1;
- (void)runAutoGuessThread:(id)arg1;
- (int)runAutoGuessWithWifiScanInfos:(id)arg1;
- (void)setBonjourBrowseStatus:(int)arg1;
- (void)setCurrentAutoGuessUISelector:(int)arg1;
- (void)setCurrentParamString:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGuessCompletionDict:(id)arg1;
- (void)setLastAutoGuessUISelector:(int)arg1;
- (void)setLastInstrumentation:(id)arg1;
- (void)setLastParamString:(id)arg1;
- (void)setTargetBrowseRecord:(id)arg1;
- (void)setTargetMACAddress:(id)arg1;
- (void)setTargetScanRecord:(id)arg1;
- (void)setUnconfiguredDeviceThatIsBeingSetup:(id)arg1;
- (void)setWiFiScanStatus:(int)arg1;
- (void)set_browseReadyTimer:(id)arg1;
- (void)set_browsedBases:(id)arg1;
- (void)set_wifiScanInfos:(id)arg1;
- (int)startAutoGuessForUnconfiguredMACAddress:(id)arg1 withWifiScanInfos:(id)arg2;
- (void)startAutoGuessIfReady;
- (int)startBonjourBrowser;
- (int)startWiFiScanner;
- (void)stopBonjourBrowser;
- (void)stopWiFiScanner;
- (id)targetBrowseRecord;
- (id)targetInfo;
- (id)targetMACAddress;
- (id)targetScanRecord;
- (void)uiAssetsUpdated:(id)arg1;
- (id)unconfiguredDeviceThatIsBeingSetup;
- (void)updateTargetInfo:(bool)arg1;
- (int)wifiScanStatus;
- (void)wirelessScanDone:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

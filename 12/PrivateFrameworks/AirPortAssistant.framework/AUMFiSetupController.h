<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AUMFiSetupController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AirPortAssistant.framework/AUMFiSetupController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AirPortAssistant.framework/AirPortAssistant (116.11)
 */

@interface AUMFiSetupController : AUSetupController {
    NSDictionary * _accessoryResponseDict;
    NSObject<OS_dispatch_semaphore> * _askUserForPasswordSemaphore;
    NSDictionary * _autoGuessRecommendationDict;
    NSString * _destinationNetworkPassword;
    bool  _destinationNetworkPasswordAccepted;
    NSString * _destinationNetworkSSID;
    NSDictionary * _destinationNetworkScanRecord;
    NSObject<OS_dispatch_semaphore> * _easyConfigConfigurationCompleteSemaphore;
    EasyConfigDevice * _easyConfigDevice;
    struct { 
        double secondsToGetLinkUpOnDestination; 
        int wifiJoinDestinationAPError; 
        unsigned char destinationNetworkPSKInKeychain; 
        unsigned char hitJoiningDestinationAPTimeout; 
        int rssiOfDestinationAP; 
        unsigned int snrOfDestinationAP; 
        unsigned int channelOfDestinationAP; 
    }  _easyConfigPostConfigMetrics;
    struct { 
        double startTime; 
        unsigned char userChangedFriendlyName; 
        unsigned char playPasswordSet; 
        unsigned char adminPasswordSet; 
        unsigned char destinationNetworkRecommendationUsed; 
        double secondsToGetLinkUpOnSWAP; 
        int wifiJoinSWAPError; 
        unsigned char hitJoiningTargetSWAPTimeout; 
        int rssiOfSWAP; 
        unsigned int snrOfSWAP; 
        unsigned int channelOfSWAP; 
    }  _easyConfigPreConfigMetrics;
    long long  _lastHeardEasyConfigProgressNotification;
    NSTimer * _linkUpOnDestinationNetworkTimer;
    NSObject<OS_dispatch_semaphore> * _linkUpOnTargetSWAPSemaphore;
    NSMutableSet * _mfiSetupDelegates;
    NSString * _postConfigTargetDeviceFriendlyName;
    bool  _postediAPAccessoryConfiguredNotification;
    bool  _promptedUserForDestinationWiFiPSK;
    bool  _setupEnded;
    NSDictionary * _setupOptionsDict;
    bool  _successfullyEstablishedLinkOnDestinationAP;
    bool  _successfullyEstablishedLinkOnTargetDeviceSWAP;
    NSDictionary * _targetMFiDeviceScanRecord;
    double  _timeDestinationAPJoinStarted;
    double  _timeSWAPJoinStarted;
    int  _waitingForLinkState;
}

@property (copy) NSString *destinationNetworkPassword;
@property (retain) NSTimer *linkUpOnDestinationNetworkTimer;
@property (nonatomic, readonly) NSMutableSet *setupDelegates;

+ (id)setupController;

- (void)_startEasyConfigWhenReady;
- (void)acquireDestinationNetworkPassword;
- (void)askUserForNetworkPassword:(id)arg1;
- (void)askUserForSetupCodeWithRetryStatus:(bool)arg1;
- (void)askUserForUncertified;
- (void)callbackAskUserForPasswordResult:(int)arg1 password:(id)arg2 remember:(int)arg3;
- (void)callbackAskUserForSetupCodeResult:(int)arg1 password:(id)arg2;
- (void)callbackAskUserForUncertifiedResult:(int)arg1;
- (int)cancelSetup;
- (void)createEasyConfigDeviceConfiguration;
- (void)dealloc;
- (id)destinationNetworkPassword;
- (int)endSetup:(int)arg1;
- (void)handleEasyConfigProgress:(id)arg1;
- (void)handleEasyConfigProgressAppliedConfigurationToDevice:(id)arg1;
- (void)handleEasyConfigProgressSearchingForPostConfigDevice:(id)arg1;
- (void)handleEasyConfigStopped:(id)arg1;
- (id)init;
- (void)invalidateLinkUpOnDestinationNetworkTimer;
- (void)joinDestinationAPDone:(id)arg1;
- (void)joinDestinationNetworkTimeoutFired:(id)arg1;
- (void)joinSWAPDone:(id)arg1;
- (int)joinTargetSWAP;
- (void)linkChangeNotification:(id)arg1;
- (void)linkUpOnDestinationAP:(id)arg1;
- (id)linkUpOnDestinationNetworkTimer;
- (void)linkUpOnSWAP:(id)arg1;
- (void)logCompletionStatus:(int)arg1;
- (int)sendProgressToUI:(int)arg1 withParamDict:(id)arg2;
- (int)sendSetupCompleteToUIWithResult:(int)arg1;
- (int)sendiAPOverWiFiDeviceConfiguredXPCMessage;
- (void)setDestinationNetworkPassword:(id)arg1;
- (void)setLinkUpOnDestinationNetworkTimer:(id)arg1;
- (id)setupDelegates;
- (int)setupFromAutoguessRecommendation:(id)arg1 withOptions:(id)arg2;
- (void)startEasyConfigWhenReady;
- (void)startListeningForEasyConfigDeviceStatusNotifications;
- (void)stopListeningToAllNotifications;
- (void)stopListeningToEasyConfigDeviceStatusNotifications;
- (id)targetBaseInfoDict;
- (int)updateSettingsAsync;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

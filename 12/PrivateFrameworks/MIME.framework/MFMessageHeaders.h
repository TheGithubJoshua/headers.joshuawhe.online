<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MFMessageHeaders.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MIME.framework/MFMessageHeaders.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MIME.framework/MIME (3445.120.0.1.2)
 */

@interface MFMessageHeaders : NSObject <NSCopying, SGHeaderCollection> {
    NSData * _data;
    unsigned int  _preferredEncoding;
}

@property (nonatomic, retain) NSData *data;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned int preferredEncoding;
@property (readonly) Class superclass;

// Image: /System/Library/PrivateFrameworks/MIME.framework/MIME

+ (id)addressListFromEncodedString:(id)arg1;
+ (id)basicHeaders;
+ (id)copyAddressListFromEncodedData:(id)arg1 encoding:(unsigned int)arg2;
+ (id)encodedDataForAddressList:(id)arg1 splittingAtLength:(unsigned long long)arg2 firstLineBuffer:(unsigned long long)arg3;
+ (bool)isStructuredHeaderKey:(id)arg1;
+ (bool)shouldDecodeHeaderForKey:(id)arg1;
+ (id)uniqueHeaderKeyStringForString:(id)arg1;

- (id)_capitalizedKeyForKey:(id)arg1;
- (id)_commaSeparatedValuesForKey:(id)arg1 includeAngleBracket:(bool)arg2;
- (unsigned int)_contentTypeEncoding;
- (id)_copyAddressListForKey:(id)arg1;
- (id)_copyHeaderValueForKey:(id)arg1;
- (id)_copyHeaderValueForKey:(id)arg1 offset:(unsigned long long*)arg2 decoded:(bool)arg3;
- (id)_decodeHeaderKeysFromData:(id)arg1;
- (id)_headerValueForKey:(id)arg1;
- (id)_headerValueForKey:(id)arg1 offset:(unsigned long long*)arg2;
- (bool)_isStructuredHeaderKey:(id)arg1;
- (void)_setCapitalizedKey:(id)arg1 forKey:(id)arg2;
- (id)allHeaderKeys;
- (void)appendHeaderData:(id)arg1 andRecipients:(id)arg2;
- (id)copyAddressListForBcc;
- (id)copyAddressListForCc;
- (id)copyAddressListForReplyTo;
- (id)copyAddressListForResentFrom;
- (id)copyAddressListForSender;
- (id)copyAddressListForTo;
- (id)copyDecodedStringFromHeaderData:(id)arg1 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)copyFirstHeaderForKey:(id)arg1;
- (id)copyFirstNonDecodedHeaderForKey:(id)arg1;
- (id)copyFirstStringValueForKey:(id)arg1;
- (id)copyHeadersForKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)data;
- (void)dealloc;
- (id)description;
- (id)encodedHeaders;
- (id)firstHeaderForKey:(id)arg1;
- (id)firstSenderAddress;
- (bool)hasHeaderForKey:(id)arg1;
- (id)headerData;
- (id)headersDictionary;
- (id)headersForKey:(id)arg1;
- (id)init;
- (id)initWithASCIIHeaderString:(id)arg1;
- (id)initWithHeaderData:(id)arg1 encoding:(unsigned int)arg2;
- (id)listUnsubscribeCommands;
- (bool)messageIsFromEntourage;
- (id)mutableCopy;
- (unsigned int)preferredEncoding;
- (id)references;
- (void)setData:(id)arg1;
- (void)setPreferredEncoding:(unsigned int)arg1;

// Image: /System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals

- (id)sg_firstHeaderForKey:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

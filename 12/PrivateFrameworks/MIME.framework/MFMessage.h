<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MFMessage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MIME.framework/MFMessage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MIME.framework/MIME (3445.120.0.1.2)
 */

@interface MFMessage : NSObject <NSCopying> {
    NSArray * _bcc;
    NSString * _cachedMessageIDHeader;
    unsigned int  _calculatedAttachmentInfo;
    NSArray * _cc;
    NSString * _contentType;
    long long  _conversationID;
    unsigned int  _dateReceivedInterval;
    unsigned int  _dateSentInterval;
    NSString * _externalID;
    unsigned long long  _generationNumber;
    long long  _listIDHash;
    long long  _messageIDHeaderHash;
    NSURL * _messageURL;
    unsigned short  _numberOfAttachments;
    MFMimePart * _parentPart;
    unsigned int  _preferredEncoding;
    NSArray * _sender;
    NSString * _senderAddressComment;
    MFMessageStore * _store;
    NSString * _subject;
    NSString * _summary;
    NSArray * _to;
}

@property (nonatomic, retain) MFMimePart *parentPart;

+ (Class)dataMessageStoreToUse;
+ (id)messageWithRFC822Data:(id)arg1;
+ (id)messageWithRFC822Data:(id)arg1 withParentPart:(id)arg2;
+ (id)messageWithRFC822Data:(id)arg1 withParentPart:(id)arg2 generateMessageIDHash:(bool)arg3;
+ (void)setMessageClassForStore:(id)arg1;

- (void)_calculateAttachmentInfoFromBody:(id)arg1;
- (id)_copyDateFromDateHeaderInHeaders:(id)arg1;
- (id)_copyDateFromReceivedHeadersInHeaders:(id)arg1;
- (bool)_doesDateAppearToBeSane:(id)arg1;
- (long long)_messageIDHeaderHashIvar;
- (void)_setDateReceivedFromHeaders:(id)arg1;
- (void)_setDateSentFromHeaders:(id)arg1;
- (id)additionalHeadersForForward;
- (id)additionalHeadersForReply;
- (id)attachmentStorageLocation;
- (id)bcc;
- (id)bccIfCached;
- (id)bestAlternativeInPart:(id)arg1;
- (id)bodyData;
- (id)bodyDataIsComplete:(bool*)arg1;
- (id)bodyDataIsComplete:(bool*)arg1 isPartial:(bool*)arg2;
- (id)bodyDataIsComplete:(bool*)arg1 isPartial:(bool*)arg2 downloadIfNecessary:(bool)arg3;
- (void)calculateAttachmentInfoFromBody:(id)arg1;
- (bool)calculatedNumberOfAttachments;
- (bool)canBeTriaged;
- (id)cc;
- (id)ccIfCached;
- (id)contentType;
- (long long)conversationID;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dataConsumerForMimePart:(id)arg1;
- (id)dataForMimePart:(id)arg1;
- (id)dataForMimePart:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 isComplete:(bool*)arg3;
- (id)dataForMimePart:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 isComplete:(bool*)arg3 downloadIfNecessary:(bool)arg4 didDownload:(bool*)arg5;
- (id)dataPathForMimePart:(id)arg1;
- (id)dateReceived;
- (double)dateReceivedAsTimeIntervalSince1970;
- (id)dateSent;
- (double)dateSentAsTimeIntervalSince1970;
- (void)dealloc;
- (id)defaultAlternativeInPart:(id)arg1;
- (void)deleteBodyData;
- (id)externalID;
- (bool)fetchDataForMimePart:(id)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 withConsumer:(id)arg3 isComplete:(bool*)arg4 downloadIfNecessary:(bool)arg5;
- (unsigned long long)fileSize;
- (id)firstSender;
- (long long)generationCompare:(id)arg1;
- (unsigned long long)generationNumber;
- (id)headerData;
- (id)headerDataDownloadIfNecessary:(bool)arg1;
- (id)headers;
- (id)headersIfAvailable;
- (id)init;
- (bool)isLibraryMessage;
- (bool)isMessageContentsLocallyAvailable;
- (long long)listIDHash;
- (void)loadCachedHeaderValuesFromHeaders:(id)arg1;
- (id)messageBody;
- (id)messageBodyIfAvailable;
- (id)messageBodyIfAvailableUpdatingFlags:(bool)arg1;
- (id)messageBodyUpdatingFlags:(bool)arg1;
- (id)messageData;
- (bool)messageData:(id*)arg1 messageSize:(unsigned long long*)arg2 isComplete:(bool*)arg3 downloadIfNecessary:(bool)arg4;
- (id)messageDataHolder;
- (bool)messageDataHolder:(id*)arg1 messageSize:(unsigned long long*)arg2 isComplete:(bool*)arg3 downloadIfNecessary:(bool)arg4;
- (id)messageDataHolderIsComplete:(bool*)arg1 downloadIfNecessary:(bool)arg2;
- (id)messageDataIsComplete:(bool*)arg1 downloadIfNecessary:(bool)arg2;
- (id)messageID;
- (long long)messageIDHash;
- (id)messageIDHeader;
- (id)messageIDHeaderInFortyBytesOrLess;
- (unsigned long long)messageSize;
- (id)messageStore;
- (id)messageURL;
- (bool)needsDateReceived;
- (unsigned short)numberOfAttachments;
- (id)parentPart;
- (id)path;
- (id)persistentID;
- (id)preferredEmailAddressToReplyWith;
- (unsigned int)preferredEncoding;
- (id)remoteID;
- (id)senderAddressComment;
- (id)senders;
- (id)sendersIfCached;
- (void)setBcc:(id)arg1;
- (void)setCc:(id)arg1;
- (void)setContentType:(id)arg1;
- (void)setConversationID:(long long)arg1;
- (void)setDateReceivedTimeIntervalSince1970:(double)arg1;
- (void)setDateSentTimeIntervalSince1970:(double)arg1;
- (void)setExternalID:(id)arg1;
- (void)setGenerationNumber:(unsigned long long)arg1;
- (void)setListIDHash:(long long)arg1;
- (void)setMessageData:(id)arg1 isPartial:(bool)arg2;
- (void)setMessageIDHash:(long long)arg1;
- (void)setMessageIDHeader:(id)arg1;
- (void)setMessageInfo:(id)arg1 to:(id)arg2 cc:(id)arg3 bcc:(id)arg4 sender:(id)arg5 dateReceivedTimeIntervalSince1970:(double)arg6 dateSentTimeIntervalSince1970:(double)arg7 messageIDHash:(long long)arg8 conversationID:(long long)arg9 summary:(id)arg10;
- (void)setMessageInfoFromMessage:(id)arg1;
- (void)setMessageStore:(id)arg1;
- (void)setMessageURL:(id)arg1;
- (void)setNumberOfAttachments:(unsigned int)arg1;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(bool)arg2 isEncrypted:(bool)arg3;
- (void)setParentPart:(id)arg1;
- (void)setPreferredEncoding:(unsigned int)arg1;
- (void)setSender:(id)arg1;
- (void)setSubject:(id)arg1;
- (void)setSubject:(id)arg1 to:(id)arg2 cc:(id)arg3 bcc:(id)arg4 sender:(id)arg5 dateReceived:(double)arg6 dateSent:(double)arg7 messageIDHash:(long long)arg8 conversationIDHash:(long long)arg9 summary:(id)arg10 withOptions:(unsigned int)arg11;
- (void)setTo:(id)arg1;
- (id)subject;
- (id)subjectIfCached;
- (id)summary;
- (id)to;
- (id)toIfCached;
- (unsigned int)uid;
- (id)uniqueArray:(id)arg1 withStore:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

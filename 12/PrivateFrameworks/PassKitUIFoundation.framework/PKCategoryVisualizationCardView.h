<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKCategoryVisualizationCardView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUIFoundation.framework/PKCategoryVisualizationCardView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUIFoundation.framework/PassKitUIFoundation ()
 */

@interface PKCategoryVisualizationCardView : UIView <MTKViewDelegate, PKMotionManagerClientProtocol> {
    bool  _blurDisabled;
    MPSUnaryImageKernel * _blurShader;
    NSArray * _bucketColors;
    <MTLBuffer> * _circleDataBuffer;
    <MTLRenderPipelineState> * _circleOutlinePipelineState;
    <MTLRenderPipelineState> * _circlePipelineState;
    <MTLBuffer> * _circleUniformsBuffer;
    <MTLCommandQueue> * _commandQueue;
    <MTLDevice> * _device;
    bool  _effectivePaused;
    bool  _emptying;
    bool  _hasPendingUpdate;
    bool  _invalidated;
    <MTLLibrary> * _library;
    NSSet * _magnitudes;
    MTKView * _metalView;
    bool  _motionEnabled;
    bool  _needsDraw;
    <MTLTexture> * _overlayNormalTexture;
    <MTLRenderPipelineState> * _overlayPipelineState;
    <MTLTexture> * _overlayTexture;
    bool  _paused;
    long long  _pendingUpdateStyle;
    <MTLBuffer> * _singleCircleDataBuffer;
    struct { 
        double startTime; 
        unsigned long long bucketCount; 
        double *magnitudeForBucket; 
        /* Warning: Unrecognized filer type: '"' using 'void*' */ void**colorForBucket; 
    }  _state;
    <MTLTexture> * _texture;
    <MTLBuffer> * _textureCoordsBuffer;
    <MTLBuffer> * _vertexCoordsBuffer;
}

@property (getter=isBlurDisabled, nonatomic) bool blurDisabled;
@property (nonatomic, copy) NSArray *bucketColors;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSSet *magnitudes;
@property (getter=isMotionEnabled, nonatomic) bool motionEnabled;
@property (getter=isPaused, nonatomic) bool paused;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_calculateNewCirclePositions;
- (void)_createMetalResourcesWithTextures:(id)arg1;
- (void)_empty;
- (id)_makePipelineStateWithVertexFunction:(id)arg1 fragmentFunction:(id)arg2;
- (void)_startMotionUpdates;
- (void)_stopMotionUpdates;
- (void)_updateCircles;
- (void)_updatePausedState;
- (void)_updateTextureAndBlurShader;
- (id)bucketColors;
- (void)dealloc;
- (void)didMoveToWindow;
- (void)drawInMTKView:(id)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)invalidate;
- (bool)isBlurDisabled;
- (bool)isMotionEnabled;
- (bool)isPaused;
- (void)layoutSubviews;
- (id)magnitudes;
- (void)motionManager:(id)arg1 didReceiveMotion:(id)arg2;
- (void)mtkView:(id)arg1 drawableSizeWillChange:(struct CGSize { double x1; double x2; })arg2;
- (void)renderWithTextures:(id)arg1 rendererState:(id)arg2;
- (id)rendererState;
- (void)setBlurDisabled:(bool)arg1;
- (void)setBucketColors:(id)arg1;
- (void)setMagnitudes:(id)arg1 withStyle:(long long)arg2;
- (void)setMotionEnabled:(bool)arg1;
- (void)setPaused:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKFingerprintGlyphView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUIFoundation.framework/PKFingerprintGlyphView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUIFoundation.framework/PassKitUIFoundation ()
 */

@interface PKFingerprintGlyphView : UIView <PKMicaResizableView> {
    CALayer * _backgroundLayer;
    NSArray * _backgroundShapeLayers;
    CALayer * _contentLayer;
    <PKFingerprintGlyphViewDelegate> * _delegate;
    bool  _fadeOnRecognized;
    CALayer * _foregroundLayer;
    CALayer * _foregroundRingContainerLayer;
    NSArray * _foregroundRingShapeLayers;
    NSArray * _foregroundShapeLayers;
    double  _lastAnimationWillFinish;
    CALayer * _maskForegroundLayer;
    CALayer * _maskLayer;
    UIColor * _primaryColor;
    long long  _priorState;
    bool  _rotatingRing;
    NSString * _rotationAnimationKey;
    UIColor * _secondaryColor;
    long long  _state;
    NSMutableArray * _transitionCompletionHandlers;
    unsigned long long  _transitionIndex;
    bool  _transitioning;
}

@property (nonatomic, readonly) CALayer *contentLayer;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKFingerprintGlyphViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool fadeOnRecognized;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) UIColor *primaryColor;
@property (nonatomic, copy) UIColor *secondaryColor;
@property (nonatomic, readonly) long long state;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_continueHoldingStateForPathAtIndex:(unsigned long long)arg1 withTransitionIndex:(unsigned long long)arg2;
- (void)_endRotationAnimation;
- (void)_executeAfterMinimumAnimationDurationForStateTransition:(id /* block */)arg1;
- (void)_executeTransitionCompletionHandlers:(bool)arg1;
- (void)_finishTransitionForIndex:(unsigned long long)arg1;
- (double)_minimumAnimationDurationForStateTransition;
- (void)_performTransitionWithTransitionIndex:(unsigned long long)arg1 animated:(bool)arg2;
- (void)_restartRotationIfNecessary;
- (void)_setProgress:(double)arg1 withDuration:(double)arg2 forShapeLayerAtIndex:(unsigned long long)arg3;
- (void)_setRingState:(unsigned long long)arg1 withTransitionIndex:(unsigned long long)arg2 animated:(bool)arg3;
- (void)_showFingerprintWithTransitionIndex:(unsigned long long)arg1 animated:(bool)arg2;
- (void)_startRecognitionHoldingStateWithTransitionIndex:(unsigned long long)arg1;
- (void)_startRotationAnimation;
- (void)_updateLastAnimationTimeWithAnimationOfDuration:(double)arg1;
- (void)_updateRotationAnimationsIfNecessary;
- (struct CGSize { double x1; double x2; })boundsSizeToMatchPointScale:(double)arg1;
- (id)contentLayer;
- (void)dealloc;
- (id)delegate;
- (void)didMoveToWindow;
- (bool)fadeOnRecognized;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (id)pathStateForLayer:(id)arg1;
- (double)pointScaleToMatchBoundsSize:(struct CGSize { double x1; double x2; })arg1;
- (id)primaryColor;
- (id)secondaryColor;
- (void)setContentLayerOpacity:(double)arg1 withDuration:(double)arg2;
- (void)setDelegate:(id)arg1;
- (void)setFadeOnRecognized:(bool)arg1;
- (void)setPathState:(id)arg1 forLayer:(id)arg2;
- (void)setPrimaryColor:(struct UIColor { Class x1; }*)arg1;
- (void)setPrimaryColor:(struct UIColor { Class x1; }*)arg1 animated:(bool)arg2;
- (void)setProgress:(double)arg1 withDuration:(double)arg2;
- (void)setRecognizedIfNecessaryWithCompletion:(id /* block */)arg1;
- (void)setSecondaryColor:(struct UIColor { Class x1; }*)arg1;
- (void)setSecondaryColor:(struct UIColor { Class x1; }*)arg1 animated:(bool)arg2;
- (void)setState:(long long)arg1 animated:(bool)arg2 completionHandler:(id /* block */)arg3;
- (long long)state;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

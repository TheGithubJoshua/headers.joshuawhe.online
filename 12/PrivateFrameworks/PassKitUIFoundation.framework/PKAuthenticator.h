<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKAuthenticator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUIFoundation.framework/PKAuthenticator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUIFoundation.framework/PassKitUIFoundation ()
 */

@interface PKAuthenticator : NSObject {
    unsigned long long  _authenticationIdentifier;
    PKAuthenticatorEvaluationContext * _context;
    NSObject<OS_dispatch_queue> * _contextMutationQueue;
    <PKAuthenticatorDelegate> * _delegate;
    double  _fingerPresentTimeout;
    bool  _invalidated;
}

@property (nonatomic, readonly) unsigned long long authenticationIdentifier;
@property (nonatomic, readonly) long long coachingState;
@property (nonatomic) <PKAuthenticatorDelegate> *delegate;
@property (nonatomic, readonly) bool fingerPresent;
@property (nonatomic) double fingerPresentTimeout;
@property (nonatomic, readonly) bool fingerPresentTimeoutExpired;
@property (nonatomic, readonly) bool fingerPresentTimeoutRequired;
@property (nonatomic, readonly) bool passcodeActive;
@property (nonatomic, readonly) bool passcodeWasPresented;
@property (nonatomic, readonly) bool passphraseActive;
@property (nonatomic, readonly) bool userIntentAvailable;

+ (unsigned long long)_currentStateForMechanisms:(id)arg1;
+ (unsigned long long)cachedStateForPolicy:(long long)arg1;
+ (unsigned long long)currentStateForAccessControl:(struct __SecAccessControl { }*)arg1;
+ (unsigned long long)currentStateForPolicy:(long long)arg1;
+ (void)delayCoachingStateTransition;
+ (bool)isUserIntentAvailable;
+ (void)preheatAuthenticator;
+ (void)removeUserIntentAvailable;
+ (void)resetSharedRootContextWithCompletion:(id /* block */)arg1;
+ (id)viewServiceBundleID;

- (void).cxx_destruct;
- (id)_context;
- (void)_contextChanged;
- (bool)_delegateSupportsPasscodePresentation;
- (bool)_delegateSupportsPassphrasePresentation;
- (void)_evaluateEvaluationContext:(id)arg1;
- (void)_handleInstructionsForRequest:(id)arg1 withContext:(id)arg2 completion:(id /* block */)arg3;
- (id)_optionsForEvaluationRequest:(id)arg1;
- (id)_swapContext:(id)arg1;
- (id)_swapContext:(id)arg1 withOptions:(unsigned long long)arg2;
- (void)accessExternalizedContextWithCompletion:(id /* block */)arg1;
- (unsigned long long)authenticationIdentifier;
- (void)cancelEvaluation;
- (void)cancelEvaluationWithOptions:(unsigned long long)arg1;
- (long long)coachingState;
- (void)dealloc;
- (id)delegate;
- (void)evaluateRequest:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)fallbackToSystemPasscodeUI;
- (bool)fingerPresent;
- (double)fingerPresentTimeout;
- (bool)fingerPresentTimeoutExpired;
- (bool)fingerPresentTimeoutRequired;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (void)invalidate;
- (bool)passcodeActive;
- (bool)passcodeWasPresented;
- (bool)passphraseActive;
- (void)restartEvaluation;
- (void)setDelegate:(id)arg1;
- (void)setFingerPresentTimeout:(double)arg1;
- (void)setFingerPresentTimeout:(double)arg1 preventRestart:(bool)arg2;
- (bool)userIntentAvailable;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CoreDAVDiscoveryTaskGroup.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreDAV.framework/CoreDAVDiscoveryTaskGroup.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV (347)
 */

@interface CoreDAVDiscoveryTaskGroup : CoreDAVTaskGroup <CoreDAVOptionsTaskDelegate, CoreDAVPropFindTaskDelegate> {
    bool  _didReceiveAuthenticationError;
    <CoreDAVAccountInfoProvider> * _discoveredAccountInfo;
    NSMutableArray * _discoveries;
    NSArray * _httpPorts;
    NSString * _httpServiceString;
    NSArray * _httpsPorts;
    NSString * _httpsServiceString;
    NSArray * _potentialContextPaths;
    NSString * _requiredComplianceClass;
    bool  _shouldBailEarly;
    NSString * _wellKnownPath;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CoreDAVDiscoveryTaskGroupDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didReceiveAuthenticationError;
@property (nonatomic, retain) <CoreDAVAccountInfoProvider> *discoveredAccountInfo;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSArray *potentialContextPaths;
@property (nonatomic) bool shouldBailEarly;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *wellKnownPath;

- (void).cxx_destruct;
- (void)addToDiscoveryArray:(id*)arg1 discovery:(id)arg2;
- (id)allDiscoveryPaths:(id)arg1;
- (id)allDiscoveryPorts:(id)arg1 withScheme:(id)arg2;
- (void)cancelTaskGroup;
- (id)cleanedStringsFromResponseHeaders:(id)arg1 forHeader:(id)arg2;
- (void)completeDiscovery:(id)arg1 error:(id)arg2;
- (void)completeOptionsTask:(id)arg1 error:(id)arg2;
- (bool)didReceiveAuthenticationError;
- (id)discoveredAccountInfo;
- (id)extractPrincipalURLFromPropFindTask:(id)arg1 error:(id*)arg2;
- (void)getDiscoveryStatus:(id)arg1 priorFailed:(id*)arg2 subsequentFailed:(id*)arg3 priorIncomplete:(id*)arg4 subsequentIncomplete:(id*)arg5 priorSuccess:(id*)arg6 subsequentSuccess:(id*)arg7;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2 httpPorts:(id)arg3 httpsPorts:(id)arg4 httpServiceString:(id)arg5 httpsServiceString:(id)arg6 wellKnownPath:(id)arg7 potentialContextPaths:(id)arg8 requiredComplianceClass:(id)arg9;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2 httpPorts:(id)arg3 httpsPorts:(id)arg4 httpServiceString:(id)arg5 httpsServiceString:(id)arg6 wellKnownPaths:(id)arg7 requiredComplianceClass:(id)arg8;
- (void)noteDefinitiveAuthFailureFromTask:(id)arg1;
- (void)optionsTask:(id)arg1 error:(id)arg2;
- (id)potentialContextPaths;
- (id)propFindProperties;
- (void)propFindTaskFinished:(id)arg1;
- (void)setDidReceiveAuthenticationError:(bool)arg1;
- (void)setDiscoveredAccountInfo:(id)arg1;
- (void)setPotentialContextPaths:(id)arg1;
- (void)setShouldBailEarly:(bool)arg1;
- (void)setWellKnownPath:(id)arg1;
- (id)setupDiscoveries:(id)arg1 withSchemes:(id)arg2;
- (bool)shouldBailEarly;
- (void)srvLookupTask:(id)arg1 error:(id)arg2;
- (void)startOptionsTask:(id)arg1;
- (void)startPropfindTask:(id)arg1;
- (void)startSRVLookup:(id)arg1 serviceString:(id)arg2;
- (void)startTaskGroup;
- (void)startWellKnownFallbackHeadTask:(id)arg1 withURL:(id)arg2;
- (void)startWellKnownLocationTask:(id)arg1 withURL:(id)arg2;
- (void)syncAway;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)taskGroupWillCancelWithError:(id)arg1;
- (id)wellKnownPath;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

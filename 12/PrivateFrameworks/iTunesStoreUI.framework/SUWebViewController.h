<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SUWebViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iTunesStoreUI.framework/SUWebViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI (1)
 */

@interface SUWebViewController : SUViewController <SUWebViewDelegate, SUWebViewManagerDelegate> {
    ACAccount * _account;
    SSMutableAuthenticationContext * _authenticationContext;
    SUDelayedNavigationItem * _delayedNavigationItem;
    NSURL * _displayedURL;
    bool  _hasEverAppeared;
    long long  _lastKnownOrientation;
    id /* block */  _loadBlock;
    SUMescalSession * _mescalSession;
    SUObjectPool * _objectPool;
    ISURLRequestPerformance * _performanceMetrics;
    long long  _scheduledOrientation;
    bool  _shouldSignRequests;
    SUStorePageProtocol * _storePageProtocol;
    long long  _style;
    NSDictionary * _tidHeaders;
    NSURL * _url;
    bool  _viewIsReady;
    SUWebView * _webView;
    SUWebViewManager * _webViewManager;
}

@property (getter=_mescalSession, setter=_setMescalSession:, nonatomic, retain) SUMescalSession *_mescalSession;
@property (getter=_performanceMetrics, setter=_setPerformanceMetrics:, nonatomic, retain) ISURLRequestPerformance *_performanceMetrics;
@property (nonatomic, retain) ACAccount *account;
@property (nonatomic, copy) SSAuthenticationContext *authenticationContext;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool shouldSignRequests;
@property (nonatomic) long long style;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSDictionary *tidHeaders;
@property (nonatomic) bool viewIsReady;
@property (nonatomic, readonly) SUWebView *webView;

- (void)_addPlaceholderBackgroundView;
- (void)_applySavedScrollOffsetIfPossible;
- (void)_applyScriptProperties:(id)arg1;
- (id)_defaultBackgroundColor;
- (void)_finishLoadWithResult:(bool)arg1 error:(id)arg2;
- (void)_getURLRequestForOperation:(id)arg1 block:(id /* block */)arg2;
- (void)_loadURLRequest:(id)arg1;
- (void)_loadWithURLOperation:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)_mescalSession;
- (id)_performanceMetrics;
- (id)_placeholderBackgroundView;
- (void)_prepareToLoadURL:(id)arg1;
- (void)_reloadBackgroundViewPropertiesWithScriptProperties:(id)arg1;
- (void)_reloadObjectPool;
- (void)_reloadPlaceholderBackgroundView;
- (void)_reloadUI;
- (void)_removePlaceholderBackgroundView;
- (void)_requestWebScriptReloadWithContext:(id)arg1;
- (void)_sendOrientationWillChangeToInterfaceOrientation:(long long)arg1;
- (void)_setExistingNavigationItem:(id)arg1;
- (void)_setLastKnownOrientation:(long long)arg1;
- (void)_setMescalSession:(id)arg1;
- (void)_setPerformanceMetrics:(id)arg1;
- (id)account;
- (void)applicationDidEnterBackground;
- (void)applicationWillEnterForeground;
- (id)authenticationContext;
- (id)copyArchivableContext;
- (id)copyDefaultScriptProperties;
- (id)copyObjectForScriptFromPoolWithClass:(Class)arg1;
- (id)copyScriptProperties;
- (void)dealloc;
- (id)displayedURL;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })documentBounds;
- (void)invalidate;
- (void)keyboardDidHideWithInfo:(id)arg1;
- (void)keyboardWillShowWithInfo:(id)arg1;
- (void)loadView;
- (struct CGSize { double x1; double x2; })minimumViewSize;
- (id)navigationItemForScriptInterface;
- (id)newRotationController;
- (id)newScriptInterface;
- (id)newScriptInterfaceForWebViewManager:(id)arg1;
- (void)parentViewControllerHierarchyDidChange;
- (void)presentViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)reloadWithStorePage:(id)arg1 forURL:(id)arg2;
- (void)setAccount:(id)arg1;
- (void)setAuthenticationContext:(id)arg1;
- (void)setScriptProperties:(id)arg1;
- (void)setShouldSignRequests:(bool)arg1;
- (void)setStorePageProtocol:(id)arg1;
- (void)setStyle:(long long)arg1;
- (void)setTidHeaders:(id)arg1;
- (void)setViewIsReady:(bool)arg1;
- (bool)shouldSignRequests;
- (void)storePageCleanupBeforeTearDown;
- (id)storePageProtocol;
- (void)storePageProtocolDidChange;
- (long long)style;
- (id)tidHeaders;
- (id)viewControllerForWebViewManager:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (bool)viewIsReady;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (id)webView;
- (void)webViewManager:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewManager:(id)arg1 didReceivePrimaryResponse:(id)arg2;
- (void)webViewManager:(id)arg1 didReceiveTitle:(id)arg2;
- (void)webViewManager:(id)arg1 didRejectInvalidRequest:(id)arg2;
- (void)webViewManager:(id)arg1 webDocumentViewDidSetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)webViewManager:(id)arg1 willInjectScriptInterface:(id)arg2;
- (void)webViewManagerDidFinishLoad:(id)arg1;
- (void)webViewManagerDidStartLoad:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

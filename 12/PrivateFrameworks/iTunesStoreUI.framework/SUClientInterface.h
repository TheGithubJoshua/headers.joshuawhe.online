<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SUClientInterface.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iTunesStoreUI.framework/SUClientInterface.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI (1)
 */

@interface SUClientInterface : NSObject {
    SUUIAppearance * _appearance;
    NSString * _applicationIdentifier;
    NSString * _applicationVersion;
    NSString * _askToBuyApprovalPrompt;
    NSString * _clientIdentifier;
    UIColor * _darkKeyColor;
    <SUClientInterfaceDelegatePrivate> * _delegate;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _ignoreDefaultKeyboardNotifications;
    bool  _ignoresExpectedClientsProtocol;
    bool  _inAskToBuyApprovalFlow;
    UIColor * _lightKeyColor;
    NSString * _localStoragePath;
    SUPurchaseManager * _purchaseManager;
    SUQueueSessionManager * _queueSessionManager;
    NSMutableDictionary * _urlBagKeys;
    NSString * _userAgent;
    SUViewControllerFactory * _viewControllerFactory;
    bool  _wasLaunchedFromLibrary;
    bool  inAskToBuyApprovalFlow;
}

@property (getter=_ignoresExpectedClientsProtocol, setter=_setIgnoresExpectedClientsProtocol:) bool _ignoresExpectedClientsProtocol;
@property (copy) SUUIAppearance *appearance;
@property (copy) NSString *applicationIdentifier;
@property (copy) NSString *applicationVersion;
@property (nonatomic, copy) NSString *askToBuyApprovalPrompt;
@property (copy) NSString *clientIdentifier;
@property (nonatomic, copy) UIColor *darkKeyColor;
@property (nonatomic) <SUClientInterfaceDelegate> *delegate;
@property bool ignoreDefaultKeyboardNotifications;
@property bool inAskToBuyApprovalFlow;
@property (nonatomic, copy) UIColor *lightKeyColor;
@property (copy) NSString *localStoragePath;
@property (nonatomic, readonly) SUPreviewOverlayViewController *previewOverlay;
@property (retain) SUPurchaseManager *purchaseManager;
@property (retain) SUQueueSessionManager *queueSessionManager;
@property (nonatomic, readonly) SUTabBarController *tabBarController;
@property (copy) NSString *userAgent;
@property (retain) SUViewControllerFactory *viewControllerFactory;
@property bool wasLaunchedFromLibrary;

+ (id)_defaultApplicationIdentifier;
+ (id)_defaultApplicationVersion;

- (id)URLBagKeyForIdentifier:(id)arg1;
- (void)_dismissModalViewControllerFromViewController:(id)arg1 withTransition:(int)arg2;
- (void)_dismissViewControllerFromViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)_dispatchOnPageResponseWithData:(id)arg1 response:(id)arg2;
- (void)_dispatchXEvent:(id)arg1 withCompletionBlock:(id /* block */)arg2;
- (void)_exitStoreWithReason:(long long)arg1;
- (void)_hidePreviewOverlayAnimated:(bool)arg1;
- (bool)_ignoresExpectedClientsProtocol;
- (void)_mediaPlayerViewControllerWillDismiss:(id)arg1 animated:(bool)arg2;
- (id)_newScriptInterface;
- (void)_presentDialog:(id)arg1;
- (void)_presentViewController:(id)arg1 fromViewController:(id)arg2 withTransition:(int)arg3;
- (void)_returnToLibrary;
- (void)_setIgnoresExpectedClientsProtocol:(bool)arg1;
- (void)_setStatusBarHidden:(bool)arg1 withAnimation:(long long)arg2;
- (void)_setStatusBarStyle:(long long)arg1 animated:(bool)arg2;
- (void)_showPreviewOverlayAnimated:(bool)arg1;
- (id)appearance;
- (id)applicationIdentifier;
- (id)applicationVersion;
- (id)askToBuyApprovalPrompt;
- (id)clientIdentifier;
- (id)darkKeyColor;
- (void)dealloc;
- (id)delegate;
- (bool)ignoreDefaultKeyboardNotifications;
- (bool)inAskToBuyApprovalFlow;
- (id)init;
- (id)lightKeyColor;
- (id)localStoragePath;
- (id)previewOverlay;
- (id)purchaseManager;
- (id)queueSessionManager;
- (void)setAppearance:(id)arg1;
- (void)setApplicationIdentifier:(id)arg1;
- (void)setApplicationVersion:(id)arg1;
- (void)setAskToBuyApprovalPrompt:(id)arg1;
- (void)setClientIdentifier:(id)arg1;
- (void)setDarkKeyColor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIgnoreDefaultKeyboardNotifications:(bool)arg1;
- (void)setInAskToBuyApprovalFlow:(bool)arg1;
- (void)setLightKeyColor:(id)arg1;
- (void)setLocalStoragePath:(id)arg1;
- (void)setPurchaseManager:(id)arg1;
- (void)setQueueSessionManager:(id)arg1;
- (void)setURLBagKey:(id)arg1 forIdentifier:(id)arg2;
- (void)setUserAgent:(id)arg1;
- (void)setViewControllerFactory:(id)arg1;
- (void)setWasLaunchedFromLibrary:(bool)arg1;
- (id)tabBarController;
- (id)userAgent;
- (id)viewControllerFactory;
- (bool)wasLaunchedFromLibrary;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

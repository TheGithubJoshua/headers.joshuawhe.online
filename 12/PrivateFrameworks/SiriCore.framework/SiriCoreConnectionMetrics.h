<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SiriCoreConnectionMetrics.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SiriCore.framework/SiriCoreConnectionMetrics.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SiriCore.framework/SiriCore (1)
 */

@interface SiriCoreConnectionMetrics : NSObject {
    NSNumber * _attemptCount;
    NSString * _carrierName;
    NSNumber * _connectedSubflowCount;
    NSNumber * _connectionDelay;
    NSString * _connectionEdgeID;
    NSString * _connectionEdgeType;
    NSNumber * _connectionEstablishmentTimeMsec;
    NSNumber * _connectionFallbackReason;
    NSString * _connectionMethod;
    NSArray * _connectionMethodHistory;
    NSNumber * _connectionStartTimeToConnectionEstablishmentTimeMsec;
    NSNumber * _connectionStartTimeToDNSResolutionTimeMsec;
    NSNumber * _connectionStartTimeToTLSHandshakeTimeMsec;
    NSNumber * _dnsResolutionTime;
    NSNumber * _firstTxByteDelay;
    NSDictionary * _flowNetworkInterfaceType;
    NSNumber * _idsLastMessageDelay;
    NSNumber * _idsLastSocketDelay;
    NSNumber * _idsLastSocketOpenError;
    NSNumber * _isCaptive;
    NSNumber * _meanPing;
    NSNumber * _metricsCount;
    NSNumber * _pingCount;
    NSString * _policyId;
    NSString * _primarySubflowInterfaceName;
    NSString * _providerStyle;
    SiriCoreConnectionMetrics * _remoteMetrics;
    NSNumber * _rssi;
    NSNumber * _signalStrengthBars;
    NSNumber * _simSubscriptions;
    NSNumber * _snr;
    NSNumber * _subflowCount;
    NSDictionary * _subflowSwitchCounts;
    NSDictionary * _symptomsBasedNetworkQuality;
    NSDictionary * _tcpInfoMetricsByInterfaceName;
    NSNumber * _timeUntilFirstByteRead;
    NSNumber * _timeUntilOpen;
    NSNumber * _tlsHandshakeTimeMsec;
    NSString * _tlsVersion;
    NSNumber * _unacknowledgedPingCount;
    NSString * _wifiChannelInfo;
    NSString * _wifiPhyMode;
}

@property (nonatomic, copy) NSNumber *attemptCount;
@property (nonatomic, copy) NSString *carrierName;
@property (nonatomic, copy) NSNumber *connectedSubflowCount;
@property (nonatomic, copy) NSNumber *connectionDelay;
@property (nonatomic, copy) NSString *connectionEdgeID;
@property (nonatomic, copy) NSString *connectionEdgeType;
@property (nonatomic, copy) NSNumber *connectionEstablishmentTimeMsec;
@property (nonatomic, copy) NSNumber *connectionFallbackReason;
@property (nonatomic, copy) NSString *connectionMethod;
@property (nonatomic, copy) NSArray *connectionMethodHistory;
@property (nonatomic, copy) NSNumber *connectionStartTimeToConnectionEstablishmentTimeMsec;
@property (nonatomic, copy) NSNumber *connectionStartTimeToDNSResolutionTimeMsec;
@property (nonatomic, copy) NSNumber *connectionStartTimeToTLSHandshakeTimeMsec;
@property (nonatomic, copy) NSNumber *dnsResolutionTime;
@property (nonatomic, copy) NSNumber *firstTxByteDelay;
@property (nonatomic, copy) NSDictionary *flowNetworkInterfaceType;
@property (nonatomic, copy) NSNumber *idsLastMessageDelay;
@property (nonatomic, copy) NSNumber *idsLastSocketDelay;
@property (nonatomic, copy) NSNumber *idsLastSocketOpenError;
@property (nonatomic, copy) NSNumber *isCaptive;
@property (nonatomic, copy) NSNumber *meanPing;
@property (nonatomic, copy) NSNumber *metricsCount;
@property (nonatomic, copy) NSNumber *pingCount;
@property (nonatomic, copy) NSString *policyId;
@property (nonatomic, copy) NSString *primarySubflowInterfaceName;
@property (nonatomic, copy) NSString *providerStyle;
@property (nonatomic, retain) SiriCoreConnectionMetrics *remoteMetrics;
@property (nonatomic, copy) NSNumber *rssi;
@property (nonatomic, copy) NSNumber *signalStrengthBars;
@property (nonatomic, copy) NSNumber *simSubscriptions;
@property (nonatomic, copy) NSNumber *snr;
@property (nonatomic, copy) NSNumber *subflowCount;
@property (nonatomic, copy) NSDictionary *subflowSwitchCounts;
@property (nonatomic, copy) NSDictionary *symptomsBasedNetworkQuality;
@property (setter=setTCPInfoMetricsByInterfaceName:, nonatomic, copy) NSDictionary *tcpInfoMetricsByInterfaceName;
@property (nonatomic, copy) NSNumber *timeUntilFirstByteRead;
@property (nonatomic, copy) NSNumber *timeUntilOpen;
@property (nonatomic, copy) NSNumber *tlsHandshakeTimeMsec;
@property (nonatomic, copy) NSString *tlsVersion;
@property (nonatomic, copy) NSNumber *unacknowledgedPingCount;
@property (nonatomic, copy) NSString *wifiChannelInfo;
@property (nonatomic, copy) NSString *wifiPhyMode;

- (void).cxx_destruct;
- (void)_setConnectionMetricsFromNSPControlConnection:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_setConnectionMetricsTCPInfo:(id)arg1;
- (id)attemptCount;
- (id)carrierName;
- (id)connectedSubflowCount;
- (id)connectionDelay;
- (id)connectionEdgeID;
- (id)connectionEdgeType;
- (id)connectionEstablishmentTimeMsec;
- (id)connectionFallbackReason;
- (id)connectionMethod;
- (id)connectionMethodHistory;
- (id)connectionStartTimeToConnectionEstablishmentTimeMsec;
- (id)connectionStartTimeToDNSResolutionTimeMsec;
- (id)connectionStartTimeToTLSHandshakeTimeMsec;
- (id)dnsResolutionTime;
- (id)firstTxByteDelay;
- (id)flowNetworkInterfaceType;
- (id)getConnectionMetricsDescription;
- (id)idsLastMessageDelay;
- (id)idsLastSocketDelay;
- (id)idsLastSocketOpenError;
- (id)isCaptive;
- (id)meanPing;
- (id)metricsCount;
- (id)pingCount;
- (id)policyId;
- (id)primarySubflowInterfaceName;
- (id)providerStyle;
- (id)remoteMetrics;
- (id)rssi;
- (void)setAttemptCount:(id)arg1;
- (void)setCarrierName:(id)arg1;
- (void)setConnectedSubflowCount:(id)arg1;
- (void)setConnectionDelay:(id)arg1;
- (void)setConnectionEdgeID:(id)arg1;
- (void)setConnectionEdgeType:(id)arg1;
- (void)setConnectionEstablishmentTimeMsec:(id)arg1;
- (void)setConnectionFallbackReason:(id)arg1;
- (void)setConnectionMethod:(id)arg1;
- (void)setConnectionMethodHistory:(id)arg1;
- (void)setConnectionMetricsForIDS:(double)arg1 messageDelay:(double)arg2 openErrorCode:(unsigned long long)arg3;
- (void)setConnectionMetricsFromConnection:(id)arg1 isPop:(bool)arg2 isMPTCP:(bool)arg3 attemptedEndpoints:(id)arg4 completion:(id /* block */)arg5;
- (void)setConnectionMetricsFromNWConnectionForDirect:(id)arg1 isMPTCP:(bool)arg2 attemptedEndpoints:(id)arg3 withCompletion:(id /* block */)arg4;
- (void)setConnectionMetricsFromNWConnectionForPOP:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)setConnectionMetricsFromStream:(id)arg1 isPop:(bool)arg2 withCompletion:(id /* block */)arg3;
- (void)setConnectionMetricsFromStreamForDirect:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)setConnectionMetricsFromStreamForPOP:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)setConnectionStartTimeToConnectionEstablishmentTimeMsec:(id)arg1;
- (void)setConnectionStartTimeToDNSResolutionTimeMsec:(id)arg1;
- (void)setConnectionStartTimeToTLSHandshakeTimeMsec:(id)arg1;
- (void)setDnsResolutionTime:(id)arg1;
- (void)setFirstTxByteDelay:(id)arg1;
- (void)setFlowNetworkInterfaceType:(id)arg1;
- (void)setIdsLastMessageDelay:(id)arg1;
- (void)setIdsLastSocketDelay:(id)arg1;
- (void)setIdsLastSocketOpenError:(id)arg1;
- (void)setIsCaptive:(id)arg1;
- (void)setMeanPing:(id)arg1;
- (void)setMetricsCount:(id)arg1;
- (void)setPingCount:(id)arg1;
- (void)setPolicyId:(id)arg1;
- (void)setPrimarySubflowInterfaceName:(id)arg1;
- (void)setProviderStyle:(id)arg1;
- (void)setRemoteMetrics:(id)arg1;
- (void)setRssi:(id)arg1;
- (void)setSignalStrengthBars:(id)arg1;
- (void)setSimSubscriptions:(id)arg1;
- (void)setSnr:(id)arg1;
- (void)setSubflowCount:(id)arg1;
- (void)setSubflowSwitchCounts:(id)arg1;
- (void)setSymptomsBasedNetworkQuality:(id)arg1;
- (void)setTCPInfoMetricsByInterfaceName:(id)arg1;
- (void)setTimeUntilFirstByteRead:(id)arg1;
- (void)setTimeUntilOpen:(id)arg1;
- (void)setTlsHandshakeTimeMsec:(id)arg1;
- (void)setTlsVersion:(id)arg1;
- (void)setUnacknowledgedPingCount:(id)arg1;
- (void)setWifiChannelInfo:(id)arg1;
- (void)setWifiPhyMode:(id)arg1;
- (id)signalStrengthBars;
- (id)simSubscriptions;
- (id)snr;
- (id)subflowCount;
- (id)subflowSwitchCounts;
- (id)symptomsBasedNetworkQuality;
- (id)tcpInfoMetricsByInterfaceName;
- (id)timeUntilFirstByteRead;
- (id)timeUntilOpen;
- (id)tlsHandshakeTimeMsec;
- (id)tlsVersion;
- (id)unacknowledgedPingCount;
- (id)wifiChannelInfo;
- (id)wifiPhyMode;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RCKeyValueStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/RemoteConfiguration.framework/RCKeyValueStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration (2166)
 */

@interface RCKeyValueStore : NSObject <RCOperationThrottlerDelegate> {
    unsigned long long  _clientVersion;
    <RCKeyValueStoreMigrating> * _migrator;
    NSString * _name;
    bool  _needSave;
    NSMutableDictionary * _objectsByKey;
    unsigned long long  _optionsMask;
    <RCOperationThrottler> * _saveThrottler;
    bool  _shouldExportJSONSidecar;
    NSString * _storeDirectory;
    unsigned long long  _storeSize;
    RCMutexLock * _writeLock;
}

@property (nonatomic, readonly) NSDictionary *asDictionary;
@property (nonatomic) unsigned long long clientVersion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <RCKeyValueStoreMigrating> *migrator;
@property (nonatomic, retain) NSString *name;
@property (nonatomic) bool needSave;
@property (nonatomic, retain) NSMutableDictionary *objectsByKey;
@property (nonatomic) unsigned long long optionsMask;
@property (nonatomic, retain) <RCOperationThrottler> *saveThrottler;
@property (nonatomic) bool shouldExportJSONSidecar;
@property (nonatomic, retain) NSString *storeDirectory;
@property (nonatomic) unsigned long long storeSize;
@property (readonly) Class superclass;
@property (nonatomic, retain) RCMutexLock *writeLock;

+ (id)persistenceQueue;
+ (bool)shouldDumpToJSON;

- (void).cxx_destruct;
- (void)_clearStore;
- (id)_dictionary;
- (id)_initializeStoreDirectoryWithName:(id)arg1;
- (bool)_isBackupEnabled;
- (id)_loadFromDisk;
- (void)_logCacheStatus;
- (bool)_persistOnlyInMemoryEnabled;
- (void)_queueSave;
- (void)_saveAsyncWithCompletionHandler:(id /* block */)arg1;
- (bool)_shouldMigrateOnUpgrade;
- (void)addAllEntriesToDictionary:(id)arg1;
- (void)addEntriesFromDictionary:(id)arg1;
- (id)allKeys;
- (id)asDictionary;
- (bool)boolValueForKey:(id)arg1;
- (unsigned long long)clientVersion;
- (bool)containsObjectForKey:(id)arg1;
- (id)init;
- (id)initWithName:(id)arg1 directory:(id)arg2 version:(unsigned long long)arg3 options:(unsigned long long)arg4;
- (id)initWithName:(id)arg1 directory:(id)arg2 version:(unsigned long long)arg3 options:(unsigned long long)arg4 migrator:(id)arg5;
- (id)migrator;
- (id)name;
- (bool)needSave;
- (id)objectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectsByKey;
- (id)objectsForKeys:(id)arg1;
- (void)operationThrottler:(id)arg1 performAsyncOperationWithCompletion:(id /* block */)arg2;
- (unsigned long long)optionsMask;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)removeObjectsForKeys:(id)arg1;
- (id)saveThrottler;
- (void)saveWithCompletionHandler:(id /* block */)arg1;
- (void)setBoolValue:(bool)arg1 forKey:(id)arg2;
- (void)setClientVersion:(unsigned long long)arg1;
- (void)setMigrator:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNeedSave:(bool)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObjects:(id)arg1 forKeys:(id)arg2;
- (void)setObjectsByKey:(id)arg1;
- (void)setOptionBackupEnabled:(bool)arg1;
- (void)setOptionsMask:(unsigned long long)arg1;
- (void)setSaveThrottler:(id)arg1;
- (void)setShouldExportJSONSidecar:(bool)arg1;
- (void)setStoreDirectory:(id)arg1;
- (void)setStoreSize:(unsigned long long)arg1;
- (void)setWriteLock:(id)arg1;
- (bool)shouldExportJSONSidecar;
- (id)storeDirectory;
- (unsigned long long)storeSize;
- (void)updateObjectsForKeys:(id)arg1 withBlock:(id /* block */)arg2;
- (id)writeLock;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

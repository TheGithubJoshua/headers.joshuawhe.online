<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WFUserSettings.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WebContentAnalysis.framework/WFUserSettings.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis (5.1)
 */

@interface WFUserSettings : NSObject {
    WFWhitelistSiteBuffer * _contentFilterOverriddenBlackListedSitesBuffer;
    WFWhitelistSiteBuffer * _contentFilterOverriddenWhiteListedSitesBuffer;
    NSString * _userName;
    NSDictionary * _userSettings;
    WFWhitelistSiteBuffer * _whiteListedSitesBuffer;
}

@property (nonatomic, readonly) bool canEditContentFilterOverriddenBlackListedSites;
@property (nonatomic, readonly) bool canEditContentFilterOverriddenWhiteListedSites;
@property (nonatomic, readonly) bool canEditOverridesAllowed;
@property (nonatomic, readonly) bool canEditRestrictionType;
@property (nonatomic, readonly) bool canEditWhiteListAllowedSites;
@property (nonatomic, retain) NSArray *contentFilterOverriddenBlackListedSites;
@property (nonatomic, retain) NSArray *contentFilterOverriddenWhiteListedSites;
@property (nonatomic) bool overridesAllowed;
@property (nonatomic) long long restrictionType;
@property (nonatomic, copy) NSString *userName;
@property (nonatomic, retain) NSArray *whiteListAllowedSites;

+ (id)_arrayByConvertingLinesInStringsAtPath:(id)arg1;
+ (id)_metasiteDomainNamesArray;
+ (id)_sharedMetasiteDomainNamesDictionary;
+ (id)_sharedMetasiteExceptionsDomainNamesArray;
+ (id)metasitesExceptionPath;
+ (id)metasitesPath;

- (bool)_addManagedDefaults:(id)arg1;
- (id)_managedDefaultsPath;
- (bool)_setManagedDefaults:(id)arg1;
- (id)_userSettingsForUser:(id)arg1;
- (bool)alwaysAllowHTTPS;
- (bool)autoWhitelistContainsURL:(id)arg1;
- (bool)canEditAlwaysAllowHTTPS;
- (bool)canEditContentFilterOverriddenBlackListedSites;
- (bool)canEditContentFilterOverriddenWhiteListedSites;
- (bool)canEditOverridesAllowed;
- (bool)canEditRestrictionType;
- (bool)canEditWhiteListAllowedSites;
- (bool)contentFilterEnabled;
- (bool)contentFilterListsAllowURL:(id)arg1;
- (bool)contentFilterOverriddenBlackListContainsURL:(id)arg1;
- (id)contentFilterOverriddenBlackListedSites;
- (id)contentFilterOverriddenBlackListedSitesBuffer;
- (bool)contentFilterOverriddenList:(id)arg1 containsURL:(id)arg2;
- (id)contentFilterOverriddenSites;
- (bool)contentFilterOverriddenWhiteListContainsURL:(id)arg1;
- (id)contentFilterOverriddenWhiteListedSites;
- (id)contentFilterOverriddenWhiteListedSitesBuffer;
- (bool)contentFilterOverridesEnabled;
- (void)dealloc;
- (id)initWithUserName:(id)arg1;
- (bool)overridesAllowed;
- (bool)restrictWebEnabled;
- (long long)restrictionType;
- (void)setAlwaysAllowHTTPS:(bool)arg1;
- (void)setContentFilterEnabled:(bool)arg1;
- (void)setContentFilterOverriddenBlackListedSites:(id)arg1;
- (void)setContentFilterOverriddenWhiteListedSites:(id)arg1;
- (void)setContentFilterOverridesEnabled:(bool)arg1;
- (void)setOverridesAllowed:(bool)arg1;
- (void)setRestrictWebEnabled:(bool)arg1;
- (void)setRestrictionType:(long long)arg1;
- (void)setUserName:(id)arg1;
- (void)setWhiteListAllowedSites:(id)arg1;
- (void)setWhiteListEnabled:(bool)arg1;
- (id)userName;
- (id)whiteListAllowedSites;
- (bool)whiteListContainsURL:(id)arg1;
- (bool)whiteListEnabled;
- (id)whiteListedSitesBuffer;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_EKAlarmEngine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CalendarNotification.framework/_EKAlarmEngine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CalendarNotification.framework/CalendarNotification (1)
 */

@interface _EKAlarmEngine : NSObject <CLLocationManagerDelegate> {
    NSDateFormatter * _dateFormatter;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _fencesNeedAdjusted;
    bool  _includeRefiringAlarmsForInitialReschedule;
    NSDate * _lastCheckpoint;
    int  _lastDBSequence;
    CLLocationManager * _locationManager;
    NSMutableDictionary * _monitoredRegions;
    bool  _needsAlarmTablePopulation;
    NSDate * _nextFireDate;
    bool  _pendingChanges;
    NSDate * _populateStart;
    bool  _populating;
    bool  _refirePastAlarmsForInitialUpdate;
    RTRoutineManager * _routineManager;
    bool  _shouldUpdateWithForceForAlarmTable;
    bool  _shouldUpdateWithForceForFences;
    NSTimer * _syncTimer;
    EKTimedEventStorePurger * _timedEventStorePurger;
    NSDate * _tomorrow;
    long long  _vehicleConnectionState;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)_clampFireDate:(id)arg1;
+ (id)_publisherBulletinIDForReminder:(id)arg1;
+ (id)_publisherBulletinIDForTask:(void*)arg1;
+ (id)_publisherBulletinIDForTaskUniqueIdentifier:(id)arg1;
+ (id)requestedDarwinNotifications;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_adjustFences:(id)arg1;
- (id)_alertInfoAlarmIDFromEKAlarm:(id)arg1;
- (id)_alertInfoAlarmIDFromSideAlarm:(id)arg1;
- (bool)_allowConservativeEntry;
- (bool)_allowVehicleTrigger;
- (void)_calendarNotificationSettingChanged;
- (void)_databaseChanged;
- (id)_dateFormatter;
- (id)_debugStringForVehicleConnectionState:(long long)arg1;
- (id)_eventStore;
- (bool)_haveAlarmsChanged:(id)arg1;
- (id)_insertSideAlarmObjectForVehicleTriggerAlarm:(id)arg1 forReminder:(id)arg2 withDelay:(double)arg3 eventStore:(id)arg4 context:(id)arg5;
- (void)_installTimerWithFireDate:(id)arg1;
- (bool)_isAlarmAcknowledgedWithAcknowledgedDate:(id)arg1 fireDate:(id)arg2;
- (bool)_isDataProtected;
- (void)_killSyncTimer;
- (void)_killTimer;
- (void)_locationDaemonDidLaunch;
- (void)_motionUpdatedWithConnectionState:(long long)arg1;
- (void)_notifyAlarmsFired:(id)arg1;
- (bool)_populateAlarmTable:(id)arg1;
- (void)_populateFinished;
- (void)_protectedDataDidBecomeAvailable;
- (void)_proximityAlertTriggered:(id)arg1 entered:(bool)arg2;
- (void)_removeAllFences;
- (void)_removeAllFencesSynch;
- (void)_removeStaleRefiringAlarmsWithEventStore:(id)arg1;
- (void)_rescheduleTimer;
- (void)_resetSyncTimer;
- (void)_setupLocationManager;
- (bool)_shouldAdjustFencesWithStatus:(int)arg1;
- (bool)_shouldRefireAlarms;
- (bool)_shouldUseCoreRoutine;
- (void)_simulatedOffsetChanged:(id)arg1;
- (void)_storeAlarms:(id)arg1 nextScheduleLimit:(id)arg2 eventStore:(id)arg3;
- (id)_stringForAuthorizationStatus:(int)arg1;
- (void)_syncDidEnd;
- (void)_syncDidStart;
- (void)_syncTimerFired:(id)arg1;
- (void)_timeDidChangeSignificantly;
- (void)_timeZoneChanged:(id)arg1;
- (void)_timerFired;
- (void)_updateRegionMonitoringForRegion:(id)arg1 withLocationOfInterest:(id)arg2 forLocation:(struct CLLocationCoordinate2D { double x1; double x2; })arg3;
- (void)_updateWithForceForAlarmTable:(bool)arg1 forFences:(bool)arg2;
- (void)_vehicleTriggerFired:(bool)arg1;
- (void)dealloc;
- (void)handleBTAJob:(id)arg1 named:(const char *)arg2;
- (void)handleDarwinNotification:(id)arg1;
- (id)init;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didEnterRegion:(id)arg2;
- (void)locationManager:(id)arg1 didExitRegion:(id)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 monitoringDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)start;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

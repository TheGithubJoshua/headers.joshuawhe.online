<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EKTravelEngine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CalendarNotification.framework/EKTravelEngine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CalendarNotification.framework/CalendarNotification (1)
 */

@interface EKTravelEngine : NSObject <CLLocationManagerDelegate> {
    id /* block */  _adviceBlock;
    id /* block */  _authorizationChangedBlock;
    bool  _authorizedInternal;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    bool  _databaseIsEncryptedAndUnreadable;
    NSMutableDictionary * _eventExternalURLsToAgendaEntries;
    id /* block */  _eventSignificantlyChangedBlock;
    CLLocationManager * _locationManager;
    bool  _needsRefresh;
    PCPersistentTimer * _periodicRefreshTimer;
    bool  _running;
    NSObject<OS_dispatch_source> * _syncYieldTimer;
    EKTimedEventStorePurger * _timedEventStorePurger;
    NSObject<OS_dispatch_queue> * _workQueue;
    bool  _yieldingToSync;
}

@property (nonatomic, copy) id /* block */ adviceBlock;
@property (nonatomic, copy) id /* block */ authorizationChangedBlock;
@property (nonatomic, readonly) bool authorized;
@property (nonatomic) bool authorizedInternal;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ eventSignificantlyChangedBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (double)_periodicRefreshInterval;
+ (double)_travelAgendaTimeWindowInterval;
+ (double)requestRefreshTimeInterval;
+ (id)requestedDarwinNotifications;
+ (id)travelEligibleEvents:(id)arg1 fromStartDate:(id)arg2 untilEndDate:(id)arg3;

- (void).cxx_destruct;
- (bool)_authorizedToAcquireLocation;
- (void)_calDatabaseChangedNotificationReceived;
- (void)_calSyncClientBeginningMultiSaveNotificationReceived;
- (void)_calSyncClientFinishedMultiSaveNotificationReceived;
- (void)_enableTravelAdvisoriesForAutomaticBehaviorNotificationReceived;
- (void)_eventKitFeatureSetChanged;
- (void)_installLocationManager;
- (void)_installPeriodicRefreshTimer;
- (void)_installSyncYieldTimer;
- (bool)_isProtectedDataAvailable;
- (void)_periodicRefreshTimerFired:(id)arg1;
- (void)_refreshIfNeeded;
- (void)_registerForNotificationObservation;
- (void)_sendFeedbackForPostingNotificationForEventWithExternalURL:(id)arg1 feedback:(id /* block */)arg2;
- (void)_significantTimeChangeNotificationReceived;
- (void)_stopInternal;
- (void)_suggestEventLocationsSettingChanged;
- (void)_trimAgendaEntriesBeforeDate:(id)arg1 andAfterDate:(id)arg2;
- (void)_uninstallLocationManager;
- (void)_uninstallPeriodicRefreshTimer;
- (void)_uninstallSyncYieldTimer;
- (void)_unregisterAllAgendaEntries;
- (void)_unregisterForNotificationObservation;
- (void)_updateDatabaseEncryptionState;
- (id /* block */)adviceBlock;
- (id /* block */)authorizationChangedBlock;
- (bool)authorized;
- (bool)authorizedInternal;
- (id)btaJobName;
- (void)cancelHypothesisRefreshRequestForEventWithExternalURL:(id)arg1;
- (void)ceaseMonitoringForEventWithExternalURL:(id)arg1;
- (void)dealloc;
- (id /* block */)eventSignificantlyChangedBlock;
- (void)handleBTAJob:(id)arg1 named:(const char *)arg2;
- (void)handleDarwinNotification:(id)arg1;
- (id)init;
- (bool)isLocationManagerStatusAuthorized:(int)arg1;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)requestHypothesisRefreshAtDate:(id)arg1 forEventWithExternalURL:(id)arg2;
- (void)sendFeedbackForPostingLeaveByNotificationForEventWithExternalURL:(id)arg1;
- (void)sendFeedbackForPostingLeaveNowNotificationForEventWithExternalURL:(id)arg1;
- (void)setAdviceBlock:(id /* block */)arg1;
- (void)setAuthorizationChangedBlock:(id /* block */)arg1;
- (void)setAuthorizedInternal:(bool)arg1;
- (void)setEventSignificantlyChangedBlock:(id /* block */)arg1;
- (void)start;
- (void)stop;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

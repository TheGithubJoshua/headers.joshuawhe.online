<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CALNRemoteReminderProvider.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CalendarNotification.framework/CALNRemoteReminderProvider.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CalendarNotification.framework/CalendarNotification (1)
 */

@interface CALNRemoteReminderProvider : CALNRemoteDataProvider {
    NSObject<OS_dispatch_queue> * _badgeCountQueue;
    SBSApplicationShortcutService * _sbApplicationShortcutService;
}

@property (retain) SBSApplicationShortcutService *sbApplicationShortcutService;

+ (id)logHandle;

- (void).cxx_destruct;
- (id)_bulletinRequestForReminder:(id)arg1;
- (id)_formattedPhoneNumberFromPhoneNumber:(id)arg1;
- (void)_handleDeclineAndRemindMessageWithUserInfo:(id)arg1;
- (id)_phoneNumberTypeStringFromPhoneNumber:(id)arg1;
- (bool)_shouldIncludeBulletin:(id)arg1 sinceDate:(id)arg2 addedIDs:(id)arg3;
- (id)_sortedListOfCalendarsFromEventStore:(id)arg1;
- (id)_springBoardRemindersShortcutItemsFromEventStore:(id)arg1;
- (void)_updateBadgeCount:(id)arg1;
- (void)_updateBulletinRequest:(id)arg1 forReminder:(id)arg2;
- (void)acknowledgeLocationAlertWithURL:(id)arg1 entityID:(id)arg2;
- (id)actionButtonColorForAlertInfo:(id)arg1;
- (id)actionButtonTitleForAlertInfo:(id)arg1;
- (void)activate;
- (void)alertInfosFired:(id)arg1;
- (bool)allowsLocationAlerts;
- (void)bulletinAcknowledgedWithResponse:(id)arg1 acknowledgeAlarm:(bool)arg2 extraActions:(id /* block */)arg3;
- (id)bulletinRequestForAlertInfo:(id)arg1;
- (id)bulletinRequestWithCalendarNotification:(id)arg1;
- (id)bulletinsWithRequestParameters:(id)arg1 lastCleared:(id)arg2;
- (id)clearedInfoForBulletins:(id)arg1 lastClearedInfo:(id)arg2;
- (id)customActionWithAlertInfo:(id)arg1 forBulletin:(id)arg2;
- (void)dataProviderDidLoad;
- (void)dealloc;
- (id)defaultSectionInfo;
- (id)defaultURLForAlertInfo:(id)arg1;
- (id)entityScheme;
- (void)firstUnlock;
- (void)handleBulletinActionResponse:(id)arg1;
- (void)handleDarwinNotification:(id)arg1;
- (id)initWithNotificationFetchBlock:(id /* block */)arg1;
- (id)markAsCompletedActionWithAlertInfo:(id)arg1;
- (id)messageStringForAlertInfo:(id)arg1;
- (void)protectedAcknowledgeAlarm:(bool)arg1 forBulletinWithEntityID:(id)arg2 externalID:(id)arg3 extraActions:(id /* block */)arg4;
- (id)protectedItemForBulletinRecordID:(id)arg1;
- (void)receiveMessageWithName:(id)arg1 userInfo:(id)arg2;
- (id)sbApplicationShortcutService;
- (id)sectionDisplayName;
- (id)sectionIcon;
- (id)sectionIdentifier;
- (id)sectionParameters;
- (void)setSbApplicationShortcutService:(id)arg1;
- (bool)shouldCompleteReminderWhenCustomActionExecuted:(id)arg1;
- (bool)shouldPostBulletinForAlertInfo:(id)arg1;
- (bool)shouldWithdrawBulletin:(id)arg1 forItem:(id)arg2;
- (id)snoozeActionForAlertInfo:(id)arg1 timeSpan:(int)arg2 snoozeInterval:(double*)arg3;
- (id)sortDescriptors;
- (id)supplementaryActionsForAlertInfo:(id)arg1 bulletin:(id)arg2 compactLayout:(bool)arg3;
- (id)titleStringForAlertInfo:(id)arg1;
- (id)universalSectionIdentifier;
- (void)updateQuickActions;
- (id)viewActionForAlertInfo:(id)arg1;
- (void)willPostBulletinForAlertInfo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

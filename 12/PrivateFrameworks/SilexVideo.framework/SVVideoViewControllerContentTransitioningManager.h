<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SVVideoViewControllerContentTransitioningManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SilexVideo.framework/SVVideoViewControllerContentTransitioningManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SilexVideo.framework/SilexVideo (1)
 */

@interface SVVideoViewControllerContentTransitioningManager : NSObject <AVPlayerViewControllerContentTransitioning_NewsOnly, SVVideoTransitionObserver> {
    <SVPlayerProviding> * _playerProvider;
    <SVVideoQueueProviding> * _queueProvider;
    <SVVideoPlaybackSeeking> * _seeker;
    <SVVideoPlaybackSeekerFactory> * _seekerFactory;
    <SVVideoSkipLockObserving> * _skipLockObserver;
    <SVVideoSkipLockObserverFactory> * _skipLockObserverFactory;
    <SVVideoTimeProviding> * _timeProvider;
    <SVVideoTimeProviderFactory> * _timeProviderFactory;
    <SVVisibilityReporting> * _visibilityReporter;
    <SVVisiblePercentageReporting> * _visibilityReporterForAppearingVideo;
    <SVVisiblePercentageReporting> * _visibilityReporterForDisappearingVideo;
    <SVVideoVisiblePercentageManager> * _visiblePercentageManager;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <SVPlayerProviding> *playerProvider;
@property (nonatomic, readonly) <SVVideoQueueProviding> *queueProvider;
@property (nonatomic, retain) <SVVideoPlaybackSeeking> *seeker;
@property (nonatomic, readonly) <SVVideoPlaybackSeekerFactory> *seekerFactory;
@property (nonatomic, retain) <SVVideoSkipLockObserving> *skipLockObserver;
@property (nonatomic, readonly) <SVVideoSkipLockObserverFactory> *skipLockObserverFactory;
@property (readonly) Class superclass;
@property (nonatomic, retain) <SVVideoTimeProviding> *timeProvider;
@property (nonatomic, readonly) <SVVideoTimeProviderFactory> *timeProviderFactory;
@property (nonatomic, readonly) <SVVisibilityReporting> *visibilityReporter;
@property (nonatomic) <SVVisiblePercentageReporting> *visibilityReporterForAppearingVideo;
@property (nonatomic) <SVVisiblePercentageReporting> *visibilityReporterForDisappearingVideo;
@property (nonatomic, readonly) <SVVideoVisiblePercentageManager> *visiblePercentageManager;

- (void).cxx_destruct;
- (id)initWithVisiblePercentageManager:(id)arg1 visibilityReporter:(id)arg2 queueProvider:(id)arg3 playerProvider:(id)arg4 skipLockObserverFactory:(id)arg5 timeProviderFactory:(id)arg6 seekerFactory:(id)arg7;
- (id)playerProvider;
- (void)playerViewController:(id)arg1 didUpdateContentTransitionProgress:(double)arg2;
- (id)playerViewController:(id)arg1 playerForContentTransitionType:(long long)arg2;
- (void)playerViewControllerDidCancelContentTransition:(id)arg1;
- (void)playerViewControllerDidCompleteContentTransition:(id)arg1;
- (void)playerViewControllerWillBeginContentTransition:(id)arg1;
- (void)playerViewControllerWillCancelContentTransition:(id)arg1;
- (void)playerViewControllerWillCompleteContentTransition:(id)arg1;
- (id)queueProvider;
- (id)seeker;
- (id)seekerFactory;
- (void)setSeeker:(id)arg1;
- (void)setSkipLockObserver:(id)arg1;
- (void)setTimeProvider:(id)arg1;
- (void)setVisibilityReporterForAppearingVideo:(id)arg1;
- (void)setVisibilityReporterForDisappearingVideo:(id)arg1;
- (id)skipLockObserver;
- (id)skipLockObserverFactory;
- (id)timeProvider;
- (id)timeProviderFactory;
- (id)videoForContentTransitionType:(long long)arg1;
- (id)visibilityReporter;
- (id)visibilityReporterForAppearingVideo;
- (id)visibilityReporterForDisappearingVideo;
- (id)visiblePercentageManager;
- (void)willTransitionToVideo:(id)arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

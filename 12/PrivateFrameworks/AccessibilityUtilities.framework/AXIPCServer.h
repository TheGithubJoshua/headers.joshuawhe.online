<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AXIPCServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AccessibilityUtilities.framework/AXIPCServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities (1.0)
 */

@interface AXIPCServer : NSObject <AXIPCServerClientRegistrationDelegate> {
    unsigned int  _assignedServerPort;
    id /* block */  _clientInvalidationHandler;
    NSMutableSet * _connectedClients;
    unsigned int  _customQueueSize;
    id /* block */  _defaultHandler;
    NSMutableDictionary * _entitlements;
    NSMutableDictionary * _handlers;
    bool  _perPidService;
    bool  _running;
    unsigned int  _serverPort;
    struct __CFRunLoopSource { } * _serverRunLoopSource;
    NSString * _serviceName;
    NSMutableDictionary * _validSecurityTokens;
}

@property (nonatomic, copy) id /* block */ clientInvalidationCallback;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, copy) id /* block */ defaultHandler;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableDictionary *handlers;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned int machPort;
@property (nonatomic) bool perPidService;
@property (getter=isRunning, nonatomic) bool running;
@property (nonatomic, retain) NSString *serviceName;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)__slowpath__clientWithAuditToken:(struct { unsigned int x1[8]; })arg1 hasRequiredEntitlementFromSet:(id)arg2;
- (void)_addPossibleRequiredEntitlementsToMessageWithKey:(int)arg1 first:(id)arg2 vothers:(char *)arg3;
- (void)_applyCustomQueueSize;
- (id)_clientIdentificationForAuditToken:(struct { unsigned int x1[8]; })arg1;
- (bool)_clientWithPort:(unsigned int)arg1 auditToken:(struct { unsigned int x1[8]; })arg2 hasAnyEntitlementRequiredForMessage:(id)arg3;
- (void)_handleClientInvalidation:(unsigned int)arg1;
- (void)_handleClientRegistration:(id)arg1;
- (bool)_handleErrorWithMessage:(id)arg1 outError:(id*)arg2;
- (void)_handleIncomingMessage:(id)arg1 securityToken:(struct { unsigned int x1[2]; })arg2 auditToken:(struct { unsigned int x1[8]; })arg3 clientPort:(unsigned int)arg4 completion:(id /* block */)arg5;
- (void)_registerContext:(id)arg1 forKey:(int)arg2;
- (void)_startServerThread;
- (void)addPossibleRequiredEntitlement:(id)arg1 forMessageWithKey:(int)arg2;
- (id /* block */)clientInvalidationCallback;
- (void)dealloc;
- (id /* block */)defaultHandler;
- (id)description;
- (id)handlers;
- (id)initWithPort:(unsigned int)arg1 serviceRunLoopSource:(struct __CFRunLoopSource { }*)arg2;
- (id)initWithServiceName:(id)arg1 perPidService:(bool)arg2;
- (bool)isRunning;
- (unsigned int)machPort;
- (bool)perPidService;
- (void)removeAllHandlersForTarget:(id)arg1;
- (void)removeHandlerForKey:(int)arg1;
- (void)removePossibleRequiredEntitlement:(id)arg1 forMessageWithKey:(int)arg2;
- (void)serverClientRegistrationInvalidated:(id)arg1;
- (id)serviceName;
- (void)setClientInvalidationCallback:(id /* block */)arg1;
- (void)setDefaultHandler:(id /* block */)arg1;
- (void)setHandler:(id /* block */)arg1 forKey:(int)arg2;
- (void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 async:(bool)arg3 forKey:(int)arg4;
- (void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 async:(bool)arg3 forKey:(int)arg4 possibleRequiredEntitlements:(id)arg5;
- (void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 forKey:(int)arg3;
- (void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 forKey:(int)arg3 possibleRequiredEntitlements:(id)arg4;
- (void)setHandlers:(id)arg1;
- (void)setPerPidService:(bool)arg1;
- (void)setQueueSize:(unsigned int)arg1;
- (void)setRunning:(bool)arg1;
- (void)setServiceName:(id)arg1;
- (void)setServiceRunLoopSource:(struct __CFRunLoopSource { }*)arg1;
- (bool)startServerWithError:(id*)arg1;
- (bool)stopServerWithError:(id*)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

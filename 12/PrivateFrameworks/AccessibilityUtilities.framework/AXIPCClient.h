<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AXIPCClient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AccessibilityUtilities.framework/AXIPCClient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities (1.0)
 */

@interface AXIPCClient : NSObject {
    unsigned int  _assignedServerMachPort;
    NSString * _clientIdentifier;
    struct __CFRunLoopSource { } * _clientSource;
    bool  _connected;
    unsigned long long  _connectionAttempts;
    AXAccessQueue * _connectionQueue;
    NSMutableArray * _outstandingAsyncRequests;
    int  _pid;
    AXAccessQueue * _portDeathAccessQueue;
    id /* block */  _portDeathHandler;
    NSMutableArray * _postConnectionTasks;
    struct __CFMachPort { } * _serverPort;
    NSLock * _serverPortLock;
    NSString * _serviceName;
    float  _timeout;
    bool  _usesPerPidLookup;
    unsigned int  clientCallbackPort;
    struct __CFRunLoopSource { } * clientCallbackSource;
    bool  shouldRegisterCallbackSourceOnMainRunloop;
}

@property (nonatomic, readonly) unsigned int clientCallbackPort;
@property (nonatomic, readonly) struct __CFRunLoopSource { }*clientCallbackSource;
@property (nonatomic, copy) NSString *clientIdentifier;
@property (getter=isConnected, nonatomic) bool connected;
@property (nonatomic, retain) AXAccessQueue *connectionQueue;
@property (nonatomic) int pid;
@property (nonatomic, retain) AXAccessQueue *portDeathAccessQueue;
@property (nonatomic, copy) id /* block */ portDeathHandler;
@property (nonatomic, retain) NSMutableArray *postConnectionTasks;
@property (nonatomic) struct __CFMachPort { }*serverPort;
@property (nonatomic, readonly) unsigned int serviceMachPort;
@property (nonatomic, copy) NSString *serviceName;
@property (nonatomic) bool shouldRegisterCallbackSourceOnMainRunloop;
@property (nonatomic) float timeout;
@property (nonatomic) bool usesPerPidLookup;

+ (id)allClients;
+ (void)initialize;

- (void).cxx_destruct;
- (void)_attemptToEstablishConnection;
- (void)_commonInit;
- (id)_createRegistrationWithReplyMachPort:(unsigned int)arg1 forAsyncReplyOnQueue:(id)arg2 responseHandler:(id /* block */)arg3;
- (id)_descriptionForMachError:(int)arg1;
- (bool)_handleErrorWithMessage:(id)arg1 machError:(int)arg2 outError:(id*)arg3;
- (bool)_handleErrorWithMessage:(id)arg1 outError:(id*)arg2;
- (bool)_prepareToSendMessage:(id)arg1 withError:(id*)arg2 prepSuccessHandler:(id /* block */)arg3;
- (void)_registerWithServer;
- (void)_sendRegistrationMessageWithRetries:(int)arg1;
- (void)_serverDied;
- (bool)_verifyConnectionWithError:(id*)arg1;
- (unsigned int)clientCallbackPort;
- (struct __CFRunLoopSource { }*)clientCallbackSource;
- (id)clientIdentifier;
- (bool)connectWithError:(id*)arg1;
- (id)connectionQueue;
- (void)dealloc;
- (id)description;
- (bool)disconnectWithError:(id*)arg1;
- (void)establishConnectionWithTimeout:(double)arg1 completion:(id /* block */)arg2;
- (id)initWithPort:(unsigned int)arg1;
- (id)initWithServiceName:(id)arg1;
- (bool)isConnected;
- (int)pid;
- (id)portDeathAccessQueue;
- (id /* block */)portDeathHandler;
- (id)postConnectionTasks;
- (bool)sendAsyncMessage:(id)arg1 replyOnQueue:(id)arg2 replyHandler:(id /* block */)arg3;
- (bool)sendAsyncMessage:(id)arg1 withReplyHandler:(id /* block */)arg2;
- (id)sendMessage:(id)arg1 withError:(id*)arg2;
- (void)sendSimpleMessage:(id)arg1;
- (bool)sendSimpleMessage:(id)arg1 synchronizationPort:(unsigned int)arg2 error:(id*)arg3;
- (bool)sendSimpleMessage:(id)arg1 withError:(id*)arg2;
- (struct __CFMachPort { }*)serverPort;
- (unsigned int)serviceMachPort;
- (id)serviceName;
- (void)setClientIdentifier:(id)arg1;
- (void)setConnected:(bool)arg1;
- (void)setConnectionQueue:(id)arg1;
- (void)setPid:(int)arg1;
- (void)setPortDeathAccessQueue:(id)arg1;
- (void)setPortDeathHandler:(id /* block */)arg1;
- (void)setPostConnectionTasks:(id)arg1;
- (void)setServerPort:(struct __CFMachPort { }*)arg1;
- (void)setServiceName:(id)arg1;
- (void)setShouldRegisterCallbackSourceOnMainRunloop:(bool)arg1;
- (void)setTimeout:(float)arg1;
- (void)setUsesPerPidLookup:(bool)arg1;
- (bool)shouldRegisterCallbackSourceOnMainRunloop;
- (float)timeout;
- (bool)usesPerPidLookup;
- (bool)verifyConnectionExists;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

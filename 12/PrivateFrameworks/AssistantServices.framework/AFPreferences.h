<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AFPreferences.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AssistantServices.framework/AFPreferences.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices (1)
 */

@interface AFPreferences : NSObject {
    int  _navToken;
    bool  _navTokenIsValid;
    NSObject<OS_dispatch_queue> * _navTokenQueue;
    bool  _registeredForInternalPrefs;
    bool  _registeredForLanguageCode;
    bool  _registeredForOutputVoice;
    bool  _registeredForSupportedLanguages;
    long long  _tlsSessionTicketFlushRequestPending;
}

+ (id)sharedPreferences;

- (void).cxx_destruct;
- (id)_bestSupportedLanguageCodeForLanguageCode:(id)arg1 isGoodFit:(bool*)arg2;
- (id)_bestSupportedLanguageCodeForLanguageCodes:(id)arg1 isGoodFit:(bool*)arg2;
- (void)_internalPreferencesDidChangeExternally;
- (bool)_languageCode:(id)arg1 isGoodFitForPreferredLanguages:(id)arg2;
- (void)_languageCodeDidChangeExternally;
- (id)_languagePreferencesForCurrentSystemConfiguration;
- (void)_ouputVoiceDidChangeExternally;
- (void)_preferencesDidChangeExternally;
- (void)_registerForInteralPrefs;
- (void)_registerForLanguageCodeChangeNotifications;
- (void)_registerForNavStatusIfNeeded;
- (void)_registerForOutputVoice;
- (void)_registerForSupportedLanguageChangeNotifications;
- (void)_setAssistantIsEnabledLocal:(bool)arg1;
- (void)_setDictationIsEnabledLocal:(bool)arg1;
- (void)_setLoggingDefaultValue:(id)arg1 forKey:(id)arg2;
- (void)_setSupplementalLanguageDictionary:(id)arg1 forProduct:(id)arg2;
- (void)_setSupplementalLanguages:(id)arg1 forProduct:(id)arg2 forBuildVersion:(id)arg3;
- (void)_setSuppressDictationOptInLocal:(bool)arg1;
- (id)_supplementalLanguagesDictionary;
- (void)_supportedLanguagesDidChangeExternally;
- (id)activitySummaryReportDate;
- (id)allSiriLanguageCodesForSystemLanguageCode:(id)arg1 isGoodFit:(bool*)arg2;
- (bool)applySASToFirstPartyDomains;
- (bool)assistantIsEnabled;
- (bool)assistantLanguageForceRTL;
- (double)autoDismissalExtendedIdleTimeout;
- (double)autoDismissalIdleTimeout;
- (double)autoDismissalMaxAttentionSamplingTime;
- (id)bestSupportedLanguageCodeForLanguageCode:(id)arg1;
- (bool)cardLoggingEnabled;
- (bool)cloudSyncEnabled;
- (id)cloudSyncEnabledModificationDate;
- (id)configOverrides;
- (unsigned long long)currentNavigationState;
- (void)dealloc;
- (bool)debugButtonIsEnabled;
- (bool)dictationIsEnabled;
- (bool)disableAssistantWhilePasscodeLocked;
- (bool)fileLoggingIsEnabled;
- (void)getOfflineDictationStatusWithCompletion:(id /* block */)arg1;
- (long long)handsFreeMode;
- (id)horsemanSupplementalLanguageDictionary;
- (bool)ignoreServerManualEndpointingThreshold;
- (id)inProgressOutputVoice;
- (id)init;
- (unsigned long long)internalUserClassification;
- (bool)isCurrentLocaleNativelySupported;
- (bool)isLocaleIdentifierNativelySupported:(id)arg1;
- (id)languageCode;
- (bool)legacyLoggingEnabled;
- (bool)limitedAudioLoggingEnabled;
- (id)manualEndpointingThreshold;
- (int)myriadConstantGoodness;
- (bool)myriadCoordinationEnabled;
- (float)myriadDeviceAdjust;
- (unsigned char)myriadDeviceClass;
- (double)myriadDeviceDelay;
- (id)myriadDeviceGroup;
- (double)myriadDeviceSlowdown;
- (double)myriadDeviceTrumpDelay;
- (bool)myriadDuckingEnabled;
- (id)myriadLastWin;
- (bool)myriadServerHasProvisioned;
- (bool)myriadServerProvisioning;
- (bool)offlineDictationOverride;
- (id)offlineDictationProfileOverridePath;
- (id)outputVoice;
- (void)removeConfigOverrideForKey:(id)arg1;
- (void)resetSessionLanguage;
- (bool)respectsSystemMute;
- (void)setActivitySummaryReportDateToNow;
- (void)setApplySASToFirstPartyDomains:(bool)arg1;
- (void)setAssistantIsEnabled:(bool)arg1;
- (void)setAssistantLanguageForceRTL:(bool)arg1;
- (void)setAutoDismissalExtendedIdleTimeout:(double)arg1;
- (void)setAutoDismissalIdleTimeout:(double)arg1;
- (void)setAutoDismissalMaxAttentionSamplingTime:(double)arg1;
- (void)setCardLoggingEnabled:(bool)arg1;
- (void)setCloudSyncEnabled:(bool)arg1;
- (void)setConfigOverrideWithValue:(id)arg1 forKey:(id)arg2;
- (void)setConfigOverrides:(id)arg1;
- (void)setCurrentNavigationState:(unsigned long long)arg1;
- (void)setDebugButtonIsEnabled:(bool)arg1;
- (void)setDictationIsEnabled:(bool)arg1;
- (void)setDisableAssistantWhilePasscodeLocked:(bool)arg1;
- (void)setFileLoggingIsEnabled:(bool)arg1;
- (void)setHandsFreeMode:(long long)arg1;
- (void)setIgnoreServerManualEndpointingThreshold:(bool)arg1;
- (void)setInProgressOutputVoice:(id)arg1;
- (void)setInternalUserClassification:(unsigned long long)arg1;
- (void)setLanguageCode:(id)arg1;
- (void)setLimitedAudioLoggingEnabled:(bool)arg1;
- (void)setManualEndpointingThreshold:(id)arg1;
- (void)setMyriadConstantGoodness:(int)arg1;
- (void)setMyriadCoordinationEnabled:(bool)arg1;
- (void)setMyriadDeviceAdjust:(float)arg1;
- (void)setMyriadDeviceClass:(unsigned char)arg1;
- (void)setMyriadDeviceDelay:(double)arg1;
- (void)setMyriadDeviceGroup:(id)arg1;
- (void)setMyriadDeviceSlowdown:(double)arg1;
- (void)setMyriadDeviceTrumpDelay:(double)arg1;
- (void)setMyriadDuckingEnabled:(bool)arg1;
- (void)setMyriadLastWin;
- (void)setMyriadServerHasProvisioned:(bool)arg1;
- (void)setMyriadServerProvisioning:(bool)arg1;
- (void)setOfflineDictationOverride:(bool)arg1;
- (void)setOfflineDictationProfileOverridePath:(id)arg1;
- (void)setOutputVoice:(id)arg1;
- (void)setRespectsSystemMute:(bool)arg1;
- (void)setShouldLoadNativeMessagesExtensionAsBundle:(bool)arg1;
- (void)setShowServerOnUI:(bool)arg1;
- (void)setShowsHoldToTalkIndicator:(bool)arg1;
- (void)setSiriDebugUIEnabled:(bool)arg1;
- (void)setSiriSpeakerGradingDebugUIEnabled:(bool)arg1;
- (void)setStreamingDictationEnabled:(bool)arg1;
- (void)setSuppressAssistantOptIn:(bool)arg1;
- (void)setSuppressDictationOptIn:(bool)arg1;
- (void)setTLSSessionTicketsFlushPending:(bool)arg1;
- (void)setUseDeviceSpeakerForTTS:(long long)arg1;
- (void)setUseSASAutoSelectionFeature:(bool)arg1;
- (void)setValue:(id)arg1 forSessionContextKey:(id)arg2;
- (bool)shouldLoadNativeMessagesExtensionAsBundle;
- (bool)shouldLogForQA;
- (bool)showServerOnUI;
- (bool)showsHoldToTalkIndicator;
- (bool)siriDebugUIEnabled;
- (bool)siriSpeakerGradingDebugUIEnabled;
- (bool)streamingDictationEnabled;
- (id)supplementalLanguageDictionaryForProduct:(id)arg1;
- (id)supplementalLanguages;
- (id)supplementalLanguagesForProduct:(id)arg1 forBuildVersion:(id)arg2;
- (id)supplementalLanguagesModificationDate;
- (bool)suppressAssistantOptIn;
- (bool)suppressDictationOptIn;
- (void)synchronize;
- (void)synchronizeVoiceServicesLanguageCode;
- (bool)tlsSessionTicketsFlushPending;
- (long long)useDeviceSpeakerForTTS;
- (bool)useSASAutoSelectionFeature;
- (id)valueForSessionContextPreferenceKey:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

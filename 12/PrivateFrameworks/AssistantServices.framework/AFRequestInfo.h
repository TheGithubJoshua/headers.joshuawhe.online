<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AFRequestInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AssistantServices.framework/AFRequestInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices (1)
 */

@interface AFRequestInfo : NSObject <NSCopying, NSSecureCoding> {
    long long  _activationEvent;
    NSNumber * _combinedRank;
    NSNumber * _combinedScore;
    NSString * _correctedSpeech;
    NSDictionary * _correctedSpeechContext;
    NSString * _directAction;
    NSString * _handoffNotification;
    NSString * _handoffOriginDeviceName;
    NSData * _handoffRequestData;
    bool  _handoffRequiresUserInteraction;
    NSString * _handoffURLString;
    NSString * _interactionId;
    NSNumber * _notifyState;
    NSNumber * _onDeviceUtterancesPresent;
    unsigned long long  _options;
    NSNumber * _originalRank;
    NSNumber * _originalScore;
    NSString * _previousUtterance;
    NSString * _sessionId;
    AFSpeechRequestOptions * _speechRequestOptions;
    SAStartLocalRequest * _startLocalRequest;
    SAStartRequest * _startRequest;
    NSString * _text;
    unsigned long long  _timestamp;
    struct NSUUID { Class x1; } * _turnIdentifier;
    NSString * _utteranceSource;
}

@property (nonatomic) long long activationEvent;
@property (nonatomic, copy) NSNumber *combinedRank;
@property (nonatomic, copy) NSNumber *combinedScore;
@property (nonatomic, copy) NSString *correctedSpeech;
@property (nonatomic, copy) NSDictionary *correctedSpeechContext;
@property (nonatomic, copy) NSString *directAction;
@property (nonatomic, copy) NSString *handoffNotification;
@property (nonatomic, copy) NSString *handoffOriginDeviceName;
@property (nonatomic, copy) NSData *handoffRequestData;
@property (nonatomic) bool handoffRequiresUserInteraction;
@property (nonatomic, copy) NSString *handoffURLString;
@property (nonatomic, copy) NSString *interactionId;
@property (nonatomic, copy) NSNumber *notifyState;
@property (nonatomic, copy) NSNumber *onDeviceUtterancesPresent;
@property (nonatomic) unsigned long long options;
@property (nonatomic, copy) NSNumber *originalRank;
@property (nonatomic, copy) NSNumber *originalScore;
@property (nonatomic, copy) NSString *previousUtterance;
@property (nonatomic, copy) NSString *sessionId;
@property (nonatomic, copy) AFSpeechRequestOptions *speechRequestOptions;
@property (nonatomic, copy) SAStartLocalRequest *startLocalRequest;
@property (nonatomic, copy) SAStartRequest *startRequest;
@property (nonatomic, copy) NSString *text;
@property (nonatomic, readonly) unsigned long long timestamp;
@property (nonatomic, copy) NSUUID *turnIdentifier;
@property (nonatomic, copy) NSString *utteranceSource;

// Image: /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (long long)activationEvent;
- (id)combinedRank;
- (id)combinedScore;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)correctedSpeech;
- (id)correctedSpeechContext;
- (id)description;
- (id)directAction;
- (void)encodeWithCoder:(id)arg1;
- (id)handoffNotification;
- (id)handoffOriginDeviceName;
- (id)handoffRequestData;
- (bool)handoffRequiresUserInteraction;
- (id)handoffURLString;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithTimestamp:(unsigned long long)arg1;
- (id)interactionId;
- (bool)isSpeechRequest;
- (id)notifyState;
- (id)onDeviceUtterancesPresent;
- (unsigned long long)options;
- (id)originalRank;
- (id)originalScore;
- (id)previousUtterance;
- (bool)requiresUserInteraction;
- (id)sessionId;
- (void)setActivationEvent:(long long)arg1;
- (void)setCombinedRank:(id)arg1;
- (void)setCombinedScore:(id)arg1;
- (void)setCorrectedSpeech:(id)arg1;
- (void)setCorrectedSpeechContext:(id)arg1;
- (void)setDirectAction:(id)arg1;
- (void)setHandoffNotification:(id)arg1;
- (void)setHandoffOriginDeviceName:(id)arg1;
- (void)setHandoffRequestData:(id)arg1;
- (void)setHandoffRequiresUserInteraction:(bool)arg1;
- (void)setHandoffURLString:(id)arg1;
- (void)setInteractionId:(id)arg1;
- (void)setNotifyState:(id)arg1;
- (void)setOnDeviceUtterancesPresent:(id)arg1;
- (void)setOptions:(unsigned long long)arg1;
- (void)setOriginalRank:(id)arg1;
- (void)setOriginalScore:(id)arg1;
- (void)setPreviousUtterance:(id)arg1;
- (void)setSessionId:(id)arg1;
- (void)setSpeechRequestOptions:(id)arg1;
- (void)setStartLocalRequest:(id)arg1;
- (void)setStartRequest:(id)arg1;
- (void)setText:(id)arg1;
- (void)setTurnIdentifier:(struct NSUUID { Class x1; }*)arg1;
- (void)setUtteranceSource:(id)arg1;
- (id)speechRequestOptions;
- (id)startLocalRequest;
- (id)startRequest;
- (id)text;
- (unsigned long long)timestamp;
- (struct NSUUID { Class x1; }*)turnIdentifier;
- (id)utteranceSource;

// Image: /System/Library/PrivateFrameworks/AssistantUI.framework/AssistantUI

- (bool)afui_isRemoteHeadsetActivation;
- (bool)afui_isRemoteVoiceActivation;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKAccountAutomaticPaymentsController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKAccountAutomaticPaymentsController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKAccountAutomaticPaymentsController : NSObject <PKPaymentAuthorizationCoordinatorDelegate, PKPaymentAuthorizationCoordinatorPrivateDelegate> {
    PKAccount * _account;
    PKAccountService * _accountService;
    PKCurrencyAmount * _amount;
    PKApplePayTrustSignatureRequest * _applePayTrustSignatureRequest;
    bool  _authorized;
    NSArray * _automaticPayments;
    PKBankAccountInformation * _bankInformation;
    PKAccountAutomaticPaymentsConfigurationViewController * _configurationViewController;
    PKAccountAutomaticPaymentsDateViewController * _dateViewController;
    <PKAccountAutomaticPaymentsControllerDelegate> * _delegate;
    unsigned long long  _featureIdentifier;
    NSArray * _fundingSources;
    PKAccountAutomaticPaymentsHeroViewController * _heroViewController;
    PKAccountAutomaticPaymentsMinimumPaymentDisclosureViewController * _minimumPaymentDisclosureViewController;
    PKPaymentAuthorizationCoordinator * _paymentAuthorizationCoordinator;
    NSDate * _paymentDate;
    long long  _paymentFrequency;
    long long  _paymentPreset;
    long long  _paymentSetupContext;
    PKPaymentWebService * _paymentWebService;
    id /* block */  _performScheduleAutomaticPaymentsCompletion;
    NSError * _performScheduleAutomaticPaymentsError;
    PKAccountAutomaticPaymentsPresetViewController * _presetViewController;
    NSCalendar * _productCalendar;
    NSTimeZone * _productTimeZone;
    PKAccountWebServiceSchedulePaymentRequest * _schedulePaymentRequest;
    long long  _scheduledDay;
    PKAccountAutomaticPaymentsSetupCompleteViewController * _setupCompleteViewController;
    UIViewController * _viewPaymentController;
}

@property (nonatomic, readonly) PKAccount *account;
@property (nonatomic, retain) PKCurrencyAmount *amount;
@property (nonatomic, retain) NSArray *automaticPayments;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKAccountAutomaticPaymentsControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) unsigned long long featureIdentifier;
@property (nonatomic, retain) NSArray *fundingSources;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDate *paymentDate;
@property (nonatomic) long long paymentFrequency;
@property (nonatomic) long long paymentPreset;
@property (nonatomic, readonly) long long paymentSetupContext;
@property (nonatomic) long long scheduledDay;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_bankAccountsForFundingSources:(id)arg1;
- (id)_paymentRequest;
- (id)_paymentSummaryItems;
- (void)_performApplePayTrustSignatureRequestWithSignature:(id)arg1 completion:(id /* block */)arg2;
- (void)_performPaymentRequest:(id)arg1;
- (void)_resetPaymentConfiguration;
- (id)_schedulePaymentRequest;
- (id)account;
- (id)alertControllerForScheduledDate:(id)arg1;
- (id)amount;
- (id)automaticPayments;
- (bool)canPerformScheduleAutomaticPaymentsWithPreset:(long long)arg1 frequency:(long long)arg2 amount:(id)arg3 paymentDate:(id)arg4;
- (id)delegate;
- (unsigned long long)featureIdentifier;
- (id)fundingSources;
- (id)initWithAccountService:(id)arg1 paymentWebService:(id)arg2 account:(id)arg3 context:(long long)arg4;
- (long long)minimumPaymentDayForPreset:(long long)arg1;
- (void)nextViewControllerFromViewController:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)paymentAuthorizationCoordinator:(id)arg1 didAuthorizeApplePayTrustSignature:(id)arg2 handler:(id /* block */)arg3;
- (void)paymentAuthorizationCoordinator:(id)arg1 didAuthorizePayment:(id)arg2 handler:(id /* block */)arg3;
- (void)paymentAuthorizationCoordinator:(id)arg1 didUpdateAccountServicePaymentMethod:(id)arg2 handler:(id /* block */)arg3;
- (void)paymentAuthorizationCoordinatorDidFinish:(id)arg1;
- (id)paymentDate;
- (long long)paymentFrequency;
- (long long)paymentPreset;
- (long long)paymentSetupContext;
- (void)performScheduleAutomaticPayments:(id /* block */)arg1;
- (void)performScheduleAutomaticPaymentsFromViewController:(id)arg1;
- (void)preflightWithCompletion:(id /* block */)arg1;
- (void)presentNextViewControllerFromViewController:(id)arg1;
- (long long)scheduledDay;
- (void)setAmount:(id)arg1;
- (void)setAutomaticPayments:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFundingSources:(id)arg1;
- (void)setPaymentDate:(id)arg1;
- (void)setPaymentFrequency:(long long)arg1;
- (void)setPaymentPreset:(long long)arg1;
- (void)setScheduledDay:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKEditTableViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKEditTableViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKEditTableViewController : UITableViewController <PKEditPassesPerformanceTestResponder, PKEditTableNoPassesViewDelegate, UITableViewDataSourcePrefetching> {
    <PKEditTableViewControllerCachingDelegate> * _cachingDelegate;
    PKEditPendingCacheRequest * _currentCacheRequest;
    bool  _dragging;
    PKGroupsController * _existingGroupsController;
    NSMutableArray * _highPriorityRequests;
    NSCache * _imageCache;
    struct CGSize { 
        double width; 
        double height; 
    }  _imageSizeNeeded;
    unsigned long long  _imagesToKeep;
    bool  _isAccessibilityCategory;
    NSMutableArray * _lastSnapshotDurations;
    double  _lastYOffset;
    double  _lastYOffsetTime;
    NSMutableArray * _lowPriorityRequests;
    bool  _needsFullPass;
    PKEditTableNoPassesView * _noPassesView;
    long long  _performanceTest;
    NSString * _performanceTestName;
    NSMutableDictionary * _placeholdersPerPassStyle;
    NSObject<OS_dispatch_queue> * _queueCaching;
    bool  _scrollingFast;
    bool  _scrollingUp;
    bool  _shouldProcessHighPriorityRequests;
    bool  _shouldProcessLowPriorityRequests;
    bool  _shouldShowNoPassesView;
    double  _snapshotDurationAverage;
    UITableView * _tableView;
    long long  _testIteration;
    unsigned long long  _visibleRows;
}

@property (nonatomic) <PKEditTableViewControllerCachingDelegate> *cachingDelegate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) PKGroupsController *existingGroupsController;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long performanceTest;
@property (nonatomic, retain) NSString *performanceTestName;
@property (readonly) Class superclass;
@property (nonatomic) long long testIteration;

- (void).cxx_destruct;
- (id)_createImageForPass:(id)arg1 imageSize:(struct CGSize { double x1; double x2; })arg2 cacheKey:(id)arg3 fullPass:(bool)arg4 stacked:(bool)arg5;
- (id)_createPassStackWithPassImage:(id)arg1 withHeight:(double)arg2;
- (id)_cropImage:(id)arg1 toHeight:(double)arg2;
- (void)_imageOfSize:(struct CGSize { double x1; double x2; })arg1 forPass:(id)arg2 fullPass:(bool)arg3 stacked:(bool)arg4 synchronously:(bool)arg5 preemptive:(bool)arg6 placeholder:(id /* block */)arg7 completion:(id /* block */)arg8;
- (unsigned long long)_imagesToKeepOutsideVisibleCells;
- (id)_resizedImageWithImage:(id)arg1 alignmentSize:(struct CGSize { double x1; double x2; })arg2;
- (void)_setShouldProcessLowPriorityRequests:(bool)arg1;
- (void)_updateShouldProcessHighPriorityRequestsWithFastScrolling:(bool)arg1;
- (void)beginPassDeletionTestWithTestName:(id)arg1;
- (void)beginPassSelectionTestWithTestName:(id)arg1;
- (void)beginScrollingTestWithTestName:(id)arg1;
- (id)cachingDelegate;
- (void)clearImageCacheForPass:(id)arg1;
- (void)currentCacheRequestCompletedWithImage:(id)arg1 duration:(double)arg2;
- (id)existingGroupsController;
- (void)failedTestWithReason:(id)arg1;
- (void)findApps;
- (void)generatePlaceholderImages;
- (void)imageForPass:(id)arg1 stacked:(bool)arg2 synchronously:(bool)arg3 placeholder:(id /* block */)arg4 completion:(id /* block */)arg5;
- (id)initWithStyle:(long long)arg1;
- (void)loadContentAndImageSetFromExistingPassForPass:(id)arg1;
- (id)mostRecentPassInGroup:(id)arg1;
- (void)moveHighPriorityToLowPriorityWithCacheKey:(id)arg1;
- (void)noPassesViewFindAppsForWalletTapped:(id)arg1;
- (void)noPassesViewScanCodeButtonTapped:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)passedTest;
- (long long)performanceTest;
- (id)performanceTestName;
- (void)preemptivelyCacheImagesForPass:(id)arg1 stacked:(bool)arg2;
- (void)processCacheRequest:(id)arg1;
- (void)removeRequestsWithCacheKey:(id)arg1;
- (void)resumeRequestIfNoScrollingAfterTimeInterval:(double)arg1;
- (void)scanCode;
- (void)scrollToFirstRowOrFailTest;
- (void)scrollToLastRowOrFailTest;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)selectFirstRowOrFailTest;
- (void)setCachingDelegate:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setExistingGroupsController:(id)arg1;
- (void)setPerformanceTest:(long long)arg1;
- (void)setPerformanceTestName:(id)arg1;
- (void)setTestIteration:(long long)arg1;
- (void)showNoPassesView:(bool)arg1;
- (void)startedTestWithName:(id)arg1;
- (bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellWithIdentifier:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 prefetchRowsAtIndexPaths:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (long long)testIteration;
- (void)triageCacheRequest:(id)arg1;
- (void)updateAverageSnapshotDuration:(double)arg1;
- (void)viewDidLoad;
- (unsigned long long)visibleRowsCount;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

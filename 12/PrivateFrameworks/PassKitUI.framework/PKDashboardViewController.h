<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKDashboardViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKDashboardViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKDashboardViewController : UICollectionViewController <PKDashboardDataSourceDelegate, PKDashboardViewControllerDelegateFlowLayout, UICollectionViewDataSourcePrefetching> {
    NSMutableDictionary * _blocksOnVisibilityChange;
    PKUISpringAnimationFactory * _collectionViewFactory;
    bool  _contentIsLoaded;
    UICollectionViewLayout<PKDashboardLayout> * _customLayout;
    <PKDashboardDataSource> * _dataSource;
    <PKDashboardDelegate> * _delegate;
    NSMutableDictionary * _footersForSection;
    bool  _inScrollViewDidScroll;
    bool  _isHidingContent;
    bool  _isPresentingContent;
    double  _lastScrollOffset;
    bool  _navigationBarVisible;
    double  _navigationBarVisiblityTopInset;
    bool  _presentationAnimated;
    NSArray * _presenters;
    NSMutableDictionary * _presentersPerItemClassName;
    PKDashboardFooterTextView * _sampleFooterView;
    PKDashboardTitleHeaderView * _sampleHeaderView;
    bool  _shouldAnimateNavigationBarAppearance;
    bool  _shouldPresentAllContent;
    bool  _shouldUseClearNavigationBar;
    NSMutableDictionary * _titlesForSection;
    unsigned char  _visibilityState;
    NSSet * _visibleCellsExcludingSafeArea;
}

@property (nonatomic, readonly) <PKDashboardDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKDashboardDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isPresentingContent;
@property (nonatomic, readonly) bool navigationBarVisible;
@property (nonatomic) double navigationBarVisiblityTopInset;
@property (nonatomic) bool shouldAnimateNavigationBarAppearance;
@property (nonatomic) bool shouldUseClearNavigationBar;
@property (readonly) Class superclass;

+ (id)backgroundColor;

- (void).cxx_destruct;
- (id)_actualItemIndexPathForIndexPath:(id)arg1;
- (void)_hideAllContentAnimated:(bool)arg1;
- (id)_internalIndexPathForItemIndexPath:(id)arg1;
- (bool)_isCellVisibleAtIndexPath:(id)arg1 withTopSafeArea:(double)arg2 contentOffset:(double)arg3;
- (bool)_isIndexPathAFooter:(id)arg1;
- (bool)_isIndexPathAHeader:(id)arg1;
- (void)_presentAllContent;
- (void)_updateNavigationBarForVisible;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didUnhighlightItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)collectionView:(id)arg1 prefetchItemsAtIndexPaths:(id)arg2;
- (bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)contentIsLoaded;
- (id)dataSource;
- (id)delegate;
- (void)deleteSections:(id)arg1;
- (id)initWithDataSource:(id)arg1 presenters:(id)arg2 layout:(id)arg3;
- (void)insertSections:(id)arg1;
- (bool)isPresentingContent;
- (void)itemChanged:(id)arg1 atIndexPath:(id)arg2;
- (bool)itemIsIndependentInCollectionView:(id)arg1 atIndexPath:(id)arg2;
- (bool)itemIsStackableInCollectionView:(id)arg1 atIndexPath:(id)arg2;
- (bool)navigationBarVisible;
- (double)navigationBarVisiblityTopInset;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)performBatchUpdates:(id /* block */)arg1 completion:(id /* block */)arg2;
- (double)pkui_preferredNavigationBarBackgroundOpacity;
- (bool)pkui_prefersNavigationBarShadowHidden;
- (long long)preferredStatusBarStyle;
- (void)reloadSections:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setActionForVisibilityChange:(id /* block */)arg1 indexPath:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setNavigationBarVisiblityTopInset:(double)arg1;
- (void)setShouldAnimateNavigationBarAppearance:(bool)arg1;
- (void)setShouldUseClearNavigationBar:(bool)arg1;
- (bool)shouldAnimateNavigationBarAppearance;
- (void)shouldPresentAllContent:(bool)arg1 animated:(bool)arg2;
- (bool)shouldUseClearNavigationBar;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKPaymentPreferencesViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKPaymentPreferencesViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKPaymentPreferencesViewController : UIViewController <CNContactPickerDelegate, PKAddressEditorViewControllerDelegate, PKAddressSearcherViewControllerDelegate, UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate> {
    UITextField * _currentEditingField;
    NSIndexPath * _currentEditingIndexPath;
    PKPaymentPass * _currentlySelectedPaymentPass;
    id /* block */  _handler;
    NSArray * _latestPreferences;
    PKPassSnapshotter * _passSnapshotter;
    PKPaymentPass * _paymentPassForBillingErrors;
    UISwitch * _peerPaymentAccountPaymentSwitch;
    id /* block */  _pickedContactHandler;
    id /* block */  _pickedContactPropertyHandler;
    NSArray * _preferences;
    PKPaymentPreferenceButtonCell * _sizingButtonCell;
    long long  _style;
    UITableView * _tableView;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ handler;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id /* block */ pickedContactHandler;
@property (nonatomic, copy) id /* block */ pickedContactPropertyHandler;
@property (nonatomic, retain) NSArray *preferences;
@property (nonatomic, readonly) long long style;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UITableView *tableView;

- (void).cxx_destruct;
- (id)_cellForNamePreference:(id)arg1 row:(unsigned long long)arg2;
- (id)_cellForPreference:(id)arg1 row:(unsigned long long)arg2;
- (id)_cellOfClass:(Class)arg1;
- (void)_cleanupInlineEdits;
- (void)_editPreferenceAtIndexPath:(id)arg1;
- (id)_hyperlinkFooterViewForPreference:(id)arg1;
- (bool)_isPaymentStyle;
- (bool)_isViewTranslucent;
- (void)_keyboardDidShow:(id)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (id)_peerPaymentAccountPaymentSwitch;
- (void)_presentMeCardAlertControllerWithContact:(id)arg1 contactKey:(id)arg2 handler:(id /* block */)arg3;
- (id)_requiredKeysForPreference:(id)arg1 contact:(id)arg2;
- (void)_savePickedContact:(id)arg1 inPreference:(id)arg2;
- (bool)_saveUpdatedContact:(id)arg1 contactKey:(id)arg2 preference:(id)arg3 atIndex:(long long)arg4;
- (void)_setContactHandlersForPreference:(id)arg1;
- (void)_showAddressEditorForContact:(id)arg1 title:(id)arg2 requiredKeys:(id)arg3 highlightedKeys:(id)arg4 errors:(id)arg5;
- (void)_showAddressPickerForPreference:(id)arg1;
- (void)_showContactsPickerForPreference:(id)arg1;
- (void)_startInlineEditingForPreference:(id)arg1 inSection:(unsigned long long)arg2;
- (void)_updateContactAndForceSelection:(bool)arg1;
- (bool)_updateMeCardWithNewContact:(id)arg1 oldContact:(id)arg2 forKey:(id)arg3 usingPreference:(id)arg4;
- (void)_updateNavigationBarButtons;
- (void)_updatePreferredContentSize;
- (void)addressEditorViewController:(id)arg1 selectedContact:(id)arg2;
- (void)addressEditorViewControllerDidCancel:(id)arg1;
- (void)addressSearcherViewController:(id)arg1 selectedContact:(id)arg2;
- (void)addressSearcherViewControllerDidCancel:(id)arg1;
- (void)applePayCashSwitchValueChanged:(id)arg1;
- (void)clearErrorsForPreference:(Class)arg1;
- (void)contactPicker:(id)arg1 didSelectContact:(id)arg2;
- (void)contactPicker:(id)arg1 didSelectContactProperty:(id)arg2;
- (void)contactPickerDidCancel:(id)arg1;
- (void)dealloc;
- (id /* block */)handler;
- (void)hideTextField:(id)arg1;
- (id)initWithStyle:(long long)arg1 preferences:(id)arg2 title:(id)arg3 handler:(id /* block */)arg4;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id /* block */)pickedContactHandler;
- (id /* block */)pickedContactPropertyHandler;
- (id)pk_childrenForAppearance;
- (id)preferences;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setErrors:(id)arg1 animated:(bool)arg2;
- (void)setErrors:(id)arg1 otherPass:(id)arg2 animated:(bool)arg3;
- (void)setErrors:(id)arg1 selectedPass:(id)arg2 animated:(bool)arg3;
- (void)setHandler:(id /* block */)arg1;
- (void)setPickedContactHandler:(id /* block */)arg1;
- (void)setPickedContactPropertyHandler:(id /* block */)arg1;
- (void)setPreferences:(id)arg1;
- (long long)style;
- (id)tableView;
- (bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 editActionsForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableViewDidFinishReload:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (bool)textFieldShouldEndEditing:(id)arg1;
- (bool)textFieldShouldReturn:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

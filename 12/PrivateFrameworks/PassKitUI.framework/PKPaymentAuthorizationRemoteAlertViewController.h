<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKPaymentAuthorizationRemoteAlertViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKPaymentAuthorizationRemoteAlertViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKPaymentAuthorizationRemoteAlertViewController : SBUIRemoteAlertServiceViewController <PKCompactNavigationContainerControllerDelegate, PKPaymentAuthorizationHostProtocol, PKPaymentAuthorizationServiceViewControllerDelegate, PKPaymentSetupDelegate, PKPaymentSetupViewControllerDelegate, SBSHardwareButtonEventConsuming> {
    LAUIHorizontalArrowView * _cameraArrowView;
    long long  _coachingState;
    bool  _didDismiss;
    bool  _didSendAuthorizationDidFinish;
    bool  _didSendAuthorizationDidPresent;
    bool  _dismissAfterPaymentSetup;
    PKPaymentAuthorizationRemoteAlertViewControllerExportedObject * _exportedObject;
    long long  _hostAppInterfaceOrientation;
    NSString * _hostApplicationIdentifier;
    NSString * _hostBundleIdentifier;
    NSXPCConnection * _hostConnection;
    NSString * _hostLocalizedAppName;
    NSString * _hostTeamID;
    PKInAppPaymentService * _inAppPaymentService;
    bool  _isPerformingPaymentSetup;
    <BSInvalidatable> * _lockButtonObserver;
    PKCompactNavigationContainerController * _navigationContainer;
    PKPaymentAuthorizationServiceNavigationController * _navigationController;
    PKAssertion * _notificationSuppressionAssertion;
    bool  _paymentAuthorizationPresented;
    PKPaymentProvisioningController * _paymentProvisioningController;
    PKPaymentRequest * _paymentRequest;
    PKPaymentSetupNavigationController * _paymentSetupNavigationController;
    bool  _paymentSetupWasRequired;
    bool  _pearlViewsInserted;
    PKPeerPaymentAccount * _peerPaymentAccount;
    LAUIPhysicalButtonView * _physicalButtonView;
    bool  _shouldAcquireLockButtonObserver;
    int  _statusBarVisibility;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool dismissAfterPaymentSetup;
@property (nonatomic, retain) PKPaymentAuthorizationRemoteAlertViewControllerExportedObject *exportedObject;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSXPCConnection *hostConnection;
@property (nonatomic, retain) PKInAppPaymentService *inAppPaymentService;
@property (nonatomic, readonly) bool isPerformingPaymentSetup;
@property (nonatomic, retain) PKPaymentRequest *paymentRequest;
@property (readonly) Class superclass;

+ (bool)_shouldForwardViewWillTransitionToSize;

- (void).cxx_destruct;
- (void)_canPresentPaymentRequest:(id)arg1 completion:(id /* block */)arg2;
- (id)_configuredPaymentSetupNavigationController;
- (void)_dismiss;
- (void)_handlePaymentRequestPresentationResultType:(long long)arg1 relevantUniqueID:(id)arg2 firstAttempt:(bool)arg3;
- (void)_invalidateLockButtonObserver;
- (bool)_peerPaymentIdentityVerificationRequired;
- (int)_preferredStatusBarVisibility;
- (void)_presentActivatingPassAlertWithRelevantUniqueID:(id)arg1;
- (void)_presentAddCardAlert;
- (void)_presentAlertWithTitle:(id)arg1 message:(id)arg2 actionTitle:(id)arg3 actionHandler:(id /* block */)arg4;
- (void)_presentAlertWithTitle:(id)arg1 message:(id)arg2 cancelTitle:(id)arg3 actionTitle:(id)arg4 actionHandler:(id /* block */)arg5;
- (void)_presentAmpEnrollmentAuthorization;
- (void)_presentInvalidAlert;
- (void)_presentLostModeAlertWithRelevantUniqueID:(id)arg1;
- (void)_presentPassNotSupportedAlertWithRelevantUniqueID:(id)arg1;
- (void)_presentPaymentAuthorization;
- (void)_presentPaymentSetup;
- (void)_presentPeerPaymentIdentityVerification;
- (void)_presentPeerPaymentIdentityVerificationAlert;
- (void)_presentVerifyPassAlertWithRelevantUniqueID:(id)arg1;
- (id)_provisioningController;
- (id)_remoteObjectProxy;
- (void)_setStatusBarHidden:(bool)arg1;
- (bool)_shouldBlockHardwareCancels;
- (bool)_shouldRemoveViewFromHierarchyOnDisappear;
- (void)_updatePearlViews;
- (void)_willAppearInRemoteViewController;
- (void)authorizationDidAuthorizeApplePayTrustSignature:(id)arg1;
- (void)authorizationDidAuthorizeDisbursement:(id)arg1;
- (void)authorizationDidAuthorizePayment:(id)arg1;
- (void)authorizationDidAuthorizePeerPaymentQuote:(id)arg1;
- (void)authorizationDidAuthorizePurchase:(id)arg1;
- (void)authorizationDidFinishWithError:(id)arg1;
- (void)authorizationDidRequestMerchantSession;
- (void)authorizationDidSelectPaymentMethod:(id)arg1;
- (void)authorizationDidSelectShippingAddress:(id)arg1;
- (void)authorizationDidSelectShippingMethod:(id)arg1;
- (void)authorizationDidUpdateAccountServicePaymentMethod:(id)arg1;
- (void)authorizationViewController:(id)arg1 didEncounterAuthorizationEvent:(unsigned long long)arg2;
- (void)authorizationViewControllerDidChangeCoachingState:(id)arg1;
- (void)authorizationViewControllerDidChangeUserIntentRequirement:(id)arg1;
- (void)authorizationWillStart;
- (void)compactNavigationContainerControllerReceivedExternalTap:(id)arg1;
- (void)configureWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)consumeDoublePressUpForButtonKind:(long long)arg1;
- (void)consumeSinglePressUpForButtonKind:(long long)arg1;
- (void)dealloc;
- (bool)dismissAfterPaymentSetup;
- (void)dismissWithRemoteOrigination:(bool)arg1;
- (id)exportedObject;
- (void)handleHomeButtonPressed;
- (id)hostConnection;
- (id)inAppPaymentService;
- (id)init;
- (bool)isPerformingPaymentSetup;
- (id)paymentRequest;
- (void)paymentSetupDidFinish:(id)arg1;
- (void)sendAuthorizationDidPresentIfNecessary;
- (void)setDismissAfterPaymentSetup:(bool)arg1;
- (void)setExportedObject:(id)arg1;
- (void)setHostConnection:(id)arg1;
- (void)setInAppPaymentService:(id)arg1;
- (void)setPaymentRequest:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (bool)shouldAutorotate;
- (struct CGSize { double x1; double x2; })sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize { double x1; double x2; })arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewControllerDidCancelSetupFlow:(id)arg1;
- (void)viewControllerDidTerminateSetupFlow:(id)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

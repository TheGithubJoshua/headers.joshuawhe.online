<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKExplanationView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKExplanationView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKExplanationView : UIView <UIScrollViewDelegate, UITextViewDelegate> {
    UIActivityIndicatorView * _activityIndicator;
    NSAttributedString * _attributedBodyText;
    NSAttributedString * _attributedSecondaryBodyText;
    long long  _backdropStyle;
    _UIBackdropView * _backdropView;
    double  _backdropWeight;
    UIButton * _bodyButton;
    NSString * _bodyButtonText;
    NSString * _bodyText;
    bool  _bodyTextIsNaturalAlgined;
    UITextView * _bodyTextView;
    UIView * _bodyView;
    PKCheckGlyphLayer * _checkmarkLayer;
    long long  _context;
    <PKExplanationViewDelegate> * _delegate;
    PKPaymentSetupDockView * _dockView;
    bool  _forceShowSetupLaterButton;
    UIView * _heroView;
    bool  _hideTitleText;
    UIImage * _image;
    UIImageView * _imageView;
    UIImageView * _logoImageView;
    bool  _privacyFooterShouldPin;
    OBPrivacyLinkController * _privacyLink;
    UIScrollView * _scrollView;
    UITextView * _secondaryBodyTextView;
    bool  _showPrivacyView;
    UIFont * _titleFont;
    UIImage * _titleImage;
    UILabel * _titleLabel;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _titleLabelFrame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _titleLabelLastLineBounds;
    double  _titleLabelLastLineDescent;
    NSString * _titleText;
    bool  _titleTextIsNaturalAlgined;
    double  _topMargin;
    bool  _updatingBackdropSettings;
}

@property (nonatomic, readonly) UIActivityIndicatorView *activityIndicator;
@property (nonatomic, copy) NSAttributedString *attributedBodyText;
@property (nonatomic, copy) NSAttributedString *attributedSecondaryBodyText;
@property (nonatomic, copy) NSString *bodyButtonText;
@property (nonatomic, copy) NSString *bodyText;
@property (nonatomic) bool bodyTextIsNaturalAlgined;
@property (nonatomic, retain) UITextView *bodyTextView;
@property (nonatomic, retain) UIView *bodyView;
@property (nonatomic, readonly) PKCheckGlyphLayer *checkmarkLayer;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKExplanationViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PKPaymentSetupDockView *dockView;
@property (nonatomic) bool forceShowSetupLaterButton;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIView *heroView;
@property (nonatomic) bool hideTitleText;
@property (nonatomic, retain) UIImage *image;
@property (nonatomic, readonly) UIImageView *imageView;
@property (nonatomic, retain) UIImageView *logoImageView;
@property (nonatomic, retain) OBPrivacyLinkController *privacyLink;
@property (nonatomic, readonly) UIScrollView *scrollView;
@property (nonatomic) bool showPrivacyView;
@property (readonly) Class superclass;
@property (nonatomic, copy) UIFont *titleFont;
@property (nonatomic, retain) UIImage *titleImage;
@property (nonatomic, copy) NSString *titleText;
@property (nonatomic) bool titleTextIsNaturalAlgined;
@property (nonatomic) double topMargin;

- (void).cxx_destruct;
- (void)_accessibilitySettingsDidChange:(id)arg1;
- (void)_bodyButtonTapped;
- (void)_calculateBlur;
- (void)_continue;
- (id)_createBodyTextView;
- (void)_createSubviews;
- (bool)_isBuddyiPad;
- (void)_setupLater;
- (bool)_showTitleLogoImageView;
- (void)_updateCachedTitleLabelLastLine;
- (void)_updateTitleLabel;
- (id)activityIndicator;
- (id)attributedBodyText;
- (id)attributedSecondaryBodyText;
- (id)bodyButtonText;
- (id)bodyText;
- (bool)bodyTextIsNaturalAlgined;
- (id)bodyTextView;
- (id)bodyView;
- (id)checkmarkLayer;
- (void)dealloc;
- (id)delegate;
- (id)dockView;
- (bool)forceShowSetupLaterButton;
- (id)heroView;
- (bool)hideTitleText;
- (id)image;
- (id)imageView;
- (id)init;
- (id)initWithContext:(long long)arg1;
- (id)initWithContext:(long long)arg1 delegate:(id)arg2;
- (id)initWithDelegate:(id)arg1;
- (void)layoutSubviews;
- (id)logoImageView;
- (void)pk_applyAppearance:(id)arg1;
- (id)privacyLink;
- (id)scrollView;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setAttributedBodyText:(id)arg1;
- (void)setAttributedSecondaryBodyText:(id)arg1;
- (void)setBodyButtonText:(id)arg1;
- (void)setBodyText:(id)arg1;
- (void)setBodyTextIsNaturalAlgined:(bool)arg1;
- (void)setBodyTextView:(id)arg1;
- (void)setBodyView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setForceShowSetupLaterButton:(bool)arg1;
- (void)setHeroView:(id)arg1;
- (void)setHideTitleText:(bool)arg1;
- (void)setImage:(id)arg1;
- (void)setLogoImageView:(id)arg1;
- (void)setPrivacyLink:(id)arg1;
- (void)setShowPrivacyView:(bool)arg1;
- (void)setTitleFont:(id)arg1;
- (void)setTitleImage:(id)arg1;
- (void)setTitleText:(id)arg1;
- (void)setTitleTextIsNaturalAlgined:(bool)arg1;
- (void)setTopMargin:(double)arg1;
- (bool)showPrivacyView;
- (bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 interaction:(long long)arg4;
- (void)tintColorDidChange;
- (id)titleFont;
- (id)titleImage;
- (id)titleText;
- (bool)titleTextIsNaturalAlgined;
- (double)topMargin;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

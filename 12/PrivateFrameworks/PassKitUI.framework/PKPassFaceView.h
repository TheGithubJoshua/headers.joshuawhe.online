<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKPassFaceView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKPassFaceView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKPassFaceView : WLEasyToHitCustomView <PKForegroundActiveArbiterObserver, PKPaymentServiceDelegate> {
    bool  _allowBackgroundPlaceHolders;
    long long  _backgroundMode;
    UIImageView * _backgroundView;
    NSMutableArray * _bodyBucketViews;
    NSMutableSet * _bodyContentViews;
    NSMutableSet * _bodyInvariantViews;
    NSArray * _buckets;
    double  _clippedContentHeight;
    bool  _clipsContent;
    PKPassColorProfile * _colorProfile;
    UIView * _contentView;
    unsigned long long  _contentViewCreatedRegions;
    NSMutableArray * _delayedAnimations;
    double  _dimmer;
    CAFilter * _dimmingFilter;
    UIImage * _faceImage;
    UIImage * _faceShadowImage;
    PKPassFaceTemplate * _faceTemplate;
    bool  _foregroundActive;
    NSMutableArray * _headerBucketViews;
    NSMutableSet * _headerContentViews;
    NSMutableSet * _headerInvariantViews;
    bool  _invalidated;
    unsigned long long  _invariantViewCreatedRegions;
    PKLiveRenderedCardFaceView * _liveBackgroundView;
    bool  _liveMotionEnabled;
    UIImage * _partialFaceImage;
    PKPass * _pass;
    PKPaymentService * _paymentService;
    bool  _resizablePartialImage;
    UIImageView * _shadowBackgroundView;
    bool  _showingBody;
    bool  _showingHeader;
    bool  _showsLiveRendering;
    long long  _style;
    PKTransactionDataOverlayCardFaceView * _transactionDataOverlayView;
    unsigned long long  _visibleRegions;
}

@property (nonatomic) bool allowBackgroundPlaceHolders;
@property (nonatomic) long long backgroundMode;
@property (nonatomic, readonly) bool bodyContentCreated;
@property (nonatomic, readonly, retain) NSArray *buckets;
@property (nonatomic) double clippedContentHeight;
@property (nonatomic) bool clipsContent;
@property (nonatomic, readonly) PKPassColorProfile *colorProfile;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } contentBounds;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } contentSize;
@property (nonatomic, readonly) UIView *contentView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) PKPassFaceTemplate *faceTemplate;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableArray *headerBucketViews;
@property (nonatomic) bool liveMotionEnabled;
@property (nonatomic, readonly) PKPass *pass;
@property (getter=isPaused, nonatomic) bool paused;
@property (nonatomic, readonly) PKPassFaceViewRendererState *rendererState;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } shadowInsets;
@property (nonatomic) bool showsLiveRendering;
@property (nonatomic) long long style;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long visibleRegions;

+ (Class)_faceClassForStyle:(long long)arg1;
+ (id)newFrontFaceViewForStyle:(long long)arg1;

- (void).cxx_destruct;
- (void)_createBucketsIfNecessary;
- (void)_createContentViewsForRegions:(unsigned long long)arg1;
- (void)_createDimmingFilterIfNecessary;
- (void)_createInvariantViewsForRegions:(unsigned long long)arg1;
- (void)_flushContentViewsForRegions:(unsigned long long)arg1;
- (void)_handleTimeOrLocaleChange:(id)arg1;
- (void)_presentDiffRecursivelyDiff:(id)arg1 forBucketAtIndex:(unsigned long long)arg2 withBuckets:(id)arg3 completion:(id /* block */)arg4;
- (void)_recreateFieldDerivedContent;
- (id)_relevantBuckets;
- (void)_setBalances:(id)arg1;
- (void)_setContentViewsAlpha:(double)arg1;
- (void)_setShowsBackgroundView:(bool)arg1;
- (void)_setShowsBodyViews:(bool)arg1;
- (void)_setShowsHeaderViews:(bool)arg1;
- (void)_updateForeignBalances;
- (id)_viewSetForContentViewType:(long long)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })alignmentRectInsets;
- (bool)allowBackgroundPlaceHolders;
- (long long)backgroundMode;
- (bool)bodyContentCreated;
- (id)buckets;
- (double)clippedContentHeight;
- (bool)clipsContent;
- (id)colorProfile;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentBounds;
- (struct CGSize { double x1; double x2; })contentSize;
- (id)contentView;
- (void)createBodyContentViews;
- (void)createBodyInvariantViews;
- (void)createContentViewsWithFade:(bool)arg1;
- (void)createHeaderContentViews;
- (void)createHeaderInvariantViews;
- (void)dealloc;
- (void)didAuthenticate;
- (id)faceTemplate;
- (void)foregroundActiveArbiter:(id)arg1 didUpdateForegroundActiveState:(struct { bool x1; bool x2; })arg2;
- (id)headerBucketViews;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)insertContentView:(id)arg1 ofType:(long long)arg2;
- (void)invalidate;
- (bool)isPaused;
- (void)layoutSubviews;
- (bool)liveMotionEnabled;
- (id)pass;
- (id)passFaceTemplate;
- (void)paymentPassWithUniqueIdentifier:(id)arg1 didReceiveBalanceUpdate:(id)arg2;
- (void)presentDiff:(id)arg1 completion:(id /* block */)arg2;
- (void)removeContentView:(id)arg1 ofType:(long long)arg2;
- (id)rendererState;
- (void)setAllowBackgroundPlaceHolders:(bool)arg1;
- (void)setBackgroundMode:(long long)arg1;
- (void)setClippedContentHeight:(double)arg1;
- (void)setClipsContent:(bool)arg1;
- (void)setDimmer:(double)arg1 animated:(bool)arg2;
- (void)setHeaderBucketViews:(id)arg1;
- (void)setLiveMotionEnabled:(bool)arg1;
- (void)setPass:(id)arg1 colorProfile:(id)arg2;
- (void)setPaused:(bool)arg1;
- (void)setShowsLiveRendering:(bool)arg1;
- (void)setShowsLiveRendering:(bool)arg1 rendererState:(id)arg2;
- (void)setStyle:(long long)arg1;
- (void)setVisibleRegions:(unsigned long long)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })shadowBackgroundInsets;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })shadowInsets;
- (bool)showsLiveRendering;
- (long long)style;
- (void)updateShadow:(double)arg1 animated:(bool)arg2 withDelay:(double)arg3;
- (unsigned long long)visibleRegions;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

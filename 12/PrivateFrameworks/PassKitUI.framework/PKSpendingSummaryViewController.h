<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKSpendingSummaryViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKSpendingSummaryViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKSpendingSummaryViewController : UIViewController <PKSpendingSingleSummaryViewControllerDelegate, PKSpendingSummaryFetcherObserver, UIScrollViewDelegate> {
    PKAccount * _account;
    UIBarButtonItem * _changeModeButton;
    double  _collectionViewVerticalOffset;
    NSCalendar * _currentCalendar;
    NSArray * _currentDataSet;
    double  _currentHeight;
    NSArray * _currentMonthTransactions;
    unsigned long long  _currentSummaryType;
    double  _currentWidth;
    <PKSpendingSummaryViewControllerDelegate> * _delegate;
    PKSpendingSummaryFooterContainer * _footerView;
    bool  _hasPrefetchedLeft;
    bool  _hasPrefetchedRight;
    NSMutableDictionary * _indicesToVCMapping;
    bool  _isDragging;
    bool  _isLowEndDevice;
    bool  _isScrolling;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lockUpdate;
    NSArray * _months;
    NSString * _navTitle;
    bool  _navigationBarOpaque;
    NSMutableDictionary * _nonVisibleIndicesToVCMapping;
    unsigned long long  _numberOfItems;
    PKPaymentPass * _paymentPass;
    NSMutableDictionary * _pendingCollectionViewUpdates;
    NSMutableDictionary * _pendingUpdates;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _previousBounds;
    unsigned long long  _primaryIndex;
    NSObject<OS_dispatch_source> * _scrollTimer;
    UIScrollView * _scrollView;
    unsigned long long  _selectionType;
    PKSpendingSummaryFetcher * _summaryFetcher;
    NSArray * _summaryVCs;
    bool  _transitioningMode;
    NSMutableSet * _unusedVCs;
    NSIndexSet * _visibleIndices;
    NSArray * _weeks;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PKSpendingSummaryViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_canReloadVCs;
- (void)_changeMode;
- (id)_dequeueNonVisibleVCForIndex:(unsigned long long)arg1;
- (id)_dequeueVCForIndex:(unsigned long long)arg1;
- (double)_endOfItemAtIndex:(unsigned long long)arg1;
- (unsigned long long)_indexAtContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)_layoutCollectionViews;
- (void)_loadSummariesForContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)_performModeChange;
- (unsigned long long)_primaryIndexAtOffset:(struct CGPoint { double x1; double x2; })arg1;
- (id)_recoverUnusedVC;
- (void)_reloadDataForVCAtIndex:(unsigned long long)arg1 swap:(bool)arg2;
- (void)_reloadPendingVCs;
- (void)_retireVCForIndex:(unsigned long long)arg1;
- (void)_scrollViewStoppedScrolling;
- (double)_startOfItemAtIndex:(unsigned long long)arg1;
- (void)_switchPrimaryIndexToIndex:(unsigned long long)arg1;
- (double)_transitionProgress;
- (void)_updateAlphaAndFooterDuringTransition;
- (void)_updateNavBarContent;
- (void)_updatePrimaryViewScrolling;
- (void)_updateScrollViewContentSize;
- (id)_visibileIndicesAtContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (double)_yPositionForNonPrimaryVCs;
- (void)dealloc;
- (id)delegate;
- (id)initWithPaymentPass:(id)arg1 account:(id)arg2 fetcher:(id)arg3 weeks:(id)arg4 months:(id)arg5 type:(unsigned long long)arg6 unit:(unsigned long long)arg7 currentMonthTransactions:(id)arg8 upcomingScheduledPayments:(id)arg9;
- (void)invalidatedSpendingSummaryOfType:(unsigned long long)arg1 startingWithDate:(id)arg2;
- (void)invalidatedSummariesAvailable;
- (double)pkui_preferredNavigationBarBackgroundOpacity;
- (bool)pkui_prefersNavigationBarShadowHidden;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (void)setDelegate:(id)arg1;
- (void)spendingSingleSummaryViewController:(id)arg1 changedSelection:(unsigned long long)arg2;
- (void)spendingSingleSummaryViewController:(id)arg1 scrollViewDidScroll:(id)arg2;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

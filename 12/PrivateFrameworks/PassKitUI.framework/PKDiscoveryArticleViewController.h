<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKDiscoveryArticleViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PassKitUI.framework/PKDiscoveryArticleViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PassKitUI.framework/PassKitUI (1)
 */

@interface PKDiscoveryArticleViewController : UIViewController <PKDiscoveryCardViewDelegate, PKPaymentSetupDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, UIGestureRecognizerDelegate, UIViewControllerTransitioningDelegate> {
    UIActivityIndicatorView * _activityIndicator;
    bool  _animatingCard;
    PKDiscoveryArticleLayout * _articleLayout;
    id /* block */  _callToActionTappedOverride;
    PKDiscoveryCardView * _cardView;
    NSMutableDictionary * _cellImageCache;
    UICollectionView * _collectionView;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentInsets;
    PKContinuousButton * _dismissButton;
    UILabel * _downloadingLabel;
    bool  _hasSafeAreaInsetOverride;
    NSMutableDictionary * _imageDownloads;
    bool  _isDownloading;
    NSObject<OS_dispatch_queue> * _loadImageQueue;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lockDownloads;
    UIPanGestureRecognizer * _panGestureRecognizer;
    NSString * _referrerIdentifierOverride;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _safeAreaOverrideInsets;
    UIScreenEdgePanGestureRecognizer * _screenEdgePanGestureRecognizer;
    bool  _shouldHideStatusBar;
    PKDiscoveryArticleAnimatedTransitioningHandler * _transitioningHandler;
    bool  _useCustomPresentation;
}

@property (getter=isAnimatingCard, nonatomic) bool animatingCard;
@property (nonatomic, readonly) PKDiscoveryCardView *cardView;
@property (nonatomic, readonly) UICollectionView *collectionView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasSafeAreaInsetOverride;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } safeAreaOverrideInsets;
@property (nonatomic) bool shouldHideStatusBar;
@property (readonly) Class superclass;
@property (getter=shouldUseCustomPresentation, nonatomic) bool useCustomPresentation;

- (void).cxx_destruct;
- (void)_configureCallToActionShelfView:(id)arg1 forCallToActionShelf:(id)arg2 atIndexPath:(id)arg3;
- (void)_configureInlineMediaShelfView:(id)arg1 forInlineMediaShelf:(id)arg2 atIndexPath:(id)arg3;
- (void)_dismissButtonTapped;
- (void)_handlePanGesture:(id)arg1;
- (bool)_hasCardInGalleryView;
- (void)_leftScreenEdgePanSwipeGesture:(id)arg1;
- (void)_loadMedia:(id)arg1 forShelfViewAtIndexPath:(id)arg2 completion:(id /* block */)arg3;
- (id)_paymentSetupNavigationControllerForProvisioningController:(id)arg1;
- (id)_shelfForIndexPath:(id)arg1;
- (void)_systemTextSizeChanged;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)cardView;
- (id)collectionView;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)dealloc;
- (void)discoveryCardViewCTATapped:(id)arg1 callToAction:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (bool)hasSafeAreaInsetOverride;
- (id)initWithArticleLayout:(id)arg1 referrerIdentifier:(id)arg2;
- (id)initWithItemIdentifier:(id)arg1 referrerIdentifier:(id)arg2;
- (bool)isAnimatingCard;
- (void)loadView;
- (long long)modalPresentationStyle;
- (long long)modalTransitionStyle;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)paymentSetupDidFinish:(id)arg1;
- (long long)preferredStatusBarUpdateAnimation;
- (bool)prefersStatusBarHidden;
- (id)presentationControllerForPresentedViewController:(id)arg1 presentingViewController:(id)arg2 sourceViewController:(id)arg3;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })safeAreaOverrideInsets;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setAnimatingCard:(bool)arg1;
- (void)setArticleLayout:(id)arg1 animated:(bool)arg2;
- (void)setCallToActionTappedOverride:(id /* block */)arg1;
- (void)setHasSafeAreaInsetOverride:(bool)arg1;
- (void)setIsDownloading:(bool)arg1;
- (void)setSafeAreaOverrideInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setShouldHideStatusBar:(bool)arg1;
- (void)setUseCustomPresentation:(bool)arg1;
- (bool)shouldHideStatusBar;
- (bool)shouldUseCustomPresentation;
- (void)viewWillLayoutSubviews;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

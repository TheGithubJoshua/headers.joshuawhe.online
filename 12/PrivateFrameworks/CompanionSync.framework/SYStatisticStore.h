<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SYStatisticStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CompanionSync.framework/SYStatisticStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync (1)
 */

@interface SYStatisticStore : NSObject <NSFilePresenter> {
    struct sqlite3_stmt { } * _addErrorIncoming;
    struct sqlite3_stmt { } * _addProcessingTimeIncoming;
    struct sqlite3 { } * _db;
    struct sqlite3_stmt { } * _insertIncoming;
    struct sqlite3_stmt { } * _insertOutgoing;
    long long  _lastIncomingRowID;
    struct sqlite3_stmt { } * _logFileActivity;
    struct sqlite3_stmt { } * _markCompleteIncoming;
    NSObject<OS_dispatch_queue> * _operations_queue;
    NSString * _path;
    NSObject<OS_dispatch_queue> * _preemption_queue;
    NSOperationQueue * _presenterOperationQueue;
    struct sqlite3_stmt { } * _requestAcked;
    struct sqlite3_stmt { } * _reserveRowID;
    struct sqlite3_stmt { } * _responseReceived;
    struct sqlite3_stmt { } * _timestampForID;
    struct sqlite3_stmt { } * _updateFileOutgoing;
    struct sqlite3_stmt { } * _updateOutgoing;
    struct sqlite3_stmt { } * _updateOutgoingIdentifier;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) NSSet *observedPresentedItemUbiquityAttributes;
@property (readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property (readonly, copy) NSURL *presentedItemURL;
@property (readonly, copy) NSURL *primaryPresentedItemURL;
@property (readonly) Class superclass;

+ (id)sharedInstance;
+ (id)unpackMessageData:(id)arg1;

- (void).cxx_destruct;
- (id)_LOCKED_allServiceNames;
- (bool)_LOCKED_pruneFileTransferLogForServices:(id)arg1;
- (bool)_LOCKED_pruneMessageLogForServices:(id)arg1;
- (int)_closeDB;
- (void)_ensureCorrectFileOwnership:(id)arg1;
- (double)_getMachTimestamp;
- (int)_getSchemaVersion;
- (void)_initializeFilePresentation;
- (id)_keySetForMessageLogTable;
- (void)_letGoForUnitTests:(id)arg1;
- (void)_onQueueAsync:(id /* block */)arg1;
- (void)_onQueueSync:(id /* block */)arg1;
- (void)_openDB;
- (bool)_openDBFile:(bool)arg1;
- (id)_openDBIfNecessary;
- (void)_pruneOldData;
- (bool)_tableEmpty:(id)arg1;
- (id)_unpackMessageData:(id)arg1;
- (id)_unpackMetadata:(id)arg1;
- (void)_unpackPBRequest:(id)arg1 forMessageID:(unsigned short)arg2 intoDictionary:(id)arg3;
- (void)_unpackPBResponse:(id)arg1 forMessageID:(unsigned short)arg2 intoDictionary:(id)arg3;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(id /* block */)arg1;
- (void)assignIdentifier:(id)arg1 toOutgoingMessage:(id)arg2;
- (void)confirmDeliveryOfOutgoingFileTransfer:(id)arg1;
- (void)confirmDeliveryOfOutgoingMessage:(id)arg1;
- (struct sqlite3 { }*)dbRef;
- (void)dealloc;
- (id)init;
- (id)initWithPath:(id)arg1;
- (void)markLastIncomingMessageComplete;
- (id)operationQ;
- (void)presentedItemDidMoveToURL:(id)arg1;
- (id)presentedItemOperationQueue;
- (id)presentedItemURL;
- (void)recordIncomingFileTransferAtURL:(id)arg1 metadata:(id)arg2 identifier:(id)arg3 forService:(id)arg4;
- (void)recordIncomingMessage:(id)arg1 forService:(id)arg2;
- (void)recordOutgoingFileTransferAtURL:(id)arg1 metadata:(id)arg2 identifier:(id)arg3 error:(id)arg4 forService:(id)arg5;
- (void)recordOutgoingMessage:(id)arg1 forService:(id)arg2;
- (unsigned long long)rowIDForPartialMessage:(id)arg1;
- (void)setFileTransferIdentifier:(id)arg1 forOutgoingMessagesWithRowIDs:(id)arg2;
- (void)updateLastIncomingMessageWithError:(id)arg1;
- (void)updateLastIncomingMessageWithProcessingTime:(double)arg1;
- (void)updateOutgoingFileTransferWithIdentifier:(id)arg1 sentSuccessfully:(bool)arg2 error:(id)arg3;
- (void)updateOutgoingMessageWithIdentifier:(id)arg1 didReceiveResponse:(bool)arg2 error:(id)arg3;
- (void)updateOutgoingMessageWithIdentifier:(id)arg1 forService:(id)arg2 sentSuccessfully:(bool)arg3 sendError:(id)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

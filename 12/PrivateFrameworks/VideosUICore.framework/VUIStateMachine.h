<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VUIStateMachine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUICore.framework/VUIStateMachine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUICore.framework/VideosUICore (282.60.36)
 */

@interface VUIStateMachine : NSObject {
    NSMutableArray * _blocksToExecuteAfterStateTransition;
    bool  _callsStateChangeHandlerSynchronously;
    NSString * _currentState;
    NSMutableDictionary * _defaultHandlers;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    NSMutableArray * _events;
    NSMutableDictionary * _handlers;
    bool  _handlingEvent;
    NSArray * _ignorableEvents;
    NSObject<OS_os_log> * _logObject;
    long long  _mode;
    NSString * _name;
    bool  _shouldAcceptEvents;
    id /* block */  _stateChangeHandler;
}

@property (nonatomic) bool callsStateChangeHandlerSynchronously;
@property (copy) NSString *currentState;
@property (copy) NSArray *ignorableEvents;
@property (nonatomic, retain) NSObject<OS_os_log> *logObject;
@property (nonatomic, readonly) long long mode;
@property (nonatomic, readonly, copy) NSString *name;
@property bool shouldAcceptEvents;

+ (void)deregisterStateMachine:(id)arg1;
+ (void)initialize;
+ (void)registerStateMachine:(id)arg1;
+ (id)stateMachineWithName:(id)arg1;
+ (id)stateMachinesOfType:(Class)arg1;

- (void).cxx_destruct;
- (void)_dispatchEvent:(id)arg1;
- (id /* block */)_eventHandlerForEvent:(id)arg1;
- (void)_executePostTransitionBlocks;
- (void)_processEvent:(id)arg1;
- (void)_processNextEvent;
- (void)_transitionToState:(id)arg1 withEvent:(id)arg2 context:(id)arg3 userInfo:(id)arg4;
- (bool)callsStateChangeHandlerSynchronously;
- (id)currentState;
- (void)deregisterHandlers;
- (void)executeBlockAfterCurrentStateTransition:(id /* block */)arg1;
- (id)ignorableEvents;
- (id)initWithName:(id)arg1 initialState:(id)arg2 mode:(long long)arg3;
- (id)initWithName:(id)arg1 initialState:(id)arg2 mode:(long long)arg3 stateChangeHandler:(id /* block */)arg4;
- (id)logObject;
- (void)logUnhandledEvents;
- (long long)mode;
- (id)name;
- (void)postEvent:(id)arg1;
- (void)postEvent:(id)arg1 withContext:(id)arg2;
- (void)postEvent:(id)arg1 withContext:(id)arg2 userInfo:(id)arg3;
- (void)purgeEventQueue;
- (void)registerDefaultHandlerForEvent:(id)arg1 withBlock:(id /* block */)arg2;
- (void)registerHandlerForEvent:(id)arg1 onState:(id)arg2 withBlock:(id /* block */)arg3;
- (void)registerHandlerForEvent:(id)arg1 onStates:(id)arg2 withBlock:(id /* block */)arg3;
- (void)registerHandlerForEvents:(id)arg1 onStates:(id)arg2 withBlock:(id /* block */)arg3;
- (void)registerStateTransitionFromState:(id)arg1 onEvent:(id)arg2 toState:(id)arg3;
- (void)setCallsStateChangeHandlerSynchronously:(bool)arg1;
- (void)setCurrentState:(id)arg1;
- (void)setIgnorableEvents:(id)arg1;
- (void)setLogObject:(id)arg1;
- (void)setShouldAcceptEvents:(bool)arg1;
- (bool)shouldAcceptEvents;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

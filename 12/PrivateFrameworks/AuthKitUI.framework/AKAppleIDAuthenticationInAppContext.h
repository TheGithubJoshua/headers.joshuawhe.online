<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AKAppleIDAuthenticationInAppContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AuthKitUI.framework/AKAppleIDAuthenticationInAppContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AuthKitUI.framework/AuthKitUI (1)
 */

@interface AKAppleIDAuthenticationInAppContext : AKAppleIDAuthenticationContext <AKAppleIDAuthenticationUIProvider, AKBasicLoginAlertControllerDelegate, RemoteUIControllerDelegate> {
    <AKAppleIDAuthenticationInAppContextPasswordDelegate> * __passwordDelegate;
    <AKAppleIDAuthenticationInAppContextAlertDelegate> * _alertDelegate;
    AKBasicLoginAlertController * _basicLoginViewController;
    <CDPStateUIProvider> * _cdpUiProvider;
    RUIObjectModel * _currentRemoteOM;
    NSHTTPURLResponse * _deferredResponse;
    <AKAppleIDAuthenticationInAppContextDelegate> * _delegate;
    bool  _forceInlinePresentation;
    UINavigationController * _modalRemoteUINavController;
    AKNativeAccountRecoveryController * _nativeRecoveryController;
    UINavigationController * _navController;
    bool  _overrideFirstActionSignal;
    bool  _presentingServerUI;
    UIViewController * _presentingViewController;
    RemoteUIController * _remoteUIController;
    AKAppleIDServerUIContextController * _serverUIContextController;
    AAUICDPStingrayRemoteUIController * _stingrayController;
    UIViewController * _topViewControllerOnLoadStart;
}

@property (setter=_setPasswordDelegate:, nonatomic) <AKAppleIDAuthenticationInAppContextPasswordDelegate> *_passwordDelegate;
@property (nonatomic) <AKAppleIDAuthenticationInAppContextAlertDelegate> *alertDelegate;
@property (setter=_setCdpUiProvider:, nonatomic, retain) <CDPStateUIProvider> *cdpUiProvider;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AKAppleIDAuthenticationInAppContextDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool forceInlinePresentation;
@property (readonly) unsigned long long hash;
@property (getter=isPresentingServerUI, nonatomic) bool presentingServerUI;
@property (nonatomic) UIViewController *presentingViewController;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_assertValidPresentingViewController;
- (void)_cleanUpBasicLogin;
- (void)_cleanUpBasicLoginWithCompletion:(id /* block */)arg1;
- (void)_contextDidDismissLoginAlertController;
- (void)_contextDidEndPresentingSecondaryUI;
- (void)_contextDidPresentLoginController;
- (void)_contextWillBeginPresentingSecondaryUI;
- (void)_contextWillDismissLoginAlertController;
- (void)_dismissServerProvidedUIWithCompletion:(id /* block */)arg1;
- (void)_handleBackButtonTap:(id)arg1;
- (bool)_isDeferrableFinalResponseHarvested;
- (bool)_isSatisfyingPasswordRequirements;
- (id)_navController;
- (id)_passwordDelegate;
- (void)_presentBasicLoginUIAlertWithCompletion:(id /* block */)arg1;
- (void)_presentIDPProvidedUIWithConfiguration:(id)arg1 completion:(id /* block */)arg2;
- (void)_presentLoginAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 waitForInteraction:(bool)arg4 completion:(id /* block */)arg5;
- (void)_presentServerProvidedUIWithConfiguration:(id)arg1 completion:(id /* block */)arg2;
- (id)_remoteUIController;
- (void)_setCdpUiProvider:(id)arg1;
- (void)_setPasswordDelegate:(id)arg1;
- (id)alertDelegate;
- (void)basicLoginAlertControllerDidDismiss:(id)arg1;
- (void)basicLoginAlertControllerDidPresent:(id)arg1;
- (void)basicLoginAlertControllerWillDismiss:(id)arg1;
- (id)cdpUiProvider;
- (void)completeWithError:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)dismissBasicLoginUIWithCompletion:(id /* block */)arg1;
- (void)dismissKeepUsingUIWithCompletion:(id /* block */)arg1;
- (void)dismissNativeRecoveryUIWithCompletion:(id /* block */)arg1;
- (void)dismissSecondFactorUIWithCompletion:(id /* block */)arg1;
- (void)dismissServerProvidedUIWithCompletion:(id /* block */)arg1;
- (bool)forceInlinePresentation;
- (bool)isPresentingServerUI;
- (void)presentBasicLoginUIWithCompletion:(id /* block */)arg1;
- (void)presentKeepUsingUIForAppleID:(id)arg1 completion:(id /* block */)arg2;
- (void)presentLoginAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 completion:(id /* block */)arg4;
- (void)presentNativeRecoveryUIWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)presentSecondFactorAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 completion:(id /* block */)arg4;
- (void)presentSecondFactorUIWithCompletion:(id /* block */)arg1;
- (void)presentServerProvidedUIWithConfiguration:(id)arg1 completion:(id /* block */)arg2;
- (id)presentingViewController;
- (void)remoteUIController:(id)arg1 didDismissModalNavigationWithObjectModels:(id)arg2;
- (void)remoteUIController:(id)arg1 didFinishLoadWithError:(id)arg2;
- (void)remoteUIController:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)remoteUIController:(id)arg1 didReceiveHTTPResponse:(id)arg2;
- (void)remoteUIController:(id)arg1 didReceiveObjectModel:(id)arg2 actionSignal:(unsigned long long*)arg3;
- (void)remoteUIController:(id)arg1 shouldLoadRequest:(id)arg2 redirectResponse:(id)arg3 withCompletionHandler:(id /* block */)arg4;
- (void)remoteUIController:(id)arg1 willPresentModalNavigationController:(id)arg2;
- (void)remoteUIController:(id)arg1 willPresentObjectModel:(id)arg2 modally:(bool)arg3;
- (id)remoteUIStyle;
- (id)serverDataHarvester;
- (void)setAlertDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setForceInlinePresentation:(bool)arg1;
- (void)setPresentingServerUI:(bool)arg1;
- (void)setPresentingViewController:(id)arg1;
- (void)willPresentModalNavigationController:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NCNotificationListViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UserNotificationsUIKit.framework/NCNotificationListViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit (1)
 */

@interface NCNotificationListViewController : UICollectionViewController <NCNotificationListCellDelegate, NCNotificationListCollectionViewDelegate, NCNotificationViewControllerDelegatePrivate, UIGestureRecognizerDelegate> {
    bool  _backgroundBlurred;
    NCNotificationListCell * _cellWithRevealedActions;
    NSMutableDictionary * _cellsSizesCaches;
    NSMutableDictionary * _cellsSizesCachesSuppressedContent;
    NCAnimationCoordinator * _childPreferredContentSizeChangeCoordinatorForCurrentTransaction;
    NSMutableArray * _childPreferredContentSizeChangeCoordinators;
    <NCNotificationListViewControllerDestinationDelegate> * _destinationDelegate;
    struct { 
        unsigned int shouldAllowRecentNotificationsReveal : 1; 
        unsigned int shouldAttemptToFinishLongLookTransition : 1; 
        unsigned int shouldFinishLongLookTransitionForNotification : 1; 
        unsigned int staticContentProviderForNotificationRequest : 1; 
        unsigned int isPresentingNotificationManagementSuggestionForNotificationRequest : 1; 
        unsigned int auxiliaryOptionsContentProviderForNotificationRequest : 1; 
        unsigned int didEndDisplayingCellForNotificationRequest : 1; 
        unsigned int shouldAllowInteractionsForNotificationRequest : 1; 
        unsigned int willPresentInitialContentWithTransitionCoordinator : 1; 
        unsigned int isUpdatingContent : 1; 
        unsigned int willDismissRemainingContentWithTransitionCoordinator : 1; 
        unsigned int setRaiseGestureDetectionEnabled : 1; 
        unsigned int willRemoveNotificationRequestInLongLook : 1; 
        unsigned int didRemoveNotificationRequestInLongLook : 1; 
        unsigned int requestsClearingNotificationRequestsInSections : 1; 
        unsigned int requestsClearingNotificationRequestsFromDateToDate : 1; 
        unsigned int willPresentLongLookForNotificationViewController : 1; 
        unsigned int willDismissLongLookForNotificationViewController : 1; 
        unsigned int notificationUsageTrackingState : 1; 
        unsigned int isPerformingRevealHinting : 1; 
        unsigned int shouldHorizontallyPanNotificationCell : 1; 
        unsigned int shouldSuppressContentForNotificationRequest : 1; 
        unsigned int keyboardAssertionForGestureWindow : 1; 
        unsigned int hideHomeAffordanceAnimationSettings : 1; 
        unsigned int unhideHomeAffordanceAnimationSettings : 1; 
        unsigned int settleHomeAffordanceAnimationBehaviorDescription : 1; 
        unsigned int requestsExpandingCoalescedBundleForNotificationRequest : 1; 
        unsigned int requestsCoalescingExpandedBundleForCoalescingIdentifier : 1; 
        unsigned int requestsClearingNotificationRequestsForCoalescingIdentifier : 1; 
        unsigned int isExpandedCoalescedBundleForNotificationRequest : 1; 
        unsigned int leadingNotificationRequestForCoalescingIdentifier : 1; 
        unsigned int coalescingIdentifierForNotificationRequest : 1; 
        unsigned int requestsCoalescingNotificationRequest : 1; 
        unsigned int sectionSettingsForSectionIdentifier : 1; 
        unsigned int requestsPresentingManagementView : 1; 
    }  _destinationDelegateFlags;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _insetMargins;
    bool  _needsReloadData;
    bool  _notificationRequestRemovedWhileInLongLook;
    bool  _notificationRequestRemovedWhilePossiblyInLongLook;
    NCNotificationViewController * _notificationViewControllerForSizing;
    NSHashTable * _observers;
    NCTouchEaterGestureRecognizer * _touchEater;
    <NCNotificationListViewControllerUserInteractionDelegate> * _userInteractionDelegate;
    struct { 
        unsigned int significantUserInteraction : 1; 
        unsigned int didScroll : 1; 
        unsigned int didEndScrolling : 1; 
        unsigned int willBeginInteractionWithNotificationVC : 1; 
        unsigned int didEndInteractionWithNotificationVC : 1; 
        unsigned int scrollViewDidScroll : 1; 
        unsigned int scrollViewDidZoom : 1; 
        unsigned int scrollViewWillBeginDragging : 1; 
        unsigned int scrollViewWillEndDragging : 1; 
        unsigned int scrollViewDidEndDragging : 1; 
        unsigned int scrollViewWillBeginDecelerating : 1; 
        unsigned int scrollViewDidEndDecelerating : 1; 
        unsigned int scrollViewDidEndScrollingAnimation : 1; 
        unsigned int scrollViewWillBeginZooming : 1; 
        unsigned int scrollViewDidEndZooming : 1; 
        unsigned int scrollViewShouldScrollToTop : 1; 
        unsigned int scrollViewDidScrollToTop : 1; 
    }  _userInteractionDelegateFlags;
    NCNotificationViewController * _viewControllerPossiblyPresentingLongLook;
    NCNotificationViewController * _viewControllerPresentingLongLook;
}

@property (getter=isBackgroundBlurred, nonatomic) bool backgroundBlurred;
@property (nonatomic, readonly) NSString *backgroundGroupName;
@property (nonatomic) NCNotificationListCell *cellWithRevealedActions;
@property (nonatomic, retain) NSMutableDictionary *cellsSizesCaches;
@property (nonatomic, retain) NSMutableDictionary *cellsSizesCachesSuppressedContent;
@property (nonatomic, retain) NCAnimationCoordinator *childPreferredContentSizeChangeCoordinatorForCurrentTransaction;
@property (nonatomic, retain) NSMutableArray *childPreferredContentSizeChangeCoordinators;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) <NCNotificationListViewControllerDestinationDelegate> *destinationDelegate;
@property (nonatomic) struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; } destinationDelegateFlags;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } insetMargins;
@property (nonatomic, readonly) double itemSpacing;
@property (nonatomic) bool needsReloadData;
@property (nonatomic) bool notificationRequestRemovedWhileInLongLook;
@property (nonatomic) bool notificationRequestRemovedWhilePossiblyInLongLook;
@property (nonatomic, retain) NCNotificationViewController *notificationViewControllerForSizing;
@property (nonatomic, retain) NSHashTable *observers;
@property (getter=isPresentingNotificationInLongLook, nonatomic, readonly) bool presentingNotificationInLongLook;
@property (readonly) Class superclass;
@property (nonatomic, retain) NCTouchEaterGestureRecognizer *touchEater;
@property (nonatomic) <NCNotificationListViewControllerUserInteractionDelegate> *userInteractionDelegate;
@property (nonatomic) struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; } userInteractionDelegateFlags;
@property (nonatomic, retain) NCNotificationViewController *viewControllerPossiblyPresentingLongLook;
@property (nonatomic, retain) NCNotificationViewController *viewControllerPresentingLongLook;

- (void).cxx_destruct;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)_forceTouchAvailabilityDidChange:(id)arg1;
- (bool)_forwardRequestToLongLookIfPresented:(id)arg1 forCoalescedNotification:(id)arg2;
- (id)_groupName;
- (void)_handleEatenTouch:(id)arg1;
- (void)_hintSideSwipeForDefaultActionForNotificationRequest:(id)arg1;
- (void)_installTouchEater;
- (bool)_isContentSuppressedForNotificationRequest:(id)arg1;
- (bool)_isInViewControllerThatHandlesKeyboardAvoidance;
- (bool)_isPointInWindowSpace:(struct CGPoint { double x1; double x2; })arg1 insideCell:(id)arg2;
- (bool)_isPresentingNotificationManagementSuggestionForNotificationRequest:(id)arg1;
- (id)_notificationListCellAtIndexPath:(id)arg1;
- (id)_notificationRequestForCell:(id)arg1;
- (void)_performCollectionViewOperationBlock:(id /* block */)arg1;
- (void)_performCollectionViewOperationBlockIfNecessary:(id /* block */)arg1;
- (void)_reloadCollectionViewDataIfNecessary;
- (void)_reloadRequestsAtIndices:(id)arg1;
- (void)_removeCachedSizesForNotificationRequest:(id)arg1;
- (id)_sectionSettingsForSectionIdentifier:(id)arg1;
- (void)addContentObserver:(id)arg1;
- (id)backgroundGroupName;
- (id)captureOnlyMaterialViewForCurrentState;
- (id)cellWithRevealedActions;
- (id)cellsSizesCaches;
- (id)cellsSizesCachesSuppressedContent;
- (id)childPreferredContentSizeChangeCoordinatorForCurrentTransaction;
- (id)childPreferredContentSizeChangeCoordinators;
- (void)clearAll;
- (void)clearAllNonPersistent;
- (bool)collectionView:(id)arg1 canMoveItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(id)arg3 withSender:(id)arg4;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (struct CGSize { double x1; double x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 performUpdatesAlongsideLayout:(id)arg2;
- (bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (bool)collectionView:(id)arg1 shouldShowMenuForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)destinationDelegate;
- (struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; })destinationDelegateFlags;
- (bool)dismissModalFullScreenAnimated:(bool)arg1;
- (bool)forwardNotificationRequestToLongLookIfPresented:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)handleEatenTouchBeginStateForGestureRecognizer:(id)arg1;
- (void)handleEatenTouchEndStateForGestureRecognizer:(id)arg1;
- (bool)hasContent;
- (bool)hasVisibleContent;
- (id)hideHomeAffordanceAnimationSettingsForNotificationViewController:(id)arg1;
- (void)hideRequestsForNotificationSectionIdentifier:(id)arg1 subSectionIdentifier:(id)arg2;
- (void)hideRequestsForNotificationSectionSettings:(id)arg1;
- (id)homeAffordancePanGesture;
- (id)indexPathForNotificationRequest:(id)arg1;
- (id)init;
- (bool)insertNotificationRequest:(id)arg1 forCoalescedNotification:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })insetMargins;
- (bool)isBackgroundBlurred;
- (bool)isContentExtensionVisible:(id)arg1;
- (bool)isHomeAffordanceVisible;
- (bool)isNotificationListCellVisibleForNotificationRequest:(id)arg1;
- (bool)isPresentingNotificationInLongLook;
- (double)itemSpacing;
- (void)listViewControllerPresentedByUserAction;
- (void)loadView;
- (void)longLookDidDismissForNotificationViewController:(id)arg1;
- (void)longLookDidPresentForNotificationViewController:(id)arg1;
- (void)longLookWillDismissForNotificationViewController:(id)arg1;
- (void)longLookWillPresentForNotificationViewController:(id)arg1;
- (bool)modifyNotificationRequest:(id)arg1 forCoalescedNotification:(id)arg2;
- (bool)needsReloadData;
- (bool)notificationListCell:(id)arg1 shouldPanHorizontallyWithTouch:(id)arg2;
- (void)notificationListCellDidHideCellActions:(id)arg1 resetCellScrollPosition:(bool)arg2 animated:(bool)arg3;
- (void)notificationListCellDidRevealCellActions:(id)arg1;
- (void)notificationListCellDidSignificantUserInteraction:(id)arg1;
- (void)notificationListCellRequestsDefaultAction:(id)arg1 completion:(id /* block */)arg2;
- (void)notificationListCellRequestsDismissAction:(id)arg1 completion:(id /* block */)arg2;
- (void)notificationListCellRequestsPresentingLongLook:(id)arg1 completion:(id /* block */)arg2;
- (void)notificationListCellRequestsPresentingManagementView:(id)arg1 withPresentingView:(id)arg2 completion:(id /* block */)arg3;
- (id)notificationListCellRequestsSectionSettings:(id)arg1 sectionIdentifier:(id)arg2;
- (void)notificationListCollectionView:(id)arg1 willSetFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)notificationRequestAtIndexPath:(id)arg1;
- (id)notificationRequestInLongLook;
- (id)notificationRequestPossiblyInLongLook;
- (bool)notificationRequestRemovedWhileInLongLook;
- (bool)notificationRequestRemovedWhilePossiblyInLongLook;
- (id)notificationRequestsPassingTest:(id /* block */)arg1;
- (id)notificationUsageTrackingStateForNotificationViewController:(id)arg1;
- (id)notificationViewController:(id)arg1 auxiliaryOptionsContentProviderForNotificationRequest:(id)arg2 withLongLook:(bool)arg3;
- (void)notificationViewController:(id)arg1 executeAction:(id)arg2 withParameters:(id)arg3 completion:(id /* block */)arg4;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })notificationViewController:(id)arg1 finalFrameForDismissingLongLookFromView:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })notificationViewController:(id)arg1 initialFrameForPresentingLongLookFromView:(id)arg2;
- (id)notificationViewController:(id)arg1 keyboardAssertionForGestureWindow:(id)arg2;
- (void)notificationViewController:(id)arg1 requestPermissionToExecuteAction:(id)arg2 withParameters:(id)arg3 completion:(id /* block */)arg4;
- (void)notificationViewController:(id)arg1 shouldFinishLongLookTransitionWithCompletionBlock:(id /* block */)arg2;
- (id)notificationViewController:(id)arg1 staticContentProviderForNotificationRequest:(id)arg2;
- (void)notificationViewControllerDidEndUserInteraction:(id)arg1;
- (id)notificationViewControllerForSizing;
- (bool)notificationViewControllerShouldAllowInteractionGesture:(id)arg1;
- (bool)notificationViewControllerShouldBlurShortLook:(id)arg1;
- (void)notificationViewControllerWillBeginUserInteraction:(id)arg1;
- (void)notifyContentObservers;
- (id)observers;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)reloadNotificationRequest:(id)arg1;
- (void)reloadNotificationRequests:(id)arg1 clearCachedSizes:(bool)arg2;
- (void)reloadRequestsWithSuppressedContent;
- (void)removeContentObserver:(id)arg1;
- (void)removeNotificationRequest:(id)arg1 forCoalescedNotification:(id)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (void)setBackgroundBlurred:(bool)arg1;
- (void)setCellWithRevealedActions:(id)arg1;
- (void)setCellsSizesCaches:(id)arg1;
- (void)setCellsSizesCachesSuppressedContent:(id)arg1;
- (void)setChildPreferredContentSizeChangeCoordinatorForCurrentTransaction:(id)arg1;
- (void)setChildPreferredContentSizeChangeCoordinators:(id)arg1;
- (void)setDestinationDelegate:(id)arg1;
- (void)setDestinationDelegateFlags:(struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; })arg1;
- (void)setHomeAffordancePanGesture:(id)arg1;
- (void)setHomeAffordanceVisible:(bool)arg1;
- (void)setNeedsReloadData:(bool)arg1;
- (void)setNotificationRequestRemovedWhileInLongLook:(bool)arg1;
- (void)setNotificationRequestRemovedWhilePossiblyInLongLook:(bool)arg1;
- (void)setNotificationViewControllerForSizing:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setTouchEater:(id)arg1;
- (void)setTouchEaterEnabled:(bool)arg1;
- (void)setUserInteractionDelegate:(id)arg1;
- (void)setUserInteractionDelegateFlags:(struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; })arg1;
- (void)setViewControllerPossiblyPresentingLongLook:(id)arg1;
- (void)setViewControllerPresentingLongLook:(id)arg1;
- (id)settleHomeAffordanceAnimationBehaviorDescriptionForNotificationViewController:(id)arg1;
- (bool)shouldReceiveTouch:(id)arg1 forGestureRecognizer:(id)arg2;
- (bool)showAdditionalMessageLinesForNotificationViewController:(id)arg1;
- (void)showRequestsForNotificationSectionIdentifier:(id)arg1 subSectionIdentifier:(id)arg2;
- (void)showRequestsForNotificationSectionSettings:(id)arg1;
- (id)touchEater;
- (id)unhideHomeAffordanceAnimationSettingsForNotificationViewController:(id)arg1;
- (void)updateContentForNotificationRequest:(id)arg1;
- (id)userInteractionDelegate;
- (struct { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 1; unsigned int x5 : 1; unsigned int x6 : 1; unsigned int x7 : 1; unsigned int x8 : 1; unsigned int x9 : 1; unsigned int x10 : 1; unsigned int x11 : 1; unsigned int x12 : 1; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; })userInteractionDelegateFlags;
- (id)viewControllerPossiblyPresentingLongLook;
- (id)viewControllerPresentingLongLook;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willTearDownNotificationListCell:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

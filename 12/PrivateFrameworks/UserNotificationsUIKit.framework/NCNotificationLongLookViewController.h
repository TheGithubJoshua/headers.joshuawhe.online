<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NCNotificationLongLookViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UserNotificationsUIKit.framework/NCNotificationLongLookViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit (1)
 */

@interface NCNotificationLongLookViewController : NCNotificationViewController <NCLongLookDefaultPresentationControllerDelegate, NCNotificationCustomContentDelegate, NCNotificationLongLookViewDelegate, PLExpandedPlatterDismissing, PLExpandedPlatterPresentable, PLExpandedPlatterPresentationControllerDelegate, PLExpandedPlatterPresentationViewDelegate, PLPreviewInteractionPresentable> {
    id  _cancelTouchesToken;
    <PLExpandedPlatterDismissing> * _dismisser;
    NCLongLookTransitioningDelegate * _longLookTransitionDelegate;
    id /* block */  _notificationTapBlock;
    <PLPreviewInteractionPresenting> * _presenter;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) <PLExpandedPlatterDismissing> *dismisser;
@property (readonly) unsigned long long hash;
@property (getter=_notificationTapBlock, setter=_setNotificationTapBlock:, nonatomic, copy) id /* block */ notificationTapBlock;
@property (nonatomic) <PLPreviewInteractionPresenting> *presenter;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIView *viewForTouchContinuation;
@property (nonatomic, readonly) UIView *viewWithContent;

+ (void)initialize;

- (void).cxx_destruct;
- (id)_expandedPlatterPresentationViewLoadingIfNecessary:(bool)arg1;
- (id)_expandedPlatterPresentationViewScrollView;
- (id)_extensionIdentifier;
- (void)_handleIconButton:(id)arg1;
- (void)_handleNotificationTap:(id)arg1;
- (id)_initWithNotificationRequest:(id)arg1 andPresentingNotificationViewController:(id)arg2 revealingAdditionalContentOnPresentation:(bool)arg3;
- (id)_initWithNotificationRequest:(id)arg1 revealingAdditionalContentOnPresentation:(bool)arg2;
- (void)_loadLookView;
- (id)_longLookViewIfLoaded;
- (id)_longLookViewLoadingIfNecessary;
- (id)_longLookViewScrollView;
- (id /* block */)_notificationTapBlock;
- (void)_notificationViewControllerViewDidLoad;
- (struct CGSize { double x1; double x2; })_preferredCustomContentSizeForSize:(struct CGSize { double x1; double x2; })arg1 parentContentContainerBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)_presentedLongLookViewController;
- (id)_presentingNotificationViewController;
- (id)_scrollView;
- (void)_setNotificationTapBlock:(id /* block */)arg1;
- (void)_setPreferredCustomContentSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)_shouldPadScrollViewContentSizeHeight;
- (void)_updateLookView:(struct UIView { Class x1; }*)arg1 withTitleFromProvidedStaticContent:(id)arg2;
- (void)_updateTitleWithProvidedCustomContent;
- (void)_updateWithProvidedAuxiliaryOptionsContent;
- (void)_updateWithProvidedCustomContent;
- (void)_updateWithProvidedStaticContent;
- (bool)becomeFirstResponder;
- (bool)canBecomeFirstResponder;
- (bool)canResignFirstResponder;
- (void)contentProviderDismissCustomContent:(id)arg1 animated:(bool)arg2;
- (void)customContent:(id)arg1 didUpdateUserNotificationActions:(id)arg2;
- (void)customContentDidLoadExtension:(id)arg1;
- (void)customContentDidUpdateTitle:(id)arg1;
- (bool)dismissPresentedViewControllerAndClearNotification:(bool)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)dismissViewControllerAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (id)dismisser;
- (void)expandedPlatterPresentable:(id)arg1 requestsDismissalWithTrigger:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })expandedPlatterPresentationController:(id)arg1 frameForTransitionViewInPresentationSuperview:(id)arg2;
- (id)expandedPlatterPresentationController:(id)arg1 keyboardAssertionForGestureWindow:(id)arg2;
- (bool)expandedPlatterPresentationControllerShouldAllowKeyboardOnAppearance:(id)arg1;
- (id)expandedPlatterViewForPresentationView:(id)arg1;
- (id)hideHomeAffordanceAnimationSettingsForExpandedPlatterPresentationController:(id)arg1;
- (bool)isContentExtensionVisible:(id)arg1;
- (bool)isLookStyleLongLook;
- (void)loadView;
- (void)notificationLongLookView:(id)arg1 willInteractWithURL:(id)arg2;
- (void)presentLongLookAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (id)presenter;
- (void)preserveInputViews;
- (bool)resignFirstResponder;
- (bool)restoreInputViews;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)setCustomContentHomeAffordanceGestureRecognizer:(id)arg1;
- (void)setCustomContentHomeAffordanceVisible:(bool)arg1;
- (void)setDismisser:(id)arg1;
- (void)setNotificationRequest:(id)arg1;
- (void)setPresenter:(id)arg1;
- (id)settleHomeAffordanceAnimationBehaviorDescriptionForExpandedPlatterPresentationController:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize { double x1; double x2; })arg2;
- (id)unhideHomeAffordanceAnimationSettingsForExpandedPlatterPresentationController:(id)arg1;
- (long long)viewControllerTransitionTypeForTransitionDelegate:(id)arg1;
- (id)viewForTouchContinuation;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)viewWithContent;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

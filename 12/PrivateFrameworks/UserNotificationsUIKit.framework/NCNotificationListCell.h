<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NCNotificationListCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UserNotificationsUIKit.framework/NCNotificationListCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit (1)
 */

@interface NCNotificationListCell : UICollectionViewCell <NCLegibilitySettingsAdjusting, NCNotificationViewControllerObserving, PLContentSizeCategoryAdjusting, UIGestureRecognizerDelegate, UIScrollViewDelegate> {
    unsigned long long  _actionsRevealState;
    bool  _adjustsFontForContentSizeCategory;
    NSString * _backgroundGroupName;
    bool  _configured;
    NCNotificationViewController * _contentViewController;
    <NCNotificationListCellDelegate> * _delegate;
    bool  _executingDefaultAction;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _insetMargins;
    UIView * _leftActionButtonsClippingRevealView;
    NCNotificationListCellActionButtonsView * _leftActionButtonsView;
    double  _overrideAlpha;
    struct CGPoint { 
        double x; 
        double y; 
    }  _overrideCenter;
    UIPanGestureRecognizer * _panGestureRecognizer;
    double  _panGestureStartingPosition;
    bool  _performingOrbHinting;
    bool  _performingSwipeHinting;
    UIView * _rightActionButtonsClippingRevealView;
    NCNotificationListCellActionButtonsView * _rightActionButtonsView;
    bool  _shouldOverrideForReveal;
    id /* block */  _sideSwipeHintingHideAnimationBlock;
    UIViewFloatAnimatableProperty * _targetPositionAnimatableProperty;
}

@property (nonatomic) unsigned long long actionsRevealState;
@property (nonatomic) bool adjustsFontForContentSizeCategory;
@property (nonatomic, copy) NSString *backgroundGroupName;
@property (getter=isConfigured, nonatomic) bool configured;
@property (nonatomic, retain) NCNotificationViewController *contentViewController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <NCNotificationListCellDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isExecutingDefaultAction, nonatomic) bool executingDefaultAction;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } insetMargins;
@property (nonatomic, retain) UIView *leftActionButtonsClippingRevealView;
@property (nonatomic, retain) NCNotificationListCellActionButtonsView *leftActionButtonsView;
@property (nonatomic) double overrideAlpha;
@property (nonatomic) struct CGPoint { double x1; double x2; } overrideCenter;
@property (nonatomic, retain) UIPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic) double panGestureStartingPosition;
@property (getter=isPerformingOrbHinting, nonatomic) bool performingOrbHinting;
@property (getter=isPerformingSwipeHinting, nonatomic) bool performingSwipeHinting;
@property (nonatomic, copy) NSString *preferredContentSizeCategory;
@property (nonatomic, retain) UIView *rightActionButtonsClippingRevealView;
@property (nonatomic, retain) NCNotificationListCellActionButtonsView *rightActionButtonsView;
@property (nonatomic) bool shouldOverrideForReveal;
@property (nonatomic, copy) id /* block */ sideSwipeHintingHideAnimationBlock;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIViewFloatAnimatableProperty *targetPositionAnimatableProperty;

- (void).cxx_destruct;
- (double)_actionButtonTriggerDistanceForView:(id)arg1;
- (double)_alphaForActionButtonsView:(id)arg1 revealPercentage:(double)arg2;
- (id)_cellActionButtonsView;
- (void)_configureActionButtonViewsIfNecessary;
- (void)_configureActionButtonsView:(id)arg1;
- (void)_configureClippingIfNecessary;
- (void)_configureClippingRevealView:(id)arg1;
- (void)_configureClippingRevealViewsIfNecessary;
- (bool)_disableRasterizeInAnimations;
- (void)_executeClearAction;
- (void)_executeDefaultAction;
- (void)_handlePanGesture:(id)arg1;
- (void)_layoutContentView;
- (id)_notificationCellView;
- (id)_openActionButtonsView;
- (void)_performDefaultActionForLeft;
- (void)_performDefaultActionForRight;
- (void)_performSideSwipeHinting;
- (void)_performSideSwipeHintingHideAnimation;
- (void)_performSideSwipeHintingRevealAnimation;
- (void)_resetActionButtonViews;
- (void)_resetClipping;
- (void)_resetNotificationCellPositionAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)_resetRevealOverrides;
- (void)_setNotificationCellPosition:(double)arg1 withVelocity:(double)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (void)_setupClipping;
- (void)_setupContentOffsetFloatAnimatableProperty;
- (void)_setupPanGestureRecognizer;
- (bool)_shouldPerformClipping;
- (void)_updateActionButtonRevealPercentageForTargetPosition:(double)arg1;
- (double)_updateActionRevealStateForTargetPosition:(double)arg1 currentPosition:(double)arg2 velocity:(double)arg3;
- (void)_updateNotificationCellPosition:(double)arg1;
- (void)_updateRevealForActionButtonsClippingRevealView:(id)arg1 actionButtonsView:(id)arg2 forRevealPercentage:(double)arg3 actionButtonsViewNeedsClipping:(bool)arg4;
- (void)_updateRevealForLeftActionButtonsClippingRevealViewForRevealPercentage:(double)arg1;
- (void)_updateRevealForRightActionButtonsClippingRevealViewForRevealPercentage:(double)arg1;
- (void)_updateTargetPosition:(double)arg1;
- (unsigned long long)actionsRevealState;
- (bool)adjustForContentSizeCategoryChange;
- (void)adjustForLegibilitySettingsChange:(id)arg1;
- (bool)adjustsFontForContentSizeCategory;
- (void)applyLayoutAttributes:(id)arg1;
- (id)backgroundGroupName;
- (void)cellClearButtonPressed:(id)arg1;
- (void)cellOpenButtonPressed:(id)arg1;
- (void)cellSettingsButtonPressed:(id)arg1;
- (void)cellViewButtonPressed:(id)arg1;
- (id)contentViewController;
- (void)dealloc;
- (id)delegate;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)hintSideSwipeForDefaultAction;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })insetMargins;
- (bool)isConfigured;
- (bool)isExecutingDefaultAction;
- (bool)isPerformingOrbHinting;
- (bool)isPerformingSwipeHinting;
- (void)layoutSubviews;
- (id)leftActionButtonsClippingRevealView;
- (id)leftActionButtonsView;
- (void)notificationViewControllerDidEndUserInteraction:(id)arg1;
- (void)notificationViewControllerWillBeginUserInteraction:(id)arg1;
- (double)overrideAlpha;
- (struct CGPoint { double x1; double x2; })overrideCenter;
- (id)panGestureRecognizer;
- (double)panGestureStartingPosition;
- (void)prepareForReuse;
- (void)resetCellActionButtons;
- (void)resetCellScrollPositionAnimated:(bool)arg1;
- (id)rightActionButtonsClippingRevealView;
- (id)rightActionButtonsView;
- (void)setActionsRevealState:(unsigned long long)arg1;
- (void)setAdjustsFontForContentSizeCategory:(bool)arg1;
- (void)setBackgroundGroupName:(id)arg1;
- (void)setConfigured:(bool)arg1;
- (void)setContentViewController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExecutingDefaultAction:(bool)arg1;
- (void)setInsetMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLeftActionButtonsClippingRevealView:(id)arg1;
- (void)setLeftActionButtonsView:(id)arg1;
- (void)setOverrideAlpha:(double)arg1;
- (void)setOverrideCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPanGestureRecognizer:(id)arg1;
- (void)setPanGestureStartingPosition:(double)arg1;
- (void)setPerformingOrbHinting:(bool)arg1;
- (void)setPerformingSwipeHinting:(bool)arg1;
- (void)setRightActionButtonsClippingRevealView:(id)arg1;
- (void)setRightActionButtonsView:(id)arg1;
- (void)setShouldOverrideForReveal:(bool)arg1;
- (void)setSideSwipeHintingHideAnimationBlock:(id /* block */)arg1;
- (void)setTargetPositionAnimatableProperty:(id)arg1;
- (bool)shouldOverrideForReveal;
- (id /* block */)sideSwipeHintingHideAnimationBlock;
- (id)targetPositionAnimatableProperty;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateCellForContentViewController:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

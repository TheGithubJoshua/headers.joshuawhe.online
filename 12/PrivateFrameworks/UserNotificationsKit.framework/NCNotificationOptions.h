<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NCNotificationOptions.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UserNotificationsKit.framework/NCNotificationOptions.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UserNotificationsKit.framework/UserNotificationsKit (1)
 */

@interface NCNotificationOptions : NSObject <BSDescriptionProviding, NSCopying, NSMutableCopying> {
    bool  _addToLockScreenWhenLocked;
    NSSet * _alertSuppressionContexts;
    bool  _alertsWhenLocked;
    NSString * _alternateActionLabel;
    bool  _canPlaySound;
    bool  _canTurnOnDisplay;
    bool  _coalescesWhenLocked;
    unsigned long long  _contentPreviewSetting;
    bool  _dismissAutomatically;
    bool  _hideClearActionInList;
    bool  _lauchUsingSiriForCarPlayDefaultAction;
    unsigned long long  _lockScreenPersistence;
    unsigned long long  _lockScreenPriority;
    unsigned long long  _messageNumberOfLines;
    bool  _overridesDowntime;
    bool  _overridesPocketMode;
    bool  _overridesQuietMode;
    bool  _preemptsPresentedNotification;
    bool  _prefersDarkAppearance;
    bool  _preventsAutomaticLock;
    unsigned long long  _realertCount;
    bool  _requestsFullScreenPresentation;
    bool  _revealsAdditionalContentIfNoDefaultAction;
    bool  _revealsAdditionalContentOnPresentation;
    bool  _silencedByMenuButtonPress;
    bool  _suppressesAlertsWhenAppIsActive;
    bool  _suppressesBodyWhenLocked;
    bool  _suppressesSubtitleWhenLocked;
    bool  _suppressesTitleWhenLocked;
}

@property (nonatomic, readonly) bool addToLockScreenWhenUnlocked;
@property (nonatomic, readonly, copy) NSSet *alertSuppressionContexts;
@property (nonatomic, readonly) bool alertsWhenLocked;
@property (nonatomic, readonly, copy) NSString *alternateActionLabel;
@property (nonatomic, readonly) bool canPlaySound;
@property (nonatomic, readonly) bool canTurnOnDisplay;
@property (nonatomic, readonly) bool coalescesWhenLocked;
@property (nonatomic, readonly) unsigned long long contentPreviewSetting;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool dismissAutomatically;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool hideClearActionInList;
@property (nonatomic, readonly) bool lauchUsingSiriForCarPlayDefaultAction;
@property (nonatomic, readonly) unsigned long long lockScreenPersistence;
@property (nonatomic, readonly) unsigned long long lockScreenPriority;
@property (nonatomic, readonly) unsigned long long messageNumberOfLines;
@property (nonatomic, readonly) bool overridesDowntime;
@property (nonatomic, readonly) bool overridesPocketMode;
@property (nonatomic, readonly) bool overridesQuietMode;
@property (nonatomic, readonly) bool preemptsPresentedNotification;
@property (nonatomic, readonly) bool prefersDarkAppearance;
@property (nonatomic, readonly) bool preventsAutomaticLock;
@property (nonatomic, readonly) unsigned long long realertCount;
@property (nonatomic, readonly) bool requestsFullScreenPresentation;
@property (nonatomic, readonly) bool revealsAdditionalContentIfNoDefaultAction;
@property (nonatomic, readonly) bool revealsAdditionalContentOnPresentation;
@property (nonatomic, readonly) bool silencedByMenuButtonPress;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool suppressesAlertsWhenAppIsActive;
@property (nonatomic, readonly) bool suppressesBodyWhenLocked;
@property (nonatomic, readonly) bool suppressesSubtitleWhenLocked;
@property (nonatomic, readonly) bool suppressesTitleWhenLocked;

- (void).cxx_destruct;
- (bool)addToLockScreenWhenUnlocked;
- (id)alertSuppressionContexts;
- (bool)alertsWhenLocked;
- (id)alternateActionLabel;
- (bool)canPlaySound;
- (bool)canTurnOnDisplay;
- (bool)coalescesWhenLocked;
- (unsigned long long)contentPreviewSetting;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)debugDescription;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (bool)dismissAutomatically;
- (unsigned long long)hash;
- (bool)hideClearActionInList;
- (id)initWithNotificationOptions:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)lauchUsingSiriForCarPlayDefaultAction;
- (unsigned long long)lockScreenPersistence;
- (unsigned long long)lockScreenPriority;
- (unsigned long long)messageNumberOfLines;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (bool)overridesDowntime;
- (bool)overridesPocketMode;
- (bool)overridesQuietMode;
- (bool)preemptsPresentedNotification;
- (bool)prefersDarkAppearance;
- (bool)preventsAutomaticLock;
- (unsigned long long)realertCount;
- (bool)requestsFullScreenPresentation;
- (bool)revealsAdditionalContentIfNoDefaultAction;
- (bool)revealsAdditionalContentOnPresentation;
- (bool)silencedByMenuButtonPress;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (bool)suppressesAlertsWhenAppIsActive;
- (bool)suppressesBodyWhenLocked;
- (bool)suppressesSubtitleWhenLocked;
- (bool)suppressesTitleWhenLocked;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NCNotificationRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UserNotificationsKit.framework/NCNotificationRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UserNotificationsKit.framework/UserNotificationsKit (1)
 */

@interface NCNotificationRequest : NSObject <BSDescriptionProviding, NSCopying, NSMutableCopying> {
    NSString * _categoryIdentifier;
    NCNotificationAction * _clearAction;
    NCNotificationAction * _closeAction;
    unsigned long long  _collapsedNotificationsCount;
    NCNotificationContent * _content;
    NSDictionary * _context;
    bool  _criticalAlert;
    NCNotificationAction * _defaultAction;
    NSString * _highestPrioritySubSectionIdentifier;
    bool  _isCollapsedNotification;
    NSString * _notificationIdentifier;
    NCNotificationOptions * _options;
    NSString * _parentSectionIdentifier;
    NSArray * _peopleIdentifiers;
    NSSet * _requestDestinations;
    NSString * _sectionIdentifier;
    NSSet * _settingsSections;
    NCNotificationAction * _silenceAction;
    NCNotificationSound * _sound;
    NSDictionary * _sourceInfo;
    NSSet * _subSectionIdentifiers;
    NSDictionary * _supplementaryActions;
    NSString * _threadIdentifier;
    NSDate * _timestamp;
    bool  _uniqueThreadIdentifier;
    UNNotification * _userNotification;
}

@property (nonatomic, readonly) BBBulletin *bulletin;
@property (nonatomic, readonly, copy) NSString *categoryIdentifier;
@property (nonatomic, readonly) NCNotificationAction *clearAction;
@property (nonatomic, readonly) NCNotificationAction *closeAction;
@property (nonatomic, readonly) unsigned long long collapsedNotificationsCount;
@property (nonatomic, readonly) NSString *contactIdentifier;
@property (nonatomic, readonly) NCNotificationContent *content;
@property (nonatomic, readonly, copy) NSDictionary *context;
@property (getter=isCriticalAlert, nonatomic, readonly) bool criticalAlert;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NCNotificationAction *defaultAction;
@property (nonatomic, readonly, copy) NSArray *defaultEnvironmentActions;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool hasAttachments;
@property (nonatomic, readonly) bool hasOnlySingleMinimalTextInputAction;
@property (nonatomic, readonly) bool hasOnlySingleTextInputAction;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *highestPrioritySubSectionIdentifier;
@property (nonatomic, readonly) bool isCollapsedNotification;
@property (nonatomic, readonly, copy) NSArray *minimalEnvironmentActions;
@property (nonatomic, readonly, copy) NSString *notificationIdentifier;
@property (nonatomic, readonly) BBObserver *observer;
@property (nonatomic, readonly) NCNotificationOptions *options;
@property (nonatomic, readonly, copy) NSString *parentSectionIdentifier;
@property (nonatomic, readonly, copy) NSArray *peopleIdentifiers;
@property (nonatomic, readonly, copy) NSSet *requestDestinations;
@property (nonatomic, readonly, copy) NSString *sectionIdentifier;
@property (nonatomic, readonly, copy) NSSet *settingsSections;
@property (nonatomic, readonly) bool showsTextInputOnAppearance;
@property (nonatomic, readonly) NCNotificationAction *silenceAction;
@property (nonatomic, readonly) NCNotificationSound *sound;
@property (nonatomic, readonly, copy) NSDictionary *sourceInfo;
@property (nonatomic, readonly, copy) NSSet *subSectionIdentifiers;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSDictionary *supplementaryActions;
@property (nonatomic, readonly, copy) NSString *threadIdentifier;
@property (nonatomic, readonly) NSDate *timestamp;
@property (getter=isUniqueThreadIdentifier, nonatomic, readonly) bool uniqueThreadIdentifier;
@property (nonatomic, readonly) UNNotification *userNotification;

// Image: /System/Library/PrivateFrameworks/UserNotificationsKit.framework/UserNotificationsKit

+ (id)notificationRequest;
+ (id)notificationRequestWithActionWithId:(id)arg1 runner:(id)arg2;
+ (id)notificationRequestWithNotificationId:(id)arg1;
+ (id)notificationRequestWithNotificationId:(id)arg1 lockScreenPriority:(unsigned long long)arg2;
+ (id)notificationRequestWithNotificationId:(id)arg1 lockScreenPriority:(unsigned long long)arg2 lockScreenPersistence:(unsigned long long)arg3;
+ (id)notificationRequestWithNotificationId:(id)arg1 requestDestinations:(id)arg2;
+ (id)notificationRequestWithNotificationId:(id)arg1 requestDestinations:(id)arg2 isCritical:(bool)arg3;
+ (id)notificationRequestWithNotificationId:(id)arg1 requestDestinations:(id)arg2 lockScreenPersistence:(unsigned long long)arg3;
+ (id)notificationRequestWithNotificationId:(id)arg1 threadId:(id)arg2;
+ (id)notificationRequestWithNotificationId:(id)arg1 threadId:(id)arg2 timestamp:(id)arg3;
+ (id)notificationRequestWithNotificationId:(id)arg1 timestamp:(id)arg2;
+ (id)notificationRequestWithRequestDestination:(id)arg1;
+ (id)notificationRequestWithRequestDestinations:(id)arg1;
+ (id)notificationRequestWithSectionId:(id)arg1;
+ (id)notificationRequestWithSectionId:(id)arg1 notificationId:(id)arg2;
+ (id)notificationRequestWithSectionId:(id)arg1 notificationId:(id)arg2 requestDestination:(id)arg3;
+ (id)notificationRequestWithSectionId:(id)arg1 notificationId:(id)arg2 subSectionIds:(id)arg3 requestDestinations:(id)arg4;
+ (id)notificationRequestWithSectionId:(id)arg1 notificationId:(id)arg2 threadId:(id)arg3 subSectionIds:(id)arg4 title:(id)arg5 message:(id)arg6 timestamp:(id)arg7 destinations:(id)arg8 options:(id)arg9;
+ (id)notificationRequestWithSectionId:(id)arg1 notificationId:(id)arg2 threadId:(id)arg3 timestamp:(id)arg4;
+ (id)notificationRequestWithSectionId:(id)arg1 notificationId:(id)arg2 threadId:(id)arg3 title:(id)arg4 message:(id)arg5 timestamp:(id)arg6 destination:(id)arg7;
+ (id)notificationRequestWithSectionId:(id)arg1 notificationId:(id)arg2 threadId:(id)arg3 title:(id)arg4 message:(id)arg5 timestamp:(id)arg6 destinations:(id)arg7;
+ (id)notificationRequestWithSectionId:(id)arg1 notificationId:(id)arg2 timestamp:(id)arg3;
+ (id)notificationRequestWithSectionId:(id)arg1 subSectionIds:(id)arg2;
+ (id)notificationRequestWithSectionId:(id)arg1 threadId:(id)arg2;
+ (id)notificationRequestWithSectionId:(id)arg1 threadId:(id)arg2 notificationId:(id)arg3 requestDestination:(id)arg4;
+ (id)notificationRequestWithSectionId:(id)arg1 threadId:(id)arg2 notificationId:(id)arg3 requestDestinations:(id)arg4;
+ (id)notificationRequestWithThreadId:(id)arg1;
+ (id)notificationRequestWithThreadId:(id)arg1 timestamp:(id)arg2;
+ (id)notificationRequestWithTimestamp:(id)arg1;

- (void).cxx_destruct;
- (id)_actionsDescriptionForEnvironment:(id)arg1;
- (id)_actionsLoggingDescription;
- (id)categoryIdentifier;
- (id)clearAction;
- (id)closeAction;
- (unsigned long long)collapsedNotificationsCount;
- (id)content;
- (id)context;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)debugDescription;
- (id)defaultAction;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (unsigned long long)hash;
- (id)highestPrioritySubSectionIdentifier;
- (id)initWithNotificationRequest:(id)arg1;
- (bool)isCollapsedNotification;
- (bool)isCollapsibleWithNotificationRequest:(id)arg1;
- (bool)isCriticalAlert;
- (bool)isEqual:(id)arg1;
- (bool)isUniqueThreadIdentifier;
- (id)loggingDescription;
- (bool)matchesRequest:(id)arg1;
- (bool)matchesThreadForRequest:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)notificationIdentifier;
- (id)options;
- (id)parentSectionIdentifier;
- (id)peopleIdentifiers;
- (id)requestDestinations;
- (id)sectionIdentifier;
- (id)settingsSections;
- (id)silenceAction;
- (id)sound;
- (id)sourceInfo;
- (id)subSectionIdentifiers;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;
- (id)supplementaryActions;
- (id)threadIdentifier;
- (id)timestamp;
- (id)userNotification;

// Image: /System/Library/PrivateFrameworks/UserNotificationsUIKit.framework/UserNotificationsUIKit

+ (id)_notificationRequestForBulletin:(id)arg1 observer:(id)arg2 sectionInfo:(id)arg3 feed:(unsigned long long)arg4 playLightsAndSirens:(bool)arg5 hasPlayLightsAndSirens:(bool)arg6;
+ (id)notificationRequestForBulletin:(id)arg1 observer:(id)arg2 sectionInfo:(id)arg3 feed:(unsigned long long)arg4;
+ (id)notificationRequestForBulletin:(id)arg1 observer:(id)arg2 sectionInfo:(id)arg3 feed:(unsigned long long)arg4 playLightsAndSirens:(bool)arg5;

- (id)bulletin;
- (id)contactIdentifier;
- (id)defaultEnvironmentActions;
- (bool)hasAttachments;
- (bool)hasOnlySingleMinimalTextInputAction;
- (bool)hasOnlySingleTextInputAction;
- (bool)hasSameContactAsNotificationRequest:(id)arg1;
- (bool)isAudioMessageNotificationRequest;
- (id)minimalEnvironmentActions;
- (id)observer;
- (bool)showsTextInputOnAppearance;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

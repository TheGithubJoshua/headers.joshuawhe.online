<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UMXPCServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UserManagement.framework/UMXPCServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement (1)
 */

@interface UMXPCServer : NSObject <NSXPCListenerDelegate, UMUserSwitchManagement, UMUserSwitchManagement_Private> {
    id /* block */  _bubblePopHandler;
    NSData * _contextData;
    bool  _currentlyBroadcastingWillSwitchToUser;
    bool  _didBroadcastUploadContent;
    bool  _didBroadcastWillSwitchToUser;
    bool  _didRegisterStakeholder;
    bool  _didSendTasks;
    id /* block */  _directSwitchCompletionHandler;
    unsigned int  _interruptionRetryCount;
    id /* block */  _loginUICheckinSessionCompletionHandler;
    id /* block */  _logoutToLoginSessionCompletionHandler;
    NSString * _machServiceName;
    NSData * _passcodeData;
    NSDictionary * _personaSpec;
    NSDictionary * _preferencesDict;
    id /* block */  _registrationCompletionHandler;
    id  _stakeholder;
    unsigned long long  _stakeholderType;
    id /* block */  _suspendQuotasCompletionHandler;
    NSMutableArray * _switchBlockingTasks;
    id /* block */  _switchCompletionHandler;
    NSMutableArray * _syncTasks;
    NSString * _unregistrationReason;
    unsigned long long  _unregistrationStatus;
    id /* block */  _uploadContentCompletionHandler;
    id /* block */  _willSwitchCompletionHandler;
    unsigned long long  _willSwitchToUserAddedTaskCount;
    NSXPCConnection * _xpcConnection;
    NSXPCListener * _xpcListener;
}

@property (nonatomic, copy) id /* block */ bubblePopHandler;
@property (nonatomic, retain) NSData *contextData;
@property (nonatomic) bool currentlyBroadcastingWillSwitchToUser;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didBroadcastUploadContent;
@property (nonatomic) bool didBroadcastWillSwitchToUser;
@property (nonatomic) bool didRegisterStakeholder;
@property (nonatomic) bool didSendTasks;
@property (nonatomic, copy) id /* block */ directSwitchCompletionHandler;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned int interruptionRetryCount;
@property (nonatomic, copy) id /* block */ loginUICheckinSessionCompletionHandler;
@property (nonatomic, copy) id /* block */ logoutToLoginSessionCompletionHandler;
@property (nonatomic, retain) NSString *machServiceName;
@property (nonatomic, retain) NSData *passcodeData;
@property (nonatomic, retain) NSDictionary *personaSpec;
@property (nonatomic, retain) NSDictionary *preferencesDict;
@property (nonatomic, copy) id /* block */ registrationCompletionHandler;
@property (nonatomic) id stakeholder;
@property (nonatomic) unsigned long long stakeholderType;
@property (readonly) Class superclass;
@property (nonatomic, copy) id /* block */ suspendQuotasCompletionHandler;
@property (nonatomic, retain) NSMutableArray *switchBlockingTasks;
@property (nonatomic, copy) id /* block */ switchCompletionHandler;
@property (nonatomic, retain) NSMutableArray *syncTasks;
@property (nonatomic, retain) NSString *unregistrationReason;
@property (nonatomic) unsigned long long unregistrationStatus;
@property (nonatomic, copy) id /* block */ uploadContentCompletionHandler;
@property (nonatomic, copy) id /* block */ willSwitchCompletionHandler;
@property (nonatomic) unsigned long long willSwitchToUserAddedTaskCount;
@property (nonatomic, retain) NSXPCConnection *xpcConnection;
@property (nonatomic, retain) NSXPCListener *xpcListener;

+ (id)sharedServer;

- (void).cxx_destruct;
- (void)_abortIfWeDoNotHaveAStakeholder;
- (void)_abortIfWeDoNotHaveASyncStakeholder;
- (void)_broadcastReadyToSwitchToLoginSession:(id)arg1;
- (void)_broadcastReadyToSwitchToUser:(id)arg1;
- (void)_broadcastWillSwitchToUser:(id)arg1;
- (int)_pid;
- (void)_registerStakeholder:(id)arg1;
- (void)_resendXPCMessages;
- (void)_sendXPCMessageToServerOfType:(unsigned long long)arg1;
- (void)_sendXPCMessageToServerOfType:(unsigned long long)arg1 backingObject:(id)arg2;
- (id)_server;
- (void)_setUpUMServerXPCConnectionIfNeeded:(id)arg1;
- (void)_setUpXPCConnectionToUMServerIfNeeded;
- (void)_tearDownConnectionToUMServer;
- (void)addTask:(id)arg1;
- (void)bubbleDidPop;
- (id /* block */)bubblePopHandler;
- (id)contextData;
- (bool)currentlyBroadcastingWillSwitchToUser;
- (void)deviceLoginSessionStateDidUpdate;
- (bool)didBroadcastUploadContent;
- (bool)didBroadcastWillSwitchToUser;
- (bool)didRegisterStakeholder;
- (bool)didSendTasks;
- (id /* block */)directSwitchCompletionHandler;
- (void)directSwitchToUser:(id)arg1 passcodeData:(id)arg2 context:(id)arg3 preferences:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)init;
- (unsigned int)interruptionRetryCount;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)loginUICheckInWithCompletionHandler:(id /* block */)arg1;
- (id /* block */)loginUICheckinSessionCompletionHandler;
- (id /* block */)logoutToLoginSessionCompletionHandler;
- (void)logoutToLoginSessionWithCompletionHandler:(id /* block */)arg1;
- (id)machServiceName;
- (id)passcodeData;
- (id)personaSpec;
- (id)preferencesDict;
- (void)readyToSwitchToLoginSession:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)readyToSwitchToUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)registerCriticalUserSwitchStakeHolder:(id)arg1;
- (void)registerUserSwitchStakeHolder:(id)arg1;
- (void)registerUserSwitchStakeHolder:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)registerUserSyncStakeholder:(id)arg1 withMachServiceName:(id)arg2;
- (id /* block */)registrationCompletionHandler;
- (void)removeTask:(id)arg1;
- (void)resumeQuotas;
- (void)resumeSync;
- (void)setBubblePopHandler:(id /* block */)arg1;
- (void)setContextData:(id)arg1;
- (void)setCurrentlyBroadcastingWillSwitchToUser:(bool)arg1;
- (void)setDidBroadcastUploadContent:(bool)arg1;
- (void)setDidBroadcastWillSwitchToUser:(bool)arg1;
- (void)setDidRegisterStakeholder:(bool)arg1;
- (void)setDidSendTasks:(bool)arg1;
- (void)setDirectSwitchCompletionHandler:(id /* block */)arg1;
- (void)setInterruptionRetryCount:(unsigned int)arg1;
- (void)setLoginUICheckinSessionCompletionHandler:(id /* block */)arg1;
- (void)setLogoutToLoginSessionCompletionHandler:(id /* block */)arg1;
- (void)setMachServiceName:(id)arg1;
- (void)setPasscodeData:(id)arg1;
- (void)setPersonaSpec:(id)arg1;
- (void)setPreferencesDict:(id)arg1;
- (void)setRegistrationCompletionHandler:(id /* block */)arg1;
- (void)setStakeholder:(id)arg1;
- (void)setStakeholderType:(unsigned long long)arg1;
- (void)setSuspendQuotasCompletionHandler:(id /* block */)arg1;
- (void)setSwitchBlockingTasks:(id)arg1;
- (void)setSwitchCompletionHandler:(id /* block */)arg1;
- (void)setSyncTasks:(id)arg1;
- (void)setUnregistrationReason:(id)arg1;
- (void)setUnregistrationStatus:(unsigned long long)arg1;
- (void)setUploadContentCompletionHandler:(id /* block */)arg1;
- (void)setWillSwitchCompletionHandler:(id /* block */)arg1;
- (void)setWillSwitchToUserAddedTaskCount:(unsigned long long)arg1;
- (void)setXpcConnection:(id)arg1;
- (void)setXpcListener:(id)arg1;
- (id)stakeholder;
- (unsigned long long)stakeholderType;
- (id /* block */)suspendQuotasCompletionHandler;
- (void)suspendQuotasWithCompletionHandler:(id /* block */)arg1;
- (id)switchBlockingTasks;
- (id /* block */)switchCompletionHandler;
- (void)switchToLoginUserWithCompletionHandler:(id /* block */)arg1;
- (void)switchToLoginUserWithError:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)switchToUser:(id)arg1 passcodeData:(id)arg2 context:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)switchToUser:(id)arg1 passcodeData:(id)arg2 context:(id)arg3 preferences:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)syncTasks;
- (void)terminateSyncWithCompletionHandler:(id /* block */)arg1;
- (void)unregisterStakeHolder:(id)arg1 status:(unsigned long long)arg2 reason:(id)arg3;
- (id)unregistrationReason;
- (unsigned long long)unregistrationStatus;
- (id /* block */)uploadContentCompletionHandler;
- (void)uploadContentWithCompletionHandler:(id /* block */)arg1;
- (void)userInteractionIsEnabled;
- (void)userSwitchTaskListDidUpdate;
- (id /* block */)willSwitchCompletionHandler;
- (void)willSwitchToUser:(id)arg1 completionHandler:(id /* block */)arg2;
- (unsigned long long)willSwitchToUserAddedTaskCount;
- (id)xpcConnection;
- (id)xpcListener;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

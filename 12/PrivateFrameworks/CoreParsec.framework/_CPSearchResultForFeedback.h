<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_CPSearchResultForFeedback.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreParsec.framework/_CPSearchResultForFeedback.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec (213.5.3)
 */

@interface _CPSearchResultForFeedback : PBCodable <NSSecureCoding, _CPSearchResultForFeedback> {
    _CPActionItemForFeedback * _action;
    NSString * _applicationBundleIdentifier;
    unsigned long long  _blockId;
    NSString * _completedQuery;
    NSString * _correctedQuery;
    bool  _doNotFold;
    NSString * _fbr;
    unsigned long long  _hashedIdentifier;
    NSString * _identifier;
    NSString * _intendedQuery;
    bool  _isFuzzyMatch;
    bool  _isLocalApplicationResult;
    bool  _isStaticCorrection;
    int  _knownApplicationBundleIdentifier;
    int  _knownResultBundleId;
    int  _knownSectionBundleIdentifier;
    _CPStruct * _localFeatures;
    bool  _publiclyIndexable;
    _CPPunchoutForFeedback * _punchout;
    unsigned long long  _queryId;
    double  _rankingScore;
    NSString * _resultBundleId;
    NSString * _resultType;
    NSString * _sectionBundleIdentifier;
    NSString * _srf;
    int  _topHit;
    int  _type;
    NSString * _userInput;
    unsigned long long  _whichApplicationbundleid;
    unsigned long long  _whichResultbundleidentifier;
    unsigned long long  _whichSectionbundleid;
}

@property (nonatomic, retain) _CPActionItemForFeedback *action;
@property (nonatomic, copy) NSString *applicationBundleIdentifier;
@property (nonatomic) unsigned long long blockId;
@property (nonatomic, copy) NSString *completedQuery;
@property (nonatomic, copy) NSString *correctedQuery;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool doNotFold;
@property (nonatomic, copy) NSString *fbr;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long hashedIdentifier;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSString *intendedQuery;
@property (nonatomic) bool isFuzzyMatch;
@property (nonatomic) bool isLocalApplicationResult;
@property (nonatomic) bool isStaticCorrection;
@property (nonatomic, readonly, copy) NSString *jsonApplicationBundleIdentifier;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic, readonly, copy) <NSCopying> *jsonIdentifier;
@property (nonatomic, readonly, copy) NSString *jsonResultBundleIdentifier;
@property (nonatomic, readonly, copy) NSString *jsonSectionBundleIdentifier;
@property (nonatomic) int knownApplicationBundleIdentifier;
@property (nonatomic) int knownResultBundleId;
@property (nonatomic) int knownSectionBundleIdentifier;
@property (nonatomic, retain) _CPStruct *localFeatures;
@property (nonatomic) bool publiclyIndexable;
@property (nonatomic, retain) _CPPunchoutForFeedback *punchout;
@property (nonatomic) unsigned long long queryId;
@property (nonatomic) double rankingScore;
@property (nonatomic, copy) NSString *resultBundleId;
@property (nonatomic, copy) NSString *resultType;
@property (nonatomic, copy) NSString *sectionBundleIdentifier;
@property (nonatomic, copy) NSString *srf;
@property (readonly) Class superclass;
@property (nonatomic) int topHit;
@property (nonatomic) int type;
@property (nonatomic, copy) NSString *userInput;
@property (nonatomic, readonly) unsigned long long whichApplicationbundleid;
@property (nonatomic, readonly) unsigned long long whichResultbundleidentifier;
@property (nonatomic, readonly) unsigned long long whichSectionbundleid;

- (void).cxx_destruct;
- (id)action;
- (id)applicationBundleIdentifier;
- (unsigned long long)blockId;
- (id)completedQuery;
- (id)correctedQuery;
- (id)dictionaryRepresentation;
- (bool)doNotFold;
- (id)fbr;
- (id)feedbackJSON;
- (unsigned long long)hash;
- (unsigned long long)hashedIdentifier;
- (id)identifier;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFacade:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (id)intendedQuery;
- (bool)isEqual:(id)arg1;
- (bool)isFuzzyMatch;
- (bool)isLocalApplicationResult;
- (bool)isStaticCorrection;
- (id)jsonApplicationBundleIdentifier;
- (id)jsonData;
- (id)jsonIdentifier;
- (id)jsonResultBundleIdentifier;
- (id)jsonSectionBundleIdentifier;
- (int)knownApplicationBundleIdentifier;
- (int)knownResultBundleId;
- (int)knownSectionBundleIdentifier;
- (id)localFeatures;
- (bool)publiclyIndexable;
- (id)punchout;
- (unsigned long long)queryId;
- (double)rankingScore;
- (bool)readFrom:(id)arg1;
- (id)resultBundleId;
- (id)resultType;
- (id)sectionBundleIdentifier;
- (void)setAction:(id)arg1;
- (void)setApplicationBundleIdentifier:(id)arg1;
- (void)setBlockId:(unsigned long long)arg1;
- (void)setCompletedQuery:(id)arg1;
- (void)setCorrectedQuery:(id)arg1;
- (void)setDoNotFold:(bool)arg1;
- (void)setFbr:(id)arg1;
- (void)setHashedIdentifier:(unsigned long long)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIntendedQuery:(id)arg1;
- (void)setIsFuzzyMatch:(bool)arg1;
- (void)setIsLocalApplicationResult:(bool)arg1;
- (void)setIsStaticCorrection:(bool)arg1;
- (void)setKnownApplicationBundleIdentifier:(int)arg1;
- (void)setKnownResultBundleId:(int)arg1;
- (void)setKnownSectionBundleIdentifier:(int)arg1;
- (void)setLocalFeatures:(id)arg1;
- (void)setPubliclyIndexable:(bool)arg1;
- (void)setPunchout:(id)arg1;
- (void)setQueryId:(unsigned long long)arg1;
- (void)setRankingScore:(double)arg1;
- (void)setResultBundleId:(id)arg1;
- (void)setResultType:(id)arg1;
- (void)setSectionBundleIdentifier:(id)arg1;
- (void)setSrf:(id)arg1;
- (void)setTopHit:(int)arg1;
- (void)setType:(int)arg1;
- (void)setUserInput:(id)arg1;
- (id)srf;
- (int)topHit;
- (int)type;
- (id)userInput;
- (unsigned long long)whichApplicationbundleid;
- (unsigned long long)whichResultbundleidentifier;
- (unsigned long long)whichSectionbundleid;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

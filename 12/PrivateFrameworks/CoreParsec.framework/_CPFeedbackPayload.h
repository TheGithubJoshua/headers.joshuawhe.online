<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_CPFeedbackPayload.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreParsec.framework/_CPFeedbackPayload.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec (213.5.3)
 */

@interface _CPFeedbackPayload : PBCodable <NSSecureCoding, _CPFeedbackPayload> {
    _CPCacheHitFeedback * _cacheHitFeedback;
    _CPCardSectionEngagementFeedback * _cardSectionEngagementFeedback;
    _CPCardSectionFeedback * _cardSectionFeedback;
    _CPCardViewAppearFeedback * _cardViewAppearFeedback;
    _CPCardViewDisappearFeedback * _cardViewDisappearFeedback;
    _CPCBAEngagementFeedback * _cbaEngagementFeedback;
    _CPClearInputFeedback * _clearInputFeedback;
    _CPClientTimingFeedback * _clientTimingFeedback;
    _CPConnectionInvalidatedFeedback * _connectionInvalidatedFeedback;
    _CPCustomFeedback * _customFeedback;
    _CPDidGoToSearchFeedback * _didGoToSearchFeedback;
    _CPDidGoToSiteFeedback * _didGoToSiteFeedback;
    _CPEndLocalSearchFeedback * _endLocalSearchFeedback;
    _CPEndNetworkSearchFeedback * _endNetworkSearchFeedback;
    _CPEndSearchFeedback * _endSearchFeedback;
    _CPErrorFeedback * _errorFeedback;
    _CPFeedback * _feedback;
    _CPLateSectionsAppendedFeedback * _lateSectionsAppendedFeedback;
    _CPLookupHintRelevancyFeedback * _lookupHintRelevancyFeedback;
    _CPMapsCardSectionEngagementFeedback * _mapsCardSectionEngagementFeedback;
    unsigned long long  _queryId;
    _CPRankingFeedback * _rankingFeedback;
    _CPResultEngagementFeedback * _resultEngagementFeedback;
    _CPResultFeedback * _resultFeedback;
    _CPResultGradingFeedback * _resultGradingFeedback;
    _CPResultRankingFeedback * _resultRankingFeedback;
    _CPResultsReceivedAfterTimeoutFeedback * _resultsReceivedAfterTimeoutFeedback;
    _CPSearchViewAppearFeedback * _searchViewAppearFeedback;
    _CPSearchViewDisappearFeedback * _searchViewDisappearFeedback;
    _CPSectionEngagementFeedback * _sectionEngagementFeedback;
    _CPSectionRankingFeedback * _sectionRankingFeedback;
    _CPSessionEndFeedback * _sessionEndFeedback;
    _CPSessionMissingResultsFeedback * _sessionMissingResultsFeedback;
    _CPSessionMissingSuggestionsFeedback * _sessionMissingSuggestionsFeedback;
    _CPSkipSearchFeedback * _skipSearchFeedback;
    _CPStartLocalSearchFeedback * _startLocalSearchFeedback;
    _CPStartNetworkSearchFeedback * _startNetworkSearchFeedback;
    _CPStartSearchFeedback * _startSearchFeedback;
    _CPStoreCardSectionEngagementFeedback * _storeCardSectionEngagementFeedback;
    _CPSuggestionEngagementFeedback * _suggestionEngagementFeedback;
    _CPVisibleResultsFeedback * _visibleResultsFeedback;
    _CPVisibleSectionHeaderFeedback * _visibleSectionHeaderFeedback;
    _CPVisibleSuggestionsFeedback * _visibleSuggestionsFeedback;
    unsigned long long  _whichContained_Feedback;
}

@property (nonatomic, retain) _CPCacheHitFeedback *cacheHitFeedback;
@property (nonatomic, retain) _CPCardSectionEngagementFeedback *cardSectionEngagementFeedback;
@property (nonatomic, retain) _CPCardSectionFeedback *cardSectionFeedback;
@property (nonatomic, retain) _CPCardViewAppearFeedback *cardViewAppearFeedback;
@property (nonatomic, retain) _CPCardViewDisappearFeedback *cardViewDisappearFeedback;
@property (nonatomic, retain) _CPCBAEngagementFeedback *cbaEngagementFeedback;
@property (nonatomic, retain) _CPClearInputFeedback *clearInputFeedback;
@property (nonatomic, retain) _CPClientTimingFeedback *clientTimingFeedback;
@property (nonatomic, readonly) PBCodable<_CPProcessableFeedback> *codable;
@property (nonatomic, retain) _CPConnectionInvalidatedFeedback *connectionInvalidatedFeedback;
@property (nonatomic, retain) _CPCustomFeedback *customFeedback;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) _CPDidGoToSearchFeedback *didGoToSearchFeedback;
@property (nonatomic, retain) _CPDidGoToSiteFeedback *didGoToSiteFeedback;
@property (nonatomic, retain) _CPEndLocalSearchFeedback *endLocalSearchFeedback;
@property (nonatomic, retain) _CPEndNetworkSearchFeedback *endNetworkSearchFeedback;
@property (nonatomic, retain) _CPEndSearchFeedback *endSearchFeedback;
@property (nonatomic, retain) _CPErrorFeedback *errorFeedback;
@property (nonatomic, retain) _CPFeedback *feedback;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic, retain) _CPLateSectionsAppendedFeedback *lateSectionsAppendedFeedback;
@property (nonatomic, retain) _CPLookupHintRelevancyFeedback *lookupHintRelevancyFeedback;
@property (nonatomic, retain) _CPMapsCardSectionEngagementFeedback *mapsCardSectionEngagementFeedback;
@property (nonatomic) unsigned long long queryId;
@property (nonatomic, retain) _CPRankingFeedback *rankingFeedback;
@property (nonatomic, retain) _CPResultEngagementFeedback *resultEngagementFeedback;
@property (nonatomic, retain) _CPResultFeedback *resultFeedback;
@property (nonatomic, retain) _CPResultGradingFeedback *resultGradingFeedback;
@property (nonatomic, retain) _CPResultRankingFeedback *resultRankingFeedback;
@property (nonatomic, retain) _CPResultsReceivedAfterTimeoutFeedback *resultsReceivedAfterTimeoutFeedback;
@property (nonatomic, retain) _CPSearchViewAppearFeedback *searchViewAppearFeedback;
@property (nonatomic, retain) _CPSearchViewDisappearFeedback *searchViewDisappearFeedback;
@property (nonatomic, retain) _CPSectionEngagementFeedback *sectionEngagementFeedback;
@property (nonatomic, retain) _CPSectionRankingFeedback *sectionRankingFeedback;
@property (nonatomic, retain) _CPSessionEndFeedback *sessionEndFeedback;
@property (nonatomic, retain) _CPSessionMissingResultsFeedback *sessionMissingResultsFeedback;
@property (nonatomic, retain) _CPSessionMissingSuggestionsFeedback *sessionMissingSuggestionsFeedback;
@property (nonatomic, retain) _CPSkipSearchFeedback *skipSearchFeedback;
@property (nonatomic, retain) _CPStartLocalSearchFeedback *startLocalSearchFeedback;
@property (nonatomic, retain) _CPStartNetworkSearchFeedback *startNetworkSearchFeedback;
@property (nonatomic, retain) _CPStartSearchFeedback *startSearchFeedback;
@property (nonatomic, retain) _CPStoreCardSectionEngagementFeedback *storeCardSectionEngagementFeedback;
@property (nonatomic, retain) _CPSuggestionEngagementFeedback *suggestionEngagementFeedback;
@property (readonly) Class superclass;
@property (nonatomic, readonly) int type;
@property (nonatomic, retain) _CPVisibleResultsFeedback *visibleResultsFeedback;
@property (nonatomic, retain) _CPVisibleSectionHeaderFeedback *visibleSectionHeaderFeedback;
@property (nonatomic, retain) _CPVisibleSuggestionsFeedback *visibleSuggestionsFeedback;
@property (nonatomic, readonly) unsigned long long whichContained_Feedback;

- (void).cxx_destruct;
- (id)cacheHitFeedback;
- (id)cardSectionEngagementFeedback;
- (id)cardSectionFeedback;
- (id)cardViewAppearFeedback;
- (id)cardViewDisappearFeedback;
- (id)cbaEngagementFeedback;
- (id)clearInputFeedback;
- (id)clientTimingFeedback;
- (id)codable;
- (id)connectionInvalidatedFeedback;
- (id)customFeedback;
- (id)dictionaryRepresentation;
- (id)didGoToSearchFeedback;
- (id)didGoToSiteFeedback;
- (id)endLocalSearchFeedback;
- (id)endNetworkSearchFeedback;
- (id)endSearchFeedback;
- (id)errorFeedback;
- (id)feedback;
- (unsigned long long)hash;
- (id)initWithCodable:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFeedback:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)jsonData;
- (id)lateSectionsAppendedFeedback;
- (id)lookupHintRelevancyFeedback;
- (id)mapsCardSectionEngagementFeedback;
- (unsigned long long)queryId;
- (id)rankingFeedback;
- (bool)readFrom:(id)arg1;
- (bool)requiresQueryId;
- (id)resultEngagementFeedback;
- (id)resultFeedback;
- (id)resultGradingFeedback;
- (id)resultRankingFeedback;
- (id)resultsReceivedAfterTimeoutFeedback;
- (id)searchViewAppearFeedback;
- (id)searchViewDisappearFeedback;
- (id)sectionEngagementFeedback;
- (id)sectionRankingFeedback;
- (id)sessionEndFeedback;
- (id)sessionMissingResultsFeedback;
- (id)sessionMissingSuggestionsFeedback;
- (void)setCacheHitFeedback:(id)arg1;
- (void)setCardSectionEngagementFeedback:(id)arg1;
- (void)setCardSectionFeedback:(id)arg1;
- (void)setCardViewAppearFeedback:(id)arg1;
- (void)setCardViewDisappearFeedback:(id)arg1;
- (void)setCbaEngagementFeedback:(id)arg1;
- (void)setClearInputFeedback:(id)arg1;
- (void)setClientTimingFeedback:(id)arg1;
- (void)setConnectionInvalidatedFeedback:(id)arg1;
- (void)setCustomFeedback:(id)arg1;
- (void)setDidGoToSearchFeedback:(id)arg1;
- (void)setDidGoToSiteFeedback:(id)arg1;
- (void)setEndLocalSearchFeedback:(id)arg1;
- (void)setEndNetworkSearchFeedback:(id)arg1;
- (void)setEndSearchFeedback:(id)arg1;
- (void)setErrorFeedback:(id)arg1;
- (void)setFeedback:(id)arg1;
- (void)setLateSectionsAppendedFeedback:(id)arg1;
- (void)setLookupHintRelevancyFeedback:(id)arg1;
- (void)setMapsCardSectionEngagementFeedback:(id)arg1;
- (void)setQueryId:(unsigned long long)arg1;
- (void)setRankingFeedback:(id)arg1;
- (void)setResultEngagementFeedback:(id)arg1;
- (void)setResultFeedback:(id)arg1;
- (void)setResultGradingFeedback:(id)arg1;
- (void)setResultRankingFeedback:(id)arg1;
- (void)setResultsReceivedAfterTimeoutFeedback:(id)arg1;
- (void)setSearchViewAppearFeedback:(id)arg1;
- (void)setSearchViewDisappearFeedback:(id)arg1;
- (void)setSectionEngagementFeedback:(id)arg1;
- (void)setSectionRankingFeedback:(id)arg1;
- (void)setSessionEndFeedback:(id)arg1;
- (void)setSessionMissingResultsFeedback:(id)arg1;
- (void)setSessionMissingSuggestionsFeedback:(id)arg1;
- (void)setSkipSearchFeedback:(id)arg1;
- (void)setStartLocalSearchFeedback:(id)arg1;
- (void)setStartNetworkSearchFeedback:(id)arg1;
- (void)setStartSearchFeedback:(id)arg1;
- (void)setStoreCardSectionEngagementFeedback:(id)arg1;
- (void)setSuggestionEngagementFeedback:(id)arg1;
- (void)setVisibleResultsFeedback:(id)arg1;
- (void)setVisibleSectionHeaderFeedback:(id)arg1;
- (void)setVisibleSuggestionsFeedback:(id)arg1;
- (id)skipSearchFeedback;
- (id)startLocalSearchFeedback;
- (id)startNetworkSearchFeedback;
- (id)startSearchFeedback;
- (id)storeCardSectionEngagementFeedback;
- (id)suggestionEngagementFeedback;
- (int)type;
- (id)visibleResultsFeedback;
- (id)visibleSectionHeaderFeedback;
- (id)visibleSuggestionsFeedback;
- (unsigned long long)whichContained_Feedback;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_CPTuscanyConnectionInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreParsec.framework/_CPTuscanyConnectionInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec (213.5.3)
 */

@interface _CPTuscanyConnectionInfo : PBCodable <NSSecureCoding, _CPTuscanyConnectionInfo> {
    int  _IPType;
    bool  _TFOsucceeded;
    double  _connectionDelay;
    NSString * _edgeAddress;
    int  _edgeType;
    double  _fallbackDelay;
    int  _fallbackReason;
    int  _fallbackReasonCategory;
    double  _firstTxByteDelay;
    double  _firstTxByteTimeStamp;
    unsigned int  _initialBytesLeftOver;
    int  _interfaceType;
    bool  _isMultipath;
    bool  _isTFOProbeSucceeded;
    unsigned int  _minimumRTT;
    unsigned int  _multipathConnectedSubflowCount;
    unsigned int  _multipathPrimarySubflowInterfaceIndex;
    unsigned int  _multipathSubflowCount;
    NSDictionary * _multipathSubflowSwitchCounts;
    int  _pathType;
    NSDictionary * _tcpInfo;
    double  _timeIntervalSinceLastUsage;
    double  _timeToFirstByte;
    int  _tunnelConnectionError;
}

@property (nonatomic) int IPType;
@property (nonatomic) bool TFOsucceeded;
@property (nonatomic) double connectionDelay;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *edgeAddress;
@property (nonatomic) int edgeType;
@property (nonatomic) double fallbackDelay;
@property (nonatomic) int fallbackReason;
@property (nonatomic) int fallbackReasonCategory;
@property (nonatomic) double firstTxByteDelay;
@property (nonatomic) double firstTxByteTimeStamp;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned int initialBytesLeftOver;
@property (nonatomic) int interfaceType;
@property (nonatomic) bool isMultipath;
@property (nonatomic) bool isTFOProbeSucceeded;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic) unsigned int minimumRTT;
@property (nonatomic) unsigned int multipathConnectedSubflowCount;
@property (nonatomic) unsigned int multipathPrimarySubflowInterfaceIndex;
@property (nonatomic) unsigned int multipathSubflowCount;
@property (nonatomic, copy) NSDictionary *multipathSubflowSwitchCounts;
@property (nonatomic) int pathType;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSDictionary *tcpInfo;
@property (nonatomic) double timeIntervalSinceLastUsage;
@property (nonatomic) double timeToFirstByte;
@property (nonatomic) int tunnelConnectionError;

- (void).cxx_destruct;
- (int)IPType;
- (bool)TFOsucceeded;
- (double)connectionDelay;
- (id)dictionaryRepresentation;
- (id)edgeAddress;
- (int)edgeType;
- (double)fallbackDelay;
- (int)fallbackReason;
- (int)fallbackReasonCategory;
- (double)firstTxByteDelay;
- (double)firstTxByteTimeStamp;
- (bool)getMultipathSubflowSwitchCounts:(int*)arg1 forKey:(id)arg2;
- (bool)getTcpInfo:(id*)arg1 forKey:(id)arg2;
- (unsigned long long)hash;
- (id)initWithDictionary:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (unsigned int)initialBytesLeftOver;
- (int)interfaceType;
- (bool)isEqual:(id)arg1;
- (bool)isMultipath;
- (bool)isTFOProbeSucceeded;
- (id)jsonData;
- (unsigned int)minimumRTT;
- (unsigned int)multipathConnectedSubflowCount;
- (unsigned int)multipathPrimarySubflowInterfaceIndex;
- (unsigned int)multipathSubflowCount;
- (id)multipathSubflowSwitchCounts;
- (int)pathType;
- (bool)readFrom:(id)arg1;
- (bool)requiresQueryId;
- (void)setConnectionDelay:(double)arg1;
- (void)setEdgeAddress:(id)arg1;
- (void)setEdgeType:(int)arg1;
- (void)setFallbackDelay:(double)arg1;
- (void)setFallbackReason:(int)arg1;
- (void)setFallbackReasonCategory:(int)arg1;
- (void)setFirstTxByteDelay:(double)arg1;
- (void)setFirstTxByteTimeStamp:(double)arg1;
- (void)setIPType:(int)arg1;
- (void)setInitialBytesLeftOver:(unsigned int)arg1;
- (void)setInterfaceType:(int)arg1;
- (void)setIsMultipath:(bool)arg1;
- (void)setIsTFOProbeSucceeded:(bool)arg1;
- (void)setMinimumRTT:(unsigned int)arg1;
- (void)setMultipathConnectedSubflowCount:(unsigned int)arg1;
- (void)setMultipathPrimarySubflowInterfaceIndex:(unsigned int)arg1;
- (void)setMultipathSubflowCount:(unsigned int)arg1;
- (void)setMultipathSubflowSwitchCounts:(id)arg1;
- (void)setMultipathSubflowSwitchCounts:(int)arg1 forKey:(id)arg2;
- (void)setPathType:(int)arg1;
- (void)setTFOsucceeded:(bool)arg1;
- (void)setTcpInfo:(id)arg1;
- (void)setTcpInfo:(id)arg1 forKey:(id)arg2;
- (void)setTimeIntervalSinceLastUsage:(double)arg1;
- (void)setTimeToFirstByte:(double)arg1;
- (void)setTunnelConnectionError:(int)arg1;
- (id)tcpInfo;
- (double)timeIntervalSinceLastUsage;
- (double)timeToFirstByte;
- (int)tunnelConnectionError;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

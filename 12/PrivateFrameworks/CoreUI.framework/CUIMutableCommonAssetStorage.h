<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CUIMutableCommonAssetStorage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreUI.framework/CUIMutableCommonAssetStorage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI (499.12)
 */

@interface CUIMutableCommonAssetStorage : CUICommonAssetStorage {
    NSMutableDictionary * _bitmapInfo;
    unsigned int  _enableLargeCarKeyWorkaround;
    unsigned int  _useBitmapIndex;
}

@property (nonatomic) bool useBitmapIndex;

- (void)_allocateExtendedMetadata;
- (bool)_saveBitmapInfo;
- (void)_setZeroCodeInfo:(struct { unsigned int x1; unsigned int x2; })arg1 forKey:(const void*)arg2 withLength:(unsigned long long)arg3 inTree:(const void*)arg4;
- (bool)_writeOutKeyFormatWithWorkaround;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (void)removeAssetForKey:(id)arg1;
- (void)removeAssetForKey:(const void*)arg1 withLength:(unsigned long long)arg2;
- (void)setAppearanceIdentifier:(unsigned short)arg1 forName:(id)arg2;
- (bool)setAsset:(id)arg1 forKey:(id)arg2;
- (bool)setAsset:(id)arg1 forKey:(const void*)arg2 withLength:(unsigned long long)arg3;
- (void)setAssociatedChecksum:(unsigned int)arg1;
- (void)setAuthoringTool:(id)arg1;
- (void)setCatalogGlobalData:(id)arg1;
- (void)setColor:(struct _rgbquad { unsigned int x1 : 8; unsigned int x2 : 8; unsigned int x3 : 8; unsigned int x4 : 8; })arg1 forName:(const char *)arg2 excludeFromFilter:(bool)arg3;
- (void)setColorSpaceID:(unsigned int)arg1;
- (void)setDeploymentPlatform:(id)arg1;
- (void)setDeploymentPlatformVersion:(id)arg1;
- (void)setEnableLargeCarKeyWorkaround:(bool)arg1;
- (void)setExternalTags:(id)arg1;
- (void)setFontName:(id)arg1 baselineOffset:(float)arg2 forFontSelector:(id)arg3;
- (void)setFontSize:(float)arg1 forFontSizeSelector:(id)arg2;
- (void)setKeyFormatData:(id)arg1;
- (void)setKeySemantics:(int)arg1;
- (void)setRenditionCount:(unsigned int)arg1;
- (void)setRenditionKey:(const struct _renditionkeytoken { unsigned short x1; unsigned short x2; }*)arg1 hotSpot:(struct CGPoint { double x1; double x2; })arg2 forName:(const char *)arg3;
- (void)setSchemaVersion:(unsigned int)arg1;
- (void)setStorageVersion:(unsigned int)arg1;
- (void)setThinningArguments:(id)arg1;
- (void)setUseBitmapIndex:(bool)arg1;
- (void)setUuid:(id)arg1;
- (void)setVersionString:(const char *)arg1;
- (void)setZeroCodeBezelInformation:(struct { unsigned int x1; unsigned int x2; })arg1 forKey:(const void*)arg2 withLength:(unsigned long long)arg3;
- (void)setZeroCodeGlyphInformation:(struct { unsigned int x1; unsigned int x2; })arg1 forKey:(const void*)arg2 withLength:(unsigned long long)arg3;
- (void)updateBitmapInfo;
- (bool)useBitmapIndex;
- (bool)writeToDisk;
- (bool)writeToDiskAndCompact:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

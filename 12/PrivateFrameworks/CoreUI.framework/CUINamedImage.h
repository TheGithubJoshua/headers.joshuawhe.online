<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CUINamedImage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreUI.framework/CUINamedImage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI (499.12)
 */

@interface CUINamedImage : CUINamedLookup {
    struct _cuiniproperties { 
        unsigned int isVectorBased : 1; 
        unsigned int hasSliceInformation : 1; 
        unsigned int hasAlignmentInformation : 1; 
        unsigned int resizingMode : 2; 
        unsigned int templateRenderingMode : 3; 
        unsigned int exifOrientation : 4; 
        unsigned int isAlphaCropped : 1; 
        unsigned int isFlippable : 1; 
        unsigned int isTintable : 1; 
        unsigned int preservedVectorRepresentation : 1; 
        unsigned int _reserved : 16; 
    }  _imageProperties;
    double  _scale;
}

@property (nonatomic, readonly) struct { double x1; double x2; double x3; double x4; } alignmentEdgeInsets;
@property (nonatomic, readonly) int blendMode;
@property (nonatomic, readonly) struct CGImage { }*croppedImage;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; double x4; } edgeInsets;
@property (nonatomic, readonly) int exifOrientation;
@property (nonatomic, readonly) bool hasAlignmentInformation;
@property (nonatomic, readonly) bool hasSliceInformation;
@property (nonatomic, readonly) struct CGImage { }*image;
@property (nonatomic, readonly) long long imageType;
@property (nonatomic, readonly) bool isAlphaCropped;
@property (nonatomic, readonly) bool isFlippable;
@property (nonatomic, readonly) bool isStructured;
@property (nonatomic, readonly) bool isTemplate;
@property (nonatomic, readonly) bool isVectorBased;
@property (nonatomic, readonly) double opacity;
@property (nonatomic, readonly) bool preservedVectorRepresentation;
@property (nonatomic, readonly) long long resizingMode;
@property (nonatomic, readonly) double scale;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } size;
@property (nonatomic, readonly) long long templateRenderingMode;

// Image: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI

- (bool)_cacheRenditionProperties;
- (struct { double x1; double x2; double x3; double x4; })alignmentEdgeInsets;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })alphaCroppedRect;
- (id)baseKey;
- (int)blendMode;
- (struct CGImage { }*)createImageFromPDFRenditionWithScale:(double)arg1;
- (struct CGImage { }*)croppedImage;
- (id)description;
- (struct { double x1; double x2; double x3; double x4; })edgeInsets;
- (int)exifOrientation;
- (bool)hasAlignmentInformation;
- (bool)hasSliceInformation;
- (struct CGImage { }*)image;
- (long long)imageType;
- (id)initWithName:(id)arg1 usingRenditionKey:(id)arg2 fromTheme:(unsigned long long)arg3;
- (bool)isAlphaCropped;
- (bool)isFlippable;
- (bool)isStructured;
- (bool)isTemplate;
- (bool)isVectorBased;
- (double)opacity;
- (struct CGSize { double x1; double x2; })originalUncroppedSize;
- (double)positionOfSliceBoundary:(unsigned int)arg1;
- (bool)preservedVectorRepresentation;
- (long long)resizingMode;
- (long long)resizingModeWithSubtype:(long long)arg1;
- (double)scale;
- (struct CGSize { double x1; double x2; })size;
- (long long)templateRenderingMode;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

- (id)UIImageWithVectorImage:(id)arg1;
- (id)imageObj;
- (id)traitCollection;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

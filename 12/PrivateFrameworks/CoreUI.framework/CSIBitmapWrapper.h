<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CSIBitmapWrapper.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreUI.framework/CSIBitmapWrapper.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI (499.12)
 */

@interface CSIBitmapWrapper : NSObject {
    bool  _allowsCompactCompression;
    bool  _allowsDeepmapImageCompression;
    bool  _allowsHevcCompression;
    bool  _allowsMultiPassEncoding;
    bool  _allowsOptimalRowbytesPacking;
    bool  _allowsPaletteImageCompression;
    struct CGContext { } * _bitmapContext;
    unsigned long long  _colorSpaceID;
    double  _compressionQuality;
    long long  _compressionType;
    int  _exifOrientation;
    bool  _flipped;
    unsigned int  _height;
    unsigned int  _imageAlpha;
    NSData * _pixelData;
    unsigned int  _pixelFormat;
    unsigned long long  _rowbytes;
    struct CGImage { } * _sourceImage;
    long long  _textureInterpretation;
    long long  _texturePixelFormat;
    unsigned int  _width;
}

@property bool allowsCompactCompression;
@property bool allowsDeepmapImageCompression;
@property bool allowsHevcCompression;
@property bool allowsMultiPassEncoding;
@property bool allowsOptimalRowbytesPacking;
@property bool allowsPaletteImageCompression;
@property (nonatomic) unsigned long long colorSpaceID;
@property (nonatomic) double compressionQuality;
@property long long compressionType;
@property (nonatomic) int exifOrientation;
@property (nonatomic) bool flipped;
@property (nonatomic) unsigned int pixelFormat;
@property (nonatomic) long long textureInterpretation;

- (bool)allowsCompactCompression;
- (bool)allowsDeepmapImageCompression;
- (bool)allowsHevcCompression;
- (bool)allowsMultiPassEncoding;
- (bool)allowsOptimalRowbytesPacking;
- (bool)allowsPaletteImageCompression;
- (struct CGContext { }*)bitmapContext;
- (unsigned long long)colorSpaceID;
- (id)compressedData:(bool)arg1 usedEncoding:(int*)arg2 andRowChunkSize:(unsigned int*)arg3;
- (double)compressionQuality;
- (long long)compressionType;
- (void)dealloc;
- (int)exifOrientation;
- (bool)flipped;
- (unsigned int)height;
- (id)initWithCGImage:(struct CGImage { }*)arg1 width:(unsigned int)arg2 height:(unsigned int)arg3 texturePixelFormat:(long long)arg4;
- (id)initWithPixelWidth:(unsigned int)arg1 pixelHeight:(unsigned int)arg2;
- (id)pixelData;
- (unsigned int)pixelFormat;
- (unsigned long long)rowbytes;
- (void)setAllowsCompactCompression:(bool)arg1;
- (void)setAllowsDeepmapImageCompression:(bool)arg1;
- (void)setAllowsHevcCompression:(bool)arg1;
- (void)setAllowsMultiPassEncoding:(bool)arg1;
- (void)setAllowsOptimalRowbytesPacking:(bool)arg1;
- (void)setAllowsPaletteImageCompression:(bool)arg1;
- (void)setColorSpaceID:(unsigned long long)arg1;
- (void)setCompressionQuality:(double)arg1;
- (void)setCompressionType:(long long)arg1;
- (void)setExifOrientation:(int)arg1;
- (void)setFlipped:(bool)arg1;
- (void)setPixelData:(id)arg1;
- (void)setPixelFormat:(unsigned int)arg1;
- (void)setSourceAlphaInfo:(unsigned int)arg1;
- (void)setTextureInterpretation:(long long)arg1;
- (unsigned int)sourceAlphaInfo;
- (long long)textureInterpretation;
- (unsigned int)width;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PAAggregatedThreadAndDispatchQueue.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PASampling.framework/PAAggregatedThreadAndDispatchQueue.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PASampling.framework/PASampling (218.2)
 */

@interface PAAggregatedThreadAndDispatchQueue : NSObject <PAAggregatedStack> {
    PAAggregatedProcessInstance * _aggregatedTask;
    NSMutableArray * _contiguousStacks;
    unsigned long long  _cpuCyclesCached;
    unsigned long long  _cpuInstructionsCached;
    unsigned long long  _cpuTimeNsCached;
    unsigned long long  _dispatchQueueId;
    int  _maxBasePriority;
    int  _maxPriority;
    int  _minBasePriority;
    int  _minPriority;
    unsigned long long  _threadId;
}

@property (readonly) PAAggregatedProcessInstance *aggregatedTask;
@property (readonly) PAProcessInstanceAggregator *aggregator;
@property (readonly) NSMutableArray *contiguousStacks;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property unsigned long long dispatchQueueId;
@property (readonly) unsigned long long firstTimestampIndex;
@property (readonly) unsigned long long hash;
@property (readonly) bool isGlobalForcedIdleThread;
@property (readonly) bool isIdleWorkQueueThread;
@property (readonly) bool isMainThread;
@property (readonly) bool isProcessorIdleThread;
@property (readonly) unsigned long long lastTimestampIndex;
@property int maxBasePriority;
@property int maxPriority;
@property int minBasePriority;
@property int minPriority;
@property (readonly) Class superclass;
@property unsigned long long threadId;

- (void).cxx_destruct;
- (void)addSampleThread:(id)arg1 atTimestampIndex:(unsigned long long)arg2 fillGapInTimestampIndexWithPreviousThreads:(bool)arg3;
- (void)addStack:(id)arg1;
- (id)aggregatedTask;
- (id)aggregator;
- (long long)compare:(id)arg1;
- (id)contiguousStacks;
- (id)copyDescriptionForSampleFrame:(id)arg1 inSampleTask:(id)arg2;
- (id)copyStringForMissingSamplesBeforeContiguousStackIndex:(unsigned long long)arg1;
- (int)count;
- (unsigned long long)cpuCycles;
- (unsigned long long)cpuInstructions;
- (unsigned long long)cpuTimeNs;
- (id)debugDescription;
- (unsigned long long)dispatchQueueId;
- (unsigned long long)firstTimestampIndex;
- (bool)hasSingleName:(id*)arg1;
- (unsigned long long)hash;
- (id)initForIdentificationPurposesWithThreadId:(unsigned long long)arg1 andDispatchQueueId:(unsigned long long)arg2;
- (id)initWithAggregatedTask:(id)arg1 andThreadId:(unsigned long long)arg2 andDispatchQueueId:(unsigned long long)arg3;
- (bool)isEqual:(id)arg1;
- (bool)isGlobalForcedIdleThread;
- (bool)isIdleWorkQueueThread;
- (bool)isMainThread;
- (bool)isProcessorIdleThread;
- (bool)isSingleStack;
- (unsigned long long)lastTimestampIndex;
- (int)maxBasePriority;
- (int)maxPriority;
- (int)minBasePriority;
- (int)minPriority;
- (unsigned long long)numMissingSamplesBeforeContiguousStackIndex:(unsigned long long)arg1;
- (void)printHeaderToOutputStream:(id)arg1;
- (void)printHeavyStacksToOutputStream:(id)arg1 onlyPrintHeaviest:(bool)arg2;
- (void)printStackToOutputStream:(id)arg1;
- (void)printToOutputStream:(id)arg1;
- (id)sampleStore;
- (void)setDispatchQueueId:(unsigned long long)arg1;
- (void)setMaxBasePriority:(int)arg1;
- (void)setMaxPriority:(int)arg1;
- (void)setMinBasePriority:(int)arg1;
- (void)setMinPriority:(int)arg1;
- (void)setThreadId:(unsigned long long)arg1;
- (unsigned long long)threadId;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

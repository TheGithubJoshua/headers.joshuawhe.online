<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PTRow.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PrototypeTools.framework/PTRow.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools (1)
 */

@interface PTRow : NSObject <PTSettingsKeyPathObserver> {
    PTRowAction * _action;
    NSPredicate * _condition;
    id /* block */  _externalCondition;
    NSString * _imageKeyPath;
    NSHashTable * _observers;
    PTSection * _section;
    PTSettings * _settings;
    UIImage * _staticImage;
    NSString * _staticTitle;
    NSString * _titleKeyPath;
    id /* block */  _unregisterBlock;
    id /* block */  _valueFormatter;
    id /* block */  _valueGetter;
    NSString * _valueKeyPath;
    id /* block */  _valueSetter;
    id /* block */  _valueValidatator;
}

@property (nonatomic, retain) PTRowAction *action;
@property (nonatomic, copy) NSPredicate *condition;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) id /* block */ externalCondition;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *imageKeyPath;
@property (nonatomic) PTSection *section;
@property (nonatomic, retain) PTSettings *settings;
@property (nonatomic, retain) UIImage *staticImage;
@property (nonatomic, copy) NSString *staticTitle;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *titleKeyPath;
@property (nonatomic, copy) id /* block */ unregisterBlock;
@property (nonatomic, retain) id value;
@property (nonatomic, copy) id /* block */ valueFormatter;
@property (nonatomic, copy) id /* block */ valueGetter;
@property (nonatomic, copy) NSString *valueKeyPath;
@property (nonatomic, copy) id /* block */ valueSetter;
@property (nonatomic, copy) id /* block */ valueValidatator;

// Image: /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools

+ (id)row;
+ (id)rowWithTitle:(id)arg1 valueGetter:(id /* block */)arg2 valueSetter:(id /* block */)arg3;
+ (id)rowWithTitle:(id)arg1 valueKeyPath:(id)arg2;

- (void).cxx_destruct;
- (id)_defaultAction;
- (void)_sendImageChanged;
- (void)_sendRowDidReload;
- (void)_sendTitleChanged;
- (void)_sendValueChanged;
- (id)action;
- (id)action:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)childSettingsForKeyPath:(id)arg1;
- (id)condition;
- (id)condition:(id)arg1;
- (id)conditionFormat:(id)arg1;
- (void)dealloc;
- (id /* block */)externalCondition;
- (id)image;
- (id)imageKeyPath;
- (id)imageKeyPath:(id)arg1;
- (id)init;
- (void)reloadRow;
- (void)removeObserver:(id)arg1;
- (id)section;
- (void)setAction:(id)arg1;
- (void)setCondition:(id)arg1;
- (void)setExternalCondition:(id /* block */)arg1;
- (void)setImageKeyPath:(id)arg1;
- (void)setSection:(id)arg1;
- (void)setSettings:(id)arg1;
- (void)setStaticImage:(id)arg1;
- (void)setStaticTitle:(id)arg1;
- (void)setTitleKeyPath:(id)arg1;
- (void)setUnregisterBlock:(id /* block */)arg1;
- (void)setValue:(id)arg1;
- (void)setValueFormatter:(id /* block */)arg1;
- (void)setValueGetter:(id /* block */)arg1;
- (void)setValueKeyPath:(id)arg1;
- (void)setValueSetter:(id /* block */)arg1;
- (void)setValueValidatator:(id /* block */)arg1;
- (id)settings;
- (void)settings:(id)arg1 changedValueForKeyPath:(id)arg2;
- (id)staticImage;
- (id)staticImage:(id)arg1;
- (id)staticTitle;
- (id)staticTitle:(id)arg1;
- (id)title;
- (id)titleKeyPath;
- (id)titleKeyPath:(id)arg1;
- (id /* block */)unregisterBlock;
- (id)value;
- (id /* block */)valueFormatter;
- (id)valueFormatter:(id /* block */)arg1;
- (id /* block */)valueGetter;
- (id)valueKeyPath;
- (id)valueKeyPath:(id)arg1;
- (id /* block */)valueSetter;
- (id /* block */)valueValidatator;
- (id)valueValidator:(id /* block */)arg1;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

+ (id)pu_rowWithTitle:(id)arg1 action:(id /* block */)arg2;
+ (id)pu_rowWithTitle:(id)arg1 asynchronousOutputProducer:(id /* block */)arg2;
+ (id)pu_rowWithTitle:(id)arg1 output:(id /* block */)arg2;
+ (id)pu_rowWithTitle:(id)arg1 settings:(id)arg2;
+ (id)pu_rowWithTitle:(id)arg1 settings:(id)arg2 condition:(id)arg3;
+ (id)pu_rowWithTitle:(id)arg1 settingsProvider:(id /* block */)arg2;
+ (id)pu_rowWithTitle:(id)arg1 settingsProvider:(id /* block */)arg2 isTransient:(bool)arg3;

- (id)pu_increment:(double)arg1;

// Image: /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer

- (id)is_increment:(double)arg1;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

+ (id)px_rowWithTitle:(id)arg1 action:(id /* block */)arg2;
+ (id)px_rowWithTitle:(id)arg1 asynchronousOutputProducer:(id /* block */)arg2;
+ (id)px_rowWithTitle:(id)arg1 continuousOutputProducer:(id /* block */)arg2;
+ (id)px_rowWithTitle:(id)arg1 output:(id /* block */)arg2;
+ (id)px_rowWithTitle:(id)arg1 postDismissalAction:(id /* block */)arg2;
+ (id)px_rowWithTitle:(id)arg1 valueKeyPath:(id)arg2 condition:(id)arg3;

- (id)px_conditionFormat:(id)arg1 possibleValues:(id)arg2;
- (id)px_increment:(double)arg1;

// Image: /System/Library/PrivateFrameworks/PrototypeToolsUI.framework/PrototypeToolsUI

- (id)defaultUIAction;
- (Class)tableViewCellClass;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

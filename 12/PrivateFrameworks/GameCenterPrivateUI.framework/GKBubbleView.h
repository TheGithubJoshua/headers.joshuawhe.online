<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKBubbleView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameCenterPrivateUI.framework/GKBubbleView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameCenterPrivateUI.framework/GameCenterPrivateUI (577.8)
 */

@interface GKBubbleView : UIView {
    bool  _animating;
    double  _animationAngle;
    double  _animationRadiansPerSecond;
    bool  _animationReversed;
    double  _animationScale;
    long long  _bubbleType;
    UIImageView * _highlightView;
    UIImageView * _imageView;
    double  _moveAnimationAngle;
    double  _moveAnimationRadiansPerSecond;
    double  _moveAnimationScale;
    long long  _numFaces;
    long long  _numVertices;
    double  _touchAnimationAngle;
    bool  _touchAnimationCanEnd;
    double  _touchAnimationElapsed;
    bool  _touchAnimationRunning;
}

@property (nonatomic) bool animating;
@property (nonatomic) double animationAngle;
@property (nonatomic) double animationRadiansPerSecond;
@property (nonatomic) long long bubbleType;
@property (nonatomic, retain) UIImageView *highlightView;
@property (nonatomic, retain) UIImageView *imageView;
@property (nonatomic) double moveAnimationAngle;
@property (nonatomic) double moveAnimationRadiansPerSecond;
@property (nonatomic) double moveAnimationScale;
@property (nonatomic) long long numFaces;
@property (nonatomic) long long numVertices;
@property (nonatomic) double touchAnimationAngle;
@property (nonatomic) bool touchAnimationCanEnd;
@property (nonatomic) double touchAnimationElapsed;
@property (nonatomic) bool touchAnimationRunning;

- (bool)animating;
- (double)animationAngle;
- (double)animationRadiansPerSecond;
- (double)animationScaleForCurrentZ;
- (void)applyAnimationToVertices:(struct CAMeshVertex { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CAPoint3D { double x_2_1_1; double x_2_1_2; double x_2_1_3; } x2; }*)arg1;
- (long long)bubbleType;
- (void)chooseMoveAnimation;
- (void)choosePointAnimations;
- (void)dealloc;
- (id)highlightView;
- (id)imageView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (double)moveAnimationAngle;
- (double)moveAnimationRadiansPerSecond;
- (double)moveAnimationScale;
- (long long)numFaces;
- (long long)numVertices;
- (struct CGPoint { double x1; double x2; })offsetForVertexAtIndex:(long long)arg1;
- (bool)randomBOOL;
- (float)randomFloatBetweenMin:(float)arg1 andMax:(float)arg2;
- (void)setAnimating:(bool)arg1;
- (void)setAnimationAngle:(double)arg1;
- (void)setAnimationRadiansPerSecond:(double)arg1;
- (void)setAnimationStateBasedOnBubble:(id)arg1;
- (void)setBubbleType:(long long)arg1;
- (void)setHighlightView:(id)arg1;
- (void)setImageView:(id)arg1;
- (void)setMoveAnimationAngle:(double)arg1;
- (void)setMoveAnimationRadiansPerSecond:(double)arg1;
- (void)setMoveAnimationScale:(double)arg1;
- (void)setNumFaces:(long long)arg1;
- (void)setNumVertices:(long long)arg1;
- (void)setTouchAnimationAngle:(double)arg1;
- (void)setTouchAnimationCanEnd:(bool)arg1;
- (void)setTouchAnimationElapsed:(double)arg1;
- (void)setTouchAnimationRunning:(bool)arg1;
- (void)setupVerticesAndFacesAnimated:(bool)arg1;
- (double)touchAnimationAngle;
- (bool)touchAnimationCanEnd;
- (double)touchAnimationElapsed;
- (bool)touchAnimationRunning;
- (void)touchBegan;
- (void)touchEnded;
- (void)update:(double)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

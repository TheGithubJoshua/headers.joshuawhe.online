<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKTurnParticipantCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameCenterPrivateUI.framework/GKTurnParticipantCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameCenterPrivateUI.framework/GameCenterPrivateUI (577.8)
 */

@interface GKTurnParticipantCell : GKBasePlayerCell {
    GKLabel * _bottomLabel;
    UIButton * _detailButton;
    NSLayoutConstraint * _detailButtonConstraint;
    SEL  _detailPressedAction;
    NSLayoutConstraint * _iconLeadingConstraint;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _insets;
    bool  _isDetail;
    GKTurnBasedMatch * _match;
    GKTurnBasedParticipant * _participant;
    NSLayoutConstraint * _statusImageTrailingConstraint;
    UIImageView * _statusImageView;
    NSLayoutConstraint * _textContainerTrailingConstraint;
    GKContiguousContainerView * _textContainerView;
    GKLabel * _topLabel;
}

@property (nonatomic, retain) GKLabel *bottomLabel;
@property (nonatomic, retain) UIButton *detailButton;
@property (nonatomic, retain) NSLayoutConstraint *detailButtonConstraint;
@property (nonatomic) SEL detailPressedAction;
@property (nonatomic, retain) NSLayoutConstraint *iconLeadingConstraint;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } insets;
@property (nonatomic) bool isDetail;
@property (nonatomic, retain) GKTurnBasedMatch *match;
@property (nonatomic, retain) GKTurnBasedParticipant *participant;
@property (nonatomic, retain) NSLayoutConstraint *statusImageTrailingConstraint;
@property (nonatomic, retain) UIImageView *statusImageView;
@property (nonatomic, retain) NSLayoutConstraint *textContainerTrailingConstraint;
@property (nonatomic, retain) GKContiguousContainerView *textContainerView;
@property (nonatomic, retain) GKLabel *topLabel;

+ (double)defaultRowHeight;
+ (id)itemHeightList;
+ (void)registerCellClassesForCollectionView:(id)arg1;

- (id)bottomLabel;
- (void)configureForDetail;
- (void)configureForMatch;
- (void)dealloc;
- (id)detailButton;
- (id)detailButtonConstraint;
- (void)detailPressed:(id)arg1;
- (SEL)detailPressedAction;
- (void)didUpdateModel;
- (void)establishConstraints;
- (id)iconLeadingConstraint;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })insets;
- (bool)isDetail;
- (id)match;
- (bool)matchWantsLocalPlayerAttention;
- (id)participant;
- (void)setBottomLabel:(id)arg1;
- (void)setDetailButton:(id)arg1;
- (void)setDetailButtonConstraint:(id)arg1;
- (void)setDetailPressedAction:(SEL)arg1;
- (void)setIconLeadingConstraint:(id)arg1;
- (void)setInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setIsDetail:(bool)arg1;
- (void)setMatch:(id)arg1;
- (void)setParticipant:(id)arg1;
- (void)setStatusImageTrailingConstraint:(id)arg1;
- (void)setStatusImageView:(id)arg1;
- (void)setTextContainerTrailingConstraint:(id)arg1;
- (void)setTextContainerView:(id)arg1;
- (void)setTopLabel:(id)arg1;
- (id)statusImageTrailingConstraint;
- (id)statusImageView;
- (id)textContainerTrailingConstraint;
- (id)textContainerView;
- (id)topLabel;
- (void)updateMarginConstraints;
- (id)viewForPopover;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

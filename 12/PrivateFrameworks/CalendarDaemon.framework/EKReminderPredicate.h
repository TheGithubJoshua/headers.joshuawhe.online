<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EKReminderPredicate.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CalendarDaemon.framework/EKReminderPredicate.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon ()
 */

@interface EKReminderPredicate : EKPredicate <EKDefaultPropertiesLoading> {
    bool  _completed;
    NSArray * _defaultPropertiesToLoad;
    NSDate * _dueAfter;
    NSDate * _dueBefore;
    bool  _limitToCompletedOrIncomplete;
    NSString * _listTitle;
    unsigned long long  _maxResults;
    NSString * _searchTerm;
    bool  _shouldLoadDefaultProperties;
    int  _sortOrder;
    bool  _useCompletionDateAsAlternate;
    bool  _useDueDateAsCompletionDate;
}

@property (nonatomic) bool completed;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSArray *defaultPropertiesToLoad;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSDate *dueAfter;
@property (nonatomic, retain) NSDate *dueBefore;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool limitToCompletedOrIncomplete;
@property (nonatomic, retain) NSString *listTitle;
@property (nonatomic) unsigned long long maxResults;
@property (nonatomic, retain) NSString *searchTerm;
@property (nonatomic) bool shouldLoadDefaultProperties;
@property (nonatomic) int sortOrder;
@property (readonly) Class superclass;
@property (nonatomic) bool useCompletionDateAsAlternate;
@property (nonatomic) bool useDueDateAsCompletionDate;

+ (id)predicateWithCalendars:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (bool)completed;
- (id)copyMatchingItemsWithDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; struct __CFDictionary {} *x6; struct __CFDictionary {} *x7; struct _opaque_pthread_mutex_t { long long x_8_1_1; BOOL x_8_1_2[56]; } x8; unsigned int x9; unsigned int x10; struct __CFArray {} *x11; struct __CFString {} *x12; struct __CFArray {} *x13; int x14; int x15; struct __CFString {} *x16; struct __CFString {} *x17; struct __CFString {} *x18; int x19; id /* block */ x20; struct _opaque_pthread_mutex_t { long long x_21_1_1; BOOL x_21_1_2[56]; } x21; bool x22; struct __CFArray {} *x23; struct __CFArray {} *x24; struct __CFArray {} *x25; struct __CFArray {} *x26; bool x27; id x28; bool x29; }*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)defaultPropertiesToLoad;
- (id)dueAfter;
- (id)dueBefore;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCalendars:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)limitToCompletedOrIncomplete;
- (id)listTitle;
- (unsigned long long)maxResults;
- (id)searchTerm;
- (void)setCompleted:(bool)arg1;
- (void)setDefaultPropertiesToLoad:(id)arg1;
- (void)setDueAfter:(id)arg1;
- (void)setDueBefore:(id)arg1;
- (void)setLimitToCompletedOrIncomplete:(bool)arg1;
- (void)setListTitle:(id)arg1;
- (void)setMaxResults:(unsigned long long)arg1;
- (void)setSearchTerm:(id)arg1;
- (void)setShouldLoadDefaultProperties:(bool)arg1;
- (void)setSortOrder:(int)arg1;
- (void)setUseCompletionDateAsAlternate:(bool)arg1;
- (void)setUseDueDateAsCompletionDate:(bool)arg1;
- (bool)shouldLoadDefaultProperties;
- (int)sortOrder;
- (bool)useCompletionDateAsAlternate;
- (bool)useDueDateAsCompletionDate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

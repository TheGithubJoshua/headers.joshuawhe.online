<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CADServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CalendarDaemon.framework/CADServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CalendarDaemon.framework/CalendarDaemon ()
 */

@interface CADServer : NSObject <CalActivatable, ClientConnectionDelegate, DatabaseChangeHandling, NSXPCListenerDelegate> {
    NSXPCListener * _NSXPCListener;
    bool  _active;
    int  _backgroundTaskCount;
    BirthdayCalendarManager * _birthdayManager;
    unsigned long long  _birthdayManagerGeneration;
    NSMutableSet * _clientConnections;
    NSLock * _connectionLock;
    CDBDataProtectionObserver * _dataProtectionObserver;
    LocalAttachmentCleanUpSupport * _localAttachmentCleanupManager;
    NSArray * _modules;
    NSObject<OS_dispatch_queue> * _notificationQueue;
    NSArray * _signalSensors;
    NSObject<OS_dispatch_queue> * _workQueue;
    NSObject<OS_xpc_object> * _xpcConnection;
    NSObject<OS_dispatch_queue> * _xpcQueue;
}

@property (getter=isActive, nonatomic) bool active;
@property (nonatomic, retain) CDBDataProtectionObserver *dataProtectionObserver;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSArray *modules;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *workQueue;

- (void).cxx_destruct;
- (void)_deactivateAndExitWithStatus:(int)arg1;
- (void)_dumpState;
- (void)_enableICloudBackups;
- (void)_exitWithStatus:(int)arg1;
- (void)_finishInitializationWithDataAvailable;
- (void)_handleDatabaseChanged;
- (void)_handleXPCConnection:(id)arg1;
- (void)_protectedDataDidBecomeAvailable;
- (void)_registerForDatabaseCleanup;
- (void)_registerForIdleChangeTrackingClientCleanup;
- (void)_registerForNotifications;
- (void)_registerMaintenanceActivities;
- (void)_setUpSignalHandlers;
- (void)_startBirthdayManager;
- (void)_stopBirthdayManager;
- (void)_tearDownSignalHandlers;
- (bool)_trimAndExtendOccurrenceCache;
- (void)_updateOccurrenceCacheTimeZone;
- (void)activate;
- (void)cleanupDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; struct __CFDictionary {} *x6; struct __CFDictionary {} *x7; struct _opaque_pthread_mutex_t { long long x_8_1_1; BOOL x_8_1_2[56]; } x8; unsigned int x9; unsigned int x10; struct __CFArray {} *x11; struct __CFString {} *x12; struct __CFArray {} *x13; int x14; int x15; struct __CFString {} *x16; struct __CFString {} *x17; struct __CFString {} *x18; int x19; id /* block */ x20; struct _opaque_pthread_mutex_t { long long x_21_1_1; BOOL x_21_1_2[56]; } x21; bool x22; struct __CFArray {} *x23; struct __CFArray {} *x24; struct __CFArray {} *x25; struct __CFArray {} *x26; bool x27; id x28; bool x29; }*)arg1;
- (void)clientConnectionDied:(id)arg1;
- (id)dataProtectionObserver;
- (void)deactivate;
- (void)dealloc;
- (void)idleChangeTrackingClientCleanupDatabase:(struct CalDatabase { struct __CFRuntimeBase { unsigned long long x_1_1_1; _Atomic unsigned long long x_1_1_2; } x1; int x2; struct CPRecordStore {} *x3; struct CalEventOccurrenceCache {} *x4; struct CalScheduledTaskCache {} *x5; struct __CFDictionary {} *x6; struct __CFDictionary {} *x7; struct _opaque_pthread_mutex_t { long long x_8_1_1; BOOL x_8_1_2[56]; } x8; unsigned int x9; unsigned int x10; struct __CFArray {} *x11; struct __CFString {} *x12; struct __CFArray {} *x13; int x14; int x15; struct __CFString {} *x16; struct __CFString {} *x17; struct __CFString {} *x18; int x19; id /* block */ x20; struct _opaque_pthread_mutex_t { long long x_21_1_1; BOOL x_21_1_2[56]; } x21; bool x22; struct __CFArray {} *x23; struct __CFArray {} *x24; struct __CFArray {} *x25; struct __CFArray {} *x26; bool x27; id x28; bool x29; }*)arg1;
- (id)init;
- (id)initWithModules:(id)arg1;
- (bool)isActive;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)modules;
- (void)setActive:(bool)arg1;
- (void)setDataProtectionObserver:(id)arg1;
- (void)setModules:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)workQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

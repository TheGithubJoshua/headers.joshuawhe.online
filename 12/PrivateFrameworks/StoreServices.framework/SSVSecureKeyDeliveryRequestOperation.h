<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SSVSecureKeyDeliveryRequestOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreServices.framework/SSVSecureKeyDeliveryRequestOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices (1)
 */

@interface SSVSecureKeyDeliveryRequestOperation : NSOperation {
    NSDictionary * _URLBagDictionary;
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSURL * _certificateURL;
    double  _expirationTime;
    bool  _iTunesStoreRequest;
    NSURL * _keyServerURL;
    long long  _leaseAction;
    bool  _offline;
    NSData * _persistentContentKeyContext;
    double  _playbackStartTime;
    NSNumber * _rentalId;
    AVAssetResourceLoadingRequest * _resourceLoadingRequest;
    id /* block */  _responseBlock;
    NSData * _serverPlaybackContextData;
    <SSVSecureKeyDeliveryRequestOperationDelegate> * _serverPlaybackContextDataDelegate;
    bool  _shouldIncludeGUID;
    bool  _skippedRentalCheckout;
}

@property (getter=isITunesStoreRequest) bool ITunesStoreRequest;
@property (retain) NSURL *certificateURL;
@property (nonatomic, readonly) double expirationTime;
@property (retain) NSURL *keyServerURL;
@property (nonatomic) long long leaseAction;
@property bool offline;
@property (nonatomic, readonly, copy) NSData *persistentContentKeyContext;
@property (nonatomic, readonly) double playbackStartTime;
@property (copy) NSNumber *rentalId;
@property (retain) AVAssetResourceLoadingRequest *resourceLoadingRequest;
@property (copy) id /* block */ responseBlock;
@property (nonatomic, retain) NSData *serverPlaybackContextData;
@property (nonatomic) <SSVSecureKeyDeliveryRequestOperationDelegate> *serverPlaybackContextDataDelegate;
@property (nonatomic) bool shouldIncludeGUID;
@property bool skippedRentalCheckout;

- (void).cxx_destruct;
- (id)_contentKeyContextForStreamingKeyID:(long long)arg1 streamingKeyDictionaries:(id)arg2 renewAfter:(double*)arg3 error:(id*)arg4;
- (double)_expirationTimeForStreamingKeyID:(long long)arg1 streamingKeyDictionaries:(id)arg2;
- (double)_playbackStartTimeForStreamingKeyID:(long long)arg1 streamingKeyDictionaries:(id)arg2;
- (void)_sendResponseBlockWithError:(id)arg1;
- (id)_streamingKeyDictionaryForID:(long long)arg1 URI:(id)arg2 serverPlaybackContextData:(id)arg3;
- (id)_streamingRequestDictionaryWithStreamingKeyDictionaries:(id)arg1;
- (double)_timeIntervalForStreamingKeyID:(long long)arg1 responseKey:(id)arg2 streamingKeyDictionaries:(id)arg3;
- (id)certificateURL;
- (void)configureWithURLBagDictionary:(id)arg1;
- (double)expirationTime;
- (id)init;
- (bool)isITunesStoreRequest;
- (id)keyServerURL;
- (long long)leaseAction;
- (void)main;
- (bool)offline;
- (id)persistentContentKeyContext;
- (double)playbackStartTime;
- (id)rentalId;
- (id)resourceLoadingRequest;
- (id /* block */)responseBlock;
- (id)serverPlaybackContextData;
- (id)serverPlaybackContextDataDelegate;
- (void)setCertificateURL:(id)arg1;
- (void)setITunesStoreRequest:(bool)arg1;
- (void)setKeyServerURL:(id)arg1;
- (void)setLeaseAction:(long long)arg1;
- (void)setOffline:(bool)arg1;
- (void)setPersistentContentKeyContext:(id)arg1;
- (void)setRentalId:(id)arg1;
- (void)setResourceLoadingRequest:(id)arg1;
- (void)setResponseBlock:(id /* block */)arg1;
- (void)setServerPlaybackContextData:(id)arg1;
- (void)setServerPlaybackContextDataDelegate:(id)arg1;
- (void)setShouldIncludeGUID:(bool)arg1;
- (void)setSkippedRentalCheckout:(bool)arg1;
- (bool)shouldIncludeGUID;
- (bool)skippedRentalCheckout;
- (void)start;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

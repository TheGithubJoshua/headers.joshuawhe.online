<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SSVCookieStorage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreServices.framework/SSVCookieStorage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices (1)
 */

@interface SSVCookieStorage : NSObject {
    SSSQLiteDatabase * __database;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _performingMigration;
    NSURL * _storageLocation;
    bool  _usesSharedCookieDatabase;
}

@property (nonatomic, readonly) SSSQLiteDatabase *_database;
@property (nonatomic) bool performingMigration;
@property (readonly) NSURL *storageLocation;

+ (bool)_bindStatement:(struct sqlite3_stmt { }*)arg1 withValues:(id)arg2;
+ (bool)_currentProcessIsRoot;
+ (bool)_currentProcessShouldUseRescuedStorageLocationForLocation:(id)arg1;
+ (bool)_fileIsOwnedByRoot:(id)arg1;
+ (bool)_fileURLRepresentsSharedStorageLocation:(id)arg1;
+ (id)_getGlobalSetCookiesForResponse:(id)arg1;
+ (id)_getSetCookiesForResponse:(id)arg1;
+ (id)_getUserSetCookiesForResponse:(id)arg1;
+ (bool)_migrateToVersion1WithDatabase:(id)arg1;
+ (bool)_migrateToVersion2WithDatabase:(id)arg1;
+ (id)_rescuedStorageLocationForLocation:(id)arg1;
+ (bool)_setupCookieDatabase:(id)arg1 forCookieStorage:(id)arg2;
+ (id)_sharedStorageLocationPath;
+ (bool)responseHasSetCookies:(id)arg1;
+ (id)sharedInstance;
+ (id)sharedStorage;

- (void).cxx_destruct;
- (id)_accountForKey:(id)arg1;
- (id)_allCookieKeys;
- (void)_bindInsertStatement:(struct sqlite3_stmt { }*)arg1 forCookie:(id)arg2 key:(id)arg3;
- (id)_columnNameForCookieProperty:(id)arg1;
- (void)_cookieDatabaseDidChange;
- (id)_copyCookieDictionaryForURL:(id)arg1 key:(id)arg2;
- (id)_copyCookieObjectsForURL:(id)arg1 key:(id)arg2;
- (id)_copyCookiesForPreparedSQLStatement:(struct sqlite3_stmt { }*)arg1;
- (id)_copyCookiesWithKey:(id)arg1;
- (id)_copyPrivateCookieObjectsForURL:(id)arg1 key:(id)arg2;
- (id)_copyPrivateCookiesForURL:(id)arg1 key:(id)arg2;
- (id)_database;
- (id)_filterCookies:(id)arg1 forURL:(id)arg2;
- (void)_handleSharedCookieDatabaseDidChangeDarwinNotification;
- (void)_insertCookies:(id)arg1 forKey:(id)arg2;
- (void)_setCookies:(id)arg1 forKey:(id)arg2;
- (bool)_shouldAddITFECookieToURL:(id)arg1;
- (bool)_stopIncludingLocalCookies;
- (id)allCookiesForAccount:(id)arg1;
- (id)allCookiesForUserIdentifier:(id)arg1;
- (id)allCookiesForUserIdentifier:(id)arg1 scope:(long long)arg2;
- (id)cookieArrayBySettingFeatureEnablerWithArray:(id)arg1 key:(id)arg2;
- (id)cookieHeadersForURL:(id)arg1 account:(id)arg2;
- (id)cookieHeadersForURL:(id)arg1 userIdentifier:(id)arg2;
- (id)cookieHeadersForURL:(id)arg1 userIdentifier:(id)arg2 scope:(long long)arg3;
- (id)cookiesForURL:(id)arg1 account:(id)arg2;
- (id)cookiesForURL:(id)arg1 userIdentifier:(id)arg2;
- (id)cookiesForURL:(id)arg1 userIdentifier:(id)arg2 scope:(long long)arg3;
- (void)dealloc;
- (id)fetchDefaults;
- (id)init;
- (id)initWithStorageLocation:(id)arg1;
- (bool)performingMigration;
- (void)removeAllCookies;
- (void)removeCookiesWithAccount:(id)arg1;
- (void)removeCookiesWithProperties:(id)arg1;
- (void)removeCookiesWithUserIdentifier:(id)arg1;
- (void)removeCookiesWithUserIdentifier:(id)arg1 scope:(long long)arg2;
- (void)setCookies:(id)arg1 forAccount:(id)arg2;
- (void)setCookies:(id)arg1 forUserIdentifier:(id)arg2;
- (void)setCookiesForHTTPResponse:(id)arg1 account:(id)arg2;
- (void)setCookiesForHTTPResponse:(id)arg1 userIdentifier:(id)arg2;
- (void)setCookiesForHTTPResponse:(id)arg1 userIdentifier:(id)arg2 scope:(long long)arg3;
- (void)setCookiesFromCookieStorage:(id)arg1;
- (void)setFeatureEnablerInDictionary:(id)arg1 key:(id)arg2;
- (void)setPerformingMigration:(bool)arg1;
- (id)storageLocation;
- (void)synchronizeCookies;
- (void)synchronizeFeatureEnablerCookieWithCookieValue:(id)arg1 key:(id)arg2 result:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SSLogConfig.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreServices.framework/SSLogConfig.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices (1)
 */

@interface SSLogConfig : NSObject <NSCopying, NSMutableCopying> {
    SSLogFileOptions * _backingLogFileOptions;
    NSObject<OS_os_log> * _backingOSLogObject;
    NSString * _category;
    unsigned long long  _environment;
    NSString * _outputDirectory;
    NSString * _outputFilename;
    NSObject<OS_dispatch_queue> * _propertyAccessQueue;
    NSString * _subsystem;
    bool  _writeToDisk;
}

@property (nonatomic, readonly) NSObject<OS_os_log> *OSLogObject;
@property (nonatomic, retain) SSLogFileOptions *backingLogFileOptions;
@property (nonatomic, retain) NSObject<OS_os_log> *backingOSLogObject;
@property (nonatomic, copy) NSString *category;
@property (nonatomic, readonly) bool debugLogsEnabled;
@property (nonatomic) unsigned long long environment;
@property (nonatomic, readonly) SSLogFileOptions *logFileOptions;
@property (nonatomic, copy) NSString *outputDirectory;
@property (nonatomic, copy) NSString *outputFilename;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *propertyAccessQueue;
@property (nonatomic, readonly) bool shouldLog;
@property (nonatomic, readonly) bool shouldLogToDisk;
@property (nonatomic, copy) NSString *subsystem;
@property (nonatomic) bool writeToDisk;

+ (id)_createLogConfigWithBaseConfig:(id)arg1 subystem:(id)arg2 category:(id)arg3;
+ (id)_createLogConfigWithSubsystem:(id)arg1 category:(id)arg2;
+ (bool)_debugLogsEnabled:(id)arg1;
+ (bool)_deviceIsRunningInternalBuild;
+ (bool)_deviceIsRunningInternalOrSeedBuild;
+ (bool)_deviceIsRunningSeedBuild;
+ (id)_logFileDirectoryPathForSubsystem:(id)arg1 category:(id)arg2;
+ (id)_logFilenameForSubsystem:(id)arg1 category:(id)arg2;
+ (id)sharedAccountsAuthenticationConfig;
+ (id)sharedAccountsConfig;
+ (id)sharedAccountsCookiesConfig;
+ (id)sharedAccountsLogoutConfig;
+ (id)sharedAccountsMigrationConfig;
+ (id)sharedAccountsMigrationConfigOversize;
+ (id)sharedAccountsStorefrontConfig;
+ (id)sharedBagCacheConfig;
+ (id)sharedBagConfig;
+ (id)sharedConfig;
+ (id)sharedDaemonConfig;
+ (id)sharedDaemonConfigOversize;
+ (id)sharedFairPlayAnisetteConfig;
+ (id)sharedFeatureEnablerMigrationConfig;
+ (id)sharedFollowUpConfig;
+ (id)sharedPrivacyConfig;
+ (id)sharedPushNotificationConfig;
+ (id)sharedStoreServicesConfig;
+ (id)sharedStoreServicesConfigOversize;
+ (id)sharedWriteToDiskConfig;
+ (id)sharediTunesStoreConfig;
+ (id)sharediTunesStoreConfigOversize;

- (void).cxx_destruct;
- (id)OSLogObject;
- (id)backingLogFileOptions;
- (id)backingOSLogObject;
- (id)category;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)debugLogsEnabled;
- (id)description;
- (unsigned long long)environment;
- (unsigned long long)hash;
- (id)init;
- (bool)isEqual:(id)arg1;
- (id)logFileOptions;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)outputDirectory;
- (id)outputFilename;
- (id)propertyAccessQueue;
- (void)setBackingLogFileOptions:(id)arg1;
- (void)setBackingOSLogObject:(id)arg1;
- (void)setCategory:(id)arg1;
- (void)setEnvironment:(unsigned long long)arg1;
- (void)setOutputDirectory:(id)arg1;
- (void)setOutputFilename:(id)arg1;
- (void)setPropertyAccessQueue:(id)arg1;
- (void)setSubsystem:(id)arg1;
- (void)setWriteToDisk:(bool)arg1;
- (bool)shouldLog;
- (bool)shouldLogToDisk;
- (id)subsystem;
- (bool)writeToDisk;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SSSQLiteDatabase.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreServices.framework/SSSQLiteDatabase.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices (1)
 */

@interface SSSQLiteDatabase : NSObject {
    NSString * _databasePath;
    struct sqlite3 { } * _db;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _isInTransaction;
    NSString * _protectionType;
    bool  _readOnly;
    id /* block */  _setupBlock;
    struct __CFDictionary { } * _statementCache;
    bool  _takesTaskCompletionAssertions;
    BKSProcessAssertion * _taskAssertion;
    long long  _taskAssertionCount;
}

@property (nonatomic, copy) id /* block */ setupBlock;
@property bool takesTaskCompletionAssertions;

+ (void)_setTakesTaskCompletionAssertions:(bool)arg1;
+ (void)_stepStatement:(struct sqlite3_stmt { }*)arg1 hasRow:(bool*)arg2 didFinish:(bool*)arg3 isCorrupt:(bool*)arg4;
+ (bool)statementDidFinishAfterStepping:(struct sqlite3_stmt { }*)arg1;
+ (bool)statementHasRowAfterStepping:(struct sqlite3_stmt { }*)arg1;

- (void)_accessDatabaseUsingBlock:(id /* block */)arg1;
- (void)_beginTaskCompletionAssertion;
- (int)_closeDatabase;
- (void)_endTaskCompletionAssertion;
- (void)_expireBackgroundTask;
- (int)_openDatabase;
- (int)_openFlags;
- (int)_resetAndReopenDatabaseWithPath:(id)arg1;
- (void)_resetCorruptDatabase;
- (void)_resetDatabaseWithPath:(id)arg1;
- (struct sqlite3_stmt { }*)_statementForSQL:(id)arg1 cache:(bool)arg2;
- (void)accessDatabaseUsingBlock:(id /* block */)arg1;
- (void)beginTaskCompletionAssertion;
- (bool)columnName:(id)arg1 existsInTable:(id)arg2;
- (long long)countChanges;
- (void)dealloc;
- (void)dispatchAfter:(unsigned long long)arg1 block:(id /* block */)arg2;
- (void)dispatchBlockAsync:(id /* block */)arg1;
- (void)dispatchBlockSync:(id /* block */)arg1;
- (void)endTaskCompletionAssertion;
- (bool)executeSQL:(id)arg1;
- (void)expireBackgroundTask;
- (id)initWithDatabaseURL:(id)arg1;
- (id)initWithDatabaseURL:(id)arg1 readOnly:(bool)arg2;
- (id)initWithDatabaseURL:(id)arg1 readOnly:(bool)arg2 protectionType:(id)arg3;
- (id)newDispatchSourceWithType:(struct dispatch_source_type_s { }*)arg1;
- (void)performTransactionWithBlock:(id /* block */)arg1;
- (void)prepareStatementForSQL:(id)arg1 cache:(bool)arg2 usingBlock:(id /* block */)arg3;
- (void)setSetupBlock:(id /* block */)arg1;
- (void)setTakesTaskCompletionAssertions:(bool)arg1;
- (bool)setUserVersion:(long long)arg1;
- (bool)setUserVersion:(long long)arg1 forDatabase:(id)arg2;
- (id /* block */)setupBlock;
- (bool)statementDidFinishAfterStepping:(struct sqlite3_stmt { }*)arg1;
- (bool)statementHasRowAfterStepping:(struct sqlite3_stmt { }*)arg1;
- (bool)takesTaskCompletionAssertions;
- (long long)userVersion;
- (long long)userVersionForDatabase:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SSMetricsLoadURLEvent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreServices.framework/SSMetricsLoadURLEvent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices (1)
 */

@interface SSMetricsLoadURLEvent : SSMetricsMutableEvent

@property (nonatomic, retain) NSString *DNSServers;
@property (nonatomic) NSString *TIDState;
@property (nonatomic) bool TLSSessionTickets;
@property (nonatomic, retain) NSString *appleTimingApp;
@property (nonatomic) bool apsRelayAttempted;
@property (nonatomic) bool apsRelayDidFallback;
@property (nonatomic) bool apsRelayRequested;
@property (nonatomic) bool apsRelaySucceeded;
@property (nonatomic) bool cachedResponse;
@property (nonatomic, retain) NSString *clientCorrelationKey;
@property (nonatomic, retain) NSString *clientError;
@property (nonatomic) double connectionEndTime;
@property (nonatomic, retain) NSString *connectionInterface;
@property (nonatomic) bool connectionReused;
@property (nonatomic) unsigned long long connectionStartNStatRXBytes;
@property (nonatomic) unsigned long long connectionStartNStatTXBytes;
@property (nonatomic) double connectionStartTime;
@property (nonatomic) unsigned long long connectionStopNStatRXBytes;
@property (nonatomic) unsigned long long connectionStopNStatTXBytes;
@property (nonatomic, retain) NSString *connectionType;
@property (nonatomic) double domainLookupEndTime;
@property (nonatomic) double domainLookupStartTime;
@property (nonatomic, retain) NSString *edgeNodeCacheStatus;
@property (nonatomic) double fetchStartTime;
@property (nonatomic, retain) NSArray *networkQualityReports;
@property (nonatomic, retain) NSString *originalApp;
@property (nonatomic) unsigned long long redirectCount;
@property (nonatomic) double redirectEndTime;
@property (nonatomic) double redirectStartTime;
@property (nonatomic) unsigned long long requestMessageSize;
@property (nonatomic) double requestStartTime;
@property (nonatomic, retain) NSString *requestURL;
@property (nonatomic, retain) NSString *resolvedIPAddress;
@property (nonatomic, retain) NSString *responseDate;
@property (nonatomic) double responseEndTime;
@property (nonatomic) unsigned long long responseMessageSize;
@property (nonatomic) double responseStartTime;
@property (nonatomic) double secureConnectionStartTime;
@property (nonatomic) long long statusCode;
@property (setter=setXPSamplingForced:, nonatomic) bool xpSamplingForced;
@property (setter=setXPSamplingPercentageCachedResponses:, nonatomic) double xpSamplingPercentageCachedResponses;
@property (setter=setXPSamplingPercentageUsers:, nonatomic) double xpSamplingPercentageUsers;
@property (setter=setXPSessionDuration:, nonatomic) double xpSessionDuration;

+ (double)_randomDouble;
+ (void)_setTimingMetricsWindowStartTime:(id)arg1;
+ (id)_timingMetricsWindowStartTime;
+ (bool)shouldCollectTimingData;
+ (bool)shouldCollectTimingDataWithSessionDelegate:(id)arg1;
+ (bool)shouldCollectTimingDataWithSessionDuration:(double)arg1 samplingPercentage:(double)arg2;
+ (bool)shouldLogTimingMetrics;
+ (bool)shouldReportCachedEvent;
+ (bool)shouldReportCachedEventWithSamplingPercentage:(double)arg1;

- (id)DNSServers;
- (id)TIDState;
- (bool)TLSSessionTickets;
- (id)appleTimingApp;
- (bool)apsRelayAttempted;
- (bool)apsRelayDidFallback;
- (bool)apsRelayRequested;
- (bool)apsRelaySucceeded;
- (bool)cachedResponse;
- (id)clientCorrelationKey;
- (id)clientError;
- (double)connectionEndTime;
- (id)connectionInterface;
- (bool)connectionReused;
- (unsigned long long)connectionStartNStatRXBytes;
- (unsigned long long)connectionStartNStatTXBytes;
- (double)connectionStartTime;
- (unsigned long long)connectionStopNStatRXBytes;
- (unsigned long long)connectionStopNStatTXBytes;
- (id)connectionType;
- (id)description;
- (double)domainLookupEndTime;
- (double)domainLookupStartTime;
- (id)edgeNodeCacheStatus;
- (double)fetchStartTime;
- (id)init;
- (id)networkQualityReports;
- (id)originalApp;
- (unsigned long long)redirectCount;
- (double)redirectEndTime;
- (double)redirectStartTime;
- (unsigned long long)requestMessageSize;
- (double)requestStartTime;
- (id)requestURL;
- (id)resolvedIPAddress;
- (id)responseDate;
- (double)responseEndTime;
- (unsigned long long)responseMessageSize;
- (double)responseStartTime;
- (double)secureConnectionStartTime;
- (void)setAppleTimingApp:(id)arg1;
- (void)setApsRelayAttempted:(bool)arg1;
- (void)setApsRelayDidFallback:(bool)arg1;
- (void)setApsRelayRequested:(bool)arg1;
- (void)setApsRelaySucceeded:(bool)arg1;
- (void)setCachedResponse:(bool)arg1;
- (void)setClientCorrelationKey:(id)arg1;
- (void)setClientError:(id)arg1;
- (void)setConnectionEndTime:(double)arg1;
- (void)setConnectionInterface:(id)arg1;
- (void)setConnectionReused:(bool)arg1;
- (void)setConnectionStartNStatRXBytes:(unsigned long long)arg1;
- (void)setConnectionStartNStatTXBytes:(unsigned long long)arg1;
- (void)setConnectionStartTime:(double)arg1;
- (void)setConnectionStopNStatRXBytes:(unsigned long long)arg1;
- (void)setConnectionStopNStatTXBytes:(unsigned long long)arg1;
- (void)setConnectionType:(id)arg1;
- (void)setDNSServers:(id)arg1;
- (void)setDomainLookupEndTime:(double)arg1;
- (void)setDomainLookupStartTime:(double)arg1;
- (void)setEdgeNodeCacheStatus:(id)arg1;
- (void)setFetchStartTime:(double)arg1;
- (void)setNetworkQualityReports:(id)arg1;
- (void)setOriginalApp:(id)arg1;
- (void)setRedirectCount:(unsigned long long)arg1;
- (void)setRedirectEndTime:(double)arg1;
- (void)setRedirectStartTime:(double)arg1;
- (void)setRequestMessageSize:(unsigned long long)arg1;
- (void)setRequestStartTime:(double)arg1;
- (void)setRequestURL:(id)arg1;
- (void)setResolvedIPAddress:(id)arg1;
- (void)setResponseDate:(id)arg1;
- (void)setResponseEndTime:(double)arg1;
- (void)setResponseMessageSize:(unsigned long long)arg1;
- (void)setResponseStartTime:(double)arg1;
- (void)setSecureConnectionStartTime:(double)arg1;
- (void)setStatusCode:(long long)arg1;
- (void)setTIDState:(id)arg1;
- (void)setTLSSessionTickets:(bool)arg1;
- (void)setXPSamplingForced:(bool)arg1;
- (void)setXPSamplingPercentageCachedResponses:(double)arg1;
- (void)setXPSamplingPercentageUsers:(double)arg1;
- (void)setXPSessionDuration:(double)arg1;
- (long long)statusCode;
- (bool)xpSamplingForced;
- (double)xpSamplingPercentageCachedResponses;
- (double)xpSamplingPercentageUsers;
- (double)xpSessionDuration;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

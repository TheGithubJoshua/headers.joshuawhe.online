<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SSBiometricAuthenticationContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreServices.framework/SSBiometricAuthenticationContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices (1)
 */

@interface SSBiometricAuthenticationContext : NSObject <NSCopying, SSXPCCoding> {
    NSNumber * _accountIdentifier;
    NSString * _accountName;
    long long  _biometricAuthorizationAttempts;
    NSString * _challenge;
    SSConsolidatedDialog * _consolidatedDialog;
    NSString * _dialogId;
    bool  _didAuthenticate;
    bool  _didBuyParamsChange;
    bool  _didFallbackToPassword;
    bool  _isExtendedAction;
    bool  _isIdentityMapInvalid;
    bool  _isPayment;
    NSLock * _lock;
    NSString * _passwordEquivalentToken;
    SSPaymentSheet * _paymentSheet;
    NSData * _paymentTokenData;
    NSURL * _redirectURL;
    bool  _shouldContinueTouchIDSession;
    bool  _shouldSendFallbackHeader;
    NSString * _signature;
    bool  _touchIDDelayEnabled;
    NSString * _userAgent;
    NSString * _xAppleAMDHeader;
    NSString * _xAppleAMDMHeader;
}

@property (copy) NSNumber *accountIdentifier;
@property (copy) NSString *accountName;
@property long long biometricAuthorizationAttempts;
@property (copy) NSString *challenge;
@property (retain) SSConsolidatedDialog *consolidatedDialog;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (copy) NSString *dialogId;
@property bool didAuthenticate;
@property bool didBuyParamsChange;
@property bool didFallbackToPassword;
@property (readonly) unsigned long long hash;
@property bool isExtendedAction;
@property bool isIdentityMapInvalid;
@property bool isPayment;
@property (copy) NSString *passwordEquivalentToken;
@property (retain) SSPaymentSheet *paymentSheet;
@property (copy) NSData *paymentTokenData;
@property (copy) NSURL *redirectURL;
@property bool shouldContinueTouchIDSession;
@property bool shouldSendFallbackHeader;
@property (copy) NSString *signature;
@property (readonly) Class superclass;
@property bool touchIDDelayEnabled;
@property (copy) NSString *userAgent;
@property (copy) NSString *xAppleAMDHeader;
@property (copy) NSString *xAppleAMDMHeader;

- (void).cxx_destruct;
- (id)accountIdentifier;
- (id)accountName;
- (long long)biometricAuthorizationAttempts;
- (id)challenge;
- (id)consolidatedDialog;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)copyXPCEncoding;
- (id)dialogId;
- (bool)didAuthenticate;
- (bool)didBuyParamsChange;
- (bool)didFallbackToPassword;
- (id)init;
- (id)initWithXPCEncoding:(id)arg1;
- (bool)isExtendedAction;
- (bool)isIdentityMapInvalid;
- (bool)isPayment;
- (id)passwordEquivalentToken;
- (id)paymentSheet;
- (id)paymentTokenData;
- (id)redirectURL;
- (void)setAccountIdentifier:(id)arg1;
- (void)setAccountName:(id)arg1;
- (void)setBiometricAuthorizationAttempts:(long long)arg1;
- (void)setChallenge:(id)arg1;
- (void)setConsolidatedDialog:(id)arg1;
- (void)setDialogId:(id)arg1;
- (void)setDidAuthenticate:(bool)arg1;
- (void)setDidBuyParamsChange:(bool)arg1;
- (void)setDidFallbackToPassword:(bool)arg1;
- (void)setIsExtendedAction:(bool)arg1;
- (void)setIsIdentityMapInvalid:(bool)arg1;
- (void)setIsPayment:(bool)arg1;
- (void)setPasswordEquivalentToken:(id)arg1;
- (void)setPaymentSheet:(id)arg1;
- (void)setPaymentTokenData:(id)arg1;
- (void)setRedirectURL:(id)arg1;
- (void)setShouldContinueTouchIDSession:(bool)arg1;
- (void)setShouldSendFallbackHeader:(bool)arg1;
- (void)setSignature:(id)arg1;
- (void)setTouchIDDelayEnabled:(bool)arg1;
- (void)setUserAgent:(id)arg1;
- (void)setXAppleAMDHeader:(id)arg1;
- (void)setXAppleAMDMHeader:(id)arg1;
- (bool)shouldContinueTouchIDSession;
- (bool)shouldSendFallbackHeader;
- (id)signature;
- (bool)touchIDDelayEnabled;
- (id)userAgent;
- (id)xAppleAMDHeader;
- (id)xAppleAMDMHeader;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

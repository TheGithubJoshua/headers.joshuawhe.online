<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SSVLoadURLOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreServices.framework/SSVLoadURLOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices (1)
 */

@interface SSVLoadURLOperation : NSOperation <SSURLSessionManagerDelegate> {
    AKAppleIDSession * _authKitSession;
    SSBag * _bag;
    NSMutableData * _dataBuffer;
    SSVURLDataConsumer * _dataConsumer;
    <SSVLoadURLOperationDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    bool  _iTunesStoreRequest;
    NSData * _inputData;
    long long  _machineDataRetryCount;
    long long  _machineDataStyle;
    SSMetricsPageEvent * _metricsPageEvent;
    id /* block */  _outputBlock;
    id /* block */  _prepareRequestBlock;
    NSMutableSet * _protocolRedirectURLs;
    bool  _recordsMetrics;
    NSURL * _redirectURL;
    NSString * _referrerApplicationName;
    NSString * _referrerURLString;
    SSURLRequestProperties * _requestProperties;
    NSHTTPURLResponse * _response;
    NSRunLoop * _runLoop;
    SSVFairPlaySAPSession * _sapSession;
    SSVSAPSignaturePolicy * _sapSignaturePolicy;
    bool  _shouldRetry;
    bool  _shouldSuppressCookies;
    bool  _shouldSuppressUserInfo;
    bool  _stopped;
    NSString * _storeFrontSuffix;
    SSURLBag * _urlBag;
    SSVURLBagInterpreter * _urlBagInterpreter;
    NSURLRequest * _urlRequest;
}

@property (getter=isITunesStoreRequest) bool ITunesStoreRequest;
@property (retain) SSVFairPlaySAPSession *SAPSession;
@property (copy) SSVSAPSignaturePolicy *SAPSignaturePolicy;
@property (readonly) NSURL *URL;
@property (nonatomic, readonly) NSURLCache *URLCache;
@property (nonatomic, readonly) NSString *URLCacheID;
@property (readonly) NSURLRequest *URLRequest;
@property (readonly) NSHTTPURLResponse *URLResponse;
@property (nonatomic, retain) SSBag *bag;
@property (readonly) NSCachedURLResponse *cachedURLResponse;
@property (retain) SSVURLDataConsumer *dataConsumer;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SSVLoadURLOperationDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (copy) id /* block */ expiredOutputBlock;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isURLBagRequest;
@property long long machineDataStyle;
@property (nonatomic, readonly) NSNumber *metricsLoadURLSamplingPercentage;
@property (nonatomic, readonly) NSNumber *metricsLoadURLSamplingPercentageCachedResponses;
@property (nonatomic, readonly) NSNumber *metricsLoadURLSessionDuration;
@property (readonly) SSMetricsPageEvent *metricsPageEvent;
@property (copy) id /* block */ outputBlock;
@property (copy) id /* block */ prepareRequestBlock;
@property (nonatomic, readonly) NSData *rawResponseData;
@property bool recordsMetrics;
@property (copy) NSString *referrerApplicationName;
@property (copy) NSString *referrerURLString;
@property (nonatomic, readonly) SSURLRequestProperties *requestProperties;
@property (nonatomic, readonly) bool shouldDisableCellular;
@property (nonatomic, readonly) bool shouldRequireCellular;
@property (nonatomic, readonly) bool shouldSetCookies;
@property bool shouldSuppressCookies;
@property bool shouldSuppressUserInfo;
@property (nonatomic, readonly) NSData *sourceAppAuditTokenData;
@property (nonatomic, readonly) NSString *sourceAppBundleID;
@property (copy) NSString *storeFrontSuffix;
@property (readonly) Class superclass;

+ (id)currentAcceptLanguage;

- (void).cxx_destruct;
- (id)SAPSession;
- (id)SAPSignaturePolicy;
- (id)URL;
- (id)URLRequest;
- (id)URLResponse;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithEvent:(id)arg3 error:(id)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)_addMachineDataHeadersToRequest:(id)arg1 withAccountIdentifier:(id)arg2;
- (void)_addSAPSignatureToRequest:(id)arg1;
- (void)_applyResponseToMetrics:(id)arg1;
- (void)_configureWithURLBagInterpreter:(id)arg1;
- (void)_createAuthKitSession;
- (id)_dataForCachedResponse:(const struct _CFCachedURLResponse { }*)arg1;
- (void)_finishWithData:(id)arg1;
- (void)_finishWithOutput:(id)arg1 error:(id)arg2;
- (id)_initSSVLoadURLOperation;
- (void)_keepAliveTimer:(id)arg1;
- (void)_loadURLBagInterpreter;
- (id)_newURLRequestWithRedirectURL:(id)arg1;
- (id)_outputForData:(id)arg1 error:(id*)arg2;
- (void)_releaseOutputBlocks;
- (void)_runOnce;
- (int)_runRunLoopUntilStopped;
- (bool)_shouldRetryAfterMachineDataRequest:(id)arg1;
- (void)_stopIfCancelled;
- (void)_stopRunLoop;
- (id)bag;
- (id)cachedURLResponse;
- (void)cancel;
- (void)configureWithURLBag:(id)arg1;
- (void)configureWithURLBagDictionary:(id)arg1;
- (id)dataConsumer;
- (id)delegate;
- (void)dispatchAsync:(id /* block */)arg1;
- (void)dispatchSync:(id /* block */)arg1;
- (id /* block */)expiredOutputBlock;
- (id)init;
- (id)initWithData:(id)arg1 fromOperation:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithURLRequest:(id)arg1;
- (id)initWithURLRequestProperties:(id)arg1;
- (bool)isITunesStoreRequest;
- (long long)machineDataStyle;
- (void)main;
- (id)metricsLoadURLSamplingPercentage;
- (id)metricsLoadURLSamplingPercentageCachedResponses;
- (id)metricsLoadURLSessionDuration;
- (id)metricsPageEvent;
- (id /* block */)outputBlock;
- (id /* block */)prepareRequestBlock;
- (id)rawResponseData;
- (bool)recordsMetrics;
- (id)referrerApplicationName;
- (id)referrerURLString;
- (id)requestProperties;
- (void)setBag:(id)arg1;
- (void)setDataConsumer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExpiredOutputBlock:(id /* block */)arg1;
- (void)setITunesStoreRequest:(bool)arg1;
- (void)setMachineDataStyle:(long long)arg1;
- (void)setOutputBlock:(id /* block */)arg1;
- (void)setPrepareRequestBlock:(id /* block */)arg1;
- (void)setRecordsMetrics:(bool)arg1;
- (void)setReferrerApplicationName:(id)arg1;
- (void)setReferrerURLString:(id)arg1;
- (void)setSAPSession:(id)arg1;
- (void)setSAPSignaturePolicy:(id)arg1;
- (void)setShouldSuppressCookies:(bool)arg1;
- (void)setShouldSuppressUserInfo:(bool)arg1;
- (void)setStoreFrontSuffix:(id)arg1;
- (bool)shouldSuppressCookies;
- (bool)shouldSuppressUserInfo;
- (id)storeFrontSuffix;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

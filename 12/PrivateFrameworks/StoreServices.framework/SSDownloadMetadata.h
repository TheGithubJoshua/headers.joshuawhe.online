<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SSDownloadMetadata.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreServices.framework/SSDownloadMetadata.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices (1)
 */

@interface SSDownloadMetadata : NSObject <NSCopying, NSSecureCoding, SSXPCCoding> {
    NSMutableDictionary * _dictionary;
    long long  _keyStyle;
    NSLock * _lock;
}

@property (getter=hasHDR, readonly) bool HDR;
@property (getter=isHLS, readonly) bool HLS;
@property (readonly) NSArray *MD5HashStrings;
@property (readonly, retain) NSData *appReceiptData;
@property unsigned long long artistIdentifier;
@property (copy) NSString *artistName;
@property (getter=isAutomaticDownload) bool automaticDownload;
@property (retain) NSURL *cancelDownloadURL;
@property (getter=isContentRestricted, readonly) bool contentRestricted;
@property (retain) NSString *copyright;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDeviceBasedVPP) bool deviceBasedVPP;
@property (retain) NSDictionary *dictionary;
@property (retain) NSString *downloadKey;
@property (readonly) NSNumber *downloaderAccountIdentifier;
@property (retain) NSData *epubRightsData;
@property (retain) NSString *fileExtension;
@property (retain) NSURL *fullSizeImageURL;
@property (retain) NSString *genre;
@property unsigned long long genreIdentifier;
@property (readonly) unsigned long long hash;
@property (copy) NSURL *hlsPlaylistURL;
@property unsigned long long itemIdentifier;
@property long long keyStyle;
@property (retain) NSString *kind;
@property (retain) NSURL *launchExtrasUrl;
@property (copy) NSString *longDescription;
@property (readonly) NSNumber *numberOfBytesToHash;
@property (copy) NSString *pageProgressionDirection;
@property unsigned long long preOrderIdentifier;
@property (copy) NSString *preferredAssetFlavor;
@property (getter=isPremium, readonly) bool premium;
@property (readonly) NSDictionary *primaryAssetDictionary;
@property (retain) NSURL *primaryAssetURL;
@property (copy) NSString *redownloadActionParameters;
@property (getter=isRedownloadDownload) bool redownloadDownload;
@property (retain) NSDate *releaseDate;
@property (retain) NSString *releaseDateString;
@property (retain) NSNumber *releaseYear;
@property (copy) NSNumber *rentalID;
@property (copy) NSNumber *requestPersistentID;
@property (copy) id requiredDeviceCapabilities;
@property (copy) NSString *shortDescription;
@property bool shouldDownloadAutomatically;
@property (retain) NSArray *sinfs;
@property (getter=isSoftwareKind, readonly) bool softwareKind;
@property (retain) NSString *sortArtistName;
@property (retain) NSString *sortCollectionName;
@property (retain) NSString *sortTitle;
@property (retain) NSString *subtitle;
@property (readonly) Class superclass;
@property (readonly) SSItemImageCollection *thumbnailImageCollection;
@property (retain) NSURL *thumbnailImageURL;
@property (retain) NSString *thumbnailNewsstandBindingEdge;
@property (retain) NSString *thumbnailNewsstandBindingType;
@property (retain) NSString *title;
@property (retain) NSString *transactionIdentifier;
@property (copy) NSURL *transitMapDataURL;
@property (getter=isTvTemplate) bool tvTemplate;
@property (getter=isVideosKind, readonly) bool videosKind;

+ (bool)supportsSecureCoding;

- (id)MD5HashStrings;
- (id)_assetDictionary;
- (id)_dateValueForValue:(id)arg1;
- (id)_newDateFormatter;
- (id)_newImageCollectionWithURLString:(id)arg1;
- (id)_releaseDateValue;
- (void)_setValue:(id)arg1 forTopLevelKey:(id)arg2;
- (void)_setValueCopy:(id)arg1 forMetadataKey:(id)arg2;
- (id)_stringValueForValue:(id)arg1;
- (id)_thumbnailArtworkImage;
- (id)_urlValueForValue:(id)arg1;
- (id)_valueForFirstAvailableTopLevelKey:(id)arg1;
- (id)appReceiptData;
- (id)applicationIdentifier;
- (unsigned long long)artistIdentifier;
- (id)artistName;
- (bool)artworkIsPrerendered;
- (id)betaExternalVersionIdentifier;
- (id)bundleIdentifier;
- (id)cancelDownloadURL;
- (id)cloudIdentifier;
- (id)collectionArtistName;
- (unsigned long long)collectionIdentifier;
- (id)collectionIndexInCollectionGroup;
- (id)collectionName;
- (unsigned long long)composerIdentifier;
- (id)composerName;
- (id)contentRating;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)copyWritableMetadata;
- (id)copyXPCEncoding;
- (id)copyright;
- (void)dealloc;
- (id)dictionary;
- (id)documentTargetIdentifier;
- (id)downloadKey;
- (id)downloadPermalink;
- (id)downloadPolicy;
- (id)downloaderAccountIdentifier;
- (id)durationInMilliseconds;
- (id)enableExtensions;
- (void)encodeWithCoder:(id)arg1;
- (id)episodeIdentifier;
- (id)episodeSortIdentifier;
- (id)epubRightsData;
- (id)fileExtension;
- (id)fullSizeImageURL;
- (id)genre;
- (unsigned long long)genreIdentifier;
- (bool)hasHDR;
- (bool)hasMessagesExtension;
- (id)hlsPlaylistURL;
- (id)indexInCollection;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithItem:(id)arg1;
- (id)initWithItem:(id)arg1 offer:(id)arg2;
- (id)initWithKind:(id)arg1;
- (id)initWithXPCEncoding:(id)arg1;
- (bool)is32BitOnly;
- (bool)isAutomaticDownload;
- (bool)isCompilation;
- (bool)isContentRestricted;
- (bool)isDeviceBasedVPP;
- (bool)isExplicitContent;
- (bool)isHLS;
- (bool)isHighDefinition;
- (bool)isMusicShow;
- (bool)isPremium;
- (bool)isRedownloadDownload;
- (bool)isRental;
- (bool)isSample;
- (bool)isSharedResource;
- (bool)isSoftwareKind;
- (bool)isTvTemplate;
- (bool)isVideosKind;
- (unsigned long long)itemIdentifier;
- (long long)keyStyle;
- (id)kind;
- (id)launchExtrasUrl;
- (bool)launchProhibited;
- (id)longDescription;
- (id)longSeasonDescription;
- (id)messagesArtworkURL;
- (id)movementCount;
- (id)movementName;
- (id)movementNumber;
- (id)networkName;
- (id)newDownloadProperties;
- (id)numberOfBytesToHash;
- (id)numberOfCollectionsInCollectionGroup;
- (id)numberOfItemsInCollection;
- (id)pageProgressionDirection;
- (id)podcastEpisodeGUID;
- (id)podcastFeedURL;
- (id)podcastType;
- (unsigned long long)preOrderIdentifier;
- (id)preferredAssetFlavor;
- (id)primaryAssetDictionary;
- (id)primaryAssetURL;
- (id)publicationVersion;
- (id)purchaseDate;
- (id)redownloadActionParameters;
- (id)releaseDate;
- (id)releaseDateString;
- (id)releaseYear;
- (id)rentalID;
- (id)requestPersistentID;
- (id)requiredDeviceCapabilities;
- (unsigned long long)sagaIdentifier;
- (id)seasonNumber;
- (id)seriesName;
- (void)setArtistIdentifier:(unsigned long long)arg1;
- (void)setArtistName:(id)arg1;
- (void)setArtworkIsPrerendered:(bool)arg1;
- (void)setAutomaticDownload:(bool)arg1;
- (void)setBetaExternalVersionIdentifier:(id)arg1;
- (void)setBundleIdentifier:(id)arg1;
- (void)setCancelDownloadURL:(id)arg1;
- (void)setCloudIdentifier:(id)arg1;
- (void)setCollectionArtistName:(id)arg1;
- (void)setCollectionIdentifier:(unsigned long long)arg1;
- (void)setCollectionIndexInCollectionGroup:(id)arg1;
- (void)setCollectionName:(id)arg1;
- (void)setCompilation:(bool)arg1;
- (void)setComposerIdentifier:(unsigned long long)arg1;
- (void)setComposerName:(id)arg1;
- (void)setContentRating:(id)arg1;
- (void)setCopyright:(id)arg1;
- (void)setDeviceBasedVPP:(bool)arg1;
- (void)setDictionary:(id)arg1;
- (void)setDocumentTargetIdentifier:(id)arg1;
- (void)setDownloadKey:(id)arg1;
- (void)setDownloadPermalink:(id)arg1;
- (void)setDownloadPolicy:(id)arg1;
- (void)setDurationInMilliseconds:(id)arg1;
- (void)setEnableExtensions:(id)arg1;
- (void)setEpisodeIdentifier:(id)arg1;
- (void)setEpisodeSortIdentifier:(id)arg1;
- (void)setEpubRightsData:(id)arg1;
- (void)setExplicitContent:(bool)arg1;
- (void)setFileExtension:(id)arg1;
- (void)setFullSizeImageURL:(id)arg1;
- (void)setGenre:(id)arg1;
- (void)setGenreIdentifier:(unsigned long long)arg1;
- (void)setHasMessagesExtension:(bool)arg1;
- (void)setHighDefinition:(bool)arg1;
- (void)setHlsPlaylistURL:(id)arg1;
- (void)setIndexInCollection:(id)arg1;
- (void)setItemIdentifier:(unsigned long long)arg1;
- (void)setKeyStyle:(long long)arg1;
- (void)setKind:(id)arg1;
- (void)setLaunchExtrasUrl:(id)arg1;
- (void)setLaunchProhibited:(bool)arg1;
- (void)setLongDescription:(id)arg1;
- (void)setLongSeasonDescription:(id)arg1;
- (void)setMD5HashStrings:(id)arg1 numberOfBytesToHash:(id)arg2;
- (void)setMessagesArtworkURL:(id)arg1;
- (void)setMusicShow:(bool)arg1;
- (void)setNetworkName:(id)arg1;
- (void)setNumberOfCollectionsInCollectionGroup:(id)arg1;
- (void)setNumberOfItemsInCollection:(id)arg1;
- (void)setPageProgressionDirection:(id)arg1;
- (void)setPodcastEpisodeGUID:(id)arg1;
- (void)setPodcastFeedURL:(id)arg1;
- (void)setPodcastType:(id)arg1;
- (void)setPreOrderIdentifier:(unsigned long long)arg1;
- (void)setPreferredAssetFlavor:(id)arg1;
- (void)setPrimaryAssetURL:(id)arg1;
- (void)setPublicationVersion:(id)arg1;
- (void)setPurchaseDate:(id)arg1;
- (void)setRedownloadActionParameters:(id)arg1;
- (void)setRedownloadDownload:(bool)arg1;
- (void)setReleaseDate:(id)arg1;
- (void)setReleaseDateString:(id)arg1;
- (void)setReleaseYear:(id)arg1;
- (void)setRental:(bool)arg1;
- (void)setRentalID:(id)arg1;
- (void)setRequestPersistentID:(id)arg1;
- (void)setRequiredDeviceCapabilities:(id)arg1;
- (void)setSagaIdentifier:(unsigned long long)arg1;
- (void)setSample:(bool)arg1;
- (void)setSeasonNumber:(id)arg1;
- (void)setSeriesName:(id)arg1;
- (void)setSharedResource:(bool)arg1;
- (void)setShortDescription:(id)arg1;
- (void)setShouldDownloadAutomatically:(bool)arg1;
- (void)setSinfs:(id)arg1;
- (void)setSortArtistName:(id)arg1;
- (void)setSortCollectionName:(id)arg1;
- (void)setSortTitle:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setThumbnailImageURL:(id)arg1;
- (void)setThumbnailNewsstandBindingEdge:(id)arg1;
- (void)setThumbnailNewsstandBindingType:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTransactionIdentifier:(id)arg1;
- (void)setTransitMapDataURL:(id)arg1;
- (void)setTvTemplate:(bool)arg1;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;
- (void)setValuesFromDownload:(id)arg1;
- (void)setVariantIdentifier:(id)arg1;
- (void)setVideoDetailsDictionary:(id)arg1;
- (void)setViewStoreItemURL:(id)arg1;
- (id)shortDescription;
- (bool)shouldDownloadAutomatically;
- (id)showComposer;
- (id)sinfs;
- (id)sortArtistName;
- (id)sortCollectionName;
- (id)sortTitle;
- (id)subtitle;
- (id)thumbnailImageCollection;
- (id)thumbnailImageURL;
- (id)thumbnailNewsstandBindingEdge;
- (id)thumbnailNewsstandBindingType;
- (id)title;
- (id)transactionIdentifier;
- (id)transitMapDataURL;
- (id)valueForFirstAvailableKey:(id)arg1;
- (id)valueForMetadataKey:(id)arg1;
- (id)variantIdentifier;
- (id)videoDetailsDictionary;
- (id)viewStoreItemURL;
- (id)workName;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>IMAVChatProxy.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/IMAVCore.framework/IMAVChatProxy.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore (1000)
 */

@interface IMAVChatProxy : NSObject {
    NSDictionary * _info;
}

@property (nonatomic, readonly, retain) NSString *GUID;
@property (nonatomic, readonly, retain) NSString *conferenceID;
@property (nonatomic) double connectionTimeoutTime;
@property (nonatomic, readonly, retain) NSNumber *dataDownloaded;
@property (nonatomic, readonly, retain) NSNumber *dataUploaded;
@property (nonatomic, readonly, retain) NSDate *dateConnected;
@property (nonatomic, readonly, retain) NSDate *dateEnded;
@property (nonatomic, readonly) int endedError;
@property (nonatomic, readonly) unsigned int endedReason;
@property (nonatomic, readonly) bool hasReceivedFirstFrame;
@property (nonatomic, readonly, retain) IMHandle *initiatorIMHandle;
@property (nonatomic) double invitationTimeoutTime;
@property (nonatomic, readonly) bool isActive;
@property (nonatomic, readonly) bool isCaller;
@property (setter=setMute:, nonatomic) bool isMute;
@property (nonatomic) bool isSendingAudio;
@property (nonatomic) bool isSendingVideo;
@property (nonatomic, readonly) bool isStateFinal;
@property (nonatomic, readonly) bool isVideo;
@property (nonatomic, readonly, retain) IMHandle *otherIMHandle;
@property (getter=isRelayed, nonatomic) bool relayed;
@property (nonatomic, readonly, retain) NSArray *remoteParticipants;
@property (nonatomic, readonly) unsigned int sessionID;
@property (nonatomic, readonly) unsigned int state;

- (id)GUID;
- (bool)_isCallUpgradeTo:(id)arg1;
- (bool)_isProxy;
- (void)acceptInvitation;
- (id)account;
- (void)cancelInvitation;
- (id)conferenceID;
- (double)connectionTimeoutTime;
- (id)dataDownloaded;
- (id)dataUploaded;
- (id)dateConnected;
- (id)dateEnded;
- (void)dealloc;
- (void)declineInvitation;
- (id)description;
- (void)endChat;
- (void)endChatWithReason:(unsigned int)arg1;
- (int)endedError;
- (unsigned int)endedReason;
- (void)finalUpdate;
- (void)forwardInvocation:(id)arg1;
- (bool)hasReceivedFirstFrame;
- (id)initiatorIMHandle;
- (double)invitationTimeoutTime;
- (void)invite:(id)arg1 additionalPeers:(id)arg2;
- (void)invite:(id)arg1 additionalPeers:(id)arg2 excludingPushTokens:(id)arg3;
- (void)inviteAll;
- (bool)isActive;
- (bool)isCaller;
- (bool)isMute;
- (bool)isRelayed;
- (bool)isSendingAudio;
- (bool)isSendingVideo;
- (bool)isStateFinal;
- (bool)isVideo;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)otherIMHandle;
- (id)remoteParticipants;
- (unsigned int)sessionID;
- (void)setConnectionTimeoutTime:(double)arg1;
- (void)setInvitationTimeoutTime:(double)arg1;
- (void)setIsSendingAudio:(bool)arg1;
- (void)setIsSendingVideo:(bool)arg1;
- (void)setLocalAspectRatio:(struct CGSize { double x1; double x2; })arg1 cameraOrientation:(unsigned int)arg2 cameraType:(unsigned int)arg3;
- (void)setMute:(bool)arg1;
- (void)setRelayed:(bool)arg1;
- (unsigned int)state;
- (void)updateWithInfo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

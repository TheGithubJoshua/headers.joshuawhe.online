<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>IMAVChatParticipantCallInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/IMAVCore.framework/IMAVChatParticipantCallInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/IMAVCore.framework/IMAVCore (1000)
 */

@interface IMAVChatParticipantCallInfo : NSObject {
    unsigned int  _callID;
    bool  _inviteNeedsDelivery;
    bool  _isAudioPaused;
    bool  _isBeingHandedOff;
    bool  _isReinitiate;
    bool  _isVideoPaused;
    unsigned long long  _localConnectionType;
    NSData * _localICEData;
    NSData * _localNATIP;
    NSNumber * _localNATType;
    NSData * _localSKEData;
    NSString * _peerCN;
    NSNumber * _peerProtocolVersion;
    NSDictionary * _relayCancel;
    NSDictionary * _relayInitiate;
    NSDictionary * _relayUpdate;
    unsigned long long  _remoteConnectionType;
    NSData * _remoteICEData;
    NSData * _remoteNATIP;
    NSNumber * _remoteNATType;
    NSData * _remoteSKEData;
    long long  _state;
}

@property (nonatomic) unsigned int callID;
@property (nonatomic) bool inviteNeedsDelivery;
@property (nonatomic, readonly) bool isAudioPaused;
@property (nonatomic) bool isBeingHandedOff;
@property (nonatomic, readonly) bool isFinished;
@property (nonatomic) bool isReinitiate;
@property (nonatomic) bool isVideoPaused;
@property (nonatomic) unsigned long long localConnectionType;
@property (nonatomic, retain) NSData *localICEData;
@property (nonatomic, retain) NSData *localNATIP;
@property (nonatomic, retain) NSNumber *localNATType;
@property (nonatomic, retain) NSData *localSKEData;
@property (nonatomic, retain) NSString *peerCN;
@property (nonatomic, retain) NSNumber *peerProtocolVersion;
@property (nonatomic, retain) NSDictionary *relayCancel;
@property (nonatomic, retain) NSDictionary *relayInitiate;
@property (nonatomic, retain) NSDictionary *relayUpdate;
@property (nonatomic) unsigned long long remoteConnectionType;
@property (nonatomic, retain) NSData *remoteICEData;
@property (nonatomic, retain) NSData *remoteNATIP;
@property (nonatomic, retain) NSNumber *remoteNATType;
@property (nonatomic, retain) NSData *remoteSKEData;
@property (nonatomic) long long state;

- (unsigned int)callID;
- (void)dealloc;
- (id)description;
- (id)init;
- (bool)inviteNeedsDelivery;
- (bool)isAudioPaused;
- (bool)isBeingHandedOff;
- (bool)isFinished;
- (bool)isReinitiate;
- (bool)isVideoPaused;
- (unsigned long long)localConnectionType;
- (id)localICEData;
- (id)localNATIP;
- (id)localNATType;
- (id)localSKEData;
- (id)peerCN;
- (id)peerProtocolVersion;
- (id)relayCancel;
- (id)relayInitiate;
- (id)relayUpdate;
- (unsigned long long)remoteConnectionType;
- (id)remoteICEData;
- (id)remoteNATIP;
- (id)remoteNATType;
- (id)remoteSKEData;
- (void)setCallID:(unsigned int)arg1;
- (void)setInviteNeedsDelivery:(bool)arg1;
- (void)setIsBeingHandedOff:(bool)arg1;
- (void)setIsReinitiate:(bool)arg1;
- (void)setIsVideoPaused:(bool)arg1;
- (void)setLocalConnectionType:(unsigned long long)arg1;
- (void)setLocalICEData:(id)arg1;
- (void)setLocalNATIP:(id)arg1;
- (void)setLocalNATType:(id)arg1;
- (void)setLocalSKEData:(id)arg1;
- (void)setPeerCN:(id)arg1;
- (void)setPeerProtocolVersion:(id)arg1;
- (void)setRelayCancel:(id)arg1;
- (void)setRelayInitiate:(id)arg1;
- (void)setRelayUpdate:(id)arg1;
- (void)setRemoteConnectionType:(unsigned long long)arg1;
- (void)setRemoteICEData:(id)arg1;
- (void)setRemoteNATIP:(id)arg1;
- (void)setRemoteNATType:(id)arg1;
- (void)setRemoteSKEData:(id)arg1;
- (void)setState:(long long)arg1;
- (long long)state;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>APUIShortLookViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AppPredictionUI.framework/APUIShortLookViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AppPredictionUI.framework/AppPredictionUI (1)
 */

@interface APUIShortLookViewController : UIViewController <APUIIntentHandlingViewControllerDelegate, APUILongLookViewControllerDataSource, APUILongLookViewControllerDelegate, CRKCardPresentationDelegate, CRKCardViewControllerDelegate, PLPreviewInteractionManagerDelegate, PLPreviewInteractionPresenting, SearchUIResultShortLook> {
    bool  _acceptPlatterTaps;
    bool  _actionCompletedSuccessfully;
    ATXAction * _atxAction;
    NSString * _bundleId;
    CRKCardPresentation * _cardPresentation;
    UIViewController<CRKCardViewControlling> * _currentCardViewController;
    <APUIShortLookViewControllerDelegate> * _delegate;
    long long  _dismissalReason;
    bool  _hasShownLongLook;
    INIntent * _intent;
    APUIIntentHandlingViewController * _intentHandlingViewController;
    INInteraction * _interaction;
    double  _preferredPlatterContentHeight;
    APUILongLookViewController<PLPreviewInteractionPresentable> * _presentableViewController;
    PLPreviewInteractionManager * _previewInteractionManager;
    bool  _representsVoiceShortcut;
    bool  _safeToReleaseLongLookViewController;
    SFSearchResult * _searchResult;
    APUITVIntentHandler * _tvIntentHandler;
    NSUserActivity * _userActivity;
    NSUserDefaults * _userDefaults;
    bool  _wasPresentedImmediately;
}

@property (nonatomic, retain) ATXAction *atxAction;
@property (nonatomic, copy) NSString *bundleId;
@property (nonatomic, retain) CRKCardPresentation *cardPresentation;
@property (nonatomic, readonly) <CRKCardViewControllerDelegate> *cardViewControllerDelegate;
@property (nonatomic, retain) UIViewController<CRKCardViewControlling> *currentCardViewController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <APUIShortLookViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } finalDismissedFrameOfViewForPreview;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } finalPresentedFrameOfViewForPreview;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } initialPresentedFrameOfViewForPreview;
@property (nonatomic, retain) INIntent *intent;
@property (nonatomic, retain) APUIIntentHandlingViewController *intentHandlingViewController;
@property (nonatomic, retain) INInteraction *interaction;
@property (nonatomic, readonly) PLPreviewInteractionManager *previewInteractionManager;
@property (nonatomic, retain) SFSearchResult *searchResult;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSUserActivity *userActivity;
@property (nonatomic, readonly) UIView *viewForPreview;

- (void).cxx_destruct;
- (long long)_actionTypeForMetrics;
- (id)_cardContentWithIntentResponse:(id)arg1;
- (id)_debugStringForNSUA;
- (id)_defaults;
- (void)_dismissLongLookWithReason:(long long)arg1 completion:(id /* block */)arg2;
- (void)_handleActionButtonForIntent;
- (id)_intentConfirmationActions;
- (bool)_isDoNotDisturbIntent;
- (void)_resetRepresentedObjectState;
- (bool)_shouldAcceptPlatterTaps;
- (bool)_shouldTellDelegateToClearActionOnDismissal:(long long)arg1;
- (id)_titleForLongLookViewController:(id)arg1;
- (id)appIconImageForLongLook:(id)arg1;
- (id)atxAction;
- (id)bundleId;
- (id)bundleIdentifierForAppIconInLongLook:(id)arg1;
- (id)cardPresentation;
- (void)cardViewControllerBoundsDidChange:(id)arg1;
- (id)cardViewControllerDelegate;
- (void)cardViewControllerDidLoad:(id)arg1;
- (id)containerViewForPreviewInteractionManager:(id)arg1;
- (id)currentCardViewController;
- (id)delegate;
- (bool)fetchViewControllerForContentViewInLongLook:(id)arg1 completion:(id /* block */)arg2;
- (void)handOverIntentHandlingToApp;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)intent;
- (id)intentHandlingViewController;
- (void)intentHandlingViewController:(id)arg1 didComplete:(bool)arg2;
- (void)intentHandlingViewController:(id)arg1 requiresConfirmationWithResponse:(id)arg2 confirmationActionTitle:(id)arg3;
- (void)intentHandlingViewController:(id)arg1 wantsPreferredSize:(struct CGSize { double x1; double x2; })arg2;
- (void)intentHandlingViewController:(id)arg1 willContinueInAppForIntent:(id)arg2 completion:(id /* block */)arg3;
- (void)intentHandlingViewControllerDidFailAuthorizationCheck:(id)arg1;
- (id)interaction;
- (id)interfaceActionsForLongLook:(id)arg1;
- (void)longLookPlatterDidReceiveTap:(id)arg1;
- (void)longLookPlatterDidTapUtilityButton:(id)arg1;
- (bool)longLookPlatterShouldShowUtilityButton:(id)arg1;
- (double)preferredContentHeightForLongLook:(id)arg1;
- (bool)presentImmediately:(id /* block */)arg1;
- (id)presentedViewControllerForPreviewInteractionManager:(id)arg1;
- (id)previewInteractionManager;
- (void)previewInteractionManager:(id)arg1 willDismissPresentedContentWithTrigger:(long long)arg2;
- (void)previewInteractionManagerDidEndUserInteraction:(id)arg1;
- (bool)previewInteractionManagerShouldAutomaticallyTransitionToPreviewAfterDelay:(id)arg1;
- (void)previewInteractionManagerWillBeginUserInteraction:(id)arg1;
- (id)searchResult;
- (void)setAtxAction:(id)arg1;
- (void)setBundleId:(id)arg1;
- (void)setCardPresentation:(id)arg1;
- (void)setCurrentCardViewController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIntent:(id)arg1;
- (void)setIntentHandlingViewController:(id)arg1;
- (void)setInteraction:(id)arg1;
- (void)setSearchResult:(id)arg1;
- (void)setUserActivity:(id)arg1;
- (void)setView:(id)arg1;
- (id)titleForLongLookHeaderInLongLook:(id)arg1;
- (id)userActivity;
- (void)viewDidLoad;
- (id)viewForPreview;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

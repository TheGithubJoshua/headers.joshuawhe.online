<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_KSTextReplacementCKStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/KeyboardServices.framework/_KSTextReplacementCKStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/KeyboardServices.framework/KeyboardServices (1)
 */

@interface _KSTextReplacementCKStore : NSObject <_KSCloudKitManagerDelegate, _KSTextReplacementSyncProtocol> {
    bool  _ckMigrationStatusOnCloud;
    _KSCloudKitManager * _cloudKitManager;
    _KSTextReplacementCoreDataStore * _coreDataStore;
    NSObject<OS_dispatch_queue> * _dataQueue;
    bool  _didRequestFirstPullForAccount;
    unsigned long long  _numPullRequests;
    NSObject<OS_dispatch_queue> * _syncQueue;
}

@property (nonatomic) bool ckMigrationStatusOnCloud;
@property (nonatomic, retain) _KSCloudKitManager *cloudKitManager;
@property (nonatomic, retain) _KSTextReplacementCoreDataStore *coreDataStore;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didRequestFirstPullForAccount;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long numPullRequests;
@property (readonly) Class superclass;

+ (bool)isMigrationCompleted;

- (void).cxx_destruct;
- (void)_requestSync:(unsigned long long)arg1 completionBlock:(id /* block */)arg2;
- (void)_updateSyncCount:(unsigned long long)arg1 success:(bool)arg2;
- (void)accountDidChange:(id)arg1;
- (void)addEntries:(id)arg1 removeEntries:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (bool)ckMigrationStatusOnCloud;
- (id)cloudEntriesFromLocalEntries:(id)arg1;
- (id)cloudKitManager;
- (id)cloudRecordIDsForLocalEntries:(id)arg1;
- (id)coreDataStore;
- (unsigned long long)countLocalEntriesToBeSynced;
- (void)dealloc;
- (unsigned long long)decayedSyncCountForTime:(id)arg1;
- (bool)didRequestFirstPullForAccount;
- (unsigned long long)getSyncCount;
- (unsigned long long)getSyncCountThresholdHalfLifeHours;
- (unsigned long long)getSyncCountThrottleThreshold;
- (void)importSampleShortcutsIfNecessary;
- (id)initWithDirectoryPath:(id)arg1;
- (bool)isAccountAvailable;
- (id)localEntriesFromCloudEntries:(id)arg1;
- (unsigned long long)numPullRequests;
- (void)pullRemoteDataWithPriority:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)pushAllLocalData;
- (void)pushLocalChangesWithPriority:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)pushMigrationStatusToCloud:(bool)arg1;
- (void)queryCloudIfFirstPullOrAccountChanged;
- (id)queryDeletedEntries;
- (void)queryMigrationStatusOnCloudWithCallback:(id /* block */)arg1;
- (void)queryTextReplacementsWithCallback:(id /* block */)arg1;
- (void)queryTextReplacementsWithPredicate:(id)arg1 callback:(id /* block */)arg2;
- (id)queryUpdatedLocalEntries;
- (void)recordSyncStatus;
- (void)removeAllEntries;
- (void)removeAllEntriesWithCompletionHandler:(id /* block */)arg1;
- (void)requestSync:(unsigned long long)arg1 withCompletionBlock:(id /* block */)arg2;
- (void)requestSyncIfPendingLocalChanges;
- (void)requestSyncWithCompletionBlock:(id /* block */)arg1;
- (void)setCkMigrationStatusOnCloud:(bool)arg1;
- (void)setCloudKitManager:(id)arg1;
- (void)setCoreDataStore:(id)arg1;
- (void)setDidRequestFirstPullForAccount:(bool)arg1;
- (void)setNumPullRequests:(unsigned long long)arg1;
- (id)textReplacementEntries;
- (unsigned long long)totalPullRequestsUntilNow;
- (void)userDidDeleteRecordZone:(id)arg1;
- (id)userIdentity;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

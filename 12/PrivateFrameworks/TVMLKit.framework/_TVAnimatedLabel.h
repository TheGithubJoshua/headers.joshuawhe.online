<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_TVAnimatedLabel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVMLKit.framework/_TVAnimatedLabel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit (1)
 */

@interface _TVAnimatedLabel : _TVLabel {
    bool  _animating;
    NSArray * _attributedStrings;
    double  _crossfadeDuration;
    bool  _crossfading;
    unsigned long long  _currentAttributedStringIndex;
    __TVAnimatedImageView * _currentMarqueeView;
    double  _marqueeDelay;
    bool  _marqueeNeeded;
    bool  _marqueeing;
    double  _maskCapWidth;
    CALayer * _maskLayer;
    __TVAnimatedImageView * _nextMarqueeView;
    bool  _paused;
    double  _replicationPadding;
    float  _scrollRate;
    bool  _starting;
    bool  _stopping;
    double  _underPosterOutset;
}

@property (getter=isAnimating, nonatomic) bool animating;
@property (nonatomic, copy) NSArray *attributedStrings;
@property (nonatomic) double crossfadeDuration;
@property (nonatomic, readonly) unsigned long long currentAttributedStringIndex;
@property (nonatomic, readonly) __TVAnimatedImageView *currentMarqueeView;
@property (nonatomic) double marqueeDelay;
@property (nonatomic) double maskCapWidth;
@property (nonatomic, readonly) __TVAnimatedImageView *nextMarqueeView;
@property (getter=isPaused, nonatomic) bool paused;
@property (nonatomic) double replicationPadding;
@property (nonatomic) float scrollRate;
@property (nonatomic) double underPosterOutset;

- (void).cxx_destruct;
- (void)_applicationDidBecomeActiveNotification:(id)arg1;
- (void)_applicationWillResignActiveNotification:(id)arg1;
- (void)_clearAnimations;
- (void)_clearAttributedStrings;
- (bool)_isRTL;
- (void)_prepareNextMarqueeWithDelay:(double)arg1;
- (id)_rasterizedTextWithMarquee:(bool)arg1;
- (bool)_shouldCycle;
- (void)_startMarqueeIfNeeded;
- (id)attributedStrings;
- (double)crossfadeDuration;
- (unsigned long long)currentAttributedStringIndex;
- (id)currentMarqueeView;
- (void)dealloc;
- (void)drawTextInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isAnimating;
- (bool)isPaused;
- (double)marqueeDelay;
- (double)maskCapWidth;
- (id)nextMarqueeView;
- (double)replicationPadding;
- (float)scrollRate;
- (void)setAnimating:(bool)arg1;
- (void)setAttributedStrings:(id)arg1;
- (void)setAttributedText:(id)arg1;
- (void)setCrossfadeDuration:(double)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setMarqueeDelay:(double)arg1;
- (void)setMarqueeEnabled:(bool)arg1;
- (void)setMarqueeRunning:(bool)arg1;
- (void)setMaskCapWidth:(double)arg1;
- (void)setNeedsDisplay;
- (void)setPaused:(bool)arg1;
- (void)setReplicationPadding:(double)arg1;
- (void)setScrollRate:(float)arg1;
- (void)setText:(id)arg1;
- (void)setUnderPosterOutset:(double)arg1;
- (void)stopAndResetScrollWithDuration:(double)arg1;
- (void)stopAnimating;
- (void)stopAnimatingWithoutResetWithDuration:(double)arg1;
- (double)underPosterOutset;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

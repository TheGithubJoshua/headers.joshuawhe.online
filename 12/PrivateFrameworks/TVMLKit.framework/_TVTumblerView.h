<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_TVTumblerView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVMLKit.framework/_TVTumblerView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit (1)
 */

@interface _TVTumblerView : UIView {
    UIImageView * _arrowLeft;
    UIImageView * _arrowRight;
    bool  _canMove;
    UIView * _containerView;
    <_TVTumblerViewDataSource> * _dataSource;
    <_TVTumblerViewDelegate> * _delegate;
    struct { 
        unsigned int respondsToDidFocusItemAtIndex : 1; 
    }  _delegateFlags;
    long long  _focusedItemIndex;
    UIView * _gestureTargetView;
    UIView * _headerView;
    double  _interitemSpacing;
    Class  _itemViewClass;
    NSMutableDictionary * _itemViewsByIndex;
    UISwipeGestureRecognizer * _leftSwipeGesture;
    UITapGestureRecognizer * _leftTapGesture;
    UIView * _referredFocusedItemView;
    UISwipeGestureRecognizer * _rightSwipeGesture;
    UITapGestureRecognizer * _rightTapGesture;
    UIView * _spareItemView;
    long long  _unfocusedItemIndex;
}

@property (nonatomic, readonly, retain) UIImageView *arrowLeading;
@property (nonatomic, readonly, retain) UIImageView *arrowLeft;
@property (nonatomic, readonly, retain) UIImageView *arrowRight;
@property (nonatomic, readonly, retain) UIImageView *arrowTrailing;
@property (nonatomic, readonly) bool canMove;
@property (nonatomic, readonly, retain) UIView *containerView;
@property (nonatomic) <_TVTumblerViewDataSource> *dataSource;
@property (nonatomic) <_TVTumblerViewDelegate> *delegate;
@property (nonatomic) long long focusedItemIndex;
@property (nonatomic, readonly, retain) UIView *focusedItemView;
@property (nonatomic) UIView *gestureTargetView;
@property (nonatomic, retain) UIView *headerView;
@property (nonatomic) double interitemSpacing;
@property (nonatomic, retain) Class itemViewClass;
@property (nonatomic, readonly, retain) NSMutableDictionary *itemViewsByIndex;
@property (nonatomic, readonly, retain) UISwipeGestureRecognizer *leftSwipeGesture;
@property (nonatomic, readonly, retain) UITapGestureRecognizer *leftTapGesture;
@property (nonatomic, retain) UIView *referredFocusedItemView;
@property (nonatomic, readonly, retain) UISwipeGestureRecognizer *rightSwipeGesture;
@property (nonatomic, readonly, retain) UITapGestureRecognizer *rightTapGesture;
@property (nonatomic, retain) UIView *spareItemView;
@property (nonatomic) long long unfocusedItemIndex;

- (void).cxx_destruct;
- (void)_disableMove;
- (void)_enableMove;
- (id)_itemViewAtIndex:(long long)arg1;
- (void)_leftAction:(id)arg1;
- (void)_markItemViewForInUse:(id)arg1 forIndex:(long long)arg2;
- (void)_markItemViewForReuse:(id)arg1;
- (void)_rightAction:(id)arg1;
- (void)_scheduleMoveToIndex:(long long)arg1;
- (id)arrowLeading;
- (id)arrowLeft;
- (id)arrowRight;
- (id)arrowTrailing;
- (bool)canMove;
- (id)containerView;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (id)dequeueReusableItemView;
- (long long)focusedItemIndex;
- (id)focusedItemView;
- (id)gestureTargetView;
- (id)headerView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)interitemSpacing;
- (Class)itemViewClass;
- (id)itemViewsByIndex;
- (void)layoutSubviews;
- (id)leftSwipeGesture;
- (id)leftTapGesture;
- (id)referredFocusedItemView;
- (void)registerItemViewClass:(Class)arg1;
- (void)reloadData;
- (id)rightSwipeGesture;
- (id)rightTapGesture;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFocusedItemIndex:(long long)arg1;
- (void)setGestureTargetView:(id)arg1;
- (void)setHeaderView:(id)arg1;
- (void)setInteritemSpacing:(double)arg1;
- (void)setItemViewClass:(Class)arg1;
- (void)setReferredFocusedItemView:(id)arg1;
- (void)setSemanticContentAttribute:(long long)arg1;
- (void)setSpareItemView:(id)arg1;
- (void)setUnfocusedItemIndex:(long long)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)spareItemView;
- (void)traitCollectionDidChange:(id)arg1;
- (long long)unfocusedItemIndex;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

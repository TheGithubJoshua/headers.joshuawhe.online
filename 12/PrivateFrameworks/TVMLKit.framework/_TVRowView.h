<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_TVRowView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVMLKit.framework/_TVRowView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit (1)
 */

@interface _TVRowView : _TVFocusRedirectView <TVAppTemplateImpressionable> {
    NSArray * _allComponents;
    NSArray * _centerComponents;
    NSArray * _components;
    long long  _contentVerticalAlignment;
    UIView * _lastFocusedView;
    NSArray * _leftComponents;
    UIView * _preferredFocusedComponent;
    NSArray * _rightComponents;
}

@property (nonatomic, readonly, copy) NSArray *allComponents;
@property (nonatomic, readonly, copy) NSArray *centerComponents;
@property (nonatomic, copy) NSArray *components;
@property (nonatomic) long long contentVerticalAlignment;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIView *lastFocusedView;
@property (nonatomic, readonly, copy) NSArray *leftComponents;
@property (nonatomic) UIView *preferredFocusedComponent;
@property (nonatomic, readonly, copy) NSArray *rightComponents;
@property (readonly) Class superclass;

+ (void)_alignComponents:(id)arg1 withLineSize:(struct CGSize { double x1; double x2; })arg2 boundingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 originYBump:(double)arg4 verticalAlignment:(long long)arg5 horizontalAlignment:(long long)arg6;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_boundingRectForComponents:(id)arg1 interitemSpacing:(double)arg2 boundingSize:(struct CGSize { double x1; double x2; })arg3 horizontalAlignment:(long long)arg4 allowsOverflow:(bool)arg5;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_leftAlignedFrameForComponent:(id)arg1 previousComponent:(id)arg2 interitemSpacing:(double)arg3;

- (void).cxx_destruct;
- (void)_addSubview:(id)arg1 maxViewWidth:(double)arg2;
- (long long)_alignmentFromView:(id)arg1;
- (void)_lineUpComponents:(id)arg1 alignment:(long long)arg2 attribute:(long long)arg3;
- (void)_resetSubviews;
- (struct CGSize { double x1; double x2; })_sizeThatFitsComponents:(id)arg1 boundingSize:(struct CGSize { double x1; double x2; })arg2;
- (id)allComponents;
- (bool)canBecomeFocused;
- (id)centerComponents;
- (id)components;
- (long long)contentVerticalAlignment;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)impressionableElementsContainedInDocument:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)lastFocusedView;
- (void)layoutSubviews;
- (id)leftComponents;
- (id)preferredFocusEnvironments;
- (id)preferredFocusedComponent;
- (id)rightComponents;
- (void)setComponents:(id)arg1;
- (void)setContentVerticalAlignment:(long long)arg1;
- (void)setPreferredFocusedComponent:(id)arg1;
- (void)setSelected:(bool)arg1 animated:(bool)arg2;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

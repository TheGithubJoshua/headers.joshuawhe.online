<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TVViewLayout.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVMLKit.framework/TVViewLayout.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit (1)
 */

@interface TVViewLayout : NSObject {
    bool  _acceptsFocus;
    long long  _alignment;
    UIColor * _backgroundColor;
    bool  _centerGrowth;
    long long  _contentAlignment;
    UIColor * _darkBackgroundColor;
    UIColor * _darkTintColor;
    NSString * _focusAlign;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _focusMargin;
    double  _focusSizeIncrease;
    NSString * _group;
    double  _height;
    UIColor * _highlightColor;
    NSString * _highlightStyle;
    double  _interitemSpacing;
    double  _lineSpacing;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _margin;
    double  _maxHeight;
    double  _maxWidth;
    double  _minHeight;
    double  _minWidth;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _padding;
    long long  _position;
    NSString * _progressStyle;
    UIColor * _tintColor;
    double  _width;
}

@property (nonatomic) bool acceptsFocus;
@property (nonatomic) long long alignment;
@property (nonatomic, retain) UIColor *backgroundColor;
@property (nonatomic) bool centerGrowth;
@property (nonatomic) long long contentAlignment;
@property (nonatomic, retain) UIColor *darkBackgroundColor;
@property (nonatomic, retain) UIColor *darkTintColor;
@property (nonatomic, copy) NSString *focusAlign;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } focusMargin;
@property (nonatomic) double focusSizeIncrease;
@property (nonatomic, copy) NSString *group;
@property (nonatomic) double height;
@property (nonatomic, retain) UIColor *highlightColor;
@property (nonatomic, copy) NSString *highlightStyle;
@property (nonatomic) double interitemSpacing;
@property (nonatomic) double lineSpacing;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } margin;
@property (nonatomic) double maxHeight;
@property (nonatomic) double maxWidth;
@property (nonatomic) double minHeight;
@property (nonatomic) double minWidth;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } padding;
@property (nonatomic) long long position;
@property (nonatomic, copy) NSString *progressStyle;
@property (nonatomic, retain) UIColor *tintColor;
@property (nonatomic) double width;

+ (Class)layoutClassForElement:(id)arg1;
+ (id)layoutWithLayout:(id)arg1 element:(id)arg2;

- (void).cxx_destruct;
- (bool)acceptsFocus;
- (long long)alignment;
- (id)backgroundColor;
- (bool)centerGrowth;
- (long long)contentAlignment;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)darkBackgroundColor;
- (id)darkTintColor;
- (id)focusAlign;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })focusMargin;
- (double)focusSizeIncrease;
- (id)group;
- (double)height;
- (id)highlightColor;
- (id)highlightStyle;
- (double)interitemSpacing;
- (double)lineSpacing;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })margin;
- (double)maxHeight;
- (double)maxWidth;
- (double)minHeight;
- (double)minWidth;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })padding;
- (long long)position;
- (id)progressStyle;
- (void)setAcceptsFocus:(bool)arg1;
- (void)setAlignment:(long long)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCenterGrowth:(bool)arg1;
- (void)setContentAlignment:(long long)arg1;
- (void)setDarkBackgroundColor:(id)arg1;
- (void)setDarkTintColor:(id)arg1;
- (void)setFocusAlign:(id)arg1;
- (void)setFocusMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setFocusSizeIncrease:(double)arg1;
- (void)setGroup:(id)arg1;
- (void)setHeight:(double)arg1;
- (void)setHighlightColor:(id)arg1;
- (void)setHighlightStyle:(id)arg1;
- (void)setInteritemSpacing:(double)arg1;
- (void)setLineSpacing:(double)arg1;
- (void)setMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setMaxHeight:(double)arg1;
- (void)setMaxWidth:(double)arg1;
- (void)setMinHeight:(double)arg1;
- (void)setMinWidth:(double)arg1;
- (void)setPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPosition:(long long)arg1;
- (void)setProgressStyle:(id)arg1;
- (void)setTintColor:(id)arg1;
- (void)setWidth:(double)arg1;
- (id)tintColor;
- (id /* block */)tv_layoutPropertyGetterForStyle:(id)arg1;
- (id /* block */)tv_layoutPropertySetterForStyle:(id)arg1;
- (double)width;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_TVSearchTemplateView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVMLKit.framework/_TVSearchTemplateView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit (1)
 */

@interface _TVSearchTemplateView : UIView {
    UIView * _bannerView;
    UIImageView * _bgImageView;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _collectionMargin;
    UICollectionView * _collectionView;
    <_TVSearchTemplateViewDelegate> * _delegate;
    struct { 
        unsigned int hasWillAddKeyboard : 1; 
        unsigned int hasDidAddKeyboard : 1; 
        unsigned int hasWillRemoveKeyboard : 1; 
        unsigned int hasDidRemoveKeyboard : 1; 
        unsigned int hasDidOffsetOrigin : 1; 
    }  _delegateFlags;
    UIView * _fieldAndKeyboardContainer;
    double  _fieldOriginY;
    bool  _focusHidden;
    bool  _isTouchEnabled;
    UIView * _keyboard;
    NSArray * _keyboardConstraints;
    UIFocusGuide * _keyboardProxy;
    NSArray * _keyboardProxyConstraints;
    int  _keyboardState;
    UITapGestureRecognizer * _menuRecognizer;
    bool  _partialViewEnabled;
    <UIFocusEnvironment> * _preferredFocusEnvironment;
    UISearchBar * _searchBar;
    _TVSearchBarWrapper * _searchBarWrapper;
    bool  _spinning;
    int  _targetKeyboardState;
    UIView * _templateContainerView;
}

@property (nonatomic, retain) UIView *bannerView;
@property (nonatomic, readonly) UIImageView *bgImageView;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } collectionMargin;
@property (nonatomic, readonly, retain) UICollectionView *collectionView;
@property (nonatomic) <_TVSearchTemplateViewDelegate> *delegate;
@property (getter=isFocusHidden, nonatomic) bool focusHidden;
@property (nonatomic, readonly) bool isTouchEnabled;
@property (getter=isPartialViewEnabled, nonatomic) bool partialViewEnabled;
@property (getter=isSpinning, nonatomic) bool spinning;

- (void).cxx_destruct;
- (void)_addKeyboard;
- (void)_adjustKeyboardContainerPositionForContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)_handleMenuAction:(id)arg1;
- (bool)_isSearchFieldVisible;
- (void)_pushKeyboardTowardsStableState:(unsigned long long)arg1;
- (void)_transitionKeyboardInAnimated:(bool)arg1;
- (void)_transitionKeyboardOut;
- (void)adjustScrollForContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (id)bannerView;
- (id)bgImageView;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })collectionMargin;
- (id)collectionView;
- (id)delegate;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)initWithCollectionView:(id)arg1 searchBar:(id)arg2 keyboard:(id)arg3 touchEnabled:(bool)arg4;
- (bool)isFocusHidden;
- (bool)isPartialViewEnabled;
- (bool)isSpinning;
- (bool)isTouchEnabled;
- (void)layoutSubviews;
- (id)preferredFocusEnvironments;
- (void)setBannerView:(id)arg1;
- (void)setCollectionMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setFocusHidden:(bool)arg1;
- (void)setPartialViewEnabled:(bool)arg1;
- (void)setSpinning:(bool)arg1;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (void)stopEditing;
- (void)updateConstraints;
- (void)willMoveToWindow:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

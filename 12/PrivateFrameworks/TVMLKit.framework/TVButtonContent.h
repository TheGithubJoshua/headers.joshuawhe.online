<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TVButtonContent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVMLKit.framework/TVButtonContent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit (1)
 */

@interface TVButtonContent : _UIFloatingContentView {
    UIColor * __backgroundColor;
    _TVImageView * _accessoryView;
    long long  _backdropStyle;
    UIVisualEffectView * _backdropView;
    bool  _blurEnabled;
    double  _cornerRadius;
    bool  _disabled;
    double  _focusSizeIncrease;
    bool  _focused;
    NSString * _groupName;
    UIColor * _highlightColor;
    bool  _imageTrailsTextContent;
    _TVImageView * _imageView;
    UIView * _overlayView;
    UILabel * _textContentView;
    IKViewElement * _viewElement;
}

@property (nonatomic, retain) _TVImageView *accessoryView;
@property (nonatomic, readonly) long long backdropStyle;
@property (nonatomic, readonly) UIVisualEffectView *backdropView;
@property (nonatomic, readonly) bool blurEnabled;
@property (nonatomic) double cornerRadius;
@property (getter=isDisabled, nonatomic) bool disabled;
@property (nonatomic) double focusSizeIncrease;
@property (getter=isFocused, nonatomic, readonly) bool focused;
@property (nonatomic, retain) NSString *groupName;
@property (nonatomic, copy) UIColor *highlightColor;
@property (nonatomic) bool imageTrailsTextContent;
@property (nonatomic, retain) _TVImageView *imageView;
@property (nonatomic, readonly) UIView *overlayView;
@property (nonatomic, retain) UILabel *textContentView;
@property (nonatomic, retain) IKViewElement *viewElement;

- (void).cxx_destruct;
- (double)_imageMarginFromText;
- (void)_setFocused:(bool)arg1 animationCoordinator:(id)arg2;
- (void)_updateBackgroundColorForState:(unsigned long long)arg1;
- (void)_updateFloaingViewFocusState:(bool)arg1 coordinator:(id)arg2;
- (void)_updateFocusStateWithCoordinator:(id)arg1;
- (id)accessoryView;
- (long long)backdropStyle;
- (id)backdropView;
- (id)backgroundColor;
- (bool)blurEnabled;
- (bool)canBecomeFocused;
- (double)cornerRadius;
- (double)focusSizeIncrease;
- (id)groupName;
- (id)highlightColor;
- (bool)imageTrailsTextContent;
- (id)imageView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 blurEffectStyle:(long long)arg2 blurEnabled:(bool)arg3;
- (bool)isDisabled;
- (bool)isFocused;
- (void)layoutSubviews;
- (id)overlayView;
- (void)setAccessoryView:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setDisabled:(bool)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setFocusSizeIncrease:(double)arg1;
- (void)setGroupName:(id)arg1;
- (void)setHighlightColor:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setImageTrailsTextContent:(bool)arg1;
- (void)setImageView:(id)arg1;
- (void)setSelected:(bool)arg1;
- (void)setSelected:(bool)arg1 animated:(bool)arg2;
- (void)setSelected:(bool)arg1 animated:(bool)arg2 withAnimationCoordinator:(id)arg3;
- (void)setTextContentView:(id)arg1;
- (void)setViewElement:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)textContentView;
- (void)traitCollectionDidChange:(id)arg1;
- (id)viewElement;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

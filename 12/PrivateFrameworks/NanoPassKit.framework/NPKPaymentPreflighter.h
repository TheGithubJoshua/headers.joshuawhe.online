<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NPKPaymentPreflighter.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoPassKit.framework/NPKPaymentPreflighter.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoPassKit.framework/NanoPassKit (1)
 */

@interface NPKPaymentPreflighter : NSObject {
    bool  _authRandomSetIfNecessary;
    bool  _checkedCompanioniCloudStatus;
    bool  _checkedWatchPasscodeAndUnlockedStatus;
    bool  _checkedWatchiCloudStatus;
    bool  _checkedWristDetectionStatus;
    NPKCompanionAgentConnection * _companionAgentConnection;
    bool  _needsCompanioniCloudAccount;
    bool  _needsPasscode;
    bool  _needsUnlock;
    bool  _needsWatchiCloudAccount;
    bool  _needsWristDetection;
    PUConnection * _passcodeConnection;
    id /* block */  _preflightCompletionHandler;
    bool  _preflighting;
    bool  _spaceAvailableOnSecureElement;
    NSSManager * _systemSettingsManager;
    bool  _watchConnected;
    NSDate * _watchPasscodeAndUnlockedQueryDate;
    PKPaymentWebService * _webService;
}

@property (nonatomic) bool authRandomSetIfNecessary;
@property (nonatomic) bool checkedCompanioniCloudStatus;
@property (nonatomic) bool checkedWatchPasscodeAndUnlockedStatus;
@property (nonatomic) bool checkedWatchiCloudStatus;
@property (nonatomic) bool checkedWristDetectionStatus;
@property (nonatomic, retain) NPKCompanionAgentConnection *companionAgentConnection;
@property (nonatomic) bool needsCompanioniCloudAccount;
@property (nonatomic) bool needsPasscode;
@property (nonatomic) bool needsUnlock;
@property (nonatomic) bool needsWatchiCloudAccount;
@property (nonatomic) bool needsWristDetection;
@property (nonatomic, retain) PUConnection *passcodeConnection;
@property (nonatomic, copy) id /* block */ preflightCompletionHandler;
@property (getter=isPreflighting, nonatomic) bool preflighting;
@property (nonatomic) bool spaceAvailableOnSecureElement;
@property (nonatomic, retain) NSSManager *systemSettingsManager;
@property (nonatomic) bool watchConnected;
@property (nonatomic, retain) NSDate *watchPasscodeAndUnlockedQueryDate;
@property (nonatomic, retain) PKPaymentWebService *webService;

+ (bool)watchConnected;

- (void).cxx_destruct;
- (void)_checkCompanioniCloudAccount;
- (void)_checkPasscodeEnabledAndUnlockedState;
- (void)_checkSpaceAvailableOnSecureElement;
- (void)_checkWatchConnected;
- (void)_checkWatchiCloudAccount;
- (void)_checkWristDetectEnabledState;
- (bool)_currentlyPairing;
- (id)_errorForCompanionAccountNeeded;
- (id)_errorForConnectionIssue;
- (id)_errorForGenericIssue;
- (id)_errorForGizmoAccountNeeded;
- (id)_errorForPasscodeNeeded;
- (id)_errorForUnlockNeeded;
- (id)_errorForWristDetectNeeded;
- (void)_finishPresentingSetupControllerIfReadyWithSuccess:(bool)arg1 error:(id)arg2;
- (void)_setAuthRandomIfNecessary;
- (void)addCardPreflightWithCompletion:(id /* block */)arg1;
- (bool)authRandomSetIfNecessary;
- (bool)checkedCompanioniCloudStatus;
- (bool)checkedWatchPasscodeAndUnlockedStatus;
- (bool)checkedWatchiCloudStatus;
- (bool)checkedWristDetectionStatus;
- (id)companionAgentConnection;
- (id)initWithWebService:(id)arg1 companionAgentConnection:(id)arg2;
- (bool)isPreflighting;
- (bool)needsCompanioniCloudAccount;
- (bool)needsPasscode;
- (bool)needsUnlock;
- (bool)needsWatchiCloudAccount;
- (bool)needsWristDetection;
- (id)passcodeConnection;
- (id /* block */)preflightCompletionHandler;
- (void)setAuthRandomSetIfNecessary:(bool)arg1;
- (void)setCheckedCompanioniCloudStatus:(bool)arg1;
- (void)setCheckedWatchPasscodeAndUnlockedStatus:(bool)arg1;
- (void)setCheckedWatchiCloudStatus:(bool)arg1;
- (void)setCheckedWristDetectionStatus:(bool)arg1;
- (void)setCompanionAgentConnection:(id)arg1;
- (void)setNeedsCompanioniCloudAccount:(bool)arg1;
- (void)setNeedsPasscode:(bool)arg1;
- (void)setNeedsUnlock:(bool)arg1;
- (void)setNeedsWatchiCloudAccount:(bool)arg1;
- (void)setNeedsWristDetection:(bool)arg1;
- (void)setPasscodeConnection:(id)arg1;
- (void)setPreflightCompletionHandler:(id /* block */)arg1;
- (void)setPreflighting:(bool)arg1;
- (void)setSpaceAvailableOnSecureElement:(bool)arg1;
- (void)setSystemSettingsManager:(id)arg1;
- (void)setWatchConnected:(bool)arg1;
- (void)setWatchPasscodeAndUnlockedQueryDate:(id)arg1;
- (void)setWebService:(id)arg1;
- (bool)spaceAvailableOnSecureElement;
- (id)systemSettingsManager;
- (void)transferToCompanionPreflightWithCompletion:(id /* block */)arg1;
- (bool)watchConnected;
- (id)watchPasscodeAndUnlockedQueryDate;
- (id)webService;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AXPTranslator_iOS.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AccessibilityPlatformTranslation.framework/AXPTranslator_iOS.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AccessibilityPlatformTranslation.framework/AccessibilityPlatformTranslation (1)
 */

@interface AXPTranslator_iOS : AXPTranslator {
    bool  _accessibilityEnabled;
    NSObject<OS_dispatch_semaphore> * _appAXReadySemaphore;
    struct __AXObserver { } * _axEventObserver;
    NSMutableDictionary * _backTranslationCache;
    NSObject<OS_dispatch_queue> * _cacheQueue;
    struct __IOHIDEventSystemClient { } * _ioSystemPostBackClient;
    AXUIElement * _systemAppElement;
    AXUIElement * _systemWideElement;
    NSMutableDictionary * _translationCache;
}

@property (nonatomic, retain) struct __AXObserver { }*axEventObserver;
@property (nonatomic, retain) AXUIElement *systemAppElement;
@property (nonatomic, retain) AXUIElement *systemWideElement;

+ (id)_iosParameterFromPlatformParameter:(id)arg1;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_initializeAccessibility;
- (void)_postEvent:(id)arg1;
- (id)_postProcessAttributeRequest:(id)arg1 iosAttribute:(long long)arg2 axpAttribute:(unsigned long long)arg3 result:(id)arg4;
- (id)_preprocessRequest:(long long)arg1 parameter:(id)arg2;
- (id)_processAccessibilityAttributeValue:(long long)arg1;
- (id)_processAccessibilityAttributeValue:(long long)arg1 forParameter:(id)arg2;
- (id)_processAttributeSpecialCases:(unsigned long long)arg1 uiElement:(id)arg2 error:(unsigned long long*)arg3;
- (id)_processAttributeSpecialCases:(unsigned long long)arg1 uiElement:(id)arg2 parameter:(id)arg3 error:(unsigned long long*)arg4;
- (id)_processAttributedLabelAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processChildrenAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processCustomActionsAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processCustomRotorData:(id)arg1;
- (bool)_processDecrementAction:(id)arg1;
- (id)_processDirectAttributeRequest:(id)arg1 iosAttribute:(long long)arg2 axpAttribute:(unsigned long long)arg3 parameter:(id)arg4 error:(unsigned long long*)arg5;
- (bool)_processEscapeAction:(id)arg1;
- (bool)_processIncrementAction:(id)arg1;
- (id)_processIsEnabledAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processIsSelectedAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processMoveFocusToOpaqueElementAttributeRequest:(id)arg1 parameter:(id)arg2 direction:(long long)arg3 error:(unsigned long long*)arg4;
- (id)_processNumberOfCharactersAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processOutgoingCustomRotorSearchResult:(id)arg1;
- (id)_processParameterizedAttributeRequest:(id)arg1 attribute:(long long)arg2 parameter:(id)arg3 error:(unsigned long long*)arg4;
- (bool)_processPerformAction:(int)arg1 value:(id)arg2;
- (bool)_processPerformCustomAction:(id)arg1;
- (bool)_processPressAction:(id)arg1;
- (id)_processRawElementDataRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processRoleAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (bool)_processScrollToVisibleAction:(id)arg1;
- (bool)_processShowContextMenuAction:(id)arg1;
- (id)_processStartsMediaSessionAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processStringForRangeAttributeRequest:(id)arg1 parameter:(id)arg2 error:(unsigned long long*)arg3;
- (id)_processSubroleAttributeRequest:(id)arg1 error:(unsigned long long*)arg2;
- (id)_processingSmuggledMarzipanRequest:(id)arg1 parameter:(id)arg2 error:(unsigned long long*)arg3;
- (void)_sendPressFingerEvent:(bool)arg1 location:(struct CGPoint { double x1; double x2; })arg2 force:(double)arg3 contextId:(unsigned int)arg4;
- (void)_signalAppAXReady;
- (bool)accessibilityEnabled;
- (long long)attributeFromRequest:(unsigned long long)arg1;
- (id)axElementFromTranslatorRequest:(id)arg1;
- (struct __AXObserver { }*)axEventObserver;
- (id)backTranslationCache;
- (const struct __AXUIElement { }*)createPlatformElementFromTranslationObject:(id)arg1;
- (void)enableAccessibility;
- (id)init;
- (void)initializeAXRuntimeForSystemAppServer;
- (id)platformElementFromTranslation:(id)arg1;
- (id)processActionRequest:(id)arg1;
- (id)processApplicationObject:(id)arg1;
- (id)processAttributeRequest:(id)arg1;
- (id)processCanSetAttribute:(id)arg1;
- (id)processFrontMostApp:(id)arg1;
- (id)processHitTest:(id)arg1;
- (id)processMultipleAttributeRequest:(id)arg1;
- (void)processPlatformNotification:(unsigned long long)arg1 data:(id)arg2 associatedObject:(id)arg3;
- (id)processSetAttribute:(id)arg1;
- (void)setAccessibilityEnabled:(bool)arg1;
- (void)setAxEventObserver:(struct __AXObserver { }*)arg1;
- (void)setSystemAppElement:(id)arg1;
- (void)setSystemWideElement:(id)arg1;
- (void)simulatePressAtPoint:(struct CGPoint { double x1; double x2; })arg1 withContextId:(unsigned int)arg2 withDelay:(float)arg3 withForce:(double)arg4;
- (id)systemAppElement;
- (id)systemWideElement;
- (id)translationCache;
- (id)translationObjectFromPlatformElement:(struct __AXUIElement { }*)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

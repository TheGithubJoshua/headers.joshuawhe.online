<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>USUsageQuerying.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UsageTracking.framework/USUsageQuerying.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UsageTracking.framework/UsageTracking (51)
 */

@interface USUsageQuerying : NSObject {
    <_CDUserContext> * _context;
    <_DKKnowledgeQuerying><_DKKnowledgeSynchronizing> * _eventStorage;
}

@property (readonly) <_CDUserContext> *context;
@property (readonly) <_DKKnowledgeQuerying><_DKKnowledgeSynchronizing> *eventStorage;

- (void).cxx_destruct;
- (id)_computeApplicationUsageWithEvents:(id)arg1 bundleIdentifiers:(id)arg2 unboundApplicationUsageIntervalsByDevice:(id*)arg3 timeZoneByDevice:(id)arg4 lastEventDateByDevice:(id)arg5 categoryUsageIntervalsByDevice:(id)arg6 aggregatedApplicationUsageIntervalsByDevice:(id)arg7 categoryByBundleIdentifier:(id)arg8 partition:(id)arg9 referenceDate:(id)arg10;
- (id)_computeNotificationsWithEvents:(id)arg1 timeZoneByDevice:(id)arg2 lastEventDateByDevice:(id)arg3 partition:(id)arg4;
- (id)_computeScreenTime:(bool)arg1 withEvents:(id)arg2 intersectingScreenTimeIntervalsByDevice:(id*)arg3 longestSessionByDevice:(id*)arg4 timeZoneByDevice:(id)arg5 lastEventDateByDevice:(id)arg6 partition:(id)arg7 referenceDate:(id)arg8;
- (void)_computeUncategorizedLocalWebUsageWithApplicationUsageEvents:(id)arg1 webUsageEvents:(id)arg2 uncategorizedDomains:(id)arg3 interval:(id)arg4 referenceDate:(id)arg5 completionHandler:(id /* block */)arg6;
- (double)_computeUsageForBudgetType:(long long)arg1 items:(id)arg2 displayBacklitEvents:(id)arg3 applicationUsageEvents:(id)arg4 webUsageEvents:(id)arg5 categoryByBundleIdentifier:(id)arg6 categoryByWebDomain:(id)arg7 interval:(id)arg8 referenceDate:(id)arg9;
- (void)_computeUsageWithDisplayBacklitEvents:(id)arg1 applicationUsageEvents:(id)arg2 webUsageEvents:(id)arg3 notificationEvents:(id)arg4 categoryByBundleIdentifier:(id)arg5 categoryByWebDomain:(id)arg6 interval:(id)arg7 partitionInterval:(double)arg8 referenceDate:(id)arg9 completionHandler:(id /* block */)arg10;
- (id)_computeWebUsageWithEvents:(id)arg1 webDomains:(id)arg2 applicationUsageIntervalsByDevice:(id)arg3 timeZoneByDevice:(id)arg4 lastEventDateByDevice:(id)arg5 categoryUsageIntervalsByDevice:(id)arg6 aggregatedApplicationUsageIntervalsByDevice:(id)arg7 aggregatedWebUsageIntervalsByDevice:(id)arg8 categoryByWebDomain:(id)arg9 partition:(id)arg10 referenceDate:(id)arg11;
- (id)_currentScreenTimeIntervalDuringInterval:(id)arg1 usageStartDate:(id*)arg2 referenceDate:(id)arg3;
- (void)_enumerateCurrentApplicationUsageIntervalsDuringInterval:(id)arg1 referenceDate:(id)arg2 matchingBundleIdentifiers:(id)arg3 block:(id /* block */)arg4;
- (void)_enumerateCurrentWebUsageIntervalsDuringInterval:(id)arg1 referenceDate:(id)arg2 matchingWebDomains:(id)arg3 block:(id /* block */)arg4;
- (void)_enumerateEvents:(id)arg1 intervalEndDate:(id)arg2 block:(id /* block */)arg3;
- (id)_generatePickupsByBundleIdentifierWithPickupIntervals:(id)arg1 applicationUsageIntervals:(id)arg2 pickupsWithoutApplicationUsage:(unsigned long long*)arg3 firstPickup:(id*)arg4;
- (id)_generateUncategorizedLocalWebUsageWithWebUsageIntervals:(id)arg1 uncategorizedDomains:(id)arg2;
- (double)_generateUsageTimeWithScreenTimeIntervals:(id)arg1 applicationUsageIntervals:(id)arg2 webUsageIntervalsByDevice:(id)arg3 categoryUsageIntervalsByDevice:(id)arg4 aggregatedApplicationUsageIntervalsByDevice:(id)arg5 aggregatedWebUsageIntervalsByDevice:(id)arg6 categoryByWebDomain:(id)arg7 budgetType:(long long)arg8 items:(id)arg9;
- (id)_getApplicationsFromUsageEvents:(id)arg1 interval:(id)arg2 referenceDate:(id)arg3;
- (id)_getWebDomainsFromUsageEvents:(id)arg1 interval:(id)arg2 referenceDate:(id)arg3;
- (id)_newReportWithNonIntersectingScreenTimeIntervals:(id)arg1 pickupsByBundleIdentifier:(id)arg2 pickupsWithoutApplicationUsage:(unsigned long long)arg3 firstPickup:(id)arg4 longestSession:(id)arg5 applicationUsageIntervals:(id)arg6 webUsageIntervals:(id)arg7 categoryUsageIntervals:(id)arg8 aggregatedApplicationUsageIntervals:(id)arg9 aggregatedWebUsageIntervals:(id)arg10 categoryByBundleIdentifier:(id)arg11 categoryByWebDomain:(id)arg12 notifications:(id)arg13 interval:(id)arg14 timeZone:(id)arg15 lastEventDate:(id)arg16;
- (void)_updateApplicationUsageWithInterval:(id)arg1 unboundInterval:(id)arg2 bundleIdentifier:(id)arg3 deviceIdentifier:(id)arg4 event:(id)arg5 applicationUsageIntervalsByDevice:(id)arg6 unboundApplicationUsageIntervalsByDevice:(id)arg7 categoryUsageIntervalsByDevice:(id)arg8 aggregatedApplicationUsageIntervalsByDevice:(id)arg9 categoryByBundleIdentifier:(id)arg10 timeZoneByDevice:(id)arg11 lastEventDateByDevice:(id)arg12;
- (void)_updateLocalReports:(id)arg1 remoteReports:(id)arg2 aggregateReports:(id)arg3 nonIntersectingScreenTimeIntervals:(id)arg4 intersectingScreenTimeIntervals:(id)arg5 longestSessionByDevice:(id)arg6 applicationUsageIntervals:(id)arg7 unboundApplicationUsageIntervals:(id)arg8 webUsageIntervalsByDevice:(id)arg9 categoryUsageIntervalsByDevice:(id)arg10 aggregatedApplicationUsageIntervalsByDevice:(id)arg11 aggregatedWebUsageIntervalsByDevice:(id)arg12 categoryByBundleIdentifier:(id)arg13 categoryByWebDomain:(id)arg14 notificationsByDevice:(id)arg15 interval:(id)arg16 timeZoneByDevice:(id)arg17 lastEventDateByDevice:(id)arg18;
- (void)_updateNotificationsWithEvent:(id)arg1 deviceIdentifier:(id)arg2 notificationsByDevice:(id)arg3 timeZoneByDevice:(id)arg4 lastEventDateByDevice:(id)arg5;
- (void)_updateScreenTimeWithInterval:(id)arg1 rawInterval:(id)arg2 deviceIdentifier:(id)arg3 partition:(id)arg4 event:(id)arg5 nonIntersectingScreenTimeIntervalsByDevice:(id)arg6 intersectingScreenTimeIntervalsByDevice:(id)arg7 longestSessionByDevice:(id)arg8 timeZoneByDevice:(id)arg9 lastEventDateByDevice:(id)arg10;
- (void)_updateWebUsageWithInterval:(id)arg1 webDomain:(id)arg2 bundleIdentifier:(id)arg3 deviceIdentifier:(id)arg4 event:(id)arg5 applicationIntervalsByDevice:(id)arg6 webUsageIntervalsByDevice:(id)arg7 categoryUsageIntervalsByDevice:(id)arg8 aggregatedApplicationUsageIntervalsByDevice:(id)arg9 aggregatedWebUsageIntervalsByDevice:(id)arg10 categoryByWebDomain:(id)arg11 timeZoneByDevice:(id)arg12 lastEventDateByDevice:(id)arg13;
- (id)context;
- (id)eventStorage;
- (id)getLocalDeviceIdentifierAndReturnError:(id*)arg1;
- (id)init;
- (id)initWithContext:(id)arg1 eventStorage:(id)arg2;
- (id)queryForBudgetType:(long long)arg1 items:(id)arg2 interval:(id)arg3 focalOnly:(bool)arg4 error:(id*)arg5;
- (void)queryForUncategorizedLocalWebUsageDuringInterval:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)queryUsageDuringInterval:(id)arg1 partitionInterval:(double)arg2 focalOnly:(bool)arg3 forceImmediateSync:(bool)arg4 completionHandler:(id /* block */)arg5;
- (void)queryUsageDuringInterval:(id)arg1 partitionInterval:(double)arg2 forceImmediateSync:(bool)arg3 completionHandler:(id /* block */)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PPQuickTypeMetrics.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PersonalizationPortraitInternals.framework/PPQuickTypeMetrics.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PersonalizationPortraitInternals.framework/PersonalizationPortraitInternals (1)
 */

@interface PPQuickTypeMetrics : NSObject {
    PETGoalConversionEventTracker * _autocompleteGoal;
    PETDistributionEventTracker * _contactsMatches;
    PETGoalConversionEventTracker * _discoverySuggesterGoal;
    PETDistributionEventTracker * _eventsMatches;
    PETDistributionEventTracker * _foundInAppsMatches;
    PETScalarEventTracker * _frameworkErrors;
    PETDistributionEventTracker * _initializationLatency;
    PETGoalConversionEventTracker * _peopleSuggesterGoal;
    NSObject<OS_dispatch_queue> * _queue;
    PETDistributionEventTracker * _quickTypeLatency;
}

@property (nonatomic, retain) PETGoalConversionEventTracker *autocompleteGoal;
@property (nonatomic, retain) PETDistributionEventTracker *contactsMatches;
@property (nonatomic, retain) PETGoalConversionEventTracker *discoverySuggesterGoal;
@property (nonatomic, retain) PETDistributionEventTracker *eventsMatches;
@property (nonatomic, retain) PETDistributionEventTracker *foundInAppsMatches;
@property (nonatomic, retain) PETScalarEventTracker *frameworkErrors;
@property (nonatomic, retain) PETDistributionEventTracker *initializationLatency;
@property (nonatomic, retain) PETGoalConversionEventTracker *peopleSuggesterGoal;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) PETDistributionEventTracker *quickTypeLatency;

+ (void)autocompleteGoalConverted:(bool)arg1 queryType:(id)arg2;
+ (void)contactMatchesWithContactsCount:(unsigned long long)arg1 foundInAppsCount:(unsigned long long)arg2;
+ (id)counter:(id)arg1 withProperties:(id)arg2;
+ (void)discoverySuggesterGoalConverted:(bool)arg1 queryType:(id)arg2;
+ (void)eventsMatches:(unsigned long long)arg1;
+ (void)frameworkError:(id)arg1 errorCode:(long long)arg2;
+ (void)initializationLatency:(unsigned long long)arg1 servant:(id)arg2;
+ (id)instance;
+ (void)peopleSuggesterGoalConverted:(bool)arg1 queryType:(id)arg2;
+ (void)quickTypeMetricsWithLatency:(unsigned long long)arg1 servant:(id)arg2 hasResults:(bool)arg3;
+ (id)trackerForDistribution:(id)arg1 withProperties:(id)arg2;
+ (id)trackerForGoal:(id)arg1 withProperties:(id)arg2;

- (void).cxx_destruct;
- (id)autocompleteGoal;
- (id)contactsMatches;
- (id)discoverySuggesterGoal;
- (id)eventsMatches;
- (id)foundInAppsMatches;
- (id)frameworkErrors;
- (id)init;
- (id)initializationLatency;
- (id)peopleSuggesterGoal;
- (id)queue;
- (id)quickTypeLatency;
- (void)setAutocompleteGoal:(id)arg1;
- (void)setContactsMatches:(id)arg1;
- (void)setDiscoverySuggesterGoal:(id)arg1;
- (void)setEventsMatches:(id)arg1;
- (void)setFoundInAppsMatches:(id)arg1;
- (void)setFrameworkErrors:(id)arg1;
- (void)setInitializationLatency:(id)arg1;
- (void)setPeopleSuggesterGoal:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setQuickTypeLatency:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PPPBContact.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PersonalizationPortraitInternals.framework/PPPBContact.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PersonalizationPortraitInternals.framework/PersonalizationPortraitInternals (1)
 */

@interface PPPBContact : PBCodable <NSCopying> {
    PPPBDateComponents * _birthday;
    long long  _createdAt;
    int  _displayNameOrder;
    NSMutableArray * _emailAddresses;
    NSString * _familyName;
    NSString * _givenName;
    struct { 
        unsigned int createdAt : 1; 
        unsigned int displayNameOrder : 1; 
    }  _has;
    NSString * _identifier;
    NSString * _middleName;
    NSString * _namePrefix;
    NSString * _nameSuffix;
    NSString * _nickname;
    PPPBDateComponents * _nonGregorianBirthday;
    NSString * _organizationName;
    NSMutableArray * _phoneNumbers;
    NSMutableArray * _postalAddresses;
    NSMutableArray * _socialProfiles;
    NSString * _sortingFamilyName;
    NSString * _sortingGivenName;
}

@property (nonatomic, retain) PPPBDateComponents *birthday;
@property (nonatomic) long long createdAt;
@property (nonatomic) int displayNameOrder;
@property (nonatomic, retain) NSMutableArray *emailAddresses;
@property (nonatomic, retain) NSString *familyName;
@property (nonatomic, retain) NSString *givenName;
@property (nonatomic, readonly) bool hasBirthday;
@property (nonatomic) bool hasCreatedAt;
@property (nonatomic) bool hasDisplayNameOrder;
@property (nonatomic, readonly) bool hasFamilyName;
@property (nonatomic, readonly) bool hasGivenName;
@property (nonatomic, readonly) bool hasIdentifier;
@property (nonatomic, readonly) bool hasMiddleName;
@property (nonatomic, readonly) bool hasNamePrefix;
@property (nonatomic, readonly) bool hasNameSuffix;
@property (nonatomic, readonly) bool hasNickname;
@property (nonatomic, readonly) bool hasNonGregorianBirthday;
@property (nonatomic, readonly) bool hasOrganizationName;
@property (nonatomic, readonly) bool hasSortingFamilyName;
@property (nonatomic, readonly) bool hasSortingGivenName;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, retain) NSString *middleName;
@property (nonatomic, retain) NSString *namePrefix;
@property (nonatomic, retain) NSString *nameSuffix;
@property (nonatomic, retain) NSString *nickname;
@property (nonatomic, retain) PPPBDateComponents *nonGregorianBirthday;
@property (nonatomic, retain) NSString *organizationName;
@property (nonatomic, retain) NSMutableArray *phoneNumbers;
@property (nonatomic, retain) NSMutableArray *postalAddresses;
@property (nonatomic, retain) NSMutableArray *socialProfiles;
@property (nonatomic, retain) NSString *sortingFamilyName;
@property (nonatomic, retain) NSString *sortingGivenName;

+ (Class)emailAddressesType;
+ (Class)phoneNumbersType;
+ (Class)postalAddressesType;
+ (Class)socialProfilesType;

- (void).cxx_destruct;
- (void)addEmailAddresses:(id)arg1;
- (void)addPhoneNumbers:(id)arg1;
- (void)addPostalAddresses:(id)arg1;
- (void)addSocialProfiles:(id)arg1;
- (id)birthday;
- (void)clearEmailAddresses;
- (void)clearPhoneNumbers;
- (void)clearPostalAddresses;
- (void)clearSocialProfiles;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)createdAt;
- (id)description;
- (id)dictionaryRepresentation;
- (int)displayNameOrder;
- (id)emailAddresses;
- (id)emailAddressesAtIndex:(unsigned long long)arg1;
- (unsigned long long)emailAddressesCount;
- (id)familyName;
- (id)givenName;
- (bool)hasBirthday;
- (bool)hasCreatedAt;
- (bool)hasDisplayNameOrder;
- (bool)hasFamilyName;
- (bool)hasGivenName;
- (bool)hasIdentifier;
- (bool)hasMiddleName;
- (bool)hasNamePrefix;
- (bool)hasNameSuffix;
- (bool)hasNickname;
- (bool)hasNonGregorianBirthday;
- (bool)hasOrganizationName;
- (bool)hasSortingFamilyName;
- (bool)hasSortingGivenName;
- (unsigned long long)hash;
- (id)identifier;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)middleName;
- (id)namePrefix;
- (id)nameSuffix;
- (id)nickname;
- (id)nonGregorianBirthday;
- (id)organizationName;
- (id)phoneNumbers;
- (id)phoneNumbersAtIndex:(unsigned long long)arg1;
- (unsigned long long)phoneNumbersCount;
- (id)postalAddresses;
- (id)postalAddressesAtIndex:(unsigned long long)arg1;
- (unsigned long long)postalAddressesCount;
- (bool)readFrom:(id)arg1;
- (void)setBirthday:(id)arg1;
- (void)setCreatedAt:(long long)arg1;
- (void)setDisplayNameOrder:(int)arg1;
- (void)setEmailAddresses:(id)arg1;
- (void)setFamilyName:(id)arg1;
- (void)setGivenName:(id)arg1;
- (void)setHasCreatedAt:(bool)arg1;
- (void)setHasDisplayNameOrder:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMiddleName:(id)arg1;
- (void)setNamePrefix:(id)arg1;
- (void)setNameSuffix:(id)arg1;
- (void)setNickname:(id)arg1;
- (void)setNonGregorianBirthday:(id)arg1;
- (void)setOrganizationName:(id)arg1;
- (void)setPhoneNumbers:(id)arg1;
- (void)setPostalAddresses:(id)arg1;
- (void)setSocialProfiles:(id)arg1;
- (void)setSortingFamilyName:(id)arg1;
- (void)setSortingGivenName:(id)arg1;
- (id)socialProfiles;
- (id)socialProfilesAtIndex:(unsigned long long)arg1;
- (unsigned long long)socialProfilesCount;
- (id)sortingFamilyName;
- (id)sortingGivenName;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DEDDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/DiagnosticExtensionsDaemon.framework/DEDDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/DiagnosticExtensionsDaemon.framework/DiagnosticExtensionsDaemon (1)
 */

@interface DEDDevice : NSObject <DEDDeviceUISupport, DEDSecureArchiving, NSCopying, NSSecureCoding> {
    NSString * __hashingKey;
    NSString * _address;
    NSString * _build;
    NSSet * _capabilities;
    NSString * _color;
    NSString * _deviceClass;
    NSString * _enclosureColor;
    NSString * _identifier;
    NSString * _model;
    NSString * _name;
    NSString * _platform;
    NSString * _productType;
    long long  _remoteTransport;
    SFDevice * _sfDevice;
    long long  _status;
    long long  _transport;
}

@property (nonatomic, retain) NSString *_hashingKey;
@property (retain) NSString *address;
@property (retain) NSString *build;
@property (retain) NSSet *capabilities;
@property (retain) NSString *color;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) NSString *deviceClass;
@property (retain) NSString *enclosureColor;
@property (readonly) unsigned long long hash;
@property (retain) NSString *identifier;
@property (retain) NSString *model;
@property (retain) NSString *name;
@property (retain) NSString *platform;
@property (retain) NSString *productType;
@property long long remoteTransport;
@property (retain) SFDevice *sfDevice;
@property long long status;
@property (readonly) Class superclass;
@property long long transport;

+ (id)_currentDeviceId;
+ (id)archivedClasses;
+ (id)currentDevice;
+ (id)deviceClassForProductType:(id)arg1;
+ (id)deviceForSFDevice:(id)arg1 andStatus:(long long)arg2;
+ (id)deviceForSFDevice:(id)arg1 systemInfo:(id)arg2 andStatus:(long long)arg3;
+ (id)deviceWithDictionary:(id)arg1;
+ (id)idsDeviceWithDevice:(id)arg1 address:(id)arg2;
+ (id)modelForProductType:(id)arg1;
+ (id)nilSafeDevice;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_hashingKey;
- (id)address;
- (id)build;
- (id)capabilities;
- (id)color;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)deviceClass;
- (id)enclosureColor;
- (void)encodeWithCoder:(id)arg1;
- (void)fetchIconImageDataForScale:(float)arg1 completionCompletion:(id /* block */)arg2;
- (bool)hasCapabilities:(id)arg1;
- (id)hashingKey;
- (id)hashingKeyForTempDevice;
- (id)identifier;
- (id)imageData;
- (id)imageURLForDeviceClass:(id)arg1 deviceModel:(id)arg2 deviceColor:(id)arg3 size:(long long)arg4 variant:(long long)arg5 scale:(float)arg6;
- (id)imageURLForScale:(float)arg1;
- (id)initWithCoder:(id)arg1;
- (bool)isCurrentDevice;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToDevice:(id)arg1;
- (bool)isLikeDevice:(id)arg1;
- (bool)isMoreCompleteThan:(id)arg1;
- (bool)isTemporaryDevice;
- (id)model;
- (id)name;
- (id)platform;
- (id)productType;
- (id)publicLogDescription;
- (long long)remoteTransport;
- (id)serialize;
- (void)setAddress:(id)arg1;
- (void)setBuild:(id)arg1;
- (void)setCapabilities:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setDeviceClass:(id)arg1;
- (void)setEnclosureColor:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setName:(id)arg1;
- (void)setPlatform:(id)arg1;
- (void)setProductType:(id)arg1;
- (void)setRemoteTransport:(long long)arg1;
- (void)setSfDevice:(id)arg1;
- (void)setStatus:(long long)arg1;
- (void)setTransport:(long long)arg1;
- (void)set_hashingKey:(id)arg1;
- (id)sfDevice;
- (id)shortDescription;
- (long long)status;
- (long long)transport;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

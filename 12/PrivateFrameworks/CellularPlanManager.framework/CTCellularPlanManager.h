<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CTCellularPlanManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CellularPlanManager.framework/CTCellularPlanManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CellularPlanManager.framework/CellularPlanManager (6851.1)
 */

@interface CTCellularPlanManager : NSObject {
    NSXPCConnection * _connection;
    NSData * _cookieData;
    CTCellularPlanManagerDelegate * _delegate;
    NSString * _lastSessionId;
    struct dispatch_queue_s { } * _queue;
    NSMutableArray * _subscriptionCompletions;
}

+ (long long)calculateInstallConsentTextTypeFor:(id)arg1;
+ (id)sharedManager;

- (void)_connect_sync;
- (void)_ensureConnected_sync;
- (void)_plansForRenewal:(bool)arg1 progress:(id /* block */)arg2 completion:(id /* block */)arg3 additionalParameters:(id)arg4;
- (void)_reconnect;
- (void)addNewPlanWithAddress:(id)arg1 matchingId:(id)arg2 oid:(id)arg3 confirmationCode:(id)arg4 triggerType:(long long)arg5 userConsent:(long long)arg6 completion:(id /* block */)arg7;
- (void)addNewPlanWithCardData:(id)arg1 confirmationCode:(id)arg2 triggerType:(long long)arg3 userConsent:(long long)arg4 completion:(id /* block */)arg5;
- (void)addNewPlanWithCarrierItem:(id)arg1 triggerType:(long long)arg2 userConsent:(long long)arg3 completion:(id /* block */)arg4;
- (void)addNewPlanWithFlowType:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)addNewPlanWithUserInWebsheetWithCompletion:(id /* block */)arg1;
- (void)addNewPlanWithUserInWebsheetWithUserConsent:(long long)arg1 completion:(id /* block */)arg2;
- (void)addNewRemotePlan:(bool)arg1 withCSN:(id)arg2 withContext:(id)arg3 userConsent:(long long)arg4 completion:(id /* block */)arg5;
- (void)addNewRemotePlanWithAddress:(id)arg1 matchingId:(id)arg2 oid:(id)arg3 confirmationCode:(id)arg4 isPairing:(bool)arg5 withCSN:(id)arg6 withContext:(id)arg7 userConsent:(long long)arg8 completion:(id /* block */)arg9;
- (void)addNewRemotePlanWithCardData:(id)arg1 confirmationCode:(id)arg2 isPairing:(bool)arg3 withCSN:(id)arg4 withContext:(id)arg5 userConsent:(long long)arg6 completion:(id /* block */)arg7;
- (void)carrierHandoffToken:(id /* block */)arg1;
- (void)carrierItemsShouldUpdate:(bool)arg1 completion:(id /* block */)arg2;
- (void)connectionSettings:(id /* block */)arg1;
- (id)danglingPlanItemsShouldUpdate:(bool)arg1;
- (void)danglingPlanItemsShouldUpdate:(bool)arg1 completion:(id /* block */)arg2;
- (void)dealloc;
- (void)deleteAllRemoteProfiles;
- (void)deleteRemoteProfile:(id)arg1;
- (void)didCancelRemotePlan;
- (void)didDeletePlanItem:(id)arg1 completion:(id /* block */)arg2;
- (void)didDeleteRemotePlanItem:(id)arg1 completion:(id /* block */)arg2;
- (void)didPurchasePlanForCsn:(id)arg1 iccid:(id)arg2 profileServer:(id)arg3;
- (void)didPurchasePlanWithIccid:(id)arg1 downloadProfile:(bool)arg2;
- (void)didPurchaseRemotePlanForEid:(id)arg1 imei:(id)arg2 meid:(id)arg3 iccid:(id)arg4 alternateSmdpFqdn:(id)arg5 completion:(id /* block */)arg6;
- (id)didSelectPlanForData:(id)arg1;
- (void)didSelectPlanForData:(id)arg1 completion:(id /* block */)arg2;
- (id)didSelectPlanForDefaultVoice:(id)arg1;
- (void)didSelectPlanForDefaultVoice:(id)arg1 completion:(id /* block */)arg2;
- (id)didSelectPlanForIMessage:(id)arg1;
- (void)didSelectPlanForIMessage:(id)arg1 completion:(id /* block */)arg2;
- (id)didSelectPlanItem:(id)arg1 isEnable:(bool)arg2;
- (void)didSelectPlanItem:(id)arg1 isEnable:(bool)arg2 completion:(id /* block */)arg3;
- (void)didSelectRemotePlanItem:(id)arg1 completion:(id /* block */)arg2;
- (void)enableVinylFlowTypeOverride:(bool)arg1;
- (void)enterSimSetupWithCompletion:(id /* block */)arg1;
- (void)eraseAllPlans:(id /* block */)arg1;
- (void)eraseAllRemotePlansWithCSN:(id)arg1 completion:(id /* block */)arg2;
- (void)eraseAllRemotePlansWithCompletion:(id /* block */)arg1;
- (void)exitSimSetupWithCompletion:(id /* block */)arg1;
- (void)expirePlan;
- (void)fetchRemoteProfiles:(id)arg1;
- (void)finishProvisioningWithCompletion:(id /* block */)arg1;
- (void)finishRemoteProvisioningForCSN:(id)arg1 completion:(id /* block */)arg2;
- (void)getAutoPlanSelectionWithCompletion:(id /* block */)arg1;
- (void)getDeviceInfo:(id /* block */)arg1;
- (void)getESimServerURL:(id /* block */)arg1;
- (bool)getEnableVinylFlowTypeOverride;
- (void)getIMEIPrefix:(id /* block */)arg1;
- (id)getPredefinedLabels;
- (void)getRemoteInfo:(id /* block */)arg1;
- (void)getRoamingSignupOverrideWithCompletion:(id /* block */)arg1;
- (void)getSelectedEnv:(id /* block */)arg1;
- (void)getSelectedProxy:(id /* block */)arg1;
- (id)getShortLabelsForLabels:(id)arg1;
- (void)getSkipEligibilityCheck:(id /* block */)arg1;
- (id)getSubscriptionContextUUIDforPlan:(id)arg1;
- (unsigned long long)getSupportedFlowTypes;
- (void)getSupportedFlowTypes:(id /* block */)arg1;
- (id)init;
- (bool)isAddButtonEnabled;
- (void)isAddButtonEnabled:(id /* block */)arg1;
- (void)isMultipleDataPlanSupportAvailable:(id /* block */)arg1;
- (void)isNewDataPlanCapable:(id /* block */)arg1;
- (void)isRemotePlanCapableWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)latitudeLongitudeOverride:(id /* block */)arg1;
- (void)launchDataActivationNextWithUrl:(id)arg1;
- (void)launchSequoia;
- (void)loadPlansWithUrl:(id)arg1 postData:(id)arg2 completion:(id /* block */)arg3;
- (void)manageAccountForPlan:(id)arg1 completion:(id /* block */)arg2;
- (void)manageAccountForRemotePlan:(id)arg1 completion:(id /* block */)arg2;
- (void)mccMncOverride:(id /* block */)arg1;
- (void)openInternalUrlId:(long long)arg1;
- (void)pendingReleaseRemotePlan;
- (void)ping;
- (id)planItemsShouldUpdate:(bool)arg1;
- (void)planItemsShouldUpdate:(bool)arg1 completion:(id /* block */)arg2;
- (void)planItemsWithCompletion:(id /* block */)arg1;
- (void)planLaunchInfoWithCompletion:(id /* block */)arg1;
- (void)plansForRenewalWithProgress:(id /* block */)arg1 andCompletion:(id /* block */)arg2;
- (void)plansWithProgress:(id /* block */)arg1 andCompletion:(id /* block */)arg2;
- (void)plansWithProgress:(id /* block */)arg1 andCompletion:(id /* block */)arg2 additionalParameters:(id)arg3;
- (id)remapSimLabel:(id)arg1 to:(id)arg2;
- (void)remapSimLabel:(id)arg1 to:(id)arg2 completion:(id /* block */)arg3;
- (void)remotePlanItemsWithCompletion:(id /* block */)arg1;
- (void)remotePlanItemsWithUpdateFetch:(bool)arg1 withCSN:(id)arg2 completion:(id /* block */)arg3;
- (void)remotePlanLaunchInfoForEid:(id)arg1 completion:(id /* block */)arg2;
- (id)resolveSimLabel:(id)arg1;
- (void)resolveSimLabel:(id)arg1 completion:(id /* block */)arg2;
- (void)resumePlanProvisioning:(bool)arg1 userConsent:(long long)arg2 completion:(id /* block */)arg3;
- (void)selectRemoteProfile:(id)arg1;
- (void)setAutoPlanSelection:(bool)arg1;
- (void)setESimServerURL:(id)arg1;
- (void)setIMEIPrefix:(id)arg1;
- (id)setLabelForPlan:(id)arg1 label:(id)arg2;
- (void)setLatitude:(id)arg1 andLongitude:(id)arg2;
- (void)setMcc:(long long)arg1 andMnc:(long long)arg2;
- (void)setRoamingSignupOverride:(bool)arg1;
- (void)setSelectedEnv:(long long)arg1;
- (void)setSelectedProxy:(long long)arg1;
- (void)setSkipEligibilityCheck:(bool)arg1;
- (void)setUseNewCellularPlanUI:(bool)arg1;
- (void)setUserInPurchaseFlow:(bool)arg1;
- (void)shouldShowAddNewRemotePlanWithContext:(id)arg1 completion:(id /* block */)arg2;
- (bool)shouldShowPlanList;
- (void)shouldShowPlanList:(id /* block */)arg1;
- (void)shouldShowPlanSetup:(id /* block */)arg1;
- (void)showUiIgnoringActivationFlags:(bool)arg1;
- (void)startProvisioningWithCompletion:(id /* block */)arg1;
- (void)startRemoteProvisioningForCSN:(id)arg1 completion:(id /* block */)arg2;
- (void)subscriptionDetailsForCompletion:(id)arg1;
- (id)synchronousProxyWithErrorHandler:(id /* block */)arg1;
- (void)triggerAddNewDataPlan:(id /* block */)arg1;
- (void)userDidProvideConsentResponse:(long long)arg1 forPlan:(id)arg2 isRemote:(bool)arg3 completion:(id /* block */)arg4;
- (void)userDidProvideResponse:(long long)arg1 confirmationCode:(id)arg2 forPlan:(id)arg3 isRemote:(bool)arg4 completion:(id /* block */)arg5;
- (void)willDisplayPlanItems;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

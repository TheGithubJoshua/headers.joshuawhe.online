<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CTCellularPlanItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CellularPlanManager.framework/CTCellularPlanItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CellularPlanManager.framework/CellularPlanManager (6851.1)
 */

@interface CTCellularPlanItem : NSObject <NSCopying, NSSecureCoding> {
    NSString * _companionSimLabelId;
    NSUUID * _companionSlotUuid;
    NSString * _iccid;
    bool  _isActiveDataPlan;
    bool  _isDefaultVoice;
    bool  _isSelectable;
    NSNumber * _isSelectedOverride;
    bool  _isSimStateValid;
    NSString * _label;
    long long  _lockState;
    NSString * _name;
    NSString * _phoneNumber;
    CTCellularPlan * _plan;
    bool  _shouldAppearDisabled;
    bool  _shouldAutoSelectWhenInRange;
    bool  _shouldDisplay;
    bool  _shouldDisplayType;
    long long  _type;
    CTUserLabel * _userLabel;
    NSString * _uuid;
}

@property (nonatomic, readonly) NSString *carrierName;
@property (nonatomic, copy) NSString *companionSimLabelId;
@property (nonatomic, copy) NSUUID *companionSlotUuid;
@property (nonatomic, readonly) NSString *iccid;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic) bool isActiveDataPlan;
@property (nonatomic, readonly) bool isBackedByCellularPlan;
@property (nonatomic) bool isDefaultVoice;
@property (nonatomic, readonly) bool isInstalling;
@property (nonatomic) bool isSelectable;
@property (nonatomic, readonly) bool isSelected;
@property (nonatomic, retain) NSNumber *isSelectedOverride;
@property (nonatomic) bool isSimStateValid;
@property (nonatomic) NSString *label;
@property (nonatomic) long long lockState;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic) NSString *phoneNumber;
@property (nonatomic, readonly) CTCellularPlan *plan;
@property (nonatomic) bool shouldAppearDisabled;
@property (nonatomic) bool shouldAutoSelectWhenInRange;
@property (nonatomic, readonly) bool shouldDisplay;
@property (nonatomic) bool shouldDisplayType;
@property (nonatomic) long long type;
@property (nonatomic) CTUserLabel *userLabel;
@property (nonatomic, readonly) NSString *uuid;

+ (bool)supportsSecureCoding;

- (id)carrierName;
- (id)companionSimLabelId;
- (id)companionSlotUuid;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)iccid;
- (id)identifier;
- (id)initWithCellularPlan:(id)arg1 uuid:(id)arg2;
- (id)initWithCellularPlan:(id)arg1 uuid:(id)arg2 iccid:(id)arg3 name:(id)arg4 type:(long long)arg5 phoneNumber:(id)arg6 label:(id)arg7;
- (id)initWithCellularPlan:(id)arg1 uuid:(id)arg2 type:(long long)arg3 phoneNumber:(id)arg4 label:(id)arg5;
- (id)initWithCoder:(id)arg1;
- (id)initWithIccid:(id)arg1 uuid:(id)arg2 name:(id)arg3 phoneNumber:(id)arg4 label:(id)arg5;
- (bool)isActiveDataPlan;
- (bool)isBackedByCellularPlan;
- (bool)isDefaultVoice;
- (bool)isInstalling;
- (bool)isSelectable;
- (bool)isSelected;
- (id)isSelectedOverride;
- (bool)isSimStateValid;
- (id)label;
- (long long)lockState;
- (id)name;
- (id)phoneNumber;
- (id)plan;
- (void)setCompanionSimLabelId:(id)arg1;
- (void)setCompanionSlotUuid:(id)arg1;
- (void)setIsActiveDataPlan:(bool)arg1;
- (void)setIsDefaultVoice:(bool)arg1;
- (void)setIsSelectable:(bool)arg1;
- (void)setIsSelectedOverride:(id)arg1;
- (void)setIsSimStateValid:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setLockState:(long long)arg1;
- (void)setPhoneNumber:(id)arg1;
- (void)setShouldAppearDisabled:(bool)arg1;
- (void)setShouldAutoSelectWhenInRange:(bool)arg1;
- (void)setShouldDisplayType:(bool)arg1;
- (void)setType:(long long)arg1;
- (void)setUserLabel:(id)arg1;
- (bool)shouldAppearDisabled;
- (bool)shouldAutoSelectWhenInRange;
- (bool)shouldDisplay;
- (bool)shouldDisplayType;
- (long long)type;
- (id)typeAsString:(long long)arg1;
- (id)userLabel;
- (id)uuid;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HFSetupSingleAccessoryPairingController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Home.framework/HFSetupSingleAccessoryPairingController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Home.framework/Home (1)
 */

@interface HFSetupSingleAccessoryPairingController : NSObject <HFHomeObserver, HFSetupPairingController> {
    bool  _accessoryRequiresCode;
    HMAccessorySetupCompletedInfo * _completedInfo;
    HFDiscoveredAccessory * _discoveredAccessoryToPair;
    HMHome * _home;
    NSSet * _pairedAccessories;
    NAFuture * _pairingFuture;
    NSHashTable * _pairingObservers;
    unsigned long long  _phase;
    NSDate * _phaseStartDate;
    HMSetupAccessoryDescription * _setupAccessoryDescription;
    <HMSetupRemoteService> * _setupRemoteService;
    HFSetupAccessoryResult * _setupResult;
    NSString * _statusDescription;
    NSString * _statusTitle;
}

@property (nonatomic) bool accessoryRequiresCode;
@property (nonatomic, readonly) HMAccessorySetupCompletedInfo *completedInfo;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) HFDiscoveredAccessory *discoveredAccessoryToPair;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HMHome *home;
@property (nonatomic, retain) NSSet *pairedAccessories;
@property (nonatomic, retain) NAFuture *pairingFuture;
@property (nonatomic, retain) NSHashTable *pairingObservers;
@property (nonatomic) unsigned long long phase;
@property (nonatomic, retain) NSDate *phaseStartDate;
@property (nonatomic, readonly) HMSetupAccessoryDescription *setupAccessoryDescription;
@property (nonatomic) <HMSetupRemoteService> *setupRemoteService;
@property (nonatomic, retain) HFSetupAccessoryResult *setupResult;
@property (nonatomic, retain) NSString *statusDescription;
@property (nonatomic, retain) NSString *statusTitle;
@property (readonly) Class superclass;

+ (bool)supportsSetupPayloadRetry;

- (void).cxx_destruct;
- (void)_assertValidTransitionFromPhase:(unsigned long long)arg1 toPhase:(unsigned long long)arg2;
- (void)_failPairingWithDiscoveredAccessory:(id)arg1 error:(id)arg2;
- (void)_finishPairingWithDiscoveredAccessory:(id)arg1;
- (void)_tryPairing;
- (void)_updateStatusTextAndNotifyDelegate:(bool)arg1;
- (bool)accessoryRequiresCode;
- (void)addPairingObserver:(id)arg1;
- (id)cancel;
- (id)completedInfo;
- (id)discoveredAccessoryToPair;
- (id)home;
- (void)home:(id)arg1 didAddAccessory:(id)arg2;
- (id)initWithDiscoveredAccessory:(id)arg1 setupRemoteService:(id)arg2 setupAccessoryDescription:(id)arg3;
- (id)pairedAccessories;
- (id)pairingFuture;
- (id)pairingObservers;
- (unsigned long long)phase;
- (id)phaseStartDate;
- (void)removePairingObserver:(id)arg1;
- (void)setAccessoryRequiresCode:(bool)arg1;
- (void)setHome:(id)arg1;
- (void)setPairedAccessories:(id)arg1;
- (void)setPairingFuture:(id)arg1;
- (void)setPairingObservers:(id)arg1;
- (void)setPhase:(unsigned long long)arg1;
- (void)setPhaseStartDate:(id)arg1;
- (void)setSetupRemoteService:(id)arg1;
- (void)setSetupResult:(id)arg1;
- (void)setStatusDescription:(id)arg1;
- (void)setStatusTitle:(id)arg1;
- (id)setupAccessoryDescription;
- (id)setupRemoteService;
- (id)setupResult;
- (void)startWithHome:(id)arg1;
- (id)statusDescription;
- (id)statusTitle;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HFCharacteristicValueManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Home.framework/HFCharacteristicValueManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Home.framework/Home (1)
 */

@interface HFCharacteristicValueManager : NSObject <HFCharacteristicValueSource> {
    long long  __debug_totalNumberOfIssuedBatchReadRequests;
    NSMutableDictionary * _cachedExecutionErrorsKeyedByActionSetIdentifier;
    NSMutableDictionary * _cachedReadErrorsKeyedByCharacteristicIdentifier;
    NSMutableDictionary * _cachedWriteErrorsKeyedByCharacteristicIdentifier;
    NSMutableSet * _characteristicsWithCachedValues;
    NSMutableArray * _completionHandlersForReadTransactionsToExecuteOnNextRunLoop;
    NAFuture * _firstReadCompleteFuture;
    NACancelationToken * _inFlightReadCancelationToken;
    NSMutableSet * _mutableAllReadCharacteristics;
    HFCharacteristicValueTransaction * _openTransaction;
    NSMutableArray * _readTransactionsToExecuteOnNextRunLoop;
    HFCharacteristicReadLogger * _readsCompleteLogger;
    NSMutableArray * _runningTransactions;
    NSRecursiveLock * _transactionLock;
    <HFCharacteristicValueReader> * _valueReader;
    <HFCharacteristicValueWriter> * _valueWriter;
}

@property (nonatomic) long long _debug_totalNumberOfIssuedBatchReadRequests;
@property (nonatomic, readonly, copy) NSSet *allReadCharacteristics;
@property (nonatomic, retain) NSMutableDictionary *cachedExecutionErrorsKeyedByActionSetIdentifier;
@property (nonatomic, retain) NSMutableDictionary *cachedReadErrorsKeyedByCharacteristicIdentifier;
@property (nonatomic, retain) NSMutableDictionary *cachedWriteErrorsKeyedByCharacteristicIdentifier;
@property (nonatomic, retain) NSMutableSet *characteristicsWithCachedValues;
@property (nonatomic, readonly, copy) NSSet *characteristicsWithPendingReads;
@property (nonatomic, readonly, copy) NSSet *characteristicsWithPendingWrites;
@property (nonatomic, retain) NSMutableArray *completionHandlersForReadTransactionsToExecuteOnNextRunLoop;
@property (nonatomic, readonly) <HFCharacteristicOperationContextProviding> *contextProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSSet *executingActionSets;
@property (nonatomic, readonly) NAFuture *firstReadCompleteFuture;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NACancelationToken *inFlightReadCancelationToken;
@property (nonatomic, retain) NSMutableSet *mutableAllReadCharacteristics;
@property (nonatomic, retain) HFCharacteristicValueTransaction *openTransaction;
@property (nonatomic, retain) NSMutableArray *readTransactionsToExecuteOnNextRunLoop;
@property (nonatomic, retain) HFCharacteristicReadLogger *readsCompleteLogger;
@property (nonatomic, retain) NSMutableArray *runningTransactions;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSRecursiveLock *transactionLock;
@property (nonatomic, retain) <HFCharacteristicValueReader> *valueReader;
@property (nonatomic, retain) <HFCharacteristicValueWriter> *valueWriter;

+ (bool)_shouldTrackReadsCompleteForPerformanceTesting;
+ (id)na_identity;

- (void).cxx_destruct;
- (void)_beginReadsCompleteTrackingForCharacteristics:(id)arg1 withLogger:(id)arg2;
- (long long)_debug_totalNumberOfIssuedBatchReadRequests;
- (void)_endReadsCompleteTrackingForCharacteristic:(id)arg1 withLogger:(id)arg2 didRead:(bool)arg3;
- (id)_openTransactionCompletionFuture;
- (id)_transactionLock_characteristicsWithPendingWritesInTransacton:(id)arg1 includeDirectWrites:(bool)arg2 includeActionSets:(bool)arg3;
- (void)_transactionLock_executeActionSetTransaction:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_transactionLock_executeReadTransaction:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_transactionLock_executeWriteTransaction:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)allReadCharacteristics;
- (void)beginTransactionWithReason:(id)arg1;
- (void)beginTransactionWithReason:(id)arg1 readPolicy:(id)arg2 logger:(id)arg3;
- (id)cachedErrorForExecutionOfActionSet:(id)arg1;
- (id)cachedErrorForWriteToCharacteristic:(id)arg1;
- (id)cachedExecutionErrorsKeyedByActionSetIdentifier;
- (id)cachedReadErrorForCharacteristic:(id)arg1;
- (id)cachedReadErrorsKeyedByCharacteristicIdentifier;
- (id)cachedValueForCharacteristic:(id)arg1;
- (id)cachedWriteErrorsKeyedByCharacteristicIdentifier;
- (void)cancelInFlightReadRequests;
- (id)characteristicsWithCachedValues;
- (id)characteristicsWithPendingReads;
- (id)characteristicsWithPendingWrites;
- (void)commitTransactionWithReason:(id)arg1;
- (id)completionHandlersForReadTransactionsToExecuteOnNextRunLoop;
- (id)contextProvider;
- (id)executeActionSet:(id)arg1;
- (void)executeActionSet:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)executingActionSets;
- (id)firstReadCompleteFuture;
- (bool)hasCachedReadErrorForAccessory:(id)arg1 passingTest:(id /* block */)arg2;
- (unsigned long long)hash;
- (id)inFlightReadCancelationToken;
- (id)initWithValueReader:(id)arg1 valueWriter:(id)arg2;
- (void)invalidateAllCachedErrors;
- (void)invalidateCachedErrorForExecutionOfActionSet:(id)arg1;
- (void)invalidateCachedValueForCharacteristic:(id)arg1;
- (void)invalidateCachedValuesForAccessory:(id)arg1;
- (bool)isEqual:(id)arg1;
- (unsigned long long)loadingStateForCharacteristics:(id)arg1 actionSets:(id)arg2;
- (id)mutableAllReadCharacteristics;
- (id)openTransaction;
- (id)readTransactionsToExecuteOnNextRunLoop;
- (id)readValueForCharacteristic:(id)arg1;
- (id)readValuesForCharacteristicTypes:(id)arg1 inServices:(id)arg2;
- (id)readValuesForCharacteristics:(id)arg1;
- (id)readValuesForCharacteristicsPassingTest:(id /* block */)arg1 inServices:(id)arg2;
- (id)readsCompleteLogger;
- (id)runningTransactions;
- (void)setCachedExecutionErrorsKeyedByActionSetIdentifier:(id)arg1;
- (void)setCachedReadErrorsKeyedByCharacteristicIdentifier:(id)arg1;
- (void)setCachedWriteErrorsKeyedByCharacteristicIdentifier:(id)arg1;
- (void)setCharacteristicsWithCachedValues:(id)arg1;
- (void)setCompletionHandlersForReadTransactionsToExecuteOnNextRunLoop:(id)arg1;
- (void)setInFlightReadCancelationToken:(id)arg1;
- (void)setMutableAllReadCharacteristics:(id)arg1;
- (void)setOpenTransaction:(id)arg1;
- (void)setReadTransactionsToExecuteOnNextRunLoop:(id)arg1;
- (void)setReadsCompleteLogger:(id)arg1;
- (void)setRunningTransactions:(id)arg1;
- (void)setTransactionLock:(id)arg1;
- (void)setValueReader:(id)arg1;
- (void)setValueWriter:(id)arg1;
- (void)set_debug_totalNumberOfIssuedBatchReadRequests:(long long)arg1;
- (id)transactionLock;
- (id)valueReader;
- (id)valueWriter;
- (id)writeValue:(id)arg1 forCharacteristic:(id)arg2;
- (id)writeValuesForCharacteristics:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

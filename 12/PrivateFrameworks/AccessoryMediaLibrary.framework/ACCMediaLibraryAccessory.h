<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ACCMediaLibraryAccessory.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AccessoryMediaLibrary.framework/ACCMediaLibraryAccessory.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AccessoryMediaLibrary.framework/AccessoryMediaLibrary (1)
 */

@interface ACCMediaLibraryAccessory : NSObject {
    NSString * _accessoryUID;
    NSMutableDictionary * _confirmedRevisionList;
    NSMutableDictionary * _libraries;
    NSObject<OS_dispatch_queue> * _listQueue;
    NSMutableDictionary * _pendingPlaylistContentUpdates;
    NSMutableDictionary * _pendingUpdates;
    ACCMediaLibraryProvider * _provider;
    NSMutableDictionary * _waitingConfirm;
    unsigned int  _windowPerLibrary;
}

@property (nonatomic, readonly) NSString *accessoryUID;
@property (nonatomic, retain) NSMutableDictionary *confirmedRevisionList;
@property (nonatomic, readonly) NSMutableDictionary *libraries;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *listQueue;
@property (nonatomic, retain) NSMutableDictionary *pendingPlaylistContentUpdates;
@property (nonatomic, retain) NSMutableDictionary *pendingUpdates;
@property (nonatomic, readonly) ACCMediaLibraryProvider *provider;
@property (nonatomic, retain) NSMutableDictionary *waitingConfirm;
@property (nonatomic) unsigned int windowPerLibrary;

- (void).cxx_destruct;
- (void)_addConfirmedRevisionForLibrary:(id)arg1 revision:(id)arg2;
- (void)_addConfirmedRevisionForLibrary:(id)arg1 revisionsToAdd:(id)arg2;
- (void)_addToWaitlistForLibrary:(id)arg1 item:(id)arg2;
- (void)_addToWaitlistForLibrary:(id)arg1 list:(id)arg2;
- (id)_confirmedRevisionListForLibrary:(id)arg1 createIfNotExist:(bool)arg2;
- (void)_confirmedRevisionListRemoveLibraryIfEmpty:(id)arg1;
- (unsigned long long)_pendingAndWaitingConfirmUpdatesCountForLibrary:(id)arg1;
- (unsigned long long)_pendingPlaylistContentUpdatesCountForLibrary:(id)arg1;
- (id)_pendingPlaylistContentUpdatesForLibrary:(id)arg1 createIfNotExist:(bool)arg2;
- (void)_pendingPlaylistContentUpdatesRemoveLibraryIfEmpty:(id)arg1;
- (bool)_pendingUpdatesAndWaitingConfirmFullForLibrary:(id)arg1;
- (id)_pendingUpdatesForLibrary:(id)arg1 createIfNotExist:(bool)arg2;
- (void)_pendingUpdatesRemoveLibraryIfEmpty:(id)arg1;
- (id)_waitingUpdatesForLibrary:(id)arg1 createIfNotExist:(bool)arg2;
- (void)_waitingUpdatesRemoveLibraryIfEmpty:(id)arg1;
- (id)accessoryUID;
- (void)addLibraryInfo:(id)arg1;
- (bool)addPlaylistContentUpdate:(id)arg1 library:(id)arg2;
- (bool)addUpdate:(id)arg1 library:(id)arg2;
- (void)clearAllUpdates;
- (void)confirmPlaylistContentUpdates:(id)arg1 revision:(id)arg2;
- (id)confirmUpdates:(id)arg1 revision:(id)arg2 count:(unsigned int)arg3;
- (id)confirmedRevisionList;
- (id)copyPendingNonContentUpdatesToSendForLibrary:(id)arg1;
- (id)copyPendingPlaylistContentUpdatesToSendForLibrary:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)initWithUID:(id)arg1 windowPerLibrary:(unsigned int)arg2 provider:(id)arg3;
- (id)libraries;
- (id)listQueue;
- (unsigned long long)pendingAndWaitingConfirmUpdatesCountForLibrary:(id)arg1;
- (id)pendingPlaylistContentUpdates;
- (unsigned long long)pendingPlaylistContentUpdatesCountForLibrary:(id)arg1;
- (id)pendingUpdates;
- (bool)pendingUpdatesAndWaitingConfirmFullForLibrary:(id)arg1;
- (id)provider;
- (void)setConfirmedRevisionList:(id)arg1;
- (void)setPendingPlaylistContentUpdates:(id)arg1;
- (void)setPendingUpdates:(id)arg1;
- (void)setWaitingConfirm:(id)arg1;
- (void)setWindowPerLibrary:(unsigned int)arg1;
- (id)waitingConfirm;
- (unsigned int)windowPerLibrary;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GSPermanentStorage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GenerationalStorage.framework/GSPermanentStorage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GenerationalStorage.framework/GenerationalStorage (285.101)
 */

@interface GSPermanentStorage : NSObject <GSAdditionStoring, GSAdditionStoringPrivate> {
    GSDocumentIdentifier * _documentID;
    NSURL * _documentURL;
    NSData * _privExtension;
    long long  _privHandle;
    NSData * _pubExtension;
    long long  _pubHandle;
    unsigned long long  _remoteID;
    GSStagingPrefix * _stagingPrefix;
    unsigned long long  _storageID;
}

@property (nonatomic, readonly) GSDocumentIdentifier *documentID;
@property (retain) NSURL *documentURL;
@property (nonatomic, readonly) <NSCopying><NSSecureCoding> *persistentIdentifier;
@property (retain) NSData *privExtension;
@property (retain) NSData *pubExtension;
@property (nonatomic, readonly) long long remoteID;
@property (nonatomic, retain) GSStagingPrefix *stagingPrefix;
@property (nonatomic, readonly) unsigned long long storageID;

+ (id)storageIDForItemAtURL:(id)arg1 error:(id*)arg2;
+ (id)storagePrefixForFileDescriptor:(int)arg1 error:(id*)arg2;

- (void).cxx_destruct;
- (id)URLforReplacingItemWithError:(id*)arg1;
- (void)_connectionWithDaemonWasLost;
- (void)_invalidate;
- (bool)_refreshRemoteIDWithFileDescriptor:(int)arg1 error:(id*)arg2;
- (id)additionWithName:(id)arg1 inNameSpace:(id)arg2 error:(id*)arg3;
- (id)additionsWithNames:(id)arg1 inNameSpace:(id)arg2 error:(id*)arg3;
- (void)cleanupStagingURL:(id)arg1;
- (void)createAdditionStagedAtURL:(id)arg1 creationInfo:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)dealloc;
- (id)description;
- (id)documentID;
- (id)documentURL;
- (struct NSEnumerator { Class x1; }*)enumeratorForAdditionsInNameSpace:(id)arg1 withOptions:(unsigned long long)arg2 withoutOptions:(unsigned long long)arg3 ordering:(int)arg4;
- (void)finalize;
- (id)getAdditionDictionary:(id)arg1 error:(id*)arg2;
- (unsigned long long)hash;
- (id)init;
- (id)initWithFileDescriptor:(int)arg1 documentID:(id)arg2 forItemAtURL:(id)arg3 error:(id*)arg4;
- (bool)isEqual:(id)arg1;
- (bool)mergeAdditionUserInfo:(id)arg1 value:(id)arg2 error:(id*)arg3;
- (id)persistentIdentifier;
- (id)prepareAdditionCreationWithItemAtURL:(id)arg1 byMoving:(bool)arg2 creationInfo:(id)arg3 error:(id*)arg4;
- (id)privExtension;
- (id)pubExtension;
- (long long)remoteID;
- (void)removeAdditions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)removeAllAdditionsForNamespaces:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)replaceDocumentWithContentsOfAddition:(id)arg1 preservingCurrentVersionWithCreationInfo:(id)arg2 createdAddition:(id*)arg3 error:(id*)arg4;
- (bool)replaceDocumentWithContentsOfItemAtURL:(id)arg1 preservingCurrentVersionWithCreationInfo:(id)arg2 createdAddition:(id*)arg3 error:(id*)arg4;
- (bool)setAdditionDisplayName:(id)arg1 value:(id)arg2 error:(id*)arg3;
- (id)setAdditionNameSpace:(id)arg1 value:(id)arg2 error:(id*)arg3;
- (bool)setAdditionOptions:(id)arg1 value:(unsigned long long)arg2 error:(id*)arg3;
- (void)setDocumentURL:(id)arg1;
- (void)setPrivExtension:(id)arg1;
- (void)setPubExtension:(id)arg1;
- (void)setStagingPrefix:(id)arg1;
- (id)stagingPrefix;
- (id)stagingURLforCreatingAdditionWithError:(id*)arg1;
- (unsigned long long)storageID;
- (bool)transferToItemAtURL:(id)arg1 error:(id*)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

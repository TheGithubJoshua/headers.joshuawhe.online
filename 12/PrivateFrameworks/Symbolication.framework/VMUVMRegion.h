<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VMUVMRegion.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Symbolication.framework/VMUVMRegion.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Symbolication.framework/Symbolication (64492.3)
 */

@interface VMUVMRegion : NSObject {
    unsigned int  coalesced_region_count;
    unsigned long long  dirty_size;
    unsigned char  external_pager;
    unsigned int  is_macho_region;
    unsigned int  is_submap;
    unsigned int  is_unused_data_page_shared_with_active_content;
    unsigned int  is_unused_data_region;
    unsigned long long  mallocBlockCount;
    unsigned int  mallocTypeFlag;
    unsigned int  maxProt;
    unsigned int  nesting_depth;
    unsigned long long  object_id;
    unsigned long long  pages_dirtied;
    unsigned long long  pages_resident;
    unsigned long long  pages_shared_now_private;
    unsigned long long  pages_swapped_out;
    NSString * path;
    unsigned int  prot;
    unsigned long long  purgable_empty_size;
    unsigned long long  purgable_non_vol_size;
    unsigned long long  purgable_vol_size;
    int  purgeable;
    struct _VMURange { 
        unsigned long long location; 
        unsigned long long length; 
    }  range;
    unsigned long long  ref_count;
    unsigned int  reserved_flags;
    unsigned long long  resident_size;
    unsigned char  share_mode;
    unsigned long long  shared_now_private_size;
    bool  summarized;
    unsigned long long  swapped_out_size;
    NSString * type;
    unsigned int  user_tag;
    unsigned long long  virtual_pages;
    unsigned int  zone_index;
}

+ (id)columnHeadersWithOptions:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2;
+ (id)columnHeadersWithOptions:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2 memorySizeDivisor:(unsigned int)arg3 hasFractionalPageSizes:(bool)arg4;
+ (void)initialize;

- (void).cxx_destruct;
- (void)addInfoFromRegion:(id)arg1;
- (unsigned long long)address;
- (id)breakAtLength:(unsigned long long)arg1;
- (id)description;
- (id)descriptionWithOptions:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2;
- (id)descriptionWithOptions:(unsigned long long)arg1 maximumLength:(unsigned long long)arg2 memorySizeDivisor:(unsigned int)arg3 hasFractionalPageSizes:(bool)arg4;
- (void)getVMRegionData:(struct _VMUVMRegionData { unsigned long long x1; unsigned long long x2; unsigned int x3; int x4; int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; int x11; unsigned int x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned int x16; unsigned int x17; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 28; unsigned long long x23; unsigned long long x24; unsigned long long x25; unsigned long long x26; unsigned long long x27; unsigned long long x28; unsigned long long x29; }*)arg1 withSimpleSerializer:(id)arg2;
- (bool)hasSameInfoAsRegion:(id)arg1;
- (id)init;
- (id)initWithVMRegionData:(struct _VMUVMRegionData { unsigned long long x1; unsigned long long x2; unsigned int x3; int x4; int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; int x11; unsigned int x12; unsigned char x13; unsigned char x14; unsigned char x15; unsigned int x16; unsigned int x17; unsigned int x18 : 1; unsigned int x19 : 1; unsigned int x20 : 1; unsigned int x21 : 1; unsigned int x22 : 28; unsigned long long x23; unsigned long long x24; unsigned long long x25; unsigned long long x26; unsigned long long x27; unsigned long long x28; unsigned long long x29; }*)arg1 encodedVersion:(long long)arg2 simpleSerializer:(id)arg3;
- (bool)isEqual:(id)arg1;
- (bool)isSubmap;
- (unsigned long long)length;
- (unsigned int)maxProtection;
- (id)path;
- (unsigned int)protection;
- (struct _VMURange { unsigned long long x1; unsigned long long x2; })range;
- (id)type;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

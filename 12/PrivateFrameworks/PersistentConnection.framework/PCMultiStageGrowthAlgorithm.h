<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PCMultiStageGrowthAlgorithm.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PersistentConnection.framework/PCMultiStageGrowthAlgorithm.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection (1.0)
 */

@interface PCMultiStageGrowthAlgorithm : NSObject <PCGrowthAlgorithm> {
    NSString * _algorithmName;
    unsigned long long  _countOfGrowthActions;
    double  _currentKeepAliveInterval;
    int  _growthStage;
    double  _highWatermark;
    double  _initialGrowthStageHighWatermark;
    double  _initialGrowthStageLastAttempt;
    bool  _isServerOriginatedKeepAlive;
    double  _lastKeepAliveInterval;
    double  _lastSuccessfulKeepAliveInterval;
    NSDate * _leaveMinimumIntervalFallbackStateDate;
    NSDate * _leaveSteadyStateDate;
    NSObject<OS_os_log> * _logObject;
    double  _maximumKeepAliveInterval;
    bool  _minimumIntervalFallbackEnabled;
    double  _minimumKeepAliveInterval;
    double  _previousMaximumKeepAliveInterval;
}

@property (nonatomic, readonly, copy) NSDictionary *cacheInfo;
@property (nonatomic, readonly) unsigned long long countOfGrowthActions;
@property (nonatomic, readonly) double currentKeepAliveInterval;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) int growthStage;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isServerOriginatedKeepAlive;
@property (nonatomic) double lastSuccessfulKeepAliveInterval;
@property (nonatomic) double maximumKeepAliveInterval;
@property (nonatomic) bool minimumIntervalFallbackEnabled;
@property (nonatomic) double minimumKeepAliveInterval;
@property (readonly) Class superclass;

+ (void)_loadDefaultValue:(double*)arg1 forKey:(struct __CFString { }*)arg2;
+ (void)_loadDefaults;

- (void).cxx_destruct;
- (void)_fallbackToLastSuccessfulKeepAliveInterval;
- (void)_processBackoffAction:(int)arg1;
- (void)_processInitialGrowthAction:(int)arg1;
- (void)_processMinimumIntervalFallbackStateAction:(int)arg1;
- (void)_processRefinedGrowthAction:(int)arg1;
- (void)_processSteadyStateAction:(int)arg1;
- (void)_resetAlgorithmToInterval:(double)arg1;
- (void)_resetAlgorithmToInterval:(double)arg1 stage:(int)arg2;
- (void)_setCurrentKeepAliveInterval:(double)arg1;
- (double)_steadyStateTimeout;
- (id)_stringForAction:(int)arg1;
- (id)_stringForStage:(int)arg1;
- (id)cacheInfo;
- (unsigned long long)countOfGrowthActions;
- (double)currentKeepAliveInterval;
- (id)description;
- (int)growthStage;
- (id)initWithCacheInfo:(id)arg1 loggingIdentifier:(id)arg2 algorithmName:(id)arg3;
- (bool)isServerOriginatedKeepAlive;
- (double)lastSuccessfulKeepAliveInterval;
- (double)maximumKeepAliveInterval;
- (bool)minimumIntervalFallbackEnabled;
- (double)minimumKeepAliveInterval;
- (void)processNextAction:(int)arg1;
- (void)setIsServerOriginatedKeepAlive:(bool)arg1;
- (void)setLastSuccessfulKeepAliveInterval:(double)arg1;
- (void)setMaximumKeepAliveInterval:(double)arg1;
- (void)setMinimumIntervalFallbackEnabled:(bool)arg1;
- (void)setMinimumKeepAliveInterval:(double)arg1;
- (bool)useIntervalIfImprovement:(double)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVTCoreDataStoreServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AvatarUI.framework/AVTCoreDataStoreServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI
 */

@interface AVTCoreDataStoreServer : NSObject <AVTAvatarStoreServer, AVTAvatarsDaemonServerDelegate, AVTCoreDataCloudKitMirroringHandlerDelegate, AVTPushNotificationsSupportDelegate> {
    <AVTStoreBackend> * _backend;
    NSObject<OS_dispatch_queue> * _backgroundQueue;
    <AVTBlockScheduler> * _blockScheduler;
    <AVTAvatarRecordChangeTracker> * _changeTracker;
    <AVTCoreDataPersistentStoreLocalConfiguration> * _configuration;
    <AVTAvatarsDaemonServer> * _daemonServer;
    AVTCoreEnvironment * _environment;
    AVTAvatarRecordImageGenerator * _imageGenerator;
    <AVTUILogger> * _logger;
    id /* block */  _migrationActivityCompletion;
    id /* block */  _migratorProvider;
    <AVTCoreDataCloudKitMirroringHandler> * _mirroringHandler;
    <AVTPushNotificationsSupport> * _pushNotificationsSupport;
    <AVTCoreDataRemoteChangesObserver> * _remoteChangesObserver;
    <AVTSyncSchedulingAuthority> * _schedulingAuthority;
    NSXPCStoreServer * _server;
    bool  _setupCompleted;
    <AVTCoreDataStoreMaintenance> * _storeMaintenance;
}

@property (nonatomic, readonly) <AVTStoreBackend> *backend;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *backgroundQueue;
@property (nonatomic, readonly) <AVTBlockScheduler> *blockScheduler;
@property (nonatomic, readonly) <AVTAvatarRecordChangeTracker> *changeTracker;
@property (nonatomic, readonly) <AVTCoreDataPersistentStoreLocalConfiguration> *configuration;
@property (nonatomic, readonly) <AVTAvatarsDaemonServer> *daemonServer;
@property (nonatomic, readonly) AVTCoreEnvironment *environment;
@property (nonatomic, readonly) AVTAvatarRecordImageGenerator *imageGenerator;
@property (nonatomic, readonly) <AVTUILogger> *logger;
@property (nonatomic, copy) id /* block */ migrationActivityCompletion;
@property (nonatomic, readonly, copy) id /* block */ migratorProvider;
@property (nonatomic, readonly) <AVTCoreDataCloudKitMirroringHandler> *mirroringHandler;
@property (nonatomic, readonly) <AVTPushNotificationsSupport> *pushNotificationsSupport;
@property (nonatomic, readonly) <AVTCoreDataRemoteChangesObserver> *remoteChangesObserver;
@property (nonatomic, readonly) <AVTSyncSchedulingAuthority> *schedulingAuthority;
@property (nonatomic, retain) NSXPCStoreServer *server;
@property (nonatomic) bool setupCompleted;
@property (nonatomic, readonly) <AVTCoreDataStoreMaintenance> *storeMaintenance;

+ (id)imageGeneratorForEnvironment:(id)arg1;
+ (bool)resetSyncShouldPreserveContentForReason:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)backend;
- (id)backgroundQueue;
- (id)blockScheduler;
- (id)changeTracker;
- (void)clientDidCheckInForServer:(id)arg1;
- (void)completeMigrationActivityIfNeeded;
- (id)configuration;
- (id)daemonServer;
- (void)didReceivePushNotification:(id)arg1;
- (id)environment;
- (id)imageGenerator;
- (id)initWithEnvironment:(id)arg1;
- (id)initWithLocalBackend:(id)arg1 configuration:(id)arg2 migratorProvider:(id /* block */)arg3 pushSupport:(id)arg4 mirroringHandler:(id)arg5 schedulingAuthority:(id)arg6 remoteChangesObserver:(id)arg7 imageGenerator:(id)arg8 changeTracker:(id)arg9 daemonServer:(id)arg10 storeMaintenance:(id)arg11 backgroundQueue:(id)arg12 environment:(id)arg13;
- (id)logger;
- (void)migrate;
- (id /* block */)migrationActivityCompletion;
- (id /* block */)migratorProvider;
- (id)mirroringHandler;
- (void)mirroringHandler:(id)arg1 didResetSyncWithReason:(unsigned long long)arg2;
- (void)mirroringHandler:(id)arg1 willResetSyncWithReason:(unsigned long long)arg2;
- (bool)processInternalSettingsChanges:(id /* block */)arg1;
- (id)pushNotificationsSupport;
- (id)remoteChangesObserver;
- (void)scheduleExportWithManagedObjectContext:(id)arg1 completion:(id /* block */)arg2;
- (void)scheduleImportExportIfRequiredWithPostImportHandler:(id /* block */)arg1 completion:(id /* block */)arg2;
- (void)scheduleImportThen:(id /* block */)arg1;
- (void)scheduleMigrationThen:(id /* block */)arg1;
- (void)scheduleSetupThen:(id /* block */)arg1;
- (void)scheduleUpdateThumbnails;
- (id)schedulingAuthority;
- (id)server;
- (void)setMigrationActivityCompletion:(id /* block */)arg1;
- (void)setServer:(id)arg1;
- (void)setSetupCompleted:(bool)arg1;
- (bool)setupCompleted;
- (void)setupThen:(id /* block */)arg1;
- (void)startListening;
- (id)storeMaintenance;
- (void)updateThumbnails;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVTAvatarRecordDataSource.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AvatarUI.framework/AVTAvatarRecordDataSource.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI
 */

@interface AVTAvatarRecordDataSource : NSObject <AVTAvatarRecordDataSource, AVTAvatarRecordDataSourceInternal, AVTAvatarStoreDelegate> {
    AVTObservableAvatarStore * _backingStore;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    AVTAvatarFetchRequest * _fetchRequest;
    <AVTUILogger> * _logger;
    NSNotificationCenter * _notificationCenter;
    <NSObject> * _nts_changeNotificationObserver;
    NSPointerArray * _nts_observers;
    NSMutableArray * _nts_recordStorage;
    AVTAvatarStore * _underlyingStore;
}

@property (nonatomic, readonly) AVTObservableAvatarStore *backingStore;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *callbackQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) AVTAvatarFetchRequest *fetchRequest;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <AVTUILogger> *logger;
@property (nonatomic, readonly) NSNotificationCenter *notificationCenter;
@property (nonatomic, retain) <NSObject> *nts_changeNotificationObserver;
@property (nonatomic, readonly) NSPointerArray *nts_observers;
@property (nonatomic, retain) NSMutableArray *nts_recordStorage;
@property (readonly) Class superclass;
@property (nonatomic, readonly) AVTAvatarStore *underlyingStore;

+ (id)defaultUIDataSourceWithDomainIdentifier:(id)arg1;
+ (unsigned long long)indexForInsertingDuplicateRecord:(id)arg1 original:(id)arg2 inRecords:(id)arg3;
+ (unsigned long long)indexForInsertingRecord:(id)arg1 inRecords:(id)arg2;
+ (id)loadRecordsWithStore:(id)arg1 request:(id)arg2 logger:(id)arg3;
+ (id)sortedRecordsEditableFirstReverseOrder:(id)arg1;

- (void).cxx_destruct;
- (void)addObserver:(id)arg1;
- (void)addPriorityObserver:(id)arg1;
- (bool)areRecordsLoaded;
- (void)avatarStoreDidChange:(id)arg1;
- (id)backingStore;
- (id)callbackQueue;
- (void)dealloc;
- (void)enumerateObserversRespondingToSelector:(SEL)arg1 withBlock:(id /* block */)arg2;
- (id)fetchRequest;
- (unsigned long long)indexOfRecordPassingTest:(id /* block */)arg1;
- (id)indexesOfRecordsPassingTest:(id /* block */)arg1;
- (id)initWithRecordStore:(id)arg1 fetchRequest:(id)arg2;
- (id)initWithRecordStore:(id)arg1 fetchRequest:(id)arg2 callbackQueue:(id)arg3 environment:(id)arg4;
- (id)initWithRecordStore:(id)arg1 fetchRequest:(id)arg2 callbackQueue:(id)arg3 logger:(id)arg4 notificationCenter:(id)arg5;
- (id)internalRecordStore;
- (id)logger;
- (id)notificationCenter;
- (id)nts_changeNotificationObserver;
- (id)nts_observers;
- (id)nts_recordStorage;
- (unsigned long long)numberOfRecords;
- (void)performObserversWork:(id /* block */)arg1;
- (void)performSyncWorkWithRecords:(id /* block */)arg1;
- (id)recordAtIndex:(unsigned long long)arg1;
- (id)recordStore;
- (void)removeObserver:(id)arg1;
- (void)setNts_changeNotificationObserver:(id)arg1;
- (void)setNts_recordStorage:(id)arg1;
- (void)store:(id)arg1 didCreateDuplicateAvatar:(id)arg2 forOriginal:(id)arg3 postCompletionHandler:(id /* block */)arg4;
- (void)store:(id)arg1 didDeleteAvatarWithIdentifier:(id)arg2 postCompletionHandler:(id /* block */)arg3;
- (void)store:(id)arg1 didSaveAvatar:(id)arg2 postCompletionHandler:(id /* block */)arg3;
- (id)underlyingStore;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

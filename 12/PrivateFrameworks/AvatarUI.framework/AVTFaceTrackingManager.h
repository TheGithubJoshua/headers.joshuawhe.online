<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVTFaceTrackingManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AvatarUI.framework/AVTFaceTrackingManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI
 */

@interface AVTFaceTrackingManager : NSObject <AVTUIRaiseGestureManagerDelegate, AVTViewFaceTrackingDelegate, FBSDisplayLayoutObserver> {
    AVTView * _avatarView;
    <AVTFaceTrackingManagerDelegate> * _delegate;
    AVTUIEnvironment * _environment;
    bool  _faceTrackingManagementPaused;
    unsigned long long  _interruptionType;
    NSString * _localizedDeviceName;
    NSTimer * _lowLightAndSensorOcclusionLockoutTimer;
    NSTimer * _pauseTrackingTimer;
    AVTUIRaiseGestureManager * _raiseGestureManager;
    bool  _shouldRecheckLowLightAndSensorOcclusionState;
    NSTimer * _trackingLostMessageTimer;
    AVTUserInfoView * _userInfoView;
}

@property (nonatomic, readonly) AVTView *avatarView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AVTFaceTrackingManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) AVTUIEnvironment *environment;
@property (nonatomic) bool faceTrackingManagementPaused;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long interruptionType;
@property (nonatomic, readonly, copy) NSString *localizedDeviceName;
@property (nonatomic, retain) NSTimer *lowLightAndSensorOcclusionLockoutTimer;
@property (nonatomic, retain) NSTimer *pauseTrackingTimer;
@property (nonatomic, readonly) AVTUIRaiseGestureManager *raiseGestureManager;
@property (nonatomic) bool shouldRecheckLowLightAndSensorOcclusionState;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSTimer *trackingLostMessageTimer;
@property (nonatomic, readonly) AVTUserInfoView *userInfoView;

+ (double)desiredUserInfoLabelAlphaForFaceTrackingState:(bool)arg1;

- (void).cxx_destruct;
- (id)avatarView;
- (void)avatarView:(id)arg1 didUpdateWithFaceTrackingStatus:(bool)arg2;
- (void)avatarView:(id)arg1 didUpdateWithLowLightStatus:(bool)arg2;
- (void)avatarView:(id)arg1 didUpdateWithSensorOcclusionStatus:(bool)arg2;
- (void)avatarView:(id)arg1 faceTrackingSessionFailedWithError:(id)arg2;
- (void)avatarViewDidUpdateWithLowLightOrCameraOcclusionStatus;
- (void)avatarViewFaceTrackingSessionInterruptionDidBegin:(id)arg1;
- (void)avatarViewFaceTrackingSessionInterruptionDidEnd:(id)arg1;
- (void)cancelLowLightAndSensorOcclusionTimer;
- (void)dealloc;
- (id)delegate;
- (id)environment;
- (bool)faceTrackingManagementPaused;
- (id)initWithAvatarView:(id)arg1 raiseGestureManager:(id)arg2 environment:(id)arg3;
- (id)initWithAvatarView:(id)arg1 raiseGestureManager:(id)arg2 userInfoView:(id)arg3 environment:(id)arg4;
- (unsigned long long)interruptionType;
- (void)invalidateFaceTrackingTimers;
- (void)layoutMonitor:(id)arg1 didUpdateDisplayLayout:(id)arg2 withContext:(id)arg3;
- (id)localizedDeviceName;
- (id)lowLightAndSensorOcclusionLockoutTimer;
- (id)pauseTrackingTimer;
- (id)raiseGestureManager;
- (void)raiseGestureManagerDidRecognizeRaiseGesture:(id)arg1;
- (void)resetForResumingTrackingAnimated:(bool)arg1;
- (void)resetForTrackingFoundAFaceAnimated:(bool)arg1;
- (void)resumeFaceTrackingIfNeededAnimated:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFaceTrackingManagementPaused:(bool)arg1;
- (void)setInterruptionType:(unsigned long long)arg1;
- (void)setLowLightAndSensorOcclusionLockoutTimer:(id)arg1;
- (void)setPauseTrackingTimer:(id)arg1;
- (void)setShouldRecheckLowLightAndSensorOcclusionState:(bool)arg1;
- (void)setTrackingLostMessageTimer:(id)arg1;
- (bool)shouldRecheckLowLightAndSensorOcclusionState;
- (void)startTrackingLostTimers;
- (id)trackingLostMessageTimer;
- (void)updateForPausingTracking;
- (void)updateForPausingTrackingWithLabel:(bool)arg1;
- (void)updateForTrackingLost;
- (void)updateInterruptionTypeIfNeeded:(unsigned long long)arg1;
- (void)updateUserInfoBackdropForCurrentLabel;
- (void)updateUserInfoLabelAlphaForFaceTrackingState:(bool)arg1;
- (void)updateUserInfoLabelAlphaForFaceTrackingState:(bool)arg1 animated:(bool)arg2;
- (id)userInfoStringForCurrentTrackingState;
- (id)userInfoView;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

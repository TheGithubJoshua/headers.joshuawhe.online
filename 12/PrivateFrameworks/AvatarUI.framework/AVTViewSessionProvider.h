<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVTViewSessionProvider.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AvatarUI.framework/AVTViewSessionProvider.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI
 */

@interface AVTViewSessionProvider : NSObject <AVTViewLayoutInfo, AVTViewSessionDelegate> {
    AVTViewSession * _activeSession;
    AVTView * _avtView;
    struct CGSize { 
        double width; 
        double height; 
    }  _avtViewBackingSize;
    UIView * _avtViewContainer;
    AVTViewUpdater * _avtViewUpdater;
    <AVTViewSessionProviderDelegate> * _delegate;
    AVTUIEnvironment * _environment;
    AVTFaceTrackingManager * _faceTrackingManager;
    NSNotificationCenter * _notificationCenter;
    AVTViewSession * _pausedTrackingSession;
    AVTViewSession * _pendingSession;
    id /* block */  _viewCreator;
}

@property (nonatomic, retain) AVTViewSession *activeSession;
@property (nonatomic, retain) AVTView *avtView;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } avtViewBackingSize;
@property (nonatomic, retain) UIView *avtViewContainer;
@property (nonatomic, retain) AVTViewUpdater *avtViewUpdater;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AVTViewSessionProviderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) AVTUIEnvironment *environment;
@property (nonatomic, retain) AVTFaceTrackingManager *faceTrackingManager;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSNotificationCenter *notificationCenter;
@property (nonatomic, retain) AVTViewSession *pausedTrackingSession;
@property (nonatomic, retain) AVTViewSession *pendingSession;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) id /* block */ viewCreator;

+ (struct CGSize { double x1; double x2; })backingSizeForEnvironment:(id)arg1;
+ (id /* block */)creatorForAVTRecordView;
+ (id /* block */)creatorForAVTView;

- (void).cxx_destruct;
- (void)activateNextSession;
- (id)activeSession;
- (id)avtView;
- (struct CGSize { double x1; double x2; })avtViewBackingSize;
- (id)avtViewContainer;
- (id)avtViewUpdater;
- (void)createContainerAndViewIfNeeded;
- (void)dealloc;
- (id)delegate;
- (void)didLosePrimaryStatusWithSessionToPause:(id)arg1;
- (id)environment;
- (id)faceTrackingManager;
- (void)handleProviderReleasesPrimaryStatusNotification:(id)arg1;
- (void)handleProviderTakesPrimaryStatusNotification:(id)arg1;
- (id)initWithAVTViewBackingSize:(struct CGSize { double x1; double x2; })arg1 viewCreator:(id /* block */)arg2 environment:(id)arg3;
- (id)notificationCenter;
- (id)pausedTrackingSession;
- (id)pendingSession;
- (void)recoverPrimaryStatus;
- (void)sessionDidTearDown:(id)arg1;
- (id)sessionWithDidBecomeActiveHandler:(id /* block */)arg1 tearDownHandler:(id /* block */)arg2;
- (void)setActiveSession:(id)arg1;
- (void)setAvtView:(id)arg1;
- (void)setAvtViewContainer:(id)arg1;
- (void)setAvtViewUpdater:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFaceTrackingManager:(id)arg1;
- (void)setPausedTrackingSession:(id)arg1;
- (void)setPendingSession:(id)arg1;
- (id /* block */)viewCreator;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

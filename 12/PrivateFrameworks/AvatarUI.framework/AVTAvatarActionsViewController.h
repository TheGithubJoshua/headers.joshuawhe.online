<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVTAvatarActionsViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AvatarUI.framework/AVTAvatarActionsViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI
 */

@interface AVTAvatarActionsViewController : UIViewController <AVTAvatarActionsModelDelegate, AVTFaceTrackingManagerDelegate, UINavigationControllerDelegate> {
    AVTAvatarActionsModel * _actionsModel;
    AVTImageTransitioningContainerView * _avatarContainer;
    AVTViewSession * _avtViewSession;
    UIStackView * _buttonsView;
    <AVTAvatarActionsViewControllerLayout> * _currentLayout;
    <AVTAvatarActionsViewControllerDelegate> * _delegate;
    AVTAvatarActionButton * _deleteButton;
    AVTAvatarActionButton * _duplicateButton;
    AVTAvatarActionButton * _editButton;
    AVTUIEnvironment * _environment;
    bool  _isAnimating;
    id /* block */  _postSessionDidBecomeActiveHandler;
    AVTViewSessionProvider * _sessionProvider;
    UITapGestureRecognizer * _tapGestureRecognizer;
    UIImageView * _transitionImageView;
}

@property (nonatomic, retain) AVTAvatarActionsModel *actionsModel;
@property (nonatomic, retain) AVTImageTransitioningContainerView *avatarContainer;
@property (nonatomic, retain) AVTViewSession *avtViewSession;
@property (nonatomic, retain) UIStackView *buttonsView;
@property (nonatomic, retain) <AVTAvatarActionsViewControllerLayout> *currentLayout;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AVTAvatarActionsViewControllerDelegate> *delegate;
@property (nonatomic, retain) AVTAvatarActionButton *deleteButton;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) AVTAvatarActionButton *duplicateButton;
@property (nonatomic, retain) AVTAvatarActionButton *editButton;
@property (nonatomic, readonly) AVTUIEnvironment *environment;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isAnimating;
@property (nonatomic, copy) id /* block */ postSessionDidBecomeActiveHandler;
@property (nonatomic, readonly) AVTViewSessionProvider *sessionProvider;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITapGestureRecognizer *tapGestureRecognizer;
@property (nonatomic, retain) UIImageView *transitionImageView;

- (void).cxx_destruct;
- (id)actionsModel;
- (void)actionsModel:(id)arg1 didAddRecord:(id)arg2;
- (void)actionsModel:(id)arg1 didCancelEditingRecord:(id)arg2;
- (void)actionsModel:(id)arg1 didDeleteRecord:(id)arg2 withRecordUpdate:(id)arg3 completionBlock:(id /* block */)arg4;
- (void)actionsModel:(id)arg1 didDuplicateToRecord:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)actionsModel:(id)arg1 didEditRecord:(id)arg2;
- (id)actionsModel:(id)arg1 recordUpdateForDeletingRecord:(id)arg2;
- (void)actionsModel:(id)arg1 shouldDeleteRecord:(id)arg2 resultBlock:(id /* block */)arg3;
- (void)actionsModelDidFinish:(id)arg1;
- (void)actionsModelDidUpdateInlineActionButtons:(id)arg1;
- (void)applyLayout:(id)arg1;
- (id)avatarContainer;
- (id)avtViewSession;
- (void)beginAVTViewSessionWithDidBeginBlock:(id /* block */)arg1;
- (void)beginUsingAVTViewFromSession:(id)arg1;
- (id)buttonsView;
- (void)configureAVTViewSession:(id)arg1 withAvatarRecord:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)configureUserInfoLabel;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (void)createTransitionImageViewIfNeeded;
- (id)currentLayout;
- (id)delegate;
- (id)deleteButton;
- (double)deleteMoveInDelay;
- (double)deleteMoveInDuration;
- (void)didTapAvatarView:(id)arg1;
- (void)didTapDone:(id)arg1;
- (void)dismissEditorViewController:(id)arg1 forActionsModel:(id)arg2 wasCreate:(bool)arg3 didEdit:(bool)arg4 animated:(bool)arg5 completion:(id /* block */)arg6;
- (id)duplicateButton;
- (double)duplicateScaleDelay;
- (double)duplicateScaleDuration;
- (id)editButton;
- (id)environment;
- (id)initWithAVTViewSessionProvider:(id)arg1 actionsModel:(id)arg2 environment:(id)arg3;
- (long long)interfaceOrientationForFaceTrackingManager:(id)arg1;
- (bool)isAnimating;
- (void)layoutViewFromModel:(id)arg1;
- (void)loadView;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)performTransitionAfterDeleteToRecord:(id)arg1 fromLeft:(bool)arg2 previousRecordImage:(id)arg3 completionBlock:(id /* block */)arg4;
- (void)performTransitionAfterDuplicateToRecord:(id)arg1 previousRecordImage:(id)arg2 completionBlock:(id /* block */)arg3;
- (id /* block */)postSessionDidBecomeActiveHandler;
- (void)prepareForAnimatedTransitionWithLayout:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)presentEditorViewController:(id)arg1 forActionsModel:(id)arg2 isCreate:(bool)arg3;
- (id)sessionProvider;
- (void)setActionsModel:(id)arg1;
- (void)setAvatarContainer:(id)arg1;
- (void)setAvtViewSession:(id)arg1;
- (void)setButtonsView:(id)arg1;
- (void)setCurrentLayout:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeleteButton:(id)arg1;
- (void)setDuplicateButton:(id)arg1;
- (void)setEditButton:(id)arg1;
- (void)setIsAnimating:(bool)arg1;
- (void)setPostSessionDidBecomeActiveHandler:(id /* block */)arg1;
- (void)setTapGestureRecognizer:(id)arg1;
- (void)setTransitionImageView:(id)arg1;
- (id)tapGestureRecognizer;
- (id)transitionImageView;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

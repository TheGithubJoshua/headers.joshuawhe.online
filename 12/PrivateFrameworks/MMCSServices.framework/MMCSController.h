<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MMCSController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MMCSServices.framework/MMCSController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MMCSServices.framework/MMCSServices (1000)
 */

@interface MMCSController : NSObject {
    struct __CFURL { } * _chunkStoreURL;
    long long  _connectionBehavior;
    unsigned long long  _currentItemID;
    struct _mmcs_engine { } * _engine;
    id  _powerAssertion;
    NSTimer * _powerAssertionTimer;
    NSMutableDictionary * _requestIDToBlockMap;
    NSMutableDictionary * _requestIDToRemainingTransfersMap;
    NSMutableDictionary * _requestIDToTransfersMap;
    NSRecursiveLock * _transferIDContextMapLock;
    NSMutableDictionary * _transferIDToContextMap;
    NSMutableDictionary * _transferToRequestIDsMap;
    NSMutableDictionary * _transfers;
}

@property long long connectionBehavior;
@property (readonly) bool isActive;
@property (retain) NSRecursiveLock *transferIDContextMapLock;
@property (readonly) NSMutableDictionary *transferIDToContextMap;
@property (readonly) NSMutableDictionary *transfers;

+ (void)preMMCSWarm:(id)arg1;

- (id)_MMCSICloudRequestHeadersCopy:(struct __CFString { }*)arg1;
- (void)_MMCSRegisterItems:(struct _mmcs_engine { }*)arg1 requestorContext:(void*)arg2 requestOptions:(id)arg3 completionCallback:(int (*)arg4;
- (void)_addPreauthorizationOptions:(id)arg1 forFiles:(id)arg2;
- (void)_cancelRequest:(id)arg1;
- (struct _mmcs_engine { }*)_engine;
- (void)_getItemCompleted:(id)arg1 path:(id)arg2 error:(id)arg3;
- (void)_getItemUpdated:(id)arg1 progress:(double)arg2 state:(int)arg3 error:(id)arg4;
- (bool)_getTransfers:(id)arg1 requestURL:(id)arg2 requestorID:(id)arg3 token:(id)arg4 error:(id*)arg5;
- (void)_handleRegistrationForMMCSPutFile:(id)arg1 preauthenticate:(bool)arg2 completionBlock:(id /* block */)arg3;
- (void)_invalidatePowerAssertionTimer;
- (void)_itemCompleted:(id)arg1;
- (id)_optionsForFiles:(id)arg1;
- (void)_processCompletedItem:(id)arg1 error:(id)arg2;
- (void)_putItemCompleted:(id)arg1 error:(id)arg2;
- (void)_putItemUpdated:(id)arg1 progress:(double)arg2 state:(int)arg3 error:(id)arg4;
- (bool)_putTransfers:(id)arg1 requestURL:(id)arg2 requestorID:(id)arg3 transferID:(id)arg4 token:(id)arg5 error:(id*)arg6;
- (void)_registerFiles:(id)arg1 preauthenticate:(bool)arg2 completionBlock:(id /* block */)arg3;
- (void)_registerPowerAssertionIfNeeded;
- (void)_registerTransfers:(id)arg1 preauthenticate:(bool)arg2 completionBlock:(id /* block */)arg3;
- (id)_registeredTransferForGUID:(id)arg1;
- (id)_registeredTransferForItemID:(unsigned long long)arg1;
- (void)_releasePowerAssertion;
- (void)_releasePowerAssertionAndSimulateCrash;
- (void)_schedulePowerAssertionTimer;
- (void)_setScheduledTransfers:(id)arg1 block:(id /* block */)arg2;
- (void)_unregisterPowerAssertion;
- (bool)_unregisterTransfers:(id)arg1;
- (void)addRequestorContext:(id)arg1 transferID:(id)arg2;
- (void)cancelPutRequestID:(id)arg1;
- (long long)connectionBehavior;
- (void)dealloc;
- (id)getContentHeadersAsString;
- (void)getFiles:(id)arg1 requestURL:(id)arg2 requestorID:(id)arg3 authToken:(id)arg4 completionBlock:(id /* block */)arg5;
- (id)init;
- (bool)isActive;
- (id)parseContentHeaderAsDictionary:(id)arg1 treatValuesAsArrays:(bool)arg2;
- (void)putFiles:(id)arg1 requestURL:(id)arg2 requestorID:(id)arg3 transferID:(id)arg4 authToken:(id)arg5 preauthenticate:(bool)arg6 completionBlock:(id /* block */)arg7;
- (void)registerFilesForDownload:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)registerFilesForUpload:(id)arg1 withPreauthentication:(bool)arg2 completionBlock:(id /* block */)arg3;
- (void)removeRequestorContext:(id)arg1 transferID:(id)arg2;
- (void)setConnectionBehavior:(long long)arg1;
- (void)setTransferIDContextMapLock:(id)arg1;
- (id)transferIDContextMapLock;
- (id)transferIDToContextMap;
- (id)transfers;
- (bool)unregisterFiles:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SPUISearchHeader.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SpotlightUI.framework/SPUISearchHeader.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SpotlightUI.framework/SpotlightUI (1)
 */

@interface SPUISearchHeader : UIView <MFAtomTextViewDelegate, UITextFieldDelegate> {
    long long  _activeInterfaceOrientation;
    double  _blurProgress;
    NSLayoutConstraint * _bottomConstraint;
    UIButton * _cancelButton;
    NSLayoutConstraint * _cancelButtonTrailingConstraint;
    <SPUISearchHeaderDelegate> * _delegate;
    _UILegibilitySettings * _legibilitySettings;
    bool  _offersCompletions;
    SPSearchEntity * _searchEntity;
    SPUITextField * _searchField;
    NSLayoutConstraint * _searchFieldTrailingConstraint;
    bool  _searchTextScheduledForProcessing;
    unsigned long long  _suggestionID;
    NSLayoutConstraint * _topConstraint;
    NSLayoutConstraint * _widthConstraint;
    bool  _willClear;
}

@property (nonatomic) long long activeInterfaceOrientation;
@property (nonatomic) double blurProgress;
@property (retain) NSLayoutConstraint *bottomConstraint;
@property (retain) UIButton *cancelButton;
@property (retain) NSLayoutConstraint *cancelButtonTrailingConstraint;
@property (nonatomic, readonly) NSString *currentQuery;
@property (readonly, copy) NSString *debugDescription;
@property <SPUISearchHeaderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) _UILegibilitySettings *legibilitySettings;
@property bool offersCompletions;
@property (retain) NSArray *representedObjects;
@property (nonatomic, retain) SPSearchEntity *searchEntity;
@property (retain) SPUITextField *searchField;
@property (retain) NSLayoutConstraint *searchFieldTrailingConstraint;
@property bool searchTextScheduledForProcessing;
@property unsigned long long suggestionID;
@property (readonly) Class superclass;
@property (retain) NSLayoutConstraint *topConstraint;
@property (nonatomic) bool useInPlaceFilteredBlur;
@property (retain) NSLayoutConstraint *widthConstraint;
@property bool willClear;

- (void).cxx_destruct;
- (void)_searchWithSearchEntity:(id)arg1 fromSuggestion:(bool)arg2;
- (void)_updateClearButtonVisibility;
- (long long)activeInterfaceOrientation;
- (void)addInputMethodInformationToQueryContext:(id)arg1;
- (id)atomTextView:(id)arg1 atomViewForRepresentedObject:(id)arg2;
- (id)atomTextView:(id)arg1 representedObjectsFromPasteboard:(id)arg2;
- (bool)atomTextView:(id)arg1 storeRepresentedObjects:(id)arg2 onPasteboard:(id)arg3;
- (id)backdropVisualEffectView;
- (void)beginDictation;
- (double)blurProgress;
- (id)bottomConstraint;
- (double)bottomPadding;
- (id)cancelButton;
- (void)cancelButtonClicked:(id)arg1;
- (bool)cancelButtonIsVisible;
- (id)cancelButtonTrailingConstraint;
- (void)clearSearchFieldWhyQuery:(unsigned long long)arg1 allowZKW:(bool)arg2;
- (id)currentQuery;
- (id)currentQueryContextWithString:(id)arg1;
- (id)delegate;
- (void)dictationButtonPressed;
- (void)didMoveToSuperview;
- (void)enableDictationIfRequired;
- (void)focusSearchField;
- (void)focusSearchFieldAndBeginDictation:(bool)arg1;
- (id)init;
- (bool)isFirstResponder;
- (bool)isOnDarkBackground;
- (id)legibilitySettings;
- (bool)offersCompletions;
- (void)performTestSearchWithQuery:(id)arg1 event:(unsigned long long)arg2 sourcePreference:(long long)arg3;
- (id)representedObjects;
- (id)searchEntity;
- (id)searchField;
- (bool)searchFieldIsFocused;
- (id)searchFieldTrailingConstraint;
- (void)searchForQuery:(id)arg1 forSuggestions:(bool)arg2;
- (void)searchForSuggestion:(id)arg1;
- (bool)searchTextScheduledForProcessing;
- (void)setActiveInterfaceOrientation:(long long)arg1;
- (void)setBlurProgress:(double)arg1;
- (void)setBottomConstraint:(id)arg1;
- (void)setCancelButton:(id)arg1;
- (void)setCancelButtonTrailingConstraint:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setOffersCompletions:(bool)arg1;
- (void)setRepresentedObjects:(id)arg1;
- (void)setSearchEntity:(id)arg1;
- (void)setSearchEntity:(id)arg1 fromSuggestion:(bool)arg2;
- (void)setSearchField:(id)arg1;
- (void)setSearchFieldTrailingConstraint:(id)arg1;
- (void)setSearchTextScheduledForProcessing:(bool)arg1;
- (void)setSuggestionID:(unsigned long long)arg1;
- (void)setTopConstraint:(id)arg1;
- (void)setUseInPlaceFilteredBlur:(bool)arg1;
- (void)setWidthConstraint:(id)arg1;
- (void)setWillClear:(bool)arg1;
- (void)setupKeyboardSupportForResultViewController:(id)arg1;
- (void)showCancelButton:(bool)arg1 animated:(bool)arg2;
- (unsigned long long)suggestionID;
- (id)supportedPasteboardTypesForAtomTextView:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)textDidChange:(id)arg1 whyQuery:(unsigned long long)arg2 allowZKW:(bool)arg3;
- (void)textDidChange:(id)arg1 whyQuery:(unsigned long long)arg2 allowZKW:(bool)arg3 sourcePreference:(unsigned long long)arg4 engagedSuggestion:(id)arg5;
- (void)textFieldDidBeginEditing;
- (bool)textFieldShouldClear:(id)arg1;
- (bool)textFieldShouldReturn;
- (id)topConstraint;
- (double)topPadding;
- (void)triggerSearchForUnlock;
- (void)unfocusSearchField;
- (void)updateBlurProgress;
- (void)updateColors;
- (bool)useInPlaceFilteredBlur;
- (id)widthConstraint;
- (bool)willClear;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

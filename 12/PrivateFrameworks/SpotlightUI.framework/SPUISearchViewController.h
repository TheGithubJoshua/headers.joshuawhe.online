<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SPUISearchViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SpotlightUI.framework/SPUISearchViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SpotlightUI.framework/SpotlightUI (1)
 */

@interface SPUISearchViewController : UIViewController <APUIShortLookViewControllerDelegate, SBUIActiveOrientationObserver, SFFeedbackListener, SPUIResultViewDelegate, SPUISearchHeaderDelegate, SearchUIFirstTimeExperienceDelegate, SearchUIResultViewDelegate, UIGestureRecognizerDelegate> {
    NSMutableSet * _allHeaderViews;
    NSTimer * _clearResultsTimer;
    <SPUISearchViewControllerDelegate> * _delegate;
    SPUISearchFirstTimeViewController * _firstTimeExperienceViewController;
    bool  _internetOverrideForPPT;
    bool  _lastQueryWasAuthenticated;
    _UILegibilitySettings * _legibilitySettings;
    SPUILockScreenFooterView * _lockScreenFooterView;
    unsigned long long  _presentationMode;
    SPUIResultViewController * _proactiveResultViewController;
    SPUISearchHeader * _searchHeader;
    SPUIResultViewController * _searchResultViewController;
    SPUITestingHelper * _testingHelper;
}

@property (retain) NSMutableSet *allHeaderViews;
@property (retain) NSTimer *clearResultsTimer;
@property (readonly) NSString *currentQuery;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SPUISearchViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double distanceToTopOfAppIcons;
@property (retain) SPUISearchFirstTimeViewController *firstTimeExperienceViewController;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIView *headerView;
@property bool internetOverrideForPPT;
@property bool lastQueryWasAuthenticated;
@property (nonatomic, retain) _UILegibilitySettings *legibilitySettings;
@property (retain) SPUILockScreenFooterView *lockScreenFooterView;
@property unsigned long long presentationMode;
@property (retain) SPUIResultViewController *proactiveResultViewController;
@property (retain) SPUISearchHeader *searchHeader;
@property (retain) SPUIResultViewController *searchResultViewController;
@property (readonly) Class superclass;
@property (retain) SPUITestingHelper *testingHelper;

+ (bool)_isSuggestionResult:(id)arg1;
+ (bool)isFeedbackSelector:(SEL)arg1;
+ (bool)shouldShowAsTypedSuggestion;

- (void).cxx_destruct;
- (void)activateFirstTimeExperienceViewAnimate:(bool)arg1;
- (void)activateFirstTimeExperienceViewIfNecessary;
- (void)activateViewController:(id)arg1 animate:(bool)arg2;
- (void)activeInterfaceOrientationDidChangeToOrientation:(long long)arg1 willAnimateWithDuration:(double)arg2 fromOrientation:(long long)arg3;
- (void)activeInterfaceOrientationWillChangeToOrientation:(long long)arg1;
- (id)activeViewController;
- (id)allHeaderViews;
- (bool)allowInternet;
- (void)cancelButtonPressed;
- (id)clearResultsTimer;
- (void)clearSearchResults;
- (void)clearTimerExpired;
- (id)contentScrollView;
- (id)createAdditionalHeaderView;
- (id)currentQuery;
- (void)dealloc;
- (id)delegate;
- (void)dictationButtonPressed;
- (void)didBeginEditing;
- (void)didBeginScrollingResults;
- (void)didChangeExpansionStateForSection:(id)arg1 expanded:(bool)arg2;
- (void)didEngageResult:(id)arg1;
- (void)didScrollPastBottomOfContent;
- (void)didTapInEmptyRegion;
- (void)didUpdateContentScrolledOffScreenStatus:(bool)arg1 animated:(bool)arg2;
- (void)didUpdateFromResults;
- (double)distanceToTopOfAppIcons;
- (void)firstTimeExperienceContinueButtonPressed;
- (id)firstTimeExperienceViewController;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)getUserActivityForResult:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)hasShortLookViewControllerForResult:(id)arg1;
- (id)headerView;
- (void)hideKeyboard;
- (id)homeScreenBringUpTestName;
- (id)init;
- (bool)internetOverrideForPPT;
- (bool)isRunningHomeScreenBringUpTest;
- (bool)lastQueryWasAuthenticated;
- (id)legibilitySettings;
- (void)loadView;
- (id)lockScreenFooterView;
- (void)performSearchWithQuery:(id)arg1 forSuggestions:(bool)arg2;
- (void)performSearchWithSuggestion:(id)arg1;
- (void)performTestSearchWithQuery:(id)arg1 event:(unsigned long long)arg2 sourcePreference:(long long)arg3;
- (unsigned long long)presentationMode;
- (id)proactiveResultViewController;
- (void)queryContextDidChange:(id)arg1 fromSearchHeader:(id)arg2 allowZKW:(bool)arg3;
- (bool)queryIsPresent;
- (bool)respondsToSelector:(SEL)arg1;
- (bool)runTest:(id)arg1 options:(id)arg2 unlockSpringBoard:(id /* block */)arg3 enterSpotlight:(id /* block */)arg4 exitSpotlight:(id /* block */)arg5;
- (id)searchHeader;
- (id)searchResultViewController;
- (id)searchResultsTestingObject;
- (void)searchViewDidDismissWithReason:(unsigned long long)arg1;
- (void)searchViewDidPresentFromSource:(unsigned long long)arg1;
- (void)searchViewDidUpdatePresentationProgress:(double)arg1;
- (void)searchViewWillDismissWithReason:(unsigned long long)arg1;
- (void)searchViewWillPresentFromSource:(unsigned long long)arg1;
- (bool)sectionShouldBeExpanded:(id)arg1;
- (void)sendActionFeedbackFromShortLookViewController:(id)arg1 isPunchout:(bool)arg2;
- (void)setAllHeaderViews:(id)arg1;
- (void)setClearResultsTimer:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFirstTimeExperienceViewController:(id)arg1;
- (void)setInternetOverrideForPPT:(bool)arg1;
- (void)setInternetOverrideToDisable:(bool)arg1;
- (void)setLastQueryWasAuthenticated:(bool)arg1;
- (void)setLegibilitySettings:(id)arg1;
- (void)setLockScreenFooterView:(id)arg1;
- (void)setPresentationMode:(unsigned long long)arg1;
- (void)setProactiveResultViewController:(id)arg1;
- (void)setSearchHeader:(id)arg1;
- (void)setSearchResultViewController:(id)arg1;
- (void)setTestingHelper:(id)arg1;
- (void)shortLookViewController:(id)arg1 didCompleteActionWithResult:(long long)arg2;
- (void)shortLookViewController:(id)arg1 didDismissLongLookWithReason:(long long)arg2 actionCompleted:(bool)arg3 shouldClearAction:(bool)arg4;
- (void)shortLookViewController:(id)arg1 willDismissLongLookWithReason:(long long)arg2 actionCompleted:(bool)arg3 shouldClearAction:(bool)arg4;
- (void)shortLookViewController:(id)arg1 willDisplayLongLookWithReason:(long long)arg2;
- (id)shortLookViewControllerForResult:(id)arg1;
- (void)shortLookViewControllerWillBeginUserInteraction:(id)arg1;
- (id)testingHelper;
- (void)updateHeaderViewsWithBlock:(id /* block */)arg1;
- (id)userActivityFromIntent:(id)arg1;
- (id)viewControllerForPresenting;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>APSAWDAirPlayDiscoveryPeer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AirPlaySupport.framework/APSAWDAirPlayDiscoveryPeer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AirPlaySupport.framework/AirPlaySupport (387.2)
 */

@interface APSAWDAirPlayDiscoveryPeer : PBCodable <NSCopying> {
    bool  _aggregated;
    unsigned long long  _awdlAirPlayTXTReceivedMs;
    unsigned long long  _awdlRAOPTXTReceivedMs;
    int  _awdlRSSI;
    int  _btleRSSI;
    int  _deviceFeature;
    NSString * _discoverySessionUUID;
    struct { 
        unsigned int awdlAirPlayTXTReceivedMs : 1; 
        unsigned int awdlRAOPTXTReceivedMs : 1; 
        unsigned int startTime : 1; 
        unsigned int targetPresenceBeaconReceivedMs : 1; 
        unsigned int timestamp : 1; 
        unsigned int wifiAirPlayTXTReceivedMs : 1; 
        unsigned int wifiRAOPTXTReceivedMs : 1; 
        unsigned int awdlRSSI : 1; 
        unsigned int btleRSSI : 1; 
        unsigned int deviceFeature : 1; 
        unsigned int status : 1; 
        unsigned int wifiRSSI : 1; 
        unsigned int aggregated : 1; 
    }  _has;
    unsigned long long  _startTime;
    int  _status;
    unsigned long long  _targetPresenceBeaconReceivedMs;
    unsigned long long  _timestamp;
    unsigned long long  _wifiAirPlayTXTReceivedMs;
    unsigned long long  _wifiRAOPTXTReceivedMs;
    int  _wifiRSSI;
}

@property (nonatomic) bool aggregated;
@property (nonatomic) unsigned long long awdlAirPlayTXTReceivedMs;
@property (nonatomic) unsigned long long awdlRAOPTXTReceivedMs;
@property (nonatomic) int awdlRSSI;
@property (nonatomic) int btleRSSI;
@property (nonatomic) int deviceFeature;
@property (nonatomic, retain) NSString *discoverySessionUUID;
@property (nonatomic) bool hasAggregated;
@property (nonatomic) bool hasAwdlAirPlayTXTReceivedMs;
@property (nonatomic) bool hasAwdlRAOPTXTReceivedMs;
@property (nonatomic) bool hasAwdlRSSI;
@property (nonatomic) bool hasBtleRSSI;
@property (nonatomic) bool hasDeviceFeature;
@property (nonatomic, readonly) bool hasDiscoverySessionUUID;
@property (nonatomic) bool hasStartTime;
@property (nonatomic) bool hasStatus;
@property (nonatomic) bool hasTargetPresenceBeaconReceivedMs;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasWifiAirPlayTXTReceivedMs;
@property (nonatomic) bool hasWifiRAOPTXTReceivedMs;
@property (nonatomic) bool hasWifiRSSI;
@property (nonatomic) unsigned long long startTime;
@property (nonatomic) int status;
@property (nonatomic) unsigned long long targetPresenceBeaconReceivedMs;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned long long wifiAirPlayTXTReceivedMs;
@property (nonatomic) unsigned long long wifiRAOPTXTReceivedMs;
@property (nonatomic) int wifiRSSI;

- (bool)aggregated;
- (unsigned long long)awdlAirPlayTXTReceivedMs;
- (unsigned long long)awdlRAOPTXTReceivedMs;
- (int)awdlRSSI;
- (int)btleRSSI;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (int)deviceFeature;
- (id)dictionaryRepresentation;
- (id)discoverySessionUUID;
- (bool)hasAggregated;
- (bool)hasAwdlAirPlayTXTReceivedMs;
- (bool)hasAwdlRAOPTXTReceivedMs;
- (bool)hasAwdlRSSI;
- (bool)hasBtleRSSI;
- (bool)hasDeviceFeature;
- (bool)hasDiscoverySessionUUID;
- (bool)hasStartTime;
- (bool)hasStatus;
- (bool)hasTargetPresenceBeaconReceivedMs;
- (bool)hasTimestamp;
- (bool)hasWifiAirPlayTXTReceivedMs;
- (bool)hasWifiRAOPTXTReceivedMs;
- (bool)hasWifiRSSI;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setAggregated:(bool)arg1;
- (void)setAwdlAirPlayTXTReceivedMs:(unsigned long long)arg1;
- (void)setAwdlRAOPTXTReceivedMs:(unsigned long long)arg1;
- (void)setAwdlRSSI:(int)arg1;
- (void)setBtleRSSI:(int)arg1;
- (void)setDeviceFeature:(int)arg1;
- (void)setDiscoverySessionUUID:(id)arg1;
- (void)setHasAggregated:(bool)arg1;
- (void)setHasAwdlAirPlayTXTReceivedMs:(bool)arg1;
- (void)setHasAwdlRAOPTXTReceivedMs:(bool)arg1;
- (void)setHasAwdlRSSI:(bool)arg1;
- (void)setHasBtleRSSI:(bool)arg1;
- (void)setHasDeviceFeature:(bool)arg1;
- (void)setHasStartTime:(bool)arg1;
- (void)setHasStatus:(bool)arg1;
- (void)setHasTargetPresenceBeaconReceivedMs:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasWifiAirPlayTXTReceivedMs:(bool)arg1;
- (void)setHasWifiRAOPTXTReceivedMs:(bool)arg1;
- (void)setHasWifiRSSI:(bool)arg1;
- (void)setStartTime:(unsigned long long)arg1;
- (void)setStatus:(int)arg1;
- (void)setTargetPresenceBeaconReceivedMs:(unsigned long long)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setWifiAirPlayTXTReceivedMs:(unsigned long long)arg1;
- (void)setWifiRAOPTXTReceivedMs:(unsigned long long)arg1;
- (void)setWifiRSSI:(int)arg1;
- (unsigned long long)startTime;
- (int)status;
- (unsigned long long)targetPresenceBeaconReceivedMs;
- (unsigned long long)timestamp;
- (unsigned long long)wifiAirPlayTXTReceivedMs;
- (unsigned long long)wifiRAOPTXTReceivedMs;
- (int)wifiRSSI;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

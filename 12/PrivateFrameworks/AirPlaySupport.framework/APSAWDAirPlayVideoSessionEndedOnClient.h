<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>APSAWDAirPlayVideoSessionEndedOnClient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AirPlaySupport.framework/APSAWDAirPlayVideoSessionEndedOnClient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AirPlaySupport.framework/AirPlaySupport (387.2)
 */

@interface APSAWDAirPlayVideoSessionEndedOnClient : PBCodable <NSCopying> {
    double  _bandwidthMax;
    double  _bandwidthMean;
    double  _bandwidthStdDev;
    unsigned int  _duration;
    struct { 
        unsigned int bandwidthMax : 1; 
        unsigned int bandwidthMean : 1; 
        unsigned int bandwidthStdDev : 1; 
        unsigned int timestamp : 1; 
        unsigned int duration : 1; 
        unsigned int localFairPlayCount : 1; 
        unsigned int localNonFairPlayCount : 1; 
        unsigned int readyToPlayMs : 1; 
        unsigned int reason : 1; 
        unsigned int remoteFairPlayCount : 1; 
        unsigned int remoteNonFairPlayCount : 1; 
        unsigned int stallCount : 1; 
    }  _has;
    unsigned int  _localFairPlayCount;
    unsigned int  _localNonFairPlayCount;
    unsigned int  _readyToPlayMs;
    int  _reason;
    unsigned int  _remoteFairPlayCount;
    unsigned int  _remoteNonFairPlayCount;
    NSString * _sessionUUID;
    unsigned int  _stallCount;
    unsigned long long  _timestamp;
}

@property (nonatomic) double bandwidthMax;
@property (nonatomic) double bandwidthMean;
@property (nonatomic) double bandwidthStdDev;
@property (nonatomic) unsigned int duration;
@property (nonatomic) bool hasBandwidthMax;
@property (nonatomic) bool hasBandwidthMean;
@property (nonatomic) bool hasBandwidthStdDev;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasLocalFairPlayCount;
@property (nonatomic) bool hasLocalNonFairPlayCount;
@property (nonatomic) bool hasReadyToPlayMs;
@property (nonatomic) bool hasReason;
@property (nonatomic) bool hasRemoteFairPlayCount;
@property (nonatomic) bool hasRemoteNonFairPlayCount;
@property (nonatomic, readonly) bool hasSessionUUID;
@property (nonatomic) bool hasStallCount;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) unsigned int localFairPlayCount;
@property (nonatomic) unsigned int localNonFairPlayCount;
@property (nonatomic) unsigned int readyToPlayMs;
@property (nonatomic) int reason;
@property (nonatomic) unsigned int remoteFairPlayCount;
@property (nonatomic) unsigned int remoteNonFairPlayCount;
@property (nonatomic, retain) NSString *sessionUUID;
@property (nonatomic) unsigned int stallCount;
@property (nonatomic) unsigned long long timestamp;

- (double)bandwidthMax;
- (double)bandwidthMean;
- (double)bandwidthStdDev;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)duration;
- (bool)hasBandwidthMax;
- (bool)hasBandwidthMean;
- (bool)hasBandwidthStdDev;
- (bool)hasDuration;
- (bool)hasLocalFairPlayCount;
- (bool)hasLocalNonFairPlayCount;
- (bool)hasReadyToPlayMs;
- (bool)hasReason;
- (bool)hasRemoteFairPlayCount;
- (bool)hasRemoteNonFairPlayCount;
- (bool)hasSessionUUID;
- (bool)hasStallCount;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (unsigned int)localFairPlayCount;
- (unsigned int)localNonFairPlayCount;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (unsigned int)readyToPlayMs;
- (int)reason;
- (unsigned int)remoteFairPlayCount;
- (unsigned int)remoteNonFairPlayCount;
- (id)sessionUUID;
- (void)setBandwidthMax:(double)arg1;
- (void)setBandwidthMean:(double)arg1;
- (void)setBandwidthStdDev:(double)arg1;
- (void)setDuration:(unsigned int)arg1;
- (void)setHasBandwidthMax:(bool)arg1;
- (void)setHasBandwidthMean:(bool)arg1;
- (void)setHasBandwidthStdDev:(bool)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasLocalFairPlayCount:(bool)arg1;
- (void)setHasLocalNonFairPlayCount:(bool)arg1;
- (void)setHasReadyToPlayMs:(bool)arg1;
- (void)setHasReason:(bool)arg1;
- (void)setHasRemoteFairPlayCount:(bool)arg1;
- (void)setHasRemoteNonFairPlayCount:(bool)arg1;
- (void)setHasStallCount:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setLocalFairPlayCount:(unsigned int)arg1;
- (void)setLocalNonFairPlayCount:(unsigned int)arg1;
- (void)setReadyToPlayMs:(unsigned int)arg1;
- (void)setReason:(int)arg1;
- (void)setRemoteFairPlayCount:(unsigned int)arg1;
- (void)setRemoteNonFairPlayCount:(unsigned int)arg1;
- (void)setSessionUUID:(id)arg1;
- (void)setStallCount:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (unsigned int)stallCount;
- (unsigned long long)timestamp;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NPTOImageView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoPhotosUICompanion.framework/NPTOImageView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoPhotosUICompanion.framework/NanoPhotosUICompanion (1)
 */

@interface NPTOImageView : UIView <NPTOIrisViewDelegate, UIScrollViewDelegate> {
    PHAsset * _asset;
    NSString * _assetPath;
    struct CGPoint { 
        double x; 
        double y; 
    }  _contentOffset;
    <NPTOImageViewDelegate> * _delegate;
    UIImage * _fullImage;
    NPTOIrisView * _imageView;
    double  _irisSDT;
    NSURL * _irisURL;
    double  _irisVDT;
    bool  _loaded;
    struct CGPoint { 
        double x; 
        double y; 
    }  _offcenterAdjustment;
    NPTOPhoto * _photo;
    UIScrollView * _scroller;
    double  _zoomScale;
}

@property (nonatomic, retain) PHAsset *asset;
@property (nonatomic, copy) NSString *assetPath;
@property (nonatomic) struct CGPoint { double x1; double x2; } contentOffset;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIImage *fullImage;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NPTOIrisView *imageView;
@property (nonatomic) double interactiveProgress;
@property (nonatomic, retain) NPTOPhoto *photo;
@property (nonatomic, retain) UIScrollView *scroller;
@property (readonly) Class superclass;
@property (nonatomic) double zoomScale;

+ (void)savePhoto:(id)arg1 contentOffset:(struct CGPoint { double x1; double x2; })arg2 zoomScale:(double)arg3 inDirectory:(id)arg4 completion:(id /* block */)arg5;
+ (void)savePhoto:(id)arg1 contentOffset:(struct CGPoint { double x1; double x2; })arg2 zoomScale:(double)arg3 supplement:(id)arg4 inDirectory:(id)arg5 completion:(id /* block */)arg6;
+ (void)savePhoto:(id)arg1 imageData:(id)arg2 irisURL:(id)arg3 contentOffset:(struct CGPoint { double x1; double x2; })arg4 zoomScale:(double)arg5 supplement:(id)arg6 inDirectory:(id)arg7 completion:(id /* block */)arg8;

- (void).cxx_destruct;
- (void)_updateView;
- (id)asset;
- (id)assetPath;
- (struct CGPoint { double x1; double x2; })contentOffset;
- (id)delegate;
- (id)fullImage;
- (id)imageView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)interactiveProgress;
- (void)interruptPlayback;
- (void)irisViewDidBeginPlaying:(id)arg1;
- (void)irisViewDidEndPlaying:(id)arg1;
- (bool)isPlaying;
- (void)layoutSubviews;
- (struct CGPoint { double x1; double x2; })offcenterAdjustment;
- (void)pauseWithMode:(long long)arg1;
- (id)photo;
- (void)playWithMode:(long long)arg1;
- (void)prepareToPlayWithMode:(long long)arg1;
- (void)reload:(bool)arg1;
- (void)resumeInterruptedPlayback;
- (id)scroller;
- (void)setAsset:(id)arg1;
- (void)setAssetPath:(id)arg1;
- (void)setContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setFullImage:(id)arg1;
- (void)setImageView:(id)arg1;
- (void)setInteractiveProgress:(double)arg1;
- (void)setOffcenterAdjustment:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPhoto:(id)arg1;
- (void)setPhoto:(id)arg1 withImage:(id)arg2 allowIris:(bool)arg3;
- (void)setScroller:(id)arg1;
- (void)setZoomScale:(double)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (double)zoomScale;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

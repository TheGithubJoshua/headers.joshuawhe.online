<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SCRCMathExpression.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ScreenReaderCore.framework/SCRCMathExpression.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore (562.44)
 */

@interface SCRCMathExpression : NSObject {
    unsigned long long  _cachedMaximumDepth;
    SCRCMathExpression * _parent;
}

@property (nonatomic, readonly) bool beginsWithSpace;
@property (nonatomic, readonly) bool canBeUsedWithBase;
@property (nonatomic, readonly) bool canBeUsedWithRange;
@property (nonatomic, readonly) bool canBeWrappedInLatexMathIndicators;
@property (nonatomic, readonly) NSArray *children;
@property (nonatomic, readonly) bool endsWithSpace;
@property (nonatomic, readonly) unsigned long long fractionLevel;
@property (nonatomic, readonly) bool hasSimpleArrayOfChildren;
@property (nonatomic, readonly) long long integerValue;
@property (nonatomic, readonly) bool isBaseSubSuperscript;
@property (nonatomic, readonly) bool isEllipsis;
@property (nonatomic, readonly) bool isFenceDelimiter;
@property (nonatomic, readonly) bool isFunctionName;
@property (nonatomic, readonly) bool isInteger;
@property (nonatomic, readonly) bool isMultiRowTable;
@property (nonatomic, readonly) bool isNaturalSuperscript;
@property (nonatomic, readonly) bool isNumber;
@property (nonatomic, readonly) bool isOperationSymbol;
@property (nonatomic, readonly) bool isRangeSubSuperscript;
@property (nonatomic, readonly) bool isSimpleNumericalFraction;
@property (nonatomic, readonly) bool isTermSeparator;
@property (nonatomic, readonly) bool isUnlinedFraction;
@property (nonatomic, readonly) bool isWordOrAbbreviation;
@property (nonatomic, readonly) NSString *latexFormatStringAsOver;
@property (nonatomic, readonly) NSString *latexFormatStringAsUnder;
@property (nonatomic) SCRCMathExpression *parent;
@property (nonatomic, readonly) NSArray *siblings;
@property (nonatomic, readonly) NSArray *subExpressions;

+ (Class)_classForExpressionType:(id)arg1;
+ (id)mathExpressionWithDictionary:(id)arg1;
+ (void)setPathToSegmentOrderingPlist:(id)arg1;

- (void).cxx_destruct;
- (void)_applyTreePositionOfOriginalSegment:(id)arg1 toPrefixedOrSuffixedSegment:(id)arg2;
- (id)_scrcBundle;
- (id)arrayWithoutNilsFromFirstChild:(id)arg1 secondChild:(id)arg2 thirdChild:(id)arg3;
- (bool)beginsWithSpace;
- (bool)canBeUsedWithBase;
- (bool)canBeUsedWithRange;
- (bool)canBeWrappedInLatexMathIndicators;
- (bool)canFormWordStartingWithExpression:(id)arg1;
- (id)children;
- (id)dollarCodeDescription;
- (id)dollarCodeDescriptionAsBinomialCoefficientWithTreePosition:(id)arg1 numberOfOuterRadicals:(unsigned long long)arg2;
- (id)dollarCodeDescriptionAsMixedNumberFractionWithTreePosition:(id)arg1;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2 openOperator:(id)arg3 openOperatorTreePosition:(id)arg4 closeOperator:(id)arg5 closeOperatorTreePosition:(id)arg6;
- (bool)endsWithSpace;
- (id)fenceDelimiters;
- (unsigned long long)fractionLevel;
- (bool)hasSimpleArrayOfChildren;
- (id)initWithDictionary:(id)arg1;
- (long long)integerValue;
- (bool)isBaseSubSuperscript;
- (bool)isEllipsis;
- (bool)isFenceDelimiter;
- (bool)isFunctionName;
- (bool)isInteger;
- (bool)isMultiRowTable;
- (bool)isNaturalSuperscript;
- (bool)isNumber;
- (bool)isOperationSymbol;
- (bool)isRangeSubSuperscript;
- (bool)isSimpleNumericalFraction;
- (bool)isTermSeparator;
- (bool)isUnlinedFraction;
- (bool)isWordOrAbbreviation;
- (id)latexDescription;
- (id)latexDescriptionForChildrenJoinedByString:(id)arg1;
- (id)latexDescriptionInMathMode:(bool)arg1;
- (id)latexFormatStringAsOver;
- (id)latexFormatStringAsUnder;
- (id)latexIdentifierForFenceOperator:(id)arg1 isClosingOperator:(bool)arg2;
- (id)latexIdentifierForIdentifier:(id)arg1;
- (id)latexMathModeDescription;
- (id)localizedAttributedStringForKey:(id)arg1;
- (id)localizedAttributedStringForKey:(id)arg1 treePosition:(id)arg2;
- (id)localizedSegmentOrderingForKey:(id)arg1;
- (id)localizedStringForKey:(id)arg1;
- (id)localizedStringForNumber:(id)arg1;
- (id)mathMLString;
- (unsigned long long)maximumDepth;
- (unsigned long long)maximumFractionLevelOfSubExpressions;
- (unsigned long long)numberOfTables;
- (id)parent;
- (void)setParent:(id)arg1;
- (id)siblings;
- (id)speakableDescription;
- (id)speakableDescriptionAsBinomialCoefficientWithSpeakingStyle:(int)arg1;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(bool)arg2;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(bool)arg2 isPartOfWord:(bool)arg3;
- (id)speakableSegments:(id)arg1 withLocalizablePrefix:(id)arg2 localizableSuffix:(id)arg3;
- (id)speakableSegments:(id)arg1 withPrefix:(id)arg2 suffix:(id)arg3;
- (id)speakableSegmentsAsBinomialCoefficientWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableSegmentsUpToDepth:(unsigned long long)arg1;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3 localizablePrefix:(id)arg4 localizableSuffix:(id)arg5;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3 prefix:(id)arg4 suffix:(id)arg5;
- (id)speakableSummary;
- (id)subExpressions;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

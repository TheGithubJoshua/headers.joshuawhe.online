<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BLTPBSectionInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BulletinDistributorCompanion.framework/BLTPBSectionInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BulletinDistributorCompanion.framework/BulletinDistributorCompanion (1)
 */

@interface BLTPBSectionInfo : PBCodable <NSCopying> {
    unsigned int  _alertType;
    bool  _allowsNotifications;
    int  _authorizationStatus;
    bool  _criticalAlertSetting;
    NSString * _displayName;
    bool  _displaysCriticalBulletins;
    bool  _excludeFromBulletinBoard;
    NSString * _factorySectionID;
    int  _groupingSetting;
    struct { 
        unsigned int alertType : 1; 
        unsigned int authorizationStatus : 1; 
        unsigned int groupingSetting : 1; 
        unsigned int lockScreenSetting : 1; 
        unsigned int notificationCenterLimit : 1; 
        unsigned int notificationCenterSetting : 1; 
        unsigned int phoneAuthorizationStatus : 1; 
        unsigned int pushSettings : 1; 
        unsigned int sectionCategory : 1; 
        unsigned int sectionType : 1; 
        unsigned int subsectionPriority : 1; 
        unsigned int suppressedSettings : 1; 
        unsigned int version : 1; 
        unsigned int allowsNotifications : 1; 
        unsigned int criticalAlertSetting : 1; 
        unsigned int displaysCriticalBulletins : 1; 
        unsigned int excludeFromBulletinBoard : 1; 
        unsigned int iconsStripped : 1; 
        unsigned int phoneAllowsNotifications : 1; 
        unsigned int showsInLockScreen : 1; 
        unsigned int showsInNotificationCenter : 1; 
        unsigned int showsMessagePreview : 1; 
        unsigned int showsOnExternalDevices : 1; 
        unsigned int suppressFromSettings : 1; 
    }  _has;
    BLTPBSectionIcon * _icon;
    bool  _iconsStripped;
    int  _lockScreenSetting;
    unsigned int  _notificationCenterLimit;
    int  _notificationCenterSetting;
    bool  _phoneAllowsNotifications;
    int  _phoneAuthorizationStatus;
    unsigned int  _pushSettings;
    int  _sectionCategory;
    NSString * _sectionID;
    int  _sectionType;
    bool  _showsInLockScreen;
    bool  _showsInNotificationCenter;
    bool  _showsMessagePreview;
    bool  _showsOnExternalDevices;
    NSString * _subsectionID;
    int  _subsectionPriority;
    NSMutableArray * _subsections;
    bool  _suppressFromSettings;
    unsigned int  _suppressedSettings;
    NSString * _universalSectionID;
    unsigned int  _version;
}

@property (nonatomic) unsigned int alertType;
@property (nonatomic) bool allowsNotifications;
@property (nonatomic) int authorizationStatus;
@property (nonatomic) bool criticalAlertSetting;
@property (nonatomic, retain) NSString *displayName;
@property (nonatomic) bool displaysCriticalBulletins;
@property (nonatomic) bool excludeFromBulletinBoard;
@property (nonatomic, retain) NSString *factorySectionID;
@property (nonatomic) int groupingSetting;
@property (nonatomic) bool hasAlertType;
@property (nonatomic) bool hasAllowsNotifications;
@property (nonatomic) bool hasAuthorizationStatus;
@property (nonatomic) bool hasCriticalAlertSetting;
@property (nonatomic, readonly) bool hasDisplayName;
@property (nonatomic) bool hasDisplaysCriticalBulletins;
@property (nonatomic) bool hasExcludeFromBulletinBoard;
@property (nonatomic, readonly) bool hasFactorySectionID;
@property (nonatomic) bool hasGroupingSetting;
@property (nonatomic, readonly) bool hasIcon;
@property (nonatomic) bool hasIconsStripped;
@property (nonatomic) bool hasLockScreenSetting;
@property (nonatomic) bool hasNotificationCenterLimit;
@property (nonatomic) bool hasNotificationCenterSetting;
@property (nonatomic) bool hasPhoneAllowsNotifications;
@property (nonatomic) bool hasPhoneAuthorizationStatus;
@property (nonatomic) bool hasPushSettings;
@property (nonatomic) bool hasSectionCategory;
@property (nonatomic, readonly) bool hasSectionID;
@property (nonatomic) bool hasSectionType;
@property (nonatomic) bool hasShowsInLockScreen;
@property (nonatomic) bool hasShowsInNotificationCenter;
@property (nonatomic) bool hasShowsMessagePreview;
@property (nonatomic) bool hasShowsOnExternalDevices;
@property (nonatomic, readonly) bool hasSubsectionID;
@property (nonatomic) bool hasSubsectionPriority;
@property (nonatomic) bool hasSuppressFromSettings;
@property (nonatomic) bool hasSuppressedSettings;
@property (nonatomic, readonly) bool hasUniversalSectionID;
@property (nonatomic) bool hasVersion;
@property (nonatomic, retain) BLTPBSectionIcon *icon;
@property (nonatomic) bool iconsStripped;
@property (nonatomic) int lockScreenSetting;
@property (nonatomic) unsigned int notificationCenterLimit;
@property (nonatomic) int notificationCenterSetting;
@property (nonatomic) bool phoneAllowsNotifications;
@property (nonatomic) int phoneAuthorizationStatus;
@property (nonatomic) unsigned int pushSettings;
@property (nonatomic) int sectionCategory;
@property (nonatomic, retain) NSString *sectionID;
@property (nonatomic) int sectionType;
@property (nonatomic) bool showsInLockScreen;
@property (nonatomic) bool showsInNotificationCenter;
@property (nonatomic) bool showsMessagePreview;
@property (nonatomic) bool showsOnExternalDevices;
@property (nonatomic, retain) NSString *subsectionID;
@property (nonatomic) int subsectionPriority;
@property (nonatomic, retain) NSMutableArray *subsections;
@property (nonatomic) bool suppressFromSettings;
@property (nonatomic) unsigned int suppressedSettings;
@property (nonatomic, retain) NSString *universalSectionID;
@property (nonatomic) unsigned int version;

+ (Class)subsectionsType;

- (void).cxx_destruct;
- (int)StringAsGroupingSetting:(id)arg1;
- (int)StringAsLockScreenSetting:(id)arg1;
- (int)StringAsNotificationCenterSetting:(id)arg1;
- (void)addSubsections:(id)arg1;
- (unsigned int)alertType;
- (bool)allowsNotifications;
- (int)authorizationStatus;
- (void)clearSubsections;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)criticalAlertSetting;
- (id)description;
- (id)description;
- (id)dictionaryRepresentation;
- (id)displayName;
- (bool)displaysCriticalBulletins;
- (bool)excludeFromBulletinBoard;
- (id)factorySectionID;
- (int)groupingSetting;
- (id)groupingSettingAsString:(int)arg1;
- (bool)hasAlertType;
- (bool)hasAllowsNotifications;
- (bool)hasAuthorizationStatus;
- (bool)hasCriticalAlertSetting;
- (bool)hasDisplayName;
- (bool)hasDisplaysCriticalBulletins;
- (bool)hasExcludeFromBulletinBoard;
- (bool)hasFactorySectionID;
- (bool)hasGroupingSetting;
- (bool)hasIcon;
- (bool)hasIconsStripped;
- (bool)hasLockScreenSetting;
- (bool)hasNotificationCenterLimit;
- (bool)hasNotificationCenterSetting;
- (bool)hasPhoneAllowsNotifications;
- (bool)hasPhoneAuthorizationStatus;
- (bool)hasPushSettings;
- (bool)hasSectionCategory;
- (bool)hasSectionID;
- (bool)hasSectionType;
- (bool)hasShowsInLockScreen;
- (bool)hasShowsInNotificationCenter;
- (bool)hasShowsMessagePreview;
- (bool)hasShowsOnExternalDevices;
- (bool)hasSubsectionID;
- (bool)hasSubsectionPriority;
- (bool)hasSuppressFromSettings;
- (bool)hasSuppressedSettings;
- (bool)hasUniversalSectionID;
- (bool)hasVersion;
- (unsigned long long)hash;
- (id)icon;
- (bool)iconsStripped;
- (bool)isEqual:(id)arg1;
- (int)lockScreenSetting;
- (id)lockScreenSettingAsString:(int)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned int)notificationCenterLimit;
- (int)notificationCenterSetting;
- (id)notificationCenterSettingAsString:(int)arg1;
- (bool)phoneAllowsNotifications;
- (int)phoneAuthorizationStatus;
- (unsigned int)pushSettings;
- (bool)readFrom:(id)arg1;
- (int)sectionCategory;
- (id)sectionID;
- (int)sectionType;
- (void)setAlertType:(unsigned int)arg1;
- (void)setAllowsNotifications:(bool)arg1;
- (void)setAuthorizationStatus:(int)arg1;
- (void)setCriticalAlertSetting:(bool)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setDisplaysCriticalBulletins:(bool)arg1;
- (void)setExcludeFromBulletinBoard:(bool)arg1;
- (void)setFactorySectionID:(id)arg1;
- (void)setGroupingSetting:(int)arg1;
- (void)setHasAlertType:(bool)arg1;
- (void)setHasAllowsNotifications:(bool)arg1;
- (void)setHasAuthorizationStatus:(bool)arg1;
- (void)setHasCriticalAlertSetting:(bool)arg1;
- (void)setHasDisplaysCriticalBulletins:(bool)arg1;
- (void)setHasExcludeFromBulletinBoard:(bool)arg1;
- (void)setHasGroupingSetting:(bool)arg1;
- (void)setHasIconsStripped:(bool)arg1;
- (void)setHasLockScreenSetting:(bool)arg1;
- (void)setHasNotificationCenterLimit:(bool)arg1;
- (void)setHasNotificationCenterSetting:(bool)arg1;
- (void)setHasPhoneAllowsNotifications:(bool)arg1;
- (void)setHasPhoneAuthorizationStatus:(bool)arg1;
- (void)setHasPushSettings:(bool)arg1;
- (void)setHasSectionCategory:(bool)arg1;
- (void)setHasSectionType:(bool)arg1;
- (void)setHasShowsInLockScreen:(bool)arg1;
- (void)setHasShowsInNotificationCenter:(bool)arg1;
- (void)setHasShowsMessagePreview:(bool)arg1;
- (void)setHasShowsOnExternalDevices:(bool)arg1;
- (void)setHasSubsectionPriority:(bool)arg1;
- (void)setHasSuppressFromSettings:(bool)arg1;
- (void)setHasSuppressedSettings:(bool)arg1;
- (void)setHasVersion:(bool)arg1;
- (void)setIcon:(id)arg1;
- (void)setIconsStripped:(bool)arg1;
- (void)setLockScreenSetting:(int)arg1;
- (void)setNotificationCenterLimit:(unsigned int)arg1;
- (void)setNotificationCenterSetting:(int)arg1;
- (void)setPhoneAllowsNotifications:(bool)arg1;
- (void)setPhoneAuthorizationStatus:(int)arg1;
- (void)setPushSettings:(unsigned int)arg1;
- (void)setSectionCategory:(int)arg1;
- (void)setSectionID:(id)arg1;
- (void)setSectionType:(int)arg1;
- (void)setShowsInLockScreen:(bool)arg1;
- (void)setShowsInNotificationCenter:(bool)arg1;
- (void)setShowsMessagePreview:(bool)arg1;
- (void)setShowsOnExternalDevices:(bool)arg1;
- (void)setSubsectionID:(id)arg1;
- (void)setSubsectionPriority:(int)arg1;
- (void)setSubsections:(id)arg1;
- (void)setSuppressFromSettings:(bool)arg1;
- (void)setSuppressedSettings:(unsigned int)arg1;
- (void)setUniversalSectionID:(id)arg1;
- (void)setVersion:(unsigned int)arg1;
- (bool)showsInLockScreen;
- (bool)showsInNotificationCenter;
- (bool)showsMessagePreview;
- (bool)showsOnExternalDevices;
- (id)subsectionID;
- (int)subsectionPriority;
- (id)subsections;
- (id)subsectionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)subsectionsCount;
- (bool)suppressFromSettings;
- (unsigned int)suppressedSettings;
- (id)universalSectionID;
- (unsigned int)version;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

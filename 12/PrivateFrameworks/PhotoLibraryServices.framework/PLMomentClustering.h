<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLMomentClustering.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLMomentClustering.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLMomentClustering : NSObject {
    NSMutableDictionary * __clustersByNodeObjectID;
    NSMutableDictionary * __clustersByObjectID;
    NSMutableDictionary * __markedNodesByObjectID;
    unsigned long long  __minimumNumberOfNodes;
    PLMomentNodeCache * __nodeCache;
    unsigned long long  __numberOfVisitedNodes;
    unsigned long long  __totalNumberOfNodes;
    bool  _accumulatesSmallClusters;
    double  _accumulationJoinThreshold;
    double  _accumulationRejectionThreshold;
    double  _accumulationRejectionTimeInterval;
    unsigned long long  _accumulationSize;
    double  _accumulationTimeInterval;
    NSArray * _clusters;
    NSSet * _deletedClusters;
    bool  _dirty;
    bool  _hasLocationsOfInterestInformation;
    NSSet * _insertedClusters;
    NSArray * _locationsOfInterest;
    id /* block */  _progressBlock;
    bool  _shouldApplyUserInfluenceBeforeClustering;
    bool  _shouldRunUserInfluence;
    double  _sigma;
    double  _spatialJoinThreshold;
    double  _spatialJoinTimeInterval;
    bool  _spatialJoinsAdjacentClusters;
    double  _theta;
    NSSet * _updatedClusters;
}

@property (nonatomic, readonly) NSMutableDictionary *_clustersByNodeObjectID;
@property (nonatomic, readonly) NSMutableDictionary *_clustersByObjectID;
@property (nonatomic, readonly) NSMutableDictionary *_markedNodesByObjectID;
@property (setter=_setMinimumNumberOfNodes:, nonatomic) unsigned long long _minimumNumberOfNodes;
@property (nonatomic, readonly) PLMomentNodeCache *_nodeCache;
@property (setter=_setNumberOfVisitedNodes:, nonatomic) unsigned long long _numberOfVisitedNodes;
@property (setter=_setTotalNumberOfNodes:, nonatomic) unsigned long long _totalNumberOfNodes;
@property (nonatomic) bool accumulatesSmallClusters;
@property (nonatomic) double accumulationJoinThreshold;
@property (nonatomic) double accumulationRejectionThreshold;
@property (nonatomic) double accumulationRejectionTimeInterval;
@property (nonatomic) unsigned long long accumulationSize;
@property (nonatomic) double accumulationTimeInterval;
@property (setter=_setClusters:, nonatomic, copy) NSArray *clusters;
@property (setter=_setDeletedClusters:, nonatomic, copy) NSSet *deletedClusters;
@property (getter=isDirty, setter=_setDirty:, nonatomic) bool dirty;
@property (nonatomic) bool hasLocationsOfInterestInformation;
@property (nonatomic, readonly) bool hasMarkedNodes;
@property (setter=_setInsertedClusters:, nonatomic, copy) NSSet *insertedClusters;
@property (nonatomic, retain) NSArray *locationsOfInterest;
@property (nonatomic, copy) id /* block */ progressBlock;
@property (nonatomic) bool shouldApplyUserInfluenceBeforeClustering;
@property (nonatomic) bool shouldRunUserInfluence;
@property (nonatomic) double sigma;
@property (nonatomic) double spatialJoinThreshold;
@property (nonatomic) double spatialJoinTimeInterval;
@property (nonatomic) bool spatialJoinsAdjacentClusters;
@property (nonatomic) double theta;
@property (setter=_setUpdatedClusters:, nonatomic, copy) NSSet *updatedClusters;

+ (double)maximumClusterDuration;

- (id)_clustersByMergingUserInfluencedClusters:(id)arg1;
- (id)_clustersByNodeObjectID;
- (id)_clustersByObjectID;
- (id)_clustersBySplittingUserInfluencedClusters:(id)arg1;
- (id)_clustersSplitByLocationsOfInterest:(id)arg1;
- (void)_commonPLMomentClusteringManagerInitialization;
- (id)_markedNodesByObjectID;
- (unsigned long long)_minimumNumberOfNodes;
- (id)_nodeCache;
- (unsigned long long)_numberOfVisitedNodes;
- (void)_setClusters:(id)arg1;
- (void)_setDeletedClusters:(id)arg1;
- (void)_setDirty:(bool)arg1;
- (void)_setInsertedClusters:(id)arg1;
- (void)_setMinimumNumberOfNodes:(unsigned long long)arg1;
- (void)_setNumberOfVisitedNodes:(unsigned long long)arg1;
- (void)_setTotalNumberOfNodes:(unsigned long long)arg1;
- (void)_setUpdatedClusters:(id)arg1;
- (unsigned long long)_totalNumberOfNodes;
- (id)accumulateSmallClustersFromClusters:(id)arg1;
- (bool)accumulatesSmallClusters;
- (double)accumulationJoinThreshold;
- (double)accumulationRejectionThreshold;
- (double)accumulationRejectionTimeInterval;
- (unsigned long long)accumulationSize;
- (double)accumulationTimeInterval;
- (id)clusters;
- (id)clustersByApplyingUserInfluenceToClusters:(id)arg1;
- (id)clustersWithNodes:(id)arg1 sigma:(double)arg2 theta:(double)arg3;
- (void)dealloc;
- (id)deletedClusters;
- (id)generateClustersForAssets:(id)arg1;
- (bool)hasLocationsOfInterestInformation;
- (bool)hasMarkedNodes;
- (id)init;
- (id)initWithManagedMoments:(id)arg1;
- (id)insertedClusters;
- (bool)isDirty;
- (id)locationsOfInterest;
- (void)markNodeForDiagnosis:(id)arg1;
- (id)neighborsOfNode:(id)arg1;
- (id)neighborsOfTaggedNode:(id)arg1;
- (id /* block */)progressBlock;
- (void)setAccumulatesSmallClusters:(bool)arg1;
- (void)setAccumulationJoinThreshold:(double)arg1;
- (void)setAccumulationRejectionThreshold:(double)arg1;
- (void)setAccumulationRejectionTimeInterval:(double)arg1;
- (void)setAccumulationSize:(unsigned long long)arg1;
- (void)setAccumulationTimeInterval:(double)arg1;
- (void)setHasLocationsOfInterestInformation:(bool)arg1;
- (void)setLocationsOfInterest:(id)arg1;
- (void)setProgressBlock:(id /* block */)arg1;
- (void)setShouldApplyUserInfluenceBeforeClustering:(bool)arg1;
- (void)setShouldRunUserInfluence:(bool)arg1;
- (void)setSigma:(double)arg1;
- (void)setSpatialJoinThreshold:(double)arg1;
- (void)setSpatialJoinTimeInterval:(double)arg1;
- (void)setSpatialJoinsAdjacentClusters:(bool)arg1;
- (void)setTheta:(double)arg1;
- (bool)shouldApplyUserInfluenceBeforeClustering;
- (bool)shouldRunUserInfluence;
- (double)sigma;
- (double)smallestDistanceBetweenMomentNode:(id)arg1 andCluster:(id)arg2;
- (double)smallestDurationBetweenMomentNode:(id)arg1 andCluster:(id)arg2;
- (id)spatialJoinClustersFromClusters:(id)arg1;
- (double)spatialJoinThreshold;
- (double)spatialJoinTimeInterval;
- (bool)spatialJoinsAdjacentClusters;
- (id)temporalSnapshotOfNode:(id)arg1 withRange:(double)arg2;
- (double)theta;
- (id)updatedClusters;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLPersistedPersonMetadata.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLPersistedPersonMetadata.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLPersistedPersonMetadata : NSObject {
    int  _cloudVerifiedType;
    NSDictionary * _contactMatchingDictionary;
    NSArray * _detectedFaces;
    NSString * _displayName;
    long long  _fromVersion;
    NSString * _fullName;
    short  _keyFacePickSource;
    unsigned int  _manualOrder;
    NSString * _mergeTargetPersonUUID;
    NSURL * _metadataURL;
    PLPerson * _person;
    NSString * _personUUID;
    NSString * _personUri;
    NSArray * _rejectedFaces;
    int  _type;
    int  _verifiedType;
}

@property (nonatomic) int cloudVerifiedType;
@property (nonatomic, copy) NSDictionary *contactMatchingDictionary;
@property (nonatomic, retain) NSArray *detectedFaces;
@property (nonatomic, retain) NSString *displayName;
@property (nonatomic) long long fromVersion;
@property (nonatomic, retain) NSString *fullName;
@property (nonatomic) short keyFacePickSource;
@property (nonatomic) unsigned int manualOrder;
@property (nonatomic, retain) NSString *mergeTargetPersonUUID;
@property (nonatomic, retain) NSURL *metadataURL;
@property (nonatomic, retain) PLPerson *person;
@property (nonatomic, retain) NSString *personUUID;
@property (nonatomic, retain) NSString *personUri;
@property (nonatomic, retain) NSArray *rejectedFaces;
@property (nonatomic) int type;
@property (nonatomic) int verifiedType;

+ (id)_clusterRejectedFaceIDsWithPerson:(id)arg1;
+ (id)_detectedFacesToArchiveWithPerson:(id)arg1;
+ (id)_fetchFacesWithPredicate:(id)arg1 resultType:(unsigned long long)arg2 managedObjectContext:(id)arg3 error:(id*)arg4;
+ (id)_persistedFaceMetadataWithFaces:(id)arg1 keyFace:(id)arg2 clusterRejectedFaceIDs:(id)arg3;
+ (id)_rejectedFacesToArchiveWithPerson:(id)arg1;
+ (bool)deleteMetadataFileForPersonUUID:(id)arg1;
+ (bool)isValidPath:(id)arg1;
+ (bool)isValidPath:(id)arg1 outPersonUUID:(id*)arg2;
+ (id)metadataFileURLForPersonUUID:(id)arg1;
+ (void)performPostImportMigrationFromVersion:(unsigned long long)arg1 fromDataInManagedObjectContext:(id)arg2;
+ (id)personUUIDsToDedupeWithMetadataURLs:(id)arg1;
+ (void)updateMergeTargetPersonWithPersonUUIDMapping:(id)arg1 fromDataInManagedObjectContext:(id)arg2;
+ (id)urlForLegacyHiddenFacesFile;
+ (id)urlsForPersistedPersonsInLibraryMetadataDirectory;

- (void).cxx_destruct;
- (void)_addAssetUUIDsFromFaces:(id)arg1 toMutableSet:(id)arg2;
- (bool)_insertDetectedFacesOnPerson:(id)arg1 fromDataInManagedObjectContext:(id)arg2 deferUnmatched:(bool)arg3;
- (bool)_insertRejectedFacesOnPerson:(id)arg1 fromDataInManagedObjectContext:(id)arg2 deferUnmatched:(bool)arg3;
- (id)_metadataData;
- (bool)_readUUID;
- (void)_saveMetadata;
- (int)cloudVerifiedType;
- (id)contactMatchingDictionary;
- (id)description;
- (id)detectedFaceIdentifiers;
- (id)detectedFaces;
- (id)displayName;
- (long long)fromVersion;
- (id)fullName;
- (bool)hasAllAssetsAvailableInManagedObjectContext:(id)arg1 includePendingAssetChanges:(bool)arg2;
- (id)init;
- (id)initWithPLPerson:(id)arg1;
- (id)initWithPLPerson:(id)arg1 metadataURL:(id)arg2;
- (id)initWithPersistedDataAtURL:(id)arg1;
- (id)initWithPersistedDataAtURL:(id)arg1 deferUnarchiving:(bool)arg2;
- (id)insertPersonFromDataInManagedObjectContext:(id)arg1;
- (id)jsonDictionary;
- (short)keyFacePickSource;
- (unsigned int)manualOrder;
- (bool)matchesEntityInLibraryBackedByManagedObjectContext:(id)arg1 diff:(id*)arg2;
- (id)mergeTargetPersonUUID;
- (id)metadataURL;
- (id)person;
- (id)personUUID;
- (id)personUri;
- (bool)readDetectedFaces;
- (bool)readMetadata;
- (id)rejectedFaces;
- (void)setCloudVerifiedType:(int)arg1;
- (void)setContactMatchingDictionary:(id)arg1;
- (void)setDetectedFaces:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setFromVersion:(long long)arg1;
- (void)setFullName:(id)arg1;
- (void)setKeyFacePickSource:(short)arg1;
- (void)setManualOrder:(unsigned int)arg1;
- (void)setMergeTargetPersonUUID:(id)arg1;
- (void)setMetadataURL:(id)arg1;
- (void)setPerson:(id)arg1;
- (void)setPersonUUID:(id)arg1;
- (void)setPersonUri:(id)arg1;
- (void)setRejectedFaces:(id)arg1;
- (void)setType:(int)arg1;
- (void)setVerifiedType:(int)arg1;
- (int)type;
- (bool)updateFacesInPerson:(id)arg1 fromDataInManagedObjectContext:(id)arg2 deferUnmatched:(bool)arg3;
- (int)verifiedType;
- (void)writePersistedData;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

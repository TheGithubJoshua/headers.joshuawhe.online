<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLFormatChooser.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLFormatChooser.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLFormatChooser : NSObject {
    PLDeviceConfiguration * _deviceConfiguration;
    PLImageFormat * _fullScreenFormatForCurrentDevice;
    PLImageFormat * _indexSheetUnbakedFormat;
    PLImageFormat * _landscapeScrubberThumbnailFormat;
    PLImageFormat * _largestUncroppedNonJPEGThumbnailFormat;
    PLImageFormat * _masterThumbnailFormat;
    PLImageFormat * _portraitScrubberThumbnailFormat;
    PLImageFormat * _posterThumbnailFormat;
    NSArray * _supportedDerivativeFormats;
}

@property (nonatomic, readonly) PLImageFormat *fullScreenFormatForCurrentDevice;
@property (nonatomic, readonly) PLImageFormat *indexSheetUnbakedFormat;
@property (nonatomic, readonly) PLImageFormat *landscapeScrubberThumbnailFormat;
@property (nonatomic, readonly) PLImageFormat *largestUncroppedNonJPEGThumbnailFormat;
@property (nonatomic, readonly) PLImageFormat *masterThumbnailFormat;
@property (nonatomic, readonly) PLImageFormat *portraitScrubberThumbnailFormat;
@property (nonatomic, readonly) NSArray *supportedDerivativeFormats;

+ (struct CGSize { double x1; double x2; })_desiredImageSizeForRequestedViewSizeInPixels:(struct CGSize { double x1; double x2; })arg1 isAspectFill:(bool)arg2 srcAspectRatio:(double)arg3;
+ (id)_suppportedFullSizeFormatIDs;
+ (id)defaultFormatChooser;

- (id)_bestFormatWithSize:(struct CGSize { double x1; double x2; })arg1 specificVersionType:(long long)arg2 contentMode:(long long)arg3 demoteFactor:(double)arg4 srcAspectRatio:(double)arg5 hasAdjustmentsHandler:(id /* block */)arg6 desiredImagePixelSize:(struct CGSize { double x1; double x2; }*)arg7;
- (id)_fastestDegradedFormatFallingBackFromFormat:(id)arg1;
- (id)_nextLargestAcceptableFormatForFormat:(id)arg1;
- (id)_standardDegradedFormatFallingBackFromFormat:(id)arg1;
- (void)chooseFormatsForSize:(struct CGSize { double x1; double x2; })arg1 specificVersionType:(long long)arg2 contentMode:(long long)arg3 demoteFactor:(double)arg4 srcAspectRatio:(double)arg5 degradedFormatPolicy:(long long)arg6 hasAdjustmentsHandler:(id /* block */)arg7 desiredImagePixelSize:(struct CGSize { double x1; double x2; }*)arg8 bestFormat:(id*)arg9 degradedFormat:(id*)arg10;
- (void)dealloc;
- (id)derivativeFormatThatFitsSize:(struct CGSize { double x1; double x2; })arg1 contentMode:(long long)arg2 demoteFactor:(double)arg3 srcAspectRatio:(double)arg4 desiredImagePixelSize:(struct CGSize { double x1; double x2; }*)arg5;
- (id)fullScreenFormatForCurrentDevice;
- (id)indexSheetUnbakedFormat;
- (id)initWithDeviceConfiguration:(id)arg1;
- (id)landscapeScrubberThumbnailFormat;
- (id)largestUncroppedNonJPEGThumbnailFormat;
- (id)masterThumbnailFormat;
- (id)portraitScrubberThumbnailFormat;
- (struct CGSize { double x1; double x2; })posterThumbnailSize;
- (id)supportedDerivativeFormats;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

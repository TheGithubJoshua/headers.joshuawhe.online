<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLManagedAlbumList.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLManagedAlbumList.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLManagedAlbumList : _PLManagedAlbumList <PLAlbumContainer, PLDerivedAlbumListOrigin, PLIndexMappersDataOrigin> {
    NSObject<PLIndexMappingCache> * _derivedAlbumLists;
    bool  didRegisteredWithUserInterfaceContext;
    bool  isRegisteredForChanges;
}

@property (nonatomic, readonly, retain) NSString *_prettyDescription;
@property (nonatomic, readonly, retain) NSString *_typeDescription;
@property (nonatomic) short albumListType;
@property (nonatomic, readonly, retain) NSMutableOrderedSet *albums;
@property (nonatomic, readonly) unsigned long long albumsCount;
@property (nonatomic, readonly, copy) id /* block */ albumsSortingComparator;
@property (nonatomic, readonly) bool canEditAlbums;
@property (nonatomic, readonly) unsigned long long containersCount;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didRegisteredWithUserInterfaceContext;
@property (nonatomic, readonly) int filter;
@property (nonatomic, readonly) bool hasAtLeastOneAlbum;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSNumber *identifier;
@property (nonatomic, readonly) bool isFolder;
@property (nonatomic) bool isRegisteredForChanges;
@property (nonatomic, copy) NSNumber *needsReorderingNumber;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long unreadAlbumsCount;
@property (nonatomic, retain) NSString *uuid;

+ (id)_albumListWithType:(short)arg1 inManagedObjectContext:(id)arg2;
+ (bool)_albumOrderMatchesFrom:(id)arg1 inDestination:(id)arg2;
+ (id)_singletonListWithType:(short)arg1 library:(id)arg2;
+ (id)_typeDescriptionForAlbumListType:(short)arg1;
+ (id)_validAlbumsFromSource:(id)arg1 destination:(id)arg2;
+ (void)addSingletonObjectsToContext:(id)arg1;
+ (bool)albumKindHasFixedOrder:(int)arg1;
+ (id)albumListInManagedObjectContext:(id)arg1;
+ (id)albumListInPhotoLibrary:(id)arg1;
+ (id)allStreamedAlbumsListInManagedObjectContext:(id)arg1;
+ (id)allStreamedAlbumsListInPhotoLibrary:(id)arg1;
+ (id)eventListInManagedObjectContext:(id)arg1;
+ (id)eventListInPhotoLibrary:(id)arg1;
+ (id)facesAlbumListInManagedObjectContext:(id)arg1;
+ (id)facesAlbumListInPhotoLibrary:(id)arg1;
+ (id)importListInManagedObjectContext:(id)arg1;
+ (id)importListInPhotoLibrary:(id)arg1;
+ (void)initialize;
+ (bool)isValidPathForPersistence:(id)arg1;
+ (bool)isValidTypeForPersistence:(short)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (void)persistAlbumListUUIDs:(id)arg1 type:(short)arg2 allowsOverwrite:(bool)arg3;
+ (id)placesAlbumListInManagedObjectContext:(id)arg1;
+ (id)placesAlbumListInPhotoLibrary:(id)arg1;
+ (unsigned long long)priorityForAlbumKind:(int)arg1;
+ (void)pushChangesFromAlbumContainer:(id)arg1 toAlbumContainer:(id)arg2;
+ (bool)restoreAlbumListFromPersistedDataAtPath:(id)arg1 library:(id)arg2;
+ (id)scenesAlbumListInManagedObjectContext:(id)arg1;
+ (id)scenesAlbumListInPhotoLibrary:(id)arg1;

- (id)_albumsCountFetchRequest;
- (id)_prettyDescription;
- (id)_typeDescription;
- (bool)albumHasFixedOrder:(struct NSObject { Class x1; }*)arg1;
- (short)albumListType;
- (id)albums;
- (unsigned long long)albumsCount;
- (id /* block */)albumsSortingComparator;
- (void)awakeFromFetch;
- (void)awakeFromInsert;
- (bool)canEditAlbums;
- (bool)canEditContainers;
- (id)containers;
- (unsigned long long)containersCount;
- (id)containersRelationshipName;
- (void)dealloc;
- (bool)didRegisteredWithUserInterfaceContext;
- (void)didSave;
- (void)enumerateDerivedAlbumLists:(id /* block */)arg1;
- (void)enumerateDerivedIndexMappers:(id /* block */)arg1;
- (int)filter;
- (bool)hasAtLeastOneAlbum;
- (bool)hasDerivedIndexMappers;
- (void)insertIntoOrderedAlbumsAtIndexByPriorityForAlbum:(id)arg1;
- (bool)isEmpty;
- (bool)isFolder;
- (bool)isRegisteredForChanges;
- (bool)needsReordering;
- (void)preheatAlbumsAtIndexes:(id)arg1 forProperties:(id)arg2 relationships:(id)arg3;
- (void)preheatAlbumsForProperties:(id)arg1 relationships:(id)arg2;
- (void)registerDerivedAlbumList:(struct NSObject { Class x1; }*)arg1;
- (void)registerForChanges;
- (void)setAlbumListType:(short)arg1;
- (void)setDidRegisteredWithUserInterfaceContext:(bool)arg1;
- (void)setIsRegisteredForChanges:(bool)arg1;
- (void)setNeedsReordering;
- (unsigned long long)unreadAlbumsCount;
- (void)unregisterAllDerivedAlbums;
- (void)unregisterForChanges;
- (void)updateAlbumsOrderIfNeeded;
- (void)willSave;
- (void)willTurnIntoFault;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

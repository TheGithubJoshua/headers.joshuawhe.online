<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLMomentShare.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLMomentShare.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLMomentShare : PLManagedObject <PLCloudDeletable>

@property (nonatomic) int assetCount;
@property (nonatomic, retain) NSSet *assets;
@property (nonatomic) short cloudDeleteState;
@property (readonly) long long cloudDeletionType;
@property (readonly, copy) NSString *cloudUUIDForDeletion;
@property (nonatomic, copy) NSDate *creationDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSDate *endDate;
@property (nonatomic, copy) NSDate *expiryDate;
@property (readonly) unsigned long long hash;
@property (nonatomic) short localPublishState;
@property (nonatomic, retain) NSSet *masters;
@property (nonatomic) short mode;
@property (nonatomic, copy) NSString *originatingScopeIdentifier;
@property (nonatomic, retain) NSSet *participants;
@property (nonatomic) int photosCount;
@property (nonatomic, copy) NSData *previewData;
@property (nonatomic, copy) NSString *scopeIdentifier;
@property (nonatomic, copy) NSURL *shareURL;
@property (nonatomic) bool shouldIgnoreBudgets;
@property (nonatomic) bool shouldNotifyOnUploadCompletion;
@property (nonatomic, copy) NSDate *startDate;
@property (nonatomic) short status;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSData *thumbnailImageData;
@property (nonatomic, copy) NSString *title;
@property (nonatomic) short trashedState;
@property (nonatomic) int uploadedPhotosCount;
@property (nonatomic) int uploadedVideosCount;
@property (nonatomic, copy) NSString *uuid;
@property (nonatomic) int videosCount;

+ (id)_andPredicateWithTrashedState:(id)arg1;
+ (long long)_cloudDeletionTypeForStatus:(short)arg1;
+ (id)_momentSharesWithPredicate:(id)arg1 fetchLimit:(unsigned long long)arg2 inManagedObjectContext:(id)arg3;
+ (long long)cloudDeletionTypeForTombstone:(id)arg1;
+ (id)cloudUUIDKeyForDeletion;
+ (void)deleteAllMomentSharesInManagedObjectContext:(id)arg1;
+ (void)deleteExpiredMomentSharesInManagedObjectContext:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (void)fetchMomentShareFromShareURL:(id)arg1 inPhotoLibrary:(id)arg2 completionHandler:(id /* block */)arg3;
+ (id)insertInPhotoLibrary:(id)arg1;
+ (id)listOfSyncedProperties;
+ (id)momentShareWithScopeIdentifier:(id)arg1 includeTrashed:(bool)arg2 inManagedObjectContext:(id)arg3;
+ (id)momentShareWithScopedIdentifier:(id)arg1 includeTrashed:(bool)arg2 inManagedObjectContext:(id)arg3;
+ (id)momentShareWithShareURL:(id)arg1 includeTrashed:(bool)arg2 inManagedObjectContext:(id)arg3;
+ (id)momentShareWithUUID:(id)arg1 includeTrashed:(bool)arg2 inManagedObjectContext:(id)arg3;
+ (id)predicateToExcludeExpiredMomentShares;
+ (id)predicateToExcludeTrashedMomentShares;
+ (id)updateOrInsertWithCPLMomentShare:(id)arg1 inPhotoLibrary:(id)arg2;

- (id)_contactStore;
- (bool)_isOwnerInContacts;
- (id)_modeDescription;
- (id)_owner;
- (id)_statusDescription;
- (void)_updateSharingStatusFromParticipant:(id)arg1;
- (void)acceptWithCompletionHandler:(id /* block */)arg1;
- (void)calculatePropertyValues;
- (long long)cloudDeletionType;
- (id)cloudUUIDForDeletion;
- (id)cplMomentShare;
- (unsigned long long)estimateUploadSize;
- (void)forceSync;
- (bool)isSyncableChange;
- (id)ownerIdentifier;
- (void)prepareForDeletion;
- (void)publishWithCompletionHandler:(id /* block */)arg1;
- (bool)shouldAutoAccept;
- (bool)supportsCloudUpload;
- (void)trash;
- (void)updateWithScopeChange:(id)arg1;
- (void)willSave;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

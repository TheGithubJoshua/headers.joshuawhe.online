<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLFilteredAlbumList.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLFilteredAlbumList.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLFilteredAlbumList : NSObject <PLAlbumContainer, PLDerivedAlbumListOrigin, PLIndexMapperDataSource, PLIndexMappingCache> {
    NSObject<PLIndexMappingCache> * _derivedAlbumLists;
    NSMutableIndexSet * _filteredIndexes;
    PLIndexMapper * _indexMapper;
    NSMutableOrderedSet * _weak_albums;
    PLManagedAlbumList * backingAlbumList;
    int  filter;
    NSPredicate * predicate;
}

@property (nonatomic, retain) NSMutableOrderedSet *_albums;
@property (nonatomic, readonly, retain) NSString *_prettyDescription;
@property (nonatomic, readonly, retain) NSString *_typeDescription;
@property (nonatomic, readonly) short albumListType;
@property (nonatomic, readonly, retain) NSMutableOrderedSet *albums;
@property (nonatomic, readonly) unsigned long long albumsCount;
@property (nonatomic, readonly, copy) id /* block */ albumsSortingComparator;
@property (nonatomic, retain) PLManagedAlbumList *backingAlbumList;
@property (nonatomic, readonly, copy) <NSObject><NSCopying> *cachedIndexMapState;
@property (nonatomic, readonly) bool canEditAlbums;
@property (nonatomic, readonly) unsigned long long containersCount;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) int filter;
@property (nonatomic, readonly, copy) NSIndexSet *filteredIndexes;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, retain) PLIndexMapper *indexMapper;
@property (nonatomic, readonly) bool isFolder;
@property (nonatomic, readonly, retain) PLPhotoLibrary *photoLibrary;
@property (nonatomic, retain) NSPredicate *predicate;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long unreadAlbumsCount;

+ (id)filteredAlbumList:(id)arg1 filter:(int)arg2;

- (void).cxx_destruct;
- (id)_albums;
- (void)_backingContextDidChange:(id)arg1;
- (void)_invalidateFilteredIndexes;
- (id)_prettyDescription;
- (id)_typeDescription;
- (bool)albumHasFixedOrder:(struct NSObject { Class x1; }*)arg1;
- (short)albumListType;
- (id)albums;
- (unsigned long long)albumsCount;
- (id /* block */)albumsSortingComparator;
- (id)backingAlbumList;
- (id)cachedIndexMapState;
- (bool)canEditAlbums;
- (bool)canEditContainers;
- (id)containers;
- (unsigned long long)containersCount;
- (id)containersRelationshipName;
- (unsigned long long)countOfFilteredAlbums;
- (void)dealloc;
- (Class)derivedChangeNotificationClass;
- (id)description;
- (void)enumerateDerivedAlbumLists:(id /* block */)arg1;
- (int)filter;
- (id)filteredAlbumsAtIndexes:(id)arg1;
- (id)filteredIndexes;
- (void)getFilteredAlbums:(id*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (bool)hasAtLeastOneAlbum;
- (id)identifier;
- (unsigned long long)indexInFilteredAlbumsOfObject:(id)arg1;
- (id)indexMapper;
- (id)initWithBackingAlbumList:(id)arg1 filter:(int)arg2;
- (void)insertFilteredAlbums:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 inFilteredAlbumsAtIndex:(unsigned long long)arg2;
- (bool)isEmpty;
- (bool)isFolder;
- (id)managedObjectContext;
- (bool)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2;
- (bool)needsReordering;
- (id)objectInFilteredAlbumsAtIndex:(unsigned long long)arg1;
- (id)photoLibrary;
- (id)predicate;
- (void)preheatAlbumsAtIndexes:(id)arg1 forProperties:(id)arg2 relationships:(id)arg3;
- (void)preheatAlbumsForProperties:(id)arg1 relationships:(id)arg2;
- (void)registerDerivedAlbumList:(struct NSObject { Class x1; }*)arg1;
- (void)removeFilteredAlbumsAtIndexes:(id)arg1;
- (void)removeObjectFromFilteredAlbumsAtIndex:(unsigned long long)arg1;
- (void)replaceFilteredAlbumsAtIndexes:(id)arg1 withFilteredValues:(id)arg2;
- (void)replaceObjectInFilteredAlbumsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)setBackingAlbumList:(id)arg1;
- (void)setFilter:(int)arg1;
- (void)setNeedsReordering;
- (void)setPredicate:(id)arg1;
- (void)set_albums:(id)arg1;
- (bool)shouldIncludeObjectAtIndex:(unsigned long long)arg1;
- (unsigned long long)unreadAlbumsCount;
- (void)unregisterAllDerivedAlbums;
- (void)updateAlbumsOrderIfNeeded;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

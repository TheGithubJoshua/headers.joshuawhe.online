<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLPhotoSharingHelper.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLPhotoSharingHelper.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLPhotoSharingHelper : NSObject

+ (bool)_derivativeExistsForAsset:(id)arg1 cloudPlaceholderKind:(short)arg2;
+ (id)_downloadRequestQueue;
+ (id)_localizationKeyForAssets:(id)arg1;
+ (id)_pathToServerConfigurationCache;
+ (id)_phoneInvitationFailureFile;
+ (id)_processPhoneFailuresQueue;
+ (bool)_recentlyRequestedDownloadAsset:(id)arg1 cloudPlaceholderKind:(short)arg2;
+ (void)_resetServerSideConfigurationDictionary;
+ (long long)_serverLimitValueForKey:(id)arg1 withDefaultResult:(long long)arg2;
+ (id)_transactionWithName:(const char *)arg1;
+ (void)_userDidDeleteSharedAlbum:(id)arg1;
+ (void)_userDidDeleteSharedAssets:(id)arg1;
+ (void)acceptPendingInvitationForAlbum:(id)arg1 completionHandler:(id /* block */)arg2;
+ (bool)accountMatchesEmail:(id)arg1;
+ (void)accountSettingsChanged;
+ (void)applicationIsInForeground:(bool)arg1;
+ (bool)canAcceptPendingInvitationForAlbum:(id)arg1 error:(id*)arg2;
+ (bool)canCreateStreamInPhotoLibrary:(id)arg1 error:(id*)arg2;
+ (bool)canSetUserCloudSharedLiked:(bool)arg1 forAssets:(id)arg2 error:(id*)arg3;
+ (void)checkServerModelForAlbum:(id)arg1;
+ (void)clearCachedAccountState;
+ (void)countOfAssetsInMstreamdSharingDownloadQueueWithCompletionBlock:(id /* block */)arg1;
+ (bool)debugAlwaysStreamSharedVideos;
+ (bool)debugAutoAcceptInvitation;
+ (bool)debugDownloadAllDerivatives;
+ (bool)debugDownloadMetadataOnly;
+ (bool)debugDownloadThumbnailsOnly;
+ (void)declinePendingInvitationForAlbum:(id)arg1;
+ (void)deleteCloudSharedAlbumFromServer:(id)arg1;
+ (void)deleteCloudSharedAssetsFromServer:(id)arg1 inSharedAlbum:(id)arg2;
+ (void)deleteCommentWithGUIDFromServer:(id)arg1;
+ (void)deleteDebugBreadcrumbsForAlbumGUID:(id)arg1;
+ (void)deleteLocalAlbumsForMSASAlbumsWithGUIDs:(id)arg1;
+ (id)derivativesForMasterAsset:(id)arg1 withSpecifications:(id)arg2;
+ (struct CGSize { double x1; double x2; })derivedAssetSizeForMasterSizeWidth:(double)arg1 height:(double)arg2 derivativeType:(int)arg3 withSpecificationInfo:(id)arg4;
+ (double)derivedAssetSmallDimensionLimitForType:(int)arg1;
+ (id)directoryPathForDownloadActivityForAlbumGUID:(id)arg1 create:(bool)arg2;
+ (id)directoryPathForUploadActivityForAlbumGUID:(id)arg1 create:(bool)arg2;
+ (void)downloadAsset:(id)arg1 cloudPlaceholderKind:(short)arg2 shouldPrioritize:(bool)arg3 shouldExtendTimer:(bool)arg4;
+ (id)downloadNotificationForAssetwithUUID:(id)arg1 cloudPlaceholderKind:(short)arg2;
+ (void)enqueueCloudSharedAssetsForPublishToServer:(id)arg1 inSharedAlbum:(id)arg2;
+ (void)forgetSharingPersonID:(id)arg1;
+ (void)handlePhoneInvitationFailuresWithCompletionBlock:(id /* block */)arg1;
+ (bool)hasPhoneInvitationForAlbum:(id)arg1;
+ (bool)hasReachedLimitOfOwnedStreamsInLibrary:(id)arg1;
+ (bool)hasReachedLimitOfSubscribedStreamsInLibrary:(id)arg1;
+ (void)initializeMSPlatform;
+ (double)intervalBetweenAlbumPolls;
+ (double)intervalBetweenPolls;
+ (bool)isBreadcrumbDebugEnabled;
+ (bool)isCellularConnection;
+ (void)isMstreamdBusyPerformingSharingActivityWithCompletionBlock:(id /* block */)arg1;
+ (void)markAlbumGUIDAsViewed:(id)arg1 clearUnseenAssetsCount:(bool)arg2;
+ (void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2;
+ (void)markPendingInvitationAsSpamForAlbum:(id)arg1 completionHandler:(id /* block */)arg2;
+ (long long)maxAssetsPerStream;
+ (long long)maxCharactersPerComment;
+ (long long)maxCommentsPerAsset;
+ (long long)maxGIFSizeForPublishing;
+ (long long)maxNumDerivativesToDownloadPerPush;
+ (long long)maxNumDerivativesToPrefetchPerDay;
+ (long long)maxNumThumbnailsToPrefetchPerDay;
+ (long long)maxOwnedStreams;
+ (long long)maxSubscribedStreams;
+ (long long)maxSubscribersPerStream;
+ (long long)maxVideoLengthForPublishing;
+ (void)photosPreferencesChanged;
+ (void)pollForAlbumListUpdates;
+ (id)prefixForBreadcrumbState:(int)arg1;
+ (void)prioritizeDownloadsForAlbumGUID:(id)arg1;
+ (void)pruneNonRecentlyViewedCloudSharingAssetsInLibrary:(id)arg1;
+ (void)publishCloudSharedAlbumToServer:(id)arg1;
+ (void)publishCloudSharedCommentToServer:(id)arg1;
+ (unsigned long long)purgeSpace:(unsigned long long)arg1;
+ (unsigned long long)purgeableSpace;
+ (void)refreshSubscriberListForAlbumGUID:(id)arg1;
+ (unsigned int)registerIdleStateChangeObserverWithToken:(int*)arg1 handler:(id /* block */)arg2;
+ (bool)removeCloudSharingDirectories:(id*)arg1;
+ (void)removeSubscribers:(id)arg1 fromOwnedAlbum:(id)arg2;
+ (void)requestVideoPlaybackURLForAsset:(id)arg1 videoType:(unsigned long long)arg2 completion:(id /* block */)arg3;
+ (void)resetAllLocalState;
+ (void)retryOutstandingActivities;
+ (void)savePhoneInvitationFailuresForPhoneNumber:(id)arg1 inAlbum:(id)arg2;
+ (void)sendPendingInvitationsForNewlyCreatedAlbum:(id)arg1;
+ (id)serverSideConfigurationDictionary;
+ (bool)sharedStreamsEnabled;
+ (bool)sharedStreamsExplictlyDisabled;
+ (id)sharingPersonID;
+ (id)sharingUsername;
+ (id)streamdVideoCache;
+ (id)temporaryDerivativePathForCollectionGUID:(id)arg1 uti:(id)arg2;
+ (id)temporaryLargeVideoDerivativePathForCollectionGUID:(id)arg1;
+ (id)temporarySmallVideoDerivativePathForCollectionGUID:(id)arg1;
+ (id)temporaryThumbnailPathForCollectionGUID:(id)arg1;
+ (id)temporaryVideoPathForCollectionGUID:(id)arg1;
+ (id)temporaryVideoPosterFramePathForCollectionGUID:(id)arg1;
+ (void)trackUploadBatchSize:(unsigned long long)arg1;
+ (unsigned int)unregisterIdleStateChangeObserverWithToken:(int)arg1;
+ (void)unsubscribeFromAlbum:(id)arg1;
+ (void)updateCloudSharedAlbumMetadataOnServer:(id)arg1;
+ (void)updateCloudSharedAlbumMultipleContributorsStateOnServer:(id)arg1;
+ (void)updateCloudSharedAlbumPublicURLStateOnServer:(id)arg1;
+ (void)updateLocalAlbumMetadataForMSASAlbum:(id)arg1 info:(id)arg2;
+ (void)updateSharedAlbumsCachedServerConfigurationLimits;
+ (id)videoDerivativesForAssetCollection:(id)arg1 withSpecifications:(id)arg2;
+ (struct CGSize { double x1; double x2; })videoPosterFrameDimension;
+ (void)writeAlbumNameBreadCrumb:(id)arg1 forAlbumGUID:(id)arg2 isUpload:(bool)arg3;
+ (void)writeDownloadDebugBreadcrumbForAsset:(id)arg1 albumGUID:(id)arg2 content:(id)arg3 state:(int)arg4 error:(id)arg5;
+ (void)writeUploadDebugBreadcrumbForAssetCollections:(id)arg1 state:(int)arg2 error:(id)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PSIGroupResult.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PSIGroupResult.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PSIGroupResult : NSObject <NSCopying> {
    const struct __CFArray { } * _assetIds;
    NSMutableArray * _assetUUIDs;
    const struct __CFArray { } * _collectionIds;
    NSMutableArray * _collectionResults;
    <PSIGroupResultDelegate> * _delegate;
    bool  _didFetchOwningContentString;
    NSArray * _groups;
    NSString * _owningContentString;
    NSObject<OS_dispatch_queue> * _queue;
    float  _score;
    NSString * _transientToken;
    const struct __CFArray { } * _tripIds;
    NSMutableArray * _tripResults;
}

@property (nonatomic, retain) const struct __CFArray { }*assetIds;
@property (nonatomic, readonly) unsigned long long assetMatchCount;
@property (readonly) NSArray *assetUUIDs;
@property (nonatomic, retain) const struct __CFArray { }*collectionIds;
@property (nonatomic, readonly) unsigned long long collectionMatchCount;
@property (readonly) NSArray *collectionResults;
@property (nonatomic, readonly, retain) NSArray *contentStrings;
@property (nonatomic) <PSIGroupResultDelegate> *delegate;
@property (nonatomic, copy) NSArray *groups;
@property (nonatomic, readonly, retain) NSArray *groupsMatchRanges;
@property (nonatomic, readonly, retain) NSArray *groupsSearchTokens;
@property (nonatomic, readonly, retain) NSArray *lookupIdentifiers;
@property (nonatomic, readonly) unsigned long long matchCount;
@property (readonly) NSString *owningContentString;
@property (nonatomic) float score;
@property (nonatomic, copy) NSString *transientToken;
@property (nonatomic, retain) const struct __CFArray { }*tripIds;
@property (nonatomic, readonly) unsigned long long tripMatchCount;
@property (readonly) NSArray *tripResults;

- (void).cxx_destruct;
- (id)_prepareForFetchWithAssetCountLimit:(unsigned long long)arg1 collectionCountLimit:(unsigned long long)arg2 tripCountLimit:(unsigned long long)arg3 outAssetRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg4 outCollectionRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg5 outTripRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg6 outFetchOwningContentString:(bool*)arg7;
- (const struct __CFArray { }*)assetIds;
- (unsigned long long)assetMatchCount;
- (id)assetUUIDs;
- (long long)categoryAtIndex:(long long)arg1;
- (const struct __CFArray { }*)collectionIds;
- (unsigned long long)collectionMatchCount;
- (id)collectionResults;
- (id)contentStringAtIndex:(long long)arg1;
- (id)contentStrings;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dateFilterGroupSnapshot;
- (void)dealloc;
- (id)debugDescription;
- (id)delegate;
- (id)description;
- (void)fetchNextAssetUUIDs:(bool)arg1 collectionResults:(bool)arg2 tripResults:(bool)arg3 assetCountLimit:(unsigned long long)arg4 collectionCountLimit:(unsigned long long)arg5 tripCountLimit:(unsigned long long)arg6 completionHandler:(id /* block */)arg7;
- (void)fetchNextAssetUUIDs:(bool)arg1 collectionResults:(bool)arg2 tripResults:(bool)arg3 count:(unsigned long long)arg4 completionHandler:(id /* block */)arg5;
- (void)fetchNextAssetUUIDs:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (unsigned long long)groupCount;
- (id)groups;
- (id)groupsMatchRanges;
- (id)groupsSearchTokens;
- (id)initWithQueue:(id)arg1;
- (bool)isContentStringTextSearchableAtIndex:(long long)arg1;
- (bool)isMatchedByIdentifierAtIndex:(long long)arg1;
- (id)lookupIdentifiers;
- (unsigned long long)matchCount;
- (id)matchRangesAtIndex:(long long)arg1;
- (id)owningContentString;
- (void)resolveObjectsWithAssetCache:(id)arg1 collectionCache:(id)arg2 tripCache:(id)arg3;
- (float)score;
- (id)searchTextGroupSnapshot;
- (void)setAssetIds:(const struct __CFArray { }*)arg1;
- (void)setCollectionIds:(const struct __CFArray { }*)arg1;
- (void)setDelegate:(id)arg1;
- (void)setGroups:(id)arg1;
- (void)setScore:(float)arg1;
- (void)setTransientToken:(id)arg1;
- (void)setTripIds:(const struct __CFArray { }*)arg1;
- (id)tokensAtIndex:(long long)arg1;
- (id)transientToken;
- (const struct __CFArray { }*)tripIds;
- (unsigned long long)tripMatchCount;
- (id)tripResults;
- (id)unitTestDescription;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

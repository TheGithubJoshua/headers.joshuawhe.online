<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLMomentListClustering.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLMomentListClustering.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLMomentListClustering : NSObject {
    NSMutableDictionary * __cachedCollectionTagByMomentID;
    NSMapTable * __cachedLocationsByMoment;
    NSMutableDictionary * __clustersByYearAndMonth;
    NSDateFormatter * __debugDateFormatter;
    unsigned long long  __defaultMaxFailuresForExpansion;
    unsigned long long  __defaultNumberOfAssetsRequiredForSeeding;
    double  __maximumDistanceBetweenAccumulatedMoments;
    double  __maximumDistanceThresholdBetweenMoments;
    double  __maximumDistanceThresholdFromPeak;
    double  __maximumTimeThreshold;
    double  __maximumTimeThresholdBetweenMomentsWithLocation;
    double  __maximumTimeThresholdBetweenMomentsWithoutLocation;
    double  __maximumTimeThresholdFromPeakMatch;
    double  __maximumTimeThresholdFromPeakWithoutLocation;
    double  __megamomentAccumulationMaximumTimeThreshold;
    unsigned long long  __minimumNumberOfAssetsToAvoidMegamomentAccumulation;
    unsigned long long  __minimumNumberOfAssetsToAvoidYearAccumulation;
    NSMutableSet * __visitedMoments;
    bool  _allowsCollectionAccumulation;
    bool  _allowsCollectionInfluencing;
    bool  _allowsYearAccumulation;
}

@property (setter=_setCachedCollectionTagByMomentID:, nonatomic, retain) NSMutableDictionary *_cachedCollectionTagByMomentID;
@property (setter=_setCachedLocationsByMoment:, nonatomic, retain) NSMapTable *_cachedLocationsByMoment;
@property (nonatomic, readonly) NSMutableDictionary *_clustersByYearAndMonth;
@property (nonatomic, readonly) NSDateFormatter *_debugDateFormatter;
@property (nonatomic, readonly) unsigned long long _defaultMaxFailuresForExpansion;
@property (nonatomic, readonly) unsigned long long _defaultNumberOfAssetsRequiredForSeeding;
@property (nonatomic, readonly) double _maximumDistanceBetweenAccumulatedMoments;
@property (nonatomic, readonly) double _maximumDistanceThresholdBetweenMoments;
@property (nonatomic, readonly) double _maximumDistanceThresholdFromPeak;
@property (nonatomic, readonly) double _maximumTimeThreshold;
@property (nonatomic, readonly) double _maximumTimeThresholdBetweenMomentsWithLocation;
@property (nonatomic, readonly) double _maximumTimeThresholdBetweenMomentsWithoutLocation;
@property (nonatomic, readonly) double _maximumTimeThresholdFromPeakMatch;
@property (nonatomic, readonly) double _maximumTimeThresholdFromPeakWithoutLocation;
@property (nonatomic, readonly) double _megamomentAccumulationMaximumTimeThreshold;
@property (nonatomic, readonly) unsigned long long _minimumNumberOfAssetsToAvoidMegamomentAccumulation;
@property (nonatomic, readonly) unsigned long long _minimumNumberOfAssetsToAvoidYearAccumulation;
@property (nonatomic, readonly) NSMutableSet *_visitedMoments;
@property (nonatomic) bool allowsCollectionAccumulation;
@property (nonatomic) bool allowsCollectionInfluencing;
@property (nonatomic) bool allowsYearAccumulation;

+ (id)_gregorianCalendar;
+ (double)maximumTimeThresholdBetweenMoments;

- (id)_cachedCollectionTagByMomentID;
- (id)_cachedLocationForMoment:(id)arg1;
- (id)_cachedLocationsByMoment;
- (id)_clustersByYearAndMonth;
- (void)_createMomentListClusterCacheForMoments:(id)arg1;
- (void)_createMomentListTagCacheForMoments:(id)arg1;
- (id)_debugDateFormatter;
- (unsigned long long)_defaultMaxFailuresForExpansion;
- (unsigned long long)_defaultNumberOfAssetsRequiredForSeeding;
- (unsigned long long)_expandMegaMomentList:(id)arg1 fromPeakMoment:(id)arg2 towardMoments:(id)arg3 forwards:(bool)arg4 outRejectedMoments:(id)arg5;
- (id)_insertNewMegaMomentListWithMoment:(id)arg1 inManager:(id)arg2;
- (bool)_isDateInMoment:(id)arg1 inDateRangeOfLastMoment:(id)arg2 withDelta:(double)arg3 forwards:(bool)arg4;
- (double)_maximumDistanceBetweenAccumulatedMoments;
- (double)_maximumDistanceThresholdBetweenMoments;
- (double)_maximumDistanceThresholdFromPeak;
- (double)_maximumTimeThreshold;
- (double)_maximumTimeThresholdBetweenMomentsWithLocation;
- (double)_maximumTimeThresholdBetweenMomentsWithoutLocation;
- (double)_maximumTimeThresholdFromPeakMatch;
- (double)_maximumTimeThresholdFromPeakWithoutLocation;
- (double)_megamomentAccumulationMaximumTimeThreshold;
- (unsigned long long)_minimumNumberOfAssetsToAvoidMegamomentAccumulation;
- (unsigned long long)_minimumNumberOfAssetsToAvoidYearAccumulation;
- (void)_setCachedCollectionTagByMomentID:(id)arg1;
- (void)_setCachedLocationsByMoment:(id)arg1;
- (bool)_shouldMegaMomentList:(id)arg1 includeMoment:(id)arg2 withPeakMoment:(id)arg3 recentMoment:(id)arg4 recentMomentWithLocation:(id)arg5 forwards:(bool)arg6 haveRejectedMomentsForDistance:(bool)arg7;
- (bool)_updateMegaMomentList:(id)arg1 withRejectedMoments:(id)arg2;
- (void)_updateMomentList:(id)arg1 withStartDate:(id)arg2 endDate:(id)arg3;
- (void)_verifyMomentsAreSorted:(id)arg1;
- (id)_visitedMoments;
- (bool)allowsCollectionAccumulation;
- (bool)allowsCollectionInfluencing;
- (bool)allowsYearAccumulation;
- (void)dealloc;
- (id)generateMegaMomentListsForMoments:(id)arg1 inManager:(id)arg2;
- (id)generateYearMomentListsForMoments:(id)arg1 earliestDate:(id)arg2 latestDate:(id)arg3 inManager:(id)arg4;
- (id)init;
- (void)setAllowsCollectionAccumulation:(bool)arg1;
- (void)setAllowsCollectionInfluencing:(bool)arg1;
- (void)setAllowsYearAccumulation:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

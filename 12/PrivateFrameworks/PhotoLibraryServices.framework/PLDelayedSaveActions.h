<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLDelayedSaveActions.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLDelayedSaveActions.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLDelayedSaveActions : NSObject {
    PLClientServerTransaction * _clientTransaction;
    NSMutableSet * _delayedAlbumCountUpdates;
    NSMutableSet * _delayedAssetsForFileSystemPersistency;
    NSMutableArray * _delayedCloudFeedAlbumUpdates;
    NSMutableArray * _delayedCloudFeedAssetInserts;
    NSMutableArray * _delayedCloudFeedAssetUpdates;
    NSMutableArray * _delayedCloudFeedCommentInserts;
    NSMutableSet * _delayedCloudFeedDeletionEntries;
    NSMutableArray * _delayedCloudFeedInvitationRecordUpdates;
    NSMutableArray * _delayedDupeAnalysisCloudInserts;
    NSMutableArray * _delayedDupeAnalysisNormalInserts;
    NSMapTable * _delayedMomentAssetDeletions;
    NSMutableArray * _delayedMomentAssetUpdates;
    NSMutableDictionary * _delayedSearchIndexUpdateUUIDs;
    NSMutableDictionary * _delayedWorkerTypesToAnalyzeByAssetUUID;
    bool  _needsUpdateUnverifiedFaceCountThreshold;
}

@property (nonatomic, readonly, retain) PLClientServerTransaction *clientTransaction;

+ (void)delayedAlbumCountUpdatesFromChangeHubEvent:(id)arg1 countUpdates:(id*)arg2;
+ (void)delayedAssetsForFileSystemPersistencyUpdatesFromChangeHubEvent:(id)arg1 assetUpdates:(id*)arg2;
+ (void)delayedCloudFeedDataFromChangeHubEvent:(id)arg1 albumUpdates:(id*)arg2 assetInserts:(id*)arg3 assetUpdates:(id*)arg4 commentInserts:(id*)arg5 invitationRecordUpdates:(id*)arg6 deletionEntries:(id*)arg7;
+ (void)delayedDupeAnalysisDataFromChangeHubEvent:(id)arg1 normalInserts:(id*)arg2 cloudInserts:(id*)arg3;
+ (void)delayedMomentDataFromChangeHubEvent:(id)arg1 insertsAndUpdates:(id*)arg2 deletes:(id*)arg3;
+ (void)delayedSearchIndexUpdatesFromChangeHubEvent:(id)arg1 updates:(id*)arg2;

- (void)_recordAlbumUUIDForSearchIndexUpdate:(id)arg1 isInsert:(bool)arg2;
- (void)_recordAssetForSearchIndexUpdate:(id)arg1;
- (void)_recordAssetUUIDForSearchIndexUpdate:(id)arg1 isInsert:(bool)arg2;
- (void)_recordDelayedAlbumCountUpdate:(id)arg1;
- (void)_recordDelayedCloudFeedAlbumUpdate:(id)arg1;
- (void)_recordDelayedCloudFeedAssetInsert:(id)arg1;
- (void)_recordDelayedCloudFeedAssetUpdate:(id)arg1;
- (void)_recordDelayedCloudFeedCommentInsert:(id)arg1;
- (void)_recordDelayedCloudFeedDeletionEntries:(id)arg1;
- (void)_recordDelayedCloudFeedInvitationRecordUpdate:(id)arg1;
- (void)_recordDelayedMomentAssetDeletionsDictionary:(id)arg1 forKey:(id)arg2;
- (void)_recordDelayedMomentAssetUpdates:(id)arg1;
- (void)_recordDetectedFaceUUIDInsertForSearchIndexUpdate:(id)arg1;
- (void)_recordManagedObjectUUID:(id)arg1 forSearchIndexUpdateKey:(id)arg2;
- (void)_recordMemoryUUIDForSearchIndexUpdate:(id)arg1 isInsert:(bool)arg2;
- (void)_recordNormalAssetForDupeAnalysis:(id)arg1;
- (void)_recordPersonUUIDInsertForSearchIndexUpdate:(id)arg1;
- (void)_recordStreamAssetForDupeAnalysis:(id)arg1;
- (void)appendDelayedAlbumCountUpdatesToXPCMessage:(id)arg1;
- (void)appendDelayedAssetsForFileSystemPersistencyUpdate:(id)arg1;
- (void)appendDelayedCloudFeedDataToXPCMessage:(id)arg1;
- (void)appendDelayedDupeAnalysisToXPCMessage:(id)arg1;
- (void)appendDelayedMomentDataToXPCMessage:(id)arg1;
- (void)appendDelayedSearchIndexUpdatesToXPCMessage:(id)arg1;
- (id)clientTransaction;
- (void)dealloc;
- (void)forceAlbumCountUpdate:(id)arg1;
- (id)initWithClientTransaction:(id)arg1;
- (void)persistDelayedActionsScope:(id)arg1;
- (void)popDelayedAlbumCountUpdates:(id*)arg1;
- (void)popDelayedAssetsForAnalysis:(id*)arg1;
- (void)popDelayedAssetsForFilesystemPersistencyUpdates:(id*)arg1;
- (void)popDelayedCloudFeedAlbumUpdates:(id*)arg1 assetInserts:(id*)arg2 assetUpdates:(id*)arg3 commentInserts:(id*)arg4 invitationRecordUpdates:(id*)arg5 deletionEntries:(id*)arg6;
- (void)popDelayedDupeAnalysisNormalInserts:(id*)arg1 cloudInserts:(id*)arg2;
- (void)popDelayedMomentInsertsAndUpdates:(id*)arg1 deletes:(id*)arg2;
- (void)popDelayedSearchIndexUpdates:(id*)arg1;
- (bool)popNeedsUdpateUnverifiedFaceCountThreshold;
- (void)recordAdditionalAssetAttributesForSearchIndexUpdate:(id)arg1;
- (void)recordAlbumCountUpdate:(id)arg1;
- (void)recordAlbumForCloudFeedUpdate:(id)arg1;
- (void)recordAlbumForSearchIndexUpdate:(id)arg1;
- (void)recordAssetForAlbumCountUpdate:(id)arg1;
- (void)recordAssetForAnalysis:(id)arg1 workerFlags:(int)arg2 workerType:(short)arg3;
- (void)recordAssetForCloudFeedUpdate:(id)arg1;
- (void)recordAssetForDupeAnalysis:(id)arg1;
- (void)recordAssetForFileSystemPersistencyUpdate:(id)arg1;
- (void)recordAssetForMomentUpdate:(id)arg1;
- (void)recordAssetForSearchIndexUpdate:(id)arg1;
- (void)recordCommentForCloudFeedUpdate:(id)arg1;
- (void)recordDetectedFaceForSearchIndexUpdate:(id)arg1;
- (void)recordInvitationRecordForCloudFeedUpdate:(id)arg1;
- (void)recordMemoryForSearchIndexUpdate:(id)arg1;
- (void)recordNeedsUpdateUnverifiedFaceCountThreshold;
- (void)recordPersonForSearchIndexUpdate:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

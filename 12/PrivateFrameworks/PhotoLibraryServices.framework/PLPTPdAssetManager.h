<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLPTPdAssetManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLPTPdAssetManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLPTPdAssetManager : NSObject <PLManagedObjectContextPTPNotificationDelegate> {
    NSSet * _availableAssetIDs;
    NSObject<PhotoLibraryPTPDelegate> * _delegate;
    NSString * _firstDCIMFolderServiced;
    PLPTPdFormatConversionManager * _formatConversionManager;
    int  _libraryStatus;
    PLPhotoLibrary * _photoLibrary;
    NSMutableSet * _ptpDeletedAssets;
    NSObject<OS_dispatch_queue> * availableAssetsQueue;
    NSFileManager * fileManager;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) NSObject<PhotoLibraryPTPDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSFileManager *fileManager;
@property (readonly) unsigned long long hash;
@property (retain) PFMediaCapabilities *peerMediaCapabilities;
@property (nonatomic, readonly, retain) PLPhotoLibrary *photoLibrary;
@property (readonly) Class superclass;

- (id)_allAssetObjectIDs;
- (void)_expungeAsset:(id)arg1 withReason:(id)arg2;
- (id)_generateThumbnailForAsset:(id)arg1 imagePath:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 compressionQuality:(float)arg4;
- (void)_performBlockAndWait:(id /* block */)arg1;
- (id)_performResultBlockAndWait:(id /* block */)arg1;
- (id)_performResultTransactionAndWait:(id /* block */)arg1;
- (void)_performTransactionAndWait:(id /* block */)arg1;
- (id)_ptpAssetEnumeratorAllAssets;
- (id)_ptpAssetsForAssetWithID:(id)arg1;
- (bool)_ptpDeletePhotoWithAssetID:(id)arg1 andExtension:(id)arg2;
- (id)_ptpInformationForAllAssets;
- (id)_ptpInformationForPhotoWithObjectID:(id)arg1;
- (id)_ptpOriginalExifDataForAssetWithID:(id)arg1;
- (id)_ptpThumbnailForFullSizeRenderWithAssetID:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 compressionQuality:(float)arg3;
- (id)_ptpThumbnailForOriginalWithAssetID:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 compressionQuality:(float)arg3;
- (void)_registerForFirstUnlockNotification;
- (struct CGSize { double x1; double x2; })_validateSize:(struct CGSize { double x1; double x2; })arg1;
- (id)albumHandles;
- (id)assetReaderForFormatConvertedPTPAsset:(id)arg1 ofManagedAsset:(id)arg2 path:(id)arg3;
- (id)assetsInAssociation:(struct NSObject { Class x1; }*)arg1;
- (id)associationsInAlbum:(struct NSObject { Class x1; }*)arg1;
- (id)dataByJPEGCompressingCGImage:(struct CGImage { }*)arg1 toLengthLimit:(long long)arg2 initialCompressionQuality:(float)arg3 size:(struct CGSize { double x1; double x2; })arg4 orientation:(long long)arg5;
- (id)dataForThumbnailFileAtPath:(id)arg1 rotatedToOrientation:(long long)arg2 size:(struct CGSize { double x1; double x2; })arg3 compressionQuality:(float)arg4;
- (void)dealloc;
- (id)delegate;
- (void)deleteAsset:(id)arg1;
- (void)enumeratePTPInformationForFilesInDirectory:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)fetchObjectIDsForAssetsExposedToPTPFromObjectIDs:(id)arg1;
- (id)fileManager;
- (void)handlePhotoLibraryAvailableNotification;
- (id)infoForAlbum:(struct NSObject { Class x1; }*)arg1;
- (id)infoForAsset:(struct NSObject { Class x1; }*)arg1;
- (id)init;
- (bool)libraryIsAvailable;
- (id)managedObjectContext;
- (void)managedObjectContext:(id)arg1 libraryChangedWithInsertedAssetIDs:(id)arg2 deletedAssetIDs:(id)arg3 changedAssetIDs:(id)arg4 adjustedAssetIDs:(id)arg5;
- (void)markSignpostForAsset:(id)arg1 endMarker:(bool)arg2 adjusted:(bool)arg3 arg4:(unsigned long long)arg4;
- (struct CGSize { double x1; double x2; })masterThumbSize;
- (id)peerMediaCapabilities;
- (id)photoLibrary;
- (id)ptpAssetReaderForAssetHandle:(id)arg1;
- (bool)ptpCanDeleteFiles;
- (bool)ptpDeletePhotoForAssetHandle:(id)arg1;
- (bool)ptpDeletePhotoWithKey:(id)arg1 andExtension:(id)arg2;
- (void)ptpEnumerateAllAssetsUsingBlock:(id /* block */)arg1;
- (void)ptpEnumerateAssetsWithPrimaryKeys:(id)arg1 usingBlock:(id /* block */)arg2;
- (id)ptpExifDataForAssetHandle:(id)arg1;
- (id)ptpExifDataForPhotoWithKey:(id)arg1;
- (id)ptpImagePropertiesForAssetHandle:(id)arg1;
- (id)ptpInformationForFilesInDirectory:(id)arg1;
- (id)ptpInformationForPhotosWithPrimaryKeys:(id)arg1;
- (id)ptpThumbnailForAssetHandle:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 compressionQuality:(float)arg3;
- (id)ptpThumbnailForPhotoWithKey:(id)arg1;
- (id)ptpThumbnailForPhotoWithKey:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2 compressionQuality:(float)arg3;
- (bool)requestedSize:(struct CGSize { double x1; double x2; })arg1 fitsInSourceSize:(struct CGSize { double x1; double x2; })arg2;
- (void)setDelegate:(id)arg1;
- (void)setFileManager:(id)arg1;
- (void)setPeerMediaCapabilities:(id)arg1;
- (void)setPtpDelegate:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

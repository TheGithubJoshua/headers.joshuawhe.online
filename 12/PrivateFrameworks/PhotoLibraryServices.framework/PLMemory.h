<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLMemory.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLMemory.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLMemory : PLManagedObject <PLCloudDeletable, PLSearchableAssetCollection> {
    bool  _needsPersistenceUpdate;
}

@property (nonatomic, retain) NSData *assetListPredicate;
@property (nonatomic, retain) NSData *blacklistedFeature;
@property (nonatomic) short category;
@property (nonatomic) short cloudDeleteState;
@property (readonly) long long cloudDeletionType;
@property (nonatomic) short cloudLocalState;
@property (readonly, copy) NSString *cloudUUIDForDeletion;
@property (nonatomic, retain) NSDate *creationDate;
@property (nonatomic, retain) NSSet *curatedAssets;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSSet *extendedCuratedAssets;
@property (nonatomic) bool favorite;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PLManagedAsset *keyAsset;
@property (nonatomic, readonly) NSDate *keyAssetCreationDate;
@property (nonatomic, readonly) NSString *keyAssetUUID;
@property (nonatomic, retain) NSDate *lastMoviePlayedDate;
@property (nonatomic, retain) NSDate *lastViewedDate;
@property (nonatomic, retain) NSDictionary *movieAssetState;
@property (nonatomic, retain) NSSet *movieCuratedAssets;
@property (nonatomic, retain) NSData *movieData;
@property (nonatomic) bool needsPersistenceUpdate;
@property (nonatomic) short notificationState;
@property (nonatomic, readonly) unsigned long long numberOfAssets;
@property (nonatomic) bool pending;
@property (nonatomic) long long pendingPlayCount;
@property (nonatomic) long long pendingShareCount;
@property (nonatomic) long long pendingViewCount;
@property (nonatomic, retain) NSData *photosGraphData;
@property (nonatomic) long long photosGraphVersion;
@property (nonatomic) long long playCount;
@property (nonatomic) bool rejected;
@property (nonatomic, retain) NSSet *representativeAssets;
@property (nonatomic) double score;
@property (nonatomic, readonly) NSDate *searchableEndDate;
@property (nonatomic, readonly) NSDate *searchableStartDate;
@property (nonatomic) long long shareCount;
@property (nonatomic) short subcategory;
@property (nonatomic, readonly) NSString *subtitle;
@property (nonatomic, retain) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSString *title;
@property (nonatomic, retain) NSString *title;
@property (nonatomic) bool userCreated;
@property (nonatomic, retain) NSString *uuid;
@property (nonatomic) long long viewCount;

+ (id)_memoriesMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2 limit:(long long)arg3 inManagedObjectContext:(id)arg4;
+ (bool)_shouldPrefetchMemoryMovieCuratedAssetsInPhotoLibrary:(id)arg1;
+ (id)baseSearchIndexPredicate;
+ (long long)cloudDeletionTypeForTombstone:(id)arg1;
+ (id)cloudUUIDKeyForDeletion;
+ (void)deleteMemoriesWithObjectIDs:(id)arg1 inPhotoLibrary:(id)arg2;
+ (void)deletePendingMemoriesCreatedBefore:(id)arg1 inPhotoLibrary:(id)arg2;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (bool)indexTitleForMemoryCategory:(unsigned long long)arg1;
+ (id)insertIntoPhotoLibrary:(id)arg1 withUUID:(id)arg2 title:(id)arg3 subtitle:(id)arg4 creationDate:(id)arg5;
+ (id)memoriesToPrefetchInPhotoLibrary:(id)arg1;
+ (id)memoriesToUploadInPhotoLibrary:(id)arg1 limit:(long long)arg2;
+ (id)memoriesWithUUIDs:(id)arg1 inPhotoLibrary:(id)arg2;
+ (id)memoryWithUUID:(id)arg1 inPhotoLibrary:(id)arg2;
+ (void)resetCloudStateInPhotoLibrary:(id)arg1 hardReset:(bool)arg2;

- (id)assetUUIDsForPreviewWithCount:(unsigned long long)arg1;
- (id)calculateKeyAsset;
- (long long)cloudDeletionType;
- (id)cloudUUIDForDeletion;
- (id)cplFullRecord;
- (id)cplMemoryChange;
- (void)delete;
- (void)didSave;
- (bool)isSyncableChange;
- (bool)isValidForPersistence;
- (id)keyAssetCreationDate;
- (id)keyAssetUUID;
- (bool)needsPersistenceUpdate;
- (unsigned long long)numberOfAssets;
- (void)persistMetadataToFileSystem;
- (void)prepareForDeletion;
- (void)removePersistedFileSystemData;
- (unsigned long long)searchIndexCategory;
- (id)searchIndexContents;
- (id)searchableEndDate;
- (id)searchableStartDate;
- (void)setKeyAsset:(id)arg1;
- (void)setNeedsPersistenceUpdate:(bool)arg1;
- (bool)supportsCloudUpload;
- (void)updateWithCPLMemoryChange:(id)arg1 inPhotoLibrary:(id)arg2;
- (void)willSave;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

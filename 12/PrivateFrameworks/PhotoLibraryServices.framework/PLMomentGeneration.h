<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLMomentGeneration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoLibraryServices.framework/PLMomentGeneration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices (1.0)
 */

@interface PLMomentGeneration : NSObject {
    PLMomentAnalyzer * _analyzer;
    NSSet * _clusteringDeletedClusters;
    unsigned long long  _inProgressCount;
    NSObject<OS_dispatch_queue> * _incrementalGenerationStateQueue;
    bool  _isGenerationPassInProgress;
    bool  _isInStressTestMode;
    <PLMomentGenerationDataManagement> * _momentGenerationDataManager;
    PLMomentAnalyzer * _pairedAnalyzer;
    NSMutableArray * _pendingCompletionBlocks;
    NSMutableDictionary * _pendingDeletes;
    NSMutableOrderedSet * _pendingInsertsAndUpdates;
}

@property (nonatomic) PLMomentAnalyzer *analyzer;
@property (nonatomic, retain) NSSet *clusteringDeletedClusters;
@property (nonatomic, readonly) <PLMomentGenerationDataManagement> *momentGenerationDataManager;

+ (id)_insertMegaMomentListsForMoments:(id)arg1 inMomentDataManager:(id)arg2;
+ (id)_insertYearMomentListsForMoments:(id)arg1 earliestDate:(id)arg2 latestDate:(id)arg3 inMomentDataManager:(id)arg4;
+ (bool)_rebuildAllMomentListsWithDataManager:(id)arg1 error:(id*)arg2;
+ (void)_updateMoment:(id)arg1 fromCluster:(id)arg2 inManager:(id)arg3;
+ (id)generateMergeCustomMomentUUID;
+ (id)generateSplitCustomMomentUUID;

- (void)_appendAssetsToReplayLog:(id)arg1 forBatchUpdate:(bool)arg2;
- (void)_cleanUpMoment:(id)arg1;
- (void)_clearReplayLog;
- (bool)_deleteAllMomentDataInManager:(id)arg1 incremental:(bool)arg2 error:(id*)arg3;
- (id)_detailsForAsset:(id)arg1 simpleOnly:(bool)arg2;
- (id)_detailsForMoment:(id)arg1;
- (id)_insertAndUpdateRemainingMomentsInManager:(id)arg1 withAffectedMoments:(id)arg2;
- (id)_insertMegaMomentListsForMoments:(id)arg1 inMomentDataManager:(id)arg2;
- (id)_insertMomentsForMomentClusters:(id)arg1 inManager:(id)arg2;
- (id)_insertYearMomentListsForMoments:(id)arg1 earliestDate:(id)arg2 latestDate:(id)arg3 inMomentDataManager:(id)arg4;
- (bool)_isAsset:(id)arg1 identicalToAssetForMoments:(id)arg2;
- (id)_logEntryForAssets:(id)arg1 isBatchUpdate:(bool)arg2;
- (id)_momentClustersForAssets:(id)arg1 inManager:(id)arg2 updateDeletedClusters:(bool)arg3;
- (id)_nameForMomentGenerationType:(short)arg1;
- (id)_newPublicGlobalUUIDsToAssetsMappingWithAssets:(id)arg1;
- (void)_processMomentsWithAssets:(id)arg1 hiddenAssets:(id)arg2 inManager:(id)arg3 affectedMoments:(id)arg4 updatedMoments:(id*)arg5;
- (bool)_rebuildAllMomentsInManager:(id)arg1 shouldAnalyze:(bool)arg2 error:(id*)arg3;
- (void)_refreshObjects:(id)arg1 withDataManager:(id)arg2;
- (void)_runIncrementalGenerationPassWithCompletionHandler:(id /* block */)arg1;
- (void)_updateIncrementalMomentGeneration;
- (bool)_writeDetails:(id)arg1 toFilepath:(id)arg2 withDefaultFilename:(id)arg3;
- (id)allAssetMetadataWriteToFile:(id)arg1;
- (id)allMomentsMetadataWriteToFile:(id)arg1;
- (id)analyzer;
- (void)clearUserInfluencedMoments;
- (id)clusteringDeletedClusters;
- (void)dealloc;
- (void)generateWithAssetInsertsAndUpdates:(id)arg1 assetDeletes:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)generateWithIncrementalDataCompletionHandler:(id /* block */)arg1;
- (id)initWithMomentGenerationDataManager:(id)arg1;
- (id)momentGenerationDataManager;
- (id)momentGenerationStatus;
- (void)rebuildAllMomentLists:(id /* block */)arg1;
- (bool)rebuildAllMomentsWithManager:(id)arg1 error:(id*)arg2;
- (void)rebuildAllMomentsWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)saveChangesForAssetInsertsAndUpdates:(id)arg1 assetDeletes:(id)arg2;
- (void)setAnalyzer:(id)arg1;
- (void)setClusteringDeletedClusters:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

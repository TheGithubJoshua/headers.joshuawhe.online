<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FIUIDeepBreathingPetalRingGLView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FitnessUI.framework/FIUIDeepBreathingPetalRingGLView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FitnessUI.framework/FitnessUI (1)
 */

@interface FIUIDeepBreathingPetalRingGLView : HKGLView {
    /* Warning: Unrecognized filer type: ']' using 'void*' */ void* _circlePosition;
    /* Warning: Unrecognized filer type: ']' using 'void*' */ void* _circleProperties;
    unsigned int  _indexBuffer;
    unsigned int  _indices;
    long long  _numberOfPetals;
    long long  _numberOfVisiblePetals;
    unsigned int  _petalPositionUniform;
    unsigned int  _petalPropertiesUniform;
    <FIUIDeepBreathingPetalRingGLViewDelegate> * _petalRingDelegate;
    unsigned int  _program;
    unsigned int  _projectionMatrixUniform;
    struct CGPoint { 
        double x; 
        double y; 
    }  _ringCenter;
    void _ringCenterVector;
    float  _ringRadius;
    bool  _showBlurTrails;
    GLKTextureInfo * _texture;
    unsigned int  _textureRotationUniform;
    void _textureRotationVector;
    unsigned int  _textureSamplerUniform;
    unsigned int  _vertexBuffer;
    struct { 
        union _GLKVector2 { 
            struct { 
                float x; 
                float y; 
            } ; 
            struct { 
                float s; 
                float t; 
            } ; 
            float v[2]; 
        } position; 
        union _GLKVector2 { 
            struct { 
                float x; 
                float y; 
            } ; 
            struct { 
                float s; 
                float t; 
            } ; 
            float v[2]; 
        } coordinate; 
    }  _vertices;
}

@property (nonatomic, readonly) long long numberOfPetals;
@property (nonatomic, readonly) long long numberOfVisiblePetals;
@property (nonatomic) <FIUIDeepBreathingPetalRingGLViewDelegate> *petalRingDelegate;
@property (nonatomic) struct CGPoint { double x1; double x2; } ringCenter;
@property (nonatomic) float ringRadius;
@property (nonatomic, readonly) bool showBlurTrails;

- (void).cxx_destruct;
- (void)_clearCirclesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_context_applyInitialState;
- (void)_context_createBuffers;
- (void)_context_findUniformsAndAttributes;
- (void)_context_loadShadersWithNumberOfPetals:(long long)arg1 showBlurTrails:(bool)arg2;
- (void)_context_setupScene;
- (double)_maxPetalRingRadius;
- (void)_setCircleAtIndex:(long long)arg1 center:(struct CGPoint { double x1; double x2; })arg2 radius:(float)arg3 blurriness:(float)arg4 alpha:(float)arg5;
- (void)_teardown;
- (void)_updateVertices;
- (void)dealloc;
- (unsigned int)drawInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withContext:(id)arg2;
- (void)importDataFromPetalRing:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 numberOfPetals:(long long)arg2 showBlurTrails:(bool)arg3;
- (long long)numberOfPetals;
- (long long)numberOfVisiblePetals;
- (id)petalRingDelegate;
- (struct CGPoint { double x1; double x2; })ringCenter;
- (float)ringRadius;
- (void)setBlurTrailAtIndex:(long long)arg1 center:(struct CGPoint { double x1; double x2; })arg2 radius:(float)arg3 blurriness:(float)arg4 alpha:(float)arg5;
- (void)setGradientRotationAngle:(float)arg1;
- (void)setNumberOfVisiblePetals:(long long)arg1 showBlurTrails:(bool)arg2;
- (void)setPetalAtIndex:(long long)arg1 center:(struct CGPoint { double x1; double x2; })arg2 radius:(float)arg3 alpha:(float)arg4;
- (void)setPetalRingDelegate:(id)arg1;
- (void)setRingCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setRingRadius:(float)arg1;
- (bool)showBlurTrails;
- (void)update;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CompassBackgroundView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CompassUI.framework/CompassBackgroundView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CompassUI.framework/CompassUI (1)
 */

@interface CompassBackgroundView : CompassRotatingView <GLKViewDelegate> {
    double  _bearing;
    struct CGPoint { 
        double x; 
        double y; 
    }  _compassCenter;
    EAGLContext * _context;
    struct CGPoint { 
        double x; 
        double y; 
    }  _currentOffset;
    GLKView * _glView;
    CompassAtlas * _imageAtlas;
    CompassShader * _knockoutShader;
    unsigned int  _labelsIndexBuffer;
    unsigned int * _labelsIndexes;
    struct { float x1; float x2; float x3; float x4; struct { float x_5_1_1; float x_5_1_2; float x_5_1_3; float x_5_1_4; } x5; } * _labelsPoints;
    unsigned int  _labelsVertexArray;
    unsigned int  _labelsVertexBuffer;
    CompassShader * _lineShader;
    union _GLKMatrix4 { 
        struct { 
            float m00; 
            float m01; 
            float m02; 
            float m03; 
            float m10; 
            float m11; 
            float m12; 
            float m13; 
            float m20; 
            float m21; 
            float m22; 
            float m23; 
            float m30; 
            float m31; 
            float m32; 
            float m33; 
        } ; 
        float m[16]; 
    }  _modelViewMatrix;
    CompassShader * _normalShader;
    unsigned int  _otherLinesIndexBuffer;
    unsigned int  _otherLinesVertexArray;
    unsigned int  _otherLinesVertexBuffer;
    union _GLKMatrix4 { 
        struct { 
            float m00; 
            float m01; 
            float m02; 
            float m03; 
            float m10; 
            float m11; 
            float m12; 
            float m13; 
            float m20; 
            float m21; 
            float m22; 
            float m23; 
            float m30; 
            float m31; 
            float m32; 
            float m33; 
        } ; 
        float m[16]; 
    }  _projectionMatrix;
    bool  _shownInCompass;
    CompassShader * _textureShader;
    unsigned int  _ticIndexBuffer;
    unsigned int * _ticIndexes;
    double  _ticLength;
    struct { float x1; float x2; float x3; float x4; float x5; float x6; struct { float x_7_1_1; float x_7_1_2; float x_7_1_3; float x_7_1_4; } x7; } * _ticPoints;
    double  _ticRadius;
    unsigned int  _ticVertexArray;
    unsigned int  _ticVertexBuffer;
}

@property (nonatomic) double bearing;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic, readonly) double ticLength;
@property (nonatomic) double ticRadius;

- (void).cxx_destruct;
- (double)bearing;
- (void)dealloc;
- (void)generateCompassPoints;
- (void)generateExtraLines;
- (void)generateNumberAtlas;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forCompass:(bool)arg2;
- (void)layoutSubviews;
- (void)positionLabelNamed:(id)arg1 atDegrees:(long long)arg2 fromCenter:(struct CGPoint { double x1; double x2; })arg3 withRadius:(double)arg4 vertexOffset:(unsigned long long)arg5 color:(struct { float x1; float x2; float x3; float x4; })arg6;
- (void)positionLabels;
- (void)renderCrosshairInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setBearing:(double)arg1;
- (void)setCompassHeading:(double)arg1;
- (bool)setCrosshairOffset:(struct CGSize { double x1; double x2; })arg1;
- (void)setTicRadius:(double)arg1;
- (void)setupGL;
- (void)tearDownGL;
- (double)ticLength;
- (double)ticRadius;
- (void)updateDisplay;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_DASScheduler.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/DuetActivityScheduler.framework/_DASScheduler.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/DuetActivityScheduler.framework/DuetActivityScheduler (1)
 */

@interface _DASScheduler : NSObject <NSXPCListenerDelegate, _DASActivityBackgroundLaunchScheduler, _DASActivityGroupScheduler, _DASActivityMetering, _DASActivitySchedulerIntrospecting> {
    NSMutableDictionary * _activityToDataMap;
    NSObject<OS_dispatch_queue> * _connectionCreationQueue;
    NSObject<OS_os_log> * _dasFrameworkLog;
    NSXPCListenerEndpoint * _endpoint;
    bool  _interrupted;
    NSObject<OS_dispatch_queue> * _queue;
    _DASSubmissionRateLimiter * _rateLimiter;
    int  _resubmitToken;
    NSObject<OS_dispatch_queue> * _runQueue;
    NSMutableDictionary * _startedActivities;
    NSMutableDictionary * _submittedActivities;
    NSXPCConnection * _xpcConnection;
}

@property (nonatomic, retain) NSMutableDictionary *activityToDataMap;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *connectionCreationQueue;
@property (nonatomic, retain) NSObject<OS_os_log> *dasFrameworkLog;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSXPCListenerEndpoint *endpoint;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool interrupted;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) _DASSubmissionRateLimiter *rateLimiter;
@property (nonatomic) int resubmitToken;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *runQueue;
@property (nonatomic, retain) NSMutableDictionary *startedActivities;
@property (nonatomic, retain) NSMutableDictionary *submittedActivities;
@property (readonly) Class superclass;
@property (retain) NSXPCConnection *xpcConnection;

+ (id)scheduler;
+ (id)schedulerWithEndpoint:(id)arg1;
+ (id)sharedScheduler;

- (void).cxx_destruct;
- (void)activityCanceled:(id)arg1;
- (void)activityCompleted:(id)arg1;
- (id)activityRunStatistics;
- (void)activityStarted:(id)arg1;
- (void)activityStartedWithParameters:(id)arg1;
- (void)activityStoppedWithParameters:(id)arg1;
- (id)activityToDataMap;
- (void)cancelActivities:(id)arg1;
- (id)connectionCreationQueue;
- (void)createActivityGroup:(id)arg1;
- (id)currentConnection;
- (id)currentPredictions;
- (id)dasFrameworkLog;
- (void)dealloc;
- (id)endpoint;
- (void)forceRunActivities:(id)arg1;
- (void)handleEligibleActivities:(id /* block */)arg1;
- (void)handleNoLongerRunningActivities:(id)arg1;
- (void)handleRescindedActivity:(id)arg1;
- (id)initWithListenerEndpoint:(id)arg1;
- (bool)interrupted;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)pauseWithParameters:(id)arg1;
- (id)queue;
- (id)rateLimiter;
- (double)remainingBalanceForBudgetWithName:(id)arg1;
- (void)resubmitPendingActivities;
- (void)resubmitRunningActivities;
- (int)resubmitToken;
- (void)runActivities:(id)arg1;
- (id)runQueue;
- (id)runningActivities;
- (id)runningGroupActivities;
- (id)scoresForActivityWithName:(id)arg1;
- (void)setActivityToDataMap:(id)arg1;
- (void)setBalance:(double)arg1 forBudgetWithName:(id)arg2;
- (void)setConnectionCreationQueue:(id)arg1;
- (void)setDasFrameworkLog:(id)arg1;
- (void)setEndpoint:(id)arg1;
- (void)setInterrupted:(bool)arg1;
- (void)setMinimumBackgroundFetchInterval:(double)arg1 forApp:(id)arg2;
- (void)setQueue:(id)arg1;
- (void)setRateLimiter:(id)arg1;
- (void)setResubmitToken:(int)arg1;
- (void)setRunQueue:(id)arg1;
- (void)setStartedActivities:(id)arg1;
- (void)setSubmittedActivities:(id)arg1;
- (void)setXpcConnection:(id)arg1;
- (void)setupXPCConnectionWithEndpoint:(id)arg1;
- (id)startedActivities;
- (void)submitActivities:(id)arg1;
- (void)submitActivitiesInternal:(id)arg1;
- (void)submitActivity:(id)arg1;
- (void)submitActivity:(id)arg1 inGroup:(id)arg2;
- (void)submitActivity:(id)arg1 inGroupWithName:(id)arg2;
- (bool)submitActivityInternal:(id)arg1;
- (id)submittedActivities;
- (id)submittedTaskState;
- (void)suspendActivities:(id)arg1;
- (void)unprotectedEstablishDaemonConnectionIfInterrupted;
- (void)updateActivity:(id)arg1 withParameters:(id)arg2;
- (void)updateBytesConsumedForActivity:(id)arg1 downloadedOnWifi:(unsigned long long)arg2 downloadedOnCell:(unsigned long long)arg3 uploadedOnWifi:(unsigned long long)arg4 uploadedOnCell:(unsigned long long)arg5;
- (id)xpcConnection;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

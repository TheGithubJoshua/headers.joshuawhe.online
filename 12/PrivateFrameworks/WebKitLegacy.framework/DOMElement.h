<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DOMElement.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WebKitLegacy.framework/DOMElement.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy (8607.3.18)
 */

@interface DOMElement : DOMNode

@property (readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } boundsInRootViewSpace;
@property (readonly) unsigned int childElementCount;
@property (copy) NSString *className;
@property (readonly) int clientHeight;
@property (readonly) int clientLeft;
@property (readonly) int clientTop;
@property (readonly) int clientWidth;
@property (readonly) DOMElement *firstElementChild;
@property (copy) NSString *innerHTML;
@property (readonly, copy) NSString *innerText;
@property (readonly) DOMElement *lastElementChild;
@property (readonly) DOMElement *mf_containingQuoteBlockElement;
@property (readonly) bool mf_isContainedInQuoteBlock;
@property (readonly) bool mf_isContainedInTable;
@property (readonly) DOMElement *nextElementSibling;
@property (readonly) int offsetHeight;
@property (readonly) int offsetLeft;
@property (readonly) DOMElement *offsetParent;
@property (readonly) int offsetTop;
@property (readonly) int offsetWidth;
@property (copy) NSString *outerHTML;
@property (readonly) DOMElement *previousElementSibling;
@property (readonly) int scrollHeight;
@property int scrollLeft;
@property int scrollTop;
@property (readonly) int scrollWidth;
@property (readonly) DOMCSSStyleDeclaration *style;
@property (readonly, copy) NSString *tagName;

// Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy

+ (id)_DOMElementFromJSContext:(struct OpaqueJSContext { }*)arg1 value:(struct OpaqueJSValue { }*)arg2;

- (struct __CTFont { }*)_font;
- (id)_getURLAttribute:(id)arg1;
- (void)blur;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundsInRootViewSpace;
- (unsigned int)childElementCount;
- (id)children;
- (id)classList;
- (id)className;
- (int)clientHeight;
- (int)clientLeft;
- (int)clientTop;
- (int)clientWidth;
- (id)closest:(id)arg1;
- (id)firstElementChild;
- (void)focus;
- (id)getAttribute:(id)arg1;
- (id)getAttributeNS:(id)arg1 :(id)arg2;
- (id)getAttributeNS:(id)arg1 localName:(id)arg2;
- (id)getAttributeNode:(id)arg1;
- (id)getAttributeNodeNS:(id)arg1 :(id)arg2;
- (id)getAttributeNodeNS:(id)arg1 localName:(id)arg2;
- (id)getElementsByClassName:(id)arg1;
- (id)getElementsByTagName:(id)arg1;
- (id)getElementsByTagNameNS:(id)arg1 :(id)arg2;
- (id)getElementsByTagNameNS:(id)arg1 localName:(id)arg2;
- (bool)hasAttribute:(id)arg1;
- (bool)hasAttributeNS:(id)arg1 :(id)arg2;
- (bool)hasAttributeNS:(id)arg1 localName:(id)arg2;
- (id)innerHTML;
- (id)innerText;
- (bool)isFocused;
- (id)lastElementChild;
- (bool)matches:(id)arg1;
- (id)nextElementSibling;
- (int)offsetHeight;
- (int)offsetLeft;
- (id)offsetParent;
- (int)offsetTop;
- (int)offsetWidth;
- (id)outerHTML;
- (id)previousElementSibling;
- (id)querySelector:(id)arg1;
- (id)querySelectorAll:(id)arg1;
- (void)remove;
- (void)removeAttribute:(id)arg1;
- (void)removeAttributeNS:(id)arg1 :(id)arg2;
- (void)removeAttributeNS:(id)arg1 localName:(id)arg2;
- (id)removeAttributeNode:(id)arg1;
- (void)scrollByLines:(int)arg1;
- (void)scrollByPages:(int)arg1;
- (int)scrollHeight;
- (void)scrollIntoView:(bool)arg1;
- (void)scrollIntoViewIfNeeded:(bool)arg1;
- (int)scrollLeft;
- (int)scrollTop;
- (int)scrollWidth;
- (void)setAttribute:(id)arg1 :(id)arg2;
- (void)setAttribute:(id)arg1 value:(id)arg2;
- (void)setAttributeNS:(id)arg1 :(id)arg2 :(id)arg3;
- (void)setAttributeNS:(id)arg1 qualifiedName:(id)arg2 value:(id)arg3;
- (id)setAttributeNode:(id)arg1;
- (id)setAttributeNodeNS:(id)arg1;
- (void)setClassName:(id)arg1;
- (void)setInnerHTML:(id)arg1;
- (void)setOuterHTML:(id)arg1;
- (void)setScrollLeft:(int)arg1;
- (void)setScrollTop:(int)arg1;
- (void)setUiactions:(id)arg1;
- (int)structuralComplexityContribution;
- (id)style;
- (id)tagName;
- (id)uiactions;
- (bool)webkitMatchesSelector:(id)arg1;
- (void)webkitRequestFullScreen:(unsigned short)arg1;
- (void)webkitRequestFullscreen;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

+ (bool)isRichTextStyle:(id)arg1;

- (bool)hasMarginsOfZero;
- (bool)isRichTextElement;
- (bool)isRichTextElementType;
- (id)mf_computedBackgroundColor;
- (id)mf_containingQuoteBlockElement;
- (bool)mf_hasBackgroundColorOrImage;
- (bool)mf_isContainedInAnyElementInSet:(id)arg1;
- (bool)mf_isContainedInQuoteBlock;
- (bool)mf_isContainedInTable;
- (int)mf_quoteLevelDelta;
- (void)mf_setDirAttributeToComputedValue;
- (void)mf_stripCSSStyle;
- (void)recursivelyRemoveMailAttributes;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

- (bool)exceedsStructuralComplexity:(int)arg1;
- (void)getTextWritingDirection:(long long*)arg1 override:(bool*)arg2;
- (bool)hasCustomLineHeight;
- (bool)inDocument;
- (bool)isHidden;
- (bool)selectable;
- (id)tapHighlightColor;
- (bool)touchCalloutEnabled;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

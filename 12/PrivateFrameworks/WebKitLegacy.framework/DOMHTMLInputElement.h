<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DOMHTMLInputElement.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WebKitLegacy.framework/DOMHTMLInputElement.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy (8607.3.18)
 */

@interface DOMHTMLInputElement : DOMHTMLElement <UITextInputTraits>

@property (readonly, copy) NSURL *absoluteImageURL;
@property (copy) NSString *accept;
@property (copy) NSString *accessKey;
@property (copy) NSString *align;
@property (copy) NSString *alt;
@property (readonly, copy) NSString *altDisplayString;
@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property bool autofocus;
@property bool checked;
@property (readonly, copy) NSString *debugDescription;
@property bool defaultChecked;
@property (copy) NSString *defaultValue;
@property (readonly, copy) NSString *description;
@property bool disabled;
@property (nonatomic) bool enablesReturnKeyAutomatically;
@property (retain) DOMFileList *files;
@property (readonly) DOMHTMLFormElement *form;
@property (readonly) unsigned long long hash;
@property bool indeterminate;
@property (nonatomic) long long keyboardAppearance;
@property (nonatomic) long long keyboardType;
@property int maxLength;
@property bool multiple;
@property (copy) NSString *name;
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules;
@property bool readOnly;
@property (nonatomic) long long returnKeyType;
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry;
@property int selectionEnd;
@property int selectionStart;
@property (copy) NSString *size;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long spellCheckingType;
@property (copy) NSString *src;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *textContentType;
@property (copy) NSString *type;
@property (copy) NSString *useMap;
@property (copy) NSString *value;
@property (readonly) bool willValidate;

// Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy

- (int)_autocapitalizeType;
- (id)_autofillContext;
- (bool)_isAutofilled;
- (bool)_isEdited;
- (bool)_isTextField;
- (void)_setAutofilled:(bool)arg1;
- (id)absoluteImageURL;
- (id)accept;
- (id)accessKey;
- (id)align;
- (id)alt;
- (id)altDisplayString;
- (id)autocomplete;
- (bool)autofocus;
- (bool)capture;
- (bool)checkValidity;
- (bool)checked;
- (void)click;
- (bool)defaultChecked;
- (id)defaultValue;
- (id)dirName;
- (bool)disabled;
- (id)endPosition;
- (id)files;
- (id)form;
- (id)formAction;
- (id)formEnctype;
- (id)formMethod;
- (bool)formNoValidate;
- (id)formTarget;
- (unsigned int)height;
- (bool)incremental;
- (bool)indeterminate;
- (void)insertTextSuggestion:(id)arg1;
- (id)labels;
- (id)list;
- (id)max;
- (int)maxLength;
- (id)min;
- (bool)multiple;
- (id)name;
- (id)pattern;
- (id)placeholder;
- (bool)readOnly;
- (bool)required;
- (void)select;
- (id)selectionDirection;
- (int)selectionEnd;
- (int)selectionStart;
- (void)setAccept:(id)arg1;
- (void)setAccessKey:(id)arg1;
- (void)setAlign:(id)arg1;
- (void)setAlt:(id)arg1;
- (void)setAutocomplete:(id)arg1;
- (void)setAutofocus:(bool)arg1;
- (void)setCapture:(bool)arg1;
- (void)setChecked:(bool)arg1;
- (void)setCustomValidity:(id)arg1;
- (void)setDefaultChecked:(bool)arg1;
- (void)setDefaultValue:(id)arg1;
- (void)setDirName:(id)arg1;
- (void)setDisabled:(bool)arg1;
- (void)setFiles:(id)arg1;
- (void)setFormAction:(id)arg1;
- (void)setFormEnctype:(id)arg1;
- (void)setFormMethod:(id)arg1;
- (void)setFormNoValidate:(bool)arg1;
- (void)setFormTarget:(id)arg1;
- (void)setHeight:(unsigned int)arg1;
- (void)setIncremental:(bool)arg1;
- (void)setIndeterminate:(bool)arg1;
- (void)setMax:(id)arg1;
- (void)setMaxLength:(int)arg1;
- (void)setMin:(id)arg1;
- (void)setMultiple:(bool)arg1;
- (void)setName:(id)arg1;
- (void)setPattern:(id)arg1;
- (void)setPlaceholder:(id)arg1;
- (void)setRangeText:(id)arg1;
- (void)setRangeText:(id)arg1 start:(unsigned int)arg2 end:(unsigned int)arg3 selectionMode:(id)arg4;
- (void)setReadOnly:(bool)arg1;
- (void)setRequired:(bool)arg1;
- (void)setSelectionDirection:(id)arg1;
- (void)setSelectionEnd:(int)arg1;
- (void)setSelectionRange:(int)arg1 end:(int)arg2;
- (void)setSelectionStart:(int)arg1;
- (void)setSize:(id)arg1;
- (void)setSrc:(id)arg1;
- (void)setStep:(id)arg1;
- (void)setType:(id)arg1;
- (void)setUseMap:(id)arg1;
- (void)setValue:(id)arg1;
- (void)setValueAsDate:(double)arg1;
- (void)setValueAsNumber:(double)arg1;
- (void)setValueAsNumberWithChangeEvent:(double)arg1;
- (void)setValueForUser:(id)arg1;
- (void)setValueWithChangeEvent:(id)arg1;
- (void)setWidth:(unsigned int)arg1;
- (id)size;
- (id)src;
- (id)startPosition;
- (id)step;
- (void)stepDown:(int)arg1;
- (void)stepUp:(int)arg1;
- (int)structuralComplexityContribution;
- (id)type;
- (id)useMap;
- (id)validationMessage;
- (id)value;
- (double)valueAsDate;
- (double)valueAsNumber;
- (unsigned int)width;
- (bool)willValidate;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

- (void)_accessoryClear;
- (bool)_requiresAccessoryView;
- (bool)_requiresInputView;
- (void)_startAssistingDocumentView:(id)arg1;
- (void)_stopAssistingDocumentView:(id)arg1;
- (bool)_supportsAccessoryClear;
- (bool)_supportsAutoFill;
- (id)_textFormElement;
- (id)createPeripheral;
- (bool)isAssistedDateType;
- (bool)isEditing;
- (bool)isLikelyToBeginPageLoad;
- (bool)isSecure;
- (bool)isTextControl;
- (long long)keyboardType;
- (bool)nodeCanBecomeFirstResponder;
- (void)setSelectionWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)text;
- (id)textInputTraits;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

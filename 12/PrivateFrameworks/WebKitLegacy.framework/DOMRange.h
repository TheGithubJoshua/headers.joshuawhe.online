<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DOMRange.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WebKitLegacy.framework/DOMRange.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy (8607.3.18)
 */

@interface DOMRange : DOMObject <UIWebSelectionBlock>

@property (readonly) bool collapsed;
@property (readonly) DOMNode *commonAncestorContainer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) DOMNode *endContainer;
@property (readonly) int endOffset;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *markupString;
@property (readonly) DOMNode *startContainer;
@property (readonly) int startOffset;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *text;
@property (nonatomic, readonly) WebArchive *webArchive;

// Image: /System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy

+ (id)rangeForFirstPosition:(id)arg1 second:(id)arg2;

- (id)_text;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingBox;
- (id)cloneContents;
- (id)cloneRange;
- (void)collapse:(bool)arg1;
- (bool)collapsed;
- (id)commonAncestorContainer;
- (short)compareBoundaryPoints:(unsigned short)arg1 :(id)arg2;
- (short)compareBoundaryPoints:(unsigned short)arg1 sourceRange:(id)arg2;
- (short)compareNode:(id)arg1;
- (short)comparePoint:(id)arg1 offset:(int)arg2;
- (id)createContextualFragment:(id)arg1;
- (void)dealloc;
- (void)deleteContents;
- (id)description;
- (void)detach;
- (id)enclosingWordRange;
- (id)endContainer;
- (int)endOffset;
- (id)endPosition;
- (void)expand:(id)arg1;
- (void)extend:(unsigned int)arg1 inDirection:(int)arg2;
- (id)extractContents;
- (id)firstNode;
- (void)insertNode:(id)arg1;
- (bool)intersectsNode:(id)arg1;
- (bool)isPointInRange:(id)arg1 offset:(int)arg2;
- (id)lineBoxRects;
- (id)markupString;
- (void)move:(unsigned int)arg1 inDirection:(int)arg2;
- (struct CGImage { }*)renderedImageForcingBlackText:(bool)arg1;
- (void)selectNode:(id)arg1;
- (void)selectNodeContents:(id)arg1;
- (void)setEnd:(id)arg1 :(int)arg2;
- (void)setEnd:(id)arg1 offset:(int)arg2;
- (void)setEndAfter:(id)arg1;
- (void)setEndBefore:(id)arg1;
- (void)setStart:(id)arg1 :(int)arg2;
- (void)setStart:(id)arg1 offset:(int)arg2;
- (void)setStartAfter:(id)arg1;
- (void)setStartBefore:(id)arg1;
- (id)startContainer;
- (int)startOffset;
- (id)startPosition;
- (void)surroundContents:(id)arg1;
- (id)text;
- (id)textRects;
- (id)toString;
- (id)webArchive;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

- (id)mf_fileAttachments;
- (id)mf_firstNode;
- (void)mf_getBlockBoundaryParent:(id*)arg1 nextSibling:(id*)arg2 atStart:(bool)arg3;
- (void)mf_hoistRange;
- (id)mf_lastNode;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

- (id)asDomNode;
- (id)asDomRange;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectAndInsideFixedPosition:(int*)arg1;
- (bool)canShrinkDirectlyToTextOnly;
- (bool)containsBlock:(id)arg1;
- (bool)containsRange:(id)arg1;
- (id)enclosingDocument;
- (bool)isSameBlock:(id)arg1;
- (id)largerParent;
- (id)parentBlock;
- (id)rangeOfContents;
- (bool)rendersAsBlock;
- (bool)selectable;
- (bool)strictlyContainsBlock:(id)arg1;
- (void)unionWithRange:(id)arg1;
- (id)webFrame;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

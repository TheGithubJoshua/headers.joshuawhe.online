<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ATSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AirTraffic.framework/ATSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AirTraffic.framework/AirTraffic (116)
 */

@interface ATSession : NSObject <ATSessionConnection, NSSecureCoding> {
    bool  _cancelled;
    NSXPCConnection * _connection;
    NSString * _dataClass;
    NSXPCListenerEndpoint * _endpoint;
    NSError * _error;
    double  _finishTime;
    bool  _finished;
    NSObject<OS_dispatch_group> * _group;
    NSString * _localizedDescription;
    <ATMessageLink> * _messageLink;
    NSHashTable * _observers;
    NSMutableSet * _observing;
    double  _progress;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _running;
    NSString * _sessionIdentifier;
    NSMutableArray * _sessionTasks;
    NSMutableDictionary * _sessionTasksByIdentifier;
    NSString * _sessionTypeIdentifier;
    double  _startTime;
    bool  _suspended;
}

@property (getter=isCancelled) bool cancelled;
@property (nonatomic, retain) NSString *dataClass;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) double duration;
@property (nonatomic, retain) NSXPCListenerEndpoint *endpoint;
@property (copy) NSError *error;
@property (getter=isFinished) bool finished;
@property (readonly) unsigned long long hash;
@property (retain) NSString *localizedDescription;
@property (nonatomic) <ATMessageLink> *messageLink;
@property double progress;
@property (getter=isRunning) bool running;
@property (retain) NSString *sessionIdentifier;
@property (retain) NSString *sessionTypeIdentifier;
@property (readonly) Class superclass;
@property (getter=isSuspended) bool suspended;

+ (void)_cancelSessionWithIdentifier:(id)arg1;
+ (unsigned long long)_remoteActiveSessionCountWithTypeIdentifier:(id)arg1;
+ (id)_remoteSessionsWithTypeIdentifier:(id)arg1;
+ (unsigned long long)activeSessionCountWithSessionTypeIdentifier:(id)arg1;
+ (id)allSessions;
+ (void)initialize;
+ (id)sessionsWithSessionTypeIdentifier:(id)arg1;
+ (id)sessionsWithSessionTypeIdentifier:(id)arg1 dataClass:(id)arg2;
+ (void)setSessionHost:(bool)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_beginTasks:(id)arg1;
- (void)_finishWithError:(id)arg1;
- (id)_keysToObserve;
- (void)_observeKeysForTask:(id)arg1;
- (void)_performSelectorOnObservers:(SEL)arg1 object:(id)arg2;
- (void)_performSelectorOnObservers:(SEL)arg1 object:(id)arg2 object:(id)arg3;
- (void)_stopObservingKeysForTask:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)addSessionTasks:(id)arg1;
- (void)beginSessionTask:(id)arg1;
- (void)cancel;
- (id)dataClass;
- (id)debugDescription;
- (id)description;
- (double)duration;
- (void)encodeWithCoder:(id)arg1;
- (id)endpoint;
- (id)error;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithSessionIdentifier:(id)arg1 sessionTypeIdentifier:(id)arg2;
- (id)initWithSessionTypeIdentifier:(id)arg1;
- (bool)isCancelled;
- (bool)isFinished;
- (bool)isRunning;
- (bool)isSuspended;
- (id)localizedDescription;
- (id)messageLink;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (double)progress;
- (void)removeObserver:(id)arg1;
- (id)sessionIdentifier;
- (id)sessionTasks;
- (id)sessionTasksWithGroupingKey:(id)arg1;
- (id)sessionTypeIdentifier;
- (void)setCancelled:(bool)arg1;
- (void)setDataClass:(id)arg1;
- (void)setEndpoint:(id)arg1;
- (void)setError:(id)arg1;
- (void)setFinished:(bool)arg1;
- (void)setLocalizedDescription:(id)arg1;
- (void)setMessageLink:(id)arg1;
- (void)setProgress:(double)arg1;
- (void)setRunning:(bool)arg1;
- (void)setSessionIdentifier:(id)arg1;
- (void)setSessionTypeIdentifier:(id)arg1;
- (void)setSuspended:(bool)arg1;
- (void)start;
- (void)updateSessionTask:(id)arg1;
- (void)waitToFinish;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

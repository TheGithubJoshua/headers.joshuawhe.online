<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_MRNowPlayingInfoProtobuf.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MediaRemote.framework/_MRNowPlayingInfoProtobuf.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote (1)
 */

@interface _MRNowPlayingInfoProtobuf : PBCodable <NSCopying> {
    NSString * _album;
    NSString * _artist;
    NSData * _artworkDataDigest;
    double  _duration;
    double  _elapsedTime;
    struct { 
        unsigned int duration : 1; 
        unsigned int elapsedTime : 1; 
        unsigned int radioStationIdentifier : 1; 
        unsigned int timestamp : 1; 
        unsigned int uniqueIdentifier : 1; 
        unsigned int playbackRate : 1; 
        unsigned int repeatMode : 1; 
        unsigned int shuffleMode : 1; 
        unsigned int isAdvertisement : 1; 
        unsigned int isAlwaysLive : 1; 
        unsigned int isExplicitTrack : 1; 
        unsigned int isMusicApp : 1; 
    }  _has;
    bool  _isAdvertisement;
    bool  _isAlwaysLive;
    bool  _isExplicitTrack;
    bool  _isMusicApp;
    float  _playbackRate;
    NSString * _radioStationHash;
    long long  _radioStationIdentifier;
    NSString * _radioStationName;
    int  _repeatMode;
    int  _shuffleMode;
    double  _timestamp;
    NSString * _title;
    unsigned long long  _uniqueIdentifier;
}

@property (nonatomic, retain) NSString *album;
@property (nonatomic, retain) NSString *artist;
@property (nonatomic, retain) NSData *artworkDataDigest;
@property (nonatomic) double duration;
@property (nonatomic) double elapsedTime;
@property (nonatomic, readonly) bool hasAlbum;
@property (nonatomic, readonly) bool hasArtist;
@property (nonatomic, readonly) bool hasArtworkDataDigest;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasElapsedTime;
@property (nonatomic) bool hasIsAdvertisement;
@property (nonatomic) bool hasIsAlwaysLive;
@property (nonatomic) bool hasIsExplicitTrack;
@property (nonatomic) bool hasIsMusicApp;
@property (nonatomic) bool hasPlaybackRate;
@property (nonatomic, readonly) bool hasRadioStationHash;
@property (nonatomic) bool hasRadioStationIdentifier;
@property (nonatomic, readonly) bool hasRadioStationName;
@property (nonatomic) bool hasRepeatMode;
@property (nonatomic) bool hasShuffleMode;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic, readonly) bool hasTitle;
@property (nonatomic) bool hasUniqueIdentifier;
@property (nonatomic) bool isAdvertisement;
@property (nonatomic) bool isAlwaysLive;
@property (nonatomic) bool isExplicitTrack;
@property (nonatomic) bool isMusicApp;
@property (nonatomic) float playbackRate;
@property (nonatomic, retain) NSString *radioStationHash;
@property (nonatomic) long long radioStationIdentifier;
@property (nonatomic, retain) NSString *radioStationName;
@property (nonatomic) int repeatMode;
@property (nonatomic) int shuffleMode;
@property (nonatomic) double timestamp;
@property (nonatomic, retain) NSString *title;
@property (nonatomic) unsigned long long uniqueIdentifier;

- (void).cxx_destruct;
- (int)StringAsRepeatMode:(id)arg1;
- (int)StringAsShuffleMode:(id)arg1;
- (id)album;
- (id)artist;
- (id)artworkDataDigest;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (double)duration;
- (double)elapsedTime;
- (bool)hasAlbum;
- (bool)hasArtist;
- (bool)hasArtworkDataDigest;
- (bool)hasDuration;
- (bool)hasElapsedTime;
- (bool)hasIsAdvertisement;
- (bool)hasIsAlwaysLive;
- (bool)hasIsExplicitTrack;
- (bool)hasIsMusicApp;
- (bool)hasPlaybackRate;
- (bool)hasRadioStationHash;
- (bool)hasRadioStationIdentifier;
- (bool)hasRadioStationName;
- (bool)hasRepeatMode;
- (bool)hasShuffleMode;
- (bool)hasTimestamp;
- (bool)hasTitle;
- (bool)hasUniqueIdentifier;
- (unsigned long long)hash;
- (bool)isAdvertisement;
- (bool)isAlwaysLive;
- (bool)isEqual:(id)arg1;
- (bool)isExplicitTrack;
- (bool)isMusicApp;
- (void)mergeFrom:(id)arg1;
- (float)playbackRate;
- (id)radioStationHash;
- (long long)radioStationIdentifier;
- (id)radioStationName;
- (bool)readFrom:(id)arg1;
- (int)repeatMode;
- (id)repeatModeAsString:(int)arg1;
- (void)setAlbum:(id)arg1;
- (void)setArtist:(id)arg1;
- (void)setArtworkDataDigest:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setElapsedTime:(double)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasElapsedTime:(bool)arg1;
- (void)setHasIsAdvertisement:(bool)arg1;
- (void)setHasIsAlwaysLive:(bool)arg1;
- (void)setHasIsExplicitTrack:(bool)arg1;
- (void)setHasIsMusicApp:(bool)arg1;
- (void)setHasPlaybackRate:(bool)arg1;
- (void)setHasRadioStationIdentifier:(bool)arg1;
- (void)setHasRepeatMode:(bool)arg1;
- (void)setHasShuffleMode:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasUniqueIdentifier:(bool)arg1;
- (void)setIsAdvertisement:(bool)arg1;
- (void)setIsAlwaysLive:(bool)arg1;
- (void)setIsExplicitTrack:(bool)arg1;
- (void)setIsMusicApp:(bool)arg1;
- (void)setPlaybackRate:(float)arg1;
- (void)setRadioStationHash:(id)arg1;
- (void)setRadioStationIdentifier:(long long)arg1;
- (void)setRadioStationName:(id)arg1;
- (void)setRepeatMode:(int)arg1;
- (void)setShuffleMode:(int)arg1;
- (void)setTimestamp:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setUniqueIdentifier:(unsigned long long)arg1;
- (int)shuffleMode;
- (id)shuffleModeAsString:(int)arg1;
- (double)timestamp;
- (id)title;
- (unsigned long long)uniqueIdentifier;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_MRReceivedCommandProtobuf.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MediaRemote.framework/_MRReceivedCommandProtobuf.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote (1)
 */

@interface _MRReceivedCommandProtobuf : PBCodable <NSCopying> {
    _MRReceivedCommandAppOptionsProtobuf * _appOptions;
    int  _command;
    NSString * _destinationAppDisplayID;
    long long  _destinationAppProcessID;
    struct { 
        unsigned int destinationAppProcessID : 1; 
        unsigned int command : 1; 
        unsigned int originUID : 1; 
    }  _has;
    _MRCommandOptionsProtobuf * _options;
    int  _originUID;
    _MRNowPlayingPlayerPathProtobuf * _playerPath;
    NSString * _remoteControlInterfaceID;
    NSString * _senderAppDisplayID;
}

@property (nonatomic, retain) _MRReceivedCommandAppOptionsProtobuf *appOptions;
@property (nonatomic) int command;
@property (nonatomic, retain) NSString *destinationAppDisplayID;
@property (nonatomic) long long destinationAppProcessID;
@property (nonatomic, readonly) bool hasAppOptions;
@property (nonatomic) bool hasCommand;
@property (nonatomic, readonly) bool hasDestinationAppDisplayID;
@property (nonatomic) bool hasDestinationAppProcessID;
@property (nonatomic, readonly) bool hasOptions;
@property (nonatomic) bool hasOriginUID;
@property (nonatomic, readonly) bool hasPlayerPath;
@property (nonatomic, readonly) bool hasRemoteControlInterfaceID;
@property (nonatomic, readonly) bool hasSenderAppDisplayID;
@property (nonatomic, retain) _MRCommandOptionsProtobuf *options;
@property (nonatomic) int originUID;
@property (nonatomic, retain) _MRNowPlayingPlayerPathProtobuf *playerPath;
@property (nonatomic, retain) NSString *remoteControlInterfaceID;
@property (nonatomic, retain) NSString *senderAppDisplayID;

- (void).cxx_destruct;
- (int)StringAsCommand:(id)arg1;
- (id)appOptions;
- (int)command;
- (id)commandAsString:(int)arg1;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)destinationAppDisplayID;
- (long long)destinationAppProcessID;
- (id)dictionaryRepresentation;
- (bool)hasAppOptions;
- (bool)hasCommand;
- (bool)hasDestinationAppDisplayID;
- (bool)hasDestinationAppProcessID;
- (bool)hasOptions;
- (bool)hasOriginUID;
- (bool)hasPlayerPath;
- (bool)hasRemoteControlInterfaceID;
- (bool)hasSenderAppDisplayID;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)options;
- (int)originUID;
- (id)playerPath;
- (bool)readFrom:(id)arg1;
- (id)remoteControlInterfaceID;
- (id)senderAppDisplayID;
- (void)setAppOptions:(id)arg1;
- (void)setCommand:(int)arg1;
- (void)setDestinationAppDisplayID:(id)arg1;
- (void)setDestinationAppProcessID:(long long)arg1;
- (void)setHasCommand:(bool)arg1;
- (void)setHasDestinationAppProcessID:(bool)arg1;
- (void)setHasOriginUID:(bool)arg1;
- (void)setOptions:(id)arg1;
- (void)setOriginUID:(int)arg1;
- (void)setPlayerPath:(id)arg1;
- (void)setRemoteControlInterfaceID:(id)arg1;
- (void)setSenderAppDisplayID:(id)arg1;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIPDFSelectionController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CorePDF.framework/UIPDFSelectionController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF (414)
 */

@interface UIPDFSelectionController : NSObject {
    struct CGPoint { 
        double x; 
        double y; 
    }  _adjustedPoint;
    bool  _cancelled;
    long long  _firstIndex;
    bool  _hiding;
    bool  _instantHighlightMode;
    bool  _instantModeIsSuspended;
    bool  _isTracking;
    long long  _lastIndex;
    bool  _needsLayout;
    UIPDFPageView * _pageView;
    bool  _preceeds;
    bool  _rangeMode;
    bool  _resizingWidget;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _selectionBounds;
    struct CGPoint { 
        double x; 
        double y; 
    }  _selectionFixedPoint;
    <UIPDFSelectionWidget><NSObject> * _selectionWidget;
    struct CGPoint { 
        double x; 
        double y; 
    }  _startPoint;
}

@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } adjustedPoint;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } currentSelectionPoint;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } initialSelectionPoint;
@property (nonatomic) bool instantHighlightMode;
@property (nonatomic, readonly) bool isTracking;
@property (nonatomic) UIPDFPageView *pageView;
@property (nonatomic, readonly) bool rangeMode;
@property (nonatomic, readonly) <UIPDFSelectionWidget> *selectionWidget;

- (void)addSelectionWidget:(id)arg1;
- (void)adjustSelection:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })adjustedPoint;
- (void)clearSelection;
- (struct CGPoint { double x1; double x2; })currentSelectionPoint;
- (void)dealloc;
- (id)description;
- (void)endTracking:(struct CGPoint { double x1; double x2; })arg1;
- (void)extendSelectionToParagraph;
- (void)hideWidget;
- (id)init;
- (struct CGPoint { double x1; double x2; })initialSelectionPoint;
- (bool)instantHighlightMode;
- (bool)isTracking;
- (void)layoutSelections;
- (id)pageView;
- (bool)rangeMode;
- (struct CGPoint { double x1; double x2; })selectedPointOffset;
- (void)selectionHide:(id)arg1;
- (void)selectionHideFromAncestor:(id)arg1;
- (void)selectionShow:(id)arg1;
- (void)selectionShowDelayed:(id)arg1;
- (void)selectionShowToAncestor:(id)arg1;
- (id)selectionWidget;
- (void)setInstantHighlightMode:(bool)arg1;
- (void)setPageView:(id)arg1;
- (void)setSelectionFor:(struct CGPoint { double x1; double x2; })arg1;
- (bool)shouldTrackAt:(struct CGPoint { double x1; double x2; })arg1;
- (void)startSelectingAt:(struct CGPoint { double x1; double x2; })arg1;
- (void)startTracking:(struct CGPoint { double x1; double x2; })arg1 andPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)startTracking:(struct CGPoint { double x1; double x2; })arg1 showMagnifier:(bool*)arg2;
- (void)suspendInstantHighlightMode;
- (void)tracking:(struct CGPoint { double x1; double x2; })arg1 andPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)tracking:(struct CGPoint { double x1; double x2; })arg1 showMagnifier:(bool*)arg2;
- (bool)useParagraphMode;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

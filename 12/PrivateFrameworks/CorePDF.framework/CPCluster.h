<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CPCluster.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CorePDF.framework/CPCluster.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF (414)
 */

@interface CPCluster : NSObject <CPDisposable> {
    unsigned int  clusterCount;
    double * ddx;
    unsigned int * ddxOrderIndex;
    double * dx;
    unsigned int * dxOrderIndex;
    struct { unsigned int x1; double x2; double x3; double x4; } * dxStats;
    unsigned int  interClusterMinIndex;
    unsigned int  interLevelMinIndex;
    unsigned int  levels;
    double  maxClusterSpread;
    unsigned int  minClusterSize;
    double  minInterClusterDiff;
    double  minInterLevel2ndDiff;
    bool  ownData;
    bool  ownDifferences;
    const struct { double x1; unsigned int x2; double x3; double x4; unsigned int x5; double x6; double x7; bool x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; double x17; double x18; double x19; bool x20; } * profile;
    double * x;
    unsigned int  xCount;
    struct { unsigned int x1; double x2; double x3; double x4; } * xStats;
}

+ (void)clusterTextLine:(id)arg1;
+ (void)clusterTextLine:(id)arg1 withCluster:(id)arg2 atLevel:(unsigned int)arg3 withMaximumWordGap:(double*)arg4 andMaximumLetterGap:(double*)arg5;
+ (unsigned int*)createOrderIndexFor:(double*)arg1 ofSize:(unsigned int)arg2;
+ (void)reclusterTextLine:(id)arg1 fromWordIndex:(unsigned int)arg2 count:(unsigned int*)arg3;

- (void)analyzeDensities;
- (void)analyzeDifferences;
- (bool)applyDifferenceHints:(struct { unsigned int x1; double x2; double x3; double x4; }*)arg1 count:(unsigned int)arg2;
- (void)assembleDataStats;
- (void)assembleDensityDifferenceStats;
- (void)assembleDifferenceStats;
- (unsigned int)clusterCount;
- (struct { unsigned int x1; double x2; double x3; double x4; })clusterStatisticsAtIndex:(unsigned int)arg1;
- (bool)coalesceFrom:(unsigned int)arg1 to:(unsigned int)arg2;
- (void)computeDataFromDifferences;
- (void)computeDifferencesFromData;
- (void)dealloc;
- (struct { unsigned int x1; double x2; double x3; double x4; })differenceClusterStatisticsAtIndex:(unsigned int)arg1;
- (void)dispose;
- (void)finalize;
- (void)findClusters:(double*)arg1 count:(unsigned int)arg2;
- (void)findClustersFromCharacterSequence:(id)arg1 withSpaceHint:(bool)arg2;
- (void)findClustersFromDifferences:(double*)arg1 count:(unsigned int)arg2;
- (void)findDensityClusters:(double*)arg1 count:(unsigned int)arg2;
- (id)init;
- (id)initWithProfile:(const struct { double x1; unsigned int x2; double x3; double x4; unsigned int x5; double x6; double x7; bool x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; double x17; double x18; double x19; bool x20; }*)arg1;
- (bool)joinClosestLevelPairFrom:(unsigned int)arg1 to:(unsigned int)arg2;
- (bool)joinLevelsFrom:(unsigned int)arg1 to:(unsigned int)arg2;
- (struct { unsigned int x1; double x2; double x3; double x4; })largestClusterStatistics;
- (unsigned int)levels;
- (void)makeWords:(struct { unsigned int x1; unsigned int x2; int x3; int x4; struct CGRect { struct CGPoint { double x_1_2_1; double x_1_2_2; } x_5_1_1; struct CGSize { double x_2_2_1; double x_2_2_2; } x_5_1_2; } x5; }*)arg1 count:(unsigned int)arg2 fromCharacterSequence:(id)arg3 charOffset:(unsigned int)arg4;
- (void)resetAnalysis;
- (void)setMaximumClusterSpread:(double)arg1;
- (void)setMinimumClusterSize:(unsigned int)arg1;
- (void)setMinimumRecognizedInterClusterDifference:(double)arg1;
- (void)setMinimumRecognizedInterLevel2ndDifference:(double)arg1;
- (bool)splitLevelAtIndex:(unsigned int)arg1 betweenValue:(double)arg2 andValue:(double)arg3;
- (void)splitSecondDifferences;
- (void)tryLevel0SplitBetween:(double)arg1 and:(double)arg2 usingHints:(struct { unsigned int x1; double x2; double x3; double x4; }*)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CPZoneBorder.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CorePDF.framework/CPZoneBorder.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF (414)
 */

@interface CPZoneBorder : NSObject <CPCopying, NSCopying> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  bounds;
    NSMutableArray * graphicObjects;
    bool  hasBackwardVector;
    bool  hasForwardVector;
    NSMutableArray * intersections;
    bool  isHorizontal;
    NSMutableArray * neighbors;
    double  overhangMax;
    double  overhangMin;
    NSMutableArray * ownerArray;
    CPPage * page;
}

+ (void)addIntersectionBetweenBorder:(id)arg1 andBorder:(id)arg2 atRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
+ (int)clockwiseWindingNumberOfShapeWithBorders:(id)arg1;
+ (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })extendRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (void)outerVertices:(struct CGPoint { double x1; double x2; }*)arg1 fromBorders:(id)arg2 swollenBy:(double)arg3;
+ (void)removeIntersectionBetweenBorder:(id)arg1 andBorder:(id)arg2;

- (void)addGraphicObject:(id)arg1;
- (void)addNeighbor:(id)arg1;
- (void)addToArray:(id)arg1;
- (void)addToArray:(id)arg1 atIndex:(unsigned int)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (void)combine:(id)arg1;
- (long long)compareXBounds:(id)arg1;
- (long long)compareYBounds:(id)arg1;
- (bool)continues:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)copyWithoutIntersections;
- (bool)crosses:(id)arg1;
- (void)dealloc;
- (bool)extractCycleTo:(id)arg1 goingForward:(bool)arg2 startingAtIndex:(unsigned int)arg3;
- (bool)extractCycleTo:(id)arg1 goingForward:(bool)arg2 throughIntersectionIndex:(unsigned int)arg3 returningTo:(id)arg4 atRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg5;
- (id)getNextBorder:(unsigned int)arg1;
- (id)graphicObjectAtIndex:(unsigned int)arg1;
- (unsigned int)graphicObjectCount;
- (id)graphicObjects;
- (bool)hasBackwardVector;
- (bool)hasClockwiseVectorAtIndex:(unsigned int)arg1 startingForward:(bool)arg2;
- (bool)hasCounterclockwiseVectorAtIndex:(unsigned int)arg1 startingForward:(bool)arg2;
- (bool)hasForwardVector;
- (bool)hasNeighborShape:(id)arg1;
- (bool)hasNeighborShape:(id)arg1 atSide:(int)arg2;
- (bool)hasVectorGoingForward:(bool)arg1 startingAtIndex:(unsigned int*)arg2;
- (unsigned int)indexOfIntersectionWith:(id)arg1;
- (id)init;
- (id)initSuper;
- (id)initWithGraphicObject:(id)arg1;
- (void)instantiateVectors;
- (unsigned int)intersectionCount;
- (bool)intersectsWith:(id)arg1 atRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2;
- (bool)isHorizontal;
- (bool)isVertical;
- (id)neighborAtIndex:(unsigned int)arg1;
- (unsigned int)neighborCount;
- (id)ownerArray;
- (id)page;
- (void)removeFromArray;
- (void)removeFromArrayAtIndex:(unsigned int)arg1;
- (void)removeGraphicObjectAtIndex:(unsigned int)arg1;
- (void)removeLooseThreadsStartingFrom:(id)arg1;
- (void)removeNeighborAtIndex:(unsigned int)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHasBackwardVector:(bool)arg1;
- (void)setHasForwardVector:(bool)arg1;
- (void)setSide:(int)arg1 ofPage:(id)arg2;
- (void)trimToLastIntersections;
- (bool)windsClockwiseOnto:(id)arg1;
- (long long)zOrder;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

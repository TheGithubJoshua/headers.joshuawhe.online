<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CPZone.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CorePDF.framework/CPZone.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CorePDF.framework/CorePDF (414)
 */

@interface CPZone : CPRegion <CPGraphicUser> {
    double  area;
    NSMutableArray * backgroundGraphics;
    CPCharSequence * charactersInZone;
    NSArray * graphicsInZone;
    NSArray * gutters;
    bool  isStraddleZone;
    NSArray * leftGuides;
    struct CGPoint { double x1; double x2; } * outerVertices;
    NSArray * rightGuides;
    NSArray * spacers;
    struct CGPoint { double x1; double x2; } * swollenOuterVertices;
    NSMutableArray * textLinesInZone;
    unsigned int  usedGraphicCount;
    NSMutableArray * zoneBorders;
    CPZoneProfile * zoneProfile;
}

- (void)accept:(id)arg1;
- (void)addContentFrom:(id)arg1;
- (void)addPDFChar:(void*)arg1;
- (double)area;
- (id)backgroundGraphics;
- (long long)borderZOrder;
- (bool)bordersWindClockwise;
- (bool)canContain:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)charactersInZone;
- (long long)compareArea:(id)arg1;
- (bool)contains:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)graphicsInZone;
- (id)gutters;
- (bool)hasBorders;
- (bool)hasNeighborShape:(id)arg1;
- (void)incrementUsedGraphicCount;
- (id)init;
- (bool)isRectangular;
- (bool)isStraddleZone;
- (bool)isZone;
- (id)leftGuides;
- (bool)mapToWordPairs:(int (*)arg1 passing:(void*)arg2;
- (bool)mapToWordPairsWithIndex:(int (*)arg1 passing:(void*)arg2;
- (bool)mapToWords:(int (*)arg1 passing:(void*)arg2;
- (bool)mapToWordsWithIndex:(int (*)arg1 passing:(void*)arg2;
- (long long)neighborZOrder;
- (struct CGColor { }*)newBackgroundColor;
- (struct CGPoint { double x1; double x2; }*)outerVertices;
- (bool)rectangleBordersAtLeft:(id*)arg1 top:(id*)arg2 right:(id*)arg3 bottom:(id*)arg4;
- (void)removeUnfilledNeighborShapes;
- (id)rightGuides;
- (void)setCharactersInZone:(id)arg1;
- (void)setGutters:(id)arg1;
- (void)setIsStraddleZone:(bool)arg1;
- (void)setLeftGuides:(id)arg1;
- (void)setRightGuides:(id)arg1;
- (void)setSpacers:(id)arg1;
- (void)setZoneBorders:(id)arg1;
- (void)setZoneProfile:(id)arg1;
- (id)spacers;
- (struct CGPoint { double x1; double x2; }*)swollenOuterVertices;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })swollenZoneBounds;
- (id)textLinesInZone;
- (unsigned int)usedGraphicCount;
- (unsigned int)vertexCount;
- (unsigned int)wordCount;
- (id)zoneBorders;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })zoneBounds;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })zoneBoundsFromVertices:(struct CGPoint { double x1; double x2; }*)arg1 ofCount:(unsigned int)arg2;
- (id)zoneProfile;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

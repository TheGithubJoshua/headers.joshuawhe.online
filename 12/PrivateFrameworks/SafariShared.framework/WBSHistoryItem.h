<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WBSHistoryItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SafariShared.framework/WBSHistoryItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared (607.3.18)
 */

@interface WBSHistoryItem : NSObject {
    NSMutableArray * _autocompleteTriggers;
    float  _cachedTopSitesURLPenalty;
    float  _cachedTopSitesVisitScore;
    struct Vector<int, 0, WTF::CrashOnOverflow, 16> { 
        int *m_buffer; 
        unsigned int m_capacity; 
        unsigned int m_size; 
    }  _dailyVisitCountScores;
    long long  _databaseID;
    double  _lastTimeTopSitesScoreWasComputed;
    WBSHistoryVisit * _lastVisit;
    NSMutableArray * _redirectSourceItems;
    bool  _shouldRecomputeDerivedVisitCountScores;
    NSURL * _url;
    NSString * _urlString;
    NSString * _userVisibleURLString;
    unsigned long long  _visitCount;
    unsigned long long  _visitCountScore;
    NSMutableArray * _visits;
    NSMutableSet * _visitsPendingWriteToDataStore;
    struct Vector<int, 0, WTF::CrashOnOverflow, 16> { 
        int *m_buffer; 
        unsigned int m_capacity; 
        unsigned int m_size; 
    }  _weeklyVisitCountScores;
}

@property (nonatomic, readonly) NSArray *autocompleteTriggers;
@property (nonatomic, readonly) NSData *autocompleteTriggersDataOnSynchronizationQueue;
@property (nonatomic) float cachedTopSitesURLPenalty;
@property (nonatomic) float cachedTopSitesVisitScore;
@property (nonatomic, readonly) unsigned long long dailyVisitCountScoresCountOnSynchronizationQueue;
@property (nonatomic, readonly) NSData *dailyVisitCountScoresDataOnSynchronizationQueue;
@property (nonatomic, readonly) const int*dailyVisitCountScoresPtrOnSynchronizationQueue;
@property (nonatomic) long long databaseID;
@property (nonatomic, readonly) WBSHistoryItem *endOfLastVisitRedirectChain;
@property (nonatomic) double lastTimeTopSitesScoreWasComputed;
@property (nonatomic, readonly) WBSHistoryVisit *lastVisit;
@property (nonatomic, readonly) WBSHistoryVisit *lastVisitOnSynchronizationQueue;
@property (nonatomic, readonly) WBSHistoryItem *lastVisitRedirectDestinationItem;
@property (nonatomic) bool lastVisitWasFailure;
@property (nonatomic, readonly) bool lastVisitWasHTTPNonGet;
@property (nonatomic, readonly) NSDate *lastVisitedDate;
@property (nonatomic, readonly) double lastVisitedTimeInterval;
@property (nonatomic, readonly) double lastVisitedTimeIntervalOnSynchronizationQueue;
@property (nonatomic, readonly) NSArray *redirectSourceItems;
@property (nonatomic, readonly) bool shouldRecomputeDerivedVisitCountScores;
@property (nonatomic, readonly) NSString *stringForUserTypedDomainExpansion;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, readonly) NSURL *url;
@property (nonatomic, readonly) NSString *urlString;
@property (nonatomic, readonly) NSString *userVisibleURLString;
@property (nonatomic, readonly) unsigned long long visitCount;
@property (nonatomic, readonly) unsigned long long visitCountScore;
@property (nonatomic, readonly) NSArray *visits;
@property (nonatomic, readonly) NSSet *visitsPendingWriteToDataStoreOnSynchronizationQueue;
@property (nonatomic, readonly) unsigned long long weeklyVisitCountScoresCountOnSynchronizationQueue;
@property (nonatomic, readonly) NSData *weeklyVisitCountScoresDataOnSynchronizationQueue;
@property (nonatomic, readonly) const int*weeklyVisitCountScoresPtrOnSynchronizationQueue;

+ (void)initialize;
+ (id)synchronizationQueue;
+ (double)timeIntervalForDailyAndWeeklyVisitCountScores;

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)_addAutocompleteTriggerFromSynchronizationQueue:(id)arg1;
- (void)_addExistingVisit:(id)arg1;
- (void)_addVisit:(id)arg1;
- (id)_autocompleteTriggersFromSynchronizationQueue;
- (void)_collapseDailyVisitsToWeekly;
- (void)_padDailyCountsForNewVisitAtTime:(double)arg1 indexOfNewVisit:(int*)arg2;
- (void)_wasVisitedOnSynchronizationQueue:(id)arg1;
- (bool)addAutocompleteTrigger:(id)arg1;
- (void)addRedirectSourceItemFromSynchronizationQueue:(id)arg1;
- (id)autocompleteTriggers;
- (id)autocompleteTriggersDataOnSynchronizationQueue;
- (float)cachedTopSitesURLPenalty;
- (float)cachedTopSitesVisitScore;
- (void)clearVisitsPendingWriteToDataStoreFromSynchronizationQueue;
- (unsigned long long)dailyVisitCountScoresCountOnSynchronizationQueue;
- (id)dailyVisitCountScoresDataOnSynchronizationQueue;
- (const int*)dailyVisitCountScoresPtrOnSynchronizationQueue;
- (long long)databaseID;
- (id)endOfLastVisitRedirectChain;
- (id)initWithSQLiteRow:(id)arg1;
- (id)initWithURLString:(id)arg1;
- (double)lastTimeTopSitesScoreWasComputed;
- (id)lastVisit;
- (id)lastVisitOnSynchronizationQueue;
- (id)lastVisitRedirectDestinationItem;
- (bool)lastVisitWasFailure;
- (bool)lastVisitWasHTTPNonGet;
- (id)lastVisitedDate;
- (double)lastVisitedTimeInterval;
- (double)lastVisitedTimeIntervalOnSynchronizationQueue;
- (void)mergeDataFromItem:(id)arg1;
- (void)recomputeDerivedVisitCountScoresWithVisits:(id)arg1;
- (id)redirectSourceItems;
- (void)removeVisits:(id)arg1 candidateLastVisit:(id)arg2;
- (void)removeVisitsOnSynchronizationQueue:(id)arg1 candidateLastVisit:(id)arg2;
- (void)scoreOfVisit:(id)arg1 wasUpdatedFrom:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)setCachedTopSitesURLPenalty:(float)arg1;
- (void)setCachedTopSitesVisitScore:(float)arg1;
- (void)setDatabaseID:(long long)arg1;
- (void)setLastTimeTopSitesScoreWasComputed:(double)arg1;
- (void)setLastVisitWasFailure:(bool)arg1;
- (void)setTitle:(id)arg1;
- (bool)shouldRecomputeDerivedVisitCountScores;
- (id)stringForUserTypedDomainExpansion;
- (id)title;
- (id)url;
- (id)urlString;
- (id)userVisibleURLString;
- (unsigned long long)visitCount;
- (unsigned long long)visitCountScore;
- (void)visitWasModified:(id)arg1;
- (id)visits;
- (id)visitsPendingWriteToDataStoreOnSynchronizationQueue;
- (void)wasRedirectedFrom:(id)arg1 to:(id)arg2;
- (void)wasVisited:(id)arg1;
- (unsigned long long)weeklyVisitCountScoresCountOnSynchronizationQueue;
- (id)weeklyVisitCountScoresDataOnSynchronizationQueue;
- (const int*)weeklyVisitCountScoresPtrOnSynchronizationQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLGlyphControl.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PlatterKit.framework/PLGlyphControl.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PlatterKit.framework/PlatterKit (1)
 */

@interface PLGlyphControl : UIControl {
    unsigned long long  _backgroundMaterialOptions;
    MTMaterialView * _backgroundMaterialView;
    UIImageView * _glyphView;
    UIView * _highlightView;
    long long  _materialRecipe;
    unsigned long long  _overlayMaterialOptions;
    MTMaterialView * _overlayMaterialView;
}

@property (nonatomic, readonly) unsigned long long backgroundMaterialOptions;
@property (getter=_backgroundMaterialView, nonatomic, readonly) MTMaterialView *backgroundMaterialView;
@property (getter=_backgroundMaterialView, nonatomic, retain) MTMaterialView *backgroundMaterialView;
@property (nonatomic, copy) UIImage *glyph;
@property (getter=_glyphView, nonatomic, readonly) UIImageView *glyphView;
@property (getter=_glyphView, nonatomic, retain) UIImageView *glyphView;
@property (nonatomic, copy) NSString *groupName;
@property (getter=_hightlightView, nonatomic, retain) UIView *highlightView;
@property (nonatomic, readonly) long long materialRecipe;
@property (nonatomic, readonly) unsigned long long overlayMaterialOptions;
@property (getter=_overlayMaterialView, nonatomic, retain) MTMaterialView *overlayMaterialView;
@property (getter=_overlayMaterialView, nonatomic, readonly) MTMaterialView *overlayMaterialView;

+ (id)dismissControlWithMaterialRecipe:(long long)arg1 backgroundMaterialOptions:(unsigned long long)arg2 overlayMaterialOptions:(unsigned long long)arg3;

- (void).cxx_destruct;
- (id)_backgroundMaterialView;
- (void)_configureBackgroundMaterialViewIfNecessary;
- (void)_configureGlyphViewIfNecessaryWithImage:(id)arg1;
- (void)_configureMaterialView:(id*)arg1 ifNecessaryWithOptions:(unsigned long long)arg2 positioningAtIndex:(unsigned long long)arg3;
- (void)_configureOverlayMaterialViewIfNecessary;
- (double)_cornerRadius;
- (void)_darkerSystemColorsStatusDidChange:(id)arg1;
- (id)_glyphView;
- (void)_handleTouchUpInsideWithEvent:(id)arg1;
- (id)_hightlightView;
- (id)_overlayMaterialView;
- (void)_reduceTransparencyStatusDidChange:(id)arg1;
- (void)_sendActionsForEvents:(unsigned long long)arg1 withEvent:(id)arg2;
- (void)_updateGlyphViewVibrantStyling;
- (void)_updateVibrantStylingOfView:(id)arg1;
- (unsigned long long)backgroundMaterialOptions;
- (void)dealloc;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)glyph;
- (id)groupName;
- (id)initWithMaterialRecipe:(long long)arg1 backgroundMaterialOptions:(unsigned long long)arg2 overlayMaterialOptions:(unsigned long long)arg3;
- (void)layoutSubviews;
- (long long)materialRecipe;
- (unsigned long long)overlayMaterialOptions;
- (void)setBackgroundMaterialView:(id)arg1;
- (void)setGlyph:(id)arg1;
- (void)setGlyphView:(id)arg1;
- (void)setGroupName:(id)arg1;
- (void)setHighlightView:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setOverlayMaterialView:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

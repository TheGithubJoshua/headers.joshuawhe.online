<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TPSURLSessionTask.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HelpKit.framework/TPSURLSessionTask.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HelpKit.framework/HelpKit (118)
 */

@interface TPSURLSessionTask : NSObject {
    bool  _cancelled;
    NSError * _dataError;
    NSMutableData * _dataTaskData;
    long long  _dataType;
    struct TPSURLSessionDelegateResponds { 
        bool willCacheResponse; 
        bool downloadTaskDidFinishDownloadingToURL; 
        bool didReceiveResponse; 
        bool didCompleteWithError; 
        bool taskDidReceiveChallenge; 
    }  _delegateResponds;
    unsigned long long  _downloadTaskTotalBytes;
    id  _formattedData;
    NSString * _identifier;
    bool  _isCacheData;
    NSString * _lastModified;
    <TPSURLSessionDelegate> * _networkDelegate;
    NSHTTPURLResponse * _response;
    NSObject<OS_dispatch_queue> * _sessionTaskDelegateQueue;
    NSHashTable * _sessionTaskDelegates;
    NSURLSessionTask * _task;
}

@property (nonatomic, readonly) NSURL *URL;
@property (getter=isCancelled, nonatomic) bool cancelled;
@property (nonatomic, retain) NSError *dataError;
@property (nonatomic, retain) NSMutableData *dataTaskData;
@property (nonatomic) long long dataType;
@property (nonatomic) struct TPSURLSessionDelegateResponds { bool x1; bool x2; bool x3; bool x4; bool x5; } delegateResponds;
@property (nonatomic) unsigned long long downloadTaskTotalBytes;
@property (nonatomic, retain) id formattedData;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic) bool isCacheData;
@property (nonatomic, retain) NSString *lastModified;
@property (nonatomic) <TPSURLSessionDelegate> *networkDelegate;
@property (nonatomic) float priority;
@property (nonatomic, retain) NSHTTPURLResponse *response;
@property (nonatomic, retain) NSHashTable *sessionTaskDelegates;
@property (nonatomic, retain) NSURLSessionTask *task;

+ (struct TPSURLSessionDelegateResponds { bool x1; bool x2; bool x3; bool x4; bool x5; })delegateRespondsWithDelegate:(id)arg1;

- (void).cxx_destruct;
- (id)URL;
- (void)cancel;
- (id)dataError;
- (id)dataTaskData;
- (long long)dataType;
- (void)dealloc;
- (struct TPSURLSessionDelegateResponds { bool x1; bool x2; bool x3; bool x4; bool x5; })delegateResponds;
- (void)didCompleteWithError:(id)arg1;
- (unsigned long long)downloadTaskTotalBytes;
- (id)formattedData;
- (id)identifier;
- (id)initWithSessionTask:(id)arg1 identifier:(id)arg2;
- (bool)isCacheData;
- (bool)isCancelled;
- (id)lastModified;
- (id)networkDelegate;
- (float)priority;
- (void)registerDelegate:(id)arg1;
- (id)response;
- (void)resume;
- (id)sessionTaskDelegates;
- (void)setCancelled:(bool)arg1;
- (void)setDataError:(id)arg1;
- (void)setDataTaskData:(id)arg1;
- (void)setDataType:(long long)arg1;
- (void)setDelegateResponds:(struct TPSURLSessionDelegateResponds { bool x1; bool x2; bool x3; bool x4; bool x5; })arg1;
- (void)setDownloadTaskTotalBytes:(unsigned long long)arg1;
- (void)setFormattedData:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIsCacheData:(bool)arg1;
- (void)setLastModified:(id)arg1;
- (void)setNetworkDelegate:(id)arg1;
- (void)setPriority:(float)arg1;
- (void)setResponse:(id)arg1;
- (void)setSessionTaskDelegates:(id)arg1;
- (void)setTask:(id)arg1;
- (id)task;
- (void)unregisterDelegate:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

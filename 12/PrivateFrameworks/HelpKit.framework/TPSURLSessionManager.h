<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TPSURLSessionManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HelpKit.framework/TPSURLSessionManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HelpKit.framework/HelpKit (118)
 */

@interface TPSURLSessionManager : NSObject <NSURLSessionDataDelegate, NSURLSessionDelegate> {
    NSURLSession * _URLSession;
    bool  _coalesceRequests;
    NSMutableDictionary * _coalesceTaskURLMap;
    <TPSURLSessionDelegate> * _defaultSessionDelegate;
    struct TPSURLSessionDelegateResponds { 
        bool willCacheResponse; 
        bool downloadTaskDidFinishDownloadingToURL; 
        bool didReceiveResponse; 
        bool didCompleteWithError; 
        bool taskDidReceiveChallenge; 
    }  _defaultSessionDelegateResponds;
    <TPSURLSessionManagerDelegate> * _delegate;
    bool  _respondsToDidReceiveChallenge;
    bool  _respondsToRequestCompleted;
    bool  _respondsToRequestResumed;
    NSObject<OS_dispatch_queue> * _sessionTaskQueue;
    NSMutableDictionary * _uncoalesceTaskMap;
}

@property (nonatomic, retain) NSURLSession *URLSession;
@property (nonatomic) bool coalesceRequests;
@property (nonatomic, retain) NSMutableDictionary *coalesceTaskURLMap;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <TPSURLSessionDelegate> *defaultSessionDelegate;
@property (nonatomic) <TPSURLSessionManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool respondsToDidReceiveChallenge;
@property (nonatomic) bool respondsToRequestCompleted;
@property (nonatomic) bool respondsToRequestResumed;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSMutableDictionary *uncoalesceTaskMap;

+ (id)defaultManager;

- (void).cxx_destruct;
- (id)URLSession;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)cancelSessionItem:(id)arg1;
- (bool)coalesceRequests;
- (id)coalesceTaskURLMap;
- (void)dealloc;
- (id)defaultSessionDelegate;
- (id)delegate;
- (id)init;
- (id)newURLSessionItemWithRequest:(id)arg1 identifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)newURLSessionItemWithRequest:(id)arg1 identifier:(id)arg2 networkDelegate:(id)arg3;
- (id)newURLSessionItemWithRequest:(id)arg1 identifier:(id)arg2 networkDelegate:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)removeTaskFromMap:(id)arg1;
- (bool)respondsToDidReceiveChallenge;
- (bool)respondsToRequestCompleted;
- (bool)respondsToRequestResumed;
- (void)resumeSessionItem:(id)arg1;
- (void)sessionTask:(id)arg1 didCompleteWithError:(id)arg2;
- (id)sessionTaskForTask:(id)arg1;
- (void)setCoalesceRequests:(bool)arg1;
- (void)setCoalesceTaskURLMap:(id)arg1;
- (void)setDefaultSessionDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setRespondsToDidReceiveChallenge:(bool)arg1;
- (void)setRespondsToRequestCompleted:(bool)arg1;
- (void)setRespondsToRequestResumed:(bool)arg1;
- (void)setURLSession:(id)arg1;
- (void)setUncoalesceTaskMap:(id)arg1;
- (id)uncoalesceTaskMap;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HLPHelpTopicViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HelpKit.framework/HLPHelpTopicViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HelpKit.framework/HelpKit (118)
 */

@interface HLPHelpTopicViewController : UIViewController <HLPHelpLoadingViewDelegate, HLPHelpTopicViewControllerDelegate, UIGestureRecognizerDelegate, WKNavigationDelegate> {
    bool  _RTL;
    TPSURLSessionItem * _URLSessionItem;
    NSString * _assetHostOverride;
    UIBarButtonItem * _backBarButtonItem;
    bool  _canShowTOC;
    HLPHelpTopicHistoryItem * _currentTopicHistoryItem;
    <HLPHelpTopicViewControllerDelegate> * _delegate;
    bool  _displayHelpTopicsOnly;
    UIBarButtonItem * _forwardBarButtonItem;
    HLPHelpBookController * _helpBookController;
    NSURL * _helpBookURL;
    bool  _hideDoneButton;
    id  _interactivePopGestureRecognizerDelegate;
    HLPHelpLoadingView * _loadingView;
    NSLayoutConstraint * _loadingViewTopConstraint;
    HLPHelpLocale * _locale;
    NSArray * _searchTerms;
    bool  _showTopicNameAsTitle;
    UIBarButtonItem * _tocBarButtonItem;
    NSCache * _topicCache;
    NSMutableArray * _topicHistory;
    HLPHelpUsageController * _usageController;
    WKWebView * _webView;
    bool  _webViewLoaded;
    NSMutableDictionary * _webViewRequestsMap;
}

@property (nonatomic, retain) TPSURLSessionItem *URLSessionItem;
@property (nonatomic, retain) HLPHelpTopicHistoryItem *currentTopicHistoryItem;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HLPHelpTopicViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool displayHelpTopicsOnly;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HLPHelpBookController *helpBookController;
@property (nonatomic, retain) NSURL *helpBookURL;
@property (nonatomic) bool hideDoneButton;
@property (nonatomic, retain) HLPHelpLoadingView *loadingView;
@property (nonatomic, retain) HLPHelpLocale *locale;
@property (nonatomic, retain) NSArray *searchTerms;
@property (nonatomic) bool showTopicNameAsTitle;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSCache *topicCache;
@property (nonatomic, retain) HLPHelpUsageController *usageController;
@property (nonatomic, retain) WKWebView *webView;
@property (nonatomic, retain) NSMutableDictionary *webViewRequestsMap;

- (void).cxx_destruct;
- (id)URLSessionItem;
- (void)backButtonTapped;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (id)currentTopicHistoryItem;
- (void)dealloc;
- (id)delegate;
- (void)dismiss;
- (bool)displayHelpTopicsOnly;
- (void)forwardButtonTapped;
- (id)helpBookController;
- (id)helpBookURL;
- (void)helpTopicViewController:(id)arg1 failToLoadWithError:(id)arg2;
- (void)helpTopicViewController:(id)arg1 topicLoaded:(id)arg2;
- (void)helpTopicViewControllerCurrentTopicIsPassionPoint:(id)arg1;
- (void)helpTopicViewControllerDoneButtonTapped:(id)arg1;
- (void)helpTopicViewControllerShowHelpBookInfo:(id)arg1;
- (bool)hideDoneButton;
- (id)init;
- (void)loadHTMLString:(id)arg1 anchor:(id)arg2;
- (void)loadHelpTopicItem:(id)arg1 searchTerms:(id)arg2 anchor:(id)arg3;
- (void)loadHelpTopicItem:(id)arg1 searchTerms:(id)arg2 anchor:(id)arg3 topicAccessType:(long long)arg4;
- (id)loadingView;
- (id)locale;
- (void)reloadCurrentTopic;
- (void)saveCurrentTopicItem;
- (id)searchTerms;
- (void)setCurrentTopicHistoryItem:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayHelpTopicsOnly:(bool)arg1;
- (void)setHelpBookController:(id)arg1;
- (void)setHelpBookURL:(id)arg1;
- (void)setHideDoneButton:(bool)arg1;
- (void)setLoadingView:(id)arg1;
- (void)setLocale:(id)arg1;
- (void)setSearchTerms:(id)arg1;
- (void)setShowTopicNameAsTitle:(bool)arg1;
- (void)setTopicCache:(id)arg1;
- (void)setURLSessionItem:(id)arg1;
- (void)setUsageController:(id)arg1;
- (void)setWebView:(id)arg1;
- (void)setWebViewRequestsMap:(id)arg1;
- (void)showHelpBookInfo:(id)arg1;
- (void)showTableOfContent;
- (bool)showTopicNameAsTitle;
- (void)showWebViewDelay;
- (id)topicCache;
- (void)updateDoneButton;
- (void)updateHTMLStringPath:(id)arg1 tag:(id)arg2 attribute:(id)arg3;
- (void)updateNavigationButtons;
- (void)updateScrollPositionForCurrentTopicItem;
- (id)usageController;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (id)webView;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 startURLSchemeTask:(id)arg2;
- (void)webView:(id)arg1 stopURLSchemeTask:(id)arg2;
- (id)webViewRequestsMap;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

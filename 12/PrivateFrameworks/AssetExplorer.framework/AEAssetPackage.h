<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AEAssetPackage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AssetExplorer.framework/AEAssetPackage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AssetExplorer.framework/AssetExplorer (1)
 */

@interface AEAssetPackage : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, PUCAMReviewAsset> {
    NSMutableDictionary * __contentQueueSidecar;
    NSMutableDictionary * __contentQueue_finalURLs;
    NSMutableSet * __contentQueue_suppressedTypes;
    NSObject<OS_dispatch_queue> * __packageContentQueue;
    NSString * _identifier;
}

@property (getter=isHDR, nonatomic, readonly) bool HDR;
@property (nonatomic, readonly) NSMutableDictionary *_contentQueueSidecar;
@property (nonatomic, readonly) NSMutableDictionary *_contentQueue_finalURLs;
@property (nonatomic, readonly) NSMutableSet *_contentQueue_suppressedTypes;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_packageContentQueue;
@property (nonatomic, readonly) double aspectRatio;
@property (nonatomic, readonly) PFAssetAdjustments *assetAdjustments;
@property (nonatomic, readonly, copy) NSString *burstIdentifier;
@property (nonatomic, readonly) bool canPlayLoopingVideo;
@property (nonatomic, readonly) bool canPlayPhotoIris;
@property (nonatomic, readonly) NSDate *creationDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double duration;
@property (getter=isFavorite, nonatomic, readonly) bool favorite;
@property (nonatomic, readonly) bool hasPhotoColorAdjustments;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool isAnimatedImage;
@property (nonatomic, readonly) bool isPhotoIrisPlaceholder;
@property (nonatomic, readonly) bool isTemporaryPlaceholder;
@property (getter=isLivePhoto, nonatomic, readonly) bool livePhoto;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } livePhotoDuration;
@property (getter=isLivePhotoPlaceholder, nonatomic, readonly) bool livePhotoPlaceholder;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } livePhotoSynchronizedDisplayTime;
@property (nonatomic, readonly) NSString *localizedGeoDescription;
@property (nonatomic, readonly) CLLocation *location;
@property (nonatomic, readonly) unsigned long long mediaSubtypes;
@property (nonatomic, readonly) unsigned long long mediaType;
@property (nonatomic, readonly) NSDate *modificationDate;
@property (nonatomic, readonly) unsigned long long numberOfRepresentedAssets;
@property (nonatomic, readonly) unsigned long long originalFilesize;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } photoIrisStillDisplayTime;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } photoIrisVideoDuration;
@property (nonatomic, readonly) unsigned long long pixelHeight;
@property (nonatomic, readonly) unsigned long long pixelWidth;
@property (nonatomic, readonly) long long playbackStyle;
@property (nonatomic, readonly) long long playbackVariation;
@property (nonatomic, readonly) AVAsset *providedAVAsset;
@property (nonatomic, readonly) AVAudioMix *providedAudioMix;
@property (nonatomic, readonly) NSURL *providedFullsizeImageURL;
@property (nonatomic, readonly) NSURL *providedFullsizeRenderImageURL;
@property (nonatomic, readonly) NSURL *providedFullsizeRenderVideoURL;
@property (nonatomic, readonly) NSDictionary *providedImageMetadata;
@property (nonatomic, readonly) PHLivePhoto *providedLivePhoto;
@property (nonatomic, readonly) UIImage *providedPreviewImage;
@property (nonatomic, readonly) NSURL *providedVideoURL;
@property (nonatomic, readonly) bool representsBurst;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSString *uniformTypeIdentifier;
@property (nonatomic, readonly) NSString *uuid;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_contentQueueSidecar;
- (id)_contentQueue_finalURLs;
- (id)_contentQueue_suppressedTypes;
- (id)_packageContentQueue;
- (long long)_sendSourceFromMediaOrigin:(long long)arg1;
- (double)aspectRatio;
- (id)assetAdjustments;
- (id)browserItemPayload;
- (id)burstIdentifier;
- (bool)canPlayLoopingVideo;
- (bool)canPlayPhotoIris;
- (bool)containsLivePhotoContent;
- (bool)containsSuppressedLivePhoto;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (id)currentURLForType:(id)arg1;
- (id)description;
- (id)durableURLsSnapshot;
- (id)durableURLsSnapshotApplyingSuppression:(bool)arg1;
- (double)duration;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasPhotoColorAdjustments;
- (id)identifier;
- (id)init;
- (id)initWithAssetIdentifier:(id)arg1 durableURLs:(id)arg2 sidecar:(id)arg3;
- (id)initWithAssetIdentifier:(id)arg1 durableURLs:(id)arg2 suppressedTypes:(id)arg3 sidecar:(id)arg4;
- (id)initWithCoder:(id)arg1;
- (bool)isAnimatedImage;
- (unsigned long long)isContentEqualTo:(id)arg1;
- (bool)isFavorite;
- (bool)isHDR;
- (bool)isLivePhoto;
- (bool)isLivePhotoPlaceholder;
- (bool)isPhotoIrisPlaceholder;
- (bool)isTemporaryPlaceholder;
- (bool)isURLSuppressedForType:(id)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })livePhotoDuration;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })livePhotoSynchronizedDisplayTime;
- (id)localizedGeoDescription;
- (id)location;
- (long long)mediaOrigin;
- (unsigned long long)mediaSubtypes;
- (unsigned long long)mediaType;
- (id)modificationDate;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (long long)numberOfRepresentedAssets;
- (unsigned long long)originalFilesize;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })photoIrisStillDisplayTime;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })photoIrisVideoDuration;
- (unsigned long long)pixelHeight;
- (unsigned long long)pixelWidth;
- (long long)playbackStyle;
- (long long)playbackVariation;
- (id)providedAVAsset;
- (id)providedAudioMix;
- (id)providedFullsizeImageURL;
- (id)providedFullsizeRenderImageURL;
- (id)providedFullsizeRenderVideoURL;
- (id)providedImageMetadata;
- (id)providedLivePhoto;
- (id)providedPreviewImage;
- (id)providedVideoURL;
- (bool)representsBurst;
- (id)reviewAssetFromPackageMetadata;
- (id)sidecarObjectForKey:(id)arg1;
- (id)sidecarSnapshot;
- (id)suppressedTypesSnapshot;
- (id)uniformTypeIdentifier;
- (id)uuid;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

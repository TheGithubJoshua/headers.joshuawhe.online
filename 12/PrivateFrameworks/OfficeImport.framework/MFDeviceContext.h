<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MFDeviceContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/OfficeImport.framework/MFDeviceContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport (257.9)
 */

@interface MFDeviceContext : NSObject <NSCopying> {
    int  m_arcDirection;
    OITSUColor * m_bkColour;
    int  m_bkMode;
    MFBrush * m_brush;
    struct CGPoint { 
        double x; 
        double y; 
    }  m_brushOrg;
    bool  m_clippingIsRestarted;
    NSMutableArray * m_clippingPaths;
    NSObject<MFDeviceDriver> * m_driver;
    MFFont * m_font;
    double  m_miterLimit;
    MFPath * m_path;
    MFPen * m_pen;
    struct CGPoint { 
        double x; 
        double y; 
    }  m_penPos;
    int  m_polyFillMode;
    int  m_rop2;
    MFPalette * m_selectedPalette;
    int  m_stretchMode;
    int  m_textBreakCount;
    int  m_textBreakExtra;
    int  m_textCharExtra;
    OITSUColor * m_textColour;
    int  m_textDirection;
    int  m_textHorizontalAlign;
    bool  m_textUpdateCP;
    int  m_textVerticalAlign;
    MFTransform * m_transform;
}

@property (nonatomic) bool clippingIsRestarted;
@property (nonatomic, readonly) NSMutableArray *clippingPaths;

+ (id)deviceContextWithDriver:(id)arg1;

- (bool)clippingIsRestarted;
- (id)clippingPaths;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (int)getArcDirection;
- (id)getBkColour;
- (int)getBkMode;
- (id)getBrush;
- (struct CGPoint { double x1; double x2; })getBrushOrg;
- (id)getCurrentTransform;
- (id)getFont;
- (double)getMiterLimit;
- (id)getPath;
- (id)getPen;
- (struct CGPoint { double x1; double x2; })getPenPosition;
- (int)getPolyFillMode;
- (int)getRop2;
- (id)getSelectedPalette;
- (int)getStretchBltMode;
- (int)getTextBreakCount;
- (int)getTextBreakExtra;
- (int)getTextCharExtra;
- (id)getTextColour;
- (int)getTextDirection;
- (int)getTextHorizontalAlign;
- (bool)getTextUpdateCP;
- (int)getTextVerticalAlign;
- (id)initWithDriver:(id)arg1;
- (void)setArcDirection:(int)arg1;
- (void)setBkColour:(id)arg1;
- (void)setBkMode:(int)arg1;
- (void)setBrush:(id)arg1;
- (void)setBrushOrg:(struct CGPoint { double x1; double x2; })arg1;
- (void)setClippingIsRestarted:(bool)arg1;
- (void)setCurrentTransform:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setMiterLimit:(double)arg1;
- (void)setPath:(id)arg1;
- (void)setPen:(id)arg1;
- (void)setPenPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPolyFillMode:(int)arg1;
- (void)setRop2:(int)arg1;
- (void)setSelectedPalette:(id)arg1;
- (void)setStretchBltMode:(int)arg1;
- (void)setTextCharExtra:(int)arg1;
- (void)setTextColour:(id)arg1;
- (void)setTextDirection:(int)arg1;
- (void)setTextHorizontalAlign:(int)arg1;
- (void)setTextJustification:(int)arg1 in_breakCount:(int)arg2;
- (void)setTextUpdateCP:(bool)arg1;
- (void)setTextVerticalAlign:(int)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

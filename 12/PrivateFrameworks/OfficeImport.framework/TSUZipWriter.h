<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSUZipWriter.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/OfficeImport.framework/TSUZipWriter.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSUZipWriter : NSObject {
    unsigned int  _CRCToMatch;
    bool  _calculateCRC;
    bool  _calculateSize;
    NSObject<OS_dispatch_queue> * _channelQueue;
    TSUZipWriterEntry * _currentEntry;
    long long  _currentOffset;
    NSMutableArray * _entries;
    NSMutableDictionary * _entriesMap;
    unsigned long long  _entryDataSize;
    NSMutableArray * _entryDatas;
    NSError * _error;
    bool  _force32BitSize;
    bool  _isClosed;
    NSDate * _lastModificationDateIfSizeAndCRCMatches;
    NSObject<OS_dispatch_data> * _localFileHeaderData;
    NSDate * _newEntryLastModificationDate;
    unsigned long long  _options;
    unsigned long long  _sizeToMatch;
    NSArray * _sortedEntries;
    <TSURandomWriteChannel> * _writeChannel;
    NSObject<OS_dispatch_semaphore> * _writeChannelCompletionSemaphore;
    NSObject<OS_dispatch_queue> * _writeQueue;
    long long  _writtenOffset;
}

@property (readonly) unsigned long long archiveLength;
@property (readonly) unsigned long long entriesCount;
@property (readonly) bool isClosed;
@property (readonly) NSArray *sortedEntries;

- (void).cxx_destruct;
- (void)addBarrier:(id /* block */)arg1;
- (void)addData:(id)arg1;
- (void)addData:(id)arg1 queue:(id)arg2 completion:(id /* block */)arg3;
- (void)addDataImpl:(id)arg1 queue:(id)arg2 completion:(id /* block */)arg3;
- (void)addExistingEntry:(id)arg1;
- (void)addExistingEntryImpl:(id)arg1;
- (unsigned long long)archiveLength;
- (void)beginEntryWithName:(id)arg1 force32BitSize:(bool)arg2 lastModificationDate:(id)arg3 size:(unsigned long long)arg4 CRC:(unsigned int)arg5 forceCalculatingSizeAndCRCForPreservingLastModificationDate:(bool)arg6;
- (void)beginEntryWithNameImpl:(id)arg1 force32BitSize:(bool)arg2 lastModificationDate:(id)arg3 size:(unsigned long long)arg4 CRC:(unsigned int)arg5 forceCalculatingSizeAndCRCForPreservingLastModificationDate:(bool)arg6;
- (void)closeWithQueue:(id)arg1 completion:(id /* block */)arg2;
- (unsigned long long)entriesCount;
- (unsigned long long)entriesCountImpl;
- (id)entryWithName:(id)arg1;
- (void)enumerateEntriesUsingBlock:(id /* block */)arg1;
- (void)finishEntry;
- (void)flushCurrentEntryWithQueue:(id)arg1 completion:(id /* block */)arg2;
- (void)flushEntryData;
- (void)handleWriteError:(id)arg1;
- (id)init;
- (id)initWithOptions:(unsigned long long)arg1;
- (bool)isClosed;
- (id)localFileHeaderDataForEntry:(id)arg1;
- (id)p_writeChannel;
- (void)p_writeData:(id)arg1 offset:(long long)arg2 completion:(id /* block */)arg3;
- (id)prepareWriteChannelWithCloseCompletionHandler:(id /* block */)arg1;
- (void)setEntryInsertionOffset:(long long)arg1;
- (void)setEntryInsertionOffsetImpl:(long long)arg1;
- (id)sortedEntries;
- (id)sortedEntriesImpl;
- (void)truncateToNumberOfEntries:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)truncateToNumberOfEntriesImpl:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)truncateToOffset:(long long)arg1 completion:(id /* block */)arg2;
- (void)truncateToOffsetImpl:(long long)arg1 completion:(id /* block */)arg2;
- (void)writeCentralDirectory;
- (void)writeCentralFileHeaderDataForEntry:(id)arg1;
- (void)writeData:(id)arg1;
- (void)writeData:(id)arg1 offset:(long long)arg2;
- (void)writeData:(id)arg1 queue:(id)arg2 completion:(id /* block */)arg3;
- (void)writeEndOfCentralDirectoryDataWithOffset:(long long)arg1 size:(long long)arg2 entryCount:(unsigned long long)arg3;
- (void)writeEntryWithName:(id)arg1 force32BitSize:(bool)arg2 fromReadChannel:(id)arg3 completion:(id /* block */)arg4;
- (void)writeEntryWithName:(id)arg1 force32BitSize:(bool)arg2 lastModificationDate:(id)arg3 size:(unsigned long long)arg4 CRC:(unsigned int)arg5 fromReadChannel:(id)arg6 completion:(id /* block */)arg7;
- (void)writeEntryWithName:(id)arg1 force32BitSize:(bool)arg2 lastModificationDate:(id)arg3 size:(unsigned long long)arg4 CRC:(unsigned int)arg5 fromReadChannel:(id)arg6 writeHandler:(id /* block */)arg7;
- (void)writeZip64EndOfCentralDirectoryLocatorWithOffset:(long long)arg1;
- (void)writeZip64EndOfCentralDirectoryWithOffset:(long long)arg1 size:(long long)arg2 entryCount:(unsigned long long)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EPFormulaCleaner.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/OfficeImport.framework/EPFormulaCleaner.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport (257.9)
 */

@interface EPFormulaCleaner : EDProcessor {
    EDRowBlocks * mBaseFormulaRowBlocks;
    int  mColumnOffset;
    EDSheet * mCurrentSheet;
    EDFormula * mFormula;
    OITSUIntDictionary * mNameArrayedTestCache;
    OITSUIntDictionary * mNameCircularReferenceTestCache;
    EDName * mParentName;
    int  mRowOffset;
    EDFormula * mTokensToClean;
}

- (void)addOffsetsToRow:(int*)arg1 rowRelative:(bool)arg2 column:(int*)arg3 columnRelative:(bool)arg4;
- (void)applyMaxCellsInName:(id)arg1;
- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (bool)checkCustomFunction:(unsigned int)arg1;
- (bool)checkFunctionId:(int)arg1 tokenIndex:(unsigned int)arg2;
- (bool)checkSupportedAddInName:(id)arg1 externalLink:(bool)arg2;
- (bool)cleanArea3D:(unsigned int)arg1;
- (bool)cleanArea:(unsigned int)arg1 updateSheet:(bool)arg2;
- (bool)cleanArray:(unsigned int)arg1;
- (void)cleanFormula:(id)arg1 name:(id)arg2;
- (void)cleanFormula:(id)arg1 sheet:(id)arg2;
- (void)cleanFormula:(id)arg1 sheet:(id)arg2 name:(id)arg3;
- (bool)cleanFunc:(unsigned int)arg1;
- (bool)cleanFuncVar:(unsigned int)arg1;
- (bool)cleanName:(unsigned int)arg1 nameIndex:(unsigned int)arg2 sheetIndex:(unsigned long long)arg3 tokenOffset:(int*)arg4;
- (bool)cleanName:(unsigned int)arg1 tokenOffset:(int*)arg2;
- (bool)cleanNameX:(unsigned int)arg1 tokenOffset:(int*)arg2;
- (bool)cleanRange:(unsigned int)arg1 tokenOffset:(int*)arg2;
- (bool)cleanRef3D:(unsigned int)arg1;
- (bool)cleanRef:(unsigned int)arg1 updateSheet:(bool)arg2;
- (bool)cleanTokenAtIndex:(unsigned int)arg1 tokenOffset:(int*)arg2;
- (bool)cleanUnion:(unsigned int)arg1;
- (bool)combineCellReferences:(unsigned int)arg1 tokenOffset:(int*)arg2;
- (void)dealloc;
- (bool)doesNameIndexContainCircularReferences:(unsigned int)arg1 sheetIndex:(unsigned long long)arg2 previousNameIndexes:(struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > { struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::less<unsigned int> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; }*)arg3;
- (bool)isArrayedFormulaSupported:(id)arg1 allowSimpleRanges:(bool)arg2;
- (bool)isLinkReferenceIndexSupported:(unsigned int)arg1 allowExternal:(bool)arg2;
- (bool)isObjectSupported:(id)arg1;
- (bool)isReferenceValidInLassoForRow:(int)arg1 rowRelative:(bool)arg2 column:(int)arg3 columnRelative:(bool)arg4;
- (bool)isReferenceValidInLassoForSheet:(id)arg1 rowMin:(int)arg2 rowMinRelative:(bool)arg3 rowMax:(int)arg4 rowMaxRelative:(bool)arg5 columnMin:(int)arg6 columnMinRelative:(bool)arg7 columnMax:(int)arg8 columnMaxRelative:(bool)arg9;
- (bool)isThereContentOutsideOfLassoBoundsForSheet:(id)arg1 rowMin:(int)arg2 rowMax:(int)arg3 columnMin:(int)arg4 columnMax:(int)arg5;
- (id)newFormulaToCleanFromSharedFormula:(id)arg1;
- (void)prepareToProcessFormula:(id)arg1 sheet:(id)arg2 name:(id)arg3;
- (void)reportWarning:(int)arg1;
- (void)reportWarning:(int)arg1 parameter:(id)arg2;
- (void)reset;
- (void)updateSheet:(id)arg1 row:(int)arg2 rowRelative:(bool)arg3 column:(int)arg4 columnRelative:(bool)arg5;
- (void)updateSheet:(id)arg1 rowMin:(int)arg2 rowMinRelative:(bool)arg3 rowMax:(int)arg4 rowMaxRelative:(bool)arg5 columnMin:(int)arg6 columnMinRelative:(bool)arg7 columnMax:(int)arg8 columnMaxRelative:(bool)arg9;
- (void)updateWorksheet:(id)arg1 row:(int)arg2 column:(int)arg3 inDictionary:(id)arg4;
- (bool)useEvaluationStackToCheckFunctionId:(int)arg1 functionName:(id)arg2 tokenIndex:(unsigned int)arg3;
- (unsigned int)useEvaluationStackToGetParameter:(unsigned int)arg1 tokenIndex:(unsigned int)arg2;
- (id)useEvaluationStackToGetParameter:(unsigned int)arg1 tokenIndex:(unsigned int)arg2 allReferencesAllowed:(bool)arg3 success:(bool*)arg4;
- (int)useEvaluationStackToGetParameterTokenType:(unsigned int)arg1 tokenIndex:(unsigned int)arg2 success:(bool*)arg3;
- (id)worksheetFromLinkReferenceIndex:(unsigned int)arg1;
- (id)worksheetsFromLinkReferenceIndex:(unsigned int)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WDTableCellProperties.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/OfficeImport.framework/WDTableCellProperties.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport (257.9)
 */

@interface WDTableCellProperties : NSObject {
    WDDocument * mDocument;
    unsigned int  mOriginal;
    struct { 
        WDShading *shading; 
        WDBorder *topBorder; 
        WDBorder *leftBorder; 
        WDBorder *bottomBorder; 
        WDBorder *rightBorder; 
        WDBorder *diagonalUpBorder; 
        WDBorder *diagonalDownBorder; 
        WDBorder *insideHorizontalBorder; 
        WDBorder *insideVerticalBorder; 
        int widthType; 
        short topMargin; 
        int topMarginType; 
        short bottomMargin; 
        int bottomMarginType; 
        short leftMargin; 
        int leftMarginType; 
        short rightMargin; 
        int rightMarginType; 
        int verticalAlignment; 
        BOOL textDirection; 
        int deleted; 
        int edited; 
        int formattingChanged; 
        unsigned short indexToAuthorIDOfDeletion; 
        unsigned short indexToAuthorIDOfEdit; 
        unsigned short indexToAuthorIDOfFormattingChange; 
        NSDate *deletionDate; 
        NSDate *editDate; 
        NSDate *formattingChangeDate; 
        unsigned int shadingOverridden : 1; 
        unsigned int topBorderOverridden : 1; 
        unsigned int leftBorderOverridden : 1; 
        unsigned int bottomBorderOverridden : 1; 
        unsigned int rightBorderOverridden : 1; 
        unsigned int diagonalUpBorderOverridden : 1; 
        unsigned int diagonalDownBorderOverridden : 1; 
        unsigned int insideHorizontalBorderOverridden : 1; 
        unsigned int insideVerticalBorderOverridden : 1; 
        unsigned int widthTypeOverridden : 1; 
        unsigned int topMarginOverridden : 1; 
        unsigned int topMarginTypeOverridden : 1; 
        unsigned int bottomMarginOverridden : 1; 
        unsigned int bottomMarginTypeOverridden : 1; 
        unsigned int leftMarginOverridden : 1; 
        unsigned int leftMarginTypeOverridden : 1; 
        unsigned int rightMarginOverridden : 1; 
        unsigned int rightMarginTypeOverridden : 1; 
        unsigned int verticalAlignmentOverridden : 1; 
        unsigned int textDirectionOverridden : 1; 
        unsigned int verticallyMergedCell : 1; 
        unsigned int verticallyMergedCellOverridden : 1; 
        unsigned int firstInSetOfVerticallyMergedCells : 1; 
        unsigned int firstInSetOfVerticallyMergedCellsOverridden : 1; 
        unsigned int noWrap : 1; 
        unsigned int noWrapOverridden : 1; 
        unsigned int deletedOverridden : 1; 
        unsigned int editedOverridden : 1; 
        unsigned int formattingChangedOverridden : 1; 
        unsigned int indexToAuthorIDOfDeletionOverridden : 1; 
        unsigned int indexToAuthorIDOfEditOverridden : 1; 
        unsigned int indexToAuthorIDOfFormattingChangeOverridden : 1; 
        unsigned int deletionDateOverridden : 1; 
        unsigned int editDateOverridden : 1; 
        unsigned int formattingChangeDateOverridden : 1; 
    }  mOriginalProperties;
    short  mPosition;
    unsigned int  mResolved;
    unsigned int  mTracked;
    struct { 
        WDShading *shading; 
        WDBorder *topBorder; 
        WDBorder *leftBorder; 
        WDBorder *bottomBorder; 
        WDBorder *rightBorder; 
        WDBorder *diagonalUpBorder; 
        WDBorder *diagonalDownBorder; 
        WDBorder *insideHorizontalBorder; 
        WDBorder *insideVerticalBorder; 
        int widthType; 
        short topMargin; 
        int topMarginType; 
        short bottomMargin; 
        int bottomMarginType; 
        short leftMargin; 
        int leftMarginType; 
        short rightMargin; 
        int rightMarginType; 
        int verticalAlignment; 
        BOOL textDirection; 
        int deleted; 
        int edited; 
        int formattingChanged; 
        unsigned short indexToAuthorIDOfDeletion; 
        unsigned short indexToAuthorIDOfEdit; 
        unsigned short indexToAuthorIDOfFormattingChange; 
        NSDate *deletionDate; 
        NSDate *editDate; 
        NSDate *formattingChangeDate; 
        unsigned int shadingOverridden : 1; 
        unsigned int topBorderOverridden : 1; 
        unsigned int leftBorderOverridden : 1; 
        unsigned int bottomBorderOverridden : 1; 
        unsigned int rightBorderOverridden : 1; 
        unsigned int diagonalUpBorderOverridden : 1; 
        unsigned int diagonalDownBorderOverridden : 1; 
        unsigned int insideHorizontalBorderOverridden : 1; 
        unsigned int insideVerticalBorderOverridden : 1; 
        unsigned int widthTypeOverridden : 1; 
        unsigned int topMarginOverridden : 1; 
        unsigned int topMarginTypeOverridden : 1; 
        unsigned int bottomMarginOverridden : 1; 
        unsigned int bottomMarginTypeOverridden : 1; 
        unsigned int leftMarginOverridden : 1; 
        unsigned int leftMarginTypeOverridden : 1; 
        unsigned int rightMarginOverridden : 1; 
        unsigned int rightMarginTypeOverridden : 1; 
        unsigned int verticalAlignmentOverridden : 1; 
        unsigned int textDirectionOverridden : 1; 
        unsigned int verticallyMergedCell : 1; 
        unsigned int verticallyMergedCellOverridden : 1; 
        unsigned int firstInSetOfVerticallyMergedCells : 1; 
        unsigned int firstInSetOfVerticallyMergedCellsOverridden : 1; 
        unsigned int noWrap : 1; 
        unsigned int noWrapOverridden : 1; 
        unsigned int deletedOverridden : 1; 
        unsigned int editedOverridden : 1; 
        unsigned int formattingChangedOverridden : 1; 
        unsigned int indexToAuthorIDOfDeletionOverridden : 1; 
        unsigned int indexToAuthorIDOfEditOverridden : 1; 
        unsigned int indexToAuthorIDOfFormattingChangeOverridden : 1; 
        unsigned int deletionDateOverridden : 1; 
        unsigned int editDateOverridden : 1; 
        unsigned int formattingChangeDateOverridden : 1; 
    }  mTrackedProperties;
    short  mWidth;
}

- (void)addProperties:(id)arg1;
- (void)addPropertiesValues:(struct { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; int x10; short x11; int x12; short x13; int x14; short x15; int x16; short x17; int x18; int x19; BOOL x20; int x21; int x22; int x23; unsigned short x24; unsigned short x25; unsigned short x26; id x27; id x28; id x29; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; unsigned int x40 : 1; unsigned int x41 : 1; unsigned int x42 : 1; unsigned int x43 : 1; unsigned int x44 : 1; unsigned int x45 : 1; unsigned int x46 : 1; unsigned int x47 : 1; unsigned int x48 : 1; unsigned int x49 : 1; unsigned int x50 : 1; unsigned int x51 : 1; unsigned int x52 : 1; unsigned int x53 : 1; unsigned int x54 : 1; unsigned int x55 : 1; unsigned int x56 : 1; unsigned int x57 : 1; unsigned int x58 : 1; unsigned int x59 : 1; unsigned int x60 : 1; unsigned int x61 : 1; unsigned int x62 : 1; unsigned int x63 : 1; }*)arg1 to:(struct { id x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; int x10; short x11; int x12; short x13; int x14; short x15; int x16; short x17; int x18; int x19; BOOL x20; int x21; int x22; int x23; unsigned short x24; unsigned short x25; unsigned short x26; id x27; id x28; id x29; unsigned int x30 : 1; unsigned int x31 : 1; unsigned int x32 : 1; unsigned int x33 : 1; unsigned int x34 : 1; unsigned int x35 : 1; unsigned int x36 : 1; unsigned int x37 : 1; unsigned int x38 : 1; unsigned int x39 : 1; unsigned int x40 : 1; unsigned int x41 : 1; unsigned int x42 : 1; unsigned int x43 : 1; unsigned int x44 : 1; unsigned int x45 : 1; unsigned int x46 : 1; unsigned int x47 : 1; unsigned int x48 : 1; unsigned int x49 : 1; unsigned int x50 : 1; unsigned int x51 : 1; unsigned int x52 : 1; unsigned int x53 : 1; unsigned int x54 : 1; unsigned int x55 : 1; unsigned int x56 : 1; unsigned int x57 : 1; unsigned int x58 : 1; unsigned int x59 : 1; unsigned int x60 : 1; unsigned int x61 : 1; unsigned int x62 : 1; unsigned int x63 : 1; }*)arg2;
- (id)bottomBorder;
- (short)bottomMargin;
- (int)bottomMarginType;
- (void)clearShading;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (int)deleted;
- (id)deletionDate;
- (id)description;
- (id)diagonalDownBorder;
- (id)diagonalUpBorder;
- (id)document;
- (id)editDate;
- (int)edited;
- (bool)firstInSetOfVerticallyMergedCells;
- (id)formattingChangeDate;
- (int)formattingChanged;
- (unsigned short)indexToAuthorIDOfDeletion;
- (unsigned short)indexToAuthorIDOfEdit;
- (unsigned short)indexToAuthorIDOfFormattingChange;
- (id)init;
- (id)initWithDocument:(id)arg1;
- (id)insideHorizontalBorder;
- (id)insideVerticalBorder;
- (bool)isBottomBorderOverridden;
- (bool)isBottomMarginOverridden;
- (bool)isBottomMarginTypeOverridden;
- (bool)isDeletedOverridden;
- (bool)isDeletionDateOverridden;
- (bool)isDiagonalDownBorderOverridden;
- (bool)isDiagonalUpBorderOverridden;
- (bool)isEditDateOverridden;
- (bool)isEditedOverridden;
- (bool)isFirstInSetOfVerticallyMergedCellsOverridden;
- (bool)isFormattingChangeDateOverridden;
- (bool)isFormattingChangedOverridden;
- (bool)isIndexToAuthorIDOfDeletionOverridden;
- (bool)isIndexToAuthorIDOfEditOverridden;
- (bool)isIndexToAuthorIDOfFormattingChangeOverridden;
- (bool)isInsideHorizontalBorderOverridden;
- (bool)isInsideVerticalBorderOverridden;
- (bool)isLeftBorderOverridden;
- (bool)isLeftMarginOverridden;
- (bool)isLeftMarginTypeOverridden;
- (bool)isNoWrapOverridden;
- (bool)isRightBorderOverridden;
- (bool)isRightMarginOverridden;
- (bool)isRightMarginTypeOverridden;
- (bool)isShadingOverridden;
- (bool)isTextDirectionOverridden;
- (bool)isTopBorderOverridden;
- (bool)isTopMarginOverridden;
- (bool)isTopMarginTypeOverridden;
- (bool)isVerticalAlignmentOverridden;
- (bool)isVerticallyMergedCellOverridden;
- (bool)isWidthTypeOverridden;
- (id)leftBorder;
- (short)leftMargin;
- (int)leftMarginType;
- (id)mutableBottomBorder;
- (id)mutableDiagonalDownBorder;
- (id)mutableDiagonalUpBorder;
- (id)mutableInsideHorizontalBorder;
- (id)mutableInsideVerticalBorder;
- (id)mutableLeftBorder;
- (id)mutableRightBorder;
- (id)mutableShading;
- (id)mutableTopBorder;
- (bool)noWrap;
- (void)originalToTracked;
- (short)position;
- (int)resolveMode;
- (id)rightBorder;
- (short)rightMargin;
- (int)rightMarginType;
- (void)setBottomMargin:(short)arg1;
- (void)setBottomMarginType:(int)arg1;
- (void)setDeleted:(int)arg1;
- (void)setDeletionDate:(id)arg1;
- (void)setEditDate:(id)arg1;
- (void)setEdited:(int)arg1;
- (void)setFirstInSetOfVerticallyMergedCells:(bool)arg1;
- (void)setFormattingChangeDate:(id)arg1;
- (void)setFormattingChanged:(int)arg1;
- (void)setIndexToAuthorIDOfDeletion:(unsigned short)arg1;
- (void)setIndexToAuthorIDOfEdit:(unsigned short)arg1;
- (void)setIndexToAuthorIDOfFormattingChange:(unsigned short)arg1;
- (void)setLeftMargin:(short)arg1;
- (void)setLeftMarginType:(int)arg1;
- (void)setNoWrap:(bool)arg1;
- (void)setPosition:(short)arg1;
- (void)setResolveMode:(int)arg1;
- (void)setRightMargin:(short)arg1;
- (void)setRightMarginType:(int)arg1;
- (void)setTextDirection:(int)arg1;
- (void)setTopMargin:(short)arg1;
- (void)setTopMarginType:(int)arg1;
- (void)setVerticalAlignment:(int)arg1;
- (void)setVerticallyMergedCell:(bool)arg1;
- (void)setWidth:(short)arg1;
- (void)setWidthType:(int)arg1;
- (id)shading;
- (int)textDirection;
- (id)topBorder;
- (short)topMargin;
- (int)topMarginType;
- (int)verticalAlignment;
- (bool)verticallyMergedCell;
- (short)width;
- (int)widthType;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

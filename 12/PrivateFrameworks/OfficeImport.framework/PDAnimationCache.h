<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PDAnimationCache.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/OfficeImport.framework/PDAnimationCache.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport (257.9)
 */

@interface PDAnimationCache : NSObject {
    PDBuild * mBuild;
    double  mDelay;
    double  mDirection;
    double  mDuration;
    NSString * mGroupId;
    bool  mHasDelay;
    bool  mHasDirection;
    bool  mHasDuration;
    bool  mHasPartCount;
    bool  mHasValue;
    bool  mIsHead;
    int  mIterateType;
    int  mLevel;
    PDAnimateMotionBehavior * mMotionPath;
    int  mNodeType;
    int  mPartCount;
    int  mPresetClass;
    int  mPresetId;
    int  mPresetSubType;
    PDAnimationTarget * mTarget;
    double  mValue;
}

@property (nonatomic, retain) PDBuild *build;
@property (nonatomic) double delay;
@property (nonatomic) double direction;
@property (nonatomic) double duration;
@property (nonatomic, retain) NSString *groupId;
@property (nonatomic) bool hasDelay;
@property (nonatomic) bool hasDirection;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasPartCount;
@property (nonatomic) bool hasValue;
@property (nonatomic) bool isHead;
@property (nonatomic) int iterateType;
@property (nonatomic) int level;
@property (nonatomic, retain) PDAnimateMotionBehavior *motionPath;
@property (nonatomic) int nodeType;
@property (nonatomic) int partCount;
@property (nonatomic) int presetClass;
@property (nonatomic) int presetId;
@property (nonatomic) int presetSubType;
@property (nonatomic, retain) PDAnimationTarget *target;
@property (nonatomic) double value;

+ (id)createAnimationInfoDataForCacheItem:(id)arg1 order:(unsigned int)arg2;
+ (void)loadAnimationCache:(id)arg1 pdAnimation:(id)arg2 state:(id)arg3;
+ (void)mapAnimationInfo:(id)arg1 cacheData:(id)arg2 state:(id)arg3;
+ (void)mapCommonData:(id)arg1 cacheData:(id)arg2 state:(id)arg3;

- (id)build;
- (void)dealloc;
- (double)delay;
- (double)direction;
- (double)duration;
- (id)groupId;
- (bool)hasDelay;
- (bool)hasDirection;
- (bool)hasDuration;
- (bool)hasPartCount;
- (bool)hasValue;
- (id)initWithAnimationInfo:(id)arg1;
- (bool)isHead;
- (int)iterateType;
- (int)level;
- (id)motionPath;
- (int)nodeType;
- (int)partCount;
- (int)presetClass;
- (int)presetId;
- (int)presetSubType;
- (void)setBuild:(id)arg1;
- (void)setDelay:(double)arg1;
- (void)setDirection:(double)arg1;
- (void)setDuration:(double)arg1;
- (void)setGroupId:(id)arg1;
- (void)setHasDelay:(bool)arg1;
- (void)setHasDirection:(bool)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasPartCount:(bool)arg1;
- (void)setHasValue:(bool)arg1;
- (void)setIsHead:(bool)arg1;
- (void)setIterateType:(int)arg1;
- (void)setLevel:(int)arg1;
- (void)setMotionPath:(id)arg1;
- (void)setNodeType:(int)arg1;
- (void)setPartCount:(int)arg1;
- (void)setPresetClass:(int)arg1;
- (void)setPresetId:(int)arg1;
- (void)setPresetSubType:(int)arg1;
- (void)setTarget:(id)arg1;
- (void)setValue:(double)arg1;
- (id)target;
- (double)value;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

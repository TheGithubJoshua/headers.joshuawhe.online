<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WDCharacterProperties.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/OfficeImport.framework/WDCharacterProperties.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport (257.9)
 */

@interface WDCharacterProperties : NSObject {
    WDDocument * mDocument;
    unsigned int  mOriginal;
    struct { id x1; id x2; id x3; id x4; id x5; id x6; id x7; int x8; int x9; int x10; int x11; id x12; id x13; id x14; id x15; id x16; int x17; int x18; int x19; short x20; short x21; id x22; id x23; float x24; unsigned short x25; unsigned short x26; unsigned short x27; unsigned short x28; unsigned short x29; unsigned short x30; unsigned short x31; unsigned char x32; unsigned char x33; float x34; unsigned char x35; unsigned char x36; unsigned char x37; unsigned char x38; unsigned char x39; unsigned char x40; unsigned char x41; unsigned char x42; int x43; unsigned char x44; unsigned char x45; bool x46; unsigned char x47; unsigned char x48; unsigned char x49; unsigned char x50; unsigned char x51; unsigned char x52; unsigned char x53; unsigned char x54; unsigned char x55; unsigned char x56; unsigned short x57; unsigned int x58 : 1; unsigned int x59 : 1; unsigned int x60 : 1; unsigned int x61 : 1; unsigned int x62 : 1; unsigned int x63 : 1; unsigned int x64 : 1; unsigned int x65 : 1; unsigned int x66 : 1; unsigned int x67 : 1; } * mOriginalProperties;
    unsigned int  mResolved;
    unsigned int  mTracked;
    struct { id x1; id x2; id x3; id x4; id x5; id x6; id x7; int x8; int x9; int x10; int x11; id x12; id x13; id x14; id x15; id x16; int x17; int x18; int x19; short x20; short x21; id x22; id x23; float x24; unsigned short x25; unsigned short x26; unsigned short x27; unsigned short x28; unsigned short x29; unsigned short x30; unsigned short x31; unsigned char x32; unsigned char x33; float x34; unsigned char x35; unsigned char x36; unsigned char x37; unsigned char x38; unsigned char x39; unsigned char x40; unsigned char x41; unsigned char x42; int x43; unsigned char x44; unsigned char x45; bool x46; unsigned char x47; unsigned char x48; unsigned char x49; unsigned char x50; unsigned char x51; unsigned char x52; unsigned char x53; unsigned char x54; unsigned char x55; unsigned char x56; unsigned short x57; unsigned int x58 : 1; unsigned int x59 : 1; unsigned int x60 : 1; unsigned int x61 : 1; unsigned int x62 : 1; unsigned int x63 : 1; unsigned int x64 : 1; unsigned int x65 : 1; unsigned int x66 : 1; unsigned int x67 : 1; } * mTrackedProperties;
}

+ (SEL)fontOverriddenSelectorForFontType:(int)arg1;
+ (SEL)fontSelectorForFontType:(int)arg1;
+ (SEL)setFontSelectorForFontType:(int)arg1;

- (void)applyPropertiesFrom:(id)arg1 ifOverriddenIn:(id)arg2;
- (id)baseStyle;
- (int)bold;
- (int)boldForBiText;
- (id)border;
- (int)bracketTwoLinesInOne;
- (int)caps;
- (int)charPositionOfPictureBulletInBookmark;
- (void)clearBaseStyle;
- (id)color;
- (bool)compressHorizontalInVertical;
- (void)copyPropertiesInto:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (int)deleted;
- (id)deletionDate;
- (bool)deletionDifferentFrom:(id)arg1;
- (bool)deletionDifferentFrom:(id)arg1 mode:(int)arg2;
- (id)description;
- (id)document;
- (int)doubleStrikeThrough;
- (id)editDate;
- (bool)editDifferentFrom:(id)arg1;
- (bool)editDifferentFrom:(id)arg1 mode:(int)arg2;
- (int)edited;
- (bool)embeddedObject;
- (int)embossed;
- (int)emphasisMark;
- (id)extendedFont;
- (id)farEastFont;
- (id)font;
- (id)fontForFontType:(int)arg1;
- (int)fontHint;
- (unsigned short)fontSize;
- (unsigned short)fontSizeForBiText;
- (int)formattingChanged;
- (bool)formattingChangedDifferentFrom:(id)arg1;
- (bool)formattingChangedDifferentFrom:(id)arg1 mode:(int)arg2;
- (int)hidden;
- (int)highlightColor;
- (bool)horizontalInVertical;
- (int)imprint;
- (unsigned short)indexToAuthorIDOfDeletion;
- (unsigned short)indexToAuthorIDOfEdit;
- (unsigned short)indexToAuthorIDOfFormattingChange;
- (id)initWithDocument:(id)arg1;
- (bool)isAnythingOverridden;
- (bool)isAnythingOverriddenIn:(struct { id x1; id x2; id x3; id x4; id x5; id x6; id x7; int x8; int x9; int x10; int x11; id x12; id x13; id x14; id x15; id x16; int x17; int x18; int x19; short x20; short x21; id x22; id x23; float x24; unsigned short x25; unsigned short x26; unsigned short x27; unsigned short x28; unsigned short x29; unsigned short x30; unsigned short x31; unsigned char x32; unsigned char x33; float x34; unsigned char x35; unsigned char x36; unsigned char x37; unsigned char x38; unsigned char x39; unsigned char x40; unsigned char x41; unsigned char x42; int x43; unsigned char x44; unsigned char x45; bool x46; unsigned char x47; unsigned char x48; unsigned char x49; unsigned char x50; unsigned char x51; unsigned char x52; unsigned char x53; unsigned char x54; unsigned char x55; unsigned char x56; unsigned short x57; unsigned int x58 : 1; unsigned int x59 : 1; unsigned int x60 : 1; unsigned int x61 : 1; unsigned int x62 : 1; unsigned int x63 : 1; unsigned int x64 : 1; unsigned int x65 : 1; unsigned int x66 : 1; unsigned int x67 : 1; }*)arg1;
- (bool)isBaseStyleOverridden;
- (bool)isBoldForBiTextOverridden;
- (bool)isBoldOverridden;
- (bool)isBooleanProbablyDifferent:(unsigned char)arg1 than:(unsigned char)arg2;
- (bool)isBorderOverridden;
- (bool)isBracketTwoLinesInOneOverridden;
- (bool)isCapsOverridden;
- (bool)isCharPositionOfPictureBulletInBookmarkOverridden;
- (bool)isColorAuto;
- (bool)isColorAutoOverridden;
- (bool)isColorOverridden;
- (bool)isCompressHorizontalInVerticalOverridden;
- (bool)isDeletedOverridden;
- (bool)isDeletionDateOverridden;
- (bool)isDoubleStrikeThroughOverridden;
- (bool)isEditDateOverridden;
- (bool)isEditedOverridden;
- (bool)isEmbeddedObjectOverridden;
- (bool)isEmbossedOverridden;
- (bool)isEmphasisMarkOverridden;
- (bool)isExtendedFontOverridden;
- (bool)isFarEastFontOverridden;
- (bool)isFontHintOverridden;
- (bool)isFontOverridden;
- (bool)isFontOverriddenForFontType:(int)arg1;
- (bool)isFontSizeForBiTextOverridden;
- (bool)isFontSizeOverridden;
- (bool)isFormattingChangedOverridden;
- (bool)isHiddenOverridden;
- (bool)isHighlight;
- (bool)isHighlightColorOverridden;
- (bool)isHighlightOverridden;
- (bool)isHorizontalInVerticalOverridden;
- (bool)isImprintOverridden;
- (bool)isIndexToAuthorIDOfDeletionOverridden;
- (bool)isIndexToAuthorIDOfEditOverridden;
- (bool)isIndexToAuthorIDOfFormattingChangeOverridden;
- (bool)isItalicForBiTextOverridden;
- (bool)isItalicOverridden;
- (bool)isKerningOverridden;
- (bool)isLanguageForBiTextOverridden;
- (bool)isLanguageForDefaultTextOverridden;
- (bool)isLanguageForFarEastOverridden;
- (bool)isLigatureOverridden;
- (bool)isListCharacterPictureBullet;
- (bool)isListCharacterPictureBulletOverridden;
- (bool)isLowerCase;
- (bool)isLowerCaseOverridden;
- (bool)isObjectIDForOle2Overridden;
- (bool)isOffsetToPictureDataOverridden;
- (bool)isOle2Overridden;
- (bool)isOutline2010WidthOverridden;
- (bool)isOutlineColorOverridden;
- (bool)isOutlineOverridden;
- (bool)isPositionOverridden;
- (bool)isReflectionOverridden;
- (bool)isRightToLeftOverridden;
- (bool)isShadingOverridden;
- (bool)isShadow2010OpacityOverridden;
- (bool)isShadow2010Overridden;
- (bool)isShadowOverridden;
- (bool)isSmallCapsOverridden;
- (bool)isSpacingOverridden;
- (bool)isSpecialCharacter;
- (bool)isSpecialCharacterOverridden;
- (bool)isStrikeThroughOverridden;
- (bool)isSymbolCharacterOverridden;
- (bool)isSymbolFontOverridden;
- (bool)isTextScaleOverridden;
- (bool)isTwoLinesInOneOverridden;
- (bool)isUnderlineColorOverridden;
- (bool)isUnderlineOverridden;
- (bool)isUseCsFontOverridden;
- (bool)isVerticalAlignOverridden;
- (int)italic;
- (int)italicForBiText;
- (unsigned short)kerning;
- (int)languageForBiText;
- (int)languageForDefaultText;
- (int)languageForFarEast;
- (int)ligature;
- (id)mutableBorder;
- (id)mutableShading;
- (void)negateFormattingChangesWithDefaults:(id)arg1;
- (int)objectIDForOle2;
- (int)offsetToPictureData;
- (bool)ole2;
- (int)outline;
- (float)outline2010Width;
- (id)outlineColor;
- (short)position;
- (id)reflection;
- (void)removeEmptyFormattingChanges:(id)arg1;
- (int)resolveMode;
- (int)reverseBooleanProperty:(int)arg1;
- (int)rightToLeft;
- (void)setBaseStyle:(id)arg1;
- (void)setBold:(int)arg1;
- (void)setBoldForBiText:(int)arg1;
- (void)setBracketTwoLinesInOne:(int)arg1;
- (void)setCaps:(int)arg1;
- (void)setCharPositionOfPictureBulletInBookmark:(int)arg1;
- (void)setColor:(id)arg1;
- (void)setColorAuto:(bool)arg1;
- (void)setCompressHorizontalInVertical:(bool)arg1;
- (void)setDeleted:(int)arg1;
- (void)setDeletionDate:(id)arg1;
- (void)setDoubleStrikeThrough:(int)arg1;
- (void)setEditDate:(id)arg1;
- (void)setEdited:(int)arg1;
- (void)setEmbeddedObject:(bool)arg1;
- (void)setEmbossed:(int)arg1;
- (void)setEmphasisMark:(int)arg1;
- (void)setExtendedFont:(id)arg1;
- (void)setFarEastFont:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setFont:(id)arg1 forFontType:(int)arg2;
- (void)setFontHint:(int)arg1;
- (void)setFontSize:(unsigned short)arg1;
- (void)setFontSizeForBiText:(unsigned short)arg1;
- (void)setFormattingChanged:(int)arg1;
- (void)setHidden:(int)arg1;
- (void)setHighlight:(bool)arg1;
- (void)setHighlightColor:(int)arg1;
- (void)setHorizontalInVertical:(bool)arg1;
- (void)setImprint:(int)arg1;
- (void)setIndexToAuthorIDOfDeletion:(unsigned short)arg1;
- (void)setIndexToAuthorIDOfEdit:(unsigned short)arg1;
- (void)setIndexToAuthorIDOfFormattingChange:(unsigned short)arg1;
- (void)setItalic:(int)arg1;
- (void)setItalicForBiText:(int)arg1;
- (void)setKerning:(unsigned short)arg1;
- (void)setLanguageForBiText:(int)arg1;
- (void)setLanguageForDefaultText:(int)arg1;
- (void)setLanguageForFarEast:(int)arg1;
- (void)setLigature:(int)arg1;
- (void)setListCharacterPictureBullet:(bool)arg1;
- (void)setLowerCase:(bool)arg1;
- (void)setObjectIDForOle2:(int)arg1;
- (void)setOffsetToPictureData:(int)arg1;
- (void)setOle2:(bool)arg1;
- (void)setOutline2010Width:(float)arg1;
- (void)setOutline:(int)arg1;
- (void)setOutlineColor:(id)arg1;
- (void)setPosition:(short)arg1;
- (void)setReflection:(id)arg1;
- (void)setResolveMode:(int)arg1;
- (void)setRightToLeft:(int)arg1;
- (void)setShadow2010:(id)arg1;
- (void)setShadow2010Opacity:(float)arg1;
- (void)setShadow:(int)arg1;
- (void)setSmallCaps:(int)arg1;
- (void)setSpacing:(short)arg1;
- (void)setSpecialCharacter:(bool)arg1;
- (void)setStrikeThrough:(int)arg1;
- (void)setSymbolCharacter:(unsigned short)arg1;
- (void)setSymbolFont:(id)arg1;
- (void)setTextScale:(unsigned short)arg1;
- (void)setTwoLinesInOne:(bool)arg1;
- (void)setUnderline:(int)arg1;
- (void)setUnderlineColor:(id)arg1;
- (void)setUseCsFont:(int)arg1;
- (void)setVerticalAlign:(int)arg1;
- (id)shading;
- (int)shadow;
- (id)shadow2010;
- (float)shadow2010Opacity;
- (int)smallCaps;
- (short)spacing;
- (int)strikeThrough;
- (unsigned short)symbolCharacter;
- (id)symbolFont;
- (unsigned short)textScale;
- (bool)twoLinesInOne;
- (int)underline;
- (id)underlineColor;
- (int)useCsFont;
- (int)verticalAlign;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

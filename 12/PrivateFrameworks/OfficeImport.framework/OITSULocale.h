<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>OITSULocale.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/OfficeImport.framework/OITSULocale.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport (257.9)
 */

@interface OITSULocale : NSObject {
    NSString * _activeCurrencyCode;
    NSString * _activeNoMinusSignCurrencyCode;
    NSCache * _cachedLocalizedStrings;
    NSString * _currencyCode;
    NSString * _currencyDecimalSeparator;
    struct __CFNumberFormatter { } * _currencyFormatter;
    NSString * _currencyGroupingSeparator;
    int  _dateComponentOrdering;
    OITSUDateParserLibrary * _dateParserLibrary;
    NSString * _decimalSeparator;
    NSString * _documentLanguageIdentifier;
    NSString * _falseString;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _formattersMutex;
    struct __CFLocale { } * _gregorianCalendarLocale;
    NSString * _groupingSeparator;
    unsigned long long  _groupingSize;
    bool  _isAutoUpdating;
    NSString * _languageCode;
    NSString * _listSeparator;
    NSLocale * _locale;
    NSString * _localeIdentifier;
    NSMutableDictionary * _localeSpecificStorage;
    NSLock * _localeSpecificStorageLock;
    NSArray * _monthSymbols;
    struct __CFNumberFormatter { } * _noMinusSignCurrencyFormatter;
    struct __CFNumberFormatter { } * _noMinusSignPlainFormatter;
    NSLock * _numberFormatterStringFromDoubleWithFormatLock;
    NSMutableArray * _numberFormatters;
    NSString * _percentSymbol;
    struct __CFNumberFormatter { } * _plainFormatter;
    NSMutableArray * _scientificNumberFormatters;
    NSArray * _shortMonthSymbols;
    NSArray * _shortStandaloneMonthSymbols;
    NSArray * _shortStandaloneWeekdaySymbols;
    NSArray * _shortWeekdaySymbols;
    NSArray * _standaloneMonthSymbols;
    NSArray * _standaloneWeekdaySymbols;
    NSString * _trueString;
    NSArray * _weekdaySymbols;
}

@property (readonly) NSString *arrayRowSeparator;
@property (readonly) struct __CFLocale { }*cfGregorianCalendarLocale;
@property (readonly) struct __CFLocale { }*cfLocale;
@property (readonly) NSString *currencyCode;
@property (readonly) NSString *currencyDecimalSeparator;
@property (readonly) NSString *currencyGroupingSeparator;
@property (readonly) int dateComponentOrdering;
@property (readonly) OITSUDateParserLibrary *dateParserLibrary;
@property (readonly) NSString *decimalSeparator;
@property (readonly) NSString *documentLanguageIdentifier;
@property (readonly) NSString *falseString;
@property (readonly) NSLocale *gregorianCalendarLocale;
@property (readonly) NSString *groupingSeparator;
@property (readonly) unsigned long long groupingSize;
@property (readonly) bool isAutoUpdating;
@property (readonly) NSString *languageCode;
@property (readonly) NSString *listSeparator;
@property (readonly) NSLocale *locale;
@property (readonly) NSString *localeIdentifier;
@property (readonly) NSArray *monthSymbols;
@property (readonly) NSString *percentSymbol;
@property (readonly) NSArray *shortMonthSymbols;
@property (readonly) NSArray *shortStandaloneMonthSymbols;
@property (readonly) NSArray *shortStandaloneWeekdaySymbols;
@property (readonly) NSArray *shortWeekdaySymbols;
@property (readonly) NSArray *standaloneMonthSymbols;
@property (readonly) NSArray *standaloneWeekdaySymbols;
@property (readonly) NSTimeZone *timeZone;
@property (readonly) NSString *trueString;
@property (readonly) NSArray *weekdaySymbols;

+ (id)applicationLocale;
+ (unsigned long long)autoupdatingCurrentLocaleChangeCount;
+ (id)cacheKeyForCFLocale:(struct __CFLocale { }*)arg1;
+ (id)canonicalizeLocaleIdentifier:(id)arg1;
+ (id)canonicalizeLocaleIdentifierWithLanguageAndRegionOnly:(id)arg1;
+ (id)canonicalizeLocaleIdentifierWithLanguageAndScriptOnly:(id)arg1;
+ (id)canonicalizeLocaleIdentifierWithLanguageOnly:(id)arg1;
+ (id)canonicalizeLocaleIdentifierWithLanguageScriptAndRegionOnly:(id)arg1;
+ (id)currentLocale;
+ (id)deducedScriptForLocale:(id)arg1;
+ (void)initialize;
+ (id)localeForLocaleIdentifier:(id)arg1 documentLanguageIdentifier:(id)arg2;
+ (bool)localeIsAutoUpdating:(struct __CFLocale { }*)arg1;
+ (id)preferredLanguages;
+ (void)saveLocaleForReuse:(id)arg1;
+ (void)setLocalizedStringBundle:(struct __CFBundle { }*)arg1;

- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 inBundle:(struct __CFBundle { }*)arg4;
- (id)URLForResource:(id)arg1 withExtension:(id)arg2 subdirectory:(id)arg3 inBundleWithURL:(id)arg4;
- (void)_initializeNumberFormatterStringFromDoubleCache;
- (id)arrayRowSeparator;
- (struct __CFLocale { }*)cfGregorianCalendarLocale;
- (struct __CFLocale { }*)cfLocale;
- (struct __CFNumberFormatter { }*)checkoutNumberFormatter;
- (struct __CFNumberFormatter { }*)checkoutScientificNumberFormatter;
- (id)copyWithDocumentLanguageIdentifier:(id)arg1;
- (id)currencyCode;
- (id)currencyDecimalSeparator;
- (id)currencyGroupingSeparator;
- (int)dateComponentOrdering;
- (id)dateParserLibrary;
- (void)dealloc;
- (id)decimalSeparator;
- (id)description;
- (id)displayLanguageName;
- (id)documentLanguageIdentifier;
- (id)falseString;
- (id)gregorianCalendarLocale;
- (id)groupingSeparator;
- (unsigned long long)groupingSize;
- (unsigned long long)hash;
- (id)initWithLocale:(id)arg1 documentLanguageIdentifier:(id)arg2;
- (id)initWithLocale:(id)arg1 documentLanguageIdentifier:(id)arg2 useAutoupdating:(bool)arg3;
- (bool)isAutoUpdating;
- (bool)isEqual:(id)arg1;
- (id)languageCode;
- (id)listSeparator;
- (id)locale;
- (id)localeIdentifier;
- (id)localeIdentifierWithLanguageAndRegionOnly;
- (id)localeIdentifierWithLanguageScriptAndRegionOnly;
- (id)localeSpecificStorageForKey:(id)arg1;
- (long long)localizedCaseInsensitiveCompare:(id)arg1 toString:(id)arg2;
- (bool)localizedCaseInsensitiveIsEqual:(id)arg1 toString:(id)arg2;
- (long long)localizedCompare:(id)arg1 toString:(id)arg2;
- (id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3;
- (id)monthSymbols;
- (id)numberFormatterStringFromDouble:(double)arg1 withFormat:(id)arg2 useDecimalPlaces:(bool)arg3 minDecimalPlaces:(unsigned short)arg4 decimalPlaces:(unsigned short)arg5 showThousandsSeparator:(bool)arg6 currencyCode:(id)arg7 suppressMinusSign:(bool)arg8;
- (id)percentSymbol;
- (void)returnNumberFormatter:(struct __CFNumberFormatter { }*)arg1;
- (void)returnScientificNumberFormatter:(struct __CFNumberFormatter { }*)arg1;
- (void)setLocaleSpecificStorage:(id)arg1 forKey:(id)arg2;
- (id)shortMonthSymbols;
- (id)shortStandaloneMonthSymbols;
- (id)shortStandaloneWeekdaySymbols;
- (id)shortWeekdaySymbols;
- (id)simplifiedDisplayName;
- (id)standaloneMonthSymbols;
- (id)standaloneWeekdaySymbols;
- (id)timeZone;
- (id)trueString;
- (id)weekdaySymbols;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MNTrafficIncidentAlert.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Navigation.framework/MNTrafficIncidentAlert.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation (1)
 */

@interface MNTrafficIncidentAlert : NSObject {
    NSDate * _alertDate;
    NSData * _alertID;
    unsigned long long  _alertType;
    struct { 
        unsigned int index; 
        float offset; 
    }  _alternateEndValidCoordinateRange;
    GEOComposedRoute * _alternateRoute;
    double  _distanceToIncident;
    struct { 
        unsigned int index; 
        float offset; 
    }  _endValidCoordinateRange;
    NSDate * _eta;
    NSData * _etaResponseID;
    struct { 
        unsigned int index; 
        float offset; 
    }  _incidentCoordinate;
    bool  _isAutomaticReroute;
    GEOETARoute * _oldETARoute;
    GEOComposedRoute * _originalRoute;
    struct { 
        unsigned int index; 
        float offset; 
    }  _startValidCoordinateRange;
}

@property (nonatomic, readonly) NSDate *alertDate;
@property (nonatomic, readonly) NSArray *alertDescriptions;
@property (nonatomic, readonly) double alertDisplayDuration;
@property (nonatomic, readonly) NSData *alertID;
@property (nonatomic, readonly) NSArray *alertTitles;
@property (nonatomic, readonly) unsigned long long alertType;
@property (nonatomic, readonly) struct { unsigned int x1; float x2; } alternateEndValidCoordinateRange;
@property (nonatomic, readonly) GEOComposedRoute *alternateRoute;
@property (nonatomic) double distanceToIncident;
@property (nonatomic, readonly) struct { unsigned int x1; float x2; } endValidCoordinateRange;
@property (nonatomic, retain) NSDate *eta;
@property (nonatomic, readonly) NSData *etaResponseID;
@property (nonatomic, readonly) struct { unsigned int x1; float x2; } incidentCoordinate;
@property (nonatomic, readonly) bool isAutomaticReroute;
@property (nonatomic, readonly) double newEstimatedTime;
@property (nonatomic, readonly) GEOETARoute *oldETARoute;
@property (nonatomic, readonly) GEORouteIncident *oldETARouteIncident;
@property (nonatomic, readonly) double oldEstimatedTime;
@property (nonatomic, readonly) GEOComposedRoute *originalRoute;
@property (nonatomic, readonly) unsigned long long secondsSaved;
@property (nonatomic, readonly) NSArray *spokenTexts;
@property (nonatomic, readonly) struct { unsigned int x1; float x2; } startValidCoordinateRange;

+ (id)trafficIncidentAlertForDetails:(id)arg1;

- (void).cxx_destruct;
- (struct { double x1; double x2; })_divergenceCoordinate;
- (id)_dynamicStringValues;
- (void)_findRouteDivergence;
- (struct { unsigned int x1; float x2; })_routeCoordinateAtDuration:(double)arg1 beforeRouteCoordinate:(struct { unsigned int x1; float x2; })arg2;
- (id)alertDate;
- (id)alertDescriptions;
- (double)alertDisplayDuration;
- (id)alertID;
- (id)alertTitles;
- (unsigned long long)alertType;
- (struct { unsigned int x1; float x2; })alternateEndValidCoordinateRange;
- (id)alternateRoute;
- (double)distanceToIncident;
- (struct { unsigned int x1; float x2; })endValidCoordinateRange;
- (id)eta;
- (id)etaResponseID;
- (struct { unsigned int x1; float x2; })incidentCoordinate;
- (id)initWithRoute:(id)arg1 etaRoute:(id)arg2 etaResponse:(id)arg3;
- (id)initWithTrafficIncidentAlertDetails:(id)arg1;
- (bool)isAutomaticReroute;
- (bool)isSimilarTo:(id)arg1;
- (double)newEstimatedTime;
- (id)oldETARoute;
- (id)oldETARouteIncident;
- (double)oldEstimatedTime;
- (id)originalRoute;
- (unsigned long long)secondsSaved;
- (void)setDistanceToIncident:(double)arg1;
- (void)setEta:(id)arg1;
- (id)spokenTexts;
- (struct { unsigned int x1; float x2; })startValidCoordinateRange;
- (void)updateAlertIDWithAlert:(id)arg1;
- (void)updateLocation:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MNGuidanceEventManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Navigation.framework/MNGuidanceEventManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation (1)
 */

@interface MNGuidanceEventManager : NSObject <MNGuidanceManager, MNTimeManagerObserver> {
    <MNAnnoucementStrategy> * _announcementStrategy;
    NSMutableDictionary * _announcementsSpoken;
    bool  _canSpeakReturnToRouteAnnouncement;
    GEOComposedGuidanceEvent * _currentLaneGuidanceEvent;
    <MNGuidanceManagerDelegate> * _delegate;
    GEOComposedGuidanceEvent * _endSignGuidanceEvent;
    GEOComposedGuidanceEvent * _endSpokenGuidanceEvent;
    NSMutableArray * _events;
    NSMutableDictionary * _feedback;
    GEOComposedGuidanceEvent * _getOnRouteSpokenGuidanceEvent;
    NSMutableDictionary * _hapticsTriggered;
    bool  _hasBeenOnRouteOnce;
    bool  _hasStickyEvents;
    MNAnnouncementPlanEvent * _lastAnnouncementEvent;
    unsigned long long  _lastStepIndex;
    MNLocation * _location;
    MNNavigationSession * _navigationSession;
    GEOComposedGuidanceEvent * _nextEvent;
    GEOComposedGuidanceEvent * _previousLaneGuidanceEvent;
    NSArray * _previousSignEvents;
    GEOComposedGuidanceEvent * _returnToRouteSignGuidanceEvent;
    GEOComposedGuidanceEvent * _returnToRouteSpokenGuidanceEvent;
    MNGuidanceSignInfo * _signInfo;
    double  _speed;
    NSMutableArray * _startSignGuidanceEvents;
    GEOComposedGuidanceEvent * _startSpokenGuidanceEvent;
    double  _timeLastAnnouncementEnded;
    double  _timeLastAnnouncementStarted;
    NSMutableArray * _validEvents;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MNGuidanceManagerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *events;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MNLocation *location;
@property (nonatomic) double speed;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (double)_adjustedVehicleSpeed;
- (double)_calculateDurationToSpeakEvent:(id)arg1 announcementIndex:(unsigned long long)arg2 distance:(double)arg3;
- (void)_considerAnnouncements;
- (void)_considerHaptics;
- (void)_considerLaneGuidance;
- (void)_considerSignGuidance;
- (void)_considerStickiness;
- (void)_filterValidEvents;
- (bool)_hasSpokenEvent:(id)arg1;
- (void)_initSpecialGuidanceEvents;
- (bool)_isEventValid:(id)arg1 start:(double)arg2 end:(double)arg3;
- (bool)_isValidEvent:(id)arg1;
- (void)_markEventSpoken:(id)arg1;
- (void)_notifyAnalyticsForNewEvents:(id)arg1 previousEvents:(id)arg2;
- (void)_notifySpeechEvent:(id)arg1 variant:(unsigned long long)arg2;
- (id)_selectAnnouncementForEvent:(id)arg1 withTimeRemaining:(double)arg2 withMinIndex:(unsigned long long)arg3 selectedIndex:(out unsigned long long*)arg4;
- (id)_serverStringDictionaryForEvent:(id)arg1 spoken:(bool)arg2;
- (bool)_shouldUseLocation:(id)arg1;
- (id)_spokenEventsRemainingInStep;
- (void)_stepDidChange;
- (double)_timeRemainingForEvent:(id)arg1;
- (double)_timeUntilEventTrigger:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (double)durationOfEvent:(id)arg1 announcementIndex:(unsigned long long)arg2 distance:(double)arg3;
- (id)events;
- (id)initWithNavigationSession:(id)arg1;
- (id)location;
- (bool)repeatLastGuidanceAnnouncement:(id)arg1;
- (void)reset;
- (void)setDelegate:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setSpeed:(double)arg1;
- (double)speed;
- (void)stop;
- (void)timeManagerDidChangeProvider:(id)arg1;
- (double)timeSinceLastAnnouncement;
- (double)timeUntilNextAnnouncement;
- (void)updateDestination:(id)arg1;
- (void)updateForReroute:(id)arg1;
- (void)updateForReturnToRoute;
- (void)updateGuidanceForLocation:(id)arg1 navigatorState:(int)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

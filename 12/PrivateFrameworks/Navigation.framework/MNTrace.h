<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MNTrace.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Navigation.framework/MNTrace.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation (1)
 */

@interface MNTrace : NSObject {
    NSArray * _annotatedUserBehavior;
    NSArray * _annotatedUserEnvironments;
    NSArray * _bookmarkImages;
    NSArray * _bookmarks;
    NSArray * _commuteDestinations;
    NSArray * _commuteDirectionsRequests;
    bool  _copyToCrashReporter;
    struct sqlite3 { } * _db;
    NSArray * _directions;
    NSData * _endWaypointData;
    NSArray * _etaUpdates;
    NSArray * _headingData;
    double  _initialCourse;
    bool  _isRouteGenius;
    bool  _isSimulation;
    NSArray * _locations;
    NSArray * _motionData;
    unsigned long long  _originalVersion;
    NSArray * _routeSelections;
    NSArray * _significantEvents;
    NSData * _startWaypointData;
    NSString * _tracePath;
    bool  _usesCLMapCorrection;
    NSArray * _vehicleHeadingData;
    NSArray * _vehicleSpeedData;
    unsigned long long  _version;
    NSObject<OS_dispatch_group> * _writeGroup;
    NSObject<OS_dispatch_queue> * _writeQueue;
}

@property (nonatomic, retain) NSArray *annotatedUserBehavior;
@property (nonatomic, retain) NSArray *annotatedUserEnvironments;
@property (nonatomic, retain) NSArray *bookmarkImages;
@property (nonatomic, retain) NSArray *bookmarks;
@property (nonatomic, retain) NSArray *commuteDestinations;
@property (nonatomic, retain) NSArray *commuteDirectionsRequests;
@property (nonatomic) bool copyToCrashReporter;
@property (nonatomic, readonly) struct sqlite3 { }*db;
@property (nonatomic, retain) NSArray *directions;
@property (nonatomic, retain) NSData *endWaypointData;
@property (nonatomic, retain) NSArray *etaUpdates;
@property (nonatomic, retain) NSArray *headingData;
@property (nonatomic) double initialCourse;
@property (nonatomic) bool isRouteGenius;
@property (nonatomic) bool isSimulation;
@property (nonatomic, retain) NSArray *locations;
@property (nonatomic, retain) NSArray *motionData;
@property (nonatomic) unsigned long long originalVersion;
@property (nonatomic, retain) NSArray *routeSelections;
@property (nonatomic, retain) NSArray *significantEvents;
@property (nonatomic, retain) NSData *startWaypointData;
@property (nonatomic, readonly) NSString *tracePath;
@property (nonatomic) bool usesCLMapCorrection;
@property (nonatomic, retain) NSArray *vehicleHeadingData;
@property (nonatomic, retain) NSArray *vehicleSpeedData;
@property (nonatomic) unsigned long long version;
@property (nonatomic, readonly) NSObject<OS_dispatch_group> *writeGroup;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *writeQueue;

+ (id)routeSetsFromTraceAtPath:(id)arg1;

- (void).cxx_destruct;
- (id)_handleOpenErrorWithPath:(id)arg1;
- (id)_routeSetFromDirectionsRow:(id)arg1;
- (id)annotatedUserBehavior;
- (id)annotatedUserEnvironments;
- (id)bookmarkImages;
- (id)bookmarks;
- (bool)closeTrace;
- (id)commuteDestinations;
- (id)commuteDirectionsRequests;
- (bool)copyToCrashReporter;
- (void)copyTraceToCrashReporter;
- (bool)createTempTraceForRecording;
- (struct sqlite3 { }*)db;
- (void)dealloc;
- (id)directions;
- (id)endWaypointData;
- (id)etaUpdates;
- (id)headingData;
- (id)init;
- (double)initialCourse;
- (bool)isRouteGenius;
- (bool)isSimulation;
- (id)locations;
- (id)motionData;
- (bool)openTrace:(id)arg1 outError:(id*)arg2;
- (unsigned long long)originalVersion;
- (id)routeSelections;
- (id)routeSetsFromResponse;
- (id)serializableBookmarks;
- (void)setAnnotatedUserBehavior:(id)arg1;
- (void)setAnnotatedUserEnvironments:(id)arg1;
- (void)setBookmarkImages:(id)arg1;
- (void)setBookmarks:(id)arg1;
- (void)setCommuteDestinations:(id)arg1;
- (void)setCommuteDirectionsRequests:(id)arg1;
- (void)setCopyToCrashReporter:(bool)arg1;
- (void)setDirections:(id)arg1;
- (void)setEndWaypointData:(id)arg1;
- (void)setEtaUpdates:(id)arg1;
- (void)setHeadingData:(id)arg1;
- (void)setInitialCourse:(double)arg1;
- (void)setIsRouteGenius:(bool)arg1;
- (void)setIsSimulation:(bool)arg1;
- (void)setLocations:(id)arg1;
- (void)setMotionData:(id)arg1;
- (void)setOriginalVersion:(unsigned long long)arg1;
- (void)setRouteSelections:(id)arg1;
- (void)setSignificantEvents:(id)arg1;
- (void)setStartWaypointData:(id)arg1;
- (void)setUsesCLMapCorrection:(bool)arg1;
- (void)setVehicleHeadingData:(id)arg1;
- (void)setVehicleSpeedData:(id)arg1;
- (void)setVersion:(unsigned long long)arg1;
- (id)significantEvents;
- (id)startWaypointData;
- (bool)startWritingTraceToFile:(id)arg1;
- (id)tracePath;
- (bool)usesCLMapCorrection;
- (id)vehicleHeadingData;
- (id)vehicleSpeedData;
- (unsigned long long)version;
- (id)writeGroup;
- (id)writeQueue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

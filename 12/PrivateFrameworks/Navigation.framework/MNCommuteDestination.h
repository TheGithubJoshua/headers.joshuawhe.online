<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MNCommuteDestination.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Navigation.framework/MNCommuteDestination.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation (1)
 */

@interface MNCommuteDestination : NSObject <NSCopying, NSSecureCoding> {
    GEODirectionsRequest * _directionsRequest;
    GEOETATrafficUpdateResponse * _etaResponse;
    GEOETARoute * _etaRoute;
    bool  _invalid;
    MNLocation * _lastLocation;
    MNLocation * _lastMatchedLocation;
    GEOComposedRoute * _nonRecommendedRoute;
    MNObserverHashTable * _observers;
    double  _remainingDistance;
    double  _remainingTime;
    bool  _rerouting;
    GEOComposedRoute * _route;
    GEORouteSet * _routeSet;
    long long  _score;
    NSDictionary * _scores;
    MNCommuteDestinationSuggestion * _suggestion;
}

@property (readonly) bool canCalculateETA;
@property (readonly) bool canGetETARoute;
@property (nonatomic, retain) GEODirectionsRequest *directionsRequest;
@property (nonatomic, retain) GEOETATrafficUpdateResponse *etaResponse;
@property (nonatomic, retain) GEOETARoute *etaRoute;
@property (nonatomic, readonly) double geodesicDistance;
@property (nonatomic) bool invalid;
@property (nonatomic, retain) MNLocation *lastLocation;
@property (nonatomic, retain) MNLocation *lastMatchedLocation;
@property (nonatomic, readonly, copy) NSString *name;
@property (nonatomic, retain) GEOComposedRoute *nonRecommendedRoute;
@property (retain) MNObserverHashTable *observers;
@property (nonatomic) double remainingDistance;
@property (nonatomic) double remainingTime;
@property (nonatomic) bool rerouting;
@property (nonatomic, retain) GEOComposedRoute *route;
@property (nonatomic, retain) GEORouteSet *routeSet;
@property (nonatomic) long long score;
@property (nonatomic, copy) NSDictionary *scores;
@property (nonatomic, readonly) NSString *shortDescription;
@property (nonatomic, retain) MNCommuteDestinationSuggestion *suggestion;
@property (nonatomic, readonly, copy) NSString *uniqueIdentifier;
@property (nonatomic, readonly) GEOComposedWaypoint *waypoint;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)addObserver:(id)arg1;
- (bool)canCalculateETA;
- (bool)canGetETARoute;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)directionsRequest;
- (void)encodeWithCoder:(id)arg1;
- (id)etaResponse;
- (id)etaRoute;
- (double)geodesicDistance;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)invalid;
- (bool)isEqual:(id)arg1;
- (id)lastLocation;
- (id)lastMatchedLocation;
- (id)name;
- (id)nonRecommendedRoute;
- (id)observers;
- (double)remainingDistance;
- (double)remainingTime;
- (void)removeObserver:(id)arg1;
- (bool)rerouting;
- (id)route;
- (id)routeSet;
- (long long)score;
- (id)scores;
- (void)setDirectionsRequest:(id)arg1;
- (void)setEtaResponse:(id)arg1;
- (void)setEtaRoute:(id)arg1;
- (void)setInvalid:(bool)arg1;
- (void)setLastLocation:(id)arg1;
- (void)setLastMatchedLocation:(id)arg1;
- (void)setNonRecommendedRoute:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setRemainingDistance:(double)arg1;
- (void)setRemainingTime:(double)arg1;
- (void)setRerouting:(bool)arg1;
- (void)setRoute:(id)arg1;
- (void)setRouteSet:(id)arg1;
- (void)setScore:(long long)arg1;
- (void)setScores:(id)arg1;
- (void)setSuggestion:(id)arg1;
- (id)shortDescription;
- (id)suggestion;
- (id)uniqueIdentifier;
- (void)updateFrom:(id)arg1;
- (id)waypoint;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MNNavigationService.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Navigation.framework/MNNavigationService.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation (1)
 */

@interface MNNavigationService : NSObject <MNNavigationServiceClientInterface, MNNavigationServiceRemoteProxyDelegate> {
    NSArray * _audioSettings;
    MNSettings * _cachedSettings;
    MNAudioOutputSetting * _currentAudioOutputSetting;
    MNAudioOutputSetting * _currentSettingForVoicePrompt;
    MNNavigationDetails * _details;
    MNObserverHashTable * _navigationObservers;
    <MNNavigationServiceProxy> * _proxy;
    MNNavigationServiceRemoteProxy * _remoteProxy;
    unsigned long long  _routeSelection;
}

@property (nonatomic, readonly) NSArray *alternateRoutes;
@property (nonatomic, readonly) NSArray *audioSettings;
@property (nonatomic, readonly) MNAudioOutputSetting *currentAudioOutputSetting;
@property (nonatomic, readonly) GEODirectionsRequest *currentRequest;
@property (nonatomic, readonly) GEODirectionsResponse *currentResponse;
@property (nonatomic, readonly) MNAudioOutputSetting *currentSettingForVoicePrompt;
@property (nonatomic, readonly) NSString *currentVoiceLanguage;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) int desiredNavigationType;
@property (nonatomic, readonly) int desiredTransportType;
@property (nonatomic, readonly) GEOComposedWaypoint *destination;
@property (nonatomic, readonly) NSString *destinationName;
@property (nonatomic, readonly) double distanceUntilManeuver;
@property (nonatomic, readonly) double distanceUntilSign;
@property (nonatomic) bool guidancePromptsEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic) int headingOrientation;
@property (nonatomic, readonly) bool isDetour;
@property (nonatomic, readonly) bool isInVehicle;
@property (nonatomic, readonly) bool isPredictingDestination;
@property (nonatomic, readonly) bool isTrackingCurrentLocation;
@property (nonatomic, readonly) MNLocation *lastLocation;
@property (nonatomic, readonly) int navigationState;
@property (nonatomic, readonly) int navigationTransportType;
@property (nonatomic, readonly) int navigationType;
@property (nonatomic, readonly) GEOComposedWaypoint *origin;
@property (nonatomic, readonly) GEOComposedWaypoint *originalDestination;
@property (nonatomic, readonly) NSString *originalDestinationName;
@property (nonatomic, readonly) GEOComposedWaypoint *originalOrigin;
@property (nonatomic, readonly) NSArray *possibleCommuteDestinations;
@property (nonatomic, readonly) MNCommuteDestination *predictedCommuteDestination;
@property (nonatomic, readonly) unsigned long long reconnectionRouteIndex;
@property (nonatomic, readonly) double remainingTime;
@property (nonatomic, readonly) GEOComposedRoute *route;
@property (nonatomic, readonly) unsigned long long routeIndex;
@property (nonatomic, readonly) unsigned long long routeSelection;
@property (nonatomic, readonly) bool speechMuted;
@property (nonatomic, readonly) unsigned long long state;
@property (nonatomic, readonly) unsigned long long stepIndex;
@property (readonly) Class superclass;
@property (nonatomic, readonly) double timeUntilManeuver;
@property (nonatomic, readonly) double timeUntilSign;
@property (nonatomic, readonly) NSArray *traceBookmarks;
@property (nonatomic, readonly) double traceDuration;
@property (nonatomic, readonly) NSString *traceFileName;
@property (nonatomic) bool traceIsPlaying;
@property (nonatomic, readonly) NSString *tracePath;
@property (nonatomic) double tracePosition;

+ (unsigned long long)_hashForProtocol:(id)arg1;
+ (unsigned long long)clientInterfaceHash;
+ (unsigned long long)daemonInterfaceHash;
+ (id)sharedService;

- (void).cxx_destruct;
- (void)_resetDetails;
- (void)addObserver:(id)arg1;
- (unsigned long long)alternateRouteIndexForRoute:(id)arg1;
- (id)alternateRoutes;
- (id)audioSettings;
- (void)changeSettings:(id)arg1;
- (void)closeForClient:(id)arg1;
- (id)currentAudioOutputSetting;
- (id)currentRequest;
- (id)currentResponse;
- (id)currentSettingForVoicePrompt;
- (id)currentVoiceLanguage;
- (int)desiredNavigationType;
- (int)desiredTransportType;
- (id)destination;
- (id)destinationName;
- (id)displayETAForRoute:(id)arg1;
- (unsigned long long)displayRemainingMinutesForRoute:(id)arg1;
- (double)distanceUntilManeuver;
- (double)distanceUntilSign;
- (id)etaRouteForRoute:(id)arg1;
- (bool)guidancePromptsEnabled;
- (int)headingOrientation;
- (id)initPrivate;
- (bool)isDetour;
- (bool)isInVehicle;
- (bool)isOpenForClient:(id)arg1;
- (bool)isPredictingDestination;
- (bool)isTrackingCurrentLocation;
- (id)lastLocation;
- (void)navigationServiceProxy:(id)arg1 didActivateAudioSession:(bool)arg2;
- (void)navigationServiceProxy:(id)arg1 didChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;
- (void)navigationServiceProxy:(id)arg1 didChangeNavigationState:(int)arg2;
- (void)navigationServiceProxy:(id)arg1 didEnableGuidancePrompts:(bool)arg2;
- (void)navigationServiceProxy:(id)arg1 didFailWithError:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didInvalidateTrafficIncidentAlert:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didReceiveTrafficIncidentAlert:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didRerouteWithDetails:(id)arg2 withLocationDetails:(id)arg3 withAlternateRoutes:(id)arg4;
- (void)navigationServiceProxy:(id)arg1 didSignalAlightForStepAtIndex:(unsigned long long)arg2;
- (void)navigationServiceProxy:(id)arg1 didStartSpeakingPrompt:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didStartUsingVoiceLanguage:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didSwitchToNewTransportType:(int)arg2 newRoute:(id)arg3;
- (void)navigationServiceProxy:(id)arg1 didUpdateActiveRouteDetails:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateAlternateRoutes:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateAudioOutputCurrentSetting:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateAudioOutputCurrentSettingForVoicePrompt:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateAudioOutputRouteSelection:(unsigned long long)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateAudioOutputSettings:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateDisplayETA:(id)arg2 displayRemainingMinutes:(unsigned long long)arg3 forRoute:(id)arg4;
- (void)navigationServiceProxy:(id)arg1 didUpdateDistanceUntilManeuver:(double)arg2 timeUntilManeuver:(double)arg3 forStepIndex:(unsigned long long)arg4;
- (void)navigationServiceProxy:(id)arg1 didUpdateDistanceUntilSign:(double)arg2 timeUntilSign:(double)arg3 forStepIndex:(unsigned long long)arg4;
- (void)navigationServiceProxy:(id)arg1 didUpdateETAResponseForRoute:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateFeedback:(id)arg2 forAlightingStepAtIndex:(unsigned long long)arg3;
- (void)navigationServiceProxy:(id)arg1 didUpdateHeading:(double)arg2 accuracy:(double)arg3;
- (void)navigationServiceProxy:(id)arg1 didUpdateIsInVehicle:(bool)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateMatchedLocation:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateNavigationDetails:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdatePossibleCommuteDestinations:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateProceedToRouteDistance:(double)arg2 displayString:(id)arg3 closestStepIndex:(unsigned long long)arg4;
- (void)navigationServiceProxy:(id)arg1 didUpdateRemainingTime:(double)arg2 remainingDistance:(double)arg3;
- (void)navigationServiceProxy:(id)arg1 didUpdateStepIndex:(unsigned long long)arg2 legIndex:(unsigned long long)arg3;
- (void)navigationServiceProxy:(id)arg1 didUpdateTracePlaybackDetails:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 didUpdateTrafficForETARoute:(id)arg2 from:(unsigned int)arg3 to:(unsigned int)arg4 forRoute:(id)arg5;
- (void)navigationServiceProxy:(id)arg1 didUpdateTrafficIncidentAlert:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 displayManeuverAlertForAnnouncementStage:(unsigned long long)arg2;
- (void)navigationServiceProxy:(id)arg1 displayPrimaryStep:(id)arg2 instructions:(id)arg3 shieldType:(int)arg4 shieldText:(id)arg5 drivingSide:(int)arg6 maneuverStepIndex:(unsigned long long)arg7 isSynthetic:(bool)arg8;
- (void)navigationServiceProxy:(id)arg1 displaySecondaryStep:(id)arg2 instructions:(id)arg3 shieldType:(int)arg4 shieldText:(id)arg5 drivingSide:(int)arg6;
- (void)navigationServiceProxy:(id)arg1 failedRerouteWithErrorCode:(long long)arg2;
- (void)navigationServiceProxy:(id)arg1 hideLaneDirectionsForId:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 newGuidanceEventFeedback:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 showLaneDirections:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 updateSignsWithInfo:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 updatedGuidanceEventFeedback:(id)arg2;
- (void)navigationServiceProxy:(id)arg1 usePersistentDisplay:(bool)arg2;
- (void)navigationServiceProxy:(id)arg1 willAnnounce:(unsigned long long)arg2 inSeconds:(double)arg3;
- (void)navigationServiceProxy:(id)arg1 willChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;
- (void)navigationServiceProxyBeginGuidanceUpdate:(id)arg1;
- (void)navigationServiceProxyDidArrive:(id)arg1;
- (void)navigationServiceProxyDidCancelReroute:(id)arg1;
- (void)navigationServiceProxyEndGuidanceUpdate:(id)arg1;
- (void)navigationServiceProxyHideSecondaryStep:(id)arg1;
- (void)navigationServiceProxyPredictingDidArrive:(id)arg1;
- (void)navigationServiceProxyWillPauseNavigation:(id)arg1;
- (void)navigationServiceProxyWillReroute:(id)arg1;
- (void)navigationServiceProxyWillResumeFromPauseNavigation:(id)arg1;
- (int)navigationState;
- (int)navigationTransportType;
- (int)navigationType;
- (void)openForClient:(id)arg1;
- (id)origin;
- (id)originalDestination;
- (id)originalDestinationName;
- (id)originalOrigin;
- (id)possibleCommuteDestinations;
- (id)predictedCommuteDestination;
- (id)predictedDestination;
- (id)predictedDestinationName;
- (id)predictedETARoute;
- (id)predictedRoute;
- (void)prepareNavigationWithRouteDetails:(id)arg1;
- (unsigned long long)reconnectionRouteIndex;
- (void)recordTraceBookmarkAtCurrentPositionWthScreenshotData:(id)arg1;
- (double)remainingTime;
- (void)remoteProxyDidFinishReconnecting:(id)arg1;
- (void)removeObserver:(id)arg1;
- (bool)repeatCurrentGuidance;
- (bool)repeatCurrentTrafficAlert;
- (void)resumeOriginalDestination;
- (id)route;
- (id)routeIncidentsForRoute:(id)arg1;
- (unsigned long long)routeIndex;
- (unsigned long long)routeSelection;
- (void)setCurrentAudioOutputSetting:(id)arg1;
- (void)setDisplayedStepIndex:(unsigned long long)arg1;
- (void)setFullGuidanceMode:(bool)arg1;
- (void)setGuidancePromptsEnabled:(bool)arg1;
- (void)setHFPPreference:(bool)arg1 forSetting:(id)arg2;
- (void)setHeadingOrientation:(int)arg1;
- (void)setIsConnectedToCarplay:(bool)arg1;
- (void)setRideIndex:(unsigned long long)arg1 forLegIndex:(unsigned long long)arg2;
- (void)setTraceIsPlaying:(bool)arg1;
- (void)setTracePlaybackSpeed:(double)arg1;
- (void)setTracePosition:(double)arg1;
- (id)settings;
- (bool)speechMuted;
- (void)startNavigationForRouteDetails:(id)arg1;
- (void)startNavigationWithRoute:(id)arg1 withFullGuidance:(bool)arg2;
- (void)startPredictingDestinations;
- (unsigned long long)state;
- (unsigned long long)stepIndex;
- (void)stopCurrentGuidancePrompt;
- (void)stopNavigation;
- (void)stopPredictingDestinations;
- (void)switchToRoute:(id)arg1;
- (double)timeUntilManeuver;
- (double)timeUntilSign;
- (id)traceBookmarks;
- (double)traceDuration;
- (id)traceFileName;
- (bool)traceIsPlaying;
- (id)tracePath;
- (double)tracePosition;
- (void)updateDestination:(id)arg1;
- (bool)vibrateForPrompt:(unsigned long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

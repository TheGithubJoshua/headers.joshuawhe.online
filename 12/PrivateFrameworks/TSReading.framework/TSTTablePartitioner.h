<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSTTablePartitioner.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TSReading.framework/TSTTablePartitioner.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSTTablePartitioner : NSObject <TSDPartitioner> {
    double  mFirstPartitionWidth;
    TSUPointerKeyDictionary * mHintMatricesByCanvas;
    TSDInfoGeometry * mInfoGeometry;
    bool  mLayoutIsLTR;
    NSMutableDictionary * mPartitioningPassCache;
    struct CGSize { 
        double width; 
        double height; 
    }  mScaleToFit;
    TSTLayout * mScaledLayout;
    TSTTableInfo * mTableInfo;
    bool  mTableIsLTR;
}

@property (nonatomic, copy) TSDInfoGeometry *infoGeometry;
@property (nonatomic, readonly) double inlineTableWidth;
@property (nonatomic, readonly) bool scaleIsValid;
@property (nonatomic) struct CGSize { double x1; double x2; } scaleToFit;
@property (nonatomic, readonly) TSTLayout *scaledLayout;
@property (nonatomic, readonly) TSTTableInfo *tableInfo;

- (void)dealloc;
- (bool)didHint:(id)arg1 syncWithNextHint:(id)arg2 horizontally:(bool)arg3 delta:(int)arg4;
- (id)hintCacheKeyForHint:(id)arg1;
- (id)hintCacheKeyForPartitioningPass:(id)arg1 andHintID:(struct TSUCellCoord { unsigned int x1; unsigned short x2; bool x3; bool x4; })arg2;
- (id)hintForLayout:(id)arg1;
- (id)infoGeometry;
- (id)initWithInfo:(id)arg1;
- (double)inlineTableWidth;
- (id)layoutForHint:(id)arg1 parentLayout:(id)arg2;
- (struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })measureCellRangeForNextPartitionOfSize:(struct CGSize { double x1; double x2; })arg1 previousHint:(id)arg2 horizontally:(bool)arg3;
- (id)nextHintForSize:(struct CGSize { double x1; double x2; })arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(bool)arg4 outFinished:(out bool*)arg5;
- (id)nextLayoutForSize:(struct CGSize { double x1; double x2; })arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(bool)arg4 outFinished:(out bool*)arg5;
- (bool)p_didFinishPartitioningHint:(id)arg1 horizontally:(bool)arg2;
- (void)p_flushCacheAfterPartitioningFinished:(id)arg1 lastHint:(id)arg2 horizontally:(bool)arg3;
- (id)partitioningPassForFirstPartitionSize:(struct CGSize { double x1; double x2; })arg1;
- (id)partitioningPassForHint:(id)arg1 withPreviousHint:(id)arg2;
- (bool)scaleIsValid;
- (struct CGSize { double x1; double x2; })scaleToFit;
- (id)scaledLayout;
- (void)setInfoGeometry:(id)arg1;
- (void)setLayoutPartititionsRightToLeft:(bool)arg1 contentPartitionsRightToLeft:(bool)arg2;
- (void)setScaleToFit:(struct CGSize { double x1; double x2; })arg1;
- (bool)shouldReuseLayout:(id)arg1 forSize:(struct CGSize { double x1; double x2; })arg2 parentLayout:(id)arg3 hint:(id)arg4;
- (id)tableInfo;
- (void)validateScaledLayout;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

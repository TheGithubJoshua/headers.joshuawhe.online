/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSDTextureSet : NSObject <NSCopying> {
    NSMutableArray * _allTextures;
    CALayer * _alternateLayer;
    NSMutableArray * _animatableTextures;
    NSDictionary * _bakedAttributes;
    TSDBitmapRenderingQualityInfo * _bitmapRenderingQualityInfo;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _boundingRect;
    NSMapTable * _boundingRectForStageMap;
    struct CGPoint { 
        double x; 
        double y; 
    }  _center;
    struct CGColorSpace { } * _colorSpace;
    bool  _containsContentBuildTextures;
    NSMapTable * _eventIndexToViewLayerMap;
    NSMutableArray * _finalTextures;
    NSMapTable * _flattenKeyToFlattenedTextureMap;
    bool  _isBackground;
    bool  _isBaked;
    bool  _isFlippedHorizontally;
    bool  _isMagicMove;
    CALayer * _layer;
    long long  _maxStageIndex;
    long long  _objectType;
    NSMapTable * _origBoundingRectForStageMap;
    struct CGPoint { 
        double x; 
        double y; 
    }  _originalPosition;
    TSDRep * _rep;
    bool  _shouldIncludeFinalTexturesInVisibleSet;
    bool  _shouldTransformUsingTextureCenter;
    double  _textureAngle;
    double  _textureAnimationPercent;
    double  _textureOpacity;
    NSMapTable * _textureToStageIndexMap;
    long long  _textureZOrder;
}

@property (nonatomic, readonly) NSArray *allTextures;
@property (nonatomic, retain) CALayer *alternateLayer;
@property (nonatomic) TSDBitmapRenderingQualityInfo *bitmapRenderingQualityInfo;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } boundingRect;
@property (nonatomic, copy) NSMapTable *boundingRectForStageMap;
@property (nonatomic) struct CGPoint { double x1; double x2; } center;
@property (nonatomic) struct CGColorSpace { }*colorSpace;
@property (nonatomic) bool containsContentBuildTextures;
@property (nonatomic, readonly) bool containsFinalTextures;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property (nonatomic) bool isBackground;
@property (nonatomic) bool isBaked;
@property (nonatomic) bool isFlippedHorizontally;
@property (nonatomic, readonly) bool isImageSource;
@property (nonatomic) bool isMagicMove;
@property (nonatomic, readonly) bool isRenderable;
@property (nonatomic, readonly) CALayer *layer;
@property (nonatomic, readonly) long long maxStageIndex;
@property (nonatomic) long long objectType;
@property (nonatomic) struct CGPoint { double x1; double x2; } originalPosition;
@property (nonatomic) TSDRep *rep;
@property (nonatomic) bool shouldIncludeFinalTexturesInVisibleSet;
@property (nonatomic) bool shouldTransformUsingTextureCenter;
@property (nonatomic) double textureAngle;
@property (nonatomic) double textureAnimationPercent;
@property (nonatomic) double textureOpacity;
@property (nonatomic) long long textureZOrder;
@property (nonatomic, readonly) NSArray *visibleTextures;

+ (id)newFlattenedTextureFromTextures:(id)arg1 newRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;

- (void).cxx_destruct;
- (void)addFinalTexture:(id)arg1 forStage:(long long)arg2;
- (void)addPerspectiveLayerToTexture:(id)arg1 withShowSize:(struct CGSize { double x1; double x2; })arg2;
- (void)addRenderable:(id)arg1;
- (void)addRenderable:(id)arg1 forStage:(long long)arg2;
- (void)addRenderable:(id)arg1 shouldAdjustBounds:(bool)arg2;
- (void)adjustAnchorPointRelativeToCenterOfRotationAtEventIndex:(unsigned long long)arg1;
- (id)allTextures;
- (id)alternateLayer;
- (void)applyActionEffect:(id)arg1 viewScale:(double)arg2 isMagicMove:(bool)arg3 shouldBake:(bool)arg4 applyScaleOnly:(bool)arg5 ignoreScale:(bool)arg6 shouldCheckActionKeys:(bool)arg7 eventIndex:(unsigned long long)arg8;
- (id)bitmapRenderingQualityInfo;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRect;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })boundingRectForStage:(long long)arg1 isBuildIn:(bool)arg2 isContentBuild:(bool)arg3;
- (id)boundingRectForStageMap;
- (struct CGPoint { double x1; double x2; })center;
- (struct CGColorSpace { }*)colorSpace;
- (bool)containsContentBuildTextures;
- (bool)containsFinalTextures;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)drawFrameWithMetalContext:(id)arg1;
- (void)evictRenderedResources;
- (id)finalTexturesForStage:(long long)arg1;
- (id)firstVisibleTextureForTextureType:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (bool)hasTexture:(id)arg1 beenFlattenedForKey:(id)arg2;
- (void)hideLayersOfFinalTexturesAtEventIndex:(unsigned long long)arg1;
- (id)init;
- (bool)isBackground;
- (bool)isBackgroundTexture:(id)arg1;
- (bool)isBaked;
- (bool)isFlippedHorizontally;
- (bool)isImageSource;
- (bool)isMagicMove;
- (bool)isRenderable;
- (id)layer;
- (long long)maxStageIndex;
- (long long)objectType;
- (struct CGPoint { double x1; double x2; })originalPosition;
- (void)p_addRenderable:(id)arg1 forStage:(long long)arg2 shouldAdjustBounds:(bool)arg3;
- (void)p_applyPositionFromAttributes:(id)arg1 viewScale:(double)arg2 eventIndex:(unsigned long long)arg3;
- (bool)p_areAttributes:(id)arg1 equalToAttributes:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })p_frameAtEventIndex:(unsigned long long)arg1;
- (void)p_getComponentsOpacity:(double*)arg1 scale:(double*)arg2 angle:(double*)arg3 fromAttributes:(id)arg4 shouldApplyOpacity:(bool*)arg5 shouldApplyAngle:(bool*)arg6 shouldApplyScale:(bool*)arg7;
- (id)p_insertNewFlattenedTextureWithArray:(id)arg1 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 stage:(long long)arg3 insertAfter:(id)arg4 flattenKey:(id)arg5;
- (void)p_resetAttributesWithViewScale:(double)arg1 eventIndex:(unsigned long long)arg2;
- (void)p_setLayerGeometryWithLayer:(id)arg1;
- (void)releaseSingleTextures;
- (void)removeAllPerspectiveLayers;
- (void)removeRenderable:(id)arg1;
- (void)renderIntoContext:(struct CGContext { }*)arg1 eventIndex:(unsigned long long)arg2 requiresTransparentBackground:(bool)arg3;
- (void)renderLayerContentsIfNeeded;
- (id)rep;
- (void)resetAnchorPointAtEventIndex:(unsigned long long)arg1;
- (void)resetLayers;
- (void)resetToOriginalSourceAtEventIndex:(unsigned long long)arg1;
- (void)setAlternateLayer:(id)arg1;
- (void)setBitmapRenderingQualityInfo:(id)arg1;
- (void)setBoundingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setBoundingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forStage:(long long)arg2;
- (void)setBoundingRectForStageMap:(id)arg1;
- (void)setCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setColorSpace:(struct CGColorSpace { }*)arg1;
- (void)setContainsContentBuildTextures:(bool)arg1;
- (void)setIsBackground:(bool)arg1;
- (void)setIsBaked:(bool)arg1;
- (void)setIsFlippedHorizontally:(bool)arg1;
- (void)setIsMagicMove:(bool)arg1;
- (void)setLayerGeometry;
- (void)setLayerGeometryAtEventIndex:(unsigned long long)arg1;
- (void)setObjectType:(long long)arg1;
- (void)setOriginalPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setRep:(id)arg1;
- (void)setShouldIncludeFinalTexturesInVisibleSet:(bool)arg1;
- (void)setShouldTransformUsingTextureCenter:(bool)arg1;
- (void)setTextureAngle:(double)arg1;
- (void)setTextureAnimationPercent:(double)arg1;
- (void)setTextureOpacity:(double)arg1;
- (void)setTextureZOrder:(long long)arg1;
- (bool)shouldIncludeFinalTexturesInVisibleSet;
- (bool)shouldTransformUsingTextureCenter;
- (long long)stageIndexForTexture:(id)arg1;
- (void)teardown;
- (double)textureAngle;
- (double)textureAnimationPercent;
- (double)textureOpacity;
- (long long)textureZOrder;
- (id)viewLayerAtEventIndex:(unsigned long long)arg1;
- (id)visibleTextures;
- (id)visibleTexturesBeforeStage:(long long)arg1 isBuildIn:(bool)arg2 isContentBuild:(bool)arg3 shouldFlatten:(bool)arg4 flattenKey:(id)arg5;
- (id)visibleTexturesForStage:(long long)arg1 isBuildIn:(bool)arg2 isContentBuild:(bool)arg3 shouldFlatten:(bool)arg4 flattenKey:(id)arg5;
- (id)visibleTexturesWithTextureType:(long long)arg1;

@end

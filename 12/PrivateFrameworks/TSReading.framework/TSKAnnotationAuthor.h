<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSKAnnotationAuthor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TSReading.framework/TSKAnnotationAuthor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSKAnnotationAuthor : TSPObject <TSPCopying> {
    bool  _isPublicAuthor;
    NSString * _name;
    NSString * _publicID;
    TSUColor * mColor;
}

@property (nonatomic, readonly) NSString *authorColorName;
@property (nonatomic, readonly) TSUColor *cellViolatorColor;
@property (nonatomic, readonly) TSUColor *changeAdornmentsColor;
@property (nonatomic, readonly) NSString *displayName;
@property (nonatomic, readonly) TSUColor *flagFillColor;
@property (nonatomic, readonly) TSUColor *flagPressedColor;
@property (nonatomic, readonly) TSUColor *flagStrokeColor;
@property (nonatomic, readonly) TSUColor *gradientEndColor;
@property (nonatomic, readonly) TSUColor *gradientStartColor;
@property (nonatomic, readonly) bool hasPublicID;
@property (nonatomic, readonly) TSUColor *indicatorDarkColor;
@property (nonatomic, readonly) TSUColor *indicatorLightColor;
@property (nonatomic) bool isPublicAuthor;
@property (nonatomic, readonly) NSString *menuSwatchColorForAuthor;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, readonly) TSUColor *popoverAuthorLabelColor;
@property (nonatomic, readonly) TSUColor *popoverButtonTintColor;
@property (nonatomic, readonly) TSUColor *popoverColor;
@property (nonatomic, copy) NSString *publicID;
@property (nonatomic, readonly) bool showAuthorComments;
@property (nonatomic, readonly) TSUColor *sidebarChangeBarColor;
@property (nonatomic, readonly) TSUColor *sidebarDecoratorLineColor;
@property (nonatomic, readonly) TSUColor *sidebarHoverColor;
@property (nonatomic, readonly) TSUColor *sidebarSelectedBorderColor;
@property (nonatomic, readonly) TSUColor *sidebarSelectedColor;
@property (nonatomic, readonly) TSUColor *sidebarUsernameColor;
@property (nonatomic, retain) TSUColor *storageColor;
@property (nonatomic, readonly) TSUColor *textHighlightColor;
@property (nonatomic, readonly) TSUColor *textHighlightOverlappingDuplicateColor;
@property (nonatomic, readonly) TSUColor *textMarkupColor;

+ (id)authorColorForIndex:(unsigned long long)arg1 forKey:(id)arg2;
+ (unsigned long long)authorColorIndexClosestToImportedFloatingCommentColor:(id)arg1;
+ (id)authorMenuSwatchColorForIndex:(unsigned long long)arg1;
+ (id)authorNameExplanatoryStringWithUseExplanation:(bool)arg1 withSettingsExplanation:(bool)arg2;
+ (id)authorStorageColorForIndex:(unsigned long long)arg1;
+ (id)authorTextMarkupColorForIndex:(unsigned long long)arg1;
+ (id)defaultAuthorName;
+ (void)enumerateAnnotationsInDocument:(id)arg1 withAuthor:(id)arg2 usingHitBlock:(id /* block */)arg3;
+ (id)indicatorDarkColorByLightColor:(id)arg1;
+ (id)indicatorDarkColorForIndex:(unsigned long long)arg1;
+ (id)indicatorLightColorByAuthorColor:(id)arg1;
+ (id)indicatorLightColorForIndex:(unsigned long long)arg1;
+ (id)localizedAuthorColorNameForIndex:(unsigned long long)arg1;
+ (id)normalizedAuthorNameForAuthorName:(id)arg1;
+ (id)p_authorColorDictionaryForAuthorIndex:(unsigned long long)arg1;
+ (unsigned long long)p_authorColorIndexWithColor:(id)arg1 forIndicator:(bool)arg2;
+ (id)p_publicIDFromSeed:(id)arg1 privateID:(id)arg2;
+ (unsigned long long)presetColorCount;

- (void).cxx_destruct;
- (bool)allowsImplicitComponentOwnership;
- (id)authorColorName;
- (id)cellViolatorColor;
- (id)changeAdornmentsColor;
- (id)componentRootObject;
- (id)copyWithContext:(id)arg1;
- (id)description;
- (id)displayName;
- (id)flagFillColor;
- (id)flagPressedColor;
- (id)flagStrokeColor;
- (id)gradientEndColor;
- (id)gradientStartColor;
- (bool)hasPublicID;
- (unsigned long long)hash;
- (id)indicatorDarkColor;
- (id)indicatorLightColor;
- (id)initWithContext:(id)arg1 name:(id)arg2 color:(id)arg3;
- (id)initWithContext:(id)arg1 name:(id)arg2 color:(id)arg3 privateID:(id)arg4;
- (id)initWithContext:(id)arg1 name:(id)arg2 color:(id)arg3 publicID:(id)arg4 isPublicAuthor:(bool)arg5;
- (bool)isEqual:(id)arg1;
- (bool)isPreferredOver:(id)arg1;
- (bool)isPublicAuthor;
- (void)loadFromUnarchiver:(id)arg1;
- (bool)matchesAuthor:(id)arg1;
- (bool)matchesPrivateID:(id)arg1;
- (id)menuSwatchColorForAuthor;
- (id)name;
- (unsigned long long)p_authorColorIndex;
- (id)popoverAuthorLabelColor;
- (id)popoverButtonTintColor;
- (id)popoverColor;
- (id)publicID;
- (void)saveToArchiver:(id)arg1;
- (void)setIsPublicAuthor:(bool)arg1;
- (void)setName:(id)arg1;
- (void)setPublicID:(id)arg1;
- (void)setStorageColor:(id)arg1;
- (bool)showAuthorComments;
- (id)sidebarChangeBarColor;
- (id)sidebarDecoratorLineColor;
- (id)sidebarHoverColor;
- (id)sidebarSelectedBorderColor;
- (id)sidebarSelectedColor;
- (id)sidebarUsernameColor;
- (id)storageColor;
- (id)textHighlightColor;
- (id)textHighlightOverlappingDuplicateColor;
- (id)textMarkupColor;
- (id)themeFilenameForAuthor;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TIADocument.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TSReading.framework/TIADocument.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TSReading.framework/TSReading (261)
 */

@interface TIADocument : UIDocument <TSADocumentRootDelegate, TSKDocumentRootProvider, TSPObjectContextDelegate> {
    TSPObjectContext * _context;
    TSPObjectContext * _contextForRevert;
    TIADocumentInfo * _documentInfo;
    bool  _documentNeedsDownloadOnRevert;
    bool  _documentRevertWasAbandoned;
    TSADocumentRoot * _documentRootForDocumentDidLoad;
    id  _documentStateChangedObserver;
    SFUCryptoKey * _encryptionKey;
    int  _hasPersistenceErrors;
    NSObject<OS_dispatch_queue> * _ioOperationQueue;
    NSObject<OS_dispatch_queue> * _ioQueue;
    bool  _isClosingWithoutSaving;
    bool  _isReadOnly;
    bool  _isShowingConflictResolutionSheet;
    <TIADocumentPassphraseDelegate> * _passphraseDelegate;
    bool  _passwordEntryWasAbandoned;
    NSString * _sourcePathForNondestructiveImport;
    TSADocumentRoot * _suspendedDocumentRoot;
    NSURL * _templateURL;
}

@property (nonatomic, readonly) bool areNewExternalReferencesToDataAllowed;
@property (nonatomic, retain) TSPObjectContext *context;
@property (nonatomic, retain) TSPObjectContext *contextForRevert;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSString *defaultDraftName;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *documentCachePath;
@property (nonatomic, retain) TIADocumentInfo *documentInfo;
@property (readonly) bool documentNeedsDownloadOnRevert;
@property (nonatomic, copy) NSString *documentPasswordHint;
@property (readonly) bool documentRevertWasAbandoned;
@property (nonatomic, readonly, retain) TSADocumentRoot *documentRoot;
@property (nonatomic, retain) SFUCryptoKey *encryptionKey;
@property (nonatomic, readonly) <NSFilePresenter> *filePresenter;
@property (readonly) bool hasPersistenceErrors;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool ignoreDocumentSupport;
@property (nonatomic, readonly) bool isClosed;
@property bool isClosingWithoutSaving;
@property (nonatomic, readonly) bool isDocumentSupportTemporary;
@property (nonatomic, readonly) bool isPasswordProtected;
@property bool isReadOnly;
@property (readonly) bool isShowingConflictResolutionSheet;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic) <TIADocumentPassphraseDelegate> *passphraseDelegate;
@property (readonly) bool passwordEntryWasAbandoned;
@property (readonly) bool shouldHideForSnapshots;
@property (nonatomic, retain) NSString *sourcePathForNondestructiveImport;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSURL *templateURL;

- (bool)_shouldPreventFileProtectionUpgradeToLevel:(id)arg1;
- (id)additionalDocumentPropertiesForWrite;
- (void)closeWithCompletionHandler:(id /* block */)arg1;
- (id)contentsForType:(id)arg1 error:(id*)arg2;
- (id)context;
- (void)context:(id)arg1 didDownloadDocumentResources:(id)arg2 failedOrCancelledDocumentResources:(id)arg3 error:(id)arg4;
- (id)contextForRevert;
- (void)coordinatedReadUsingAccessor:(id /* block */)arg1;
- (void)dealloc;
- (void)decryptedDocumentWithKey:(id)arg1;
- (id)documentCachePath;
- (void)documentDidLoad;
- (id)documentInfo;
- (bool)documentNeedsDownloadOnRevert;
- (id)documentPasswordHint;
- (bool)documentRevertWasAbandoned;
- (id)documentRoot;
- (id)documentUUID;
- (id)encryptionKey;
- (id)filePresenter;
- (bool)hasPersistenceErrors;
- (bool)hasUnsavedChanges;
- (id)initWithTemporaryFileURL:(id)arg1;
- (bool)isClosed;
- (bool)isClosingWithoutSaving;
- (bool)isPasswordProtected;
- (bool)isReadOnly;
- (bool)isShowingConflictResolutionSheet;
- (id)name;
- (id)newExporterForType:(id)arg1 options:(id)arg2 preferredType:(id*)arg3;
- (void)p_performSynchronousBlockOnMainThread:(id /* block */)arg1;
- (id)packageDataForWrite;
- (id)passphraseDelegate;
- (bool)passwordEntryWasAbandoned;
- (void)passwordStateDidChange;
- (id)persistenceWarningsForData:(id)arg1 isReadable:(bool)arg2 isExternal:(bool)arg3;
- (void)setContext:(id)arg1;
- (void)setContextForRevert:(id)arg1;
- (void)setDocumentFileProtectionTo:(id)arg1;
- (void)setDocumentInfo:(id)arg1;
- (void)setDocumentPasswordHint:(id)arg1;
- (void)setEncryptionKey:(id)arg1;
- (void)setEncryptionKeyWithPassphrase:(id)arg1;
- (void)setFileProtectionTo:(id)arg1 atPath:(id)arg2;
- (void)setIsClosingWithoutSaving:(bool)arg1;
- (void)setIsReadOnly:(bool)arg1;
- (void)setPassphraseDelegate:(id)arg1;
- (void)setSourcePathForNondestructiveImport:(id)arg1;
- (void)setTemplateURL:(id)arg1;
- (bool)shouldAbandonDocumentRevert;
- (bool)shouldHideForSnapshots;
- (id)sourcePathForNondestructiveImport;
- (id)templateURL;
- (bool)validatePassphrase:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

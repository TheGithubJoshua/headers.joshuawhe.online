<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSTCellIterator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TSReading.framework/TSTCellIterator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSTCellIterator : NSObject <TSTCellIterating> {
    TSTCell * _cell;
    TSTMutableCellIteratorData * _cellData;
    NSMutableIndexSet * _columnIndexesWithMerges;
    <TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating> * _contentIterator;
    <TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating> * _dataStoreIterator;
    TSTCellRegion * _region;
    <TSTCellRegionIterating> * _regionIterator;
    bool  _returnCellContents;
    bool  _returnEmptyCells;
    bool  _returnOneEmptyCell;
    unsigned int  _rowForColumnIndexesWithMerges;
    <TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating> * _strokeIterator;
    TSTTableInfo * _tableInfo;
    TSTTableModel * _tableModel;
    bool  _terminateRegionIterator;
}

@property (nonatomic, retain) TSTCell *cell;
@property (nonatomic, retain) TSTMutableCellIteratorData *cellData;
@property (nonatomic, retain) NSMutableIndexSet *columnIndexesWithMerges;
@property (nonatomic, retain) <TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating> *contentIterator;
@property (nonatomic, retain) <TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating> *dataStoreIterator;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) TSTCellRegion *region;
@property (nonatomic, retain) <TSTCellRegionIterating> *regionIterator;
@property (nonatomic, readonly) bool returnCellContents;
@property (nonatomic) bool returnEmptyCells;
@property (nonatomic) bool returnOneEmptyCell;
@property (nonatomic) unsigned int rowForColumnIndexesWithMerges;
@property (nonatomic, retain) <TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating> *strokeIterator;
@property (readonly) Class superclass;
@property (nonatomic, readonly, retain) TSTTableInfo *tableInfo;
@property (nonatomic, retain) TSTTableModel *tableModel;
@property (nonatomic) bool terminateRegionIterator;

- (void).cxx_destruct;
- (id)cell;
- (id)cellData;
- (id)columnIndexesWithMerges;
- (id)contentIterator;
- (id)dataStoreIterator;
- (bool)getNextCellData:(id*)arg1;
- (id)initWithTableInfo:(id)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3;
- (id)initWithTableInfo:(id)arg1 range:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg2 flags:(unsigned long long)arg3 searchFlags:(unsigned long long)arg4;
- (id)initWithTableInfo:(id)arg1 region:(id)arg2 flags:(unsigned long long)arg3 searchFlags:(unsigned long long)arg4;
- (id)initWithTableInfo:(id)arg1 region:(id)arg2 flags:(unsigned long long)arg3 searchFlags:(unsigned long long)arg4 clampingRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg5;
- (id)initWithTableInfo:(id)arg1 tableModel:(id)arg2 region:(id)arg3 flags:(unsigned long long)arg4 searchFlags:(unsigned long long)arg5 clampingRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg6;
- (void)iterateCellsUsingBlock:(id /* block */)arg1;
- (id)nextCellData;
- (struct TSUCellCoord { unsigned int x1; unsigned short x2; bool x3; bool x4; })p_getNextCellID;
- (void)p_updateDataForCellID:(struct TSUCellCoord { unsigned int x1; unsigned short x2; bool x3; bool x4; })arg1;
- (void)p_updateDataForMergeAtCellID:(struct TSUCellCoord { unsigned int x1; unsigned short x2; bool x3; bool x4; })arg1;
- (id)region;
- (id)regionIterator;
- (bool)returnCellContents;
- (bool)returnEmptyCells;
- (bool)returnOneEmptyCell;
- (unsigned int)rowForColumnIndexesWithMerges;
- (void)setCell:(id)arg1;
- (void)setCellData:(id)arg1;
- (void)setColumnIndexesWithMerges:(id)arg1;
- (void)setContentIterator:(id)arg1;
- (void)setDataStoreIterator:(id)arg1;
- (void)setRegionIterator:(id)arg1;
- (void)setReturnEmptyCells:(bool)arg1;
- (void)setReturnOneEmptyCell:(bool)arg1;
- (void)setRowForColumnIndexesWithMerges:(unsigned int)arg1;
- (void)setStrokeIterator:(id)arg1;
- (void)setTableModel:(id)arg1;
- (void)setTerminateRegionIterator:(bool)arg1;
- (id)strokeIterator;
- (id)tableInfo;
- (id)tableModel;
- (void)terminate;
- (bool)terminateRegionIterator;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSTTableDataList : TSPObject <TSPCopying> {
    struct unordered_map<unsigned int, TSTTableDataObject *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSTTableDataObject *> > > { 
        struct __hash_table<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *> > > { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *> > > { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> {} **__value_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *> > { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> {} *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::hash<unsigned int>, true> > { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__1::equal_to<unsigned int>, true> > { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _data;
    struct unordered_map<TSTTableDataObject *, unsigned int, TSTTableDataObjectHash, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<TSTTableDataObject *const, unsigned int> > > { 
        struct __hash_table<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, std::__1::__unordered_map_hasher<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectHash, true>, std::__1::__unordered_map_equal<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectEqual, true>, std::__1::allocator<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int> > > { 
            struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> *> > > { 
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> *> > > { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> {} **__value_; 
                    struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> *> > { 
                        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> *> > { 
                            unsigned long long __value_; 
                        } __data_; 
                    } __value_; 
                } __ptr_; 
            } __bucket_list_; 
            struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> > > { 
                struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> { 
                    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, void *> *> {} *__next_; 
                } __value_; 
            } __p1_; 
            struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectHash, true> > { 
                unsigned long long __value_; 
            } __p2_; 
            struct __compressed_pair<float, std::__1::__unordered_map_equal<TSTTableDataObject *, std::__1::__hash_value_type<TSTTableDataObject *, unsigned int>, TSTTableDataObjectEqual, true> > { 
                float __value_; 
            } __p3_; 
        } __table_; 
    }  _dataToKeyDict;
    bool  _isNewForBraveNewCell;
    int  _listType;
    unsigned int  _nextID;
    NSObject<TSDContainerInfo><TSWPStorageParent> * _richTextParentInfo;
}

@property (nonatomic) bool isNewForBraveNewCell;
@property (nonatomic) int listType;
@property (nonatomic) unsigned int nextID;
@property (nonatomic) NSObject<TSDContainerInfo><TSWPStorageParent> *richTextParentInfo;

+ (Class)classForUnarchiver:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned int)addCellFormat:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addCommentStorage:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addConditionalStyleSet:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addControlCellSpec:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addFormula:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addFormulaError:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addImportWarningSet:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addMultipleChoiceListFormat:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addRichText:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addString:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (unsigned int)addStyle:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (id)allRichTextStorages;
- (id)cellFormatForKey:(unsigned int)arg1;
- (id)commentStorageForKey:(unsigned int)arg1;
- (id)conditionalStyleSetForKey:(unsigned int)arg1;
- (bool)containsControlCellSpecs;
- (bool)containsFormulas;
- (id)controlCellSpecForKey:(unsigned int)arg1;
- (id)copyWithContext:(id)arg1;
- (unsigned long long)count;
- (void)dropReferenceForKey:(unsigned int)arg1;
- (void)enumerateDataObjectsUsingBlock:(id /* block */)arg1;
- (id)formulaErrorForKey:(unsigned int)arg1;
- (id)formulaForKey:(unsigned int)arg1;
- (id)getRefCountsFromDataList;
- (bool)hasDuplicatedElements;
- (id)importWarningSetForKey:(unsigned int)arg1;
- (id)initWithType:(int)arg1 context:(id)arg2;
- (bool)isNewForBraveNewCell;
- (int)listType;
- (id)listTypeString;
- (void)loadFromUnarchiver:(id)arg1;
- (id)multipleChoiceListFormatForKey:(unsigned int)arg1;
- (unsigned int)nextID;
- (id)objectForKey:(unsigned int)arg1;
- (void)p_addReferencesForKey:(unsigned int)arg1 fromObject:(id)arg2;
- (void)p_setupWithType:(int)arg1 nextKeyID:(unsigned int)arg2;
- (id)packageLocator;
- (id)reassignCustomFormatUIDForPaste;
- (unsigned int)refCountForKey:(unsigned int)arg1;
- (void)removeObjectForKey:(unsigned int)arg1;
- (void)replaceConditionalStyleSetsUsingBlock:(id /* block */)arg1;
- (void)replaceFormulasUsingBlock:(id /* block */)arg1;
- (id)richTextForKey:(unsigned int)arg1;
- (id)richTextParentInfo;
- (void)saveToArchiver:(id)arg1;
- (void)setIsNewForBraveNewCell:(bool)arg1;
- (void)setListType:(int)arg1;
- (void)setNextID:(unsigned int)arg1;
- (unsigned int)setObject:(id)arg1 atSuggestedKey:(unsigned int)arg2;
- (void)setRichTextParentInfo:(id)arg1;
- (id)stringForKey:(unsigned int)arg1;
- (id)styleForKey:(unsigned int)arg1;
- (void)takeReferenceForKey:(unsigned int)arg1;
- (void)upgradeCellFormatsU2_0;
- (void)upgradeConditionalStylesToLinkedRefWithTableUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg1;
- (bool)useReverseMap;

@end

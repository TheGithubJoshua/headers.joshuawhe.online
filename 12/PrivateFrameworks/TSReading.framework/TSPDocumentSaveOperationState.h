<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSPDocumentSaveOperationState.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TSReading.framework/TSPDocumentSaveOperationState.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSPDocumentSaveOperationState : TSPSaveOperationState {
    NSURL * _URL;
    bool  _didEndWriteOperation;
    bool  _didResetDocumentRevision;
    TSPObject * _documentObject;
    TSPPackageWriter * _documentPackageWriter;
    NSString * _documentPasswordHint;
    TSPDocumentProperties * _documentProperties;
    TSPDocumentRevision * _documentRevision;
    TSPDocumentProperties * _documentSupportProperties;
    NSUUID * _documentUUID;
    SFUCryptoKey * _encryptionKey;
    NSURL * _originalSupportURL;
    long long  _packageType;
    NSData * _passwordVerifier;
    NSProgress * _progress;
    NSURL * _relativeURLForExternalData;
    unsigned long long  _saveToken;
    bool  _shouldLeavePendingEndSave;
    bool  _shouldResumeAsynchronousModifications;
    TSPObject * _supportObject;
    TSPPackageWriter * _supportPackageWriter;
}

@property (nonatomic, readonly) NSURL *URL;
@property (nonatomic) bool didEndWriteOperation;
@property (nonatomic) bool didResetDocumentRevision;
@property (nonatomic, retain) TSPObject *documentObject;
@property (nonatomic, retain) TSPPackageWriter *documentPackageWriter;
@property (nonatomic, copy) NSString *documentPasswordHint;
@property (nonatomic, retain) TSPDocumentProperties *documentProperties;
@property (nonatomic, retain) TSPDocumentRevision *documentRevision;
@property (nonatomic, retain) TSPDocumentProperties *documentSupportProperties;
@property (nonatomic, copy) NSUUID *documentUUID;
@property (nonatomic, retain) SFUCryptoKey *encryptionKey;
@property (nonatomic, copy) NSURL *originalSupportURL;
@property (nonatomic, readonly) long long packageType;
@property (nonatomic, retain) NSData *passwordVerifier;
@property (nonatomic, retain) NSProgress *progress;
@property (nonatomic, copy) NSURL *relativeURLForExternalData;
@property (nonatomic) unsigned long long saveToken;
@property (nonatomic) bool shouldLeavePendingEndSave;
@property (nonatomic) bool shouldResumeAsynchronousModifications;
@property (nonatomic, retain) TSPObject *supportObject;
@property (nonatomic, retain) TSPPackageWriter *supportPackageWriter;

- (void).cxx_destruct;
- (id)URL;
- (bool)didEndWriteOperation;
- (bool)didResetDocumentRevision;
- (id)documentObject;
- (id)documentPackageWriter;
- (id)documentPasswordHint;
- (id)documentProperties;
- (id)documentRevision;
- (id)documentSupportProperties;
- (id)documentUUID;
- (id)encryptionKey;
- (id)init;
- (id)initWithURL:(id)arg1 updateType:(long long)arg2 packageType:(long long)arg3;
- (id)originalSupportURL;
- (long long)packageType;
- (id)passwordVerifier;
- (id)progress;
- (id)relativeURLForExternalData;
- (unsigned long long)saveToken;
- (void)setDidEndWriteOperation:(bool)arg1;
- (void)setDidResetDocumentRevision:(bool)arg1;
- (void)setDocumentObject:(id)arg1;
- (void)setDocumentPackageWriter:(id)arg1;
- (void)setDocumentPasswordHint:(id)arg1;
- (void)setDocumentProperties:(id)arg1;
- (void)setDocumentRevision:(id)arg1;
- (void)setDocumentSupportProperties:(id)arg1;
- (void)setDocumentUUID:(id)arg1;
- (void)setEncryptionKey:(id)arg1;
- (void)setOriginalSupportURL:(id)arg1;
- (void)setPasswordVerifier:(id)arg1;
- (void)setProgress:(id)arg1;
- (void)setRelativeURLForExternalData:(id)arg1;
- (void)setSaveToken:(unsigned long long)arg1;
- (void)setShouldLeavePendingEndSave:(bool)arg1;
- (void)setShouldResumeAsynchronousModifications:(bool)arg1;
- (void)setSupportObject:(id)arg1;
- (void)setSupportPackageWriter:(id)arg1;
- (bool)shouldLeavePendingEndSave;
- (bool)shouldResumeAsynchronousModifications;
- (id)supportObject;
- (id)supportPackageWriter;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

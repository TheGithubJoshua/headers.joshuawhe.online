/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSDPathSource : NSObject <NSCopying, TSDMixing> {
    bool  mHorizontalFlip;
    NSString * mLocalizationKey;
    NSString * mName;
    bool  mVerticalFlip;
}

@property (getter=isClosed, nonatomic, readonly) bool closed;
@property bool hasHorizontalFlip;
@property bool hasVerticalFlip;
@property (nonatomic, copy) NSString *localizationKey;
@property (nonatomic, copy) NSString *userDefinedName;

+ (id)pathSourceForShapeType:(int)arg1 naturalSize:(struct CGSize { double x1; double x2; })arg2;
+ (id)pathSourceWithArchive:(const struct PathSourceArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; struct PointPathSourceArchive {} *x7; struct ScalarPathSourceArchive {} *x8; struct BezierPathSourceArchive {} *x9; struct CalloutPathSourceArchive {} *x10; struct ConnectionLinePathSourceArchive {} *x11; struct EditableBezierPathSourceArchive {} *x12; bool x13; bool x14; }*)arg1;

- (void).cxx_destruct;
- (id)bezierPath;
- (id)bezierPathWithoutFlips;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)hasHorizontalFlip;
- (bool)hasVerticalFlip;
- (unsigned long long)hash;
- (id)initWithArchive:(const struct PathSourceArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; struct PointPathSourceArchive {} *x7; struct ScalarPathSourceArchive {} *x8; struct BezierPathSourceArchive {} *x9; struct CalloutPathSourceArchive {} *x10; struct ConnectionLinePathSourceArchive {} *x11; struct EditableBezierPathSourceArchive {} *x12; bool x13; bool x14; }*)arg1;
- (id)interiorWrapPath;
- (id)interiorWrapPathForInset:(double)arg1 joinStyle:(unsigned long long)arg2;
- (bool)isCircular;
- (bool)isClosed;
- (bool)isEqual:(id)arg1;
- (bool)isRectangular;
- (bool)isRectangularForever;
- (void)loadSharedFromArchive:(const struct PathSourceArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; struct PointPathSourceArchive {} *x7; struct ScalarPathSourceArchive {} *x8; struct BezierPathSourceArchive {} *x9; struct CalloutPathSourceArchive {} *x10; struct ConnectionLinePathSourceArchive {} *x11; struct EditableBezierPathSourceArchive {} *x12; bool x13; bool x14; }*)arg1;
- (id)localizationKey;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (struct CGSize { double x1; double x2; })naturalSize;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })pathFlipTransform;
- (Class)preferredControllerClass;
- (void)saveSharedToArchive:(struct PathSourceArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; struct PointPathSourceArchive {} *x7; struct ScalarPathSourceArchive {} *x8; struct BezierPathSourceArchive {} *x9; struct CalloutPathSourceArchive {} *x10; struct ConnectionLinePathSourceArchive {} *x11; struct EditableBezierPathSourceArchive {} *x12; bool x13; bool x14; }*)arg1;
- (void)saveToArchive:(struct PathSourceArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_6_1_1; } x6; struct PointPathSourceArchive {} *x7; struct ScalarPathSourceArchive {} *x8; struct BezierPathSourceArchive {} *x9; struct CalloutPathSourceArchive {} *x10; struct ConnectionLinePathSourceArchive {} *x11; struct EditableBezierPathSourceArchive {} *x12; bool x13; bool x14; }*)arg1;
- (void)scaleToNaturalSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setHasHorizontalFlip:(bool)arg1;
- (void)setHasVerticalFlip:(bool)arg1;
- (void)setLocalizationKey:(id)arg1;
- (void)setNaturalSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setUserDefinedName:(id)arg1;
- (double)uniformScaleForScalingToNaturalSize:(struct CGSize { double x1; double x2; })arg1;
- (id)userDefinedName;
- (id)valueForSetSelector:(SEL)arg1;

@end

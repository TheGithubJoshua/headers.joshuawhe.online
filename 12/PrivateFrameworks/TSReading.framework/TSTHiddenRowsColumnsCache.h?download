/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSTHiddenRowsColumnsCache : NSObject <TSTTableHiddenRowColumnProviding> {
    NSMutableIndexSet * _columnsInvalid;
    TSTHiddenStateIndexSet * _columnsVisible;
    unsigned long long  _rowMarkIndex;
    NSMutableIndexSet * _rowsInvalid;
    TSTHiddenStateIndexSet * _rowsUserVisible;
    TSTHiddenStateIndexSet * _rowsVisible;
}

@property (nonatomic, retain) NSMutableIndexSet *columnsInvalid;
@property (nonatomic, retain) TSTHiddenStateIndexSet *columnsVisible;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long rowMarkIndex;
@property (nonatomic, retain) NSMutableIndexSet *rowsInvalid;
@property (nonatomic, retain) TSTHiddenStateIndexSet *rowsUserVisible;
@property (nonatomic, retain) TSTHiddenStateIndexSet *rowsVisible;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSIndexSet *userVisibleRowIndices;
@property (nonatomic, readonly) NSIndexSet *visibleColumnIndices;
@property (nonatomic, readonly) NSIndexSet *visibleRowIndices;

- (void).cxx_destruct;
- (bool)anyHiddenColumnsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (bool)anyHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (bool)anyRowsUserHiddenInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (id)columnsInvalid;
- (id)columnsVisible;
- (bool)hasHiddenColumnAtIndex:(unsigned short)arg1;
- (bool)hasHiddenRowAtIndex:(unsigned int)arg1;
- (unsigned short)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnAfterColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned short)arg1;
- (unsigned short)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned short)arg1;
- (unsigned int)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowAfterRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned int)arg1;
- (unsigned int)indexOfVisibleRowBeforeRowAtIndex:(unsigned int)arg1;
- (id)init;
- (bool)isRowUserHidden:(unsigned int)arg1;
- (unsigned int)nonUserHiddenRowAfterAndIncludingRow:(unsigned int)arg1;
- (unsigned int)numberOfHiddenColumnsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (unsigned int)numberOfHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (unsigned int)numberOfUserHiddenRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (unsigned int)numberOfVisibleColumnsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (unsigned int)numberOfVisibleRowsFromHeader:(unsigned int)arg1;
- (unsigned int)numberOfVisibleRowsFromStartRowIndex:(unsigned long long)arg1 toEndRowIndex:(unsigned int)arg2;
- (unsigned int)numberOfVisibleRowsInCellRange:(struct TSUCellRect { struct TSUCellCoord { unsigned int x_1_1_1; unsigned short x_1_1_2; bool x_1_1_3; bool x_1_1_4; } x1; struct { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; })arg1;
- (unsigned short)previousNthVisibleColumn:(unsigned int)arg1 fromColumnIndex:(unsigned short)arg2;
- (unsigned int)previousNthVisibleRow:(unsigned int)arg1 fromRowIndex:(unsigned int)arg2;
- (unsigned long long)rowMarkIndex;
- (id)rowsInvalid;
- (id)rowsUserVisible;
- (id)rowsVisible;
- (void)setColumnsInvalid:(id)arg1;
- (void)setColumnsVisible:(id)arg1;
- (void)setRowMarkIndex:(unsigned long long)arg1;
- (void)setRowsInvalid:(id)arg1;
- (void)setRowsUserVisible:(id)arg1;
- (void)setRowsVisible:(id)arg1;
- (id)userVisibleRowIndices;
- (void)validate:(id)arg1;
- (void)validateChangeDescriptors:(id)arg1;
- (struct TSUCellCoord { unsigned int x1; unsigned short x2; bool x3; bool x4; })visibleCellOffsetBy:(struct TSUColumnRowOffset { int x1; int x2; })arg1 fromCellID:(struct TSUCellCoord { unsigned int x1; unsigned short x2; bool x3; bool x4; })arg2;
- (id)visibleColumnIndices;
- (id)visibleRowIndices;

@end

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSPLazyReference.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TSReading.framework/TSPLazyReference.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSPLazyReference : NSObject <NSCopying, TSPReferenceItem> {
    TSPComponent * _component;
    <TSPLazyReferenceDelegate> * _delegate;
    _Atomic unsigned char  _flags;
    long long  _identifier;
    Class  _objectClass;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _objectLock;
    TSPObject * _strongObject;
    TSPObject * _weakObject;
}

@property (nonatomic, readonly) bool allowUnknownObject;
@property (nonatomic) TSPComponent *component;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <TSPLazyReferenceDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isExternal;
@property (nonatomic) bool keepObjectInMemory;
@property (nonatomic) Class objectClass;
@property (nonatomic, readonly) id objectIfLoaded;
@property (nonatomic, readonly) NSUUID *objectUUID;
@property (nonatomic, readonly) long long ownershipMode;
@property (nonatomic, readonly) TSPObject *strongObject;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long tsp_identifier;
@property (nonatomic, readonly) bool tsp_isLazyReference;
@property (nonatomic, readonly) TSPObject *weakObject;

+ (id)referenceForObject:(id)arg1;
+ (id)weakReferenceForObject:(id)arg1;
+ (id)weakReferenceForObject:(id)arg1 retainedUntilArchived:(bool)arg2;

- (void).cxx_destruct;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2;
- (id)additionalDescription;
- (bool)allowUnknownObject;
- (id)component;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)delegate;
- (id)description;
- (unsigned long long)hash;
- (id)initWeakReferenceWithObject:(id)arg1;
- (id)initWeakReferenceWithObject:(id)arg1 retainedUntilArchived:(bool)arg2;
- (id)initWithDelegate:(id)arg1 identifier:(long long)arg2 ownershipMode:(long long)arg3 allowUnknownObject:(bool)arg4;
- (id)initWithObject:(id)arg1;
- (id)initWithObject:(id)arg1 ownershipMode:(long long)arg2;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToLazyReference:(id)arg1;
- (bool)isExternal;
- (bool)keepObjectInMemory;
- (id)objectAndReturnError:(id*)arg1;
- (Class)objectClass;
- (id)objectIfLoaded;
- (id)objectUUID;
- (long long)ownershipMode;
- (bool)referencesObject:(id)arg1;
- (long long)releaseObjectIfPossible;
- (void)resetIdentifierFromCopy:(bool)arg1;
- (void)resetToIdentifier:(long long)arg1;
- (void)retainObject:(id)arg1;
- (void)setComponent:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsExternal:(bool)arg1;
- (void)setKeepObjectInMemory:(bool)arg1;
- (void)setObjectClass:(Class)arg1;
- (id)strongObject;
- (long long)tsp_identifier;
- (bool)tsp_isLazyReference;
- (id)weakObject;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

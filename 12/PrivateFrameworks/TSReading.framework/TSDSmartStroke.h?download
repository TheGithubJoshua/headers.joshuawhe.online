/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSDSmartStroke : TSDStroke {
    double  mDeprecatedPatternOffsetDistance;
    NSString * mStrokeName;
}

@property (nonatomic, readonly) double deprecatedPatternOffsetDistance;
@property (nonatomic, readonly, copy) NSString *strokeName;

+ (Class)classForName:(id)arg1;
+ (id)p_mapOfStrokeNamesToAlternatesForOldVersions;
+ (id)strokeWithName:(id)arg1 color:(id)arg2 width:(double)arg3;

- (bool)canApplyDirectlyToRepRenderable;
- (bool)canDrawWithOtherStroke:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (double)deprecatedPatternOffsetDistance;
- (unsigned long long)hash;
- (id)initWithArchive:(const struct StrokeArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct Color {} *x5; struct StrokePatternArchive {} *x6; struct SmartStrokeArchive {} *x7; struct FrameArchive {} *x8; struct PatternedStrokeArchive {} *x9; float x10; int x11; int x12; float x13; }*)arg1 unarchiver:(id)arg2;
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(int)arg4 join:(int)arg5 pattern:(id)arg6;
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(int)arg4 join:(int)arg5 pattern:(id)arg6 miterLimit:(double)arg7;
- (bool)isEqual:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (void)saveToArchive:(struct StrokeArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct Color {} *x5; struct StrokePatternArchive {} *x6; struct SmartStrokeArchive {} *x7; struct FrameArchive {} *x8; struct PatternedStrokeArchive {} *x9; float x10; int x11; int x12; float x13; }*)arg1 archiver:(id)arg2;
- (bool)shouldAntialiasDefeat;
- (id)strokeName;

@end

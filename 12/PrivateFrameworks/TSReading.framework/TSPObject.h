<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSPObject.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TSReading.framework/TSPObject.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSPObject : NSObject <TSPReferenceItem> {
    NSUUID * _UUID;
    TSPComponent * _component;
    <TSPObjectDelegate> * _delegate;
    _Atomic long long  _identifier;
    _Atomic long long  _modifyObjectToken;
    long long  _unarchiverIdentifier;
    TSPUnknownContent * _unknownContent;
}

@property (nonatomic, readonly) unsigned long long allowedObjectTargetTypes;
@property (nonatomic, readonly) bool allowsImplicitComponentOwnership;
@property (nonatomic, readonly) bool componentCanBeDropped;
@property (nonatomic, readonly) bool componentRequiresCurrentVersion;
@property (nonatomic, readonly) TSPObject *componentRootObject;
@property (nonatomic, readonly) long long compressionAlgorithm;
@property (nonatomic, readonly) TSPObjectContext *context;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) unsigned int delayedArchivingPriority;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCommandObject;
@property (nonatomic, readonly) bool isComponentRoot;
@property (nonatomic, readonly) bool needsArchiving;
@property (nonatomic, copy) NSUUID *objectUUID;
@property (nonatomic, readonly) TSUUUIDPath *objectUUIDPath;
@property (nonatomic, readonly) NSString *packageLocator;
@property (nonatomic, readonly) bool shouldDelayArchiving;
@property (nonatomic, readonly) bool storeOutsideObjectArchive;
@property (readonly) Class superclass;
@property (nonatomic) TSPComponent *tsp_component;
@property (nonatomic) <TSPObjectDelegate> *tsp_delegate;
@property (nonatomic, readonly) NSString *tsp_description;
@property (nonatomic) long long tsp_identifier;
@property (nonatomic, readonly) bool tsp_isInDocument;
@property (nonatomic, readonly) bool tsp_isLazyReference;
@property (nonatomic, readonly) bool tsp_isPersisted;
@property (nonatomic) long long tsp_modifyObjectToken;
@property (nonatomic, readonly) long long tsp_unarchiverIdentifier;
@property (nonatomic, readonly) TSPUnknownContent *tsp_unknownContent;

+ (Class)classForUnarchiver:(id)arg1;
+ (bool)needsObjectUUID;
+ (void)performUpgradeUsingBlock:(id /* block */)arg1;
+ (id)tsp_deserializeFromData:(id)arg1 options:(id)arg2 context:(id)arg3 error:(id*)arg4;
+ (id)tsp_deserializeFromURL:(id)arg1 options:(id)arg2 context:(id)arg3 isCrossDocumentPaste:(bool)arg4 isCrossAppPaste:(bool)arg5 completion:(id /* block */)arg6;
+ (bool)tsp_isPerformingUpgrade;
+ (bool)tsp_isTransientObjectIdentifier:(long long)arg1;

- (void).cxx_destruct;
- (unsigned long long)allowedObjectTargetTypes;
- (bool)allowsImplicitComponentOwnership;
- (void)commonInit;
- (bool)componentCanBeDropped;
- (bool)componentRequiresCurrentVersion;
- (id)componentRootObject;
- (long long)compressionAlgorithm;
- (id)context;
- (void)dealloc;
- (unsigned int)delayedArchivingPriority;
- (void)didFinishUnarchiving;
- (void)didInitFromSOS;
- (void)didLoadChildObjectFromDocumentSupport:(id)arg1;
- (bool)documentIsRTL;
- (id)documentRoot;
- (id)init;
- (id)initBaseObjectFromUnarchiver:(id)arg1;
- (id)initBaseObjectWithContext:(id)arg1;
- (id)initDocumentObjectWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (bool)isCommandObject;
- (bool)isComponentRoot;
- (bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (bool)needsArchiving;
- (id)newObjectUUIDWithOffset:(unsigned long long)arg1;
- (id)objectLocale;
- (id)objectUUID;
- (id)objectUUIDPath;
- (id)owningDocument;
- (id)packageLocator;
- (void)performBlockIgnoringModifications:(id /* block */)arg1;
- (void)resetObjectUUIDWithoutUpdatingObjectUUIDMap;
- (void)saveToArchiver:(id)arg1;
- (void)setObjectUUID:(id)arg1;
- (void)setObjectUUID:(id)arg1 updatingObjectUUIDMap:(bool)arg2;
- (void)setTsp_component:(id)arg1;
- (void)setTsp_delegate:(id)arg1;
- (void)setTsp_identifier:(long long)arg1;
- (void)setTsp_modifyObjectToken:(long long)arg1;
- (bool)shouldDelayArchiving;
- (bool)storeOutsideObjectArchive;
- (void)tsp_commonInitBaseObjectWithContext:(id)arg1;
- (id)tsp_component;
- (void)tsp_deepCopyWithContext:(id)arg1 options:(id)arg2 completion:(id /* block */)arg3;
- (id)tsp_deepCopyWithContext:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)tsp_deepCopyWithContext:(id)arg1 options:(id)arg2 objectMap:(id*)arg3 error:(id*)arg4;
- (id)tsp_deepCopyWithOptions:(id)arg1;
- (void)tsp_deepCopyWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (id)tsp_delegate;
- (id)tsp_description;
- (id)tsp_descriptionWithDepth:(unsigned long long)arg1;
- (long long)tsp_identifier;
- (bool)tsp_isInDocument;
- (bool)tsp_isLazyReference;
- (bool)tsp_isPersisted;
- (long long)tsp_modifyObjectToken;
- (id)tsp_objectInfoWithDepth:(unsigned long long)arg1;
- (id)tsp_referencedData;
- (id)tsp_referencedObjectUUIDs;
- (id)tsp_referencedObjects;
- (id)tsp_serializeToDataWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (id)tsp_serializeToDataWithOptions:(id)arg1 dataReferences:(id*)arg2 error:(id*)arg3;
- (id)tsp_serializeToURL:(id)arg1 options:(id)arg2 completion:(id /* block */)arg3;
- (long long)tsp_unarchiverIdentifier;
- (id)tsp_unknownContent;
- (id)tsp_writeObjectNSDataRepresentation:(id)arg1 andData:(id)arg2 toURL:(id)arg3 options:(id)arg4 completion:(id /* block */)arg5;
- (bool)validatedLoadFromUnarchiver:(id)arg1;
- (void)wasAddedToDocumentDuringImportWithContext:(id)arg1;
- (void)wasAddedToDocumentDuringUnarchiveWithContext:(id)arg1;
- (void)wasAddedToDocumentWithContext:(id)arg1;
- (void)wasAddedToDocumentWithContext:(id)arg1 options:(unsigned long long)arg2;
- (void)willBeRemovedFromDocumentWithContext:(id)arg1;
- (void)willModify;
- (void)willModifyForUpgrade;
- (void)willModifyToComponentRootObject:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSWPShapeInfo : TSDShapeInfo <TSDContainerInfo, TSDMixing, TSDSelectionStatisticsContributor, TSWPStorageParent> {
    TSWPStorage * _containedStorage;
    bool  _isTextBox;
    bool  _preventsChangeTracking;
    bool  _preventsComments;
    TSPObject<TSWPFlowInfo> * _textFlow;
}

@property (getter=isAnchoredToText, nonatomic, readonly) bool anchoredToText;
@property (getter=isAttachedToBodyText, nonatomic, readonly) bool attachedToBodyText;
@property (nonatomic, readonly) bool autoListRecognition;
@property (nonatomic, readonly) bool autoListTermination;
@property (nonatomic, readonly) NSArray *childInfos;
@property (nonatomic, readonly) int columnDirection;
@property (nonatomic, retain) TSWPColumns *columns;
@property (nonatomic) long long contentWritingDirection;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool displaysInstructionalText;
@property (getter=isFloatingAboveText, nonatomic, readonly) bool floatingAboveText;
@property (nonatomic, copy) TSDInfoGeometry *geometry;
@property (readonly) unsigned long long hash;
@property (getter=isInlineWithText, nonatomic, readonly) bool inlineWithText;
@property (nonatomic, readonly) NSString *instructionalText;
@property (nonatomic, readonly) bool isLinkable;
@property (nonatomic, readonly) bool isLinked;
@property (nonatomic, readonly) bool isTextBox;
@property (nonatomic) bool matchesObjectPlaceholderGeometry;
@property (nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property (nonatomic, readonly) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property (nonatomic, retain) TSWPPadding *padding;
@property (nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property (nonatomic, readonly) bool preventsChangeTracking;
@property (nonatomic, readonly) bool preventsComments;
@property (nonatomic, readonly) bool shouldIgnoreWPContent;
@property (nonatomic) bool shrinkTextToFit;
@property (nonatomic, readonly) bool storageChangesInvalidateWrap;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsMultipleColumns;
@property (nonatomic) TSPObject<TSWPFlowInfo> *textFlow;
@property (nonatomic, readonly) bool textIsLinked;
@property (nonatomic) bool textIsVertical;
@property (nonatomic, readonly) TSWPStorage *textStorage;
@property (nonatomic, readonly) TSWPShapeStyle *tswpShapeStyle;
@property (nonatomic) int verticalAlignment;

+ (id)defaultPlaceholderTextForLocale:(id)arg1;
+ (unsigned long long)numberOfDifferencesBetweenStyleProperties:(id)arg1 betweenOutgoingStorage:(id)arg2 outgoingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 incomingStorage:(id)arg4 incomingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg5 maxDifferencesBeforeReturning:(unsigned long long)arg6;
+ (id)p_newEmptyStorageWithContext:(id)arg1 paragraphStyle:(id)arg2;
+ (void)setDefaultInstructionalText:(id)arg1;
+ (bool)shouldDisableTextMorphsFromPropertiesBetweenOutgoingStorage:(id)arg1 outgoingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 incomingStorage:(id)arg3 incomingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
+ (bool)stylesAreEqualWithOutgoingStorage:(id)arg1 outgoingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 incomingStorage:(id)arg3 incomingRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
+ (id)textPropertiesAffectingObjectMatch;
+ (id)textPropertiesAffectingTextMorph;
+ (id)textPropertiesAffectingVisualStyle;
+ (id)textPropertiesAffectingVisualStyleExceptSize;
+ (id)textPropertiesNeedingCharacterAnimation;
+ (id)textPropertiesNotAffectingVisualStyle;

- (void).cxx_destruct;
- (void)acceptVisitor:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (bool)autoListRecognition;
- (bool)autoListTermination;
- (struct CGPoint { double x1; double x2; })autosizePositionOffset;
- (struct CGPoint { double x1; double x2; })autosizePositionOffsetForGeometry:(id)arg1 dynamicallyDraggedLayout:(id)arg2;
- (struct CGPoint { double x1; double x2; })autosizePositionOffsetForGeometry:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })autosizedTransformForInfoGeometry:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (bool)canAnchor;
- (bool)canBeDefinedAsTextPlaceholder;
- (id)childEnumerator;
- (id)childInfos;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 byGlyphStyle:(int)arg2 animationFilter:(id)arg3;
- (int)columnDirection;
- (id)columns;
- (long long)contentWritingDirection;
- (id)copyAcceptingTrackedChangesWithContext:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (bool)displaysInstructionalText;
- (void)fixPositionOfImportedAutosizedShape;
- (void)fixupAutosizingTextboxes;
- (id)i_ownedTextStorage;
- (void)i_setOwnedTextStorage:(id)arg1;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4 wpStorage:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 wpStorage:(id)arg4;
- (id)instructionalText;
- (bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (bool)isLinkable;
- (bool)isLinked;
- (bool)isLocked;
- (bool)isRightToLeft;
- (bool)isTextBox;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct ShapeInfoArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ShapeArchive {} *x5; struct Reference {} *x6; struct Reference {} *x7; struct Reference {} *x8; bool x9; }*)arg1 unarchiver:(id)arg2;
- (void)loadFromUnarchiver:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (double)pOffsetForParagraphAlignment:(struct CGSize { double x1; double x2; })arg1;
- (double)pOffsetForVerticalAlignment:(struct CGSize { double x1; double x2; })arg1;
- (unsigned long long)p_chunkCountForByBullet;
- (unsigned long long)p_chunkCountForByBulletGroup;
- (bool)p_isNonTopicParagraphBreakAtParagraphIndex:(unsigned long long)arg1;
- (unsigned long long)p_nonTopicParagraphBreakCount;
- (void)p_setOwnedTextStorage:(id)arg1;
- (id)padding;
- (id)presetKind;
- (bool)preventsChangeTracking;
- (bool)preventsComments;
- (void)processSelectedStoragesWithStatisticsController:(id)arg1;
- (id)propertyMapForNewPreset;
- (Class)repClass;
- (void)saveToArchive:(struct ShapeInfoArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ShapeArchive {} *x5; struct Reference {} *x6; struct Reference {} *x7; struct Reference {} *x8; bool x9; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setColumns:(id)arg1;
- (void)setContentWritingDirection:(long long)arg1;
- (void)setIsTextBoxForPersistence:(bool)arg1;
- (void)setPadding:(id)arg1;
- (void)setShrinkTextToFit:(bool)arg1;
- (void)setTextFlow:(id)arg1;
- (void)setTextIsVertical:(bool)arg1;
- (void)setVerticalAlignment:(int)arg1;
- (bool)shouldHideEmptyBullets;
- (bool)shouldIgnoreWPContent;
- (bool)shrinkTextToFit;
- (Class)styleClass;
- (id)stylesForCopyStyle;
- (bool)supportsMultipleColumns;
- (bool)supportsShrinkTextToFit;
- (bool)supportsTextInset;
- (id)textFlow;
- (bool)textIsLinked;
- (bool)textIsVertical;
- (bool)textIsVerticalAtCharIndex:(unsigned long long)arg1;
- (id)textStorage;
- (id)textStorageForHeadOfTextFlow;
- (id)textureDeliveryStylesLocalized:(bool)arg1 animationFilter:(id)arg2;
- (struct CGPoint { double x1; double x2; })transformableObjectAnchorPoint;
- (id)tswpShapeStyle;
- (void)upgradeOwnedStorageWithFileFormatVersion:(unsigned long long)arg1;
- (void)upgradeWithNewOwnedStorage;
- (int)verticalAlignment;
- (void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;

@end

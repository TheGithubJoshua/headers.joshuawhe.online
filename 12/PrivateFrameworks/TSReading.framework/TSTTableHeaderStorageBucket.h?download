/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSTTableHeaderStorageBucket : TSPObject {
    struct map<unsigned int, TSTTableHeaderInfo *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSTTableHeaderInfo *> > > { 
        struct __tree<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *> > > { 
            struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *__begin_node_; 
            struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, void *> > > { 
                struct __tree_end_node<std::__1::__tree_node_base<void *> *> { 
                    struct __tree_node_base<void *> {} *__left_; 
                } __value_; 
            } __pair1_; 
            struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true> > { 
                unsigned long long __value_; 
            } __pair3_; 
        } __tree_; 
    }  _map;
}

@property (nonatomic, readonly) unsigned long long count;
@property (nonatomic) /* Warning: unhandled struct encoding: '{map<unsigned int' */ struct  map; /* unknown property attribute:  true> >=Q}}} */
@property (nonatomic, readonly) unsigned int maxIndex;
@property (nonatomic, readonly) unsigned int minIndex;

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)count;
- (void)enumerateHeadersWithBlock:(id /* block */)arg1;
- (id)headerAtIndex:(unsigned int)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (struct map<unsigned int, TSTTableHeaderInfo *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSTTableHeaderInfo *> > > { struct __tree<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; })map;
- (unsigned int)maxIndex;
- (unsigned int)minIndex;
- (id)mutableHeaderAtIndex:(unsigned int)arg1 allowCreation:(bool)arg2;
- (id)packageLocator;
- (void)saveToArchiver:(id)arg1;
- (void)setHeader:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setMap:(struct map<unsigned int, TSTTableHeaderInfo *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TSTTableHeaderInfo *> > > { struct __tree<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> {} *x_1_1_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_3_1; } x_2_2_1; } x_1_1_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TSTTableHeaderInfo *>, std::__1::less<unsigned int>, true> > { unsigned long long x_3_2_1; } x_1_1_3; } x1; })arg1;
- (void)shiftIndexesAtIndex:(unsigned int)arg1 amount:(int)arg2;

@end

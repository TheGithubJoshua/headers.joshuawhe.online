/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSWPShapeRep : TSDShapeRep <TSDMagicMoveMatching, TSWPContainerTextEditingRep, TSWPShapeLayoutDelegate> {
    TSWPRep * _containedRep;
    bool  _editingContainedRep;
    struct CGPoint { 
        double x; 
        double y; 
    }  _originalAutosizePositionOffset;
    CALayer * _overflowGlyphLayer;
}

@property (nonatomic, readonly) NSArray *childReps;
@property (nonatomic, readonly) TSWPRep *containedRep;
@property (nonatomic, readonly) NSObject<TSDContainerInfo> *containerInfo;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isShapeInvisible;
@property (readonly) Class superclass;
@property (nonatomic, readonly) TSWPStorage *textStorageForTexture;

+ (id)magicMoveAnimationMatchesFromMatches:(id)arg1 description:(id)arg2;
+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2 mixingTypeContext:(id)arg3;
+ (id)magicMoveTextMatchesBetweenOutgoingObjects:(id)arg1 andIncomingObjects:(id)arg2 textureDescription:(id)arg3 textDeliveryType:(long long)arg4 repToOpacityTextRangeDictMap:(id)arg5;
+ (void)p_getOutgoingTextureSet:(id*)arg1 incomingTextureSet:(id*)arg2 withOutgoingRep:(id)arg3 outgoingChunkRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 outgoingTextureByGlyphStyle:(int)arg5 incomingRep:(id)arg6 incomingChunkRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg7 incomingTextureByGlyphStyle:(int)arg8 includeListLabels:(bool)arg9;
+ (bool)p_listLabelsAreEqualWithOutgoingStorage:(id)arg1 outgoingCharIndex:(long long)arg2 incomingStorage:(id)arg3 incomingCharIndex:(long long)arg4 shouldMatch:(bool*)arg5;
+ (unsigned long long)p_longestChunkInOutgoingObjects:(id)arg1 incomingObjects:(id)arg2 textDeliveryType:(long long)arg3 addOutgoingChunksToArray:(id)arg4 addIncomingChunksToArray:(id)arg5 textureDescription:(id)arg6;
+ (double)p_mmAttributeMatchPercentWithOutgoingTextChunk:(id)arg1 incomingTextChunk:(id)arg2;
+ (id)p_potentialMatchesWithChunkLength:(unsigned long long)arg1 outgoingTextChunks:(id)arg2 incomingTextChunks:(id)arg3 textureDescription:(id)arg4 textDeliveryType:(long long)arg5;
+ (bool)p_shouldDisableTextMorphingBetweenOutgoingRep:(id)arg1 outgoingChunkRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 incomingRep:(id)arg3 incomingChunkRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
+ (id)p_stringByApplyingCapitalizationPropertyFromStorage:(id)arg1 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 toString:(id)arg3;
+ (id)p_textureSetFromRep:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 textureByGlyphStyle:(int)arg3 includeListLabel:(bool)arg4 desiredContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg5;

- (void).cxx_destruct;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (bool)canSelectChildRep:(id)arg1;
- (id)childReps;
- (id)containedRep;
- (id)containerInfo;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (bool)isShapeInvisible;
- (id)newTextureRenderableForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 includeListLabel:(bool)arg2 isMagicMove:(bool)arg3 desiredContentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 textureByGlyphStyle:(int)arg5 includeGroupedShadow:(bool)arg6 groupedShadowOnly:(bool)arg7 textureBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg8;
- (void)p_drawRubyInContext:(struct CGContext { }*)arg1 forRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (bool)p_getBoundsRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 contentRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 transform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; }*)arg3 applyReflection:(bool*)arg4 applyShadow:(bool*)arg5 forRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6 includeListLabel:(bool)arg7 isMagicMove:(bool)arg8;
- (bool)p_hasContentForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 labelOnly:(bool)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })p_rectForRubyFields:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)selectChildRep:(id)arg1 extendingSelection:(bool)arg2;
- (id)stageChunksForDeliveryStyle:(unsigned long long)arg1 byGlyphStyle:(int)arg2;
- (long long)stageIndexForStorageRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 forTextureDescription:(id)arg2 stageChunks:(id)arg3;
- (id)textStorageForTexture;
- (id)textureForDescription:(id)arg1;
- (void)updateChildrenFromLayout;

@end

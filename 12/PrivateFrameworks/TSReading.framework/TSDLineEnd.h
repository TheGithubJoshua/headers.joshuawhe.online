<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TSDLineEnd.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TSReading.framework/TSDLineEnd.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport (440)
 */

@interface TSDLineEnd : NSObject <NSCopying, TSDMixing, TSSPropertyValueArchiving> {
    struct CGPoint { 
        double x; 
        double y; 
    }  _endPoint;
    NSString * _identifier;
    bool  _isFilled;
    int  _lineJoin;
    TSUBezierPath * _path;
    TSUBezierPath * _wrapPath;
}

@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } endPoint;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool isFilled;
@property (nonatomic, readonly) bool isNone;
@property (nonatomic, readonly) int lineJoin;
@property (nonatomic, readonly, copy) TSUBezierPath *path;
@property (nonatomic, readonly, copy) TSUBezierPath *wrapPath;

+ (id)filledArrow;
+ (id)filledCircle;
+ (id)filledDiamond;
+ (id)filledSquare;
+ (id)instanceWithArchive:(const struct LineEndArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct Path {} *x6; struct Point {} *x7; int x8; bool x9; }*)arg1 unarchiver:(id)arg2;
+ (id)invertedArrow;
+ (id)line;
+ (id)lineEndWithIdentifier:(id)arg1;
+ (id)lineEndWithPath:(const struct CGPath { }*)arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 isFilled:(bool)arg3 identifier:(id)arg4;
+ (id)lineEndWithPath:(const struct CGPath { }*)arg1 wrapPath:(const struct CGPath { }*)arg2 endPoint:(struct CGPoint { double x1; double x2; })arg3 isFilled:(bool)arg4 identifier:(id)arg5;
+ (id)lineEndWithType:(int)arg1;
+ (id)none;
+ (id)openArrow;
+ (id)openCircle;
+ (id)openSquare;
+ (id)simpleArrow;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (struct CGPoint { double x1; double x2; })endPoint;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithArchive:(const struct LineEndArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct Path {} *x6; struct Point {} *x7; int x8; bool x9; }*)arg1 unarchiver:(id)arg2;
- (id)initWithBezierPath:(id)arg1 wrapPath:(id)arg2 endPoint:(struct CGPoint { double x1; double x2; })arg3 isFilled:(bool)arg4 identifier:(id)arg5 lineJoin:(int)arg6;
- (id)initWithPath:(const struct CGPath { }*)arg1 endPoint:(struct CGPoint { double x1; double x2; })arg2 isFilled:(bool)arg3 identifier:(id)arg4;
- (id)initWithPath:(const struct CGPath { }*)arg1 wrapPath:(const struct CGPath { }*)arg2 endPoint:(struct CGPoint { double x1; double x2; })arg3 isFilled:(bool)arg4 identifier:(id)arg5 lineJoin:(int)arg6;
- (bool)isEqual:(id)arg1;
- (bool)isFilled;
- (bool)isNone;
- (int)lineJoin;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1 context:(id)arg2;
- (struct CGImage { }*)newLineEndImageOnRight:(bool)arg1 forContentsScale:(double)arg2 withSize:(struct CGSize { double x1; double x2; })arg3;
- (id)path;
- (void)saveToArchive:(struct LineEndArchive { int (**x1)(); struct InternalMetadataWithArena { void *x_2_1_1; } x2; struct HasBits<1> { unsigned int x_3_1_1[1]; } x3; struct CachedSize { struct atomic<int> { _Atomic int x_1_2_1; } x_4_1_1; } x4; struct ArenaStringPtr { struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x_5_1_1; } x5; struct Path {} *x6; struct Point {} *x7; int x8; bool x9; }*)arg1 archiver:(id)arg2;
- (double)scaleForStrokeWidth:(double)arg1;
- (id)wrapPath;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

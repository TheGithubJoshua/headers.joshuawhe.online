<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UASharedPasteboardManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UserActivity.framework/UASharedPasteboardManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity (231)
 */

@interface UASharedPasteboardManager : NSObject <UASharedPasteboardManagerResponseProtocol> {
    NSSet * _bomCheckTypes;
    id /* block */  _completionBlock;
    NSXPCConnection * _connection;
    NSXPCConnection * _controllConnection;
    id  _controllSyncObject;
    UAPasteboardGeneration * _currentGeneration;
    bool  _currentGenerationHasUpdates;
    int  _disableCount;
    NSSet * _disallowdTypes;
    id /* block */  _localPasteboardWasFetched;
    NSObject<OS_dispatch_queue> * _pasteboardReadQ;
    bool  _remotePasteboardAvaliable;
    NSObject<OS_dispatch_queue> * _serverQ;
    NSDictionary * _typeAliases;
    NSDictionary * _typeBOMs;
    bool  _updateScheduled;
}

@property (retain) NSSet *bomCheckTypes;
@property id /* block */ completionBlock;
@property (retain) NSXPCConnection *connection;
@property (retain) NSXPCConnection *controllConnection;
@property (retain) id controllSyncObject;
@property (retain) UAPasteboardGeneration *currentGeneration;
@property bool currentGenerationHasUpdates;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property int disableCount;
@property (retain) NSSet *disallowdTypes;
@property (readonly) unsigned long long hash;
@property (copy) id /* block */ localPasteboardWasFetched;
@property (retain) NSObject<OS_dispatch_queue> *pasteboardReadQ;
@property bool remotePasteboardAvaliable;
@property (retain) NSObject<OS_dispatch_queue> *serverQ;
@property (readonly) Class superclass;
@property (retain) NSDictionary *typeAliases;
@property (retain) NSDictionary *typeBOMs;
@property bool updateScheduled;

+ (bool)dontConnectToServer;
+ (void)initialize;
+ (id)sharedManager;

- (void).cxx_destruct;
- (bool)addData:(id)arg1 toItemAtIndex:(unsigned long long)arg2 generation:(unsigned long long)arg3;
- (id)bomCheckTypes;
- (void)clearLocalPasteboardInformation;
- (id /* block */)completionBlock;
- (id)connection;
- (id)controllConnection;
- (id)controllSyncObject;
- (id)currentGeneration;
- (bool)currentGenerationHasUpdates;
- (void)dealloc;
- (int)disableCount;
- (id)disallowdTypes;
- (void)doClearLocalPasteboardInfo;
- (void)fetchPasteboardDataForProcess:(int)arg1 withCompletion:(id /* block */)arg2;
- (void)fetchPasteboardStatus:(id /* block */)arg1;
- (void)fetchPasteboardTypesForProcess:(int)arg1 withCompletion:(id /* block */)arg2;
- (id)init;
- (bool)isRemotePasteboardAvaliable;
- (id /* block */)localPasteboardWasFetched;
- (id)pasteboardReadQ;
- (void)pickupLocalChanges:(id)arg1 iterNumber:(long long)arg2 completionHandler:(id /* block */)arg3;
- (bool)remotePasteboardAvaliable;
- (bool)requestPasteboardFetchReturnEarly;
- (void)requestRemotePasteboardDataForProcess:(int)arg1 withCompletion:(id /* block */)arg2;
- (void)requestRemotePasteboardTypesForProcess:(int)arg1 withCompletion:(id /* block */)arg2;
- (void)sendUpdateToServer;
- (id)serializeItem:(id)arg1 intoInfo:(id)arg2 withFile:(id)arg3;
- (id)serializeType:(id)arg1 intoInfo:(id)arg2 withFile:(id)arg3;
- (id)serverQ;
- (void)setBomCheckTypes:(id)arg1;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setConnection:(id)arg1;
- (void)setControllConnection:(id)arg1;
- (void)setControllSyncObject:(id)arg1;
- (void)setCurrentGeneration:(id)arg1;
- (void)setCurrentGenerationHasUpdates:(bool)arg1;
- (void)setDisableCount:(int)arg1;
- (void)setDisallowdTypes:(id)arg1;
- (void)setLocalPasteboardWasFetched:(id /* block */)arg1;
- (void)setPasteboardReadQ:(id)arg1;
- (void)setRemotePasteboardAvaliable:(bool)arg1;
- (void)setServerQ:(id)arg1;
- (void)setTypeAliases:(id)arg1;
- (void)setTypeBOMs:(id)arg1;
- (void)setUpdateScheduled:(bool)arg1;
- (void)startPreventingPasteboardSharing;
- (void)stopPreventingPasteboardSharing;
- (void)tellClientDebuggingEnabled:(bool)arg1 logFileHandle:(id)arg2;
- (id)typeAliases;
- (id)typeBOMs;
- (bool)updateScheduled;
- (void)writeLocalPasteboardToFile:(id)arg1 withCompletion:(id /* block */)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

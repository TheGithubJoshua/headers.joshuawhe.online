<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ACCiAP2ShimServerClient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AccessoryiAP2Shim.framework/ACCiAP2ShimServerClient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AccessoryiAP2Shim.framework/AccessoryiAP2Shim (1)
 */

@interface ACCiAP2ShimServerClient : NSObject {
    unsigned int  _applicationState;
    struct { 
        unsigned int val[8]; 
    }  _auditToken;
    NSString * _bundleId;
    bool  _cameraSupportedByClient;
    unsigned int  _capabilities;
    NSArray * _clientEAProtocols;
    unsigned int  _clientID;
    bool  _clientRequiresAccReset;
    bool  _entitlementForAllAccessories;
    int  _iapSessionRefCount;
    bool  _locationSupportedByClient;
    struct SBSProcessAssertion { } * _processAssertion;
    NSObject<OS_dispatch_queue> * _processAssertionQ;
    long long  _processAssertionStartTime;
    NSObject<OS_dispatch_source> * _processAssertionTimer;
    int  _processId;
    bool  _supportsAccessibility;
    NSObject<OS_xpc_object> * _xpcConnection;
}

@property (nonatomic) unsigned int applicationState;
@property (nonatomic, readonly) struct { unsigned int x1[8]; } auditToken;
@property (nonatomic, readonly) NSString *bundleId;
@property (nonatomic) bool cameraSupportedByClient;
@property (nonatomic, readonly) unsigned int capabilities;
@property (nonatomic, readonly) NSArray *clientEAProtocols;
@property (nonatomic) unsigned int clientID;
@property (nonatomic) bool clientRequiresAccReset;
@property (nonatomic, readonly) bool entitlementForAllAccessories;
@property (nonatomic, readonly) int iapSessionRefCount;
@property (nonatomic) bool locationSupportedByClient;
@property (nonatomic, readonly) struct SBSProcessAssertion { }*processAssertion;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *processAssertionQ;
@property (nonatomic, readonly) long long processAssertionStartTime;
@property (nonatomic, readonly) NSObject<OS_dispatch_source> *processAssertionTimer;
@property (nonatomic, readonly) int processId;
@property (nonatomic, readonly) bool supportsAccessibility;
@property (nonatomic, readonly) NSObject<OS_xpc_object> *xpcConnection;

- (void).cxx_destruct;
- (id)_applicationInfoForBundleIDSync:(id)arg1;
- (unsigned int)applicationState;
- (struct { unsigned int x1[8]; })auditToken;
- (id)bundleId;
- (bool)cameraSupportedByClient;
- (bool)canSendConnectionEventForAccessory:(id)arg1;
- (unsigned int)capabilities;
- (id)clientEAProtocols;
- (unsigned int)clientID;
- (bool)clientRequiresAccReset;
- (void)dealloc;
- (id)description;
- (bool)entitlementForAllAccessories;
- (int)iapSessionRefCount;
- (id)initWithCapabilities:(unsigned int)arg1 auditToken:(struct { unsigned int x1[8]; })arg2 xpcConnection:(id)arg3 eaProtocols:(id)arg4 andBundleId:(id)arg5;
- (bool)locationSupportedByClient;
- (struct SBSProcessAssertion { }*)processAssertion;
- (id)processAssertionQ;
- (long long)processAssertionStartTime;
- (id)processAssertionTimer;
- (int)processId;
- (void)releaseProcessAssertion;
- (void)setApplicationState:(unsigned int)arg1;
- (void)setCameraSupportedByClient:(bool)arg1;
- (void)setClientID:(unsigned int)arg1;
- (void)setClientRequiresAccReset:(bool)arg1;
- (void)setLocationSupportedByClient:(bool)arg1;
- (bool)supportsAccessibility;
- (void)takeProcessAssertion:(id)arg1;
- (id)xpcConnection;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

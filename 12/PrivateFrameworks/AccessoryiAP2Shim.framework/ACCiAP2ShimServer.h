<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ACCiAP2ShimServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AccessoryiAP2Shim.framework/ACCiAP2ShimServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AccessoryiAP2Shim.framework/AccessoryiAP2Shim (1)
 */

@interface ACCiAP2ShimServer : NSObject {
    NSMutableDictionary * _accessoryViaAccessoryUIDList;
    NSMutableDictionary * _accessoryViaConnectionIDList;
    NSLock * _clientLock;
    NSMutableDictionary * _clients;
    NSMutableDictionary * _delegateList;
    int  _iap2AvailableNotifyToken;
    NSObject<OS_dispatch_queue> * _iap2dhighPriorityRootQueue;
    NSObject<OS_dispatch_queue> * _internalListenerQueue;
    bool  _isShuttingDown;
    NSObject<OS_dispatch_queue> * _listQueue;
    NSObject<OS_xpc_object> * _listener;
    struct __serverFlags { 
        unsigned int deathBecomesUs : 1; 
        unsigned int serverExiting : 1; 
        unsigned int reserved : 30; 
    }  _serverFlags;
}

@property (nonatomic, retain) NSMutableDictionary *accessoryViaAccessoryUIDList;
@property (nonatomic, retain) NSMutableDictionary *accessoryViaConnectionIDList;
@property (readonly) NSLock *clientLock;
@property (readonly) NSMutableDictionary *clients;
@property (nonatomic, retain) NSMutableDictionary *delegateList;
@property (readonly) int iap2AvailableNotifyToken;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *iap2dhighPriorityRootQueue;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *internalListenerQueue;
@property (nonatomic, readonly) bool isShuttingDown;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *listQueue;
@property (nonatomic, readonly) NSObject<OS_xpc_object> *listener;
@property (readonly) struct __serverFlags { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 30; } serverFlags;

+ (void)postNSDistributeNotificationType:(id)arg1 notifyDict:(id)arg2;
+ (void)postNotifydNotificationType:(id)arg1;
+ (void)postiAP2AppNotificationType:(id)arg1 notifyDict:(id)arg2;
+ (void)postiAP2NotificationType:(id)arg1 notifyDict:(id)arg2;
+ (void)resetServerState;
+ (id)sharedInstance;
+ (id)stringForClientID:(unsigned int)arg1;

- (void).cxx_destruct;
- (void)_addAccessory:(id)arg1;
- (void)_addDelegate:(id)arg1;
- (void)_attachAccessory:(id)arg1;
- (void)_detachAccessory:(id)arg1;
- (id)_findAccessoryForAccessoryUID:(id)arg1;
- (id)_findAccessoryForConnectionID:(unsigned int)arg1;
- (void)_iterateAccessories:(id /* block */)arg1;
- (void)_iterateDelegates:(id /* block */)arg1;
- (void)_pollForDeathAfterPromptCompletes;
- (void)_removeAccessory:(id)arg1;
- (void)_removeDelegate:(id)arg1;
- (void)_stopServer;
- (void)_takeClientAssertionsForAccessoryConnection;
- (void)_takeClientAssertionsForAccessoryDisconnection;
- (id)accessoryViaAccessoryUIDList;
- (id)accessoryViaConnectionIDList;
- (void)addAccessory:(id)arg1;
- (unsigned int)addClientWithCapabilities:(unsigned int)arg1 auditToken:(struct { unsigned int x1[8]; })arg2 currentClientID:(unsigned int)arg3 xpcConnection:(id)arg4 eaProtocols:(id)arg5 notifyOfAlreadyConnectedAccessories:(bool)arg6 andBundleId:(id)arg7;
- (void)addDelegate:(id)arg1;
- (id)clientLock;
- (id)clients;
- (void)dealloc;
- (id)delegateList;
- (id)findAccessoryForAccessoryUID:(id)arg1;
- (id)findAccessoryForConnectionID:(unsigned int)arg1;
- (id)findClientWithID:(unsigned int)arg1;
- (id)findClientWithXPCConnection:(id)arg1;
- (unsigned int)generateClientID;
- (int)iap2AvailableNotifyToken;
- (id)iap2dhighPriorityRootQueue;
- (id)init;
- (id)internalListenerQueue;
- (bool)isShuttingDown;
- (void)iterateAccessoriesAsync:(id /* block */)arg1;
- (void)iterateAccessoriesSync:(id /* block */)arg1;
- (void)iterateDelegatesAsync:(id /* block */)arg1;
- (void)iterateDelegatesSync:(id /* block */)arg1;
- (id)listQueue;
- (id)listener;
- (void)notifyEAClient:(id)arg1 ofAccessoryEvent:(const char *)arg2 accessory:(id)arg3;
- (void)notifyEAClientsOfAccessoryConnection:(id)arg1;
- (void)notifyEAClientsOfAccessoryDisconnection:(id)arg1;
- (void)notifyEAClientsOfAccessoryEvent:(const char *)arg1 accessory:(id)arg2;
- (void)notifyEAClientsOfAccessoryReconnection:(id)arg1;
- (void)processDetachXPCConnection:(id)arg1;
- (bool)processXPCMessage:(id)arg1 connection:(id)arg2;
- (void)removeAccessory:(id)arg1;
- (void)removeAllClients;
- (void)removeClientForXPCConnection:(id)arg1;
- (void)removeClientWithID:(unsigned int)arg1;
- (void)removeDelegate:(id)arg1;
- (struct __serverFlags { unsigned int x1 : 1; unsigned int x2 : 1; unsigned int x3 : 30; })serverFlags;
- (void)setAccessoryViaAccessoryUIDList:(id)arg1;
- (void)setAccessoryViaConnectionIDList:(id)arg1;
- (void)setDelegateList:(id)arg1;
- (void)startServer;
- (void)stopServer;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NFLSubBatchLayoutTilingOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsFeedLayout.framework/NFLSubBatchLayoutTilingOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsFeedLayout.framework/NewsFeedLayout (2166)
 */

@interface NFLSubBatchLayoutTilingOperation : FCOperation {
    NFLFeedSettings * _feedSettings;
    struct { 
        long long typeACellType; 
        long long typeAColumnSpan; 
        long long typeARowSpan; 
        long long typeBCellType; 
        long long typeBColumnSpan; 
        long long typeBRowSpan; 
        long long typeCCellType; 
        long long typeCColumnSpan; 
        long long typeCRowSpan; 
    }  _layoutSeed;
    NFLRankedLayoutSource * _rankedLayoutSource;
    NFLSubBatchLayout * _result;
    bool  _showingAccessoryText;
    NSArray * _tileInfos;
    double  _tileProminenceScoreBalanceValue;
    id /* block */  _tilingCompletionBlock;
}

@property (copy) NFLFeedSettings *feedSettings;
@property (nonatomic) struct { long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; } layoutSeed;
@property (retain) NFLRankedLayoutSource *rankedLayoutSource;
@property (nonatomic, copy) NFLSubBatchLayout *result;
@property (getter=isShowingAccessoryText, nonatomic) bool showingAccessoryText;
@property (copy) NSArray *tileInfos;
@property double tileProminenceScoreBalanceValue;
@property (copy) id /* block */ tilingCompletionBlock;

+ (bool)mayTileInfosTileSubBatchLayout:(id)arg1 withLayoutSeed:(struct { long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; })arg2;
+ (bool)tileInfosHaveValidType:(id)arg1;
+ (unsigned long long)tileInfosUsedCount;
+ (bool)validTileInfoType:(id)arg1;

- (void).cxx_destruct;
- (id)feedSettings;
- (id)init;
- (id)initWithTileInfos:(id)arg1 feedSettings:(id)arg2 rankedLayoutSource:(id)arg3 tileProminenceScoreBalanceValue:(double)arg4 layoutSeed:(struct { long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; })arg5 showingAccessoryText:(bool)arg6;
- (bool)isReliable;
- (bool)isShowingAccessoryText;
- (struct { long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; })layoutSeed;
- (void)operationWillFinishWithError:(id)arg1;
- (void)performOperation;
- (id)rankedLayoutRequests;
- (id)rankedLayoutSource;
- (id)result;
- (void)setFeedSettings:(id)arg1;
- (void)setLayoutSeed:(struct { long long x1; long long x2; long long x3; long long x4; long long x5; long long x6; long long x7; long long x8; long long x9; })arg1;
- (void)setRankedLayoutSource:(id)arg1;
- (void)setResult:(id)arg1;
- (void)setShowingAccessoryText:(bool)arg1;
- (void)setTileInfos:(id)arg1;
- (void)setTileProminenceScoreBalanceValue:(double)arg1;
- (void)setTilingCompletionBlock:(id /* block */)arg1;
- (id)tileInfos;
- (double)tileProminenceScoreBalanceValue;
- (id)tiledSubBatchLayoutWithRankedLayoutsByTileInfo:(id)arg1;
- (id /* block */)tilingCompletionBlock;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

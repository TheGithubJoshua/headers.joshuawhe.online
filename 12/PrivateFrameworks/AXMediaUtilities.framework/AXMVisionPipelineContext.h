<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AXMVisionPipelineContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AXMediaUtilities.framework/AXMVisionPipelineContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AXMediaUtilities.framework/AXMediaUtilities (1)
 */

@interface AXMVisionPipelineContext : NSObject <NSSecureCoding> {
    AXMVisionAnalysisOptions * _analysisOptions;
    NSNumber * _appliedImageOrientation;
    <NSCopying> * _cacheKey;
    struct CGSize { 
        double width; 
        double height; 
    }  _cachedSize;
    AXMDiagnostics * _diagnostics;
    NSError * _error;
    bool  _evaluationExclusivelyUsesVisionFramework;
    struct CGColorSpace { } * _extendedSRGBColorSpace;
    NSMutableArray * _features;
    struct __CVBuffer { } * _nativeFormatPixelBuffer;
    AXMDiagnosticMetricToken * _processingDiagnosticToken;
    AXMVisionResult * _result;
    NSMutableArray * _resultHandlers;
    unsigned long long  _sequenceID;
    bool  _shouldCallCompletionHandlersForEmptyResultSet;
    bool  _shouldCallCompletionHandlersForEngineBusyError;
    bool  _shouldProcessRemotely;
    CIImage * _sourceImage;
    NSDictionary * _sourceParameters;
    bool  _sourceProvidesOwnResults;
    VNImageRequestHandler * _visionImageRequestHandler;
}

@property (nonatomic, retain) AXMVisionAnalysisOptions *analysisOptions;
@property (nonatomic, retain) NSNumber *appliedImageOrientation;
@property (nonatomic, retain) <NSCopying> *cacheKey;
@property (nonatomic, retain) AXMDiagnostics *diagnostics;
@property (nonatomic, retain) NSError *error;
@property (nonatomic) bool evaluationExclusivelyUsesVisionFramework;
@property (nonatomic, retain) NSMutableArray *features;
@property (nonatomic, retain) AXMVisionResult *result;
@property (nonatomic, readonly) NSArray *resultHandlers;
@property (nonatomic) unsigned long long sequenceID;
@property (nonatomic) bool shouldCallCompletionHandlersForEmptyResultSet;
@property (nonatomic) bool shouldCallCompletionHandlersForEngineBusyError;
@property (nonatomic) bool shouldProcessRemotely;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } size;
@property (nonatomic, readonly) bool sourceProvidesResults;
@property (nonatomic, retain) VNImageRequestHandler *visionImageRequestHandler;
@property (nonatomic, readonly) bool visionImageRequestHandlerIsLoaded;

+ (id)contextWithSourceParameters:(id)arg1 options:(id)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_commonInit;
- (void)_discardSourceImageIfPossible;
- (void)addResultHandler:(id /* block */)arg1;
- (void)addResultHandlers:(id)arg1;
- (id)analysisOptions;
- (id)analyzeBuffer:(id /* block */)arg1;
- (void)appendFeature:(id)arg1;
- (id)appliedImageOrientation;
- (id)cacheKey;
- (void)dealloc;
- (id)description;
- (id)diagnostics;
- (void)didFinishProcessingContext;
- (void)encodeWithCoder:(id)arg1;
- (id)error;
- (void)errorOccurred:(id)arg1;
- (bool)evaluationExclusivelyUsesVisionFramework;
- (id)features;
- (id)generateFileNameForImageWithPrefix:(id)arg1 extension:(id)arg2;
- (id)generateImageRepresentation;
- (struct CGColorSpace { }*)imageColorSpace;
- (id)initWithCoder:(id)arg1;
- (id)initWithSourceParameters:(id)arg1 options:(id)arg2;
- (struct __CVBuffer { }*)nativeFormatPixelBufferRenderIfNeeded:(bool)arg1;
- (void)produceImage:(id /* block */)arg1;
- (id)result;
- (id)resultHandlers;
- (unsigned long long)sequenceID;
- (void)setAnalysisOptions:(id)arg1;
- (void)setAppliedImageOrientation:(id)arg1;
- (void)setCacheKey:(id)arg1;
- (void)setDiagnostics:(id)arg1;
- (void)setError:(id)arg1;
- (void)setEvaluationExclusivelyUsesVisionFramework:(bool)arg1;
- (void)setFeatures:(id)arg1;
- (void)setResult:(id)arg1;
- (void)setSequenceID:(unsigned long long)arg1;
- (void)setShouldCallCompletionHandlersForEmptyResultSet:(bool)arg1;
- (void)setShouldCallCompletionHandlersForEngineBusyError:(bool)arg1;
- (void)setShouldProcessRemotely:(bool)arg1;
- (void)setVisionImageRequestHandler:(id)arg1;
- (bool)shouldCallCompletionHandlersForEmptyResultSet;
- (bool)shouldCallCompletionHandlersForEngineBusyError;
- (bool)shouldProcessRemotely;
- (struct CGSize { double x1; double x2; })size;
- (bool)sourceProvidesResults;
- (id)visionImageRequestHandler;
- (bool)visionImageRequestHandlerIsLoaded;
- (id)visionImageRequestHandlerWithOptions:(id)arg1;
- (void)willBeginProcessingContext;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

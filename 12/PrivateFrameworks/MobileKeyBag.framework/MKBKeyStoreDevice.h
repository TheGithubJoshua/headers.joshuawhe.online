<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MKBKeyStoreDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MobileKeyBag.framework/MKBKeyStoreDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MobileKeyBag.framework/MobileKeyBag (1.0)
 */

@interface MKBKeyStoreDevice : NSObject

+ (id)sharedService;

- (int)ChangeSystemSecretWithEscrow:(id)arg1 FromOldPasscode:(id)arg2 ToNew:(id)arg3 withOpaqueDats:(id)arg4 withKeepState:(int)arg5;
- (int)Event:(int)arg1;
- (bool)MKBUserSessionSetInternalTest:(bool)arg1 WithReturnedError:(id*)arg2;
- (int)SeshatDebug:(int)arg1;
- (int)SeshatEnroll:(id)arg1;
- (int)SeshatRecover:(id)arg1;
- (int)SeshatUnlock:(id)arg1;
- (id)_CreateMKBServerConnection;
- (bool)addSyncServiceSource:(id)arg1 ToUserSessionWithID:(int)arg2 WithReturnedError:(id*)arg3;
- (int)changeClassKeysGenerationWithSecret:(id)arg1 withGenerationOption:(int)arg2;
- (int)changeSystemSecretFromOldPasscode:(id)arg1 ToNew:(id)arg2 withOpaqueData:(id)arg3;
- (id)configureLoginUI:(int)arg1 WithReturnedError:(id*)arg2;
- (id)copySytemSecretBlob;
- (id)createUserSession:(id)arg1 withSecret:(id)arg2 withOpaqueData:(id)arg3 withreturnedError:(id*)arg4;
- (int)currentSyncBubbledIDWithReturnedError:(id*)arg1;
- (bool)deleteUserSessionBlobWithReturnedError:(id*)arg1;
- (bool)deleteUserSessionSecureBlobWithReturnedError:(id*)arg1;
- (id)foregroundUserSessionAtrributesWithReturnedError:(id*)arg1;
- (id)getBackupkeyForInodeOrCryptoID:(unsigned long long)arg1 withreturnValue:(int*)arg2;
- (bool)getDeviceLockStateForUser:(int)arg1 extendedState:(bool)arg2 withLockStateInfo:(int*)arg3;
- (id)getFileHandleForData:(id)arg1;
- (id)getLockStateForUser:(int)arg1;
- (bool)isDeviceInLoginSessionWithReturnedError:(id*)arg1;
- (int)isKeyRollingWithKeyStatus:(int*)arg1;
- (int)limitNumberOfUserSessionsTo:(int)arg1 WithReturnedError:(id*)arg2;
- (id)listAllUserSessionIDSWithReturnedError:(id*)arg1;
- (id)listAllUserSyncBubbleIDsWithReturnedError:(id*)arg1;
- (id)listSyncServiceSourcesForUserSession:(id)arg1 WithReturnedError:(id*)arg2;
- (id)loadUserSession:(id)arg1 withSecret:(id)arg2 withreturnedError:(id*)arg3;
- (int)migrateFS;
- (id)migrateUserSession:(id)arg1 fromPath:(id)arg2 withSecret:(id)arg3 withOpaqueData:(id)arg4 withreturnedError:(id*)arg5;
- (bool)mountUserSessionVolumeforID:(int)arg1 WithReturnedError:(id*)arg2;
- (int)passcodeUnlockFailed;
- (int)passcodeUnlockStart;
- (int)passcodeUnlockSuccess;
- (int)registerOTABackup:(id)arg1 withSecret:(id)arg2;
- (bool)removeAllUserSyncBubbleIDsWithReturnedError:(id*)arg1;
- (bool)removeSyncServiceSource:(id)arg1 ToUserSessionWithID:(int)arg2 WithReturnedError:(id*)arg3;
- (bool)removeUserSession:(id)arg1 withreturnedError:(id*)arg2;
- (id)retriveUserSessionBlobWithreturnedError:(id*)arg1;
- (id)retriveUserSessionSecureBlobWithreturnedError:(id*)arg1;
- (bool)setUserSessionDeviceConfigurations:(int)arg1 WithReturnedError:(id*)arg2;
- (bool)setUserSessionSecureBackupBlob:(id)arg1 WithReturnedError:(id*)arg2;
- (id)setuserSessionAttributes:(id)arg1 WithReturnedError:(id*)arg2;
- (int)startBackupSession;
- (bool)startUserSyncBubbleToSession:(int)arg1 WithReturnedError:(id*)arg2;
- (int)stashCommit;
- (int)stashCreateWithSecret:(id)arg1 withMode:(int)arg2;
- (int)stashDestroy;
- (id)stashLoad;
- (int)stashVerifywithValidity:(int*)arg1;
- (int)stopBackupSession;
- (bool)stopUserSyncBubbleToSession:(int)arg1 WithReturnedError:(id*)arg2;
- (id)switchBlockTasksInfoWithReturnedError:(id*)arg1;
- (bool)switchToLoginUIWithReturnedError:(id*)arg1;
- (bool)switchUserSession:(id)arg1 withOpaqueData:(id)arg2 withreturnedError:(id*)arg3;
- (bool)unloadUserSession:(id)arg1 withreturnedError:(id*)arg2;
- (bool)unmountUserSessionVolumeforID:(int)arg1 WithReturnedError:(id*)arg2;
- (id)userSessionAttributesForSession:(id)arg1 WithReturnedError:(id*)arg2;
- (id)userSessionLRUInfoWithReturnedError:(id*)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ACCExternalAccessoryProvider.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreAccessories.framework/ACCExternalAccessoryProvider.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreAccessories.framework/CoreAccessories (1)
 */

@interface ACCExternalAccessoryProvider : NSObject <ACCExternalAccessoryXPCClientProtocol> {
    int  _clientCapabilities;
    NSMutableSet * _currentlyConnectedAccessories;
    <ACCExternalAccessoryProviderProtocol> * _delegate;
    NSDictionary * _eaClientRegistrationInfo;
    <ACCExternalAccessoryXPCServerProtocol> * _remoteObject;
    NSXPCConnection * _serverConnection;
}

@property (nonatomic) int clientCapabilities;
@property (nonatomic, retain) NSMutableSet *currentlyConnectedAccessories;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ACCExternalAccessoryProviderProtocol> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSDictionary *eaClientRegistrationInfo;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <ACCExternalAccessoryXPCServerProtocol> *remoteObject;
@property (nonatomic, retain) NSXPCConnection *serverConnection;
@property (readonly) Class superclass;

+ (id)accessoryDictionaryForLogging:(id)arg1;

- (void).cxx_destruct;
- (void)ExternalAccessoryArrived:(id)arg1;
- (void)ExternalAccessoryLeft:(id)arg1;
- (void)_constructClientRegistrationInfo;
- (id)_findAccessoryForPrimaryUUID:(id)arg1;
- (void)_removeAccessoryForPrimaryUUID:(id)arg1;
- (void)_removeAllAccessories;
- (void)accessoryCloseExternalAccessorySession:(id)arg1;
- (int)clientCapabilities;
- (void)closeExternalAccessorySession:(id)arg1;
- (void)connectToServer:(bool)arg1;
- (void)createExternalAccessorySessionForProtocol:(id)arg1 accessoryUUID:(id)arg2 withEASessionReply:(id /* block */)arg3;
- (id)currentVehicleInfo:(id)arg1;
- (id)currentlyConnectedAccessories;
- (void)dealloc;
- (id)delegate;
- (void)destinationInformation:(id)arg1 forUUID:(id)arg2;
- (void)destinationSharingStatus:(bool)arg1 forDestinationUUID:(id)arg2 supportedParams:(id)arg3 forUUID:(id)arg4;
- (id)eaClientRegistrationInfo;
- (void)enqueueLocationNMEASentence:(id)arg1 forUUID:(id)arg2;
- (void)handleIncomingExternalAccessoryData:(id)arg1 forEASessionIdentifier:(id)arg2 withReply:(id /* block */)arg3;
- (id)initWithDelegate:(id)arg1 capabilities:(int)arg2;
- (void)openSocketForAccessoryToApp:(id)arg1;
- (void)openSocketForAppToAccessory:(id)arg1;
- (id)remoteObject;
- (void)requestAccessoryWifiCredentials:(id)arg1;
- (void)resumeEASessionData:(id)arg1;
- (void)sendDeviceIdentifierNotification:(id)arg1 usbIdentifier:(id)arg2 forUUID:(id)arg3;
- (void)sendGPRMCDataStatus:(bool)arg1 ValueV:(bool)arg2 ValueX:(bool)arg3 forAccessoryUUID:(id)arg4;
- (void)sendNMEAFilterList:(id)arg1 forAccessoryUUID:(id)arg2;
- (void)sendOutgoingExternalAccessoryData:(id)arg1 forEASessionIdentifier:(id)arg2 withReply:(id /* block */)arg3;
- (id)serverConnection;
- (void)setClientCapabilities:(int)arg1;
- (void)setCurrentlyConnectedAccessories:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEaClientRegistrationInfo:(id)arg1;
- (void)setRemoteObject:(id)arg1;
- (void)setServerConnection:(id)arg1;
- (void)startDestinationSharingForUUID:(id)arg1 options:(unsigned long long)arg2;
- (void)startLocationInformationForAccessoryUUID:(id)arg1;
- (void)stopDestinationSharingForUUID:(id)arg1;
- (void)stopLocationInformationForAccessoryUUID:(id)arg1;
- (void)updateAccessoryInfo:(id)arg1 forUUID:(id)arg2;
- (void)vehicleStatusUpdate:(id)arg1 forUUID:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

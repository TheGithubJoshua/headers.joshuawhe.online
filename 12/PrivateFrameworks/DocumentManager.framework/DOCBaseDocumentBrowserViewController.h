<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DOCBaseDocumentBrowserViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/DocumentManager.framework/DOCBaseDocumentBrowserViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/DocumentManager.framework/DocumentManager (68.100.44)
 */

@interface DOCBaseDocumentBrowserViewController : UIDocumentBrowserViewController <DOCDocumentBrowserDelegate> {
    DOCBrowserViewController * _effectiveBrowserViewController;
    bool  _requestingDocumentCreation;
    NSArray * _selectedItems;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) DOCBrowserViewController *effectiveBrowserViewController;
@property (readonly) unsigned long long hash;
@property (copy) NSArray *selectedItems;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)browser:(id)arg1 didCommitPreviewOfDocument:(id)arg2;
- (void)browser:(id)arg1 didPickItem:(id)arg2;
- (void)browser:(id)arg1 didResolveShownLocation:(id)arg2 previousLocation:(id)arg3;
- (void)browser:(id)arg1 didSelectItems:(id)arg2;
- (void)browser:(id)arg1 didUpdateCurrentLocationCanSelect:(bool)arg2;
- (void)browser:(id)arg1 didUpdateCurrentLocationIsWritable:(bool)arg2;
- (void)browser:(id)arg1 didUpdateImportSupportInCurrentLocation:(bool)arg2;
- (void)browser:(id)arg1 didUpdateNumberOfSelectableItems:(unsigned long long)arg2;
- (void)browser:(id)arg1 isDisplayingEmptyCollection:(bool)arg2;
- (void)browser:(id)arg1 wantsToShowInfoForItem:(id)arg2;
- (void)browser:(id)arg1 wantsToShowLocation:(id)arg2 forceReplaceLocation:(bool)arg3;
- (void)browserDidFinishGatheringItemsAndThumbnails:(id)arg1;
- (void)browserWantsToCreateNewFile:(id)arg1;
- (void)browserWantsToCreateNewFolder:(id)arg1 maxThumbnailSize:(struct CGSize { double x1; double x2; })arg2;
- (void)clearCurrentOpenInteraction;
- (void)createDocumentAtCurrentLocation;
- (void)createDocumentAtLocation:(id)arg1;
- (void)dismissAllPresentedViewControllers:(bool)arg1 completion:(id /* block */)arg2;
- (void)dismissButtonWasTappedInBrowser:(id)arg1;
- (void)dismissDocumentManager;
- (id)effectiveBrowserViewController;
- (void)importDocumentAtURL:(id)arg1 mode:(unsigned long long)arg2 toCurrentBrowserLocationWithCompletion:(id /* block */)arg3;
- (void)importDocumentAtURL:(id)arg1 mode:(unsigned long long)arg2 toLocation:(id)arg3 completion:(id /* block */)arg4;
- (void)importDocumentAtURL:(id)arg1 nextToDocumentAtURL:(id)arg2 mode:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)locationsButtonWasTappedInBrowser:(id)arg1 sourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)notifyDelegateOfImportOfURL:(id)arg1 destinationURL:(id)arg2 error:(id)arg3;
- (void)revealDocumentAtURL:(id)arg1 importIfNeeded:(bool)arg2 completion:(id /* block */)arg3;
- (id)selectedItems;
- (void)setSelectedItems:(id)arg1;
- (void)showContentForLocation:(id)arg1;
- (void)showLocation:(id)arg1 animated:(bool)arg2 withCompletionBlock:(id /* block */)arg3;
- (id)transitionControllerForDocumentAtURL:(id)arg1;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CDPDStateMachine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreCDPInternal.framework/CDPDStateMachine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal (1)
 */

@interface CDPDStateMachine : NSObject <CDPDCircleDelegate, CDPDSecureBackupDelegate> {
    bool  _attemptedCDPEnable;
    CDPDCircleController * _circleController;
    CDPContext * _context;
    CDPDPCSController * _pcsController;
    CDPDSecureBackupController * _secureBackupController;
    <CDPStateUIProviderInternal> * _uiProvider;
}

@property (nonatomic) bool attemptedCDPEnable;
@property (nonatomic, retain) CDPDCircleController *circleController;
@property (nonatomic, retain) CDPContext *context;
@property (nonatomic, retain) CDPDPCSController *pcsController;
@property (nonatomic, retain) CDPDSecureBackupController *secureBackupController;
@property (nonatomic, retain) <CDPStateUIProviderInternal> *uiProvider;

- (void).cxx_destruct;
- (void)_attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:(id)arg1 localSecretType:(unsigned long long)arg2 useCachedSecret:(bool)arg3 circleJoinResult:(id)arg4 completion:(id /* block */)arg5;
- (void)_attemptBackupRecoveryWithLocalSecret:(id)arg1 type:(unsigned long long)arg2 useCachedSecret:(bool)arg3 circleJoinResult:(id)arg4 completion:(id /* block */)arg5;
- (void)_attemptCDPEnable:(id /* block */)arg1;
- (void)_authenticatedRepairCloudDataProtectionStateWithCompletion:(id /* block */)arg1;
- (void)_authenticatedShouldPerformRepairWithCompletion:(id /* block */)arg1;
- (void)_confirmCDPEligibilityWithCompletion:(id /* block */)arg1;
- (void)_disableCloudDataProtectionWithCompletion:(id /* block */)arg1;
- (void)_enableKVSForAccount:(id)arg1 store:(id)arg2 completion:(id /* block */)arg3;
- (void)_enableSecureBackupWithCircleJoinResult:(id)arg1 completion:(id /* block */)arg2;
- (void)_enrollOrDisableCDPAfterEnabledStateVerified:(id /* block */)arg1;
- (void)_handleCloudDataProtectionStateWithCompletion:(id /* block */)arg1;
- (void)_handleInteractiveRecoveryFlowWithCircleJoinResult:(id)arg1 completion:(id /* block */)arg2;
- (void)_handleJoinResult:(id)arg1 completion:(id /* block */)arg2;
- (void)_handlePreflightError:(id)arg1 completion:(id /* block */)arg2;
- (void)_handleRecoveryResetRequestWithCompletion:(id /* block */)arg1;
- (void)_handleiCDPStatusCheckError:(id)arg1 completion:(id /* block */)arg2;
- (void)_performInteractivelyAuthenticatedRepair:(id /* block */)arg1;
- (void)_postRecoveryEnableSecureBackupWithContext:(id)arg1 completion:(id /* block */)arg2;
- (id)_predicateForRecordUpgradeCheck;
- (id)_predicateForRecordUpgradeCheckIgnoringBottled;
- (void)_preflightAccountStateWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)_recoverSecureBackupWithCircleJoinResult:(id)arg1 completion:(id /* block */)arg2;
- (void)_refreshAndAuthenticateWithContext:(id)arg1;
- (void)_resetAccountCDPStateWithCompletion:(id /* block */)arg1;
- (bool)attemptedCDPEnable;
- (id)circleController;
- (void)circleController:(id)arg1 secureBackupRecordsArePresentWithCompletion:(id /* block */)arg2;
- (id)circlePeerIDForSecureBackupController:(id)arg1;
- (id)context;
- (id)contextForController:(id)arg1;
- (void)dealloc;
- (void)handleCloudDataProtectionStateWithCompletion:(id /* block */)arg1;
- (id)initWithContext:(id)arg1 uiProvider:(id)arg2;
- (id)pcsController;
- (void)promptForAdoptionOfMultipleICSCWithCompletion:(id /* block */)arg1;
- (void)promptForLocalSecretWithCompletion:(id /* block */)arg1;
- (void)repairCloudDataProtectionStateWithCompletion:(id /* block */)arg1;
- (id)secureBackupController;
- (id)secureChannelContextForController:(id)arg1;
- (void)setAttemptedCDPEnable:(bool)arg1;
- (void)setCircleController:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setPcsController:(id)arg1;
- (void)setSecureBackupController:(id)arg1;
- (void)setUiProvider:(id)arg1;
- (bool)shouldAllowCDPEnrollment;
- (void)shouldPerformRepairWithCompletion:(id /* block */)arg1;
- (bool)synchronizeCircleViewsForSecureBackupContext:(id)arg1;
- (id)uiProvider;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WLKChannelDetails.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WatchListKit.framework/WLKChannelDetails.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit (1)
 */

@interface WLKChannelDetails : NSObject <WLKInstallable> {
    bool  _apSubscription;
    NSArray * _appAdamIDs;
    NSArray * _appBundleIDs;
    bool  _appInstalled;
    NSString * _appName;
    NSString * _appStoreURLString;
    NSString * _channelID;
    unsigned long long  _channelType;
    bool  _consented;
    bool  _firstParty;
    WLKArtworkVariantListing * _images;
    bool  _itunes;
    NSString * _minRequiredAppVersion;
    NSString * _name;
    NSDictionary * _rateLimit;
    bool  _requiresAccountLevelConsent;
    bool  _requiresSubscriptionForConsent;
    bool  _shouldIncludeInConsent;
    bool  _shouldPromptForConsentOnSubscriptionChange;
    bool  _shouldTrackPlayActivity;
    bool  _subscribed;
    bool  _watchListEnabled;
}

@property (getter=isApSubscription, nonatomic, readonly) bool apSubscription;
@property (nonatomic, readonly, copy) NSArray *appAdamIDs;
@property (nonatomic, readonly, copy) NSArray *appBundleIDs;
@property (getter=isAppInstalled, nonatomic, readonly) bool appInstalled;
@property (nonatomic, readonly, copy) NSString *appName;
@property (nonatomic, readonly, copy) NSURL *appStoreURL;
@property (nonatomic, copy) NSString *appStoreURLString;
@property (nonatomic, readonly, copy) NSString *channelID;
@property (nonatomic, readonly) unsigned long long channelType;
@property (getter=isConsented, nonatomic, readonly) bool consented;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isFirstParty, nonatomic, readonly) bool firstParty;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) WLKArtworkVariantListing *images;
@property (getter=isiTunes, nonatomic, readonly) bool itunes;
@property (nonatomic, readonly) NSString *minRequiredAppVersion;
@property (nonatomic, readonly, copy) NSString *name;
@property (nonatomic, readonly) NSDictionary *rateLimit;
@property (nonatomic, readonly) bool requiresAccountLevelConsent;
@property (nonatomic, readonly) bool requiresSubscriptionForConsent;
@property (nonatomic, readonly) bool shouldIncludeInConsent;
@property (nonatomic, readonly) bool shouldPromptForConsentOnSubscriptionChange;
@property (nonatomic, readonly) bool shouldTrackPlayActivity;
@property (getter=isSubscribed, nonatomic, readonly) bool subscribed;
@property (readonly) Class superclass;
@property (getter=isWatchListEnabled, nonatomic, readonly) bool watchListEnabled;

- (void).cxx_destruct;
- (id)appAdamIDs;
- (id)appBundleIDs;
- (id)appIconURLForSize:(struct CGSize { double x1; double x2; })arg1;
- (id)appName;
- (id)appStoreURL;
- (id)appStoreURLString;
- (id)channelID;
- (unsigned long long)channelType;
- (id)description;
- (id)images;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (bool)isApSubscription;
- (bool)isAppInstalled;
- (bool)isConsented;
- (bool)isFirstParty;
- (bool)isSubscribed;
- (bool)isWatchListEnabled;
- (bool)isiTunes;
- (id)minRequiredAppVersion;
- (id)name;
- (id)rateLimit;
- (bool)requiresAccountLevelConsent;
- (bool)requiresSubscriptionForConsent;
- (void)setAppStoreURLString:(id)arg1;
- (bool)shouldIncludeInConsent;
- (bool)shouldPromptForConsentOnSubscriptionChange;
- (bool)shouldTrackPlayActivity;
- (id)sui_channelName;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

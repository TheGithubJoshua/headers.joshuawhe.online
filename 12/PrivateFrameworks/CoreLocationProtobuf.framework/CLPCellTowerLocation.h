<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CLPCellTowerLocation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreLocationProtobuf.framework/CLPCellTowerLocation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreLocationProtobuf.framework/CoreLocationProtobuf
 */

@interface CLPCellTowerLocation : PBCodable <NSCopying> {
    NSString * _appBundleId;
    int  _arfcn;
    int  _ci;
    int  _ecn0;
    struct { 
        unsigned int arfcn : 1; 
        unsigned int ecn0 : 1; 
        unsigned int psc : 1; 
        unsigned int rat : 1; 
        unsigned int rscp : 1; 
        unsigned int serverHash : 1; 
        unsigned int transmit : 1; 
    }  _has;
    int  _lac;
    CLPLocation * _location;
    int  _mcc;
    int  _mnc;
    CLPCellNeighborsGroup * _neighborGroup;
    NSMutableArray * _neighbors;
    NSString * _operatorName;
    int  _psc;
    int  _rat;
    int  _rscp;
    int  _rssi;
    int  _serverHash;
    int  _transmit;
}

@property (nonatomic, retain) NSString *appBundleId;
@property (nonatomic) int arfcn;
@property (nonatomic) int ci;
@property (nonatomic) int ecn0;
@property (nonatomic, readonly) bool hasAppBundleId;
@property (nonatomic) bool hasArfcn;
@property (nonatomic) bool hasEcn0;
@property (nonatomic, readonly) bool hasNeighborGroup;
@property (nonatomic, readonly) bool hasOperatorName;
@property (nonatomic) bool hasPsc;
@property (nonatomic) bool hasRat;
@property (nonatomic) bool hasRscp;
@property (nonatomic) bool hasServerHash;
@property (nonatomic) bool hasTransmit;
@property (nonatomic) int lac;
@property (nonatomic, retain) CLPLocation *location;
@property (nonatomic) int mcc;
@property (nonatomic) int mnc;
@property (nonatomic, retain) CLPCellNeighborsGroup *neighborGroup;
@property (nonatomic, retain) NSMutableArray *neighbors;
@property (nonatomic, retain) NSString *operatorName;
@property (nonatomic) int psc;
@property (nonatomic) int rat;
@property (nonatomic) int rscp;
@property (nonatomic) int rssi;
@property (nonatomic) int serverHash;
@property (nonatomic) int transmit;

+ (Class)neighborType;

- (void).cxx_destruct;
- (void)addNeighbor:(id)arg1;
- (id)appBundleId;
- (int)arfcn;
- (int)ci;
- (void)clearNeighbors;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (int)ecn0;
- (bool)hasAppBundleId;
- (bool)hasArfcn;
- (bool)hasEcn0;
- (bool)hasNeighborGroup;
- (bool)hasOperatorName;
- (bool)hasPsc;
- (bool)hasRat;
- (bool)hasRscp;
- (bool)hasServerHash;
- (bool)hasTransmit;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (int)lac;
- (id)location;
- (int)mcc;
- (void)mergeFrom:(id)arg1;
- (int)mnc;
- (id)neighborAtIndex:(unsigned long long)arg1;
- (id)neighborGroup;
- (id)neighbors;
- (unsigned long long)neighborsCount;
- (id)operatorName;
- (int)psc;
- (int)rat;
- (bool)readFrom:(id)arg1;
- (int)rscp;
- (int)rssi;
- (int)serverHash;
- (void)setAppBundleId:(id)arg1;
- (void)setArfcn:(int)arg1;
- (void)setCi:(int)arg1;
- (void)setEcn0:(int)arg1;
- (void)setHasArfcn:(bool)arg1;
- (void)setHasEcn0:(bool)arg1;
- (void)setHasPsc:(bool)arg1;
- (void)setHasRat:(bool)arg1;
- (void)setHasRscp:(bool)arg1;
- (void)setHasServerHash:(bool)arg1;
- (void)setHasTransmit:(bool)arg1;
- (void)setLac:(int)arg1;
- (void)setLocation:(id)arg1;
- (void)setMcc:(int)arg1;
- (void)setMnc:(int)arg1;
- (void)setNeighborGroup:(id)arg1;
- (void)setNeighbors:(id)arg1;
- (void)setOperatorName:(id)arg1;
- (void)setPsc:(int)arg1;
- (void)setRat:(int)arg1;
- (void)setRscp:(int)arg1;
- (void)setRssi:(int)arg1;
- (void)setServerHash:(int)arg1;
- (void)setTransmit:(int)arg1;
- (int)transmit;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FUFlightViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FlightUtilities.framework/FUFlightViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FlightUtilities.framework/FlightUtilities (115.11)
 */

@interface FUFlightViewController : UIViewController <FUFlightViewDelegate, MKMapViewDelegate> {
    NSString * _airlineCode;
    FUFlightView * _compactFlightView;
    <FUFlightViewControllerDelegate> * _delegate;
    unsigned long long  _displayStyle;
    NSNumber * _flightCode;
    NSArray * _flights;
    bool  _highlightCurrentFlightLeg;
    bool  _loadingFlight;
    FUFlightView * _regularFlightView;
    bool  _requiresDataLoad;
    bool  _showInfoPanel;
    NSDate * _startLoadingDate;
    bool  _viewLoaded;
}

@property (retain) NSString *airlineCode;
@property (retain) FUFlightView *compactFlightView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) NSNumber *flightCode;
@property (nonatomic, readonly) FUFlightView *flightView;
@property (nonatomic, retain) NSArray *flights;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool highlightCurrentFlightLeg;
@property (retain) FUFlightView *regularFlightView;
@property (nonatomic) long long selectedFlight;
@property (nonatomic) long long selectedLeg;
@property (nonatomic) bool showInfoPanel;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)addFittingView:(id)arg1;
- (id)airlineCode;
- (void)awakeFromNib;
- (void)commonInit;
- (id)compactFlightView;
- (void)fadeLayer:(id)arg1 visible:(bool)arg2 completionBlock:(id /* block */)arg3;
- (id)flightCode;
- (id)flightView;
- (void)flightView:(id)arg1 didSelectLeg:(long long)arg2 ofFlight:(long long)arg3;
- (id)flights;
- (void)hideView:(id)arg1;
- (bool)highlightCurrentFlightLeg;
- (id)init;
- (id)initWithFlightCode:(unsigned long long)arg1 airlineCode:(id)arg2;
- (id)initWithFlights:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithSFFlight:(id)arg1 leg:(long long)arg2 style:(unsigned long long)arg3 delegate:(id)arg4;
- (id)initWithSFFlights:(id)arg1;
- (void)loadFlightWithFlightCode:(id)arg1 airlineCode:(id)arg2 date:(id)arg3;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (id)regularFlightView;
- (long long)selectedFlight;
- (long long)selectedLeg;
- (void)setAirlineCode:(id)arg1;
- (void)setCompactFlightView:(id)arg1;
- (void)setDisplayStyle:(unsigned long long)arg1;
- (void)setFlightCode:(id)arg1;
- (void)setFlights:(id)arg1;
- (void)setFlights:(id)arg1 selectedFlight:(long long)arg2 selectedLeg:(long long)arg3;
- (void)setHighlightCurrentFlightLeg:(bool)arg1;
- (void)setNoBackground;
- (void)setRegularFlightView:(id)arg1;
- (void)setSelectedFlight:(long long)arg1;
- (void)setSelectedLeg:(long long)arg1;
- (void)setShowInfoPanel:(bool)arg1;
- (void)showErrorView;
- (void)showFlightView;
- (bool)showInfoPanel;
- (void)showLoadingView;
- (void)showView:(id)arg1;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

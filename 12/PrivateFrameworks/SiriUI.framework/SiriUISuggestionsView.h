<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SiriUISuggestionsView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SiriUI.framework/SiriUISuggestionsView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SiriUI.framework/SiriUI (1)
 */

@interface SiriUISuggestionsView : UIView {
    SiriUIAcousticIDSpinner * _acousticIDSpinner;
    struct CGPoint { 
        double x; 
        double y; 
    }  _contentOffset;
    UIView * _contentView;
    <SiriUISuggestionsViewDelegate> * _delegate;
    struct NSDirectionalEdgeInsets { 
        double top; 
        double leading; 
        double bottom; 
        double trailing; 
    }  _edgeInsets;
    bool  _firstSuggestionPresentation;
    UIView * _guideView;
    UILabel * _headerLabel;
    SiriUISuggestionsHeaderText * _headerText;
    UILabel * _largeSubheaderLabel;
    SiriUISuggestionsHeaderText * _largeSubheaderText;
    unsigned long long  _numberOfSuggestions;
    UILabel * _oldHeaderLabel;
    NSArray * _oldSuggestionLabels;
    long long  _orientation;
    NSMutableOrderedSet * _pendedSuggestions;
    UILabel * _subheaderLabel;
    SiriUISuggestionsHeaderText * _subheaderText;
    NSArray * _suggestionLabels;
    UIColor * _textColor;
    NSTimer * _updateSuggestionsTimer;
}

@property (nonatomic) struct CGPoint { double x1; double x2; } contentOffset;
@property (nonatomic) <SiriUISuggestionsViewDelegate> *delegate;
@property (getter=isGuideHidden, nonatomic) bool guideHidden;
@property (nonatomic, retain) UIView *guideView;
@property (nonatomic, copy) SiriUISuggestionsHeaderText *headerText;
@property (nonatomic, copy) SiriUISuggestionsHeaderText *largeSubheaderText;
@property (nonatomic) long long orientation;
@property (nonatomic, copy) SiriUISuggestionsHeaderText *subheaderText;
@property (nonatomic, copy) UIColor *textColor;

- (void).cxx_destruct;
- (void)_animateHeaderIn;
- (void)_animateHeaderOut;
- (void)_animateInSuggestionAtIndex:(unsigned long long)arg1;
- (void)_animateOutSuggestionAtIndex:(unsigned long long)arg1;
- (id)_createSpringAnimation:(double)arg1;
- (double)_headerToLargeSubheaderOffset;
- (double)_headerToSubheaderOffset;
- (int)_heightType;
- (bool)_isPadHeightType;
- (bool)_isPortrait;
- (void)_loadLargeSubheaderViewIfNeeded;
- (void)_loadSubheaderViewIfNeeded;
- (void)_loadSuggestionsViewsIfNeeded;
- (unsigned long long)_numberOfSuggestionsToDisplay;
- (void)_reallyShowAcousticIDSpinner;
- (void)_setHeaderText:(id)arg1;
- (void)_setLargeSubheaderText:(id)arg1;
- (void)_setSubheaderText:(id)arg1;
- (void)_setSuggestionTexts:(id)arg1;
- (double)_suggestionFontSize;
- (double)_suggestionSpacing;
- (void)_updateSuggestions;
- (double)_updateSuggestionsDelay;
- (void)acousticIDSpinnerDidHide:(id)arg1;
- (void)animateOutWithCompletion:(id /* block */)arg1;
- (void)clearCurrentSuggestions;
- (struct CGPoint { double x1; double x2; })contentOffset;
- (id)delegate;
- (id)guideView;
- (id)headerText;
- (void)hideAcousticIDSpinner;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isGuideHidden;
- (bool)isShowingSuggestions;
- (id)largeSubheaderText;
- (void)layoutSubviews;
- (long long)orientation;
- (void)setContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setGuideHidden:(bool)arg1;
- (void)setGuideHidden:(bool)arg1 animated:(bool)arg2;
- (void)setGuideView:(id)arg1;
- (void)setHeaderText:(id)arg1;
- (void)setLargeSubheaderText:(id)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setSubheaderText:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)showAcousticIDSpinner;
- (void)startSuggesting;
- (void)stopSuggesting;
- (id)subheaderText;
- (id)textColor;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SiriUILegacyCardSectionViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SiriUI.framework/SiriUILegacyCardSectionViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SiriUI.framework/SiriUI (1)
 */

@interface SiriUILegacyCardSectionViewController : CRKCardSectionViewController <SiriUISnippetViewControllerDelegate, SiriUISnippetViewControllerDelegatePrivate> {
    SiriUISnippetViewController * _containingSnippetViewController;
    SiriUISnippetViewController * _snippetViewController;
}

@property (nonatomic, readonly) SiriUISnippetViewController *backingSnippetViewController;
@property (nonatomic) SiriUISnippetViewController *containingSnippetViewController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic, retain) SiriUICardSectionView *view;

+ (id)cardSectionClasses;

- (void).cxx_destruct;
- (id)_createReusableViewIfNeededWithClass:(Class)arg1;
- (id)_initWithCardSection:(id)arg1 dataSource:(id)arg2;
- (id)_interaction;
- (void)_loadCardSectionView;
- (bool)_shouldAttemptToConnectToRemoteViewController;
- (void)_updateContentSize;
- (id)additionalSpeechInterpretationsForSiriViewController:(id)arg1;
- (id)backingSnippetViewController;
- (void)cancelRequestForSiriSnippetViewController:(id)arg1;
- (void)cancelSpeakingForSiriViewController:(id)arg1;
- (id)containingSnippetViewController;
- (id)localeForSiriViewController:(id)arg1;
- (id)persistentDataStoreForSiriViewController:(id)arg1;
- (id)persistentStoreForSiriViewController:(id)arg1;
- (void)removeSiriViewController:(id)arg1;
- (void)setContainingSnippetViewController:(id)arg1;
- (unsigned long long)siriDeviceLockStateForSnippetViewController:(id)arg1;
- (id)siriEnabledAppListForSiriViewController:(id)arg1;
- (void)siriSnippetViewController:(id)arg1 didDismissViewController:(id)arg2;
- (void)siriSnippetViewController:(id)arg1 didPresentViewController:(id)arg2;
- (void)siriSnippetViewController:(id)arg1 didRequestKeyboardWithVisibility:(bool)arg2;
- (void)siriSnippetViewController:(id)arg1 didShowGuideStartDate:(id)arg2 endDate:(id)arg3;
- (void)siriSnippetViewController:(id)arg1 pushSirilandSnippets:(id)arg2;
- (void)siriSnippetViewController:(id)arg1 requestPasscodeUnlockWithCompletion:(id /* block */)arg2;
- (void)siriSnippetViewController:(id)arg1 setStatusBarHidden:(bool)arg2 animated:(bool)arg3;
- (void)siriSnippetViewController:(id)arg1 setStatusViewHidden:(bool)arg2;
- (void)siriSnippetViewController:(id)arg1 shouldPresentPicker:(id)arg2 completion:(id /* block */)arg3;
- (void)siriSnippetViewController:(id)arg1 willDismissViewController:(id)arg2;
- (void)siriSnippetViewController:(id)arg1 willPresentViewController:(id)arg2;
- (double)siriSnippetViewControllerExpectedWidth:(id)arg1;
- (bool)siriSnippetViewControllerIsVisible:(id)arg1;
- (void)siriSnippetViewControllerViewDidLoad:(id)arg1;
- (void)siriSnippetViewControllerWillBecomeFirstResponder:(id)arg1;
- (void)siriViewController:(id)arg1 addSelectionResponse:(id)arg2;
- (void)siriViewController:(id)arg1 didHideVibrantView:(id)arg2;
- (id)siriViewController:(id)arg1 disambiguationItemForListItem:(id)arg2 disambiguationKey:(id)arg3;
- (id)siriViewController:(id)arg1 domainObjectForIdentifier:(id)arg2;
- (id)siriViewController:(id)arg1 filteredDisambiguationListItems:(id)arg2;
- (id)siriViewController:(id)arg1 listItemToPickInAutodisambiguationForListItems:(id)arg2;
- (bool)siriViewController:(id)arg1 openPunchOut:(id)arg2;
- (bool)siriViewController:(id)arg1 openURL:(id)arg2;
- (void)siriViewController:(id)arg1 openURL:(id)arg2 completion:(id /* block */)arg3;
- (void)siriViewController:(id)arg1 performAceCommands:(id)arg2;
- (void)siriViewController:(id)arg1 performAceCommands:(id)arg2 completion:(id /* block */)arg3;
- (void)siriViewController:(id)arg1 sendGenericAceCommands:(id)arg2;
- (void)siriViewController:(id)arg1 setContentOffset:(double)arg2;
- (void)siriViewController:(id)arg1 setDomainObject:(id)arg2 forIdentifier:(id)arg3;
- (void)siriViewController:(id)arg1 speakText:(id)arg2 completion:(id /* block */)arg3;
- (void)siriViewController:(id)arg1 startCorrectedSpeechRequestWithText:(id)arg2 correctionIdentifier:(id)arg3 userSelectionResults:(id)arg4;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })siriViewControllerBackgroundInsets:(id)arg1;
- (void)siriViewControllerDidEndEditing:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })siriViewControllerDisplayInsetsForVisibleSpace:(id)arg1;
- (id)siriViewControllerEffectiveBundleForCoreLocation:(id)arg1;
- (double)siriViewControllerExpectedWidth:(id)arg1;
- (void)siriViewControllerHeightDidChange:(id)arg1;
- (void)siriViewControllerHeightDidChange:(id)arg1 pinTopOfSnippet:(bool)arg2;
- (void)siriViewControllerRequestTearDownEditingViewController:(id)arg1;
- (bool)siriViewControllerShouldPreventUserInteraction:(id)arg1;
- (struct CGSize { double x1; double x2; })siriViewControllerVisibleContentArea:(id)arg1;
- (void)siriViewControllerWillBeginEditing:(id)arg1;
- (id)updatedUserUtteranceForSiriViewController:(id)arg1;
- (void)viewDidLayoutSubviews;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

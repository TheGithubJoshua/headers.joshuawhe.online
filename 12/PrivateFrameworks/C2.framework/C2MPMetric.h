<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>C2MPMetric.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/C2.framework/C2MPMetric.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/C2.framework/C2 (438.212)
 */

@interface C2MPMetric : PBCodable <NSCopying> {
    C2MPCloudKitInfo * _cloudkitInfo;
    C2MPDeviceInfo * _deviceInfo;
    C2MPGenericEvent * _genericEvent;
    struct { 
        unsigned int reportFrequency : 1; 
        unsigned int reportFrequencyBase : 1; 
        unsigned int triggers : 1; 
        unsigned int metricType : 1; 
        unsigned int reportTransportAllowExpensiveAccess : 1; 
        unsigned int reportTransportAllowPowerNapScheduling : 1; 
    }  _has;
    int  _metricType;
    C2MPNetworkEvent * _networkEvent;
    unsigned long long  _reportFrequency;
    unsigned long long  _reportFrequencyBase;
    bool  _reportTransportAllowExpensiveAccess;
    bool  _reportTransportAllowPowerNapScheduling;
    NSString * _reportTransportSourceApplicationBundleIdentifier;
    NSString * _reportTransportSourceApplicationSecondaryIdentifier;
    C2MPServerInfo * _serverInfo;
    unsigned long long  _triggers;
}

@property (nonatomic, retain) C2MPCloudKitInfo *cloudkitInfo;
@property (nonatomic, retain) C2MPDeviceInfo *deviceInfo;
@property (nonatomic, retain) C2MPGenericEvent *genericEvent;
@property (nonatomic, readonly) bool hasCloudkitInfo;
@property (nonatomic, readonly) bool hasDeviceInfo;
@property (nonatomic, readonly) bool hasGenericEvent;
@property (nonatomic) bool hasMetricType;
@property (nonatomic, readonly) bool hasNetworkEvent;
@property (nonatomic) bool hasReportFrequency;
@property (nonatomic) bool hasReportFrequencyBase;
@property (nonatomic) bool hasReportTransportAllowExpensiveAccess;
@property (nonatomic) bool hasReportTransportAllowPowerNapScheduling;
@property (nonatomic, readonly) bool hasReportTransportSourceApplicationBundleIdentifier;
@property (nonatomic, readonly) bool hasReportTransportSourceApplicationSecondaryIdentifier;
@property (nonatomic, readonly) bool hasServerInfo;
@property (nonatomic) bool hasTriggers;
@property (nonatomic) int metricType;
@property (nonatomic, retain) C2MPNetworkEvent *networkEvent;
@property (nonatomic) unsigned long long reportFrequency;
@property (nonatomic) unsigned long long reportFrequencyBase;
@property (nonatomic) bool reportTransportAllowExpensiveAccess;
@property (nonatomic) bool reportTransportAllowPowerNapScheduling;
@property (nonatomic, retain) NSString *reportTransportSourceApplicationBundleIdentifier;
@property (nonatomic, retain) NSString *reportTransportSourceApplicationSecondaryIdentifier;
@property (nonatomic, retain) C2MPServerInfo *serverInfo;
@property (nonatomic) unsigned long long triggers;

- (void).cxx_destruct;
- (int)StringAsMetricType:(id)arg1;
- (id)cloudkitInfo;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)deviceInfo;
- (id)dictionaryRepresentation;
- (id)genericEvent;
- (bool)hasCloudkitInfo;
- (bool)hasDeviceInfo;
- (bool)hasGenericEvent;
- (bool)hasMetricType;
- (bool)hasNetworkEvent;
- (bool)hasReportFrequency;
- (bool)hasReportFrequencyBase;
- (bool)hasReportTransportAllowExpensiveAccess;
- (bool)hasReportTransportAllowPowerNapScheduling;
- (bool)hasReportTransportSourceApplicationBundleIdentifier;
- (bool)hasReportTransportSourceApplicationSecondaryIdentifier;
- (bool)hasServerInfo;
- (bool)hasTriggers;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (int)metricType;
- (id)metricTypeAsString:(int)arg1;
- (id)networkEvent;
- (bool)readFrom:(id)arg1;
- (unsigned long long)reportFrequency;
- (unsigned long long)reportFrequencyBase;
- (bool)reportTransportAllowExpensiveAccess;
- (bool)reportTransportAllowPowerNapScheduling;
- (id)reportTransportSourceApplicationBundleIdentifier;
- (id)reportTransportSourceApplicationSecondaryIdentifier;
- (id)serverInfo;
- (void)setCloudkitInfo:(id)arg1;
- (void)setDeviceInfo:(id)arg1;
- (void)setGenericEvent:(id)arg1;
- (void)setHasMetricType:(bool)arg1;
- (void)setHasReportFrequency:(bool)arg1;
- (void)setHasReportFrequencyBase:(bool)arg1;
- (void)setHasReportTransportAllowExpensiveAccess:(bool)arg1;
- (void)setHasReportTransportAllowPowerNapScheduling:(bool)arg1;
- (void)setHasTriggers:(bool)arg1;
- (void)setMetricType:(int)arg1;
- (void)setNetworkEvent:(id)arg1;
- (void)setReportFrequency:(unsigned long long)arg1;
- (void)setReportFrequencyBase:(unsigned long long)arg1;
- (void)setReportTransportAllowExpensiveAccess:(bool)arg1;
- (void)setReportTransportAllowPowerNapScheduling:(bool)arg1;
- (void)setReportTransportSourceApplicationBundleIdentifier:(id)arg1;
- (void)setReportTransportSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setServerInfo:(id)arg1;
- (void)setTriggers:(unsigned long long)arg1;
- (unsigned long long)triggers;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

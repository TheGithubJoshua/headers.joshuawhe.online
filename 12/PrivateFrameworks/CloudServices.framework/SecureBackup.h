<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SecureBackup.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudServices.framework/SecureBackup.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudServices.framework/CloudServices (297.200.8)
 */

@interface SecureBackup : NSObject <NSSecureCoding> {
    NSString * _activityLabel;
    NSString * _activityUUID;
    NSString * _appleID;
    NSString * _authToken;
    NSDate * _backOffDate;
    NSData * _certData;
    NSString * _countryCode;
    NSString * _countryDialCode;
    bool  _deleteAll;
    NSString * _dsid;
    NSString * _emcsCred;
    NSDictionary * _emcsDict;
    bool  _emcsMode;
    NSString * _encodedMetadata;
    NSError * _error;
    NSString * _escrowProxyURL;
    NSDictionary * _escrowRecord;
    bool  _fmipRecovery;
    NSString * _fmipUUID;
    NSString * _iCloudEnv;
    NSData * _iCloudIdentityData;
    NSString * _iCloudPassword;
    bool  _icdp;
    NSData * _idmsData;
    bool  _idmsRecovery;
    NSDictionary * _metadata;
    NSDictionary * _metadataHash;
    NSString * _oldEMCSCred;
    NSString * _passphrase;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _recordID;
    NSString * _recoveryKey;
    SESWrapper * _ses;
    bool  _silent;
    NSString * _smsTarget;
    bool  _stingray;
    bool  _synchronize;
    bool  _useCachedPassphrase;
    bool  _useRecoveryPET;
    bool  _usesMultipleiCSC;
    bool  _usesRandomPassphrase;
    bool  _usesRecoveryKey;
    NSString * _verificationToken;
}

@property (nonatomic, copy) NSString *activityLabel;
@property (nonatomic, copy) NSString *activityUUID;
@property (nonatomic, copy) NSString *appleID;
@property (nonatomic, copy) NSString *authToken;
@property (nonatomic, retain) NSDate *backOffDate;
@property (nonatomic, retain) NSData *certData;
@property (nonatomic, copy) NSString *countryCode;
@property (nonatomic, copy) NSString *countryDialCode;
@property (nonatomic) bool deleteAll;
@property (nonatomic, copy) NSString *dsid;
@property (nonatomic, copy) NSString *emcsCred;
@property (nonatomic, retain) NSDictionary *emcsDict;
@property (nonatomic) bool emcsMode;
@property (nonatomic, copy) NSString *encodedMetadata;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, copy) NSString *escrowProxyURL;
@property (nonatomic, retain) NSDictionary *escrowRecord;
@property (nonatomic) bool fmipRecovery;
@property (nonatomic, copy) NSString *fmipUUID;
@property (nonatomic, copy) NSString *iCloudEnv;
@property (nonatomic, retain) NSData *iCloudIdentityData;
@property (nonatomic, copy) NSString *iCloudPassword;
@property (nonatomic) bool icdp;
@property (nonatomic, retain) NSData *idmsData;
@property (nonatomic) bool idmsRecovery;
@property (nonatomic, retain) NSDictionary *metadata;
@property (nonatomic, retain) NSDictionary *metadataHash;
@property (nonatomic, copy) NSString *oldEMCSCred;
@property (nonatomic, copy) NSString *passphrase;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, copy) NSString *recordID;
@property (nonatomic, copy) NSString *recoveryKey;
@property (nonatomic, retain) SESWrapper *ses;
@property (nonatomic) bool silent;
@property (nonatomic, copy) NSString *smsTarget;
@property (nonatomic) bool stingray;
@property (nonatomic) bool synchronize;
@property (nonatomic) bool useCachedPassphrase;
@property (nonatomic) bool useRecoveryPET;
@property (nonatomic) bool usesMultipleiCSC;
@property (nonatomic) bool usesRandomPassphrase;
@property (nonatomic) bool usesRecoveryKey;
@property (nonatomic, copy) NSString *verificationToken;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_CreateSecureBackupConnection;
- (id)activityLabel;
- (id)activityUUID;
- (id)appleID;
- (id)authToken;
- (id)backOffDate;
- (void)backOffDateWithCompletionBlock:(id /* block */)arg1;
- (void)backOffDateWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)backupWithInfo:(id)arg1;
- (void)backupWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)cachePassphrase;
- (void)cachePassphraseWithCompletionBlock:(id /* block */)arg1;
- (id)cachePassphraseWithInfo:(id)arg1;
- (void)cachePassphraseWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)cacheRecoveryKeyWithCompletionBlock:(id /* block */)arg1;
- (id)certData;
- (void)changeSMSTargetWithCompletionBlock:(id /* block */)arg1;
- (bool)changeSMSTargetWithError:(id*)arg1;
- (id)changeSMSTargetWithInfo:(id)arg1;
- (void)changeSMSTargetWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)countryCode;
- (id)countryDialCode;
- (bool)deleteAll;
- (void)disableWithCompletionBlock:(id /* block */)arg1;
- (bool)disableWithError:(id*)arg1;
- (id)disableWithInfo:(id)arg1;
- (void)disableWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)dsid;
- (id)emcsCred;
- (id)emcsDict;
- (bool)emcsMode;
- (void)enableWithCompletionBlock:(id /* block */)arg1;
- (bool)enableWithError:(id*)arg1;
- (id)enableWithInfo:(id)arg1;
- (void)enableWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)encodedMetadata;
- (id)error;
- (id)escrowProxyURL;
- (id)escrowRecord;
- (bool)fmipRecovery;
- (id)fmipUUID;
- (id)getAccountInfoWithError:(id*)arg1;
- (void)getAccountInfoWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)getAccountInfoWithInfo:(id)arg1 completionBlockWithResults:(id /* block */)arg2;
- (id)getAccountInfoWithInfo:(id)arg1 results:(id*)arg2;
- (void)getAccountInfoWithResults:(id /* block */)arg1;
- (void)getCountrySMSCodesWithInfo:(id)arg1 completionBlockWithResults:(id /* block */)arg2;
- (void)getCountrySMSCodesWithResults:(id /* block */)arg1;
- (id)iCloudEnv;
- (id)iCloudIdentityData;
- (id)iCloudPassword;
- (bool)icdp;
- (id)idmsData;
- (bool)idmsRecovery;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithUserActivityLabel:(id)arg1;
- (id)metadata;
- (id)metadataHash;
- (void)notificationOccurred:(id)arg1;
- (id)oldEMCSCred;
- (id)passphrase;
- (void)populateWithInfo:(id)arg1;
- (id)queue;
- (id)recordID;
- (id)recoverWithError:(id*)arg1;
- (void)recoverWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)recoverWithInfo:(id)arg1 completionBlockWithResults:(id /* block */)arg2;
- (id)recoverWithInfo:(id)arg1 results:(id*)arg2;
- (void)recoverWithResults:(id /* block */)arg1;
- (id)recoveryKey;
- (id)ses;
- (void)setActivityLabel:(id)arg1;
- (void)setActivityUUID:(id)arg1;
- (void)setAppleID:(id)arg1;
- (void)setAuthToken:(id)arg1;
- (void)setBackOffDate:(id)arg1;
- (void)setBackOffDateWithCompletionBlock:(id /* block */)arg1;
- (void)setBackOffDateWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)setCertData:(id)arg1;
- (void)setCountryCode:(id)arg1;
- (void)setCountryDialCode:(id)arg1;
- (void)setDeleteAll:(bool)arg1;
- (void)setDsid:(id)arg1;
- (void)setEmcsCred:(id)arg1;
- (void)setEmcsDict:(id)arg1;
- (void)setEmcsMode:(bool)arg1;
- (void)setEncodedMetadata:(id)arg1;
- (void)setError:(id)arg1;
- (void)setEscrowProxyURL:(id)arg1;
- (void)setEscrowRecord:(id)arg1;
- (void)setFmipRecovery:(bool)arg1;
- (void)setFmipUUID:(id)arg1;
- (void)setICloudEnv:(id)arg1;
- (void)setICloudIdentityData:(id)arg1;
- (void)setICloudPassword:(id)arg1;
- (void)setIcdp:(bool)arg1;
- (void)setIdmsData:(id)arg1;
- (void)setIdmsRecovery:(bool)arg1;
- (void)setMetadata:(id)arg1;
- (void)setMetadataHash:(id)arg1;
- (void)setOldEMCSCred:(id)arg1;
- (void)setPassphrase:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setRecordID:(id)arg1;
- (void)setRecoveryKey:(id)arg1;
- (void)setSes:(id)arg1;
- (void)setSilent:(bool)arg1;
- (void)setSmsTarget:(id)arg1;
- (void)setStingray:(bool)arg1;
- (void)setSynchronize:(bool)arg1;
- (void)setUseCachedPassphrase:(bool)arg1;
- (void)setUseRecoveryPET:(bool)arg1;
- (void)setUsesMultipleiCSC:(bool)arg1;
- (void)setUsesRandomPassphrase:(bool)arg1;
- (void)setUsesRecoveryKey:(bool)arg1;
- (void)setVerificationToken:(id)arg1;
- (bool)silent;
- (id)smsTarget;
- (id)srpInitNonce;
- (id)srpRecoveryBlobFromSRPInitResponse:(id)arg1;
- (id)startSMSChallengeWithError:(id*)arg1;
- (void)startSMSChallengeWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)startSMSChallengeWithInfo:(id)arg1 completionBlockWithResults:(id /* block */)arg2;
- (id)startSMSChallengeWithInfo:(id)arg1 results:(id*)arg2;
- (void)startSMSChallengeWithResults:(id /* block */)arg1;
- (void)stashRecoveryDataWithCompletionBlock:(id /* block */)arg1;
- (void)stashRecoveryDataWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)stateCaptureWithCompletionBlock:(id /* block */)arg1;
- (bool)stingray;
- (bool)synchronize;
- (void)uncachePassphrase;
- (void)uncachePassphraseWithCompletionBlock:(id /* block */)arg1;
- (id)uncachePassphraseWithInfo:(id)arg1;
- (void)uncachePassphraseWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)uncacheRecoveryKeyWithCompletionBlock:(id /* block */)arg1;
- (void)updateMetadataWithCompletionBlock:(id /* block */)arg1;
- (bool)updateMetadataWithError:(id*)arg1;
- (id)updateMetadataWithInfo:(id)arg1;
- (void)updateMetadataWithInfo:(id)arg1 completionBlock:(id /* block */)arg2;
- (bool)useCachedPassphrase;
- (bool)useRecoveryPET;
- (bool)usesMultipleiCSC;
- (bool)usesRandomPassphrase;
- (bool)usesRecoveryKey;
- (id)verificationToken;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

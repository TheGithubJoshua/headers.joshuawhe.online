<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PPPortrait.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PersonalizationPortrait.framework/PPPortrait.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PersonalizationPortrait.framework/PersonalizationPortrait (1)
 */

@interface PPPortrait : NSObject

// Image: /System/Library/PrivateFrameworks/PersonalizationPortrait.framework/PersonalizationPortrait

+ (unsigned long long)assetVersion;
+ (bool)clearNamedEntityStore:(id*)arg1;
+ (bool)clearTopicStore:(id*)arg1;
+ (bool)deleteAllNamedEntitiesFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 error:(id*)arg3;
+ (bool)deleteAllNamedEntitiesFromSourcesWithBundleId:(id)arg1 error:(id*)arg2;
+ (bool)deleteAllNamedEntitiesFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 error:(id*)arg3;
+ (bool)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 error:(id*)arg3;
+ (bool)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 error:(id*)arg2;
+ (bool)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 error:(id*)arg3;
+ (bool)deleteAllTopicsWithTopicId:(id)arg1 error:(id*)arg2;
+ (bool)donateLocationNamedEntities:(id)arg1 bundleId:(id)arg2 error:(id*)arg3;
+ (bool)donateNamedEntities:(id)arg1 source:(id)arg2 algorithm:(unsigned long long)arg3 cloudSync:(bool)arg4 decayRate:(double)arg5 error:(id*)arg6;
+ (bool)donateNamedEntities:(id)arg1 source:(id)arg2 algorithm:(unsigned long long)arg3 cloudSync:(bool)arg4 error:(id*)arg5;
+ (bool)donateSiriQuery:(id)arg1 qid:(id)arg2 error:(id*)arg3;
+ (bool)donateTopics:(id)arg1 source:(id)arg2 algorithm:(unsigned long long)arg3 cloudSync:(bool)arg4 decayRate:(double)arg5 error:(id*)arg6;
+ (bool)donateTopics:(id)arg1 source:(id)arg2 algorithm:(unsigned long long)arg3 cloudSync:(bool)arg4 error:(id*)arg5;
+ (void)flushNamedEntityDonation;
+ (id)getPortraitVariantName;
+ (id)namedEntityRecordsWithLimit:(unsigned long long)arg1 matchingName:(id)arg2 matchingSourceBundleId:(id)arg3 sinceDate:(id)arg4 error:(id*)arg5;
+ (id)namedEntityRecordsWithLimit:(unsigned long long)arg1 matchingName:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)namedEntityRecordsWithQuery:(id)arg1 error:(id*)arg2;
+ (void)portraitFeedbackEngagedMappedTopics:(id)arg1 forMapping:(id)arg2;
+ (void)portraitFeedbackEngagedNamedEntities:(id)arg1;
+ (void)portraitFeedbackEngagedTopics:(id)arg1;
+ (void)portraitFeedbackMappedTopicsOverallEngagement:(id)arg1 forMapping:(id)arg2;
+ (void)portraitFeedbackNamedEntitiesOverallEngagement:(id)arg1;
+ (void)portraitFeedbackTopicsOverallEngagement:(id)arg1;
+ (void)portraitFeedbackUsedMappedTopics:(id)arg1 forMapping:(id)arg2;
+ (void)portraitFeedbackUsedNamedEntities:(id)arg1;
+ (void)portraitFeedbackUsedTopics:(id)arg1;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 error:(id*)arg2;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 matchingCategory:(unsigned long long)arg2 error:(id*)arg3;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 matchingCategory:(unsigned long long)arg2 excludingSourceBundleId:(id)arg3 fromDate:(id)arg4 toDate:(id)arg5 error:(id*)arg6;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 matchingCategory:(unsigned long long)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)rankedNamedEntitiesWithLimit:(unsigned long long)arg1 sinceDate:(id)arg2 error:(id*)arg3;
+ (id)rankedNamedEntitiesWithQuery:(id)arg1 error:(id*)arg2;
+ (id)rankedTopicsWithLimit:(unsigned long long)arg1 decayRate:(double)arg2 error:(id*)arg3;
+ (id)rankedTopicsWithLimit:(unsigned long long)arg1 error:(id*)arg2;
+ (id)rankedTopicsWithLimit:(unsigned long long)arg1 excludingSourceBundleId:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)rankedTopicsWithLimit:(unsigned long long)arg1 sinceDate:(id)arg2 decayRate:(double)arg3 error:(id*)arg4;
+ (id)rankedTopicsWithQuery:(id)arg1 error:(id*)arg2;
+ (void)registerMaintenanceTasks;
+ (void)registerXPCListenerWithStringDonationHandler:(id)arg1;
+ (id)scoresForTopicMapping:(id)arg1 excludingSourceBundleId:(id)arg2 fromDate:(id)arg3 decayRate:(double)arg4 error:(id*)arg5;
+ (id)scoresForTopicMapping:(id)arg1 excludingSourceBundleId:(id)arg2 fromDate:(id)arg3 decayRate:(double)arg4 withBiases:(bool)arg5 error:(id*)arg6;
+ (id)scoresForTopics:(id)arg1 excludingSourceBundleId:(id)arg2 decayRate:(double)arg3 error:(id*)arg4;
+ (id)topicRecordsWithLimit:(unsigned long long)arg1 excludingSourceBundleId:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)topicRecordsWithLimit:(unsigned long long)arg1 matchingSourceBundleId:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)topicRecordsWithLimit:(unsigned long long)arg1 matchingTopicId:(id)arg2 sinceDate:(id)arg3 error:(id*)arg4;
+ (id)topicRecordsWithQuery:(id)arg1 error:(id*)arg2;

// Image: /System/Library/PrivateFrameworks/PersonalizationPortraitInternals.framework/PersonalizationPortraitInternals

+ (bool)_logDailyMetricsWithError:(id*)arg1;
+ (void)_registerCoreRoutineImport;
+ (void)_registerKnowledgeStoreCleanup;
+ (void)_registerMapsImport;
+ (void)_registerPeriodicMetrics;
+ (void)_registerRTCSendLogs;
+ (void)_registerTTLBasedDonationCleanup;
+ (void)registerMaintenanceTasksInternal;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TIWordSearchCandidateResultSet.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TextInputCore.framework/TIWordSearchCandidateResultSet.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TextInputCore.framework/TextInputCore ()
 */

@interface TIWordSearchCandidateResultSet : NSObject <NSCopying> {
    NSString * _autoconvertedCandidateString;
    NSArray * _autoconvertedCandidates;
    NSString * _autoconvertedInputString;
    bool  _empty;
    NSArray * _initiallyHiddenCandidates;
    NSMutableDictionary * _mutableCandidateRefsDictionary;
    NSMutableArray * _mutableCandidates;
    NSMutableArray * _mutableProactiveTriggers;
    NSArray * _proactiveCandidates;
    unsigned long long  _selectedHiddenCandidateIndex;
}

@property (nonatomic, retain) NSString *autoconvertedCandidateString;
@property (nonatomic, copy) NSArray *autoconvertedCandidates;
@property (nonatomic, retain) NSString *autoconvertedInputString;
@property (nonatomic, readonly) NSDictionary *candidateRefsDictionary;
@property (nonatomic, readonly) NSArray *candidates;
@property (getter=isEmpty, nonatomic) bool empty;
@property (nonatomic, copy) NSArray *initiallyHiddenCandidates;
@property (nonatomic, retain) NSMutableDictionary *mutableCandidateRefsDictionary;
@property (nonatomic, retain) NSMutableArray *mutableCandidates;
@property (nonatomic, readonly) NSMutableArray *mutableProactiveTriggers;
@property (nonatomic, retain) NSArray *proactiveCandidates;
@property (nonatomic, readonly) NSArray *proactiveTriggers;
@property (nonatomic) unsigned long long selectedHiddenCandidateIndex;

+ (id)emptySet;

- (void).cxx_destruct;
- (void)addCandidates:(id)arg1 candidateRefsDictionary:(id)arg2;
- (void)addMecabraCandidate:(id)arg1 mecabraCandidateRef:(void*)arg2;
- (void)addMecabraFacemarkCandidate:(void*)arg1 forInput:(id)arg2;
- (void)addMecabraProactiveCandidate:(void*)arg1 triggerSourceType:(unsigned char)arg2;
- (void)addSyntheticMecabraCandidateWithSurface:(id)arg1 input:(id)arg2;
- (void)addSyntheticMecabraCandidateWithSurface:(id)arg1 input:(id)arg2 isExtension:(bool)arg3;
- (void)addSyntheticMecabraCandidateWithSurface:(id)arg1 input:(id)arg2 isExtension:(bool)arg3 deleteCount:(unsigned long long)arg4;
- (void)addSyntheticMecabraCandidateWithSurface:(id)arg1 input:(id)arg2 isExtension:(bool)arg3 deleteCount:(unsigned long long)arg4 cursorMovement:(long long)arg5;
- (void)addSyntheticMecabraCandidateWithSurface:(id)arg1 input:(id)arg2 isExtension:(bool)arg3 deleteCount:(unsigned long long)arg4 cursorMovement:(long long)arg5 annotation:(id)arg6;
- (void)addSyntheticMecabraProactiveCandidate:(id)arg1 triggerSourceType:(unsigned char)arg2;
- (id)autoconvertedCandidateString;
- (id)autoconvertedCandidates;
- (id)autoconvertedInputString;
- (id)candidateRefsDictionary;
- (id)candidates;
- (void)clearProactiveTriggers;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)init;
- (id)initWithCandidates:(id)arg1 candidateRefsDictionary:(id)arg2;
- (id)initWithCandidates:(id)arg1 candidateRefsDictionary:(id)arg2 initiallyHiddenCandidates:(id)arg3 selectedHiddenCandidateIndex:(unsigned long long)arg4;
- (id)initiallyHiddenCandidates;
- (void)insertMecabraCandidate:(id)arg1 mecabraCandidateRef:(void*)arg2 atIndex:(unsigned long long)arg3;
- (void)insertSyntheticMecabraCandidateWithSurface:(id)arg1 input:(id)arg2 atIndex:(unsigned long long)arg3;
- (bool)isEmpty;
- (void)moveCandidate:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (id)mutableCandidateRefsDictionary;
- (id)mutableCandidates;
- (id)mutableProactiveTriggers;
- (id)proactiveCandidates;
- (id)proactiveTriggers;
- (unsigned long long)selectedHiddenCandidateIndex;
- (void)setAutoconvertedCandidateString:(id)arg1;
- (void)setAutoconvertedCandidates:(id)arg1;
- (void)setAutoconvertedInputString:(id)arg1;
- (void)setAutoconvertedMecabraCandidates:(id)arg1 candidateRefsDictionary:(id)arg2;
- (void)setEmpty:(bool)arg1;
- (void)setInitiallyHiddenCandidates:(id)arg1;
- (void)setMutableCandidateRefsDictionary:(id)arg1;
- (void)setMutableCandidates:(id)arg1;
- (void)setProactiveCandidates:(id)arg1;
- (void)setSelectedHiddenCandidateIndex:(unsigned long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TIWordSearch.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TextInputCore.framework/TIWordSearch.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TextInputCore.framework/TextInputCore ()
 */

@interface TIWordSearch : NSObject <TIKeyboardActivityObserving> {
    bool  _autoCorrects;
    NSCache * _candidatesCache;
    TIInputMode * _inputMode;
    TIMecabraEnvironment * _mecabraEnvironment;
    TIMecabraWrapper * _mecabraWrapper;
    TIWordSearchOperationGetCandidates * _operation;
    bool  _shouldLearnAcceptedCandidate;
    id  _userDictionaryObserver;
}

@property bool autoCorrects;
@property (nonatomic, retain) NSCache *candidatesCache;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) TIInputMode *inputMode;
@property (readonly) struct __Mecabra { }*mecabra;
@property (nonatomic, retain) TIMecabraEnvironment *mecabraEnvironment;
@property (nonatomic, readonly) int mecabraLanguage;
@property (retain) TIMecabraWrapper *mecabraWrapper;
@property (retain) TIWordSearchOperationGetCandidates *operation;
@property bool shouldLearnAcceptedCandidate;
@property (readonly) Class superclass;

+ (id)configureUserDictionaryObserver:(id)arg1 previousObserver:(id)arg2;
+ (id)mecabraLearningDictionaryDirectory;
+ (id)recipientRecords;
+ (id)sharedOperationQueue;

- (void).cxx_destruct;
- (void)_addFacemarkCandidatesToResultSet:(id)arg1 forInput:(id)arg2;
- (void)adaptOfflineToParagraph:(id)arg1 adaptationContext:(id)arg2 timeStamp:(double)arg3;
- (bool)addFacemarkCandidatesToResultSet:(id)arg1 forInput:(id)arg2;
- (void)adjustEnvironmentOnAction:(long long)arg1;
- (bool)autoCorrects;
- (id)cachedCandidatesForOperation:(id)arg1;
- (void)cancel;
- (id)candidatesCache;
- (id)candidatesCacheKeyForOperation:(id)arg1;
- (id)candidatesForOperation:(id)arg1;
- (void)clearCache;
- (void)clearLearningDictionary;
- (void)clearLeftDocumentContext;
- (void)clearObservers;
- (void)commitPunctuationSurface:(id)arg1;
- (void)commitSurface:(id)arg1;
- (void)completeOperationsInQueue;
- (void)contactStoreDidChange:(id)arg1;
- (void)dealloc;
- (void)declareEndOfSentence;
- (void)dynamicDictionariesRemoved:(id)arg1;
- (void)endInputSession;
- (void)flushDynamicData;
- (void)handleMemoryPressureLevel:(unsigned long long)arg1 excessMemoryInBytes:(unsigned long long)arg2;
- (id)initTIWordSearchWithInputMode:(id)arg1;
- (id)initTIWordSearchWithInputMode:(id)arg1 mecabraWrapper:(id)arg2;
- (id)inputMode;
- (bool)isCancelled;
- (void)keyboardActivityDidTransition:(id)arg1;
- (void)lastAcceptedCandidateCorrected;
- (struct __Mecabra { }*)mecabra;
- (unsigned long long)mecabraCreationOptions;
- (id)mecabraEnvironment;
- (int)mecabraInputMethodType;
- (int)mecabraLanguage;
- (id)mecabraWrapper;
- (id)operation;
- (void)performAccept:(void*)arg1 isPartial:(bool)arg2;
- (void)performOperationAsync:(id)arg1;
- (void)performOperationAsync:(id)arg1 withBackgroundActivityAssertion:(bool)arg2;
- (void)releaseBackgroundActivityAssertion;
- (void)resetMecabraEnvironment;
- (void)resetPreviousWord;
- (void)saveLearningDictionary;
- (void)setAutoCorrects:(bool)arg1;
- (void)setCandidatesCache:(id)arg1;
- (void)setLanguageModelAdaptationContext:(id)arg1;
- (void)setLanguageModelAdaptationContextWithClientIdentifier:(id)arg1 recipientIdentifier:(id)arg2;
- (void)setLeftDocumentContext:(id)arg1 rightDocumentContext:(id)arg2;
- (void)setMecabraEnvironment:(id)arg1;
- (void)setMecabraWrapper:(id)arg1;
- (void)setOperation:(id)arg1;
- (void)setShouldLearnAcceptedCandidate:(bool)arg1;
- (bool)shouldLearnAcceptedCandidate;
- (id)uncachedCandidatesForOperation:(id)arg1;
- (void)updateMecabraState;
- (void)updateUserWordEntries;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

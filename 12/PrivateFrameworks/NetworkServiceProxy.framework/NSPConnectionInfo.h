<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSPConnectionInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NetworkServiceProxy.framework/NSPConnectionInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy (1)
 */

@interface NSPConnectionInfo : NSObject <NSSecureCoding> {
    long long  _IPType;
    NSDictionary * _TCPInfo;
    bool  _TFOSucceeded;
    double  _connectionDelay;
    NSString * _edgeAddress;
    long long  _edgeType;
    NSDictionary * _exceptions;
    double  _fallbackDelay;
    long long  _fallbackReason;
    long long  _fallbackReasonCategory;
    double  _firstTxByteDelay;
    NSDate * _firstTxByteTimeStamp;
    unsigned long long  _initialBytesLeftOver;
    NSString * _interfaceName;
    long long  _interfaceType;
    bool  _isMultipath;
    bool  _isTFOProbeSucceeded;
    unsigned long long  _minimumRTT;
    unsigned long long  _multipathConnectedSubflowCount;
    unsigned long long  _multipathPrimarySubflowInterfaceIndex;
    unsigned long long  _multipathSubflowCount;
    NSDictionary * _multipathSubflowSwitchCounts;
    long long  _pathType;
    <NSPConnectionInfoSource> * _source;
    double  _timeIntervalSinceLastUsage;
    double  _timeToFirstByte;
    NSArray * _timingIntervals;
    long long  _tunnelConnectionError;
}

@property long long IPType;
@property (retain) NSDictionary *TCPInfo;
@property bool TFOSucceeded;
@property double connectionDelay;
@property (retain) NSString *edgeAddress;
@property long long edgeType;
@property (retain) NSDictionary *exceptions;
@property double fallbackDelay;
@property long long fallbackReason;
@property (readonly) long long fallbackReasonCategory;
@property double firstTxByteDelay;
@property (retain) NSDate *firstTxByteTimeStamp;
@property unsigned long long initialBytesLeftOver;
@property (retain) NSString *interfaceName;
@property long long interfaceType;
@property bool isMultipath;
@property bool isTFOProbeSucceeded;
@property unsigned long long minimumRTT;
@property unsigned long long multipathConnectedSubflowCount;
@property unsigned long long multipathPrimarySubflowInterfaceIndex;
@property unsigned long long multipathSubflowCount;
@property (retain) NSDictionary *multipathSubflowSwitchCounts;
@property long long pathType;
@property <NSPConnectionInfoSource> *source;
@property double timeIntervalSinceLastUsage;
@property double timeToFirstByte;
@property (retain) NSArray *timingIntervals;
@property long long tunnelConnectionError;

+ (int)fallbackReasonToErrno:(long long)arg1;
+ (id)getFallbackReasonDescription:(long long)arg1;
+ (bool)shouldMoveToNextEdgeForFallbackReason:(long long)arg1;
+ (bool)shouldResolveForFallbackReason:(long long)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (long long)IPType;
- (id)TCPInfo;
- (bool)TFOSucceeded;
- (double)connectionDelay;
- (id)copyDictionary;
- (id)edgeAddress;
- (long long)edgeType;
- (void)encodeWithCoder:(id)arg1;
- (id)exceptions;
- (double)fallbackDelay;
- (long long)fallbackReason;
- (long long)fallbackReasonCategory;
- (double)firstTxByteDelay;
- (id)firstTxByteTimeStamp;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)initialBytesLeftOver;
- (id)interfaceName;
- (long long)interfaceType;
- (bool)isMultipath;
- (bool)isTFOProbeSucceeded;
- (unsigned long long)minimumRTT;
- (unsigned long long)multipathConnectedSubflowCount;
- (unsigned long long)multipathPrimarySubflowInterfaceIndex;
- (unsigned long long)multipathSubflowCount;
- (id)multipathSubflowSwitchCounts;
- (long long)pathType;
- (void)setConnectionDelay:(double)arg1;
- (void)setEdgeAddress:(id)arg1;
- (void)setEdgeType:(long long)arg1;
- (void)setExceptions:(id)arg1;
- (void)setFallbackDelay:(double)arg1;
- (void)setFallbackReason:(long long)arg1;
- (void)setFirstTxByteDelay:(double)arg1;
- (void)setFirstTxByteTimeStamp:(id)arg1;
- (void)setIPType:(long long)arg1;
- (void)setInitialBytesLeftOver:(unsigned long long)arg1;
- (void)setInterfaceName:(id)arg1;
- (void)setInterfaceType:(long long)arg1;
- (void)setIsMultipath:(bool)arg1;
- (void)setIsTFOProbeSucceeded:(bool)arg1;
- (void)setMinimumRTT:(unsigned long long)arg1;
- (void)setMultipathConnectedSubflowCount:(unsigned long long)arg1;
- (void)setMultipathPrimarySubflowInterfaceIndex:(unsigned long long)arg1;
- (void)setMultipathSubflowCount:(unsigned long long)arg1;
- (void)setMultipathSubflowSwitchCounts:(id)arg1;
- (void)setPathType:(long long)arg1;
- (void)setSource:(id)arg1;
- (void)setTCPInfo:(id)arg1;
- (void)setTFOSucceeded:(bool)arg1;
- (void)setTimeIntervalSinceLastUsage:(double)arg1;
- (void)setTimeToFirstByte:(double)arg1;
- (void)setTimingIntervals:(id)arg1;
- (void)setTunnelConnectionError:(long long)arg1;
- (id)source;
- (double)timeIntervalSinceLastUsage;
- (double)timeToFirstByte;
- (id)timingIntervalAtIndex:(unsigned long long)arg1 forKey:(id)arg2;
- (id)timingIntervals;
- (long long)tunnelConnectionError;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSPConfiguration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NetworkServiceProxy.framework/NSPConfiguration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy (1)
 */

@interface NSPConfiguration : NSObject <NSCopying, NSSecureCoding> {
    NSArray * _appRules;
    NSPConfiguration * _defaults;
    long long  _diskVersion;
    NSDictionary * _edgeSets;
    NSNumber * _enabled;
    bool  _ignoreInvalidCerts;
    unsigned int  _lastFailureReason;
    NSNumber * _persistMetrics;
    NSDate * _resurrectionDate;
    NSNumber * _timestamp;
    NSNumber * _version;
    NSNumber * _waldoEnabled;
    NSString * _waldoHost;
    NSString * _waldoLeafOID;
    NSString * _waldoPath;
    NSNumber * _waldoPort;
    NSNumber * _waldoRequestTimeout;
    NSNumber * _waldoRevocationFailClosed;
    NSURLSession * _waldoSession;
}

@property (copy) NSArray *appRules;
@property (readonly) NSDate *dayPassExpirationDate;
@property (retain) NSPConfiguration *defaults;
@property (readonly) long long diskVersion;
@property (readonly) NSDate *earliestEnableCheckDate;
@property (retain) NSDictionary *edgeSets;
@property (copy) NSNumber *enabled;
@property bool ignoreInvalidCerts;
@property (readonly) bool isDead;
@property unsigned int lastFailureReason;
@property (copy) NSNumber *persistMetrics;
@property (copy) NSDate *resurrectionDate;
@property (readonly) NSNumber *timestamp;
@property (readonly) NSNumber *version;
@property (copy) NSNumber *waldoEnabled;
@property (copy) NSString *waldoHost;
@property (copy) NSString *waldoLeafOID;
@property (copy) NSString *waldoPath;
@property (copy) NSNumber *waldoPort;
@property (copy) NSNumber *waldoRequestTimeout;
@property (copy) NSNumber *waldoRevocationFailClosed;
@property (retain) NSURLSession *waldoSession;

+ (id)defaultConfiguration;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)appRules;
- (id)copyAgentResultsForAppRule:(id)arg1;
- (id)copyTLVData;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)createWaldoURLWithDomain:(id)arg1 timestamp:(id)arg2;
- (id)dayPassExpirationDate;
- (id)defaults;
- (long long)diskVersion;
- (id)earliestEnableCheckDate;
- (id)edgeSets;
- (id)enabled;
- (void)encodeWithCoder:(id)arg1;
- (void)enumerateEdgeSetsWithBlock:(id /* block */)arg1;
- (bool)evaluateEnableRatios;
- (id)getCurrentOnRampForAppRule:(id)arg1;
- (id)getEdgeSetForAppRule:(id)arg1;
- (id)getEdgeSetForSigningIdentifier:(id)arg1;
- (bool)ignoreInvalidCerts;
- (id)initFromKeychain;
- (id)initFromTLVs:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTimestamp:(id)arg1 fromDictionary:(id)arg2 waldoSource:(long long)arg3;
- (bool)isDead;
- (unsigned int)lastFailureReason;
- (id)loadBuiltinAppRulesFromDisk;
- (void)merge:(id)arg1;
- (id)persistMetrics;
- (void)removeFromKeychain;
- (bool)resetStaleEdgeSets;
- (id)resurrectionDate;
- (void)saveToKeychain;
- (void)setAppRules:(id)arg1;
- (void)setDefaults:(id)arg1;
- (void)setEdgeSets:(id)arg1;
- (void)setEnabled:(id)arg1;
- (void)setIgnoreInvalidCerts:(bool)arg1;
- (void)setLastFailureReason:(unsigned int)arg1;
- (void)setPersistMetrics:(id)arg1;
- (void)setResurrectionDate:(id)arg1;
- (void)setWaldoEnabled:(id)arg1;
- (void)setWaldoHost:(id)arg1;
- (void)setWaldoLeafOID:(id)arg1;
- (void)setWaldoPath:(id)arg1;
- (void)setWaldoPort:(id)arg1;
- (void)setWaldoRequestTimeout:(id)arg1;
- (void)setWaldoRevocationFailClosed:(id)arg1;
- (void)setWaldoSession:(id)arg1;
- (void)setup;
- (void)teardown;
- (id)timestamp;
- (void)updateNetworkAgents;
- (id)version;
- (id)waldoEnabled;
- (id)waldoHost;
- (id)waldoLeafOID;
- (id)waldoPath;
- (id)waldoPort;
- (id)waldoRequestTimeout;
- (id)waldoRevocationFailClosed;
- (id)waldoSession;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

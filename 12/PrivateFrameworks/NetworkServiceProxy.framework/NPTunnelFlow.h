<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NPTunnelFlow.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NetworkServiceProxy.framework/NPTunnelFlow.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NetworkServiceProxy.framework/NetworkServiceProxy (1)
 */

@interface NPTunnelFlow : NSObject <NSPConnectionInfoSource> {
    NSPAppRule * _appRule;
    bool  _enableDirectRace;
    NPFlowProperties * _extraFlowProperties;
    double  _fallbackDelay;
    bool  _fallbackDisabled;
    long long  _fallbackReason;
    void * _fallbackTimer;
    NSDate * _firstTxByteTimestamp;
    bool  _hasTunnel;
    unsigned long long  _hashKey;
    unsigned long long  _identifier;
    unsigned long long  _initialBytesLeftOver;
    bool  _isDirectConnectionViable;
    long long  _latestByteDate;
    NSObject<OS_dispatch_data> * _savedData;
    bool  _shouldComposeIntialData;
    NSDate * _startDate;
    long long  _state;
    NetworkServiceProxyRequestStats * _stats;
    void * _telemetryTimer;
    NPTunnel * _tunnel;
    int  _tunnelError;
    bool  _useCustomHostnameValidation;
    void * _window;
}

@property (retain) NSData *appData;
@property (readonly) NSPAppRule *appRule;
@property bool enableDirectRace;
@property (readonly) NPFlowProperties *extraFlowProperties;
@property double fallbackDelay;
@property bool fallbackDisabled;
@property long long fallbackReason;
@property void*fallbackTimer;
@property (retain) NSDate *firstTxByteTimestamp;
@property bool hasTunnel;
@property (readonly) unsigned long long hashKey;
@property unsigned long long identifier;
@property unsigned long long initialBytesLeftOver;
@property (readonly) bool isBestEffort;
@property (readonly) bool isClientFlowClosed;
@property bool isDirectConnectionViable;
@property long long latestByteDate;
@property (retain) NSObject<OS_dispatch_data> *savedData;
@property bool shouldComposeIntialData;
@property (readonly) NSDate *startDate;
@property long long state;
@property (readonly) NetworkServiceProxyRequestStats *stats;
@property void*telemetryTimer;
@property (readonly) NPTunnel *tunnel;
@property int tunnelError;
@property bool useCustomHostnameValidation;
@property void*window;

- (void).cxx_destruct;
- (id)appData;
- (id)appRule;
- (void)cleanupLosingConnection:(bool)arg1;
- (void)closeClientFlowWithError:(int)arg1;
- (void)closeFromDirectConnectionWithError:(int)arg1;
- (void)closeFromTunnel;
- (void)closeWithError:(int)arg1;
- (id)combineStateInfo:(id)arg1 andConnectionInfo:(id)arg2;
- (id)copyConnectionInfo;
- (void)copyConnectionInfoWithCompletionHandler:(id /* block */)arg1;
- (id)createFallbackConnectionInfoWithFallbackReason:(long long)arg1;
- (void)createTelemetryDataWithCompletionHandler:(id /* block */)arg1;
- (void)dealloc;
- (bool)enableDirectRace;
- (id)extraFlowProperties;
- (double)fallbackDelay;
- (bool)fallbackDisabled;
- (long long)fallbackReason;
- (void*)fallbackTimer;
- (id)firstTxByteTimestamp;
- (void)handleAppData:(id)arg1;
- (void)handleTunnelCanHandleMoreData;
- (void)handleTunnelConnected;
- (void)handleTunnelDisconnected;
- (void)handleTunnelReadyForData;
- (bool)hasTunnel;
- (unsigned long long)hashKey;
- (unsigned long long)identifier;
- (void)increaseWindowSize:(unsigned long long)arg1;
- (id)initWithTunnel:(id)arg1 appRule:(id)arg2 hashKey:(unsigned long long)arg3 extraFlowProperties:(id)arg4;
- (unsigned long long)initialBytesLeftOver;
- (bool)isBestEffort;
- (bool)isClientFlowClosed;
- (bool)isDirectConnectionViable;
- (long long)latestByteDate;
- (void)processConnectionInfo:(id)arg1;
- (void)readDataFromClient;
- (void)reportMetrics;
- (void)reportTelemetry:(id)arg1 withService:(id)arg2 url:(id)arg3;
- (id)savedData;
- (void)sendDataToClient:(id)arg1 fromTunnel:(bool)arg2;
- (void)setAppData:(id)arg1;
- (void)setEnableDirectRace:(bool)arg1;
- (void)setFallbackDelay:(double)arg1;
- (void)setFallbackDisabled:(bool)arg1;
- (void)setFallbackReason:(long long)arg1;
- (void)setFallbackTimer:(void*)arg1;
- (void)setFirstTxByteTimestamp:(id)arg1;
- (void)setHasTunnel:(bool)arg1;
- (void)setIdentifier:(unsigned long long)arg1;
- (void)setInitialBytesLeftOver:(unsigned long long)arg1;
- (void)setIsDirectConnectionViable:(bool)arg1;
- (void)setLatestByteDate:(long long)arg1;
- (void)setSavedData:(id)arg1;
- (void)setShouldComposeIntialData:(bool)arg1;
- (void)setState:(long long)arg1;
- (void)setTelemetryTimer:(void*)arg1;
- (void)setTunnelError:(int)arg1;
- (void)setUseCustomHostnameValidation:(bool)arg1;
- (void)setWindow:(void*)arg1;
- (bool)shouldComposeIntialData;
- (bool)shouldSendDataToClient:(id)arg1 fromTunnel:(bool)arg2;
- (id)startDate;
- (void)startDirectConnection;
- (long long)state;
- (id)stats;
- (void)stopDirectConnection;
- (void*)telemetryTimer;
- (id)tunnel;
- (int)tunnelError;
- (bool)useCustomHostnameValidation;
- (void*)window;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

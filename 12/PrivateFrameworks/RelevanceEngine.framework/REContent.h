<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>REContent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/RelevanceEngine.framework/REContent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/RelevanceEngine.framework/RelevanceEngine (204.1.32)
 */

@interface REContent : NSObject <NSCoding, NSCopying, REIndentedDescription> {
    NSMutableDictionary * _contents;
    NSTimeZone * _timeZone;
}

@property (nonatomic, copy) UIImage *bodyImage;
@property (nonatomic, retain) NSString *bodyImageCompositingFilter;
@property (nonatomic, copy) REImageContentProvider *bodyImageContentProvider;
@property (nonatomic, copy) CLKImageProvider *bodyImageProvider;
@property (nonatomic) bool bodyImageShouldStretch;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long description1FontStyle;
@property (nonatomic, copy) NSAttributedString *description1Text;
@property (nonatomic, copy) RETextContentProvider *description1TextContentProvider;
@property (nonatomic, copy) CLKTextProvider *description1TextProvider;
@property (nonatomic) unsigned long long description2FontStyle;
@property (nonatomic, copy) NSAttributedString *description2Text;
@property (nonatomic, copy) RETextContentProvider *description2TextContentProvider;
@property (nonatomic, copy) CLKTextProvider *description2TextProvider;
@property (nonatomic, copy) NSAttributedString *description3Text;
@property (nonatomic, copy) RETextContentProvider *description3TextContentProvider;
@property (nonatomic, copy) CLKTextProvider *description3TextProvider;
@property (nonatomic, copy) REAccessoryDescription *descriptionAccessory;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long headerFontStyle;
@property (nonatomic, copy) UIImage *headerImage;
@property (nonatomic, copy) REImageContentProvider *headerImageContentProvider;
@property (nonatomic) unsigned int headerImageEdge;
@property (nonatomic, copy) CLKImageProvider *headerImageProvider;
@property (nonatomic, copy) NSAttributedString *headerText;
@property (nonatomic, copy) RETextContentProvider *headerTextContentProvider;
@property (nonatomic, copy) CLKTextProvider *headerTextProvider;
@property (nonatomic, copy) REAccessoryImage *imageAccessory;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } imageFocusRect;
@property (nonatomic, copy) REAccessoryMatchup *matchupAccessory;
@property (nonatomic, retain) UIImage *overrideBodyImage;
@property (nonatomic, copy) NSString *overrideBodyString;
@property (nonatomic, retain) UIImage *overrideHeaderImage;
@property (nonatomic) unsigned long long punchThrough;
@property (nonatomic) unsigned long long style;
@property (readonly) Class superclass;
@property (nonatomic, copy) UIColor *tintColor;
@property (nonatomic) bool tintColorAffectsHeader;
@property (nonatomic) bool useMonospaceFont;
@property (nonatomic) bool wantsFullCellPhoto;

// Image: /System/Library/PrivateFrameworks/RelevanceEngine.framework/RelevanceEngine

- (void).cxx_destruct;
- (id)bodyImage;
- (id)bodyImageCompositingFilter;
- (id)bodyImageContentProvider;
- (id)bodyImageProvider;
- (bool)bodyImageShouldStretch;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (unsigned long long)description1FontStyle;
- (id)description1Text;
- (id)description1TextContentProvider;
- (id)description1TextProvider;
- (unsigned long long)description2FontStyle;
- (id)description2Text;
- (id)description2TextContentProvider;
- (id)description2TextProvider;
- (id)description3Text;
- (id)description3TextContentProvider;
- (id)description3TextProvider;
- (id)descriptionAccessory;
- (id)descriptionWithIndent:(unsigned long long)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (unsigned long long)headerFontStyle;
- (id)headerImage;
- (id)headerImageContentProvider;
- (unsigned int)headerImageEdge;
- (id)headerImageProvider;
- (id)headerText;
- (id)headerTextContentProvider;
- (id)headerTextProvider;
- (id)imageAccessory;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })imageFocusRect;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)matchupAccessory;
- (id)objectForKey:(id)arg1;
- (id)overrideBodyImage;
- (id)overrideBodyString;
- (id)overrideHeaderImage;
- (unsigned long long)punchThrough;
- (void)setBodyImage:(id)arg1;
- (void)setBodyImageCompositingFilter:(id)arg1;
- (void)setBodyImageContentProvider:(id)arg1;
- (void)setBodyImageProvider:(id)arg1;
- (void)setBodyImageShouldStretch:(bool)arg1;
- (void)setDescription1FontStyle:(unsigned long long)arg1;
- (void)setDescription1Text:(id)arg1;
- (void)setDescription1TextContentProvider:(id)arg1;
- (void)setDescription1TextProvider:(id)arg1;
- (void)setDescription2FontStyle:(unsigned long long)arg1;
- (void)setDescription2Text:(id)arg1;
- (void)setDescription2TextContentProvider:(id)arg1;
- (void)setDescription2TextProvider:(id)arg1;
- (void)setDescription3Text:(id)arg1;
- (void)setDescription3TextContentProvider:(id)arg1;
- (void)setDescription3TextProvider:(id)arg1;
- (void)setDescriptionAccessory:(id)arg1;
- (void)setHeaderFontStyle:(unsigned long long)arg1;
- (void)setHeaderImage:(id)arg1;
- (void)setHeaderImageContentProvider:(id)arg1;
- (void)setHeaderImageEdge:(unsigned int)arg1;
- (void)setHeaderImageProvider:(id)arg1;
- (void)setHeaderText:(id)arg1;
- (void)setHeaderTextContentProvider:(id)arg1;
- (void)setHeaderTextProvider:(id)arg1;
- (void)setImageAccessory:(id)arg1;
- (void)setImageFocusRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setMatchupAccessory:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setOverrideBodyImage:(id)arg1;
- (void)setOverrideBodyString:(id)arg1;
- (void)setOverrideHeaderImage:(id)arg1;
- (void)setPunchThrough:(unsigned long long)arg1;
- (void)setStyle:(unsigned long long)arg1;
- (void)setTintColor:(id)arg1;
- (void)setTintColorAffectsHeader:(bool)arg1;
- (void)setUseMonospaceFont:(bool)arg1;
- (void)setWantsFullCellPhoto:(bool)arg1;
- (unsigned long long)style;
- (id)tintColor;
- (bool)tintColorAffectsHeader;
- (bool)useMonospaceFont;
- (bool)wantsFullCellPhoto;

// Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion

+ (id)dashedContentTextProvider;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RERelevanceEngine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/RelevanceEngine.framework/RERelevanceEngine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/RelevanceEngine.framework/RelevanceEngine (204.1.32)
 */

@interface RERelevanceEngine : NSObject <RELoggable> {
    NSMutableDictionary * _addedElementsByIdentifier;
    bool  _automaticallyResumeEngine;
    RERelevanceEngineConfiguration * _configuration;
    NSArray * _configurationSectionDescriptors;
    RELiveElementCoordinator * _coordinator;
    REDataSourceCatalog * _dataSourceCatalog;
    REDataSourceManager * _dataSourceManager;
    _REEngineDefaults * _defaults;
    REFeatureTransmuter * _featureTransmuter;
    NSArray * _historicSectionDescriptors;
    NSDictionary * _inflectionFeatureValues;
    REFeatureMapGenerator * _inputFeatureMapGenerator;
    REEngineLocationManager * _locationManager;
    RERelevanceEngineLogger * _logger;
    REFeatureSet * _mlFeatures;
    REMLModelManager * _modelManager;
    NSString * _name;
    REFeatureMapGenerator * _outputFeatureMapGenerator;
    RERelevanceEnginePreferencesController * _preferenceController;
    NSObject<OS_dispatch_queue> * _queue;
    REFeatureSet * _rootFeatures;
    bool  _running;
    NSArray * _sectionDescriptors;
    NSMutableArray * _subsystems;
    RETrainingManager * _trainingManager;
}

@property (nonatomic) bool automaticallyResumeEngine;
@property (nonatomic, readonly) RERelevanceEngineConfiguration *configuration;
@property (nonatomic, readonly) RELiveElementCoordinator *coordinator;
@property (nonatomic, readonly) REDataSourceCatalog *dataSourceCatalog;
@property (nonatomic, readonly) REDataSourceManager *dataSourceManager;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) _REEngineDefaults *defaults;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) RERelevanceEnginePreferences *effectivePreferences;
@property (nonatomic, readonly) REFeatureTransmuter *featureTransmuter;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *historicSectionDescriptors;
@property (nonatomic, readonly) NSDictionary *inflectionFeatureValues;
@property (nonatomic, readonly) REEngineLocationManager *locationManager;
@property (nonatomic, readonly) RERelevanceEngineLogger *logger;
@property (nonatomic, readonly) REFeatureSet *mlFeatures;
@property (nonatomic, readonly) REMLModelManager *modelManager;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) REFeatureSet *rootFeatures;
@property (getter=isRunning, nonatomic, readonly) bool running;
@property (nonatomic, readonly) NSArray *sectionDescriptors;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *subsystemQueue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) RETrainingManager *trainingManager;
@property (nonatomic, readonly) bool wantsImmutableContent;

+ (void)prewarmWithConfiguration:(id)arg1;

- (void).cxx_destruct;
- (void)_addSubsystem:(id)arg1;
- (void)_captureAndStoreDiagnosticLogs:(id /* block */)arg1;
- (id)_newLogFilePath;
- (void)_queue_pauseSubsystem:(id)arg1;
- (void)_queue_resumeSubsystem:(id)arg1;
- (void)_removeSubsystem:(id)arg1;
- (void)_validateSectionDescriptors:(id)arg1;
- (void)addElement:(id)arg1 section:(id)arg2;
- (void)addObserver:(id)arg1;
- (void)addTrainingContext:(id)arg1;
- (bool)automaticallyResumeEngine;
- (void)collectLoggableState:(id /* block */)arg1;
- (id)configuration;
- (id)coordinator;
- (id)dataSourceCatalog;
- (id)dataSourceManager;
- (void)dealloc;
- (id)defaults;
- (id)description;
- (id)dictionaryFromElement:(id)arg1;
- (id)effectivePreferences;
- (id)elementAtPath:(id)arg1;
- (id)elementFromDictionary:(id)arg1;
- (void)enumerateSectionDescriptorsWithOptions:(unsigned long long)arg1 includeHistoric:(bool)arg2 usingBlock:(id /* block */)arg3;
- (id)featureTransmuter;
- (id)historicSectionDescriptors;
- (id)historicSectionForSection:(id)arg1;
- (id)inflectionFeatureValues;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithName:(id)arg1 configuration:(id)arg2;
- (bool)isRunning;
- (bool)isSectionWithNameHistoric:(id)arg1;
- (id)locationManager;
- (id)logger;
- (id)mlFeatures;
- (id)modelManager;
- (id)name;
- (id)newInputFeatureMap;
- (id)newOutputFeatureMap;
- (unsigned long long)numberOfElementsInSection:(id)arg1;
- (id)pathForElement:(id)arg1;
- (void)pause;
- (void)pauseForSimulation;
- (id)predictionForElementAtPath:(id)arg1;
- (void)removeElement:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)removePreferencesForObject:(id)arg1;
- (void)removeTrainingContext:(id)arg1;
- (void)resume;
- (void)resumeFromSimulation;
- (id)rootFeatures;
- (void)saveModelFile;
- (id)sectionDescriptors;
- (id)sectionForHistoricSection:(id)arg1;
- (void)setAutomaticallyResumeEngine:(bool)arg1;
- (void)setPreferences:(id)arg1 forObject:(id)arg2;
- (void)storeDiagnosticLogs:(id /* block */)arg1;
- (void)storeDiagnosticLogsToFile:(id /* block */)arg1;
- (id)subsystemQueue;
- (void)trainWithPendingEvents;
- (id)trainingManager;
- (bool)wantsImmutableContent;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DDParsecCollectionViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/DataDetectorsUI.framework/DDParsecCollectionViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI (331.18)
 */

@interface DDParsecCollectionViewController : UINavigationController <DDParsecHostVCInterface, UIAdaptivePresentationControllerDelegate, UINavigationControllerDelegate> {
    NSArray * _actions;
    UIVisualEffectView * _blurView;
    NSDictionary * _context;
    id /* block */  _dismissCompletionHandler;
    <DDParsecCollectionDelegate> * _parsecDelegate;
    bool  _previewMode;
    long long  _previousStatusBarStyle;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _queryRange;
    NSString * _queryString;
    DDParsecRemoteCollectionViewController * _remoteViewController;
    DDScannerResult * _result;
    bool  _sheetMode;
    bool  _showingError;
    bool  _showingFTE;
    long long  _style;
    UITapGestureRecognizer * _tapGesture;
}

@property (copy) NSArray *actions;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (copy) id /* block */ dismissCompletionHandler;
@property (readonly) unsigned long long hash;
@property <DDParsecCollectionDelegate> *parsecDelegate;
@property (nonatomic) long long style;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_blurEffect;
- (id)_blurEffectWithTraitCollection:(id)arg1;
- (void)_interactionEnded;
- (void)_updatePreferredContentSize;
- (id)actions;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (void)appDidEnterBackground;
- (void)appWillEnterForeground;
- (id /* block */)dismissCompletionHandler;
- (void)doneButtonPressed:(id)arg1;
- (void)doneButtonPressed:(id)arg1 punchout:(bool)arg2;
- (void)fetchRemoteViewControllerWithValidInput:(bool)arg1;
- (void)getStatusBarHidden:(id /* block */)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithResult:(struct __DDResult { }*)arg1 context:(id)arg2;
- (id)initWithString:(id)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)interactionEndedWithPunchout:(bool)arg1;
- (void)openParsecURL:(id)arg1;
- (void)openTrailerPunchout:(id)arg1;
- (id)parsecDelegate;
- (void)presentRemoteCollection:(id)arg1;
- (void)presentationController:(id)arg1 willPresentWithAdaptiveStyle:(long long)arg2 transitionCoordinator:(id)arg3;
- (id)previewActionItems;
- (void)replaceControllerWithController:(id)arg1;
- (void)setActions:(id)arg1;
- (void)setDismissCompletionHandler:(id /* block */)arg1;
- (void)setParsecDelegate:(id)arg1;
- (void)setPreviewMode:(bool)arg1;
- (void)setSheetMode:(bool)arg1;
- (void)setStyle:(long long)arg1;
- (void)showError:(id)arg1;
- (void)showSpinner;
- (void)showingErrorView:(bool)arg1;
- (void)showingFTE:(bool)arg1;
- (long long)style;
- (void)updateVisualMode;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKFreeTransformGestureRecognizer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PencilKit.framework/PKFreeTransformGestureRecognizer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PencilKit.framework/PencilKit (1)
 */

@interface PKFreeTransformGestureRecognizer : UIGestureRecognizer {
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _accumulatedTransform;
    NSMapTable * _actualTouchStartLocations;
    bool  _allowSingleTouchDrag;
    unsigned long long  _allowedPanEdges;
    bool  _axisAligned;
    bool  _canBegin;
    double  _cancelThreshold;
    double  _deltaScale;
    bool  _isPanning;
    bool  _isScaling;
    double  _maxScale;
    double  _minScale;
    double  _previousScale;
    double  _scaleDamping;
    double  _scaleThreshold;
    double  _startThreshold;
    NSMapTable * _touchStartLocations;
    NSMutableOrderedSet * _touches;
}

@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } accumulatedTransform;
@property (nonatomic, retain) NSMapTable *actualTouchStartLocations;
@property (nonatomic) bool allowSingleTouchDrag;
@property (nonatomic) unsigned long long allowedPanEdges;
@property (nonatomic) bool axisAligned;
@property (nonatomic) bool canBegin;
@property (nonatomic) double cancelThreshold;
@property (nonatomic) double deltaScale;
@property (nonatomic, readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } freeTransform;
@property (nonatomic) bool isPanning;
@property (nonatomic) bool isScaling;
@property (nonatomic) double maxScale;
@property (nonatomic) double minScale;
@property (nonatomic) double previousScale;
@property (nonatomic, readonly) double scale;
@property (nonatomic) double scaleDamping;
@property (nonatomic, readonly) bool scaleIsGrowing;
@property (nonatomic, readonly) bool scaleIsShrinking;
@property (nonatomic) double scaleThreshold;
@property (nonatomic) double startThreshold;
@property (nonatomic, retain) NSMapTable *touchStartLocations;
@property (nonatomic, readonly) NSMutableOrderedSet *touches;
@property (nonatomic, readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } unscaledFreeTransform;

- (void).cxx_destruct;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })accumulatedTransform;
- (id)actualTouchStartLocations;
- (bool)allowSingleTouchDrag;
- (unsigned long long)allowedPanEdges;
- (bool)axisAligned;
- (bool)canBegin;
- (double)cancelThreshold;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })clampTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1 minScale:(double)arg2 maxScale:(double)arg3;
- (void)clearTouches;
- (double)deltaScale;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })freeTransform;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (bool)isPanning;
- (bool)isScaling;
- (struct CGPoint { double x1; double x2; })locationInView:(id)arg1;
- (double)maxScale;
- (double)minScale;
- (double)previousScale;
- (void)reset;
- (void)resetAndAccumulateTransform;
- (void)resetStartingTouches;
- (double)scale;
- (double)scaleDamping;
- (bool)scaleIsGrowing;
- (bool)scaleIsShrinking;
- (double)scaleThreshold;
- (void)setAccumulatedTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setActualTouchStartLocations:(id)arg1;
- (void)setAllowSingleTouchDrag:(bool)arg1;
- (void)setAllowedPanEdges:(unsigned long long)arg1;
- (void)setAxisAligned:(bool)arg1;
- (void)setCanBegin:(bool)arg1;
- (void)setCancelThreshold:(double)arg1;
- (void)setDeltaScale:(double)arg1;
- (void)setIsPanning:(bool)arg1;
- (void)setIsScaling:(bool)arg1;
- (void)setMaxScale:(double)arg1;
- (void)setMinScale:(double)arg1;
- (void)setPreviousScale:(double)arg1;
- (void)setScaleDamping:(double)arg1;
- (void)setScaleThreshold:(double)arg1;
- (void)setStartThreshold:(double)arg1;
- (void)setTouchStartLocations:(id)arg1;
- (double)startThreshold;
- (id)touchStartLocations;
- (id)touches;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2 rejectExcessTouches:(bool)arg3;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (bool)touchesMovedPastScaleThreshold:(double)arg1;
- (bool)touchesMovedPastThreshold:(double)arg1;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })unscaledFreeTransform;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

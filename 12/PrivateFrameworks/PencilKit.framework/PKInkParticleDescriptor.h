<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PKInkParticleDescriptor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PencilKit.framework/PKInkParticleDescriptor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PencilKit.framework/PencilKit (1)
 */

@interface PKInkParticleDescriptor : NSObject {
    bool  _adjustEndCapParticleAlpha;
    double  _dynamicStep;
    long long  _particleCount;
    unsigned long long  _particleRotation;
    struct CGSize { 
        double width; 
        double height; 
    }  _particleSize;
    double  _particleSpacing;
    struct unique_ptr<PKFunction, std::__1::default_delete<PKFunction> > { 
        struct __compressed_pair<PKFunction *, std::__1::default_delete<PKFunction> > { 
            struct PKFunction {} *__value_; 
        } __ptr_; 
    }  _particleSpacingFunction;
    struct CGImage { } * _textureImage;
    NSString * _textureName;
}

@property (nonatomic) long long particleCount;
@property (nonatomic) unsigned long long particleRotation;
@property (nonatomic) struct CGSize { double x1; double x2; } particleSize;
@property (nonatomic) double particleSpacing;
@property (nonatomic, retain) struct CGImage { }*textureImage;
@property (nonatomic, copy) NSString *textureName;

+ (id)particleDescriptorWithName:(id)arg1 texture:(struct CGImage { }*)arg2 particleSpacing:(double)arg3 particleCount:(long long)arg4 particleSize:(struct CGSize { double x1; double x2; })arg5 particleRotation:(unsigned long long)arg6;

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)adjustEndCapParticleAlpha;
- (double)dynamicStep;
- (long long)particleCount;
- (unsigned long long)particleRotation;
- (struct CGSize { double x1; double x2; })particleSize;
- (double)particleSpacing;
- (struct unique_ptr<PKFunction, std::__1::default_delete<PKFunction> > { struct __compressed_pair<PKFunction *, std::__1::default_delete<PKFunction> > { struct PKFunction {} *x_1_1_1; } x1; }*)particleSpacingFunction;
- (void)setAdjustEndCapParticleAlpha:(bool)arg1;
- (void)setDynamicStep:(double)arg1;
- (void)setParticleCount:(long long)arg1;
- (void)setParticleRotation:(unsigned long long)arg1;
- (void)setParticleSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setParticleSpacing:(double)arg1;
- (void)setParticleSpacingFunction:(struct unique_ptr<PKFunction, std::__1::default_delete<PKFunction> > { struct __compressed_pair<PKFunction *, std::__1::default_delete<PKFunction> > { struct PKFunction {} *x_1_1_1; } x1; })arg1;
- (void)setTextureImage:(struct CGImage { }*)arg1;
- (void)setTextureName:(id)arg1;
- (struct CGImage { }*)textureImage;
- (id)textureName;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VUIStoreAuxMediaItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUI.framework/VUIStoreAuxMediaItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI (282.60.36)
 */

@interface VUIStoreAuxMediaItem : TVPBaseMediaItem <TVPContentKeyLoading, VUIStoreFPSKeyLoaderDelegate> {
    VUIMutableBookmark * _bookmark;
    NSString * _bookmarkID;
    NSNumber * _bookmarkOverrideTime;
    bool  _disableResumeMenu;
    bool  _disableScrubbing;
    NSDictionary * _fpsAdditionalServerParams;
    NSURL * _fpsCertificateURL;
    NSError * _fpsKeyError;
    NSURL * _fpsKeyServerURL;
    bool  _isAudioOnly;
    bool  _isForDownload;
    bool  _isHLS;
    NSObject * _parentReportingToken;
    long long  _playbackType;
    TVPPlayer * _scrubPlayer;
    VUIStoreFPSKeyLoader * _storeFPSKeyLoader;
    NSURL * _url;
    VUIVideoManagedObject * _videoManagedObject;
}

@property (nonatomic, retain) VUIMutableBookmark *bookmark;
@property (nonatomic, copy) NSString *bookmarkID;
@property (nonatomic, copy) NSNumber *bookmarkOverrideTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disableResumeMenu;
@property (nonatomic) bool disableScrubbing;
@property (nonatomic, copy) NSDictionary *fpsAdditionalServerParams;
@property (nonatomic, copy) NSURL *fpsCertificateURL;
@property (nonatomic, retain) NSError *fpsKeyError;
@property (nonatomic, copy) NSURL *fpsKeyServerURL;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isAudioOnly;
@property (nonatomic) bool isForDownload;
@property (nonatomic) bool isHLS;
@property (nonatomic, retain) NSObject *parentReportingToken;
@property (nonatomic) long long playbackType;
@property (nonatomic, retain) TVPPlayer *scrubPlayer;
@property (nonatomic, retain) VUIStoreFPSKeyLoader *storeFPSKeyLoader;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSURL *url;
@property (nonatomic, retain) VUIVideoManagedObject *videoManagedObject;

+ (void)initialize;

- (void).cxx_destruct;
- (void)_keepKeyLoaderAlive:(id)arg1;
- (id)_offlineKeyDataForKeyRequest:(id)arg1;
- (void)_scrubPlayerItemDidLoad:(id)arg1;
- (void)_userPlaybackSettingsDidChange:(id)arg1;
- (id)bookmark;
- (id)bookmarkID;
- (id)bookmarkOverrideTime;
- (void)cleanUpMediaItem;
- (void)dealloc;
- (bool)disableResumeMenu;
- (bool)disableScrubbing;
- (id)fpsAdditionalServerParams;
- (id)fpsCertificateURL;
- (id)fpsKeyError;
- (id)fpsKeyServerURL;
- (bool)hasTrait:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithVideoManagedObject:(id)arg1 externalBookmarkTime:(id)arg2 externalBookmarkTimeStamp:(id)arg3;
- (bool)isAudioOnly;
- (bool)isEqualToMediaItem:(id)arg1;
- (bool)isForDownload;
- (bool)isHLS;
- (void)loadFairPlayStreamingKeyRequests:(id)arg1;
- (void)loadFairPlayStreamingKeyRequests:(id)arg1 completion:(id /* block */)arg2;
- (id)mediaItemMetadataForProperty:(id)arg1;
- (id)mediaItemURL;
- (id)parentReportingToken;
- (long long)playbackType;
- (void)prepareForLoadingWithCompletion:(id /* block */)arg1;
- (id)replacementErrorForPlaybackError:(id)arg1;
- (id)scrubPlayer;
- (void)setBookmark:(id)arg1;
- (void)setBookmarkID:(id)arg1;
- (void)setBookmarkOverrideTime:(id)arg1;
- (void)setDisableResumeMenu:(bool)arg1;
- (void)setDisableScrubbing:(bool)arg1;
- (void)setFpsAdditionalServerParams:(id)arg1;
- (void)setFpsCertificateURL:(id)arg1;
- (void)setFpsKeyError:(id)arg1;
- (void)setFpsKeyServerURL:(id)arg1;
- (void)setIsAudioOnly:(bool)arg1;
- (void)setIsForDownload:(bool)arg1;
- (void)setIsHLS:(bool)arg1;
- (void)setParentReportingToken:(id)arg1;
- (void)setPlaybackType:(long long)arg1;
- (void)setScrubPlayer:(id)arg1;
- (void)setStoreFPSKeyLoader:(id)arg1;
- (void)setUrl:(id)arg1;
- (void)setVideoManagedObject:(id)arg1;
- (id)storeFPSKeyLoader;
- (void)storeFPSKeyLoader:(id)arg1 didLoadOfflineKeyData:(id)arg2 forKeyRequest:(id)arg3;
- (void)storeFPSKeyLoader:(id)arg1 willFailWithError:(id)arg2 forKeyRequest:(id)arg3;
- (void)updateBookmarkWithSuggestedTime:(double)arg1 forElapsedTime:(double)arg2 duration:(double)arg3 playbackOfMediaItemIsEnding:(bool)arg4;
- (void)updateOfflineKeyWithIdentifier:(id)arg1 updatedOfflineKeyData:(id)arg2;
- (id)url;
- (id)videoManagedObject;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

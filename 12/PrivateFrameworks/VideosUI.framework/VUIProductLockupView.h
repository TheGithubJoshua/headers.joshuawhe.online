<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VUIProductLockupView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUI.framework/VUIProductLockupView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI (282.60.36)
 */

@interface VUIProductLockupView : UIView <VUIRentalExpirationLabelDelegate> {
    NSString * _availabilityText;
    NSArray * _badgeResources;
    VUISeparatorView * _bottomSeparatorView;
    NSString * _contentDescription;
    bool  _contentDescriptionExpanded;
    VUIContentRating * _contentRating;
    UIImage * _contentRatingImage;
    TVImageProxy * _coverArtImageProxy;
    _TVImageView * _coverArtImageView;
    UIImage * _coverArtPlaceholderImage;
    <VUIProductLockupViewDelegate> * _delegate;
    TVFocusableTextView * _descriptionTextView;
    bool  _didSetUpViews;
    UIView * _downloadView;
    NSNumber * _duration;
    VUIRentalExpirationLabel * _expirationLabel;
    NSString * _genre;
    <VUILibraryProductLockupViewLayout> * _layout;
    VUIRoundButton * _leftButton;
    VUIMediaTagsView * _mediaBadgeTagsView;
    VUIMediaTagsView * _mediaInfoTagsView;
    NSNumber * _releaseYear;
    NSString * _subtitle;
    VUILabel * _subtitleLabel;
    VUISeparatorView * _topSeparatorView;
}

@property (nonatomic, copy) NSString *availabilityText;
@property (nonatomic, copy) NSArray *badgeResources;
@property (nonatomic, retain) VUISeparatorView *bottomSeparatorView;
@property (nonatomic, copy) NSString *contentDescription;
@property (nonatomic) bool contentDescriptionExpanded;
@property (nonatomic, copy) VUIContentRating *contentRating;
@property (nonatomic, retain) UIImage *contentRatingImage;
@property (nonatomic, readonly) TVImageProxy *coverArtImageProxy;
@property (nonatomic, retain) _TVImageView *coverArtImageView;
@property (nonatomic, readonly) UIImage *coverArtPlaceholderImage;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VUIProductLockupViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) TVFocusableTextView *descriptionTextView;
@property (nonatomic) bool didSetUpViews;
@property (nonatomic, retain) UIView *downloadView;
@property (nonatomic, retain) NSNumber *duration;
@property (nonatomic, retain) VUIRentalExpirationLabel *expirationLabel;
@property (nonatomic, copy) NSString *genre;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <VUILibraryProductLockupViewLayout> *layout;
@property (nonatomic, retain) VUIRoundButton *leftButton;
@property (nonatomic, retain) VUIMediaTagsView *mediaBadgeTagsView;
@property (nonatomic, retain) VUIMediaTagsView *mediaInfoTagsView;
@property (nonatomic, copy) NSNumber *releaseYear;
@property (nonatomic, copy) NSString *subtitle;
@property (nonatomic, retain) VUILabel *subtitleLabel;
@property (readonly) Class superclass;
@property (nonatomic, retain) VUISeparatorView *topSeparatorView;

+ (id)productLockupViewWithMedia:(id)arg1;

- (void).cxx_destruct;
- (id)_contentDescriptionAttributedString;
- (double)_descriptionBottomMarginWithBaselineMargin:(double)arg1;
- (double)_descriptionTopMarginWithBaselineMargin:(double)arg1 otherFont:(id)arg2;
- (struct CGSize { double x1; double x2; })_layoutForCategoryAccessibility:(struct CGSize { double x1; double x2; })arg1 metricsOnly:(bool)arg2;
- (struct CGSize { double x1; double x2; })_layoutForCompact:(struct CGSize { double x1; double x2; })arg1 metricsOnly:(bool)arg2;
- (struct CGSize { double x1; double x2; })_layoutForStacked:(struct CGSize { double x1; double x2; })arg1 metricsOnly:(bool)arg2;
- (struct CGSize { double x1; double x2; })_layoutWithSize:(struct CGSize { double x1; double x2; })arg1 metricsOnly:(bool)arg2;
- (struct CGSize { double x1; double x2; })_sizeOfDescriptionLabel:(double)arg1;
- (id)availabilityText;
- (id)badgeResources;
- (id)bottomSeparatorView;
- (id)contentDescription;
- (bool)contentDescriptionExpanded;
- (id)contentRating;
- (id)contentRatingImage;
- (id)coverArtImageProxy;
- (id)coverArtImageView;
- (id)coverArtPlaceholderImage;
- (id)delegate;
- (id)descriptionTextView;
- (bool)didSetUpViews;
- (id)downloadView;
- (id)duration;
- (id)expirationLabel;
- (id)genre;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)layout;
- (void)layoutSubviews;
- (id)leftButton;
- (id)mediaBadgeTagsView;
- (id)mediaInfoTagsView;
- (id)releaseYear;
- (void)rentalExpirationLabelNeedsRelayout:(id)arg1;
- (void)setAvailabilityText:(id)arg1;
- (void)setBadgeResources:(id)arg1;
- (void)setBottomSeparatorView:(id)arg1;
- (void)setContentDescription:(id)arg1;
- (void)setContentDescriptionExpanded:(bool)arg1;
- (void)setContentRating:(id)arg1;
- (void)setContentRatingImage:(id)arg1;
- (void)setCoverArtImageProxy:(id)arg1 placeholderImage:(id)arg2;
- (void)setCoverArtImageView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDescriptionTextView:(id)arg1;
- (void)setDidSetUpViews:(bool)arg1;
- (void)setDownloadView:(id)arg1;
- (void)setDuration:(id)arg1;
- (void)setExpirationLabel:(id)arg1;
- (void)setGenre:(id)arg1;
- (void)setLayout:(id)arg1;
- (void)setLeftButton:(id)arg1;
- (void)setMediaBadgeTagsView:(id)arg1;
- (void)setMediaInfoTagsView:(id)arg1;
- (void)setReleaseYear:(id)arg1;
- (void)setSubtitle:(id)arg1;
- (void)setSubtitleLabel:(id)arg1;
- (void)setTopSeparatorView:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)subtitle;
- (id)subtitleLabel;
- (id)topSeparatorView;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateWithMediaEntity:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VUIVideoAdvisoryViewLayout.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUI.framework/VUIVideoAdvisoryViewLayout.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI (282.60.36)
 */

@interface VUIVideoAdvisoryViewLayout : TVViewLayout {
    UIColor * _dividerColor;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _dividerMargin;
    struct CGSize { 
        double width; 
        double height; 
    }  _dividerSize;
    UIColor * _legendBackgroundColor;
    double  _legendCornerRadius;
    VUITextLayout * _legendDescriptionLayout;
    VUITextLayout * _legendLayout;
    double  _legendMaxWidth;
    struct CGSize { 
        double width; 
        double height; 
    }  _legendSize;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _legendsMargin;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _logoMargin;
    struct CGSize { 
        double width; 
        double height; 
    }  _logoSize;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _portraitDividerMargin;
    struct CGSize { 
        double width; 
        double height; 
    }  _portraitDividerSize;
    VUITextLayout * _portraitLegendDescriptionLayout;
    VUITextLayout * _portraitLegendLayout;
    struct CGSize { 
        double width; 
        double height; 
    }  _portraitLegendSize;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _portraitLegendsMargin;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _portraitLogoMargin;
    struct CGSize { 
        double width; 
        double height; 
    }  _portraitLogoSize;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _portraitMargin;
}

@property (nonatomic, readonly) UIColor *dividerColor;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } dividerMargin;
@property (nonatomic) struct CGSize { double x1; double x2; } dividerSize;
@property (nonatomic, readonly) UIColor *legendBackgroundColor;
@property (nonatomic) double legendCornerRadius;
@property (nonatomic, readonly) VUITextLayout *legendDescriptionLayout;
@property (nonatomic, readonly) VUITextLayout *legendLayout;
@property (nonatomic) double legendMaxWidth;
@property (nonatomic) struct CGSize { double x1; double x2; } legendSize;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } legendsMargin;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } logoMargin;
@property (nonatomic) struct CGSize { double x1; double x2; } logoSize;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } portraitDividerMargin;
@property (nonatomic) struct CGSize { double x1; double x2; } portraitDividerSize;
@property (nonatomic, readonly) VUITextLayout *portraitLegendDescriptionLayout;
@property (nonatomic, readonly) VUITextLayout *portraitLegendLayout;
@property (nonatomic) struct CGSize { double x1; double x2; } portraitLegendSize;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } portraitLegendsMargin;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } portraitLogoMargin;
@property (nonatomic) struct CGSize { double x1; double x2; } portraitLogoSize;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } portraitMargin;

+ (id)layoutWithLayout:(id)arg1 element:(id)arg2;

- (void).cxx_destruct;
- (id)dividerColor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })dividerMargin;
- (struct CGSize { double x1; double x2; })dividerSize;
- (id)init;
- (id)legendBackgroundColor;
- (double)legendCornerRadius;
- (id)legendDescriptionLayout;
- (id)legendLayout;
- (double)legendMaxWidth;
- (struct CGSize { double x1; double x2; })legendSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })legendsMargin;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })logoMargin;
- (struct CGSize { double x1; double x2; })logoSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })portraitDividerMargin;
- (struct CGSize { double x1; double x2; })portraitDividerSize;
- (id)portraitLegendDescriptionLayout;
- (id)portraitLegendLayout;
- (struct CGSize { double x1; double x2; })portraitLegendSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })portraitLegendsMargin;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })portraitLogoMargin;
- (struct CGSize { double x1; double x2; })portraitLogoSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })portraitMargin;
- (void)setDividerMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDividerSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setLegendCornerRadius:(double)arg1;
- (void)setLegendMaxWidth:(double)arg1;
- (void)setLegendSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setLegendsMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLogoMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLogoSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPortraitDividerMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPortraitDividerSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPortraitLegendSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPortraitLegendsMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPortraitLogoMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setPortraitLogoSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPortraitMargin:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

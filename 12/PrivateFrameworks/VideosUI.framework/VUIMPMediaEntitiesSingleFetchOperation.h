<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VUIMPMediaEntitiesSingleFetchOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUI.framework/VUIMPMediaEntitiesSingleFetchOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI (282.60.36)
 */

@interface VUIMPMediaEntitiesSingleFetchOperation : VUIAsynchronousOperation {
    VUIMediaEntityType * _currentFetchMediaEntityType;
    NSError * _error;
    VUIMediaEntityKind * _mediaEntityKind;
    VUIMPMediaLibrary * _mediaLibrary;
    MPMediaPredicate * _mediaQueryPredicate;
    NSDictionary * _mediaQuerySortOrderingDirectionMappings;
    NSArray * _mediaQuerySortOrderingProperties;
    NSArray * _postFetchSortDescriptors;
    NSMutableSet * _prefetchProperties;
    bool  _processPredicateAfterFetch;
    bool  _processRangeAfterFetch;
    VUIMediaEntityFetchRequest * _request;
    VUIMediaEntityFetchResponse * _response;
}

@property (nonatomic, retain) VUIMediaEntityType *currentFetchMediaEntityType;
@property (nonatomic, copy) NSError *error;
@property (nonatomic, retain) VUIMediaEntityKind *mediaEntityKind;
@property (nonatomic, retain) VUIMPMediaLibrary *mediaLibrary;
@property (nonatomic, retain) MPMediaPredicate *mediaQueryPredicate;
@property (nonatomic, retain) NSDictionary *mediaQuerySortOrderingDirectionMappings;
@property (nonatomic, retain) NSArray *mediaQuerySortOrderingProperties;
@property (nonatomic, retain) NSArray *postFetchSortDescriptors;
@property (nonatomic, retain) NSMutableSet *prefetchProperties;
@property (nonatomic) bool processPredicateAfterFetch;
@property (nonatomic) bool processRangeAfterFetch;
@property (nonatomic, retain) VUIMediaEntityFetchRequest *request;
@property (nonatomic, copy) VUIMediaEntityFetchResponse *response;

+ (id)_sortIndexesWithMediaQuerySection:(id)arg1;

- (void).cxx_destruct;
- (void)_addEntityLimitToMediaQuery:(id)arg1;
- (void)_addPredicateToMediaQuery:(id)arg1;
- (void)_addPrefetchPropertiesToMediaQuery:(id)arg1;
- (void)_addSortingPropertiesToMediaQuery:(id)arg1;
- (id)_baseMediaQuery;
- (id)_bitTestMediaQueryPropertyPredicateWithKeyPathBitTestExpression:(id)arg1 operatorType:(unsigned long long)arg2 constantExpression:(id)arg3;
- (id)_coalesceResponses:(id)arg1;
- (id)_collectionsFetchResponseWithMediaQuery:(id)arg1;
- (id)_fetchResponseWithMediaEntities:(id)arg1 mediaQuerySections:(id)arg2;
- (bool)_isSortingBeingPerformedByMediaQuery;
- (id)_itemsFetchResponseWithMediaQuery:(id)arg1;
- (id)_keyPathMediaQueryPropertyPredicateWithKeyPathExpression:(id)arg1 operatorType:(unsigned long long)arg2 constantExpression:(id)arg3;
- (id)_mediaEntities:(id)arg1 subarrayWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)_mediaEntityKind;
- (id)_mediaEntityPropertyDescriptorForFilteringWithKeyPath:(id)arg1;
- (id)_mediaQuery;
- (id)_mediaQueryPredicateForCompoundPredicate:(id)arg1;
- (id)_mediaQueryPredicateForPredicate:(id)arg1;
- (id)_mediaQueryPropertyPredicateForComparisonPredicate:(id)arg1;
- (void)_populatePrefetchProperties;
- (id)_processFetchedMediaEntities:(id)arg1;
- (void)_processPredicate;
- (void)_processRange;
- (void)_processSortDescriptors;
- (bool)_shouldSortUsingMediaQuery;
- (id)currentFetchMediaEntityType;
- (id)error;
- (void)executionDidBegin;
- (id)init;
- (id)initWithMediaLibrary:(id)arg1 request:(id)arg2;
- (id)mediaEntityKind;
- (id)mediaLibrary;
- (id)mediaQueryPredicate;
- (id)mediaQuerySortOrderingDirectionMappings;
- (id)mediaQuerySortOrderingProperties;
- (id)postFetchSortDescriptors;
- (id)prefetchProperties;
- (bool)processPredicateAfterFetch;
- (bool)processRangeAfterFetch;
- (id)request;
- (id)response;
- (void)setCurrentFetchMediaEntityType:(id)arg1;
- (void)setError:(id)arg1;
- (void)setMediaEntityKind:(id)arg1;
- (void)setMediaLibrary:(id)arg1;
- (void)setMediaQueryPredicate:(id)arg1;
- (void)setMediaQuerySortOrderingDirectionMappings:(id)arg1;
- (void)setMediaQuerySortOrderingProperties:(id)arg1;
- (void)setPostFetchSortDescriptors:(id)arg1;
- (void)setPrefetchProperties:(id)arg1;
- (void)setProcessPredicateAfterFetch:(bool)arg1;
- (void)setProcessRangeAfterFetch:(bool)arg1;
- (void)setRequest:(id)arg1;
- (void)setResponse:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

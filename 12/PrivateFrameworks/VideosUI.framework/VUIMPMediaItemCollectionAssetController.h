<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VUIMPMediaItemCollectionAssetController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUI.framework/VUIMPMediaItemCollectionAssetController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI (282.60.36)
 */

@interface VUIMPMediaItemCollectionAssetController : NSObject <VUIMediaEntityAssetController, VUIMediaEntityAssetControllerDelegate> {
    NSArray * _assetControllers;
    NSObject<OS_dispatch_queue> * _completionDispatchQueue;
    <VUIMediaEntityAssetControllerDelegate> * _delegate;
    unsigned long long  _fullyDownloadedAssetBytes;
    NSObject<VUIMediaEntityIdentifier> * _mediaEntityIdentifier;
    MPMediaItemCollection * _mediaItemCollection;
    NSObject<OS_dispatch_queue> * _serialProcessingDispatchQueue;
    VUIMediaEntityAssetControllerState * _state;
    bool  _supportsStartingDownload;
}

@property (nonatomic, retain) NSArray *assetControllers;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *completionDispatchQueue;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VUIMediaEntityAssetControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long fullyDownloadedAssetBytes;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSObject<VUIMediaEntityIdentifier> *mediaEntityIdentifier;
@property (nonatomic, readonly, copy) VUIMediaEntityType *mediaEntityType;
@property (nonatomic, retain) MPMediaItemCollection *mediaItemCollection;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *serialProcessingDispatchQueue;
@property (nonatomic, copy) VUIMediaEntityAssetControllerState *state;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsStartingDownload;

+ (id)_downloadingAssetControllersWithAssetControllers:(id)arg1;
+ (id)_stateFromDownloadingAssetControllers:(id)arg1 fullyDownloadedAssetBytes:(unsigned long long)arg2;

- (void).cxx_destruct;
- (bool)_allAssetsDownloaded;
- (void)_enqueueAsyncProcessingQueueStrongSelfBlock:(id /* block */)arg1;
- (void)_enqueueCompletionQueueBlock:(id /* block */)arg1;
- (void)_notifyDelegateStateDidChange:(id)arg1;
- (void)_onProcessingQueue_cancelAndRemoveDownload;
- (void)_onProcessingQueue_invalidate;
- (void)_onProcessingQueue_pauseDownload;
- (void)_onProcessingQueue_resumeDownload;
- (void)_onProcessingQueue_setState:(id)arg1 andNotifyDelegate:(bool)arg2;
- (void)_onProcessingQueue_startDownloadWithCompletion:(id /* block */)arg1;
- (void)_onProcessingQueue_updateStateAndNotifyDelegate:(bool)arg1;
- (id)assetControllers;
- (void)cancelAndRemoveDownload;
- (id)completionDispatchQueue;
- (id)delegate;
- (unsigned long long)fullyDownloadedAssetBytes;
- (id)init;
- (id)initWithMediaItemCollection:(id)arg1 mediaEntityIdentifier:(id)arg2 serialProcessingDispatchQueue:(id)arg3;
- (void)invalidate;
- (void)mediaEntityAssetController:(id)arg1 stateDidChange:(id)arg2;
- (id)mediaEntityIdentifier;
- (id)mediaEntityType;
- (id)mediaItemCollection;
- (void)pauseDownload;
- (void)resumeDownload;
- (id)serialProcessingDispatchQueue;
- (void)setAssetControllers:(id)arg1;
- (void)setCompletionDispatchQueue:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFullyDownloadedAssetBytes:(unsigned long long)arg1;
- (void)setMediaEntityIdentifier:(id)arg1;
- (void)setMediaItemCollection:(id)arg1;
- (void)setSerialProcessingDispatchQueue:(id)arg1;
- (void)setState:(id)arg1;
- (void)startDownloadWithCompletion:(id /* block */)arg1;
- (id)state;
- (bool)supportsStartingDownload;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VUIMediaLibraryFetchControllerQueue.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUI.framework/VUIMediaLibraryFetchControllerQueue.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI (282.60.36)
 */

@interface VUIMediaLibraryFetchControllerQueue : NSObject <VUINowPlayingObserverDelegate> {
    VUIMediaLibraryFetchControllerQueueOperation * _currentFetchOperation;
    VUIDelayOperation * _delayContentsChangeOperation;
    <VUIMediaLibraryFetchControllerQueueDelegate> * _delegate;
    VUIMediaLibrary * _mediaLibrary;
    unsigned long long  _mediaLibraryRevision;
    NSMutableArray * _mutableFetchControllers;
    VUINowPlayingObserver * _nowPlayingObserver;
    bool  _paused;
    NSOperationQueue * _serialFetchOperationQueue;
    NSObject<OS_dispatch_queue> * _serialProcessingDispatchQueue;
    bool  _shouldFetchOnResume;
}

@property (nonatomic, retain) VUIMediaLibraryFetchControllerQueueOperation *currentFetchOperation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) VUIDelayOperation *delayContentsChangeOperation;
@property (nonatomic) <VUIMediaLibraryFetchControllerQueueDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSArray *fetchControllers;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) VUIMediaLibrary *mediaLibrary;
@property (nonatomic) unsigned long long mediaLibraryRevision;
@property (nonatomic, retain) NSMutableArray *mutableFetchControllers;
@property (nonatomic, retain) VUINowPlayingObserver *nowPlayingObserver;
@property (getter=isPaused, nonatomic) bool paused;
@property (nonatomic, retain) NSOperationQueue *serialFetchOperationQueue;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *serialProcessingDispatchQueue;
@property (nonatomic) bool shouldFetchOnResume;
@property (readonly) Class superclass;

+ (id)defaultQueueWithMediaLibrary:(id)arg1;

- (void).cxx_destruct;
- (void)_addStateObserverForFetchControllers:(id)arg1;
- (void)_delayContentsChangeOperationDidComplete:(id)arg1;
- (void)_enqueueAsyncProcessingQueueBlock:(id /* block */)arg1;
- (void)_enqueueControllerFetchOperation;
- (void)_enqueueProcessingQueueBlock:(id /* block */)arg1 synchronous:(bool)arg2;
- (void)_enqueueSyncProcessingQueueBlock:(id /* block */)arg1;
- (void)_handleMediaLibraryContentsChange;
- (void)_handleMediaLibraryContentsDidChangeNotification:(id)arg1;
- (void)_notifyDelegateFetchDidComplete;
- (void)_queueOperationDidComplete:(id)arg1;
- (void)_removeStateObserverForFetchControllers:(id)arg1;
- (void)addFetchController:(id)arg1;
- (void)addFetchControllers:(id)arg1;
- (id)currentFetchOperation;
- (void)dealloc;
- (id)delayContentsChangeOperation;
- (id)delegate;
- (id)fetchControllers;
- (id)init;
- (id)initWithMediaLibrary:(id)arg1;
- (bool)isPaused;
- (id)mediaLibrary;
- (unsigned long long)mediaLibraryRevision;
- (id)mutableFetchControllers;
- (id)nowPlayingObserver;
- (void)nowPlayingObserver:(id)arg1 latestObservationDidChange:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pauseFetching;
- (void)removeFetchController:(id)arg1;
- (void)removeFetchControllers:(id)arg1;
- (void)resumeFetching;
- (id)serialFetchOperationQueue;
- (id)serialProcessingDispatchQueue;
- (void)setCurrentFetchOperation:(id)arg1;
- (void)setDelayContentsChangeOperation:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setMediaLibrary:(id)arg1;
- (void)setMediaLibraryRevision:(unsigned long long)arg1;
- (void)setMutableFetchControllers:(id)arg1;
- (void)setNowPlayingObserver:(id)arg1;
- (void)setPaused:(bool)arg1;
- (void)setSerialFetchOperationQueue:(id)arg1;
- (void)setSerialProcessingDispatchQueue:(id)arg1;
- (void)setShouldFetchOnResume:(bool)arg1;
- (bool)shouldFetchOnResume;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

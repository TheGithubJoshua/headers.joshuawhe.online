<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VUIMediaEntityFetchRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUI.framework/VUIMediaEntityFetchRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI (282.60.36)
 */

@interface VUIMediaEntityFetchRequest : NSObject <NSCopying> {
    NSString * _groupingKeyPath;
    id /* block */  _groupingSortComparator;
    NSString * _identifier;
    NSSet * _mediaEntityTypes;
    NSDictionary * _options;
    NSPredicate * _predicate;
    NSSet * _properties;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _range;
    NSArray * _sortDescriptors;
}

@property (nonatomic, readonly) bool _isCollectionsFetch;
@property (nonatomic, readonly) bool _isItemsFetch;
@property (nonatomic, readonly) bool _isSeasonsFetch;
@property (nonatomic, readonly) bool _isShowsFetch;
@property (nonatomic, copy) NSString *groupingKeyPath;
@property (nonatomic, copy) id /* block */ groupingSortComparator;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSSet *mediaEntityTypes;
@property (nonatomic, copy) NSDictionary *options;
@property (nonatomic, copy) NSPredicate *predicate;
@property (nonatomic, copy) NSSet *properties;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } range;
@property (nonatomic, copy) NSArray *sortDescriptors;

+ (id)_HLSResolutionPredicateWithResolution:(id)arg1;
+ (id)_addedDateSortDescriptor;
+ (id)_addedToDateSortDescriptor;
+ (id)_any4KResolutionPredicate;
+ (id)_anyHDRColorCapabilityPredicate;
+ (id)_episodeNumberSortDescriptor;
+ (id)_episodesFetchRequestWithSeasonIdentifier:(id)arg1 showIdentifier:(id)arg2;
+ (id)_finalizedSortDescriptorFromSortDescriptor:(id)arg1 mediaEntityKind:(id)arg2;
+ (id)_finalizedSortDescriptorsFromSortDescriptors:(id)arg1 mediaEntityKind:(id)arg2;
+ (id)_identifierPredicateWithIdentifier:(id)arg1;
+ (id)_includeSortIndexesOptions;
+ (id)_isEqualPredicateWithAdamId:(id)arg1;
+ (id)_isInPredicateWithAdamId:(id)arg1;
+ (id)_isLocalPredicate;
+ (id)_minimalMovieRentalsPropertiesFetchRequest;
+ (id)_minimalMoviesPropertiesFetchRequest;
+ (id)_minimalPropertiesFetchRequestWithType:(id)arg1;
+ (id)_minimalShowsPropertiesFetchRequest;
+ (id)_predicateWithSubpredicates:(id)arg1 compoundPredicateType:(unsigned long long)arg2;
+ (id)_releaseDateSortDescriptor;
+ (id)_releaseYearSortDescriptor;
+ (id)_resolutionPredicateWithResolution:(id)arg1;
+ (id)_seasonIdentifierPredicateWithIdentifier:(id)arg1;
+ (id)_seasonNumberSortDescriptor;
+ (id)_seasonsFetchRequestWithSeasonIdentifier:(id)arg1;
+ (id)_seasonsFetchRequestWithShowIdentifier:(id)arg1;
+ (id)_showIdentifierPredicateWithIdentifier:(id)arg1;
+ (id)_showTitleSortDescriptor;
+ (id)_titleSortDescriptor;
+ (id)episodesFetchRequest;
+ (id)episodesFetchRequestWithSeasonIdentifier:(id)arg1;
+ (id)episodesGroupedBySeasonIdentifierFetchRequestWithShowIdentifier:(id)arg1;
+ (id)homeVideosFetchRequest;
+ (id)mediaEntityFetchRequestWithIdentifier:(id)arg1;
+ (id)movieRentalsFetchRequest;
+ (id)moviesFetchRequest;
+ (id)seasonsFetchRequest;
+ (id)seasonsFetchRequestWithSeasonIdentifier:(id)arg1;
+ (id)seasonsFetchRequestWithShowIdentifier:(id)arg1;
+ (id)showsFetchRequest;

- (void).cxx_destruct;
- (void)_addPredicate:(id)arg1;
- (void)_didUpdateRequestProperties;
- (bool)_isCollectionsFetch;
- (bool)_isItemsFetch;
- (bool)_isSeasonsFetch;
- (bool)_isShowsFetch;
- (id)_manualSortDescriptorsWithMediaEntityKind:(id)arg1 propertiesRequiredForSort:(id*)arg2;
- (bool)_shouldGenerateGroupingSortIndexes;
- (bool)_shouldGenerateSortIndexes;
- (id)_sortIndexPropertyKeyWithMediaEntityKind:(id)arg1;
- (void)add4KResolutionPredicate;
- (void)addAdamIdPredicate:(id)arg1;
- (void)addAdamIdsPredicate:(id)arg1;
- (void)addDownloadStatePredicateForStates:(unsigned long long)arg1;
- (void)addGroupingSortIndexesOption;
- (void)addHDRColorCapabilityOr4KResolutionPredicate;
- (void)addHDRColorCapabilityPredicate;
- (void)addIsLocalPredicate;
- (void)addRecentlyAddedSortDescriptorWithLimit:(unsigned long long)arg1;
- (void)addSortIndexesOption;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)groupingKeyPath;
- (id /* block */)groupingSortComparator;
- (unsigned long long)hash;
- (id)identifier;
- (id)init;
- (id)initWithMediaEntityType:(id)arg1;
- (id)initWithMediaEntityTypes:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)mediaEntityTypes;
- (id)options;
- (id)predicate;
- (id)properties;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })range;
- (void)setGroupingKeyPath:(id)arg1;
- (void)setGroupingSortComparator:(id /* block */)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMediaEntityTypes:(id)arg1;
- (void)setOptions:(id)arg1;
- (void)setPredicate:(id)arg1;
- (void)setProperties:(id)arg1;
- (void)setRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setSortDescriptors:(id)arg1;
- (id)sortDescriptors;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

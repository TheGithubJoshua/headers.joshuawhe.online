<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VideosExtrasCarouselCollectionViewCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideosUI.framework/VideosExtrasCarouselCollectionViewCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideosUI.framework/VideosUI (282.60.36)
 */

@interface VideosExtrasCarouselCollectionViewCell : UICollectionViewCell <UIGestureRecognizerDelegate, VideosExtrasCarouselCollectionViewCell> {
    bool  _allowsPinchingThumbnailImageForInteractiveZoomingImageTransition;
    UILabel * _descriptionLabel;
    MPUContentSizeLayoutConstraint * _descriptionLabelBaselineConstraint;
    VideosExtrasZoomingImageInteractiveTransitionSourceContext * _interactiveTransitionSourceContext;
    unsigned long long  _itemIndex;
    UIPinchGestureRecognizer * _pinchGestureRecognizer;
    MPUContentSizeLayoutConstraint * _subtitleBaselineConstraint;
    UILabel * _subtitleLabel;
    UIView * _textContainer;
    VideosExtrasConstrainedArtworkContainerView * _thumbnailImageContainerView;
    NSArray * _thumbnailImageContainerViewConstraints;
    NSLayoutConstraint * _thumbnailImageContainerViewHeightConstraint;
    UILabel * _titleLabel;
    struct CGSize { 
        double width; 
        double height; 
    }  _windowSize;
    NSString * _zoomingImageTransitionIdentifier;
}

@property (nonatomic) bool allowsPinchingThumbnailImageForInteractiveZoomingImageTransition;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UILabel *descriptionLabel;
@property (nonatomic, retain) MPUContentSizeLayoutConstraint *descriptionLabelBaselineConstraint;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) VideosExtrasZoomingImageInteractiveTransitionSourceContext *interactiveTransitionSourceContext;
@property (nonatomic) unsigned long long itemIndex;
@property (nonatomic, retain) UIPinchGestureRecognizer *pinchGestureRecognizer;
@property (nonatomic, retain) MPUContentSizeLayoutConstraint *subtitleBaselineConstraint;
@property (nonatomic, retain) UILabel *subtitleLabel;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIView *textContainer;
@property (nonatomic, readonly) double thumbnailImageContainerHeight;
@property (nonatomic, retain) VideosExtrasConstrainedArtworkContainerView *thumbnailImageContainerView;
@property (nonatomic, retain) NSArray *thumbnailImageContainerViewConstraints;
@property (nonatomic, retain) NSLayoutConstraint *thumbnailImageContainerViewHeightConstraint;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic) struct CGSize { double x1; double x2; } windowSize;
@property (nonatomic, copy) NSString *zoomingImageTransitionIdentifier;

- (void).cxx_destruct;
- (double)_descriptionLabelTopInset;
- (void)_handlePinchGesture:(id)arg1;
- (void)_setupDescriptionLabelWithConstraintsAccumulator:(id)arg1;
- (void)_setupSubtitleLabelWithConstraintsAccumulator:(id)arg1;
- (void)_setupThumbnailImageContainerViewWithConstraintsAccumulator:(id)arg1;
- (void)_setupTitleLabelWithConstraintsAccumulator:(id)arg1;
- (void)_updateThumbnailArtworkViewBorder;
- (bool)allowsPinchingThumbnailImageForInteractiveZoomingImageTransition;
- (void)dealloc;
- (id)descriptionLabel;
- (id)descriptionLabelBaselineConstraint;
- (id)descriptionText;
- (id)descriptionTextStyle;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(bool)arg2;
- (id)interactiveTransitionSourceContext;
- (unsigned long long)itemIndex;
- (id)lockupElement;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (id)pinchGestureRecognizer;
- (void)prepareForReuse;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)setAllowsPinchingThumbnailImageForInteractiveZoomingImageTransition:(bool)arg1;
- (void)setDescriptionLabel:(id)arg1;
- (void)setDescriptionLabelBaselineConstraint:(id)arg1;
- (void)setDescriptionText:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setInteractiveTransitionSourceContext:(id)arg1;
- (void)setItemIndex:(unsigned long long)arg1;
- (void)setPinchGestureRecognizer:(id)arg1;
- (void)setSubtitleBaselineConstraint:(id)arg1;
- (void)setSubtitleLabel:(id)arg1;
- (void)setSubtitleText:(id)arg1;
- (void)setTextContainer:(id)arg1;
- (void)setThumbnailBorderColor:(id)arg1;
- (void)setThumbnailImage:(id)arg1;
- (void)setThumbnailImageAccessibilityText:(id)arg1;
- (void)setThumbnailImageContainerView:(id)arg1;
- (void)setThumbnailImageContainerViewConstraints:(id)arg1;
- (void)setThumbnailImageContainerViewHeightConstraint:(id)arg1;
- (void)setThumbnailImagePlaceholder:(id)arg1;
- (void)setThumbnailMaxSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setThumbnailOverlayImage:(id)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setTitleText:(id)arg1;
- (void)setWindowSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setZoomingImageTransitionIdentifier:(id)arg1;
- (id)subtitleBaselineConstraint;
- (id)subtitleLabel;
- (id)subtitleText;
- (id)subtitleTextStyle;
- (id)textContainer;
- (id)thumbnailImage;
- (id)thumbnailImageAccessibilityText;
- (double)thumbnailImageContainerHeight;
- (id)thumbnailImageContainerView;
- (id)thumbnailImageContainerViewConstraints;
- (id)thumbnailImageContainerViewHeightConstraint;
- (id)thumbnailImagePlaceholder;
- (struct CGSize { double x1; double x2; })thumbnailMaxSize;
- (id)titleLabel;
- (id)titleText;
- (id)titleTextStyle;
- (void)updateConstraints;
- (struct CGSize { double x1; double x2; })windowSize;
- (id)zoomingImageTransitionIdentifier;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

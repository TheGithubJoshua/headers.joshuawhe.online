<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PAEEquirectProjectFilter.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ProVideo.framework/PAEEquirectProjectFilter.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ProVideo.framework/ProVideo (398.0.87)
 */

@interface PAEEquirectProjectFilter : PAEFilterDefaultBase

- (bool)addParameters;
- (bool)canThrowRenderOutput:(id)arg1 withInput:(id)arg2 withInfo:(struct { union { double x_1_1_1; struct { /* ? */ } *x_1_1_2; } x1; unsigned long long x2; unsigned long long x3; double x4; double x5; unsigned long long x6; })arg3;
- (struct PCMatrix44Tmpl<double> { double x1[4][4]; })composeViewMatrix:(union { double x1; struct { /* ? */ } *x2; })arg1 withCameraBehavior:(int)arg2 heroAngle:(double)arg3;
- (double)convertToFOVXFromFOVY:(double)arg1 width:(double)arg2 height:(double)arg3;
- (double)convertToFOVYFromFOVX:(double)arg1 width:(double)arg2 height:(double)arg3;
- (bool)frameCleanup;
- (bool)frameSetup:(struct { union { double x_1_1_1; struct { /* ? */ } *x_1_1_2; } x1; unsigned long long x2; unsigned long long x3; double x4; double x5; unsigned long long x6; })arg1 hardware:(bool*)arg2 software:(bool*)arg3;
- (void)getEdgeMode:(unsigned int*)arg1 withInfo:(struct { union { double x_1_1_1; struct { /* ? */ } *x_1_1_2; } x1; unsigned long long x2; unsigned long long x3; double x4; double x5; unsigned long long x6; })arg2;
- (double)getInitialYaw:(union { double x1; struct { /* ? */ } *x2; })arg1;
- (bool)getIsFrontFacing:(union { double x1; struct { /* ? */ } *x2; })arg1;
- (bool)getOutputWidth:(unsigned long long*)arg1 height:(unsigned long long*)arg2 withInput:(struct { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; bool x8; double x9; })arg3 withInfo:(struct { union { double x_1_1_1; struct { /* ? */ } *x_1_1_2; } x1; unsigned long long x2; unsigned long long x3; double x4; double x5; unsigned long long x6; })arg4;
- (struct HGEquirectProjectParams { float x1[3]; float x2[3]; float x3[3]; float x4; float x5; bool x6; float x7; float x8; float x9; float x10; float x11; float x12; int x13; int x14; int x15; int x16; bool x17; bool x18; float x19[4]; float x20[4]; float x21[4]; float x22[4]; })getParams:(struct { union { double x_1_1_1; struct { /* ? */ } *x_1_1_2; } x1; unsigned long long x2; unsigned long long x3; double x4; double x5; unsigned long long x6; })arg1 withOutputImage:(id)arg2 inputImage:(id)arg3 width:(unsigned long long)arg4 height:(unsigned long long)arg5 outputWidth:(unsigned long long)arg6 outputHeight:(unsigned long long)arg7 xRotation:(double)arg8 yRotation:(double)arg9 zRotation:(double)arg10 cameraBehavior:(int)arg11 paramAPI:(id)arg12;
- (void)getProjectionFOVYDegrees:(float*)arg1 FOVXDegrees:(float*)arg2 withFrameAspect:(double)arg3 atTime:(union { double x1; struct { /* ? */ } *x2; })arg4;
- (void)getQuaternion:(union { double x1; struct { /* ? */ } *x2; })arg1 :(double*)arg2 :(double*)arg3 :(double*)arg4 :(double*)arg5;
- (struct PCMatrix44Tmpl<double> { double x1[4][4]; })getViewMatrix:(union { double x1; struct { /* ? */ } *x2; })arg1;
- (id)initWithAPIManager:(id)arg1;
- (id)properties;
- (bool)variesOverTime;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

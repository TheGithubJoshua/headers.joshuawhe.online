<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SearchUIResultTableViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SearchUI.framework/SearchUIResultTableViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SearchUI.framework/SearchUI (1)
 */

@interface SearchUIResultTableViewController : SearchUITableViewController <SKStoreProductViewControllerDelegatePrivate, SearchUITableHeaderViewDelegate, UIGestureRecognizerDelegate, _MKPlaceViewControllerFeedbackDelegate> {
    double  _cachedHeaderHeight;
    NSMutableSet * _expandedSections;
    unsigned long long  _lastVisibleResultsFeedbackEvent;
    NSArray * _latestVisibleHeadersAccountedForInFeedback;
    NSMutableOrderedSet * _latestVisibleResultsAccountedForInFeedback;
    NSMutableArray * _potentiallyVisibleCells;
    NSMutableArray * _potentiallyVisibleHeaders;
    NSArray * _sections;
    NSMutableSet * _sectionsThatHaveBeenExpanded;
}

@property double cachedHeaderHeight;
@property (readonly) NSString *currentQueryString;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) NSMutableSet *expandedSections;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double headerHeight;
@property unsigned long long lastVisibleResultsFeedbackEvent;
@property (retain) NSArray *latestVisibleHeadersAccountedForInFeedback;
@property (retain) NSMutableOrderedSet *latestVisibleResultsAccountedForInFeedback;
@property (retain) NSMutableArray *potentiallyVisibleCells;
@property (retain) NSMutableArray *potentiallyVisibleHeaders;
@property (retain) NSArray *sections;
@property (retain) NSMutableSet *sectionsThatHaveBeenExpanded;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (double)cachedHeaderHeight;
- (id)cellForIndexPath:(id)arg1 reuseIfPossible:(bool)arg2;
- (void)clearResultsFromSection:(id)arg1;
- (id)currentQueryString;
- (bool)defaultApplicationExistsAndSupportsOpenInPlaceForFileURL:(id)arg1 performOpenIfSo:(bool)arg2;
- (bool)defaultApplicationExistsAndSupportsOpenInPlaceForResult:(id)arg1;
- (void)didEngageActionItem:(id)arg1 actionPerformed:(bool)arg2;
- (void)didEngageResult:(id)arg1;
- (bool)downloadDemotedAppIfNecessaryForBundleIdentifier:(id)arg1;
- (void)expandCellsIfNeeded;
- (id)expandedSections;
- (id)fallbackPeekViewControllerForIndexPath:(id)arg1;
- (void)fetchURLForFileResult:(id)arg1 completionHandler:(id /* block */)arg2;
- (unsigned long long)handleSelectionAtIndexPath:(id)arg1 wasPop:(bool)arg2;
- (unsigned long long)handleSelectionOfResult:(id)arg1;
- (double)headerHeight;
- (unsigned long long)indexOfSection:(id)arg1;
- (id)indexPathToSelectForKeyboardOnQuickReturn;
- (id)init;
- (unsigned long long)lastVisibleResultsFeedbackEvent;
- (id)latestVisibleHeadersAccountedForInFeedback;
- (id)latestVisibleResultsAccountedForInFeedback;
- (void)modalViewControllerClosed;
- (double)offScreenContentScrollDistance;
- (void)performExpansion:(bool)arg1 withSectionIndex:(unsigned long long)arg2;
- (void)placeViewController:(id)arg1 shouldLogFeedbackOfType:(int)arg2;
- (id)potentiallyVisibleCells;
- (id)potentiallyVisibleHeaders;
- (void)productViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (void)replaceResult:(id)arg1 withResult:(id)arg2;
- (void)scrollTableToTop;
- (void)scrollViewDidScroll:(id)arg1;
- (bool)sectionIsClearable:(id)arg1;
- (bool)sectionShouldBeExpanded:(id)arg1;
- (id)sections;
- (id)sectionsThatHaveBeenExpanded;
- (void)sendVisibleFeedbackIfNecessary;
- (void)setCachedHeaderHeight:(double)arg1;
- (void)setExpandedSections:(id)arg1;
- (void)setLastVisibleResultsFeedbackEvent:(unsigned long long)arg1;
- (void)setLatestVisibleHeadersAccountedForInFeedback:(id)arg1;
- (void)setLatestVisibleResultsAccountedForInFeedback:(id)arg1;
- (void)setPotentiallyVisibleCells:(id)arg1;
- (void)setPotentiallyVisibleHeaders:(id)arg1;
- (void)setSections:(id)arg1;
- (void)setSectionsThatHaveBeenExpanded:(id)arg1;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didEndDisplayingHeaderView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 editActionsForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableViewDidFinishReload:(id)arg1;
- (void)toggleExpansionForSection:(id)arg1;
- (void)updateDataModel;
- (bool)updateMustAccountForLayout;
- (void)updateWithResultSections:(id)arg1 scrollToTop:(bool)arg2;
- (bool)view:(id)arg1 isVisibleInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (id)viewControllerForIndexPath:(id)arg1 isPeek:(bool)arg2;
- (void)viewWillAppear:(bool)arg1;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

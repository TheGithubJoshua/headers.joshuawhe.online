<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NACIDSServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoAudioControl.framework/NACIDSServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoAudioControl.framework/NanoAudioControl (880.30)
 */

@interface NACIDSServer : NSObject <IDSServiceDelegate, MPAVRoutingControllerDelegate, MPVolumeControllerDelegate> {
    float  _hapticIntensity;
    long long  _hapticState;
    NACEventThrottler * _hapticThrottler;
    IDSService * _idsService;
    bool  _isSystemMuted;
    NSMutableDictionary * _messageRecords;
    bool  _prominentHapticEnabled;
    NSMutableDictionary * _proxyVolumeObservers;
    NACRunAssertion * _proxyVolumeRunAssertion;
    NSMutableDictionary * _routesObservers;
    NSObject<OS_dispatch_queue> * _serialQueue;
    bool  _shouldObserveHapticState;
    bool  _shouldObserveSystemMutedState;
    bool  _shouldPickRouteAfterFetching;
    int  _systemMuteToken;
    NSMutableDictionary * _systemVolumeObservers;
    NACRunAssertion * _systemVolumeRunAssertion;
    NSArray * _volumeAudioCategories;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_beginObservingHapticState;
- (void)_beginObservingProxyVolumeForTarget:(id)arg1 withEndpointRoute:(id)arg2;
- (void)_beginObservingSystemMutedState;
- (void)_beginObservingSystemVolume;
- (void)_cancelProxyVolumeObservationForTarget:(id)arg1;
- (void)_cancelRouteObservationForCategory:(id)arg1;
- (void)_cancelSystemVolumeObservation;
- (void)_handleBeginObservingAudioRoutes:(id)arg1;
- (void)_handleBeginObservingProxyVolumeForTarget:(id)arg1;
- (void)_handleBeginObservingSystemVolume;
- (void)_handleBeginObservingVolume:(id)arg1;
- (void)_handleEndObservingAudioRoutes:(id)arg1;
- (void)_handleEndObservingVolume:(id)arg1;
- (void)_handlePickAudioRoute:(id)arg1;
- (void)_handleSetHapticIntensity:(id)arg1;
- (void)_handleSetHapticState:(id)arg1;
- (void)_handleSetMuted:(id)arg1;
- (void)_handleSetProminentHapticEnabled:(id)arg1;
- (void)_handleSetSystemMuted:(id)arg1;
- (void)_handleSetVolume:(id)arg1;
- (void)_hapticIntensityDidChangeNotification:(id)arg1;
- (bool)_hasRequestedVolumeAtLeastOnce;
- (void)_sendCurrentObservingSystemVolumeValues;
- (void)_sendEUVolumeLimit:(float)arg1 target:(id)arg2;
- (void)_sendHapticState:(long long)arg1;
- (void)_sendMessage:(id)arg1 type:(long long)arg2 timeout:(double)arg3 queueOne:(id)arg4 retry:(bool)arg5;
- (void)_sendMutedState:(bool)arg1 target:(id)arg2;
- (void)_sendSystemMutedState:(bool)arg1;
- (void)_sendVolumeControlAvailability:(bool)arg1 target:(id)arg2;
- (void)_sendVolumeValue:(float)arg1 target:(id)arg2;
- (void)_sendVolumeWarningEnabled:(bool)arg1 target:(id)arg2;
- (void)_setRequestedVolumeAtLeastOnce;
- (bool)_shouldForceVolumeWarning;
- (id)_targetForVolumeController:(id)arg1;
- (void)_updateHapticIntensityValue;
- (void)_updateHapticState;
- (void)_updateProminentHapticState;
- (void)_updateSystemMutedState;
- (void)beginObservingHapticState;
- (void)beginObservingSystemMutedState;
- (void)dealloc;
- (id)initWithVolumeAudioCategories:(id)arg1;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(bool)arg4 error:(id)arg5;
- (void)updateProminentHapticState;
- (void)volumeController:(id)arg1 EUVolumeLimitDidChange:(float)arg2;
- (void)volumeController:(id)arg1 mutedStateDidChange:(bool)arg2;
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(bool)arg2;
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;
- (void)volumeController:(id)arg1 volumeWarningStateDidChange:(long long)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

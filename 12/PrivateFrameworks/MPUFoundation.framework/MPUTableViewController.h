<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPUTableViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MPUFoundation.framework/MPUTableViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation (1)
 */

@interface MPUTableViewController : MPUDataSourceViewController <MPStoreDownloadManagerObserver, MPUActionTableViewDataSource, UITableViewDelegate> {
    Class  _cellConfigurationClass;
    bool  _hasAppearedOnce;
    long long  _numberOfBottomActionRows;
    long long  _numberOfTopActionRows;
    bool  _shouldDeselectImmediately;
    bool  _shouldUpdateVisibleCellsWhenVisible;
    UITableView * _tableView;
    NSMutableArray * _visibleBottomActionRows;
    NSMutableArray * _visibleTopActionRows;
}

@property (nonatomic, readonly) Class cellConfigurationClass;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } contentOffsetRevealingFirstDataSourceSection;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool shouldDeselectImmediately;
@property (nonatomic, readonly) bool shouldScrollToFirstDataSourceSectionOnInitialAppearance;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UITableView *tableView;

+ (Class)_tableViewClass;
+ (id)actionCellConfigurationClasses;
+ (id)actionCellConfigurationClassesForLocation:(unsigned long long)arg1;
+ (id)allActionCellConfigurationClasses;
+ (Class)invalidationContextClass;
+ (bool)usesCellConfigurations;
+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
+ (bool)wantsAutolayoutSizedTableViewRows;

- (void).cxx_destruct;
- (void)_configureCellsAfterScroll;
- (id)_createTableView;
- (void)_loadCellConfiguration;
- (void)_recreateTableView;
- (void)_reloadActionRowsAnimated:(bool)arg1 skipTableViewUpdates:(bool)arg2;
- (void)_setCellConfigurationClass:(Class)arg1;
- (long long)_totalNumberOfSections;
- (void)_updateVisibleCellsForDownloads:(id)arg1 updateAllCells:(bool)arg2;
- (Class)actionCellConfigurationClassForIndexPath:(id)arg1;
- (Class)cellConfigurationClass;
- (Class)cellConfigurationForIndexPath:(id)arg1;
- (void)configureCell:(id)arg1 atIndexPath:(id)arg2 withEntity:(id)arg3 invalidationContext:(id)arg4;
- (struct CGPoint { double x1; double x2; })contentOffsetRevealingFirstDataSourceSection;
- (long long)dataSourceIndexForIndexPath:(id)arg1;
- (long long)dataSourceSectionForSection:(long long)arg1;
- (void)dealloc;
- (void)downloadManager:(id)arg1 didAddDownloads:(id)arg2 removeDownloads:(id)arg3;
- (void)downloadManager:(id)arg1 downloadDidFinish:(id)arg2;
- (void)downloadManager:(id)arg1 downloadPurchaseDidFinish:(id)arg2;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (long long)indexOfFirstDataSourceSection;
- (id)indexPathForDataSourceIndex:(long long)arg1;
- (id)initWithDataSource:(id)arg1;
- (id)initWithDataSource:(id)arg1 cellConfigurationClass:(Class)arg2;
- (bool)isTableViewLoaded;
- (long long)numberOfActionRowsInTableView:(id)arg1;
- (long long)numberOfBottomActionRowsInTableView:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)numberOfTopActionRowsInTableView:(id)arg1;
- (void)reloadActionRowsAnimated:(bool)arg1;
- (void)reloadData;
- (bool)respondsToSelector:(SEL)arg1;
- (id)reuseIdentifierForCellAtIndexPath:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (long long)sectionForDataSourceSection:(long long)arg1;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setShouldDeselectImmediately:(bool)arg1;
- (bool)shouldDeselectImmediately;
- (bool)shouldScrollToFirstDataSourceSectionOnInitialAppearance;
- (bool)shouldShowActionCellConfiguration:(Class)arg1;
- (id)tableView;
- (bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)tableView:(id)arg1 sectionForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 targetIndexPathForMoveFromRowAtIndexPath:(id)arg2 toProposedIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

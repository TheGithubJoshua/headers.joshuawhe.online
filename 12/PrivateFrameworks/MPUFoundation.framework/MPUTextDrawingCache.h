<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPUTextDrawingCache.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MPUFoundation.framework/MPUTextDrawingCache.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation (1)
 */

@interface MPUTextDrawingCache : NSObject {
    id /* block */  _attributedTextProvider;
    NSCache * _cache;
    double  _displayScale;
    unsigned long long  _invalidationNotificationCoalescingRequestsCount;
    NSHashTable * _invalidationObservers;
    unsigned long long  _maximumNumberOfLines;
    bool  _opaque;
    NSOperationQueue * _preHeatingOperationQueue;
    NSStringDrawingContext * _reusableStringDrawingContext;
    MPUTextDrawingCacheKey * _reusableTextDrawingCacheKey;
    NSDictionary * _textAttributes;
    bool  _usesImageCachingInsteadOfStringDrawingContextCaching;
    bool  _wasInvalidatedWithoutNotifyingObservers;
}

@property (nonatomic, copy) id /* block */ attributedTextProvider;
@property (nonatomic) double displayScale;
@property (nonatomic) unsigned long long maximumNumberOfLines;
@property (getter=_isOpaque, setter=_setOpaque:, nonatomic) bool opaque;
@property (nonatomic, copy) NSDictionary *textAttributes;
@property (getter=_usesImageCachingInsteadOfStringDrawingContextCaching, setter=_setUsesImageCachingInsteadOfStringDrawingContextCaching:, nonatomic) bool usesImageCachingInsteadOfStringDrawingContextCaching;

+ (id)_drawingContextForText:(id)arg1 allowedSize:(struct CGSize { double x1; double x2; })arg2 fromCache:(id)arg3 usingReusableStringDrawingContext:(id)arg4 reusableTextDrawingCacheKey:(id)arg5 textAttributes:(id)arg6 maximumNumberOfLines:(unsigned long long)arg7 opaque:(bool)arg8 displayScale:(double)arg9 attributedTextProvider:(id /* block */)arg10;
+ (void)_updateStringDrawingContext:(id)arg1 withMaximumNumberOfLines:(unsigned long long)arg2;
+ (struct CGSize { double x1; double x2; })_validateAllowedSize:(struct CGSize { double x1; double x2; })arg1;

- (void).cxx_destruct;
- (void)_invalidate;
- (bool)_isOpaque;
- (void)_notifyInvalidationObservers;
- (void)_setOpaque:(bool)arg1;
- (void)_setUsesImageCachingInsteadOfStringDrawingContextCaching:(bool)arg1;
- (bool)_usesImageCachingInsteadOfStringDrawingContextCaching;
- (void)addInvalidationObserver:(id)arg1;
- (id /* block */)attributedTextProvider;
- (void)beginCoalescingInvalidationNotifications;
- (void)dealloc;
- (double)displayScale;
- (id)drawingContextForText:(id)arg1 allowedSize:(struct CGSize { double x1; double x2; })arg2;
- (void)endCoalescingInvalidationNotifications;
- (id)init;
- (unsigned long long)maximumNumberOfLines;
- (void)preHeatForStrings:(id)arg1 allowedSize:(struct CGSize { double x1; double x2; })arg2;
- (void)removeInvalidationObserver:(id)arg1;
- (void)setAttributedTextProvider:(id /* block */)arg1;
- (void)setDisplayScale:(double)arg1;
- (void)setMaximumNumberOfLines:(unsigned long long)arg1;
- (void)setTextAttributes:(id)arg1;
- (id)textAttributes;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

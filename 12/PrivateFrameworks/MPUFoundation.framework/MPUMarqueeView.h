<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPUMarqueeView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MPUFoundation.framework/MPUMarqueeView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation (1)
 */

@interface MPUMarqueeView : UIView <CAAnimationDelegate> {
    long long  _animationDirection;
    UIView * _animationReferenceView;
    double  _contentGap;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    UIView * _contentView;
    NSPointerArray * _coordinatedMarqueeViews;
    NSUUID * _currentAnimationID;
    <MPUMarqueeViewDelegate> * _delegate;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _fadeEdgeInsets;
    double  _marqueeDelay;
    bool  _marqueeEnabled;
    double  _marqueeScrollRate;
    long long  _options;
    MPUMarqueeView * _primaryMarqueeView;
    UIView * _viewForContentSize;
}

@property (nonatomic) long long animationDirection;
@property (nonatomic) UIView *animationReferenceView;
@property (nonatomic) double contentGap;
@property (nonatomic) struct CGSize { double x1; double x2; } contentSize;
@property (nonatomic, readonly) UIView *contentView;
@property (nonatomic, readonly) NSArray *coordinatedMarqueeViews;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MPUMarqueeViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } fadeEdgeInsets;
@property (readonly) unsigned long long hash;
@property (nonatomic) double marqueeDelay;
@property (getter=isMarqueeEnabled, nonatomic) bool marqueeEnabled;
@property (nonatomic) double marqueeScrollRate;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIView *viewForContentSize;

- (void).cxx_destruct;
- (void)_applyMarqueeFade;
- (void)_createMarqueeAnimationIfNeeded;
- (void)_createMarqueeAnimationIfNeededWithMaximumDuration:(double)arg1 beginTime:(double)arg2;
- (double)_duration;
- (void)_tearDownMarqueeAnimation;
- (void)addCoordinatedMarqueeView:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(bool)arg2;
- (long long)animationDirection;
- (id)animationReferenceView;
- (double)contentGap;
- (struct CGSize { double x1; double x2; })contentSize;
- (id)contentView;
- (id)coordinatedMarqueeViews;
- (id)delegate;
- (void)didMoveToWindow;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })fadeEdgeInsets;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (bool)isMarqueeEnabled;
- (void)layoutSubviews;
- (double)marqueeDelay;
- (double)marqueeScrollRate;
- (void)resetMarqueePosition;
- (void)setAnimationDirection:(long long)arg1;
- (void)setAnimationReferenceView:(id)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentGap:(double)arg1;
- (void)setContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setFadeEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setMarqueeDelay:(double)arg1;
- (void)setMarqueeEnabled:(bool)arg1;
- (void)setMarqueeEnabled:(bool)arg1 withOptions:(long long)arg2;
- (void)setMarqueeScrollRate:(double)arg1;
- (void)setViewForContentSize:(id)arg1;
- (id)viewForContentSize;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

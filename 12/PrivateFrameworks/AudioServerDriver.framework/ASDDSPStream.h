<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ASDDSPStream.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AudioServerDriver.framework/ASDDSPStream.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AudioServerDriver.framework/AudioServerDriver (440.1)
 */

@interface ASDDSPStream : ASDStream {
    struct unique_ptr<ca::concurrent::guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3>, std::__1::default_delete<ca::concurrent::guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3> > > { 
        struct __compressed_pair<ca::concurrent::guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3> *, std::__1::default_delete<ca::concurrent::guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3> > > { 
            struct guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3> {} *__value_; 
        } __ptr_; 
    }  _clientToGraphMap;
    ASDStreamDSPConfiguration * _currentDSPConfiguration;
    NSUserDefaults * _defaults;
    NSObject<OS_dispatch_queue> * _dspQueue;
    long long  _graphAudioValidationMode;
    struct list<ASDDSPGraphHelper, std::__1::allocator<ASDDSPGraphHelper> > { 
        struct __list_node_base<ASDDSPGraphHelper, void *> { 
            struct __list_node_base<ASDDSPGraphHelper, void *> {} *__prev_; 
            struct __list_node_base<ASDDSPGraphHelper, void *> {} *__next_; 
        } __end_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<ASDDSPGraphHelper, void *> > > { 
            unsigned long long __value_; 
        } __size_alloc_; 
    }  _graphHelpers;
    long long  _ioReferenceCount;
    bool  _isRunning;
    bool  _keepGraphInitialized;
    long long  _maximumFramesPerIOCycle;
    ASDAudioDevice * _owningDevice;
    NSObject<OS_dispatch_queue> * _propertyQueue;
    struct unique_ptr<ASDDSPStreamHelper, std::__1::default_delete<ASDDSPStreamHelper> > { 
        struct __compressed_pair<ASDDSPStreamHelper *, std::__1::default_delete<ASDDSPStreamHelper> > { 
            struct ASDDSPStreamHelper {} *__value_; 
        } __ptr_; 
    }  _streamHelper;
    NSArray * _underlyingStreams;
}

@property (nonatomic, retain) ASDStreamDSPConfiguration *currentDSPConfiguration;
@property (nonatomic) long long graphAudioValidationMode;
@property (nonatomic, readonly) ASDDSPGraph *hardwareDSP;
@property (nonatomic) bool keepGraphInitialized;
@property (nonatomic, readonly) long long maximumFramesPerIOCycle;
@property (nonatomic, retain) NSArray *underlyingStreams;

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)_allocateStreamingResources;
- (void)_allocateStreamingResourcesForGraphHelper:(struct ASDDSPGraphHelper { struct shared_ptr<DSPGraph::Graph> { struct Graph {} *x_1_1_1; struct __shared_weak_count {} *x_1_1_2; } x1; struct unique_ptr<DSPGraph::Graph, std::__1::default_delete<DSPGraph::Graph> > { struct __compressed_pair<DSPGraph::Graph *, std::__1::default_delete<DSPGraph::Graph> > { struct Graph {} *x_1_2_1; } x_2_1_1; } x2; struct unique_ptr<AUProcessingBlock_DSPGraph, std::__1::default_delete<AUProcessingBlock_DSPGraph> > { struct __compressed_pair<AUProcessingBlock_DSPGraph *, std::__1::default_delete<AUProcessingBlock_DSPGraph> > { struct AUProcessingBlock_DSPGraph {} *x_1_2_1; } x_3_1_1; } x3; unsigned long long x4; }*)arg1;
- (void)_deallocateStreamingResources;
- (id)_hardwareDSP;
- (void)_resumeProcessing;
- (void)_suspendProcessing;
- (void)_updateLatency;
- (void)_updateMaximumFramesPerIOCycle;
- (bool)addClientDSP:(id)arg1 forClient:(unsigned int)arg2;
- (bool)addClientDSP:(id)arg1 withKey:(unsigned long long)arg2;
- (bool)addHardwareDSP:(id)arg1;
- (bool)changePhysicalFormat:(id)arg1;
- (id)clientDSPForClient:(unsigned int)arg1;
- (id)currentDSPConfiguration;
- (id)diagnosticDescriptionWithIndent:(id)arg1 walkTree:(bool)arg2;
- (id)driverClassName;
- (long long)graphAudioValidationMode;
- (bool)graphStructureIsValid:(id)arg1 clientID:(unsigned long long)arg2;
- (id)hardwareDSP;
- (id)initWithDirection:(unsigned int)arg1 withPlugin:(id)arg2;
- (id)initWithOwningDevice:(id)arg1 underlyingStreams:(id)arg2 direction:(unsigned int)arg3 plugin:(id)arg4;
- (bool)keepGraphInitialized;
- (long long)maximumFramesPerIOCycle;
- (id /* block */)processOutputBlock;
- (id /* block */)readInputBlock;
- (bool)removeClientDSPForClient:(unsigned int)arg1;
- (bool)removeClientDSPwithKey:(unsigned long long)arg1;
- (bool)removeHardwareDSP;
- (void)resumeProcessing;
- (void)setCurrentDSPConfiguration:(id)arg1;
- (void)setGraphAudioValidationMode:(long long)arg1;
- (void)setKeepGraphInitialized:(bool)arg1;
- (void)setUnderlyingStreams:(id)arg1;
- (void)startStream;
- (void)stopStream;
- (void)suspendProcessing;
- (id)underlyingStreams;
- (void)updateLatency;
- (id /* block */)writeMixBlock;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

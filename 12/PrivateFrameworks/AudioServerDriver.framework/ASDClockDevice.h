<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ASDClockDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AudioServerDriver.framework/ASDClockDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AudioServerDriver.framework/AudioServerDriver (440.1)
 */

@interface ASDClockDevice : ASDObject {
    id /* block */  _beginIOOperationBlock;
    id /* block */  _beginIOOperationBlockUnretained;
    bool  _canChangeDeviceName;
    unsigned int  _clockAlgorithm;
    unsigned int  _clockDomain;
    bool  _clockIsStable;
    <ASDDeviceConfigurationChangeDelegate> * _configurationChangeDelegate;
    NSObject<OS_dispatch_queue> * _controlQueue;
    NSMutableArray * _controls;
    NSString * _deviceName;
    NSString * _deviceUID;
    id /* block */  _endIOOperationBlock;
    id /* block */  _endIOOperationBlockUnretained;
    id /* block */  _getZeroTimestampBlock;
    id /* block */  _getZeroTimestampBlockUnretained;
    bool  _hidden;
    unsigned int  _inputLatency;
    long long  _ioReferenceCount;
    NSObject<OS_dispatch_queue> * _ioReferenceQueue;
    bool  _isAlive;
    bool  _isRunning;
    NSString * _manufacturerName;
    NSString * _modelName;
    NSString * _modelUID;
    unsigned int  _outputLatency;
    NSObject<OS_dispatch_queue> * _sampleRateQueue;
    double  _samplingRate;
    NSArray * _samplingRates;
    unsigned int  _timestampPeriod;
    unsigned int  _transportType;
    NSObject<OS_dispatch_semaphore> * _wakeSemaphore;
}

@property (nonatomic, copy) id /* block */ beginIOOperationBlock;
@property (nonatomic, readonly) id /* block */*beginIOOperationBlockUnretainedPtr;
@property (nonatomic) bool canChangeDeviceName;
@property (nonatomic) unsigned int clockAlgorithm;
@property (nonatomic) unsigned int clockDomain;
@property (nonatomic) bool clockIsStable;
@property (nonatomic) <ASDDeviceConfigurationChangeDelegate> *configurationChangeDelegate;
@property (nonatomic, copy) NSString *deviceName;
@property (nonatomic, readonly, copy) NSString *deviceUID;
@property (nonatomic, copy) id /* block */ endIOOperationBlock;
@property (nonatomic, readonly) id /* block */*endIOOperationBlockUnretainedPtr;
@property (nonatomic, copy) id /* block */ getZeroTimestampBlock;
@property (nonatomic, readonly) id /* block */*getZeroTimestampBlockUnretainedPtr;
@property (getter=isHidden, nonatomic) bool hidden;
@property (nonatomic) unsigned int inputLatency;
@property (nonatomic, readonly, retain) NSObject<OS_dispatch_queue> *ioReferenceQueue;
@property (nonatomic, copy) NSString *manufacturerName;
@property (nonatomic, copy) NSString *modelName;
@property (nonatomic, copy) NSString *modelUID;
@property (nonatomic) unsigned int outputLatency;
@property (getter=isRunning, nonatomic, readonly) bool running;
@property (nonatomic) double samplingRate;
@property (nonatomic, copy) NSArray *samplingRates;
@property (nonatomic) unsigned int timestampPeriod;
@property (nonatomic) unsigned int transportType;

- (void).cxx_destruct;
- (void)_updateSafetyOffsets:(double)arg1;
- (void)_updateTimestampPeriod:(double)arg1;
- (int)addClient:(const struct AudioServerPlugInClientInfo { unsigned int x1; int x2; unsigned char x3; struct __CFString {} *x4; }*)arg1;
- (void)addControl:(id)arg1;
- (id /* block */)beginIOOperationBlock;
- (id /* block */*)beginIOOperationBlockUnretainedPtr;
- (bool)canChangeDeviceName;
- (bool)changeDeviceName:(id)arg1;
- (bool)changeSamplingRate:(double)arg1;
- (unsigned int)clockAlgorithm;
- (unsigned int)clockDomain;
- (bool)clockIsStable;
- (id)configurationChangeDelegate;
- (id)controls;
- (unsigned int)dataSizeForProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned int)arg2 andQualifierData:(const void*)arg3;
- (void)dealloc;
- (id)deviceName;
- (id)deviceUID;
- (id)diagnosticDescriptionWithIndent:(id)arg1 walkTree:(bool)arg2;
- (id)driverClassName;
- (id /* block */)endIOOperationBlock;
- (id /* block */*)endIOOperationBlockUnretainedPtr;
- (bool)getProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned int)arg2 qualifierData:(const void*)arg3 dataSize:(unsigned int*)arg4 andData:(void*)arg5 forClient:(int)arg6;
- (id /* block */)getZeroTimestampBlock;
- (id /* block */*)getZeroTimestampBlockUnretainedPtr;
- (bool)hasProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1;
- (id)initWithDeviceUID:(id)arg1 withPlugin:(id)arg2;
- (id)initWithPlugin:(id)arg1;
- (unsigned int)inputLatency;
- (id)ioReferenceQueue;
- (bool)isHidden;
- (bool)isPropertySettable:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1;
- (bool)isRunning;
- (id)manufacturerName;
- (id)modelName;
- (id)modelUID;
- (unsigned int)objectClass;
- (unsigned int)outputLatency;
- (void)performConfigurationChange:(void*)arg1;
- (int)performStartIO;
- (int)performStopIO;
- (int)removeClient:(const struct AudioServerPlugInClientInfo { unsigned int x1; int x2; unsigned char x3; struct __CFString {} *x4; }*)arg1;
- (void)removeControl:(id)arg1;
- (void)requestConfigurationChange:(id /* block */)arg1;
- (double)samplingRate;
- (id)samplingRates;
- (void)setBeginIOOperationBlock:(id /* block */)arg1;
- (void)setCanChangeDeviceName:(bool)arg1;
- (void)setClockAlgorithm:(unsigned int)arg1;
- (void)setClockDomain:(unsigned int)arg1;
- (void)setClockIsStable:(bool)arg1;
- (void)setConfigurationChangeDelegate:(id)arg1;
- (void)setDeviceName:(id)arg1;
- (void)setEndIOOperationBlock:(id /* block */)arg1;
- (void)setGetZeroTimestampBlock:(id /* block */)arg1;
- (void)setHidden:(bool)arg1;
- (void)setInputLatency:(unsigned int)arg1;
- (void)setManufacturerName:(id)arg1;
- (void)setModelName:(id)arg1;
- (void)setModelUID:(id)arg1;
- (void)setOutputLatency:(unsigned int)arg1;
- (bool)setProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned int)arg2 qualifierData:(const void*)arg3 dataSize:(unsigned int)arg4 andData:(const void*)arg5 forClient:(int)arg6;
- (void)setSamplingRate:(double)arg1;
- (void)setSamplingRates:(id)arg1;
- (void)setTimestampPeriod:(unsigned int)arg1;
- (void)setTransportType:(unsigned int)arg1;
- (int)startIOForClient:(unsigned int)arg1;
- (int)stopIOForClient:(unsigned int)arg1;
- (void)systemHasPoweredOn;
- (void)systemWillSleep;
- (unsigned int)timestampPeriod;
- (unsigned int)transportType;
- (void)updateTimestampPeriod;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ASDPlugin.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AudioServerDriver.framework/ASDPlugin.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AudioServerDriver.framework/AudioServerDriver (440.1)
 */

@interface ASDPlugin : ASDObject <ASDDeviceConfigurationChangeDelegate, ASDPropertyChangedDelegate> {
    NSObject<OS_dispatch_queue> * _audioDeviceQueue;
    NSMutableDictionary * _audioDevices;
    NSObject<OS_dispatch_queue> * _boxQueue;
    NSMutableDictionary * _boxes;
    NSString * _bundleID;
    NSObject<OS_dispatch_queue> * _clockDeviceQueue;
    NSMutableDictionary * _clockDevices;
    struct AudioServerPlugInDriverInterface {} ** _driverRef;
    struct AudioServerPlugInDriverInterface { void *x1; int (*x2)(); int (*x3)(); int (*x4)(); int (*x5)(); int (*x6)(); int (*x7)(); int (*x8)(); int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); int (*x13)(); int (*x14)(); int (*x15)(); int (*x16)(); int (*x17)(); int (*x18)(); int (*x19)(); int (*x20)(); int (*x21)(); int (*x22)(); int (*x23)(); } * _interfacePtr;
    NSString * _manufacturerName;
    unsigned int  _nextObjectID;
    NSObject<OS_dispatch_queue> * _objectQueue;
    NSMapTable * _objects;
    struct AudioServerPlugInHostInterface { int (*x1)(); int (*x2)(); int (*x3)(); int (*x4)(); int (*x5)(); } * _pluginHost;
    unsigned int  _pluginRefCount;
    unsigned int  _powerConnection;
    struct IONotificationPort { } * _powerNotificationPort;
    NSObject<OS_dispatch_queue> * _powerNotificationQueue;
    unsigned int  _powerNotifier;
    unsigned int  _transportType;
}

@property (nonatomic, readonly) NSString *bundleID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) struct AudioServerPlugInDriverInterface {}**driverRef;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int transportType;

- (void).cxx_destruct;
- (void)_handlePowerNotificationWithMessageType:(unsigned int)arg1 andArgument:(long long)arg2;
- (void)addAudioDevice:(id)arg1;
- (void)addAudioDevices:(id)arg1;
- (void)addBox:(id)arg1;
- (void)addCAObject:(id)arg1;
- (void)addClockDevice:(id)arg1;
- (void)addClockDevices:(id)arg1;
- (void)addDevice:(id)arg1;
- (void)addDevices:(id)arg1;
- (unsigned int)addRef;
- (id)arrayForKey:(id)arg1;
- (id)audioDevices;
- (id)boxes;
- (id)bundleID;
- (void)changedProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 forObject:(id)arg2;
- (void)changedProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 forObjectID:(unsigned int)arg2;
- (id)clockDevices;
- (unsigned int)dataSizeForProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned int)arg2 andQualifierData:(const void*)arg3;
- (void)dealloc;
- (bool)deregisterForSystemSleepNotifications;
- (id)devices;
- (id)diagnosticDescriptionWithIndent:(id)arg1 walkTree:(bool)arg2;
- (id)dictionaryForKey:(id)arg1;
- (id)driverClassName;
- (struct AudioServerPlugInDriverInterface {}**)driverRef;
- (bool)getProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1 withQualifierSize:(unsigned int)arg2 qualifierData:(const void*)arg3 dataSize:(unsigned int*)arg4 andData:(void*)arg5 forClient:(int)arg6;
- (void)halInitializeWithPluginHost:(struct AudioServerPlugInHostInterface { int (*x1)(); int (*x2)(); int (*x3)(); int (*x4)(); int (*x5)(); }*)arg1;
- (bool)hasProperty:(const struct AudioObjectPropertyAddress { unsigned int x1; unsigned int x2; unsigned int x3; }*)arg1;
- (id)init;
- (unsigned int)objectClass;
- (id)objectForObjectID:(unsigned int)arg1;
- (unsigned int)objectIDForBoxUID:(id)arg1;
- (unsigned int)objectIDForClockDeviceUID:(id)arg1;
- (unsigned int)objectIDForDeviceUID:(id)arg1;
- (id)plugin;
- (bool)registerForSystemSleepNotifications;
- (void)removeAudioDevice:(id)arg1;
- (void)removeAudioDevices:(id)arg1;
- (void)removeBox:(id)arg1;
- (void)removeCAObject:(id)arg1;
- (void)removeClockDevice:(id)arg1;
- (void)removeClockDevices:(id)arg1;
- (void)removeDevice:(id)arg1;
- (void)removeDevices:(id)arg1;
- (unsigned int)removeRef;
- (bool)requestConfigurationChangeForDevice:(id)arg1 withBlock:(id /* block */)arg2;
- (void)setArray:(id)arg1 forKey:(id)arg2;
- (void)setDictionary:(id)arg1 forKey:(id)arg2;
- (void)setTransportType:(unsigned int)arg1;
- (void)systemHasPoweredOn;
- (void)systemWillSleep;
- (unsigned int)transportType;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

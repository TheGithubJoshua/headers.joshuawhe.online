<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BluetoothManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BluetoothManager.framework/BluetoothManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager (1)
 */

@interface BluetoothManager : NSObject {
    struct BTAccessoryManagerImpl { } * _accessoryManager;
    bool  _airplaneMode;
    bool  _audioConnected;
    int  _available;
    bool  _blacklistEnabled;
    NSMutableDictionary * _btAddrDict;
    NSMutableDictionary * _btDeviceDict;
    struct BTDiscoveryAgentImpl { } * _discoveryAgent;
    struct BTLocalDeviceImpl { } * _localDevice;
    struct BTPairingAgentImpl { } * _pairingAgent;
    bool  _scanningEnabled;
    bool  _scanningInProgress;
    unsigned int  _scanningServiceMask;
    struct BTSessionImpl { } * _session;
    int  _state;
}

@property (nonatomic) bool blacklistEnabled;

// Image: /System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager

+ (int)lastInitError;
+ (void)setSharedInstanceQueue:(id)arg1;
+ (id)sharedInstance;

- (struct BTAccessoryManagerImpl { }*)_accessoryManager;
- (void)_advertisingChanged;
- (bool)_attach;
- (void)_cleanup:(bool)arg1;
- (void)_connectabilityChanged;
- (void)_connectedStatusChanged;
- (void)_discoveryStateChanged;
- (void)_pairedStatusChanged;
- (void)_postNotification:(id)arg1;
- (void)_postNotificationWithArray:(id)arg1;
- (void)_powerChanged;
- (void)_removeDevice:(id)arg1;
- (void)_restartScan;
- (void)_scanForServices:(unsigned int)arg1 withMode:(int)arg2;
- (void)_setScanState:(int)arg1;
- (bool)_setup:(struct BTSessionImpl { }*)arg1;
- (void)_updateAirplaneModeStatus;
- (void)_updateBlacklistMode;
- (void)_updateBluetoothState;
- (void)acceptSSP:(long long)arg1 forDevice:(id)arg2;
- (id)addDeviceIfNeeded:(struct BTDeviceImpl { }*)arg1;
- (bool)audioConnected;
- (bool)available;
- (bool)blacklistEnabled;
- (int)bluetoothState;
- (void)bluetoothStateAction;
- (void)bluetoothStateActionWithCompletion:(id /* block */)arg1;
- (void)cancelPairing;
- (void)connectDevice:(id)arg1;
- (void)connectDevice:(id)arg1 withServices:(unsigned int)arg2;
- (bool)connectable;
- (bool)connected;
- (id)connectedDeviceNamesThatMayBeBlacklisted;
- (id)connectedDevices;
- (id)connectingDevices;
- (void)dealloc;
- (struct BTDeviceImpl { }*)deviceFromIdentifier:(id)arg1;
- (bool)devicePairingEnabled;
- (bool)deviceScanningEnabled;
- (bool)deviceScanningInProgress;
- (void)disconnectDevice:(id)arg1;
- (void)disconnectDevicePhysicalLink:(id)arg1;
- (void)enableTestMode;
- (bool)enabled;
- (void)endVoiceCommand:(id)arg1;
- (id)init;
- (bool)isAnyoneAdvertising;
- (bool)isAnyoneScanning;
- (bool)isDiscoverable;
- (bool)isServiceSupported:(unsigned int)arg1;
- (id)localAddress;
- (int)maskLocalDeviceEvents:(unsigned int)arg1;
- (id)pairedDevices;
- (void)postNotification:(id)arg1;
- (void)postNotificationName:(id)arg1 object:(id)arg2;
- (void)postNotificationName:(id)arg1 object:(id)arg2 error:(id)arg3;
- (int)powerState;
- (bool)powered;
- (void)resetDeviceScanning;
- (void)scanForConnectableDevices:(unsigned int)arg1;
- (void)scanForServices:(unsigned int)arg1;
- (void)setAudioConnected:(bool)arg1;
- (void)setBlacklistEnabled:(bool)arg1;
- (void)setConnectable:(bool)arg1;
- (void)setDevicePairingEnabled:(bool)arg1;
- (void)setDeviceScanningEnabled:(bool)arg1;
- (void)setDiscoverable:(bool)arg1;
- (bool)setEnabled:(bool)arg1;
- (void)setPincode:(id)arg1 forDevice:(id)arg2;
- (bool)setPowered:(bool)arg1;
- (void)showPowerPrompt;
- (void)startVoiceCommand:(id)arg1;
- (void)unpairDevice:(id)arg1;
- (bool)wasDeviceDiscovered:(id)arg1;

// Image: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices

- (long long)localDeviceSupportsService:(unsigned int)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

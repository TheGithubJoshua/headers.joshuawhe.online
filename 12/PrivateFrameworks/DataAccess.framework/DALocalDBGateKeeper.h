<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>DALocalDBGateKeeper.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/DataAccess.framework/DALocalDBGateKeeper.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess (1.0)
 */

@interface DALocalDBGateKeeper : NSObject {
    <DADataclassLockWatcher> * _bookmarksLockHolder;
    NSMutableArray * _bookmarksWaiters;
    bool  _claimedOwnershipOfBookmarks;
    bool  _claimedOwnershipOfContacts;
    bool  _claimedOwnershipOfEvents;
    bool  _claimedOwnershipOfNotes;
    <DADataclassLockWatcher> * _contactsLockHolder;
    NSMutableArray * _contactsWaiters;
    <DADataclassLockWatcher> * _eventsLockHolder;
    NSMutableArray * _eventsWaiters;
    <DADataclassLockWatcher> * _notesLockHolder;
    NSMutableArray * _notesWaiters;
    NSString * _unitTestHackRunLoopMode;
    NSMutableSet * _waiterIDsExpectingBookmarksLock;
    NSMutableSet * _waiterIDsExpectingContactsLock;
    NSMutableSet * _waiterIDsExpectingEventsLock;
    NSMutableSet * _waiterIDsExpectingNotesLock;
}

@property (nonatomic, retain) <DADataclassLockWatcher> *bookmarksLockHolder;
@property (nonatomic, retain) NSMutableArray *bookmarksWaiters;
@property (nonatomic) bool claimedOwnershipOfBookmarks;
@property (nonatomic) bool claimedOwnershipOfContacts;
@property (nonatomic) bool claimedOwnershipOfEvents;
@property (nonatomic) bool claimedOwnershipOfNotes;
@property (nonatomic, retain) <DADataclassLockWatcher> *contactsLockHolder;
@property (nonatomic, retain) NSMutableArray *contactsWaiters;
@property (nonatomic, retain) <DADataclassLockWatcher> *eventsLockHolder;
@property (nonatomic, retain) NSMutableArray *eventsWaiters;
@property (nonatomic, retain) <DADataclassLockWatcher> *notesLockHolder;
@property (nonatomic, retain) NSMutableArray *notesWaiters;
@property (nonatomic, retain) NSString *unitTestHackRunLoopMode;
@property (nonatomic, retain) NSMutableSet *waiterIDsExpectingBookmarksLock;
@property (nonatomic, retain) NSMutableSet *waiterIDsExpectingContactsLock;
@property (nonatomic, retain) NSMutableSet *waiterIDsExpectingEventsLock;
@property (nonatomic, retain) NSMutableSet *waiterIDsExpectingNotesLock;

+ (id)sharedGateKeeper;

- (void).cxx_destruct;
- (void)_abortWaiterForWrappers:(id)arg1;
- (bool)_canWakenWaiter:(id)arg1;
- (void)_notifyWaitersForDataclasses:(id)arg1;
- (void)_registerWaiter:(id)arg1 forDataclassLocks:(long long)arg2 preempt:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)_sendAllClearNotifications;
- (void)_setUnitTestHackRunLoopMode:(id)arg1;
- (id)bookmarksLockHolder;
- (id)bookmarksWaiters;
- (bool)claimedOwnershipOfBookmarks;
- (bool)claimedOwnershipOfContacts;
- (void)claimedOwnershipOfDataclasses:(long long)arg1;
- (bool)claimedOwnershipOfEvents;
- (bool)claimedOwnershipOfNotes;
- (id)contactsLockHolder;
- (id)contactsWaiters;
- (void)dealloc;
- (id)eventsLockHolder;
- (id)eventsWaiters;
- (id)init;
- (id)notesLockHolder;
- (id)notesWaiters;
- (void)registerPreemptiveWaiter:(id)arg1 forDataclassLocks:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)registerWaiter:(id)arg1 forDataclassLocks:(long long)arg2 completionHandler:(id /* block */)arg3;
- (void)relinquishLocksForWaiter:(id)arg1 dataclasses:(long long)arg2 moreComing:(bool)arg3;
- (void)setBookmarksLockHolder:(id)arg1;
- (void)setBookmarksWaiters:(id)arg1;
- (void)setClaimedOwnershipOfBookmarks:(bool)arg1;
- (void)setClaimedOwnershipOfContacts:(bool)arg1;
- (void)setClaimedOwnershipOfEvents:(bool)arg1;
- (void)setClaimedOwnershipOfNotes:(bool)arg1;
- (void)setContactsLockHolder:(id)arg1;
- (void)setContactsWaiters:(id)arg1;
- (void)setEventsLockHolder:(id)arg1;
- (void)setEventsWaiters:(id)arg1;
- (void)setNotesLockHolder:(id)arg1;
- (void)setNotesWaiters:(id)arg1;
- (void)setUnitTestHackRunLoopMode:(id)arg1;
- (void)setWaiterIDsExpectingBookmarksLock:(id)arg1;
- (void)setWaiterIDsExpectingContactsLock:(id)arg1;
- (void)setWaiterIDsExpectingEventsLock:(id)arg1;
- (void)setWaiterIDsExpectingNotesLock:(id)arg1;
- (id)stateString;
- (id)unitTestHackRunLoopMode;
- (void)unregisterWaiterForDataclassLocks:(id)arg1;
- (id)waiterIDsExpectingBookmarksLock;
- (id)waiterIDsExpectingContactsLock;
- (id)waiterIDsExpectingEventsLock;
- (id)waiterIDsExpectingNotesLock;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

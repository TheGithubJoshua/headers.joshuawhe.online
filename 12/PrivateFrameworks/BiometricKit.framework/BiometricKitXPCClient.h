<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BiometricKitXPCClient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BiometricKit.framework/BiometricKitXPCClient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit (100.99)
 */

@interface BiometricKitXPCClient : NSObject {
    unsigned long long  _clientID;
    long long  _clientType;
    BiometricKitXPCClientConnection * _connection;
    bool  _connectionInitialized;
    bool  _connectionInvalidated;
    <BiometricKitDelegateXpcProtocol> * _delegate;
}

@property (nonatomic, readonly) unsigned long long clientID;
@property (nonatomic, readonly) unsigned long long connectionId;
@property (nonatomic) <BiometricKitDelegateXpcProtocol> *delegate;

+ (void)initialize;

- (void).cxx_destruct;
- (void)cancel;
- (unsigned long long)clientID;
- (int)completeEnrollment;
- (int)connect;
- (unsigned long long)connectionId;
- (void)dealloc;
- (id)delegate;
- (void)detectPresenceWithOptions:(id)arg1 async:(bool)arg2 withReply:(id /* block */)arg3;
- (int)diagnostics:(int)arg1 withOptions:(id)arg2 passed:(bool*)arg3 withDetails:(id*)arg4;
- (void)disconnect;
- (int)dropUnlockToken;
- (int)enableBackgroundFdet:(bool)arg1;
- (int)enableMatchAutoRetry:(bool)arg1;
- (void)enroll:(int)arg1 forUser:(unsigned int)arg2 withOptions:(id)arg3 async:(bool)arg4 withReply:(id /* block */)arg5;
- (int)enrollContinue;
- (int)fieldDiagnosticsControl:(unsigned int)arg1 inData:(id)arg2 outData:(id*)arg3;
- (bool)fileRadarWithLogs:(id)arg1 withDescription:(id)arg2;
- (int)forceBioLockoutForUser:(unsigned int)arg1 withOptions:(id)arg2;
- (int)getAugmentationEligibility:(bool*)arg1 forIdentity:(id)arg2;
- (int)getBioLockoutState:(long long*)arg1 forUser:(unsigned int)arg2;
- (int)getBiometryAvailability:(long long*)arg1 forUser:(unsigned int)arg2;
- (id)getCalibrationDataInfo;
- (int)getCountersignedStoreToken:(id*)arg1;
- (long long)getDeviceState;
- (long long)getFreeIdentityCount:(int)arg1 forUser:(unsigned int)arg2;
- (id)getIdentitiesDatabaseHashForUser:(unsigned int)arg1;
- (id)getIdentitiesDatabaseUUIDForUser:(unsigned int)arg1;
- (id)getIdentityFromUUID:(id)arg1;
- (int)getLastMatchEvent:(id*)arg1;
- (id)getLogs:(bool)arg1 withDetails:(id*)arg2;
- (long long)getMaxIdentityCount:(int)arg1;
- (id)getNodeTopologyForIdentity:(id)arg1;
- (id)getProtectedConfigurationForUser:(unsigned int)arg1;
- (long long)getProvisioningState;
- (long long)getSensorCalibrationStatus;
- (id)getSensorInfo;
- (id)getSystemProtectedConfiguration;
- (id)identities:(id)arg1;
- (id)init;
- (id)initWithDeviceType:(long long)arg1 clientType:(long long)arg2;
- (int)initializeConnection;
- (void)interruptConnection;
- (void)invalidateConnection;
- (bool)isAriadneSignpostsEnabled;
- (bool)isFingerOn;
- (bool)isXARTAvailable;
- (void)logEventOrCode:(unsigned long long)arg1;
- (void)match:(id)arg1 withOptions:(id)arg2 async:(bool)arg3 withReply:(id /* block */)arg4;
- (void)notifyAppIsBackground:(bool)arg1;
- (void)notifyAppIsInactive:(bool)arg1;
- (int)pauseFaceDetectTimer:(bool)arg1;
- (id)pullAlignmentData;
- (id)pullCalibrationData;
- (id)pullCaptureBuffer;
- (id)pullDebugImageData:(bool)arg1 rotated:(bool)arg2 imageWidth:(unsigned int*)arg3 imageHeight:(unsigned int*)arg4;
- (id)pullMatchPolicyInfoData;
- (int)queryIdentityMigrationFailureForUser:(unsigned int)arg1 failed:(bool*)arg2 clear:(bool)arg3;
- (int)registerDSID:(unsigned long long)arg1 withOptions:(id)arg2;
- (void)registerDelegate:(bool)arg1;
- (void)registerDelegateCall:(bool)arg1;
- (int)registerStoreToken:(id)arg1;
- (int)removeAllIdentitiesForUser:(unsigned int)arg1 withOptions:(id)arg2;
- (int)removeIdentity:(id)arg1 withOptions:(id)arg2;
- (int)resetAppleConnectCounter;
- (void)setDebugImages:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (int)setProtectedConfiguration:(id)arg1 forUser:(unsigned int)arg2 withOptions:(id)arg3;
- (int)setSystemProtectedConfiguration:(id)arg1 withOptions:(id)arg2;
- (int)setTemplate:(id)arg1 forIdentity:(id)arg2;
- (int)setUserDSID:(unsigned long long)arg1 withOptions:(id)arg2;
- (int)startNewMatchAttempt;
- (int)suspendEnrollment:(bool)arg1;
- (void)timestampEvent:(unsigned long long)arg1 absoluteTime:(unsigned long long)arg2;
- (int)updateIdentity:(id)arg1 withOptions:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RMRemoteManagementScreenTimeState.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/RemoteManagement.framework/RMRemoteManagementScreenTimeState.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/RemoteManagement.framework/RemoteManagement (38)
 */

@interface RMRemoteManagementScreenTimeState : PBCodable <NSCopying> {
    unsigned long long  _alwaysAllowedAppsCount;
    bool  _contentPrivacyRestrictionsEnabled;
    bool  _customDowntimeEnabled;
    struct { 
        unsigned long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _daysSinceCreationDates;
    unsigned long long  _daysWithScreenTimeEnabled;
    bool  _downtimeEnabled;
    NSString * _familyMemberType;
    struct { 
        unsigned int alwaysAllowedAppsCount : 1; 
        unsigned int daysWithScreenTimeEnabled : 1; 
        unsigned int numberOfLimits : 1; 
        unsigned int timestamp : 1; 
        unsigned int contentPrivacyRestrictionsEnabled : 1; 
        unsigned int customDowntimeEnabled : 1; 
        unsigned int downtimeEnabled : 1; 
        unsigned int hasPasscode : 1; 
        unsigned int isManaged : 1; 
        unsigned int isManaging : 1; 
        unsigned int screenTimeEnabled : 1; 
    }  _has;
    bool  _hasPasscode;
    bool  _isManaged;
    bool  _isManaging;
    NSMutableArray * _limitedCategories;
    unsigned long long  _numberOfLimits;
    bool  _screenTimeEnabled;
    unsigned long long  _timestamp;
}

@property (nonatomic) unsigned long long alwaysAllowedAppsCount;
@property (nonatomic) bool contentPrivacyRestrictionsEnabled;
@property (nonatomic) bool customDowntimeEnabled;
@property (nonatomic, readonly) unsigned long long*daysSinceCreationDates;
@property (nonatomic, readonly) unsigned long long daysSinceCreationDatesCount;
@property (nonatomic) unsigned long long daysWithScreenTimeEnabled;
@property (nonatomic) bool downtimeEnabled;
@property (nonatomic, retain) NSString *familyMemberType;
@property (nonatomic) bool hasAlwaysAllowedAppsCount;
@property (nonatomic) bool hasContentPrivacyRestrictionsEnabled;
@property (nonatomic) bool hasCustomDowntimeEnabled;
@property (nonatomic) bool hasDaysWithScreenTimeEnabled;
@property (nonatomic) bool hasDowntimeEnabled;
@property (nonatomic, readonly) bool hasFamilyMemberType;
@property (nonatomic) bool hasHasPasscode;
@property (nonatomic) bool hasIsManaged;
@property (nonatomic) bool hasIsManaging;
@property (nonatomic) bool hasNumberOfLimits;
@property (nonatomic) bool hasPasscode;
@property (nonatomic) bool hasScreenTimeEnabled;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool isManaged;
@property (nonatomic) bool isManaging;
@property (nonatomic, retain) NSMutableArray *limitedCategories;
@property (nonatomic) unsigned long long numberOfLimits;
@property (nonatomic) bool screenTimeEnabled;
@property (nonatomic) unsigned long long timestamp;

+ (Class)limitedCategoriesType;

- (void).cxx_destruct;
- (void)addDaysSinceCreationDate:(unsigned long long)arg1;
- (void)addLimitedCategories:(id)arg1;
- (unsigned long long)alwaysAllowedAppsCount;
- (void)clearDaysSinceCreationDates;
- (void)clearLimitedCategories;
- (bool)contentPrivacyRestrictionsEnabled;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)customDowntimeEnabled;
- (unsigned long long)daysSinceCreationDateAtIndex:(unsigned long long)arg1;
- (unsigned long long*)daysSinceCreationDates;
- (unsigned long long)daysSinceCreationDatesCount;
- (unsigned long long)daysWithScreenTimeEnabled;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)downtimeEnabled;
- (id)familyMemberType;
- (bool)hasAlwaysAllowedAppsCount;
- (bool)hasContentPrivacyRestrictionsEnabled;
- (bool)hasCustomDowntimeEnabled;
- (bool)hasDaysWithScreenTimeEnabled;
- (bool)hasDowntimeEnabled;
- (bool)hasFamilyMemberType;
- (bool)hasHasPasscode;
- (bool)hasIsManaged;
- (bool)hasIsManaging;
- (bool)hasNumberOfLimits;
- (bool)hasPasscode;
- (bool)hasScreenTimeEnabled;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isManaged;
- (bool)isManaging;
- (id)limitedCategories;
- (id)limitedCategoriesAtIndex:(unsigned long long)arg1;
- (unsigned long long)limitedCategoriesCount;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)numberOfLimits;
- (bool)readFrom:(id)arg1;
- (bool)screenTimeEnabled;
- (void)setAlwaysAllowedAppsCount:(unsigned long long)arg1;
- (void)setContentPrivacyRestrictionsEnabled:(bool)arg1;
- (void)setCustomDowntimeEnabled:(bool)arg1;
- (void)setDaysSinceCreationDates:(unsigned long long*)arg1 count:(unsigned long long)arg2;
- (void)setDaysWithScreenTimeEnabled:(unsigned long long)arg1;
- (void)setDowntimeEnabled:(bool)arg1;
- (void)setFamilyMemberType:(id)arg1;
- (void)setHasAlwaysAllowedAppsCount:(bool)arg1;
- (void)setHasContentPrivacyRestrictionsEnabled:(bool)arg1;
- (void)setHasCustomDowntimeEnabled:(bool)arg1;
- (void)setHasDaysWithScreenTimeEnabled:(bool)arg1;
- (void)setHasDowntimeEnabled:(bool)arg1;
- (void)setHasHasPasscode:(bool)arg1;
- (void)setHasIsManaged:(bool)arg1;
- (void)setHasIsManaging:(bool)arg1;
- (void)setHasNumberOfLimits:(bool)arg1;
- (void)setHasPasscode:(bool)arg1;
- (void)setHasScreenTimeEnabled:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setIsManaged:(bool)arg1;
- (void)setIsManaging:(bool)arg1;
- (void)setLimitedCategories:(id)arg1;
- (void)setNumberOfLimits:(unsigned long long)arg1;
- (void)setScreenTimeEnabled:(bool)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (unsigned long long)timestamp;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

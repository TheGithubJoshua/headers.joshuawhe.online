<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UITraitCollection.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UITraitCollection.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UITraitCollection : NSObject <NSCopying, NSSecureCoding> {
    struct { 
        long long userInterfaceIdiom; 
        double displayScale; 
        long long displayGamut; 
        long long touchLevel; 
        unsigned long long interactionModel; 
        unsigned long long primaryInteractionModel; 
        unsigned long long artworkSubtype; 
        long long horizontalSizeClass; 
        long long verticalSizeClass; 
        long long userInterfaceStyle; 
        long long layoutDirection; 
        long long forceTouchCapability; 
        long long preferredContentSizeCategory; 
        double displayCornerRadius; 
    }  _builtinTraits;
    NSDictionary * _clientDefinedTraits;
}

@property (nonatomic, readonly) bool MPU_hasCompactHeight;
@property (nonatomic, readonly) bool MPU_hasCompactWidth;
@property (nonatomic, readonly) bool MPU_hasRegularHeight;
@property (nonatomic, readonly) bool MPU_hasRegularWidth;
@property (nonatomic, readonly) long long barMetrics;
@property (nonatomic, readonly) long long barPosition;
@property (nonatomic, readonly) long long displayGamut;
@property (nonatomic, readonly) double displayScale;
@property (nonatomic, readonly) long long forceTouchCapability;
@property (nonatomic, readonly) long long horizontalSizeClass;
@property (nonatomic, readonly) long long layoutDirection;
@property (getter=music_isContainedWithinSplitViewDetail, nonatomic, readonly) bool music_containedWithinSplitViewDetail;
@property (getter=music_isContainedWithinSplitViewPrimary, nonatomic, readonly) bool music_containedWithinSplitViewPrimary;
@property (nonatomic, readonly, copy) NSString *preferredContentSizeCategory;
@property (nonatomic, readonly) MTVibrantStyling *primaryVibrantStyling;
@property (nonatomic, readonly) MTVibrantStyling *secondaryVibrantStyling;
@property (nonatomic, readonly) MTVibrantStyling *tertiaryVibrantStyling;
@property (nonatomic, readonly) long long userInterfaceIdiom;
@property (nonatomic, readonly) long long userInterfaceStyle;
@property (nonatomic, readonly) long long verticalSizeClass;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

+ (id)_defaultTraitCollection;
+ (id)_emptyTraitCollection;
+ (id)_traitCollectionWithValue:(id)arg1 forTraitNamed:(id)arg2;
+ (bool)supportsSecureCoding;
+ (id)traitCollectionWithArtworkSubtype:(unsigned long long)arg1;
+ (id)traitCollectionWithBarMetrics:(long long)arg1;
+ (id)traitCollectionWithBarPosition:(long long)arg1;
+ (id)traitCollectionWithDisplayCornerRadius:(double)arg1;
+ (id)traitCollectionWithDisplayGamut:(long long)arg1;
+ (id)traitCollectionWithDisplayScale:(double)arg1;
+ (id)traitCollectionWithForceTouchCapability:(long long)arg1;
+ (id)traitCollectionWithHorizontalSizeClass:(long long)arg1;
+ (id)traitCollectionWithInteractionModel:(unsigned long long)arg1;
+ (id)traitCollectionWithLayoutDirection:(long long)arg1;
+ (id)traitCollectionWithPreferredContentSizeCategory:(id)arg1;
+ (id)traitCollectionWithPrimaryInteractionModel:(unsigned long long)arg1;
+ (id)traitCollectionWithTouchLevel:(long long)arg1;
+ (id)traitCollectionWithTraitsFromCollections:(id)arg1;
+ (id)traitCollectionWithUserInterfaceIdiom:(long long)arg1;
+ (id)traitCollectionWithUserInterfaceStyle:(long long)arg1;
+ (id)traitCollectionWithVerticalSizeClass:(long long)arg1;

- (bool)_changedContentSizeCategoryFromTraitCollection:(id)arg1;
- (long long)_compare:(id)arg1;
- (id)_description;
- (id)_descriptionWithPrivateTraits:(bool)arg1;
- (id)_initWithBuiltinTraitStorage:(struct { long long x1; double x2; long long x3; long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; long long x8; long long x9; long long x10; long long x11; long long x12; long long x13; double x14; }*)arg1 clientDefinedTraits:(id)arg2;
- (bool)_matchesIntersectionWithTraitCollection:(id)arg1;
- (id)_namedImageDescription;
- (id)_traitCollectionByReplacingValue:(id)arg1 forTraitName:(id)arg2;
- (id)_valueForTraitNamed:(id)arg1;
- (unsigned long long)artworkSubtype;
- (long long)barMetrics;
- (long long)barPosition;
- (bool)containsTraitsInCollection:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (double)displayCornerRadius;
- (long long)displayGamut;
- (double)displayScale;
- (void)encodeWithCoder:(id)arg1;
- (long long)forceTouchCapability;
- (unsigned long long)hash;
- (long long)horizontalSizeClass;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)interactionModel;
- (bool)isEqual:(id)arg1;
- (long long)layoutDirection;
- (id)preferredContentSizeCategory;
- (unsigned long long)primaryInteractionModel;
- (long long)touchLevel;
- (long long)userInterfaceIdiom;
- (long long)userInterfaceStyle;
- (long long)verticalSizeClass;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

- (long long)mf_correspondingBarMetrics;
- (bool)mf_hasCompactDimension;
- (bool)mf_supportsPopoverPresentation;

// Image: /System/Library/PrivateFrameworks/ExposureNotificationUI.framework/ExposureNotificationUI

- (id)byRequiringTrait:(long long)arg1;
- (bool)hasChangedTraits:(id)arg1 comparedTo:(id)arg2;

// Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI

+ (id)music_traitCollectionWithContainedWithinSplitViewDetail:(bool)arg1;
+ (id)music_traitCollectionWithContainedWithinSplitViewPrimary:(bool)arg1;

- (bool)music_isContainedWithinSplitViewDetail;
- (bool)music_isContainedWithinSplitViewPrimary;

// Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation

- (bool)MPU_hasCompactHeight;
- (bool)MPU_hasCompactWidth;
- (bool)MPU_hasRegularHeight;
- (bool)MPU_hasRegularWidth;

// Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls

+ (id)traitCollectionWithPrimaryVibrantStyling:(id)arg1;
+ (id)traitCollectionWithSecondaryVibrantStyling:(id)arg1;
+ (id)traitCollectionWithTertiaryVibrantStyling:(id)arg1;

- (id)primaryVibrantStyling;
- (id)secondaryVibrantStyling;
- (id)tertiaryVibrantStyling;

// Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport

- (bool)tsu_isCompactHeight;
- (bool)tsu_isCompactWidth;

// Image: /System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI

- (bool)isPreferredContentSizeCategoryAccessible;

// Image: /System/Library/PrivateFrameworks/WiFiKitUI.framework/WiFiKitUI

- (bool)isLargeTextTraitCollection;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

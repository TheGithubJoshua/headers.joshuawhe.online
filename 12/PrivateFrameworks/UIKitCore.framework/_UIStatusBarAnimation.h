<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIStatusBarAnimation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIStatusBarAnimation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIStatusBarAnimation : NSObject <NSCopying> {
    id /* block */  _animationBlock;
    NSMutableArray * _completionHandlers;
    NSSet * _delayedDisplayItemPlacements;
    NSSet * _delayedItemIdentifiers;
    bool  _delaysAnimatingItems;
    bool  _delaysDependentItems;
    _UIStatusBarIdentifier * _displayItemIdentifier;
    bool  _enabled;
    NSString * _exclusivityGroupIdentifier;
    NSString * _identifier;
    _UIStatusBarAnimation * _parentAnimation;
    id /* block */  _prepareBlock;
    long long  _priority;
    NSMutableArray * _subAnimations;
    long long  _type;
}

@property (nonatomic, copy) id /* block */ animationBlock;
@property (nonatomic, retain) NSMutableArray *completionHandlers;
@property (nonatomic, copy) NSSet *delayedDisplayItemPlacements;
@property (nonatomic, copy) NSSet *delayedItemIdentifiers;
@property (nonatomic) bool delaysAnimatingItems;
@property (nonatomic) bool delaysDependentItems;
@property (nonatomic, copy) _UIStatusBarIdentifier *displayItemIdentifier;
@property (nonatomic, readonly) NSSet *effectiveDelayedItemIdentifiers;
@property (getter=isEnabled, nonatomic) bool enabled;
@property (nonatomic, copy) NSString *exclusivityGroupIdentifier;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic) _UIStatusBarAnimation *parentAnimation;
@property (nonatomic, copy) id /* block */ prepareBlock;
@property (nonatomic) long long priority;
@property (nonatomic, retain) NSMutableArray *subAnimations;
@property (nonatomic) long long type;

+ (void)_addAnimations:(id)arg1 toDispatchGroup:(id)arg2;
+ (void)_addAnimations:(id)arg1 toPreparingAnimations:(id)arg2 exclusiveAnimations:(id)arg3 visitedDisplayItemIdentifiers:(id)arg4;
+ (id)animationWithBlock:(id /* block */)arg1;
+ (void)initialize;
+ (void)prepareAnimations:(id)arg1 forStatusBar:(id)arg2;

- (void).cxx_destruct;
- (id)_dependentItemIdentifiersEnabledOnly:(bool)arg1;
- (void)_prepareForStatusBar:(id)arg1 preparingAnimations:(id)arg2 exclusiveAnimations:(id)arg3;
- (void)addCompletionHandler:(id /* block */)arg1;
- (void)addSubAnimation:(id)arg1 forDisplayItemWithIdentifier:(id)arg2;
- (void)addTotalCompletionHandler:(id /* block */)arg1;
- (id /* block */)animationBlock;
- (void)cancel;
- (id)completionHandlers;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)delayedDisplayItemPlacements;
- (id)delayedItemIdentifiers;
- (bool)delaysAnimatingItems;
- (bool)delaysDependentItems;
- (id)description;
- (id)displayItemIdentifier;
- (id)effectiveDelayedItemIdentifiers;
- (id)exclusivityGroupIdentifier;
- (id)identifier;
- (bool)isEnabled;
- (id)parentAnimation;
- (void)performForStatusBar:(id)arg1;
- (id /* block */)prepareBlock;
- (long long)priority;
- (void)setAnimationBlock:(id /* block */)arg1;
- (void)setCompletionHandlers:(id)arg1;
- (void)setDelayedDisplayItemPlacements:(id)arg1;
- (void)setDelayedItemIdentifiers:(id)arg1;
- (void)setDelaysAnimatingItems:(bool)arg1;
- (void)setDelaysDependentItems:(bool)arg1;
- (void)setDisplayItemIdentifier:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setExclusivityGroupIdentifier:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setParentAnimation:(id)arg1;
- (void)setPrepareBlock:(id /* block */)arg1;
- (void)setPriority:(long long)arg1;
- (void)setSubAnimations:(id)arg1;
- (void)setType:(long long)arg1;
- (id)subAnimations;
- (long long)type;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

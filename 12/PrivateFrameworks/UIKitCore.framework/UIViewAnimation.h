<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIViewAnimation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIViewAnimation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIViewAnimation : NSObject {
    bool  _animateFromCurrentPosition;
    int  _curve;
    bool  _editing;
    double  _endAlpha;
    double  _endFraction;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _endRect;
    NSIndexPath * _indexPath;
    bool  _shouldAllowGroupOpacityAfterAnimation;
    bool  _shouldAnimateShadow;
    bool  _shouldClipToBoundsAfterAnimation;
    bool  _shouldDeleteAfterAnimation;
    bool  _shouldResetGroupOpacityAfterAnimation;
    double  _startFraction;
    UIView * _view;
    int  _viewType;
}

@property (nonatomic, readonly) bool animateFromCurrentPosition;
@property (nonatomic, readonly) int curve;
@property (nonatomic, readonly) bool editing;
@property (nonatomic, readonly) double endAlpha;
@property (nonatomic, readonly) double endFraction;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } endRect;
@property (nonatomic, readonly) NSIndexPath *indexPath;
@property (nonatomic) bool shouldAllowGroupOpacityAfterAnimation;
@property (nonatomic) bool shouldAnimateShadow;
@property (nonatomic) bool shouldClipToBoundsAfterAnimation;
@property (nonatomic, readonly) bool shouldDeleteAfterAnimation;
@property (nonatomic) bool shouldResetGroupOpacityAfterAnimation;
@property (nonatomic, readonly) double startFraction;
@property (nonatomic, readonly) UIView *view;
@property (nonatomic, readonly) int viewType;

- (void).cxx_destruct;
- (bool)animateFromCurrentPosition;
- (int)curve;
- (id)description;
- (bool)editing;
- (double)endAlpha;
- (double)endFraction;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })endRect;
- (id)indexPath;
- (id)initWithView:(id)arg1 indexPath:(id)arg2 viewType:(int)arg3 endRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4 endAlpha:(double)arg5 startFraction:(double)arg6 endFraction:(double)arg7 curve:(int)arg8 animateFromCurrentPosition:(bool)arg9 shouldDeleteAfterAnimation:(bool)arg10 editing:(bool)arg11;
- (void)setShouldAllowGroupOpacityAfterAnimation:(bool)arg1;
- (void)setShouldAnimateShadow:(bool)arg1;
- (void)setShouldClipToBoundsAfterAnimation:(bool)arg1;
- (void)setShouldResetGroupOpacityAfterAnimation:(bool)arg1;
- (bool)shouldAllowGroupOpacityAfterAnimation;
- (bool)shouldAnimateShadow;
- (bool)shouldClipToBoundsAfterAnimation;
- (bool)shouldDeleteAfterAnimation;
- (bool)shouldResetGroupOpacityAfterAnimation;
- (double)startFraction;
- (id)view;
- (int)viewType;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UINavigationBarVisualStyle.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UINavigationBarVisualStyle.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UINavigationBarVisualStyle : NSObject {
    long long  _idiom;
    bool  _inPopover;
    long long  _metrics;
    bool  _wantsLetterPress;
}

@property (nonatomic, readonly) double _legacyButtonFontSize;
@property (nonatomic, readonly) double _legacyButtonImagePadding;
@property (nonatomic, readonly) double _legacyLeftEdgeMargin;
@property (nonatomic, readonly) double _legacyLeftTitleMargin;
@property (nonatomic, readonly) double _legacyRightEdgeMargin;
@property (nonatomic, readonly) double _legacyRightTitleMargin;
@property (nonatomic, readonly) double backButtonIndicatorSpacing;
@property (nonatomic, readonly) double backIndicatorBottomMargin;
@property (nonatomic, readonly) double barHeight;
@property (nonatomic, readonly) double barPromptHeight;
@property (nonatomic, readonly) double bottomButtonMargin;
@property (nonatomic, readonly) double bottomImageMargin;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } buttonContentEdgeInsets;
@property (nonatomic, readonly) double buttonFontSize;
@property (nonatomic, readonly) double buttonHeight;
@property (nonatomic, readonly) double buttonImagePadding;
@property (nonatomic, readonly, copy) UIFont *defaultTitleFont;
@property (nonatomic, readonly) double headingFontSize;
@property (nonatomic, readonly) double horizontalMarginAdjustment;
@property (nonatomic, readonly) long long idiom;
@property (nonatomic) bool inPopover;
@property (nonatomic, readonly) double interBlockSpace;
@property (nonatomic, readonly) double interItemSpace;
@property (nonatomic, readonly) double leftBackImageMargin;
@property (nonatomic, readonly) double leftBackTitleMargin;
@property (nonatomic, readonly) double leftTextMargin;
@property (nonatomic, readonly) double leftTitleMargin;
@property (nonatomic, readonly) double maxBackButtonProportion;
@property (nonatomic) long long metrics;
@property (nonatomic, readonly) bool metricsHasPrompt;
@property (nonatomic, readonly) bool metricsIsMini;
@property (nonatomic, readonly) double minBackImageWidth;
@property (nonatomic, readonly) double minBackTextWidth;
@property (nonatomic, readonly) double minButtonWidth;
@property (nonatomic, readonly) double minTitleWidth;
@property (nonatomic, readonly) double navigationItemBaselineOffset;
@property (nonatomic, readonly, copy) UIFont *promptFont;
@property (nonatomic, readonly) double promptFontSize;
@property (nonatomic, readonly) double promptInset;
@property (nonatomic, readonly) double promptTextOffset;
@property (nonatomic, readonly) double rightImageMargin;
@property (nonatomic, readonly) double rightTitleMargin;
@property (nonatomic, readonly) double topBackMargin;
@property (nonatomic, readonly) double topImageMargin;
@property (nonatomic, readonly) double topMargin;
@property (nonatomic, readonly) double topTitleMargin;
@property (nonatomic) bool wantsLetterPress;

+ (id)visualStyleForIdiom:(long long)arg1;

- (id)_legacyButtonFontForStyle:(long long)arg1;
- (double)_legacyButtonFontSize;
- (double)_legacyButtonImagePadding;
- (double)_legacyLeftEdgeMargin;
- (double)_legacyLeftTitleMargin;
- (double)_legacyRightEdgeMargin;
- (double)_legacyRightTitleMargin;
- (double)backButtonAnimationClippingPadding;
- (double)backButtonIndicatorSpacing;
- (double)backIndicatorBottomMargin;
- (double)barHeight;
- (double)barHeightForMetrics:(long long)arg1;
- (double)barPromptHeight;
- (double)bottomButtonMargin;
- (double)bottomImageMargin;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })buttonContentEdgeInsets;
- (id)buttonFontForStyle:(long long)arg1;
- (double)buttonFontSize;
- (double)buttonHeight;
- (double)buttonImagePadding;
- (id)defaultTitleColorForUserInterfaceStyle:(long long)arg1 barStyle:(long long)arg2;
- (id)defaultTitleFont;
- (double)headingFontSize;
- (double)horizontalMarginAdjustment;
- (long long)idiom;
- (double)imageButtonMarginInNavigationBar:(id)arg1;
- (bool)inPopover;
- (id)initWithIdiom:(long long)arg1;
- (double)interBlockSpace;
- (double)interItemSpace;
- (double)leftBackImageMargin;
- (double)leftBackTitleMargin;
- (double)leftBackTitleMarginForCustomBackButtonBackground:(id)arg1;
- (double)leftBackTitleMarginLetterpressPadding;
- (double)leftTextMargin;
- (double)leftTitleMargin;
- (double)maxBackButtonProportion;
- (long long)metrics;
- (bool)metricsHasPrompt;
- (bool)metricsIsMini;
- (double)minBackImageWidth;
- (double)minBackTextWidth;
- (double)minButtonWidth;
- (double)minTitleWidth;
- (long long)navigationBar:(id)arg1 metricsForOrientation:(long long)arg2 hasPrompt:(bool)arg3;
- (double)navigationItemBaselineOffset;
- (id)promptFont;
- (double)promptFontSize;
- (double)promptInset;
- (double)promptTextOffset;
- (double)rightImageMargin;
- (double)rightTitleMargin;
- (void)setInPopover:(bool)arg1;
- (void)setMetrics:(long long)arg1;
- (void)setWantsLetterPress:(bool)arg1;
- (bool)shouldForceLegacyLeftBackTitleMarginForCustomBackButtonBackground:(id)arg1;
- (double)textButtonMarginInNavigationBar:(id)arg1;
- (id)timingFunctionForAnimationInView:(id)arg1 withKeyPath:(id)arg2 isInteractive:(bool)arg3;
- (double)topBackMargin;
- (double)topImageMargin;
- (double)topMargin;
- (double)topTitleMargin;
- (bool)wantsLetterPress;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIFocusSystem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIFocusSystem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIFocusSystem : NSObject <_UIFocusEnvironmentInternal, _UIFocusEnvironmentPrivate> {
    <_UIFocusSystemDelegate> * _delegate;
    bool  _enabled;
    struct { 
        unsigned int shouldIgnoreFocusUpdateIfNeeded : 1; 
        unsigned int isPendingFocusRestoration : 1; 
        unsigned int delegateRespondsToPreferredFocusEnvironments : 1; 
        unsigned int delegateRespondsToPrefersDeferralForFocusUpdateInContext : 1; 
        unsigned int delegateRespondsToShouldRestoreFocusInContext : 1; 
        unsigned int delegateRespondsToDidFinishUpdatingFocusInContext : 1; 
        unsigned int delegateRespondsToFocusMapContainer : 1; 
        unsigned int delegateRespondsToFocusItemContainer : 1; 
    }  _flags;
    _UIFocusAnimationCoordinatorManager * _focusAnimationCoordinatorManager;
    <_UIFocusHapticFeedbackGenerator> * _focusHapticFeedbackGenerator;
    _UIFocusSoundGenerator * _focusSoundGenerator;
    <UIFocusItem> * _focusedItem;
    _UIFocusUpdateRequest * _pendingFocusUpdateRequest;
    <UIFocusItem> * _previousFocusedItem;
}

@property (getter=_currentFocusAnimationCoordinator, nonatomic, readonly) UIFocusAnimationCoordinator *currentFocusAnimationCoordinator;
@property (readonly, copy) NSString *debugDescription;
@property (getter=_delegate, setter=_setDelegate:, nonatomic) <_UIFocusSystemDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=_isEligibleForFocusInteraction, nonatomic, readonly) bool eligibleForFocusInteraction;
@property (getter=_isEnabled, setter=_setEnabled:, nonatomic) bool enabled;
@property (getter=_focusAnimationCoordinatorManager, setter=_setFocusAnimationCoordinatorManager:, nonatomic, retain) _UIFocusAnimationCoordinatorManager *focusAnimationCoordinatorManager;
@property (getter=_focusHapticFeedbackGenerator, setter=_setFocusHapticFeedbackGenerator:, nonatomic, retain) <_UIFocusHapticFeedbackGenerator> *focusHapticFeedbackGenerator;
@property (nonatomic, readonly) <UIFocusItemContainer> *focusItemContainer;
@property (getter=_focusMapContainer, nonatomic, readonly) <_UIFocusRegionContainer> *focusMapContainer;
@property (getter=_focusSoundGenerator, setter=_setFocusSoundGenerator:, nonatomic, retain) _UIFocusSoundGenerator *focusSoundGenerator;
@property (nonatomic, readonly) <UIFocusItem> *focusedItem;
@property (getter=_focusedView, nonatomic, readonly) UIView *focusedView;
@property (readonly) unsigned long long hash;
@property (getter=_hostFocusSystem, nonatomic, readonly) UIFocusSystem *hostFocusSystem;
@property (getter=_linearFocusMovementSequences, nonatomic, readonly, copy) NSArray *linearFocusMovementSequences;
@property (nonatomic, readonly) <UIFocusEnvironment> *parentFocusEnvironment;
@property (getter=_preferredFirstResponder, nonatomic, readonly) UIResponder *preferredFirstResponder;
@property (getter=_preferredFirstResponderFocusSystem, nonatomic, readonly) UIFocusSystem *preferredFirstResponderFocusSystem;
@property (nonatomic, readonly, copy) NSArray *preferredFocusEnvironments;
@property (getter=_preferredFocusMovementStyle, nonatomic, readonly) long long preferredFocusMovementStyle;
@property (nonatomic, readonly) UIView *preferredFocusedView;
@property (getter=_previousFocusedItem, nonatomic, readonly) <UIFocusItem> *previousFocusedItem;
@property (readonly) Class superclass;

+ (id)_allFocusSystems;
+ (bool)environment:(id)arg1 containsEnvironment:(id)arg2;
+ (id)focusSystemForEnvironment:(id)arg1;
+ (void)registerURL:(id)arg1 forSoundIdentifier:(id)arg2;

- (void).cxx_destruct;
- (void)_cancelPendingFocusRestoration;
- (id)_contextForUpdateToEnvironment:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)_currentFocusAnimationCoordinator;
- (bool)_debug_isEnvironmentEligibleForFocusUpdate:(id)arg1 debugReport:(id)arg2;
- (id)_delegate;
- (void)_didFinishUpdatingFocusInContext:(id)arg1;
- (id)_focusAnimationCoordinatorManager;
- (void)_focusEnvironmentWillDisappear:(id)arg1;
- (id)_focusHapticFeedbackGenerator;
- (id)_focusMapContainer;
- (id)_focusSoundGenerator;
- (id)_focusedView;
- (id)_hostFocusSystem;
- (id)_init;
- (id)_initWithFocusEnabled:(bool)arg1;
- (bool)_isEligibleForFocusInteraction;
- (bool)_isEnabled;
- (bool)_isEnvironmentEligibleForFocusUpdate:(id)arg1 shouldResetFocus:(bool*)arg2 debugReport:(id)arg3;
- (void)_performWithoutFocusUpdates:(id /* block */)arg1;
- (bool)_postsFocusUpdateNotifications;
- (id)_preferredFirstResponder;
- (id)_preferredFirstResponderFocusSystem;
- (id)_preferredFirstResponderFocusSystemForFocusedItem:(id)arg1;
- (bool)_prefersDeferralForFocusUpdateInContext:(id)arg1;
- (id)_previousFocusedItem;
- (void)_requestFocusUpdate:(id)arg1;
- (bool)_requiresFocusedItemToHaveContainingView;
- (void)_sendDidUpdateFocusNotificationsInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)_sendNotificationsForFocusUpdateInContext:(id)arg1 withAnimationCoordinator:(id)arg2 usingBlock:(id /* block */)arg3;
- (void)_sendWillUpdateFocusNotificationsInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)_setDelegate:(id)arg1;
- (void)_setEnabled:(bool)arg1;
- (void)_setEnabled:(bool)arg1 withAnimationCoordinator:(id)arg2;
- (void)_setFocusAnimationCoordinatorManager:(id)arg1;
- (void)_setFocusHapticFeedbackGenerator:(id)arg1;
- (void)_setFocusSoundGenerator:(id)arg1;
- (void)_setNeedsFocusRestoration;
- (bool)_shouldRestoreFocusInContext:(id)arg1;
- (id)_simulatedProgrammaticFocusUpdateToEnvironment:(id)arg1;
- (void)_uiktest_setPreviousFocusedItem:(id)arg1;
- (bool)_uiktest_updateFocusToItem:(id)arg1;
- (bool)_updateFocusImmediatelyWithContext:(id)arg1;
- (bool)_updateFocusWithContext:(id)arg1 report:(id)arg2;
- (id)_validatedPendingFocusUpdateRequest;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (id)focusItemContainer;
- (id)focusedItem;
- (id)init;
- (id)parentFocusEnvironment;
- (id)preferredFocusEnvironments;
- (void)requestFocusUpdateToEnvironment:(id)arg1;
- (void)setNeedsFocusUpdate;
- (bool)shouldUpdateFocusInContext:(id)arg1;
- (void)updateFocusIfNeeded;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

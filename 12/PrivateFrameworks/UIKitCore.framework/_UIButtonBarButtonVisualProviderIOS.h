<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIButtonBarButtonVisualProviderIOS.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIButtonBarButtonVisualProviderIOS.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIButtonBarButtonVisualProviderIOS : _UIButtonBarButtonVisualProvider {
    <_UIButtonBarAppearanceDelegate> * _appearanceDelegate;
    NSLayoutConstraint * _backButtonContentLeadingConstraint;
    NSLayoutConstraint * _backButtonContentTrailingContraint;
    NSLayoutConstraint * _backButtonTitleMaxWidthConstraint;
    UIButton * _backIndicatorButton;
    UIImageView * _backgroundImage;
    NSMutableDictionary * _backgroundImages;
    long long  _barButtonStyle;
    NSMutableArray * _constraints;
    _UIModernBarButton * _imageButton;
    UIImageView * _selectedImage;
    bool  _skipAttributedTitle;
    NSArray * _titleAttributes;
    _UIModernBarButton * _titleButton;
    _UIBackButtonContainerView * _titleContainer;
    NSArray * _titleContent;
    NSMutableDictionary * _titleLookup;
}

@property (nonatomic) bool backButtonMaskEnabled;
@property (nonatomic, readonly) UIImageView *backgroundImageView;
@property (nonatomic, readonly) UIButton *imageButton;
@property (nonatomic, readonly) UIButton *textButton;

- (void).cxx_destruct;
- (void)_addConstraintsForBackgroundImageWithOffset:(double)arg1 isBackButton:(bool)arg2;
- (void)_addHorizontalConstraintsForBackButton:(id)arg1 contentButton:(id)arg2 withOffset:(double)arg3;
- (void)_addHorizontalConstraintsForImageButton:(id)arg1 withInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2 paddingEdges:(unsigned long long)arg3 additionalPadding:(double)arg4;
- (void)_addHorizontalConstraintsForTextButton:(id)arg1 withOffset:(double)arg2 additionalPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (void)_addVerticalConstraintsForBackIndicatorInButton:(id)arg1 withOffset:(double)arg2;
- (void)_addVerticalConstraintsForImageButton:(id)arg1 withInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (void)_addVerticalConstraintsForTextButton:(id)arg1 withOffset:(double)arg2;
- (id)_appearanceStorage;
- (struct UIOffset { double x1; double x2; })_backButtonTitlePositionAdjustmentForBarMetrics:(long long)arg1;
- (id)_backIndicatorImageForBarMetrics:(long long)arg1;
- (id)_backIndicatorMask;
- (void)_computeTextAttributesForBarButtonItem:(id)arg1;
- (void)_configureBackButtonButton:(id)arg1;
- (void)_configureBackgroundForButton:(id)arg1 fromBarButtonItem:(id)arg2 isBackButton:(bool)arg3;
- (void)_configureImageBackButtonButton:(id)arg1 withInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (void)_configureImageButton:(id)arg1 withInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2 paddingEdges:(unsigned long long)arg3 additionalPadding:(double)arg4;
- (void)_configureImageOrTitleFromBarButtonItem:(id)arg1 forMetrics:(long long)arg2;
- (void)_configureTextBackButtonButton:(id)arg1 withOffset:(struct UIOffset { double x1; double x2; })arg2;
- (void)_configureTextButton:(id)arg1 withOffset:(struct UIOffset { double x1; double x2; })arg2 additionalPadding:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (double)_defaultPaddingForInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (id)_defaultTitleAttributesForState:(unsigned long long)arg1 style:(long long)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_imageInsetsForBarButtonItem:(id)arg1 barMetrics:(long long)arg2 isBackButton:(bool)arg3;
- (id)_imageWithActiveStylesFromImage:(id)arg1;
- (id)_imageWithActiveStylesFromImage:(id)arg1 tintColor:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_insetsForBarMetrics:(long long)arg1;
- (void)_invalidateTextAttributes;
- (double)_offsetBelowBaselineForBackIndicatorForMetrics:(long long)arg1;
- (double)_offsetFromBackIndicatorToContentButton;
- (void)_removeTitleButton;
- (void)_setTitle:(id)arg1;
- (void)_setupAlternateTitlesFromBarButtonItem:(id)arg1;
- (id)_titleAttributesForState:(unsigned long long)arg1;
- (id)_titleContentForTitle:(id)arg1;
- (struct UIOffset { double x1; double x2; })_titlePositionAdjustmentForBarMetrics:(long long)arg1;
- (bool)backButtonConstraintsActive;
- (bool)backButtonMaskEnabled;
- (id)backIndicatorView;
- (id)backgroundImageView;
- (void)button:(id)arg1 traitCollectionDidChange:(id)arg2;
- (void)buttonLayoutSubviews:(id)arg1 baseImplementation:(id /* block */)arg2;
- (bool)buttonSelectionState:(id)arg1 forRequestedState:(bool)arg2;
- (void)configureButton:(id)arg1 fromBarButtonItem:(id)arg2;
- (void)configureButton:(id)arg1 withAppearanceDelegate:(id)arg2 fromBarItem:(id)arg3;
- (id)contentView;
- (id)imageButton;
- (void)setBackButtonConstraintsActive:(bool)arg1;
- (void)setBackButtonMaskEnabled:(bool)arg1;
- (bool)supportsBackButtons;
- (id)textButton;
- (void)updateButton:(id)arg1 forEnabledState:(bool)arg2;
- (void)updateButton:(id)arg1 forHighlightedState:(bool)arg2;
- (void)updateButton:(id)arg1 forSelectedState:(bool)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIPreviewPresentationController2.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIPreviewPresentationController2.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIPreviewPresentationController2 : UIPreviewPresentationController {
    _UIPreviewPresentationPlatterView * _contentPlatterView;
    <_UIPreviewInteractionHighlighting> * _currentHighlighter;
    UIViewPropertyAnimator * _currentTransitionAnimator;
    bool  _hasPerformedInitialLayout;
    double  _interactiveTransitionFraction;
    struct CGAffineTransform { 
        double a; 
        double b; 
        double c; 
        double d; 
        double tx; 
        double ty; 
    }  _preferredContentPlatterTransform;
    <UIViewControllerPreviewing_Internal> * _previewingContext;
    _UIPreviewPresentationPlatterView * _revealPlatterView;
    bool  _shouldEnableUserInteractionOnPlatter;
    bool  _shouldScaleContentViewToAspectFitPlatter;
}

@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _computedPlatterFrame;
@property (nonatomic, retain) _UIPreviewPresentationPlatterView *contentPlatterView;
@property (nonatomic) <_UIPreviewInteractionHighlighting> *currentHighlighter;
@property (nonatomic) UIViewPropertyAnimator *currentTransitionAnimator;
@property (nonatomic) bool hasPerformedInitialLayout;
@property (nonatomic) double interactiveTransitionFraction;
@property (nonatomic) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } preferredContentPlatterTransform;
@property (nonatomic) <UIViewControllerPreviewing_Internal> *previewingContext;
@property (nonatomic, retain) _UIPreviewPresentationPlatterView *revealPlatterView;
@property (nonatomic) bool shouldEnableUserInteractionOnPlatter;
@property (nonatomic) bool shouldScaleContentViewToAspectFitPlatter;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_computedPlatterFrame;
- (void)_layoutContentViews;
- (void)_performDismissAnimationsWithTransitionContext:(id)arg1;
- (void)_performPresentationAnimationsWithTransitionContext:(id)arg1;
- (void)_performReducedMotionDismissAnimationsWithTransitionContext:(id)arg1;
- (void)_performReducedMotionPresentationAnimationsWithTransitionContext:(id)arg1;
- (void)_performTransitionAnimations:(id /* block */)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_preferredContentPlatterRectForContainerRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)_prepareContentPlatterViewForPresentationTransitionIfNeeded:(id)arg1;
- (void)_prepareContentViewsForPresentationAnimationsIfNeeded;
- (void)_preparePresentationAnimationsForTransitionCoordinator:(id)arg1;
- (void)_prepareRevealPlatterViewForPresentationTransitionIfNeeded:(id)arg1;
- (void)_presentationTransitionWillBeginForContainerEffectView:(id)arg1;
- (bool)_shouldDisableInteractionDuringTransitions;
- (bool)_shouldReduceMotion;
- (void)_updateFromInteractionEffect:(id)arg1;
- (void)containerViewDidLayoutSubviews;
- (id)contentPlatterView;
- (id)currentHighlighter;
- (id)currentTransitionAnimator;
- (void)dismissalTransitionDidEnd:(bool)arg1;
- (void)dismissalTransitionWillBegin;
- (bool)hasPerformedInitialLayout;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2 previewingContext:(id)arg3;
- (double)interactiveTransitionFraction;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })preferredContentPlatterTransform;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)presentationTransitionDidEnd:(bool)arg1;
- (void)presentationTransitionWillBegin;
- (id)previewingContext;
- (id)revealPlatterView;
- (void)setContentPlatterView:(id)arg1;
- (void)setCurrentHighlighter:(id)arg1;
- (void)setCurrentTransitionAnimator:(id)arg1;
- (void)setHasPerformedInitialLayout:(bool)arg1;
- (void)setInteractiveTransitionFraction:(double)arg1;
- (void)setPreferredContentPlatterTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setPreviewingContext:(id)arg1;
- (void)setRevealPlatterView:(id)arg1;
- (void)setShouldEnableUserInteractionOnPlatter:(bool)arg1;
- (void)setShouldScaleContentViewToAspectFitPlatter:(bool)arg1;
- (bool)shouldEnableUserInteractionOnPlatter;
- (bool)shouldScaleContentViewToAspectFitPlatter;
- (void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

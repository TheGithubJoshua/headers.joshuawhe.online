<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIDynamicItemBehavior.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIDynamicItemBehavior.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIDynamicItemBehavior : UIDynamicBehavior {
    bool  _allowsRotation;
    bool  _anchored;
    double  _angularResistance;
    NSMapTable * _cachedAngularVelocities;
    NSMapTable * _cachedLinearVelocities;
    double  _charge;
    double  _density;
    double  _elasticity;
    double  _friction;
    double  _resistance;
    struct { 
        unsigned int elasticityChanged : 1; 
        unsigned int frictionChanged : 1; 
        unsigned int densityChanged : 1; 
        unsigned int resistanceChanged : 1; 
        unsigned int angularResistanceChanged : 1; 
        unsigned int rotationEnabledChanged : 1; 
        unsigned int useDefaultViewPropertiesApplierChanged : 1; 
        unsigned int chargeChanged : 1; 
        unsigned int dynamicChanged : 1; 
    }  _stateFlags;
    bool  _useDefaultViewPropertiesApplier;
}

@property (nonatomic) bool allowsRotation;
@property (getter=isAnchored, nonatomic) bool anchored;
@property (nonatomic) double angularResistance;
@property (nonatomic) double charge;
@property (nonatomic) double density;
@property (nonatomic) double elasticity;
@property (nonatomic) double friction;
@property (nonatomic, readonly, copy) NSArray *items;
@property (nonatomic) double resistance;

+ (bool)_isPrimitiveBehavior;

- (void).cxx_destruct;
- (double)_angleForItem:(id)arg1;
- (double)_angularResistanceForItem:(id)arg1;
- (void)_associate;
- (void)_configureBody:(id)arg1 forView:(id)arg2;
- (double)_densityForItem:(id)arg1;
- (void)_dissociate;
- (double)_elasticityForItem:(id)arg1;
- (double)_frictionForItem:(id)arg1;
- (double)_massForItem:(id)arg1;
- (struct CGPoint { double x1; double x2; })_positionForItem:(id)arg1;
- (void)_reevaluate:(unsigned long long)arg1;
- (double)_resistanceForItem:(id)arg1;
- (bool)_rotationEnabledForItem:(id)arg1;
- (void)_setAngle:(double)arg1 forItem:(id)arg2;
- (void)_setPosition:(struct CGPoint { double x1; double x2; })arg1 forItem:(id)arg2;
- (void)addAngularVelocity:(double)arg1 forItem:(id)arg2;
- (void)addItem:(id)arg1;
- (void)addLinearVelocity:(struct CGPoint { double x1; double x2; })arg1 forItem:(id)arg2;
- (bool)allowsRotation;
- (double)angularResistance;
- (double)angularVelocityForItem:(id)arg1;
- (void)applyImpulse:(struct CGPoint { double x1; double x2; })arg1 toItem:(id)arg2;
- (double)charge;
- (double)density;
- (id)description;
- (double)elasticity;
- (double)friction;
- (id)init;
- (id)initWithItems:(id)arg1;
- (bool)isAnchored;
- (id)items;
- (struct CGPoint { double x1; double x2; })linearVelocityForItem:(id)arg1;
- (void)removeItem:(id)arg1;
- (double)resistance;
- (void)setAllowsRotation:(bool)arg1;
- (void)setAnchored:(bool)arg1;
- (void)setAngularResistance:(double)arg1;
- (void)setCharge:(double)arg1;
- (void)setDensity:(double)arg1;
- (void)setElasticity:(double)arg1;
- (void)setFriction:(double)arg1;
- (void)setResistance:(double)arg1;
- (void)setUseDefaultViewPropertiesApplier:(bool)arg1;
- (bool)useDefaultViewPropertiesApplier;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

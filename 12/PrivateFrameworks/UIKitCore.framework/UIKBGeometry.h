<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIKBGeometry.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIKBGeometry.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIKBGeometry : NSObject <NSCoding, NSCopying> {
    bool  m_explicitlySpecified;
    struct { 
        double amount; 
        int unit; 
    }  m_h;
    bool  m_isTemplate;
    NSString * m_name;
    struct { 
        double amount; 
        int unit; 
    }  m_paddingBottom;
    struct { 
        double amount; 
        int unit; 
    }  m_paddingLeft;
    struct { 
        double amount; 
        int unit; 
    }  m_paddingRight;
    struct { 
        double amount; 
        int unit; 
    }  m_paddingTop;
    struct { 
        double amount; 
        int unit; 
    }  m_w;
    struct { 
        double amount; 
        int unit; 
    }  m_x;
    struct { 
        double amount; 
        int unit; 
    }  m_y;
}

@property (nonatomic) bool explicitlySpecified;
@property (setter=setH:, nonatomic) struct { double x1; int x2; } h;
@property (nonatomic) bool isTemplate;
@property (nonatomic, retain) NSString *name;
@property (setter=setPaddingBottom:, nonatomic) struct { double x1; int x2; } paddingBottom;
@property (setter=setPaddingLeft:, nonatomic) struct { double x1; int x2; } paddingLeft;
@property (setter=setPaddingRight:, nonatomic) struct { double x1; int x2; } paddingRight;
@property (setter=setPaddingTop:, nonatomic) struct { double x1; int x2; } paddingTop;
@property (setter=setW:, nonatomic) struct { double x1; int x2; } w;
@property (setter=setX:, nonatomic) struct { double x1; int x2; } x;
@property (setter=setY:, nonatomic) struct { double x1; int x2; } y;

+ (id)codeStringForValue:(struct { double x1; int x2; })arg1;
+ (id)geometry;
+ (id)geometryWithOriginValue:(struct { double x1; int x2; })arg1 sizeValue:(struct { double x1; int x2; })arg2;
+ (id)geometryWithRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (void)performOperations:(id /* block */)arg1 withScale:(double)arg2;

- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (bool)explicitlySpecified;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameWithContainingFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct { double x1; int x2; })h;
- (unsigned long long)hash;
- (id)init;
- (id)initTemplateWithName:(id)arg1 rect:(struct { struct { double x_1_1_1; int x_1_1_2; } x1[4]; })arg2 padding:(struct { struct { double x_1_1_1; int x_1_1_2; } x1[4]; })arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 rect:(struct { struct { double x_1_1_1; int x_1_1_2; } x1[4]; })arg2 padding:(struct { struct { double x_1_1_1; int x_1_1_2; } x1[4]; })arg3;
- (bool)isEqual:(id)arg1;
- (bool)isTemplate;
- (id)name;
- (id)overrideGeometry:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })paddedFrameWithContainingFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })paddedFrameWithResolvedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct { double x1; int x2; })paddingBottom;
- (struct { double x1; int x2; })paddingLeft;
- (struct { double x1; int x2; })paddingRight;
- (struct { double x1; int x2; })paddingTop;
- (void)setExplicitlySpecified:(bool)arg1;
- (void)setH:(struct { double x1; int x2; })arg1;
- (void)setIsTemplate:(bool)arg1;
- (void)setName:(id)arg1;
- (void)setPaddingBottom:(struct { double x1; int x2; })arg1;
- (void)setPaddingLeft:(struct { double x1; int x2; })arg1;
- (void)setPaddingRight:(struct { double x1; int x2; })arg1;
- (void)setPaddingTop:(struct { double x1; int x2; })arg1;
- (void)setW:(struct { double x1; int x2; })arg1;
- (void)setX:(struct { double x1; int x2; })arg1;
- (void)setY:(struct { double x1; int x2; })arg1;
- (id)shortDescription;
- (bool)usesAutomaticMetrics;
- (bool)usesPercentages;
- (struct { double x1; int x2; })w;
- (struct { double x1; int x2; })x;
- (struct { double x1; int x2; })y;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

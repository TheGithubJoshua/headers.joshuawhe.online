<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIVisualEffectView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIVisualEffectView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIVisualEffectView : UIView <NSSecureCoding> {
    NSArray * __captureDependents;
    _UIVisualEffectViewCapturedState * __capturedStateDuringAnimation;
    _UIVisualEffectViewCornerMask * __cornerMask;
    bool  __useKeyframeWorkaround;
    double  _backdropViewBackgroundColorAlpha;
    NSArray * _backgroundEffects;
    _UIVisualEffectHost * _backgroundHost;
    bool  _backgroundHostNeedsUpdate;
    _UIVisualEffectViewBackdropCaptureGroup * _captureGroup;
    NSArray * _contentEffects;
    _UIVisualEffectHost * _contentHost;
    bool  _contentHostNeedsUpdate;
    UIVisualEffect * _effect;
    bool  _isDependent;
    UIImage * _maskImage;
    UIView * _maskView;
    bool  _noiseEnabled;
    bool  _useLiveMasking;
    bool  _useReducedTransparencyForContentHost;
}

@property (nonatomic, readonly) bool _applyCornerMaskToSelf;
@property (getter=_backdropViewBackgroundColorAlpha, setter=_setBackdropViewBackgroundColorAlpha:, nonatomic) double _backdropViewBackgroundColorAlpha;
@property (setter=_setCaptureDependents:, nonatomic, copy) NSArray *_captureDependents;
@property (nonatomic, readonly) _UIVisualEffectViewBackdropCaptureGroup *_captureGroup;
@property (setter=_setCaptureView:, nonatomic) _UIVisualEffectBackdropView *_captureView;
@property (getter=_capturedStateDuringAnimation, setter=_setCapturedStateDuringAnimation:, nonatomic, retain) _UIVisualEffectViewCapturedState *_capturedStateDuringAnimation;
@property (setter=_setCornerMask:, nonatomic, retain) _UIVisualEffectViewCornerMask *_cornerMask;
@property (setter=_setCornerRadius:, nonatomic) double _cornerRadius;
@property (setter=_setGroupName:, nonatomic, copy) NSString *_groupName;
@property (setter=_setMaskImage:, nonatomic, retain) UIImage *_maskImage;
@property (getter=_isNoiseEnabled, setter=_setNoiseEnabled:, nonatomic) bool _noiseEnabled;
@property (setter=_setUseKeyframeWorkaround:, nonatomic) bool _useKeyframeWorkaround;
@property (nonatomic, copy) NSArray *backgroundEffects;
@property (nonatomic, copy) NSArray *contentEffects;
@property (nonatomic, readonly) UIView *contentView;
@property (nonatomic, copy) UIVisualEffect *effect;
@property (getter=_useLiveMasking, setter=_setUseLiveMasking:, nonatomic) bool useLiveMasking;
@property (getter=_useReducedTransparencyForContentEffects, setter=_setUseReducedTransparencyForContentEffects:, nonatomic) bool useReducedTransparencyForContentEffects;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (bool)_applyCornerMaskToSelf;
- (void)_applyCornerRadiusToSubviews;
- (id)_backdropSubview;
- (double)_backdropViewBackgroundColorAlpha;
- (id)_backgroundHost;
- (id)_captureDependents;
- (id)_captureGroup;
- (id)_captureStateForCurrentAnimationBlockCreatingIfNecessary:(bool)arg1 clearingCache:(bool)arg2;
- (id)_captureView;
- (id)_capturedStateDuringAnimation;
- (void)_commonInit;
- (void)_configureAllEffects;
- (void)_configureEffects;
- (id)_contentHost;
- (double)_continuousCornerRadius;
- (id)_cornerMask;
- (double)_cornerRadius;
- (id)_debug;
- (id)_effectNodeForEffects:(id)arg1 traits:(id)arg2 options:(id)arg3;
- (void)_ensureBackgroundHost;
- (void)_ensureContentHostWithView:(id)arg1;
- (void)_generateAnimationsForPendingKeyframes:(id)arg1 duration:(double)arg2;
- (void)_generateWorkaroundKeyframeAnimationsForEffects:(id)arg1;
- (id)_groupName;
- (bool)_hasTransformForEffectSubview:(id)arg1;
- (id)_initialValueForKey:(id)arg1;
- (bool)_isNoiseEnabled;
- (id)_maskImage;
- (id)_maskImageForMaskView:(id)arg1;
- (id)_maskView;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_registerNotifications;
- (void)_resetEffect;
- (void)_setBackdropViewBackgroundColorAlpha:(double)arg1;
- (void)_setCaptureDependents:(id)arg1;
- (void)_setCaptureView:(id)arg1;
- (void)_setCapturedStateDuringAnimation:(id)arg1;
- (void)_setContinuousCornerRadius:(double)arg1;
- (void)_setCornerMask:(id)arg1;
- (void)_setCornerRadius:(double)arg1;
- (void)_setCornerRadius:(double)arg1 continuous:(bool)arg2 maskedCorners:(unsigned long long)arg3;
- (void)_setEffect:(id)arg1;
- (void)_setGroupName:(id)arg1;
- (void)_setMaskImage:(id)arg1;
- (void)_setMaskView:(id)arg1;
- (void)_setNoiseEnabled:(bool)arg1;
- (void)_setTintOpacity:(double)arg1;
- (void)_setUseKeyframeWorkaround:(bool)arg1;
- (void)_setUseLiveMasking:(bool)arg1;
- (void)_setUseReducedTransparencyForContentEffects:(bool)arg1;
- (bool)_shouldManageCornerRadiusForEffectSubview:(id)arg1;
- (void)_unregisterNotifications;
- (void)_updateEffectBackgroundColor;
- (void)_updateEffectForAccessibilityChanges:(id)arg1;
- (void)_updateEffectForAlphaTransitionDidEnd:(id)arg1;
- (void)_updateEffectForAlphaTransitionWillBegin:(id)arg1;
- (void)_updateEffectForReducedTransparency;
- (void)_updateEffectForSnapshotDidEnd:(id)arg1;
- (void)_updateEffectForSnapshotWillBegin:(id)arg1;
- (void)_updateEffectsFromLegacyEffect;
- (void)_updateSubviews;
- (bool)_useKeyframeWorkaround;
- (bool)_useLiveMasking;
- (bool)_useReducedTransparencyForContentEffects;
- (id)_whatsWrongWithThisEffect;
- (id)backgroundEffects;
- (id)contentEffects;
- (id)contentView;
- (void)dealloc;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (id)effect;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithEffect:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (void)setBackgroundEffects:(id)arg1;
- (void)setContentEffects:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setEffect:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;

// Image: /System/Library/PrivateFrameworks/News/TeaUI.framework/TeaUI

- (void)ts_setGroupName:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

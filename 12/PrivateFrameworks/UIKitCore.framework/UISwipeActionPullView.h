<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UISwipeActionPullView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UISwipeActionPullView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UISwipeActionPullView : UIView {
    NSArray * _actions;
    bool  _autosizesButtons;
    UIColor * _backgroundPullColor;
    NSMutableArray * _buttons;
    bool  _buttonsUnderlapSwipedView;
    unsigned long long  _cellEdge;
    double  _confirmationThreshold;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentInsets;
    double  _currentExtraOffset;
    double  _currentOffset;
    <UISwipeActionPullViewDelegate> * _delegate;
    bool  _isCollapsed;
    double  _minimumOffset;
    double  _openThreshold;
    UISwipeActionButton * _pressedButton;
    unsigned long long  _state;
    unsigned long long  _style;
    bool  _swipeActionsDidChange;
}

@property (nonatomic) bool autosizesButtons;
@property (nonatomic, copy) UIColor *backgroundPullColor;
@property (nonatomic) bool buttonsUnderlapSwipedView;
@property (nonatomic, readonly) unsigned long long cellEdge;
@property (nonatomic, readonly) double confirmationThreshold;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentInsets;
@property (nonatomic, readonly) double currentOffset;
@property (nonatomic) <UISwipeActionPullViewDelegate> *delegate;
@property (nonatomic, readonly) bool hasActions;
@property (nonatomic, readonly) double openThreshold;
@property (nonatomic, readonly) UIColor *primaryActionColor;
@property (nonatomic, readonly) bool primaryActionIsDestructive;
@property (nonatomic, readonly) UIContextualAction *primarySwipeAction;
@property (nonatomic) unsigned long long state;

- (void).cxx_destruct;
- (Class)_buttonClass;
- (double)_directionalMultiplier;
- (void)_pressedButton:(id)arg1;
- (void)_rebuildButtons;
- (unsigned long long)_swipeActionCount;
- (void)_tappedButton:(id)arg1;
- (void)_unpressedButton:(id)arg1;
- (bool)autosizesButtons;
- (id)backgroundPullColor;
- (bool)buttonsUnderlapSwipedView;
- (unsigned long long)cellEdge;
- (void)configureWithSwipeActions:(id)arg1;
- (double)confirmationThreshold;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInsets;
- (double)currentOffset;
- (id)delegate;
- (id)description;
- (void)freeze;
- (bool)hasActions;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithCellEdge:(unsigned long long)arg1 style:(unsigned long long)arg2;
- (void)layoutSubviews;
- (void)moveToOffset:(double)arg1 extraOffset:(double)arg2 animated:(bool)arg3 usingSpringWithStiffness:(double)arg4 initialVelocity:(double)arg5;
- (double)openThreshold;
- (id)primaryActionColor;
- (bool)primaryActionIsDestructive;
- (id)primarySwipeAction;
- (void)resetView;
- (void)setAutosizesButtons:(bool)arg1;
- (void)setBackgroundPullColor:(id)arg1;
- (void)setButtonsUnderlapSwipedView:(bool)arg1;
- (void)setContentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (id)sourceViewForAction:(id)arg1;
- (unsigned long long)state;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

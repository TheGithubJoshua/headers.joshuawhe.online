<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIViewAnimationState.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIViewAnimationState.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIViewAnimationState : NSObject <CAAnimationDelegate> {
    NSMutableArray * _addedCompletions;
    bool  _allowUserInteractionToCutOffEndOfAnimation;
    bool  _allowsHitTesting;
    id /* block */  _alongsideAnimations;
    bool  _animationDidStopForced;
    bool  _animationDidStopSent;
    <_UIBasicAnimationFactory> * _animationFactory;
    bool  _animationFactoryMakesPerAnimationCustomCurves;
    NSString * _animationID;
    unsigned int  _autoreverses;
    bool  _belongsToTrackingAnimator;
    unsigned int  _cacheTransition;
    unsigned int  _completionCallbacksDisabledOnPop;
    void * _context;
    long long  _curve;
    CAMediaTimingFunction * _customCurve;
    double  _delay;
    id  _delegate;
    int  _didEndCount;
    SEL  _didEndSelector;
    bool  _disallowAdditiveAnimations;
    unsigned int  _disallowCaptureWithinPropertyAnimator;
    bool  _disallowInheritance;
    double  _duration;
    int  _filter;
    float  _filterValue;
    UIView * _filterView;
    long long  _finishedPosition;
    double  _frameInterval;
    unsigned int  _hasOuterAnimator;
    unsigned int  _hasOuterTrackingAnimator;
    unsigned int  _layoutSubviews;
    UIViewAnimationState * _nextState;
    struct CGPoint { 
        double x; 
        double y; 
    }  _position;
    UIViewPropertyAnimator * _propertyAnimator;
    float  _repeatCount;
    UIViewAnimationState * _retainedSelf;
    unsigned int  _roundsToInteger;
    double  _start;
    NSMutableArray * _trackedAnimations;
    long long  _transition;
    UIView * _transitionView;
    unsigned int  _useCurrentLayerState;
    NSUUID * _uuid;
    NSMutableArray * _viewsPendingConstraintBasedAnimation;
    SEL  _willStartSelector;
    unsigned int  _willStartSent;
}

@property (nonatomic, readonly) bool _allowsUserInteraction;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (void)_addConstraintPendingAnimation:(id)arg1 container:(id)arg2;
+ (void)_addSystemPostAnimationAction:(id /* block */)arg1;
+ (void)_addViewForConstraintBasedAnimation:(id)arg1;
+ (id)originalAnimationForKeyPath:(id)arg1 inLayer:(id)arg2;
+ (void)popAnimationState;
+ (void)pushViewAnimationState:(id)arg1 context:(void*)arg2;

- (void).cxx_destruct;
- (void)_acceptEarlyAnimationCutoff:(id)arg1;
- (void)_addAnimationStateForTracking:(id)arg1;
- (bool)_addCompletion:(id /* block */)arg1;
- (bool)_addCompletionWithPosition:(id /* block */)arg1;
- (bool)_addPendingKeyframeValue:(id)arg1 forKey:(id)arg2 view:(id)arg3;
- (bool)_allowsHitTesting;
- (bool)_allowsUserInteraction;
- (bool)_allowsUserInteractionToCutOffEndOfAnimation;
- (void)_animationDidStopWithNilAnimationFinished:(bool)arg1;
- (id)_canonicalTrackedLayerAnimationInLayer:(id*)arg1;
- (double)_canonicalTrackedUnpacedFractionComplete;
- (void)_decrementDidEndCount;
- (id)_defaultAnimationForKey:(id)arg1;
- (int)_didEndCount;
- (double)_elapsedTimeForCanonicallyTrackedAnimation;
- (void)_incrementDidEndCount;
- (bool)_isKeyframeAnimation;
- (bool)_isTrackingEnabled;
- (id)_outerPropertyAnimator:(bool)arg1;
- (void)_performWithCompletionCallbacksDisabledOnPop:(id /* block */)arg1;
- (void)_prepareForViewAnimationAfterPush;
- (void)_removeAnimationStateFromTrackingMap:(bool)arg1;
- (void)_removeAnimationStateFromTrackingMap:(bool)arg1 disableTrackingIfNeeded:(bool)arg2;
- (void)_removeLastCompletion;
- (void)_runAlongsideAnimations;
- (void)_runConstraintBasedLayoutAnimations;
- (void)_setAlongsideAnimations:(id /* block */)arg1;
- (void)_setCustomCurve:(id)arg1;
- (void)_setFinishedPosition:(long long)arg1;
- (bool)_shouldAnimateAdditivelyForKey:(id)arg1 onLayer:(id)arg2 forView:(id)arg3;
- (bool)_shouldStartFromCurrentStateForLayer:(id)arg1 key:(id)arg2 forView:(id)arg3;
- (void)_trackAnimation:(id)arg1 nonAdditiveAnimation:(id)arg2 withAnimationKey:(id)arg3 forKeyPath:(id)arg4 inLayer:(id)arg5;
- (void)_trackAnimation:(id)arg1 withAnimationKey:(id)arg2 forKeyPath:(id)arg3 inLayer:(id)arg4;
- (void)_trackObject:(id)arg1 withAnimationPropertyName:(id)arg2 inLayer:(id)arg3;
- (id)_trackedAnimations;
- (void)_transferAnimationToTrackingAnimator:(id)arg1;
- (void)_transformIntoAdditiveAnimationAndNoteOriginal:(id)arg1 inLayer:(id)arg2 animationKey:(id)arg3;
- (double)_unpacedFractionCompleteForAnimation:(id)arg1 inLayer:(id)arg2 duration:(double)arg3;
- (void)_untrackAnimationsWithIdentifier:(id)arg1 keyPath:(id)arg2 inLayer:(id)arg3 removeFromLayer:(bool)arg4;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2 forView:(id)arg3;
- (void)animationDidStart:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(bool)arg2;
- (id)animationForLayer:(id)arg1 forKey:(id)arg2 forView:(id)arg3;
- (void)configureAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3;
- (id)init;
- (void)pop;
- (void)pushWithViewAnimationID:(id)arg1 context:(void*)arg2;
- (void)sendDelegateAnimationDidStop:(id)arg1 finished:(bool)arg2;
- (void)sendDelegateDidStopManually:(bool)arg1;
- (void)setAnimationAttributes:(id)arg1;
- (void)setAnimationAttributes:(id)arg1 correctZeroDuration:(bool)arg2 skipDelegateAssignment:(bool)arg3;
- (void)setAnimationAttributes:(id)arg1 correctZeroDuration:(bool)arg2 skipDelegateAssignment:(bool)arg3 customCurve:(id)arg4;
- (void)setupCustomTimingCurve;
- (void)setupWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned long long)arg4 factory:(id)arg5 parentState:(id)arg6 start:(id /* block */)arg7 completion:(id /* block */)arg8;
- (bool)shouldAnimatePropertyWithKey:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

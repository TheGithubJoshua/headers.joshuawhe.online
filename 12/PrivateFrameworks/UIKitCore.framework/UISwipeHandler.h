<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UISwipeHandler.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UISwipeHandler.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UISwipeHandler : NSObject <UIGestureRecognizerDelegate> {
    bool  _active;
    double  _confirmationTranslationAdjustment;
    struct { 
        unsigned long long direction; 
        bool primaryActionIsDestructive; 
        bool primaryActionCanBeTriggeredBySwipe; 
        double openThreshold; 
        double confirmationThreshold; 
    }  _currentSwipeConfig;
    unsigned long long  _currentSwipeState;
    UISwipeDismissalGestureRecognizer * _dismissalGestureRecognizer;
    double  _initialTranslation;
    bool  _resetSwipeWhileInitiating;
    _UISwipeActionPanGestureRecognizer * _swipeActionPanRecognizer;
    UISwipeActionController * _swipeController;
    _UIStatesFeedbackGenerator * _swipeFeedbackGenerator;
}

@property (getter=isActive, nonatomic) bool active;
@property (nonatomic, readonly) struct { unsigned long long x1; bool x2; bool x3; double x4; double x5; } currentSwipeConfig;
@property (nonatomic, readonly) unsigned long long currentSwipeState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (getter=isInteracting, nonatomic, readonly) bool interacting;
@property (readonly) Class superclass;
@property (nonatomic) UISwipeActionController *swipeController;
@property (nonatomic, retain) _UIStatesFeedbackGenerator *swipeFeedbackGenerator;

- (void).cxx_destruct;
- (struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; })_currentSwipeInfoWithTargetOffset:(double)arg1 animated:(bool)arg2 usingSpringWithStiffness:(double)arg3;
- (unsigned long long)_directionForGestureRecognizer:(id)arg1;
- (void)_dismissalRecognizerDidRecognize:(id)arg1;
- (void)_moveSwipedItemToOffset:(double)arg1 animated:(bool)arg2 usingSpringWithStiffness:(double)arg3;
- (void)_setUp;
- (void)_swipeRecognizerBegan:(id)arg1;
- (void)_swipeRecognizerChanged:(id)arg1;
- (void)_swipeRecognizerDidRecognize:(id)arg1;
- (void)_swipeRecognizerEnded:(id)arg1 wasCancelled:(bool)arg2;
- (struct { unsigned long long x1; bool x2; bool x3; double x4; double x5; })currentSwipeConfig;
- (unsigned long long)currentSwipeState;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)initWithSwipeController:(id)arg1;
- (void)initiateSwipeWithDirection:(unsigned long long)arg1 configuration:(id)arg2 location:(struct CGPoint { double x1; double x2; })arg3 userInitiated:(bool)arg4;
- (bool)isActive;
- (bool)isInteracting;
- (void)resetSwipe;
- (void)setActive:(bool)arg1;
- (void)setSwipeController:(id)arg1;
- (void)setSwipeFeedbackGenerator:(id)arg1;
- (id)swipeController;
- (id)swipeFeedbackGenerator;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UITableViewDragController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UITableViewDragController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UITableViewDragController : NSObject <UIDragInteractionDelegate_Internal> {
    NSMapTable * _cellsAnimatingCancel;
    long long  _clientEnabledState;
    UIDragInteraction * _dragInteraction;
    <UIDragSession> * _dragSession;
    bool  _forceEnabledForReordering;
    NSMutableOrderedSet * _indexPaths;
    UITableViewCell * _initiatingCell;
    NSIndexPath * _initiatingIndexPath;
    UITableView<_UITableViewDragControllerDelegate> * _tableView;
    NSMutableOrderedSet * _tentativeIndexPaths;
    UITableViewCell * _tentativeInitiatingCell;
    NSIndexPath * _tentativeInitiatingIndexPath;
}

@property (getter=isActive, nonatomic, readonly) bool active;
@property (nonatomic, retain) NSMapTable *cellsAnimatingCancel;
@property (nonatomic) long long clientEnabledState;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIDragInteraction *dragInteraction;
@property (nonatomic, retain) <UIDragSession> *dragSession;
@property (nonatomic, readonly) UITableViewCell *draggedCell;
@property (nonatomic, readonly) NSIndexPath *draggedIndexPath;
@property (nonatomic) bool forceEnabledForReordering;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableOrderedSet *indexPaths;
@property (nonatomic, retain) UITableViewCell *initiatingCell;
@property (nonatomic, retain) NSIndexPath *initiatingIndexPath;
@property (readonly) Class superclass;
@property (nonatomic) UITableView<_UITableViewDragControllerDelegate> *tableView;
@property (nonatomic, retain) NSMutableOrderedSet *tentativeIndexPaths;
@property (nonatomic, retain) UITableViewCell *tentativeInitiatingCell;
@property (nonatomic, retain) NSIndexPath *tentativeInitiatingIndexPath;

+ (bool)isEnabledByDefault;

- (void).cxx_destruct;
- (long long)_dragInteraction:(id)arg1 dataOwnerForAddingToSession:(id)arg2 withTouchAtPoint:(struct CGPoint { double x1; double x2; })arg3;
- (long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2;
- (bool)_dragInteractionDynamicallyUpdatesPrefersFullSizePreviews:(id)arg1;
- (void)addTentativeRowAtIndexPath:(id)arg1;
- (void)beginDragForTentativeRows;
- (void)beginDragOfRowsForSession:(id)arg1 notifyDelegate:(bool)arg2;
- (bool)canProvideItemsForDragAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)cellsAnimatingCancel;
- (void)clearTentativeRows;
- (long long)clientEnabledState;
- (id)dragInteraction;
- (void)dragInteraction:(id)arg1 item:(id)arg2 willAnimateCancelWithAnimator:(id)arg3;
- (id)dragInteraction:(id)arg1 itemsForAddingToSession:(id)arg2 withTouchAtPoint:(struct CGPoint { double x1; double x2; })arg3;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (bool)dragInteraction:(id)arg1 prefersFullSizePreviewsForSession:(id)arg2;
- (id)dragInteraction:(id)arg1 previewForCancellingItem:(id)arg2 withDefault:(id)arg3;
- (id)dragInteraction:(id)arg1 previewForLiftingItem:(id)arg2 session:(id)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 didEndWithOperation:(unsigned long long)arg3;
- (void)dragInteraction:(id)arg1 session:(id)arg2 willAddItems:(id)arg3 forInteraction:(id)arg4;
- (bool)dragInteraction:(id)arg1 sessionAllowsMoveOperation:(id)arg2;
- (id)dragInteraction:(id)arg1 sessionForAddingItems:(id)arg2 withTouchAtPoint:(struct CGPoint { double x1; double x2; })arg3;
- (bool)dragInteraction:(id)arg1 sessionIsRestrictedToDraggingApplication:(id)arg2;
- (void)dragInteraction:(id)arg1 sessionWillBegin:(id)arg2;
- (void)dragInteraction:(id)arg1 willAnimateLiftWithAnimator:(id)arg2 session:(id)arg3;
- (id)dragSession;
- (id)draggedCell;
- (id)draggedIndexPath;
- (bool)forceEnabledForReordering;
- (void)forceReset;
- (void)immediatelyBeginDragWithTouch:(id)arg1;
- (id)indexPaths;
- (id)initWithTableView:(id)arg1;
- (id)initiatingCell;
- (id)initiatingIndexPath;
- (bool)isActive;
- (void)resetDragState;
- (void)setCellsAnimatingCancel:(id)arg1;
- (void)setClientEnabledState:(long long)arg1;
- (void)setDragInteraction:(id)arg1;
- (void)setDragSession:(id)arg1;
- (void)setForceEnabledForReordering:(bool)arg1;
- (void)setIndexPaths:(id)arg1;
- (void)setInitiatingCell:(id)arg1;
- (void)setInitiatingIndexPath:(id)arg1;
- (void)setTableView:(id)arg1;
- (void)setTentativeIndexPaths:(id)arg1;
- (void)setTentativeInitiatingCell:(id)arg1;
- (void)setTentativeInitiatingIndexPath:(id)arg1;
- (void)setupDragInteraction;
- (id)tableView;
- (id)tentativeIndexPaths;
- (id)tentativeInitiatingCell;
- (id)tentativeInitiatingIndexPath;
- (void)uninstallFromTableView;
- (void)updateDragInteractionEnabledState;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

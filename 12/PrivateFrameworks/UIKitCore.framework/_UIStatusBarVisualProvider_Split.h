<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIStatusBarVisualProvider_Split.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIStatusBarVisualProvider_Split.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIStatusBarVisualProvider_Split : _UIStatusBarVisualProvider_Phone <_UIStatusBarCellularItemTypeStringProvider> {
    NSTimer * _airplaneModeIgnoreChangesTimer;
    _UIStatusBarDisplayItemPlacement * _batteryChargingPlacement;
    NSTimer * _batteryExpansionTimer;
    UILayoutGuide * _cutoutLayoutGuide;
    _UIStatusBarDisplayItemPlacement * _dualServiceNamePlacement;
    NSLayoutConstraint * _expandedLeadingLowerTopConstraint;
    NSLayoutConstraint * _expandedTrailingBottomConstraint;
    NSLayoutConstraint * _leadingBottomConstraint;
    _UIStatusBarDisplayItemPlacementGroup * _lowerWifiGroup;
    UILayoutGuide * _mainRegionsLayoutGuide;
    NSDictionary * _orderedDisplayItemPlacements;
    _UIStatusBarDisplayItemPlacement * _pillIconPlacement;
    NSTimer * _pillTimer;
    _UIStatusBarDisplayItemPlacement * _serviceNamePlacement;
    NSTimer * _systemUpdatesTimer;
}

@property (nonatomic, retain) NSTimer *airplaneModeIgnoreChangesTimer;
@property (nonatomic, retain) _UIStatusBarDisplayItemPlacement *batteryChargingPlacement;
@property (nonatomic, retain) NSTimer *batteryExpansionTimer;
@property (nonatomic, retain) UILayoutGuide *cutoutLayoutGuide;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) _UIStatusBarDisplayItemPlacement *dualServiceNamePlacement;
@property (nonatomic, retain) NSLayoutConstraint *expandedLeadingLowerTopConstraint;
@property (nonatomic, retain) NSLayoutConstraint *expandedTrailingBottomConstraint;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSLayoutConstraint *leadingBottomConstraint;
@property (nonatomic, retain) _UIStatusBarDisplayItemPlacementGroup *lowerWifiGroup;
@property (nonatomic, retain) UILayoutGuide *mainRegionsLayoutGuide;
@property (nonatomic, retain) NSDictionary *orderedDisplayItemPlacements;
@property (nonatomic, retain) _UIStatusBarDisplayItemPlacement *pillIconPlacement;
@property (nonatomic, retain) NSTimer *pillTimer;
@property (nonatomic, retain) _UIStatusBarDisplayItemPlacement *serviceNamePlacement;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSTimer *systemUpdatesTimer;

+ (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })_edgeInsetsFromCenteringEdgeInset:(double)arg1 trailing:(bool)arg2;
+ (double)baseIconScale;
+ (double)baselineBottomInset;
+ (double)condensedPointSizeForCellularType:(long long)arg1 defaultPointSize:(double)arg2 baselineOffset:(double*)arg3;
+ (double)cornerRadius;
+ (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })expandedEdgeInsets;
+ (id)expandedFont;
+ (double)height;
+ (struct CGSize { double x1; double x2; })intrinsicContentSizeForOrientation:(long long)arg1;
+ (double)leadingCenteringEdgeInset;
+ (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })leadingEdgeInsets;
+ (double)lowerExpandedBaselineOffset;
+ (id)normalFont;
+ (double)notchBottomCornerRadius;
+ (struct CGSize { double x1; double x2; })notchSize;
+ (double)notchTopCornerRadius;
+ (double)pillCenteringEdgeInset;
+ (id)pillFont;
+ (struct CGSize { double x1; double x2; })pillSize;
+ (double)referenceScale;
+ (double)referenceWidth;
+ (double)trailingCenteringEdgeInset;
+ (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })trailingEdgeInsets;
+ (Class)visualProviderSubclassForScreen:(id)arg1;

- (void).cxx_destruct;
- (id)_additionAnimationForBatteryCharging;
- (id)_animationForBackgroundActivityIcon;
- (id)_animationForBackgroundActivityPill;
- (void)_collapseBattery;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_collapseChargingBoltTransformForDisplayItem:(id)arg1;
- (void)_disableSystemUpdates;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_expandedChargingBoltTransformForDisplayItem:(id)arg1;
- (id)_removalAnimationForBatteryCharging;
- (void)_resetBattery;
- (bool)_shouldShowSystemUpdateForDisplayItemWithIdentifier:(id)arg1;
- (void)_stopBatteryCollapseTimer;
- (void)_switchPillToTimeWithUpdate:(bool)arg1;
- (id)_systemUpdateAnimationForDisplayItemWithIdentifier:(id)arg1;
- (void)_updateBackgroundActivityWithEntry:(id)arg1 timeEntry:(id)arg2 needsUpdate:(bool)arg3;
- (void)_updateDataForBackgroundActivity:(id)arg1;
- (void)_updateDataForBatteryCharging:(id)arg1;
- (void)_updateDataForSystemUpdates:(id)arg1;
- (void)_updateExpandedTrailingRegion;
- (void)_updateLowerRegionsWithData:(id)arg1;
- (void)_updateSystemNavigationWithData:(id)arg1;
- (void)actionable:(id)arg1 highlighted:(bool)arg2 initialPress:(bool)arg3;
- (id)additionAnimationForDisplayItemWithIdentifier:(id)arg1 itemAnimation:(id)arg2;
- (id)airplaneModeIgnoreChangesTimer;
- (double)airplaneObstacleFadeOutDuration;
- (double)airplaneShouldFadeForAnimationType:(long long)arg1;
- (double)airplaneSpeedForAnimationType:(long long)arg1;
- (double)airplaneTravelOffsetInProposedPartWithIdentifier:(id*)arg1 animationType:(long long)arg2;
- (id)animationForAirplaneMode;
- (id)batteryChargingPlacement;
- (id)batteryExpansionTimer;
- (bool)canFixupDisplayItemAttributes;
- (id)condensedFontForCellularType:(long long)arg1 defaultFont:(id)arg2 baselineOffset:(double*)arg3;
- (id)cutoutLayoutGuide;
- (void)dataUpdated:(id)arg1;
- (id)defaultAnimationForDisplayItemWithIdentifier:(id)arg1;
- (id)displayItemIdentifiersForPartWithIdentifier:(id)arg1;
- (id)dualServiceNamePlacement;
- (id)expandedLeadingLowerTopConstraint;
- (id)expandedTrailingBottomConstraint;
- (void)itemCreated:(id)arg1;
- (id)leadingBottomConstraint;
- (id)lowerWifiGroup;
- (id)mainRegionsLayoutGuide;
- (id)orderedDisplayItemPlacements;
- (id)orderedDisplayItemPlacementsInRegionWithIdentifier:(id)arg1;
- (void)orientationUpdatedFromOrientation:(long long)arg1;
- (id)overriddenStyleAttributesForDisplayItemWithIdentifier:(id)arg1;
- (id)pillIconPlacement;
- (id)pillTimer;
- (id)region:(id)arg1 willSetDisplayItems:(id)arg2;
- (id)regionIdentifiersForPartWithIdentifier:(id)arg1;
- (id)removalAnimationForDisplayItemWithIdentifier:(id)arg1 itemAnimation:(id)arg2;
- (id)serviceNamePlacement;
- (void)setAirplaneModeIgnoreChangesTimer:(id)arg1;
- (void)setBatteryChargingPlacement:(id)arg1;
- (void)setBatteryExpansionTimer:(id)arg1;
- (void)setCutoutLayoutGuide:(id)arg1;
- (void)setDualServiceNamePlacement:(id)arg1;
- (void)setExpanded:(bool)arg1;
- (void)setExpandedLeadingLowerTopConstraint:(id)arg1;
- (void)setExpandedTrailingBottomConstraint:(id)arg1;
- (void)setLeadingBottomConstraint:(id)arg1;
- (void)setLowerWifiGroup:(id)arg1;
- (void)setMainRegionsLayoutGuide:(id)arg1;
- (void)setOrderedDisplayItemPlacements:(id)arg1;
- (void)setPillIconPlacement:(id)arg1;
- (void)setPillTimer:(id)arg1;
- (void)setServiceNamePlacement:(id)arg1;
- (void)setSystemUpdatesTimer:(id)arg1;
- (id)setupInContainerView:(id)arg1;
- (void)statusBarRegionsUpdated;
- (id)stringForCellularType:(long long)arg1 condensed:(bool)arg2;
- (id)styleAttributes;
- (void)styleUpdatedFromStyle:(long long)arg1;
- (id)systemUpdatesTimer;
- (void)updateDataForService:(id)arg1;
- (void)updateDataForSystemNavigation:(id)arg1;
- (id)willUpdateWithData:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

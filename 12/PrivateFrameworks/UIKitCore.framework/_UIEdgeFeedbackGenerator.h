<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIEdgeFeedbackGenerator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIEdgeFeedbackGenerator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIEdgeFeedbackGenerator : UIFeedbackGenerator <UIFeedbackGeneratorUserInteractionDriven> {
    long long  _axis;
    bool  _closeToEdge;
    double  _closeToEdgeUpdateTime;
    double  _distance;
    double  _extentBeyondDistance;
    _UIFeedbackEngine * _feedbackEngine;
    long long  _lastState;
    double  _lastValueUpdateTime;
    bool  _playedOvershotThresholdFeedback;
    _UIFeedback<_UIFeedbackContinuousPlayable> * _playingContinuousFeedback;
    double  _previousValue;
    double  _previousValueUpdateTime;
    long long  _state;
    double  _value;
    double  _velocity;
}

@property (nonatomic) long long axis;
@property (getter=_isCloseToEdge, setter=_setCloseToEdge:, nonatomic) bool closeToEdge;
@property (getter=_closeToEdgeUpdateTime, setter=_setCloseToEdgeUpdateTime:, nonatomic) double closeToEdgeUpdateTime;
@property (nonatomic) double distance;
@property (getter=_edgeConfiguration, nonatomic, readonly) _UIEdgeFeedbackGeneratorConfiguration *edgeConfiguration;
@property (getter=_effectiveDistance, nonatomic, readonly) double effectiveDistance;
@property (nonatomic) double extentBeyondDistance;
@property (getter=_lastState, setter=_setLastState:, nonatomic) long long lastState;
@property (getter=_lastValueUpdateTime, setter=_setLastValueUpdateTime:, nonatomic) double lastValueUpdateTime;
@property (getter=_isOvershot, nonatomic, readonly) bool overshot;
@property (getter=_percentBeyondDistance, nonatomic, readonly) float percentBeyondDistance;
@property (getter=_playingContinuousFeedback, setter=_setPlayingContinuousFeedback:, nonatomic, retain) _UIFeedback<_UIFeedbackContinuousPlayable> *playingContinuousFeedback;
@property (getter=_previousValue, setter=_setPreviousValue:, nonatomic) double previousValue;
@property (getter=_previousValueUpdateTime, setter=_setPreviousValueUpdateTime:, nonatomic) double previousValueUpdateTime;
@property (getter=_state, setter=_setState:, nonatomic) long long state;
@property (getter=_value, setter=_setValue:, nonatomic) double value;
@property (getter=_velocity, setter=_setVelocity:, nonatomic) double velocity;

+ (Class)_configurationClass;

- (void).cxx_destruct;
- (void)_animationEnded;
- (void)_animationStarted;
- (void)_animationStartedUsingTimeout:(bool)arg1;
- (void)_cancelStopAnimatingTimeout;
- (double)_closeToEdgeUpdateTime;
- (void)_deactivate;
- (id)_edgeConfiguration;
- (double)_effectiveDistance;
- (bool)_isCloseToEdge;
- (bool)_isOvershot;
- (long long)_lastState;
- (double)_lastValueUpdateTime;
- (float)_percentBeyondDistance;
- (id)_playingContinuousFeedback;
- (void)_positionUpdated:(double)arg1 withVelocity:(double)arg2;
- (double)_previousValue;
- (double)_previousValueUpdateTime;
- (void)_setCloseToEdge:(bool)arg1;
- (void)_setCloseToEdgeUpdateTime:(double)arg1;
- (void)_setLastState:(long long)arg1;
- (void)_setLastValueUpdateTime:(double)arg1;
- (void)_setPlayingContinuousFeedback:(id)arg1;
- (void)_setPreviousValue:(double)arg1;
- (void)_setPreviousValueUpdateTime:(double)arg1;
- (void)_setState:(long long)arg1;
- (void)_setValue:(double)arg1;
- (void)_setVelocity:(double)arg1;
- (long long)_state;
- (id)_stats_key;
- (void)_stopAnimatingWithTimeout:(double)arg1;
- (void)_updateCloseToEdge;
- (double)_value;
- (bool)_valueIsOvershot:(double)arg1;
- (double)_velocity;
- (long long)axis;
- (double)distance;
- (double)extentBeyondDistance;
- (id)initWithConfiguration:(id)arg1 coordinateSpace:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (id)initWithStyle:(long long)arg1 coordinateSpace:(id)arg2;
- (void)positionUpdated:(double)arg1;
- (void)setAxis:(long long)arg1;
- (void)setDistance:(double)arg1;
- (void)setExtentBeyondDistance:(double)arg1;
- (void)userInteractionCancelled;
- (void)userInteractionEnded;
- (void)userInteractionStarted;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

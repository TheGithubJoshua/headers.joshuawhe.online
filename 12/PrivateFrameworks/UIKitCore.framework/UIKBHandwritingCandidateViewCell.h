<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIKBHandwritingCandidateViewCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIKBHandwritingCandidateViewCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIKBHandwritingCandidateViewCell : UICollectionViewCell {
    TIKeyboardCandidate * _candidate;
    UILabel * _label;
    long long  _leftBorderEdge;
    UIKeyboardCandidatePocketShadow * _leftHardBorder;
    long long  _rightBorderEdge;
    UIKeyboardCandidatePocketShadow * _rightHardBorder;
    UILabel * _secondaryLabel;
    UIKBThemedView * _themedView;
    struct { 
        unsigned int idiom : 6; 
        unsigned int landscape : 1; 
        unsigned int split : 1; 
        unsigned int appearance : 8; 
        unsigned int rendering : 8; 
        unsigned int padding : 8; 
    }  _visualStyling;
}

@property (nonatomic, copy) TIKeyboardCandidate *candidate;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } edgeInsets;
@property (nonatomic, retain) UILabel *label;
@property (nonatomic) long long leftBorderEdge;
@property (nonatomic, retain) UIKeyboardCandidatePocketShadow *leftHardBorder;
@property (nonatomic) long long rightBorderEdge;
@property (nonatomic, retain) UIKeyboardCandidatePocketShadow *rightHardBorder;
@property (nonatomic, retain) UILabel *secondaryLabel;
@property (nonatomic, retain) UIKBThemedView *themedView;
@property (nonatomic) struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 8; unsigned int x6 : 8; } visualStyling;

+ (id)labelFontForText:(id)arg1;
+ (bool)needsThemedView;
+ (id)secondaryLabelFont;
+ (double)systemFontSize;
+ (double)widthForCandidate:(id)arg1 visualStyling:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 8; unsigned int x6 : 8; })arg2;

- (void).cxx_destruct;
- (bool)_canDrawContent;
- (void)_setRenderConfig:(id)arg1;
- (void)_updateBorders;
- (id)candidate;
- (void)didMoveToWindow;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })edgeInsets;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)label;
- (long long)leftBorderEdge;
- (id)leftHardBorder;
- (void)reloadData;
- (long long)rightBorderEdge;
- (id)rightHardBorder;
- (id)secondaryLabel;
- (void)setCandidate:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setLeftBorderEdge:(long long)arg1;
- (void)setLeftHardBorder:(id)arg1;
- (void)setRightBorderEdge:(long long)arg1;
- (void)setRightHardBorder:(id)arg1;
- (void)setSecondaryLabel:(id)arg1;
- (void)setSelected:(bool)arg1;
- (void)setThemedView:(id)arg1;
- (void)setVisualStyling:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 8; unsigned int x6 : 8; })arg1;
- (id)textLabelColor;
- (id)themedView;
- (void)updateLabels;
- (void)updateThemedView;
- (struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 8; unsigned int x6 : 8; })visualStyling;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

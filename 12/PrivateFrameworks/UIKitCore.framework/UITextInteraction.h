<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UITextInteraction.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UITextInteraction.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UITextInteraction : NSObject <UIGestureRecognizerDelegate, UIInteraction> {
    <UITextInteraction_AssistantDelegate> * _assistantDelegate;
    NSMutableArray * _children;
    <UITextInteractionDelegate> * _delegate;
    NSMutableDictionary * _gestureMap;
    NSMutableArray * _gestures;
    bool  _inGesture;
    UITextInteractionInputDelegate * _interactionInputDelegate;
    UITextInteraction * _parent;
    UIResponder<UITextInput> * _textInput;
    long long  _textInteractionSet;
    UIView * _view;
}

@property (nonatomic) <UITextInteraction_AssistantDelegate> *assistantDelegate;
@property (nonatomic, readonly) NSArray *children;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UITextInteractionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSDictionary *gestureMap;
@property (nonatomic, readonly) NSArray *gestures;
@property (nonatomic, readonly) NSArray *gesturesForFailureRequirements;
@property (readonly) unsigned long long hash;
@property (setter=setInGesture:, nonatomic) bool inGesture;
@property (nonatomic, retain) UITextInteractionInputDelegate *interactionInputDelegate;
@property (readonly) UITextInteraction *parent;
@property (readonly) UITextInteraction *root;
@property (readonly) Class superclass;
@property (nonatomic) UIResponder<UITextInput> *textInput;
@property (nonatomic, readonly) long long textInteractionSet;
@property (nonatomic) UIView *view;

+ (id)textInteractionsForSet:(long long)arg1;

- (void).cxx_destruct;
- (void)_performPreemtiveLayoutToEnsureNoMoreLayoutWhileSelecting:(id)arg1;
- (void)_resetForLink;
- (bool)_shouldObscureTextInput;
- (id)_textInput;
- (void)addChild:(id)arg1;
- (void)addGestureRecognizer:(id)arg1 withName:(id)arg2;
- (id)assistantDelegate;
- (void)cancelInteractionWithLink;
- (id)children;
- (bool)containerChangesSelectionOnOneFingerTap;
- (id)defaultDoubleTapRecognizerWithAction:(SEL)arg1;
- (id)defaultTapRecognizerWithAction:(SEL)arg1;
- (id)delegate;
- (void)didMoveToView:(id)arg1;
- (void)disableClearsOnInsertion;
- (double)distanceBetweenPoint:(struct CGPoint { double x1; double x2; })arg1 andRects:(id)arg2;
- (bool)doesControlDelegate;
- (void)finishSetup;
- (id)gestureMap;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)gestures;
- (id)gesturesForFailureRequirements;
- (bool)inGesture;
- (id)init;
- (id)interactionInputDelegate;
- (id)interactionWithClass:(Class)arg1;
- (id)interactionWithGestureForName:(id)arg1;
- (bool)interaction_gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (bool)interaction_gestureRecognizerShouldBegin:(id)arg1;
- (bool)isInteractingWithLink;
- (id)linkInteractionView;
- (id)parent;
- (id)rangeWithTextAlternatives:(id*)arg1 atPosition:(id)arg2;
- (id)recognizerForName:(id)arg1;
- (void)removeChild:(id)arg1;
- (void)removeGestureRecognizerWithName:(id)arg1;
- (void)resetForLink;
- (id)root;
- (bool)selection:(id)arg1 containsPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setAssistantDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInGesture:(bool)arg1;
- (void)setInteractionInputDelegate:(id)arg1;
- (void)setTextInput:(id)arg1;
- (void)setView:(id)arg1;
- (bool)shouldAllowWithTouchTypes:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2 toBegin:(bool)arg3;
- (bool)shouldHandleFormGestureAtLocation:(struct CGPoint { double x1; double x2; })arg1;
- (bool)shouldIgnoreLinkGestures;
- (bool)tapOnLinkWithGesture:(id)arg1;
- (id)textInput;
- (long long)textInteractionSet;
- (void)turnOffDrawsAsAtomIfPlainStyleAtom;
- (id)view;
- (void)willMoveToView:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

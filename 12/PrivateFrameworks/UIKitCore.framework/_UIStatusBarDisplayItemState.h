<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIStatusBarDisplayItemState.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIStatusBarDisplayItemState.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIStatusBarDisplayItemState : NSObject <_UIStatusBarPrioritized> {
    _UIStatusBarAnimation * _addingAnimation;
    NSMutableSet * _animations;
    long long  _currentPlacementStateIndex;
    bool  _dataEnabled;
    long long  _dataUpdateStatus;
    long long  _enabilityStatus;
    bool  _floating;
    _UIStatusBarIdentifier * _identifier;
    _UIStatusBarStyleAttributes * _overriddenStyleAttributes;
    NSMutableArray * _placementStates;
    long long  _placementUpdateStatus;
    long long  _preferredPlacementStateIndex;
    long long  _previousPlacementStateIndex;
    _UIStatusBarAnimation * _removingAnimation;
    _UIStatusBar * _statusBar;
    long long  _visibilityStatus;
    bool  _wasEnabled;
    bool  _wasVisible;
}

@property (nonatomic, retain) _UIStatusBarAnimation *addingAnimation;
@property (getter=_animationType, nonatomic, readonly) long long animationType;
@property (nonatomic, readonly) NSMutableSet *animations;
@property (nonatomic, readonly) _UIStatusBarDisplayItemPlacementState *currentPlacementState;
@property (nonatomic) long long currentPlacementStateIndex;
@property (nonatomic) bool dataEnabled;
@property (nonatomic) long long dataUpdateStatus;
@property (nonatomic) long long enabilityStatus;
@property (getter=isEnabled, nonatomic, readonly) bool enabled;
@property (getter=isEnabledIgnoringAnimations, nonatomic, readonly) bool enabledIgnoringAnimations;
@property (nonatomic) bool floating;
@property (nonatomic, copy) _UIStatusBarIdentifier *identifier;
@property (nonatomic, retain) _UIStatusBarStyleAttributes *overriddenStyleAttributes;
@property (nonatomic, retain) NSMutableArray *placementStates;
@property (nonatomic) long long placementUpdateStatus;
@property (nonatomic, readonly, copy) NSSet *potentialPlacementRegionIdentifiers;
@property (nonatomic) long long preferredPlacementStateIndex;
@property (nonatomic) long long previousPlacementStateIndex;
@property (nonatomic, readonly) long long priority;
@property (nonatomic, retain) _UIStatusBarAnimation *removingAnimation;
@property (nonatomic) _UIStatusBar *statusBar;
@property (nonatomic) long long visibilityStatus;
@property (nonatomic) bool wasEnabled;
@property (nonatomic) bool wasVisible;

+ (void)setupRelationsBetweenDisplayItemStates:(id)arg1 visualProvider:(id)arg2;
+ (id)stateForDisplayItemWithIdentifier:(id)arg1 statusBar:(id)arg2;

- (void).cxx_destruct;
- (id)_animationForDisplayItem:(id)arg1 withUpdateAnimation:(id)arg2;
- (long long)_animationType;
- (void)_cancelObsoleteAnimations;
- (id)_effectiveStyleAttributesFromStyleAttributes:(id)arg1;
- (bool)_resolveDependentItemStatesWithBlock:(id /* block */)arg1;
- (id)_updateForItem:(id)arg1 data:(id)arg2 styleAttributes:(id)arg3;
- (id)_updateForUpdatedData:(id)arg1 updatedStyleAttributes:(id)arg2 updatedEnability:(id)arg3;
- (bool)_updatePlacementWithRecursionBlock:(id /* block */)arg1;
- (void)_updateStatuses;
- (bool)_updateToNextPlacementStateIfNeeded;
- (void)addPlacement:(id)arg1 inRegion:(id)arg2;
- (id)addingAnimation;
- (id)animations;
- (id)currentPlacementState;
- (long long)currentPlacementStateIndex;
- (bool)dataEnabled;
- (long long)dataUpdateStatus;
- (id)description;
- (long long)enabilityStatus;
- (bool)floating;
- (bool)hasRunningAnimations;
- (id)identifier;
- (bool)isCurrentPlacement:(id)arg1;
- (bool)isEnabled;
- (bool)isEnabledIgnoringAnimations;
- (id)overriddenStyleAttributes;
- (id)placementStateForPlacement:(id)arg1;
- (id)placementStates;
- (long long)placementUpdateStatus;
- (id)potentialPlacementRegionIdentifiers;
- (long long)preferredPlacementStateIndex;
- (bool)prepareAnimation:(id)arg1 withDisplayItem:(id)arg2;
- (void)prepareForDataUpdate;
- (long long)previousPlacementStateIndex;
- (long long)priority;
- (id)removingAnimation;
- (void)resetToPreferredPlacement;
- (void)setAddingAnimation:(id)arg1;
- (void)setCurrentPlacementStateIndex:(long long)arg1;
- (void)setDataEnabled:(bool)arg1;
- (void)setDataUpdateStatus:(long long)arg1;
- (void)setEnabilityStatus:(long long)arg1;
- (void)setFloating:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setOverriddenStyleAttributes:(id)arg1;
- (void)setPlacementStates:(id)arg1;
- (void)setPlacementUpdateStatus:(long long)arg1;
- (void)setPreferredPlacementStateIndex:(long long)arg1;
- (void)setPreviousPlacementStateIndex:(long long)arg1;
- (void)setRemovingAnimation:(id)arg1;
- (void)setStatusBar:(id)arg1;
- (void)setVisibilityStatus:(long long)arg1;
- (void)setWasEnabled:(bool)arg1;
- (void)setWasVisible:(bool)arg1;
- (id)statusBar;
- (bool)updatePlacement;
- (void)updateToNextEnabledPlacement;
- (id)updateWithData:(id)arg1 styleAttributes:(id)arg2;
- (long long)visibilityStatus;
- (bool)wasEnabled;
- (bool)wasVisible;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

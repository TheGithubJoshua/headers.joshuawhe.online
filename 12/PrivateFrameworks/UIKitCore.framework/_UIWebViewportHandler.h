<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIWebViewportHandler.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIWebViewportHandler.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIWebViewportHandler : NSObject {
    struct CGSize { 
        double width; 
        double height; 
    }  _availableViewSize;
    bool  _classicViewportMode;
    struct _UIWebViewportConfiguration { 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
        float initialScale; 
        float minimumScale; 
        float maximumScale; 
        bool allowsUserScaling; 
        bool allowsShrinkToFit; 
        bool avoidsUnsafeArea; 
    }  _configuration;
    struct _UIWebViewportConfiguration { 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
        float initialScale; 
        float minimumScale; 
        float maximumScale; 
        bool allowsUserScaling; 
        bool allowsShrinkToFit; 
        bool avoidsUnsafeArea; 
    }  _defaultConfiguration;
    <_UIWebViewportHandlerDelegate> * _delegate;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _documentBounds;
    bool  _heightIsDeviceHeight;
    bool  _initialConfigurationHasBeenSentToDelegate;
    struct CGSize { 
        double width; 
        double height; 
    }  _viewportArgumentsSize;
    unsigned int  _webkitDefinedConfigurationFlags;
    bool  _widthIsDeviceWidth;
}

@property (nonatomic, readonly) bool allowsUserScaling;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } availableViewSize;
@property (nonatomic, readonly) bool avoidsUnsafeArea;
@property (getter=isClassicViewportMode, nonatomic, readonly) bool classicViewportMode;
@property (nonatomic) <_UIWebViewportHandlerDelegate> *delegate;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } documentBounds;
@property (nonatomic, readonly) float initialScale;
@property (nonatomic, readonly) float maximumScale;
@property (nonatomic, readonly) float minimumScale;
@property (nonatomic, readonly) struct _UIWebViewportConfiguration { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; float x2; float x3; float x4; bool x5; bool x6; bool x7; } rawViewConfiguration;
@property (nonatomic, readonly) unsigned int webkitDefinedConfigurationFlags;

- (void)_resolveViewSizeRelativeLengths;
- (bool)allowsUserScaling;
- (void)applyWebKitViewportArgumentsSize:(struct CGSize { double x1; double x2; })arg1 initialScale:(float)arg2 minimumScale:(float)arg3 maximumScale:(float)arg4 allowsUserScaling:(float)arg5 allowsShrinkToFit:(float)arg6 viewportFit:(id)arg7;
- (struct CGSize { double x1; double x2; })availableViewSize;
- (bool)avoidsUnsafeArea;
- (void)clearWebKitViewportConfigurationFlags;
- (id)delegate;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })documentBounds;
- (float)initialScale;
- (double)integralInitialScale;
- (double)integralScaleForScale:(double)arg1 keepingPointFixed:(struct CGPoint { double x1; double x2; }*)arg2;
- (bool)isClassicViewportMode;
- (float)maximumScale;
- (float)minimumScale;
- (float)minimumScaleForViewSize:(struct CGSize { double x1; double x2; })arg1;
- (void)overrideViewportConfiguration:(const struct _UIWebViewportConfiguration { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; float x2; float x3; float x4; bool x5; bool x6; bool x7; }*)arg1;
- (struct _UIWebViewportConfiguration { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; float x2; float x3; float x4; bool x5; bool x6; bool x7; })rawViewConfiguration;
- (void)resetViewportConfiguration:(const struct _UIWebViewportConfiguration { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; float x2; float x3; float x4; bool x5; bool x6; bool x7; }*)arg1;
- (void)setAvailableViewSize:(struct CGSize { double x1; double x2; })arg1 updateConfigurationSize:(bool)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDocumentBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)shouldIgnoreHorizontalScalingConstraints;
- (bool)shouldIgnoreScalingConstraints;
- (bool)shouldIgnoreVerticalScalingConstraints;
- (void)update:(id /* block */)arg1;
- (float)viewportHeight;
- (float)viewportWidth;
- (unsigned int)webkitDefinedConfigurationFlags;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

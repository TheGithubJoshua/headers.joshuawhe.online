<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UICollectionLayoutGeometryGroupItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UICollectionLayoutGeometryGroupItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UICollectionLayoutGeometryGroupItem : NSObject <NSCopying> {
    NSArray * _attributes;
    UICollectionLayoutGeometryGroupItemConfiguration * _configuration;
    UICollectionLayoutGeometry * _geometry;
    double  _height;
    double  _heightComputedContainerHeightFactor;
    double  _heightComputedContainerWidthFactor;
    bool  _heightUseActualHeight;
    bool  _spacingBottomSpaceComputedIntrinsic;
    double  _spacingBottomSpaceFixedSpace;
    bool  _spacingLeadingSpaceComputedIntrinsic;
    double  _spacingLeadingSpaceFixedSpace;
    bool  _spacingTopSpaceComputedIntrinsic;
    double  _spacingTopSpaceFixedSpace;
    bool  _spacingTrailingSpaceComputedIntrinsic;
    double  _spacingTrailingSpaceFixedSpace;
    double  _width;
    double  _widthComputedContainerHeightFactor;
    double  _widthComputedContainerWidthFactor;
    bool  _widthUseActualWidth;
}

@property (nonatomic, retain) NSArray *attributes;
@property (nonatomic, retain) UICollectionLayoutGeometryGroupItemConfiguration *configuration;
@property (nonatomic, retain) UICollectionLayoutGeometry *geometry;
@property (nonatomic) double height;
@property (nonatomic) double heightComputedContainerHeightFactor;
@property (nonatomic) double heightComputedContainerWidthFactor;
@property (nonatomic) bool heightUseActualHeight;
@property (nonatomic) bool spacingBottomSpaceComputedIntrinsic;
@property (nonatomic) double spacingBottomSpaceFixedSpace;
@property (nonatomic) bool spacingLeadingSpaceComputedIntrinsic;
@property (nonatomic) double spacingLeadingSpaceFixedSpace;
@property (nonatomic) bool spacingTopSpaceComputedIntrinsic;
@property (nonatomic) double spacingTopSpaceFixedSpace;
@property (nonatomic) bool spacingTrailingSpaceComputedIntrinsic;
@property (nonatomic) double spacingTrailingSpaceFixedSpace;
@property (nonatomic) double width;
@property (nonatomic) double widthComputedContainerHeightFactor;
@property (nonatomic) double widthComputedContainerWidthFactor;
@property (nonatomic) bool widthUseActualWidth;

+ (id)itemWithAttributes:(id)arg1;
+ (id)itemWithConfiguration:(id)arg1;

- (void).cxx_destruct;
- (void)_parseAttributes:(id)arg1;
- (void)addAttribute:(id)arg1;
- (id)attributes;
- (id)configuration;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentEdgeInsets;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })effectiveEdgeInsets;
- (id)geometry;
- (bool)hasHorizontalIntrinsicSpacing;
- (bool)hasVerticalIntrinsicSpacing;
- (double)height;
- (double)heightComputedContainerHeightFactor;
- (double)heightComputedContainerWidthFactor;
- (bool)heightUseActualHeight;
- (id)initWithAttributes:(id)arg1;
- (id)initWithConfiguration:(id)arg1;
- (void)setAttributes:(id)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)setHeight:(double)arg1;
- (void)setHeightComputedContainerHeightFactor:(double)arg1;
- (void)setHeightComputedContainerWidthFactor:(double)arg1;
- (void)setHeightUseActualHeight:(bool)arg1;
- (void)setSpacingBottomSpaceComputedIntrinsic:(bool)arg1;
- (void)setSpacingBottomSpaceFixedSpace:(double)arg1;
- (void)setSpacingLeadingSpaceComputedIntrinsic:(bool)arg1;
- (void)setSpacingLeadingSpaceFixedSpace:(double)arg1;
- (void)setSpacingTopSpaceComputedIntrinsic:(bool)arg1;
- (void)setSpacingTopSpaceFixedSpace:(double)arg1;
- (void)setSpacingTrailingSpaceComputedIntrinsic:(bool)arg1;
- (void)setSpacingTrailingSpaceFixedSpace:(double)arg1;
- (void)setWidth:(double)arg1;
- (void)setWidthComputedContainerHeightFactor:(double)arg1;
- (void)setWidthComputedContainerWidthFactor:(double)arg1;
- (void)setWidthUseActualWidth:(bool)arg1;
- (struct CGSize { double x1; double x2; })sizeForActualSize:(struct CGSize { double x1; double x2; })arg1 containerDimensions:(struct CGSize { double x1; double x2; })arg2;
- (bool)spacingBottomSpaceComputedIntrinsic;
- (double)spacingBottomSpaceFixedSpace;
- (bool)spacingLeadingSpaceComputedIntrinsic;
- (double)spacingLeadingSpaceFixedSpace;
- (double)spacingSizeRequiredForSize:(struct CGSize { double x1; double x2; })arg1 layoutAxis:(int)arg2;
- (bool)spacingTopSpaceComputedIntrinsic;
- (double)spacingTopSpaceFixedSpace;
- (bool)spacingTrailingSpaceComputedIntrinsic;
- (double)spacingTrailingSpaceFixedSpace;
- (double)width;
- (double)widthComputedContainerHeightFactor;
- (double)widthComputedContainerWidthFactor;
- (bool)widthUseActualWidth;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

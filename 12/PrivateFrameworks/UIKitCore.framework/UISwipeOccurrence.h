<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UISwipeOccurrence.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UISwipeOccurrence.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UISwipeOccurrence : NSObject <UISwipeActionPullViewDelegate> {
    bool  _active;
    UISwipeActionController * _controller;
    UIContextualAction * _currentAction;
    unsigned long long  _currentDirection;
    struct { 
        unsigned long long direction; 
        unsigned long long targetSwipeState; 
        bool animated; 
        double xOffset; 
        double initialSpringVelocity; 
        double springStiffness; 
    }  _currentSwipeInfo;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _extraInsets;
    NSIndexPath * _indexPath;
    UISwipeActionPullView * _leadingPullView;
    bool  _shouldReenableUserInteraction;
    NSDictionary * _swipeDirectionToPullView;
    UIView * _swipedView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _swipedViewInitialPosition;
    UISwipeActionPullView * _trailingPullView;
}

@property (nonatomic) bool active;
@property (nonatomic) UISwipeActionController *controller;
@property (nonatomic, retain) UIContextualAction *currentAction;
@property (nonatomic) unsigned long long currentDirection;
@property (nonatomic) struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; } currentSwipeInfo;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } extraInsets;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSIndexPath *indexPath;
@property (nonatomic, retain) UISwipeActionPullView *leadingPullView;
@property (nonatomic) bool shouldReenableUserInteraction;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSDictionary *swipeDirectionToPullView;
@property (nonatomic, retain) UIView *swipedView;
@property (nonatomic) struct CGPoint { double x1; double x2; } swipedViewInitialPosition;
@property (nonatomic, retain) UISwipeActionPullView *trailingPullView;

- (void).cxx_destruct;
- (void)_createPullViewsIfNeeded;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForPullView:(id)arg1 inSwipedItem:(id)arg2 withContainer:(id)arg3;
- (void)_performSwipeAction:(id)arg1 inPullview:(id)arg2 swipeInfo:(struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; })arg3;
- (id)_pullViewForSwipeDirection:(unsigned long long)arg1;
- (void)_resetItemWithSwipeInfo:(struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; })arg1 animated:(bool)arg2 deletion:(bool)arg3 completion:(id /* block */)arg4;
- (void)_resetPullViewsImmediately;
- (unsigned long long)_swipeDirectionForPullView:(id)arg1;
- (void)_updateLayoutUsingCurrentSwipeInfo:(bool)arg1;
- (void)_updatePullView:(id)arg1;
- (bool)active;
- (void)beginSwipe;
- (double)confirmationDistanceForPrimaryActionInSwipeActionPullView:(id)arg1;
- (id)controller;
- (id)currentAction;
- (unsigned long long)currentDirection;
- (struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; })currentSwipeInfo;
- (void)endSwipe;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })extraInsets;
- (id)indexPath;
- (id)initWithController:(id)arg1 indexPath:(id)arg2;
- (id)leadingPullView;
- (void)moveItemWithSwipeInfo:(struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; })arg1 completion:(id /* block */)arg2;
- (void)performPrimaryActionWithSwipeInfo:(struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; })arg1;
- (struct { unsigned long long x1; bool x2; bool x3; double x4; double x5; })prepareWithSwipeDirection:(unsigned long long)arg1 configuration:(id)arg2;
- (void)resetItemWithSwipeInfo:(struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; })arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)setActive:(bool)arg1;
- (void)setController:(id)arg1;
- (void)setCurrentAction:(id)arg1;
- (void)setCurrentDirection:(unsigned long long)arg1;
- (void)setCurrentSwipeInfo:(struct { unsigned long long x1; unsigned long long x2; bool x3; double x4; double x5; double x6; })arg1;
- (void)setExtraInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setIndexPath:(id)arg1;
- (void)setLeadingPullView:(id)arg1;
- (void)setShouldReenableUserInteraction:(bool)arg1;
- (void)setSwipeDirectionToPullView:(id)arg1;
- (void)setSwipedView:(id)arg1;
- (void)setSwipedViewInitialPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setTrailingPullView:(id)arg1;
- (bool)shouldDismissWithTouchLocation:(struct CGPoint { double x1; double x2; })arg1;
- (bool)shouldReenableUserInteraction;
- (void)swipeActionPullView:(id)arg1 tappedAction:(id)arg2;
- (id)swipeDirectionToPullView;
- (id)swipedView;
- (struct CGPoint { double x1; double x2; })swipedViewInitialPosition;
- (id)trailingPullView;
- (void)updateLayout;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

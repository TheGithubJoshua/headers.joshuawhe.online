<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIDragSessionImpl.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIDragSessionImpl.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIDragSessionImpl : NSObject <UIDragSession, _UIDragDropSessionInternal, _UIDraggingItemVisualTarget, _UIDraggingSessionDelegate> {
    NSMutableSet * _addedDragItemsPendingUpdate;
    NSMutableSet * _addedDraggingItemsWaitingForHandOffOfDragImage;
    NSHashTable * _allInteractions;
    NSMutableArray * _allItems;
    bool  _didHandOffDragImage;
    NSMapTable * _dragSourceInteractionByItem;
    _UIInternalDraggingSessionSource * _internalSessionSource;
    NSMapTable * _itemByDraggingItem;
    id  _localContext;
    UIDragInteraction * _primaryInteraction;
    _UIDraggingSession * _session;
}

@property (getter=_allowsItemsToUpdate, nonatomic, readonly) bool _allowsItemsToUpdate;
@property (nonatomic, readonly) long long _dataOwner;
@property (nonatomic, readonly) bool allowsMoveOperation;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSArray *items;
@property (nonatomic, retain) id localContext;
@property (nonatomic, readonly) UIDragInteraction *primaryInteraction;
@property (getter=isRestrictedToDraggingApplication, nonatomic, readonly) bool restrictedToDraggingApplication;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSSet *trackedInteractions;

+ (id)_localDragSessionForSessionDestination:(id)arg1;
+ (id)activeSessions;

- (void).cxx_destruct;
- (bool)_allowsItemsToUpdate;
- (bool)_canAddItems;
- (void)_cancelDrag;
- (long long)_dataOwner;
- (bool)_draggingItem:(id)arg1 shouldDelaySetDownAnimationWithCompletion:(id /* block */)arg2;
- (void)_draggingItem:(id)arg1 willAnimateSetDownWithAnimator:(id)arg2;
- (id)_draggingSession;
- (void)_draggingSession:(id)arg1 handedOffDragImageForItem:(id)arg2;
- (bool)_draggingSession:(id)arg1 shouldCancelOnAppDeactivationWithDefault:(bool)arg2;
- (void)_draggingSessionHandedOffDragImage:(id)arg1;
- (bool)_isActive;
- (void)_itemsNeedUpdate:(id)arg1;
- (void)_prepareForSetDownAnimationInWindow:(id)arg1 withDraggingItem:(id)arg2 visibleDroppedItem:(id)arg3;
- (void)_setDraggingSession:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_targetFrameOfDraggingItem:(id)arg1 inCoordinateSpace:(id)arg2;
- (void)addItems:(id)arg1 forDragSourceInteraction:(id)arg2;
- (bool)allowsMoveOperation;
- (void)associateItem:(id)arg1 withDraggingItem:(id)arg2;
- (bool)canLoadObjectsOfClass:(Class)arg1;
- (id)dragSourceInteractionForDragItem:(id)arg1;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)draggingSession:(id)arg1 willAddItems:(id)arg2;
- (void)draggingSessionDidEnd:(id)arg1 withOperation:(unsigned long long)arg2;
- (void)draggingSessionDidMove:(id)arg1;
- (void)draggingSessionDidTransferItems:(id)arg1;
- (bool)draggingSessionDynamicallyUpdatesPrefersFullSizePreviews:(id)arg1;
- (bool)draggingSessionPrefersFullSizePreviews:(id)arg1;
- (void)draggingSessionWillBegin:(id)arg1;
- (void)draggingSessionWillEnd:(id)arg1 withOperation:(unsigned long long)arg2;
- (bool)hasItemsConformingToTypeIdentifiers:(id)arg1;
- (id)initWithInteraction:(id)arg1;
- (bool)isRestrictedToDraggingApplication;
- (id)itemForDraggingItem:(id)arg1;
- (id)items;
- (id)localContext;
- (struct CGPoint { double x1; double x2; })locationInView:(id)arg1;
- (id)primaryInteraction;
- (void)setLocalContext:(id)arg1;
- (id)trackedInteractions;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

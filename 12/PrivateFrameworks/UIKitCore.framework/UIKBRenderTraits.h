<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIKBRenderTraits.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIKBRenderTraits.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIKBRenderTraits : NSObject <NSCopying> {
    UIKBGradient * _backgroundGradient;
    long long  _blendForm;
    bool  _blurBlending;
    bool  _controlOpacities;
    UIKBTextStyle * _fallbackSymbolStyle;
    NSMutableArray * _foregroundRenderEffects;
    UIKBRenderGeometry * _geometry;
    NSString * _hashString;
    UIKBRenderTraits * _highlightedVariantTraits;
    bool  _honorControlOpacity;
    UIKBGradient * _layeredBackgroundGradient;
    UIKBGradient * _layeredForegroundGradient;
    NSMutableArray * _renderEffects;
    NSArray * _renderFlags;
    long long  _renderFlagsForAboveEffects;
    bool  _renderSecondarySymbolsSeparately;
    NSArray * _secondarySymbolStyles;
    UIKBTextStyle * _symbolStyle;
    NSArray * _variantGeometries;
    UIKBRenderTraits * _variantTraits;
}

@property (nonatomic, retain) UIKBGradient *backgroundGradient;
@property (nonatomic) long long blendForm;
@property (nonatomic) bool blurBlending;
@property (nonatomic) bool controlOpacities;
@property (nonatomic, retain) UIKBTextStyle *fallbackSymbolStyle;
@property (nonatomic, readonly) NSArray *foregroundRenderEffects;
@property (nonatomic, retain) UIKBRenderGeometry *geometry;
@property (nonatomic, retain) NSString *hashString;
@property (nonatomic, retain) UIKBRenderTraits *highlightedVariantTraits;
@property (nonatomic, retain) UIKBGradient *layeredBackgroundGradient;
@property (nonatomic, retain) UIKBGradient *layeredForegroundGradient;
@property (nonatomic, readonly) NSArray *renderEffects;
@property (nonatomic, retain) NSArray *renderFlags;
@property (nonatomic) long long renderFlagsForAboveEffects;
@property (nonatomic) bool renderSecondarySymbolsSeparately;
@property (nonatomic, retain) NSArray *secondarySymbolStyles;
@property (nonatomic, retain) UIKBTextStyle *symbolStyle;
@property (nonatomic, retain) NSArray *variantGeometries;
@property (nonatomic, retain) UIKBRenderTraits *variantTraits;

+ (id)emptyTraits;
+ (id)traitsWithGeometry:(id)arg1;
+ (id)traitsWithSymbolStyle:(id)arg1;

- (void)addForegroundRenderEffect:(id)arg1;
- (void)addRenderEffect:(id)arg1;
- (id)backgroundGradient;
- (long long)blendForm;
- (bool)blurBlending;
- (bool)controlOpacities;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)fallbackSymbolStyle;
- (id)foregroundRenderEffects;
- (id)geometry;
- (id)hashString;
- (id)highlightedVariantTraits;
- (bool)isEqual:(id)arg1;
- (id)layeredBackgroundGradient;
- (id)layeredForegroundGradient;
- (void)modifyForMasking;
- (void)overlayWithTraits:(id)arg1;
- (void)removeAllRenderEffects;
- (id)renderEffects;
- (id)renderFlags;
- (long long)renderFlagsForAboveEffects;
- (bool)renderSecondarySymbolsSeparately;
- (id)secondarySymbolStyles;
- (void)setBackgroundGradient:(id)arg1;
- (void)setBlendForm:(long long)arg1;
- (void)setBlurBlending:(bool)arg1;
- (void)setControlOpacities:(bool)arg1;
- (void)setFallbackSymbolStyle:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)setHashString:(id)arg1;
- (void)setHighlightedVariantTraits:(id)arg1;
- (void)setLayeredBackgroundGradient:(id)arg1;
- (void)setLayeredForegroundGradient:(id)arg1;
- (void)setRenderFlags:(id)arg1;
- (void)setRenderFlagsForAboveEffects:(long long)arg1;
- (void)setRenderSecondarySymbolsSeparately:(bool)arg1;
- (void)setSecondarySymbolStyles:(id)arg1;
- (void)setSymbolStyle:(id)arg1;
- (void)setVariantGeometries:(id)arg1;
- (void)setVariantTraits:(id)arg1;
- (id)symbolStyle;
- (id)variantGeometries;
- (id)variantTraits;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

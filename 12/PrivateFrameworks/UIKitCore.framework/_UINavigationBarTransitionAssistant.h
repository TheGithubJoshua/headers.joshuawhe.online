<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UINavigationBarTransitionAssistant.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UINavigationBarTransitionAssistant.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UINavigationBarTransitionAssistant : NSObject {
    long long  _animationCount;
    NSMutableArray * _animationIDs;
    bool  _cancelledCleanUp;
    bool  _cancelledTransition;
    <_UINavigationBarDelegatePrivate> * _delegate;
    double  _duration;
    bool  _interactive;
    bool  _interruptable;
    UINavigationBar * _navigationBar;
    bool  _shouldHideBackButtonDuringTransition;
    bool  _shouldUpdatePromptAfterTransition;
    int  _transition;
    <UIViewControllerTransitionCoordinator> * _transitionCoordinator;
}

@property (nonatomic, readonly) NSArray *animationIDs;
@property (nonatomic, readonly) bool cancelledCleanUp;
@property (nonatomic, readonly) bool cancelledTransition;
@property (nonatomic, readonly) <_UINavigationBarDelegatePrivate> *delegate;
@property (nonatomic, readonly) double duration;
@property (nonatomic, readonly) bool interactive;
@property (nonatomic, readonly) bool interruptable;
@property (nonatomic, readonly) UINavigationBar *navigationBar;
@property (nonatomic, readonly) bool shouldAnimateAlongside;
@property (nonatomic, readonly) bool shouldCrossfade;
@property (nonatomic) bool shouldHideBackButtonDuringTransition;
@property (nonatomic) bool shouldUpdatePromptAfterTransition;
@property (nonatomic, readonly) int transition;
@property (nonatomic, readonly) <UIViewControllerTransitionCoordinator> *transitionCoordinator;

+ (id)popTransitionAssistantForNavigationBar:(id)arg1 delegate:(id)arg2 crossfade:(bool)arg3;
+ (id)pushTransitionAssistantForNavigationBar:(id)arg1 delegate:(id)arg2 crossfade:(bool)arg3;

- (void).cxx_destruct;
- (void)_clearAnimationsWithDuration:(double)arg1 curve:(long long)arg2 reverse:(bool)arg3;
- (void)_finishTrackingAnimations;
- (void)_getInteractive;
- (void)_getPopDurationAndTransitionAlwaysCrossfade:(bool)arg1;
- (void)_getPushDurationAndTransitionAlwaysCrossfade:(bool)arg1;
- (void)_getTransitionCoordinator;
- (void)_startTrackingAnimations;
- (id)animationIDs;
- (void)cancelCleanUp;
- (void)cancelInteractiveTransitionPercent:(double)arg1 completionSpeed:(double)arg2 completionCurve:(long long)arg3;
- (bool)cancelledCleanUp;
- (bool)cancelledTransition;
- (void)decrementAnimationCount;
- (id)delegate;
- (double)duration;
- (void)finishInteractiveTransitionPercent:(double)arg1 completionSpeed:(double)arg2 completionCurve:(long long)arg3;
- (void)finishTrackingInteractiveTransition;
- (void)incrementAnimationCount;
- (id)initWithNavigationBar:(id)arg1 delegate:(id)arg2;
- (bool)interactive;
- (bool)interruptable;
- (id)navigationBar;
- (void)setShouldHideBackButtonDuringTransition:(bool)arg1;
- (void)setShouldUpdatePromptAfterTransition:(bool)arg1;
- (bool)shouldAnimateAlongside;
- (bool)shouldCrossfade;
- (bool)shouldHideBackButtonDuringTransition;
- (bool)shouldUpdatePromptAfterTransition;
- (void)startInteractiveTransition;
- (int)transition;
- (id)transitionCoordinator;
- (void)updateInteractiveTransitionPercent:(double)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIDateLabel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIDateLabel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIDateLabel : UILabel {
    bool  _boldForAllLocales;
    NSCalendar * _calendar;
    NSDate * _date;
    bool  _forceTimeOnly;
    NSDate * _noon;
    double  _paddingFromTimeToDesignator;
    NSDate * _previousWeek;
    bool  _shouldRecomputeText;
    UIFont * _timeDesignatorFont;
    NSDate * _today;
    NSDate * _tomorrow;
    NSDate * _yesterday;
}

@property (nonatomic) bool boldForAllLocales;
@property (nonatomic, retain) NSDate *date;
@property (getter=_dateString, nonatomic, readonly) NSString *dateString;
@property (nonatomic) bool forceTimeOnly;
@property (nonatomic) double paddingFromTimeToDesignator;
@property (nonatomic) bool shouldRecomputeText;
@property (nonatomic, readonly) NSString *timeDesignator;
@property (nonatomic, readonly) bool timeDesignatorAppearsBeforeTime;
@property (nonatomic, readonly) UIFont *timeDesignatorFont;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } timeDesignatorSize;
@property (nonatomic) double timeInterval;
@property (nonatomic, readonly) bool use24HourTime;

+ (id)_dateFormatter;
+ (id)_relativeDateFormatter;
+ (id)_timeOnlyDateFormatter;
+ (id)_weekdayDateFormatter;
+ (id)amString;
+ (id)defaultFont;
+ (id)pmString;

- (void).cxx_destruct;
- (id)_calendar;
- (id)_dateString;
- (id)_dateWithDayDiffFromToday:(long long)arg1;
- (void)_didUpdateDate;
- (struct CGSize { double x1; double x2; })_intrinsicSizeWithinSize:(struct CGSize { double x1; double x2; })arg1;
- (double)_lastWeek;
- (double)_noon;
- (void)_recomputeTextIfNecessary;
- (id)_stringDrawingContext;
- (double)_today;
- (id)_todayDate;
- (double)_tomorrow;
- (double)_yesterday;
- (bool)boldForAllLocales;
- (id)date;
- (void)dealloc;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)drawTextInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)font;
- (bool)forceTimeOnly;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)invalidate;
- (double)paddingFromTimeToDesignator;
- (void)setBoldForAllLocales:(bool)arg1;
- (void)setDate:(id)arg1;
- (void)setForceTimeOnly:(bool)arg1;
- (void)setPaddingFromTimeToDesignator:(double)arg1;
- (void)setShouldRecomputeText:(bool)arg1;
- (void)setTimeInterval:(double)arg1;
- (bool)shouldRecomputeText;
- (id)text;
- (id)timeDesignator;
- (bool)timeDesignatorAppearsBeforeTime;
- (id)timeDesignatorFont;
- (struct CGSize { double x1; double x2; })timeDesignatorSize;
- (double)timeInterval;
- (bool)use24HourTime;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

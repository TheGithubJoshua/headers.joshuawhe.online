<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIViewServiceTextEffectsOperator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIViewServiceTextEffectsOperator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIViewServiceTextEffectsOperator : NSObject <_UIHostedWindowDelegate, _UIViewServiceDeputy, _UIViewServiceDeputyRotationDelegate, _UIViewServiceTextEffectsOperator_RemoteViewControllerInterface> {
    bool  __automatic_invalidation_invalidated;
    int  __automatic_invalidation_retainCount;
    NSArray * _allowedNotifications;
    bool  _canRestoreInputViews;
    bool  _didResignForDisappear;
    _UIHostedWindow * _hostedWindow;
    _UIAsyncInvocation * _invalidationInvocation;
    bool  _isRestoringInputViews;
    bool  _localVCDisablesAutomaticBehaviors;
    _UIAsyncInvocation * _prepareForDisconnectionInvocation;
    id  _remoteViewControllerProxy;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _safeAreaInsets;
    struct CGSize { 
        double width; 
        double height; 
    }  _sceneSize;
    struct CGPoint { 
        double x; 
        double y; 
    }  _windowOffset;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)XPCInterface;
+ (bool)_shouldAddServiceOperator;
+ (id)operatorWithRemoteViewControllerProxy:(id)arg1 hostPID:(int)arg2;

- (void).cxx_destruct;
- (int)__automatic_invalidation_logic;
- (void)__createHostedTextEffectsWithReplyHandler:(id /* block */)arg1;
- (void)__hostDidEnterBackground;
- (void)__hostViewWillAppear:(bool)arg1;
- (void)__hostViewWillDisappear:(bool)arg1;
- (void)__hostWillEnterForeground;
- (void)__prepareForDisconnectionWithCompletionHandler:(id /* block */)arg1;
- (void)__setHostAllowedNotifications:(id)arg1;
- (void)__setNextAutomaticOrderOutDirection:(int)arg1 duration:(double)arg2;
- (void)__setSafeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)__setSceneSize:(struct CGSize { double x1; double x2; })arg1;
- (void)__setWindowOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)_invalidateUnconditionallyThen:(id /* block */)arg1;
- (bool)_isDeallocating;
- (void)_prepareForDisconnectionUnconditionallyThen:(id /* block */)arg1;
- (id)_queue;
- (void)_reloadSafeInsets;
- (void)_resetSceneSize;
- (void)_restoreInputViews;
- (bool)_tryRetain;
- (void)_viewServiceHostWillEnterForeground:(id)arg1;
- (id)autorelease;
- (void)dealloc;
- (void)finishRotationFromInterfaceOrientation:(long long)arg1;
- (void)forceSyncToStatusBarOrientation;
- (void)hostedWindow:(id)arg1 didSetFirstResponder:(id)arg2;
- (void)hostedWindow:(id)arg1 didSetResponderTargetForCalloutBar:(id)arg2;
- (id)invalidate;
- (void)makeHostWindowKey;
- (void)performOnRelevantWindows:(id /* block */)arg1;
- (oneway void)release;
- (id)retain;
- (unsigned long long)retainCount;
- (void)rotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)setHostedWindow:(id)arg1 disableAutomaticBehaviors:(bool)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIFeedbackGenerator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIFeedbackGenerator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIFeedbackGenerator : NSObject {
    bool  _activated;
    long long  _activationCount;
    NSObject<OS_dispatch_source> * _autoDeactivateTimer;
    long long  _autoDeactivationCount;
    _UIFeedbackGeneratorConfiguration * _configuration;
    <UICoordinateSpace> * _coordinateSpace;
    double  _currentDelay;
    NSSet * _engines;
    long long  _externalActivationCount;
    id /* block */  _feedbackWarmingBlock;
    NSMutableDictionary * _preparationTimers;
    long long  _styleActivationCount;
    NSSet * _usedFeedbacks;
    bool  _usesCustomActivation;
}

@property (nonatomic, readonly) NSString *_stats_key;
@property (nonatomic) long long activationCount;
@property (getter=_isAutoDeactivated, nonatomic, readonly) bool autoDeactivated;
@property (getter=_autoDeactivationTimeout, nonatomic, readonly) double autoDeactivationTimeout;
@property (getter=_configuration, setter=_setConfiguration:, nonatomic, retain) _UIFeedbackGeneratorConfiguration *configuration;
@property (nonatomic) <UICoordinateSpace> *coordinateSpace;
@property (getter=_effectiveCoordinateSpace, nonatomic, readonly) <UICoordinateSpace> *effectiveCoordinateSpace;
@property (getter=_isEnabled, nonatomic, readonly) bool enabled;
@property (nonatomic, readonly) NSSet *engines;
@property (nonatomic) long long externalActivationCount;
@property (getter=_isMuted, setter=_setMuted:, nonatomic) bool muted;
@property (nonatomic) bool usesCustomActivation;

+ (Class)_configurationClass;
+ (id)_defaultCoordinateSpace;
+ (void)_resetAutoDeactivateTimeout;
+ (void)_resetPreparationTimeouts;
+ (void)_setAutoDeactivateTimeout:(double)arg1;
+ (void)_setPreparationTimeout:(double)arg1 forStyle:(long long)arg2;
+ (void)_setRunningTests:(bool)arg1;
+ (id)behaviorWithConfiguration:(id)arg1 coordinateSpace:(id)arg2;
+ (id)behaviorWithCoordinateSpace:(id)arg1;

- (void).cxx_destruct;
- (void)__activateWithStyle:(long long)arg1 forFeedback:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)__deactivateWithStyle:(long long)arg1;
- (void)_activateWithStyle:(long long)arg1 completionBlock:(id /* block */)arg2;
- (void)_activated;
- (id)_activationCountStatistics;
- (id)_activationDurationStatistics;
- (id)_activationTimeOutCountStatistics;
- (void)_autoDeactivate;
- (double)_autoDeactivationTimeout;
- (void)_clientDidUpdateGeneratorWithSelector:(SEL)arg1;
- (id)_configuration;
- (void)_deactivateWithStyle:(long long)arg1;
- (void)_deactivated;
- (id)_effectiveCoordinateSpace;
- (void)_forceDeactivationForStyle:(long long)arg1;
- (bool)_isAutoDeactivated;
- (bool)_isEnabled;
- (bool)_isMuted;
- (long long)_outputMode;
- (id)_playCountStatistics;
- (void)_playFeedback:(id)arg1;
- (void)_playFeedback:(id)arg1 withMinimumIntervalPassed:(double)arg2 since:(double*)arg3 prefersRegularPace:(bool)arg4;
- (id)_preparationCountStatistics;
- (double)_preparationTimeoutForStyle:(long long)arg1;
- (id)_preparationTimerForStyle:(long long)arg1;
- (void)_prepareWithStyle:(long long)arg1;
- (void)_resetAutoDeactivationTimeout;
- (void)_scheduleFeedbackWarming;
- (void)_setConfiguration:(id)arg1;
- (void)_setMuted:(bool)arg1;
- (void)_setOutputMode:(long long)arg1;
- (void)_setPreparationTimer:(id)arg1 forStyle:(long long)arg2;
- (void)_setupAutoDeactivateTimer;
- (void)_setupEnginesIfNeededForFeedback:(id)arg1;
- (void)_setupForFeedback:(id)arg1;
- (void)_startFeedbackWarming;
- (id)_statsSuffix;
- (void)_stats_activationDidChangeTo:(bool)arg1;
- (void)_stats_activationTimedOut;
- (id)_stats_key;
- (void)_stats_playedFeedback;
- (void)_stats_prepared;
- (void)_stopAutoDeactivateTimer;
- (void)_stopFeedback:(id)arg1;
- (void)_stopFeedbackWarming;
- (void)_stopPreparationForAllStyles;
- (void)_stopPreparationForStyle:(long long)arg1;
- (void)_updatePreparationTimer:(id)arg1 withTimeout:(double)arg2;
- (void)activateWithCompletionBlock:(id /* block */)arg1;
- (long long)activationCount;
- (id)coordinateSpace;
- (void)deactivate;
- (void)dealloc;
- (id)description;
- (id)engines;
- (long long)externalActivationCount;
- (id)init;
- (id)initWithConfiguration:(id)arg1;
- (id)initWithConfiguration:(id)arg1 coordinateSpace:(id)arg2;
- (id)initWithCoordinateSpace:(id)arg1;
- (bool)isActive;
- (void)performFeedbackWithDelay:(double)arg1 insideBlock:(id /* block */)arg2;
- (void)prepare;
- (void)setActivationCount:(long long)arg1;
- (void)setCoordinateSpace:(id)arg1;
- (void)setExternalActivationCount:(long long)arg1;
- (void)setUsesCustomActivation:(bool)arg1;
- (bool)usesCustomActivation;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIAlertControllerPresentationController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIAlertControllerPresentationController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIAlertControllerPresentationController : UIPresentationController <UIAdaptivePresentationControllerDelegate, UIForcePresentationController> {
    bool  __isCurrentContext;
    bool  __shouldRespectNearestCurrentContextPresenter;
    NSLayoutConstraint * _bottomAvailableSpaceConstraint;
    bool  _chromeHidden;
    UIView * _dimmingView;
    _UIStatesFeedbackGenerator * _feedbackGenerator;
    <_UIForcePresentationControllerDelegate> * _forcePresentationControllerDelegate;
    UIGestureRecognizer * _panningGestureRecognizer;
    id /* block */  _presentationPhaseCompletionBlock;
    UIView * _revealContainerView;
    bool  _sourceViewSnapshotAndScaleTransformSuppressed;
    NSLayoutConstraint * _topAvailableSpaceConstraint;
    UIAlertVisualStyleUpdatableConstraints * _visualStyleUpdatableConstraints;
    bool  constraintsPrepared;
    UIView * keyboardLayoutAlignmentAvailableSpaceView;
    _UIKeyboardLayoutAlignmentView * keyboardLayoutAlignmentView;
}

@property (getter=_isChromeHidden, setter=_setChromeHidden:, nonatomic) bool _chromeHidden;
@property (readonly) UIView *_dimmingView;
@property (setter=_setIsCurrentContext:) bool _isCurrentContext;
@property (nonatomic, readonly) UIView *_revealContainerView;
@property (setter=_setShouldRespectNearestCurrentContextPresenter:) bool _shouldRespectNearestCurrentContextPresenter;
@property (nonatomic) bool _sourceViewSnapshotAndScaleTransformSuppressed;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) _UIStatesFeedbackGenerator *feedbackGenerator;
@property (nonatomic) <_UIForcePresentationControllerDelegate> *forcePresentationControllerDelegate;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIGestureRecognizer *panningGestureRecognizer;
@property (nonatomic, copy) id /* block */ presentationPhaseCompletionBlock;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_canCommitPresentation;
- (bool)_canDismissPresentation;
- (id)_dimmingView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForTransitionViewInPresentationSuperview:(id)arg1;
- (bool)_isChromeHidden;
- (bool)_isCurrentContext;
- (bool)_keyboardShouldAnimateAlongsideForInteractiveTransitions;
- (void)_prepareConstraintsIfNecessary;
- (void)_prepareDimmingViewIfNecessary;
- (id)_presentedAlertController;
- (void)_presentedAlertControllerDidAdapt;
- (bool)_preserveResponderAcrossWindows;
- (id)_revealContainerView;
- (void)_setChromeHidden:(bool)arg1;
- (void)_setIsCurrentContext:(bool)arg1;
- (void)_setShouldRespectNearestCurrentContextPresenter:(bool)arg1;
- (bool)_shouldOccludeDuringPresentation;
- (bool)_shouldRespectDefinesPresentationContext;
- (bool)_shouldRespectNearestCurrentContextPresenter;
- (bool)_sourceViewSnapshotAndScaleTransformSuppressed;
- (void)_updateConstraintsIfNecessary;
- (void)_willRunTransitionForCurrentStateDeferred:(bool)arg1;
- (long long)adaptivePresentationStyle;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)containerViewDidLayoutSubviews;
- (void)containerViewWillLayoutSubviews;
- (id)feedbackGenerator;
- (id)forcePresentationControllerDelegate;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;
- (id)panningGestureRecognizer;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (id)presentationController:(id)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (id /* block */)presentationPhaseCompletionBlock;
- (void)presentationTransitionWillBegin;
- (void)setDelegate:(id)arg1;
- (void)setFeedbackGenerator:(id)arg1;
- (void)setForcePresentationControllerDelegate:(id)arg1;
- (void)setPanningGestureRecognizer:(id)arg1;
- (void)setPresentationPhaseCompletionBlock:(id /* block */)arg1;
- (void)set_sourceViewSnapshotAndScaleTransformSuppressed:(bool)arg1;
- (bool)shouldPresentInFullscreen;
- (bool)shouldRemovePresentersView;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

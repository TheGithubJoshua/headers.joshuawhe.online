<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIPreviewPresentationController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIPreviewPresentationController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIPreviewPresentationController : UIPresentationController <UIGestureRecognizerDelegate> {
    bool  _appliesVisualEffectsToPresentingView;
    id /* block */  _containerSuperviewFactoryBlock;
    id /* block */  _containerViewConfigurationBlock;
    UIResponder * _currentPinnedResponder;
    UITapGestureRecognizer * _dismissGestureRecognizer;
    id /* block */  _dismissalTransitionDidEndBlock;
    NSArray * _keyboardSnapshotters;
    NSHashTable * _keyboardWindows;
    UIVisualEffectView * _presentationContainerEffectView;
    UIWindow * _presentationWindow;
    <UIPreviewPresentationControllerDelegate> * _previewPresentationDelegate;
    UIView * _statusBarSnapshotView;
    UIWindow * _statusBarWindow;
}

@property (nonatomic) bool appliesVisualEffectsToPresentingView;
@property (nonatomic, copy) id /* block */ containerSuperviewFactoryBlock;
@property (nonatomic, copy) id /* block */ containerViewConfigurationBlock;
@property (nonatomic) UIResponder *currentPinnedResponder;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UITapGestureRecognizer *dismissGestureRecognizer;
@property (nonatomic, copy) id /* block */ dismissalTransitionDidEndBlock;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSArray *keyboardSnapshotters;
@property (nonatomic, copy) NSHashTable *keyboardWindows;
@property (nonatomic, retain) UIVisualEffectView *presentationContainerEffectView;
@property (nonatomic) UIWindow *presentationWindow;
@property (nonatomic) <UIPreviewPresentationControllerDelegate> *previewPresentationDelegate;
@property (nonatomic, retain) UIView *statusBarSnapshotView;
@property (nonatomic, retain) UIWindow *statusBarWindow;
@property (readonly) Class superclass;

+ (id)_backgroundEffectForTraitCollection:(id)arg1 interactive:(bool)arg2;
+ (bool)_shouldApplyVisualEffectsToPresentingView;
+ (bool)_shouldInterdictServiceViewTouches;

- (void).cxx_destruct;
- (void)_animatePreviewTransitionIfNeeded:(id)arg1;
- (void)_applyVisualEffectsForPresentationPhase:(unsigned long long)arg1;
- (void)_cancelTransitionDidEnd:(bool)arg1;
- (void)_finalizeAfterDismissalTransition;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForTransitionViewInPresentationSuperview:(id)arg1;
- (id)_fullscreenPresentationSuperview;
- (void)_handleDismissGestureRecognizer:(id)arg1;
- (void)_interactiveHighlightTransitionDidEnd:(bool)arg1;
- (bool)_keyboardShouldAnimateAlongsideForInteractiveTransitions;
- (void)_layoutForCancel;
- (void)_layoutForInteractiveHighlight;
- (void)_layoutForPreview;
- (void)_prepareContainerViewForPresentationTransition;
- (void)_prepareDismissAnimationsForTransitionCoordinator:(id)arg1;
- (void)_prepareDismissGestureRecognizersIfNeeded;
- (void)_prepareKeyboardForPresentationTransition;
- (void)_preparePresentationAnimationsForTransitionCoordinator:(id)arg1;
- (void)_prepareStatusBarForPresentationTransition;
- (id)_presentationContainerView;
- (bool)_presentationPotentiallyUnderlapsStatusBar;
- (void)_presentationTransitionWillBeginForContainerEffectView:(id)arg1;
- (void)_previewTransitionDidEnd:(bool)arg1;
- (bool)_shouldBlurStatusBar;
- (bool)_shouldDisableInteractionDuringTransitions;
- (bool)_shouldKeepCurrentFirstResponder;
- (bool)_shouldSavePresentedViewControllerForStateRestoration;
- (bool)appliesVisualEffectsToPresentingView;
- (id /* block */)containerSuperviewFactoryBlock;
- (id /* block */)containerViewConfigurationBlock;
- (id)currentPinnedResponder;
- (id)dismissGestureRecognizer;
- (void)dismissalTransitionDidEnd:(bool)arg1;
- (id /* block */)dismissalTransitionDidEndBlock;
- (void)dismissalTransitionWillBegin;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;
- (id)keyboardSnapshotters;
- (id)keyboardWindows;
- (id)presentationContainerEffectView;
- (void)presentationTransitionDidEnd:(bool)arg1;
- (void)presentationTransitionWillBegin;
- (id)presentationWindow;
- (id)previewPresentationDelegate;
- (void)setAppliesVisualEffectsToPresentingView:(bool)arg1;
- (void)setContainerSuperviewFactoryBlock:(id /* block */)arg1;
- (void)setContainerViewConfigurationBlock:(id /* block */)arg1;
- (void)setCurrentPinnedResponder:(id)arg1;
- (void)setDismissGestureRecognizer:(id)arg1;
- (void)setDismissalTransitionDidEndBlock:(id /* block */)arg1;
- (void)setKeyboardSnapshotters:(id)arg1;
- (void)setKeyboardWindows:(id)arg1;
- (void)setPresentationContainerEffectView:(id)arg1;
- (void)setPresentationWindow:(id)arg1;
- (void)setPreviewPresentationDelegate:(id)arg1;
- (void)setStatusBarSnapshotView:(id)arg1;
- (void)setStatusBarWindow:(id)arg1;
- (id)statusBarSnapshotView;
- (id)statusBarWindow;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIFocusMoveTest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIFocusMoveTest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIFocusMoveTest : _UIFocusTest {
    unsigned long long  _activeNumberOfIterations;
    <UIFocusEnvironment> * _containerFocusEnvironment;
    unsigned long long  _currentIteration;
    unsigned long long  _currentMove;
    <_UIFocusMoveTestDataSource> * _dataSource;
    struct { 
        unsigned int isPerformingFocusMovement : 1; 
        unsigned int delegateRespondsToWillStartIteration : 1; 
        unsigned int delegateRespondsToDidFinishIteration : 1; 
        unsigned int delegateRespondsToWillMoveFocusAlongHeadingForMoveDuringIteration : 1; 
        unsigned int delegateRespondsToDidMoveFocusAlongHeadingForMoveDuringIteration : 1; 
        unsigned int dataSourceRespondsToNumberOfIterations : 1; 
        unsigned int dataSourceRespondsToMaximumNumberOfMovesDuringIteration : 1; 
        unsigned int dataSourceRespondsToDelayBeforeMoveDuringIteration : 1; 
        unsigned int dataSourceRespondsToHeadingForMoveDuringIteration : 1; 
        unsigned int dataSourceRespondsToShouldResetFocusBeforeIteration : 1; 
    }  _flags;
    unsigned long long  _maximumMovesPerIteration;
    double  _movementDelay;
    unsigned long long  _movementHeading;
    unsigned long long  _numberOfIterations;
    bool  _resetsFocusBeforeIterations;
}

@property (nonatomic) <UIFocusEnvironment> *containerFocusEnvironment;
@property (nonatomic) <_UIFocusMoveTestDataSource> *dataSource;
@property (nonatomic) <_UIFocusMoveTestDelegate> *delegate;
@property (nonatomic) unsigned long long maximumMovesPerIteration;
@property (nonatomic) double movementDelay;
@property (nonatomic) unsigned long long movementHeading;
@property (nonatomic) unsigned long long numberOfIterations;
@property (nonatomic) bool resetsFocusBeforeIterations;

- (void).cxx_destruct;
- (double)_dataSourceDelayBeforeMove:(unsigned long long)arg1 duringIteration:(unsigned long long)arg2;
- (unsigned long long)_dataSourceHeadingForMove:(unsigned long long)arg1 duringIteration:(unsigned long long)arg2;
- (unsigned long long)_dataSourceMaximumNumberOfMovesDuringIteration:(unsigned long long)arg1;
- (unsigned long long)_dataSourceNumberOfIterations;
- (bool)_dataSourceShouldResetFocusBeforeIteration:(unsigned long long)arg1;
- (void)_notifyDelegateDidFinishIteration:(unsigned long long)arg1;
- (void)_notifyDelegateDidMoveFocusAlongHeading:(unsigned long long)arg1 forMove:(unsigned long long)arg2 duringIteration:(unsigned long long)arg3;
- (void)_notifyDelegateWillMoveFocusAlongHeading:(unsigned long long)arg1 forMove:(unsigned long long)arg2 duringIteration:(unsigned long long)arg3;
- (void)_notifyDelegateWillStartIteration:(unsigned long long)arg1;
- (void)_performFocusMovement;
- (void)_performFocusMovementAfterDelayForMove:(unsigned long long)arg1 iteration:(unsigned long long)arg2;
- (void)_resetFocusIfNecessaryBeforeIteration:(unsigned long long)arg1;
- (id)containerFocusEnvironment;
- (id)dataSource;
- (id)delegate;
- (id)initWithIdentifier:(id)arg1;
- (void)main;
- (unsigned long long)maximumMovesPerIteration;
- (double)movementDelay;
- (unsigned long long)movementHeading;
- (unsigned long long)numberOfIterations;
- (void)prepareWithCompletionHandler:(id /* block */)arg1;
- (void)reset;
- (bool)resetsFocusBeforeIterations;
- (void)setContainerFocusEnvironment:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setMaximumMovesPerIteration:(unsigned long long)arg1;
- (void)setMovementDelay:(double)arg1;
- (void)setMovementHeading:(unsigned long long)arg1;
- (void)setNumberOfIterations:(unsigned long long)arg1;
- (void)setResetsFocusBeforeIterations:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UISwitchiOS6VisualElement.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UISwitchiOS6VisualElement.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UISwitchiOS6VisualElement : UISwitchVisualElement {
    bool  _animating;
    CALayer * _backgroundLayer;
    UIImage * _colorMask;
    UIImageView * _colorView;
    UIImageView * _idleImageView;
    UIView * _interactiveView;
    UIImageView * _labelView;
    UIImage * _offImage;
    bool  _on;
    UIImage * _onImage;
    UIColor * _onTintColor;
    UIPanGestureRecognizer * _panGesture;
    double  _position;
    bool  _pressed;
    bool  _sendAction;
    UIImage * _shapeMask;
    UIImage * _shapeShadow;
    UITapGestureRecognizer * _tapGesture;
    UIImage * _thumb;
    UIImage * _thumbPressed;
    UIColor * _thumbTintColor;
    UIImageView * _thumbView;
    UIColor * _tintColor;
}

@property (nonatomic, retain) UIImage *offImage;
@property (nonatomic) bool on;
@property (nonatomic, retain) UIImage *onImage;
@property (nonatomic, retain) UIColor *onTintColor;
@property (nonatomic, retain) UIPanGestureRecognizer *panGesture;
@property (nonatomic, retain) UITapGestureRecognizer *tapGesture;
@property (nonatomic, retain) UIColor *thumbTintColor;
@property (nonatomic, retain) UIColor *tintColor;

+ (id)_defaultOnTintColor;
+ (struct CGSize { double x1; double x2; })_preferredContentSizeForLinkedOnVersion:(unsigned int)arg1;
+ (struct CGSize { double x1; double x2; })preferredContentSize;

- (void).cxx_destruct;
- (void)_buildControl;
- (void)_cleanUpAfterAnimating;
- (id)_colorImage;
- (void)_handlePan:(id)arg1;
- (void)_handleTap:(id)arg1;
- (id)_labelImage;
- (void)_onAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3;
- (void)_prepareForInteraction;
- (void)_prepareGestureRecognizers;
- (void)_sendActions;
- (void)_setOn:(bool)arg1 animated:(bool)arg2 force:(bool)arg3;
- (void)_setOnTintColor:(id)arg1;
- (void)_setPressed:(bool)arg1;
- (void)_setPressed:(bool)arg1 on:(bool)arg2 animated:(bool)arg3 completion:(id /* block */)arg4;
- (void)_setProgress:(double)arg1;
- (void)_setProgress:(double)arg1 animated:(bool)arg2 withDuration:(double)arg3 force:(bool)arg4 sendAction:(bool)arg5;
- (void)_setupBackgroundLayer;
- (void)_setupThumbImages;
- (id)_snapshotImage;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)offImage;
- (bool)on;
- (id)onImage;
- (id)onTintColor;
- (id)panGesture;
- (void)setAlpha:(double)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setOffImage:(id)arg1;
- (void)setOn:(bool)arg1;
- (void)setOn:(bool)arg1 animated:(bool)arg2;
- (void)setOnImage:(id)arg1;
- (void)setOnTintColor:(id)arg1;
- (void)setPanGesture:(id)arg1;
- (void)setTapGesture:(id)arg1;
- (void)setThumbTintColor:(id)arg1;
- (void)setTintColor:(id)arg1;
- (id)tapGesture;
- (id)thumbTintColor;
- (id)tintColor;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

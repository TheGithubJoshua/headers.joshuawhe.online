<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIAlertControllerVisualStyle.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIAlertControllerVisualStyle.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIAlertControllerVisualStyle : NSObject {
    UIAlertControllerDescriptor * _descriptor;
    long long  _forcedInterfaceIdiom;
    UIInterfaceActionVisualStyle * _interfaceActionVisualStyle;
    UITraitCollection * _traitCollection;
}

@property (nonatomic, retain) UIAlertControllerDescriptor *descriptor;
@property (nonatomic) long long forcedInterfaceIdiom;
@property (nonatomic, readonly) UIInterfaceActionVisualStyle *interfaceActionVisualStyle;
@property (nonatomic, retain) UITraitCollection *traitCollection;

+ (long long)interfaceActionPresentationStyle;
+ (void)positionContentsOfAlertController:(id)arg1 alertContentView:(id)arg2 availableSpaceView:(id)arg3 visualStyle:(id)arg4 updatableConstraints:(id)arg5;

- (void).cxx_destruct;
- (id)_detailMessageFont;
- (id)_keyCommandInputForCancelAction;
- (double)_marginAboveDetailMessageFirstBaseline;
- (void)_reloadInterfaceActionVisualStyle;
- (double)_scaledMarginAboveDetailMessageFirstBaseline;
- (double)_scaledMarginAboveMessageLabelFirstBaseline;
- (double)_scaledMarginAboveTitleLabelFirstBaselineInAlertControllerView:(id)arg1;
- (double)_scaledMarginBelowLastLabelLastBaseline;
- (double)_scaledMarginBelowMessageLabelLastBaseline;
- (double)_scaledMarginBelowTitleLabelLastBaseline;
- (double)_scaledMessageSafeBaselineHeightInAlertControllerView:(id)arg1;
- (double)_scaledSafeBaselineHeightForLabelFont:(id)arg1 inAlertControllerView:(id)arg2;
- (double)_scaledTitleLabelSafeBaselineHeightInAlertControllerView:(id)arg1;
- (bool)_shouldReverseActions;
- (double)_spacingBetweenDismissButtonAndContent;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })actionImageMarginForAction;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })actionSequenceEdgeInsets;
- (double)actionWidthForMinimumActionWidth:(double)arg1;
- (void)animateAlertControllerView:(id)arg1 ofAlertController:(id)arg2 forPresentation:(bool)arg3 inContainerView:(id)arg4 descendantOfContainerView:(id)arg5 duration:(double)arg6 completionBlock:(id /* block */)arg7;
- (void)animateRevealOfAlertControllerView:(id)arg1 alertController:(id)arg2 inContainerView:(id)arg3 duration:(double)arg4 completionBlock:(id /* block */)arg5;
- (struct CGSize { double x1; double x2; })collectionViewOutsetSize;
- (void)configureAttributesForImageView:(id)arg1 imageProperty:(id)arg2 actionViewState:(id)arg3;
- (void)configureAttributesForTitleLabel:(id)arg1 classificationLabel:(id)arg2 actionViewState:(id)arg3;
- (double)contentHorizontalMargin;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInsetsForContainerView:(id)arg1;
- (double)contentVerticalMargin;
- (id)defaultActionFont;
- (id)descriptor;
- (id)dimmingViewForAlertController:(id)arg1;
- (long long)forcedInterfaceIdiom;
- (bool)hideCancelAction:(id)arg1 inAlertController:(id)arg2;
- (id)init;
- (id)interactionProgressForTransitionOfType:(long long)arg1 forAlertController:(id)arg2;
- (id)interfaceActionVisualStyle;
- (Class)interfaceActionVisualStyleClassForManagingConcreteVisualStyle;
- (bool)isEqual:(id)arg1;
- (double)marginAboveMessageLabelFirstBaseline;
- (double)marginAboveTitleLabelFirstBaseline;
- (double)marginBelowLastLabelLastBaseline;
- (double)marginBelowMessageLabelLastBaseline;
- (double)marginBelowTitleLabelLastBaseline;
- (double)maximumHeightForDisplayOnScreen:(id)arg1;
- (long long)maximumNumberOfLinesInMessageLabel;
- (long long)maximumNumberOfLinesInTitleLabel;
- (double)maximumWidth;
- (double)maximumWidthForTitleAndMessageContentView;
- (id)messageLabelColor;
- (id)messageLabelFont;
- (struct CGSize { double x1; double x2; })minimumActionContentSize;
- (double)minimumWidth;
- (long long)permittedActionLayoutDirection;
- (bool)placementAvoidsKeyboard;
- (id)preferredActionFont;
- (id)preferredActionForActions:(id)arg1 suggestedPreferredAction:(id)arg2;
- (id)regularActionFont;
- (void)setDescriptor:(id)arg1;
- (void)setForcedInterfaceIdiom:(long long)arg1;
- (void)setTraitCollection:(id)arg1;
- (bool)shouldOccludeDuringPresentation;
- (bool)shouldPreserveRespondersAcrossWindows;
- (id)textFieldContainingViewWithTextField:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })textFieldContentInset;
- (double)textFieldHorizontalMargin;
- (id)tintColorForAlertController:(id)arg1;
- (id)titleLabelColor;
- (id)titleLabelFont;
- (id)traitCollection;
- (double)transitionDurationForPresentation:(bool)arg1 ofAlertController:(id)arg2;
- (bool)transitionOfType:(long long)arg1 shouldBeInteractiveForAlertController:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

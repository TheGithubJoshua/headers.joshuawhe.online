<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIInterfaceActionRepresentationView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIInterfaceActionRepresentationView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIInterfaceActionRepresentationView : UIView <UIFocusEnvironment, UIInterfaceActionDisplayPropertyObserver, UISpringLoadedInteractionSupporting> {
    UIInterfaceAction * _action;
    id  _actionViewStateContext;
    UIView<UIInterfaceActionVisualBackgroundDisplaying> * _backgroundHighlightView;
    bool  _canKeepContentsInHierarchy;
    bool  _canRemoveContentFromHierarchyWhenNotVisible;
    bool  _contentsInsertedIntoViewHierarchy;
    bool  _enforcedCanRemoveContentFromHierarchyWhenNotVisible;
    bool  _enforcedCanRemoveContentFromHierarchyWhenNotVisibleValue;
    bool  _hasLoadedBackgroundView;
    bool  _hasLoadedContentFirstTime;
    bool  _highlighted;
    UISpringLoadedInteraction * _interactionForSpringLoading;
    NSLayoutConstraint * _minimumHeightConstraint;
    NSLayoutConstraint * _minimumWidthConstraint;
    bool  _ownsActionContent;
    bool  _pressed;
    NSString * _sectionID;
    NSArray * _viewsToDisappearWhenHighlighted;
    unsigned long long  _visualCornerPosition;
}

@property (setter=_setContentsInsertedIntoViewHierarchy:, nonatomic) bool _contentsInsertedIntoViewHierarchy;
@property (nonatomic, readonly) UIInterfaceAction *action;
@property (nonatomic, retain) id actionViewStateContext;
@property (nonatomic, readonly) UIView<UIInterfaceActionVisualBackgroundDisplaying> *backgroundHighlightView;
@property (nonatomic) bool canRemoveContentFromHierarchyWhenNotVisible;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <UIFocusItemContainer> *focusItemContainer;
@property (readonly) unsigned long long hash;
@property (getter=isHighlighted, nonatomic) bool highlighted;
@property (nonatomic, retain) UISpringLoadedInteraction *interactionForSpringLoading;
@property (nonatomic, readonly) NSLayoutConstraint *minimumHeightConstraint;
@property (nonatomic, readonly) NSLayoutConstraint *minimumWidthConstraint;
@property (nonatomic) bool ownsActionContent;
@property (nonatomic, readonly) <UIFocusEnvironment> *parentFocusEnvironment;
@property (nonatomic, readonly, copy) NSArray *preferredFocusEnvironments;
@property (nonatomic, readonly) UIView *preferredFocusedView;
@property (getter=isPressed, nonatomic) bool pressed;
@property (nonatomic, retain) NSString *sectionID;
@property (getter=isSpringLoaded, nonatomic) bool springLoaded;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSArray *viewsToDisappearWhenHighlighted;
@property (nonatomic) unsigned long long visualCornerPosition;
@property (nonatomic, readonly) UIInterfaceActionVisualStyle *visualStyle;

- (void).cxx_destruct;
- (id)__fittingContentSizingViewAllowingSelf;
- (id)__fittingContentSizingViewIfNotSelf;
- (id)_actionViewState;
- (void)_addLoadedContentsToHierarchyFirstTime;
- (void)_addLoadedContentsToHierarchyIfAllowed;
- (void)_applyVisualStyle;
- (void)_applyVisualStyleToBackgroundViewAndHighlighting;
- (void)_applyVisualStyleToLayoutMargins;
- (void)_applyVisualStyleToMinimumSizeConstraints;
- (bool)_canLoadContentsIntoHierarchy;
- (void)_clearBackgroundPressedState;
- (bool)_contentsInsertedIntoViewHierarchy;
- (void)_didScroll;
- (void)_enforceActionRepresentationViewsCanRemoveContentFromHierarchyWhenNotVisible:(bool)arg1;
- (struct CGSize { double x1; double x2; })_fittingContentSizeWithFittingViewSize:(struct CGSize { double x1; double x2; })arg1;
- (id)_fittingContentSizingView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_fittingContentSizingViewFrameInBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_fittingContentSizingViewMargins;
- (bool)_fittingContentViewHasItsOwnActiveMinimumSizeConstraintsWithSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)_handleVisualFeedbackForPress:(id)arg1 pressed:(bool)arg2;
- (void)_initializeHorizontalMarginsForAction;
- (bool)_isVisibleWithinContainmentAncestor;
- (void)_loadContentsIntoHierarchyAndPrepareIfNecessary;
- (void)_reloadBackgroundHighlightView;
- (void)_removeLoadedContentsFromHierarchyIfNotVisible;
- (void)_setContentsInsertedIntoViewHierarchy:(bool)arg1;
- (void)_setHorizontalMargins:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1 preservesSuperviewLayoutMargins:(bool)arg2;
- (bool)_shouldShowPressFeedbackForEventWithPresses:(id)arg1;
- (void)_showVisualFeedbackForPressed:(bool)arg1;
- (bool)_showsFocusForFocusedView:(id)arg1;
- (void)_updateFittingContentSizingViewToFitSize;
- (void)_updateHighlightAndPressedFeedback;
- (void)_updateLoadedContentsHierarchyByInsertingOrRemovingIfNecessary;
- (id)_viewDisplayingBackground;
- (id)action;
- (id)actionViewStateContext;
- (id)backgroundHighlightView;
- (bool)canBecomeFocused;
- (bool)canRemoveContentFromHierarchyWhenNotVisible;
- (void)dealloc;
- (id)description;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (bool)hasLayoutHeightConstraintsIdenticalToRepresentationView:(id)arg1;
- (id)initWithAction:(id)arg1;
- (id)interactionForSpringLoading;
- (void)interfaceAction:(id)arg1 reloadDisplayedContentActionProperties:(id)arg2;
- (void)interfaceAction:(id)arg1 reloadDisplayedContentVisualStyle:(id)arg2;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;
- (void)invokeInterfaceAction;
- (bool)isFocused;
- (bool)isHighlighted;
- (bool)isPressed;
- (bool)isSpringLoaded;
- (void)layoutMarginsDidChange;
- (void)layoutSubviews;
- (void)loadContents;
- (id)minimumHeightConstraint;
- (id)minimumWidthConstraint;
- (bool)ownsActionContent;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (id)sectionID;
- (void)setActionViewStateContext:(id)arg1;
- (void)setCanRemoveContentFromHierarchyWhenNotVisible:(bool)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setInteractionForSpringLoading:(id)arg1;
- (void)setOwnsActionContent:(bool)arg1;
- (void)setPressed:(bool)arg1;
- (void)setSectionID:(id)arg1;
- (void)setSpringLoaded:(bool)arg1;
- (void)setViewsToDisappearWhenHighlighted:(id)arg1;
- (void)setVisualCornerPosition:(unsigned long long)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)updateConstraints;
- (void)updateContentsInsertedIntoHierarchy;
- (id)viewsToDisappearWhenHighlighted;
- (unsigned long long)visualCornerPosition;
- (id)visualStyle;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIDropInteraction.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIDropInteraction.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIDropInteraction : NSObject <UIDragGestureRecognizerDelegate, UIDragInteraction, UIInteraction, UIInteraction_Internal, _UIDraggingItemVisualTarget> {
    NSMutableSet * _activeDragGestureRecognizers;
    bool  _allowsSimultaneousDropSessions;
    UIDropInteractionContextImpl * _context;
    <UIDropInteractionDelegate> * _delegate;
    NSMapTable * _enteredDropSessionByDraggingSession;
    <UIDropInteractionEffect> * _interactionEffect;
    NSMapTable * _itemsTableBySession;
    UIPasteConfiguration * _pasteConfiguration;
    unsigned long long  _potentialDragOperation;
    UIView * _view;
    <_UIViewDraggingDestinationDelegate> * _viewDelegate;
    bool  _wantsDefaultVisualBehavior;
}

@property (nonatomic) bool allowsSimultaneousDropSessions;
@property (nonatomic, retain) UIDropInteractionContextImpl *context;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) <UIDropInteractionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <UIDropInteractionEffect> *interactionEffect;
@property (getter=_pasteConfiguration, nonatomic, readonly, copy) UIPasteConfiguration *pasteConfiguration;
@property (readonly) Class superclass;
@property (nonatomic) UIView *view;
@property (getter=_viewDelegate, nonatomic, readonly) <_UIViewDraggingDestinationDelegate> *viewDelegate;
@property (getter=_wantsDefaultVisualBehavior, setter=_setWantsDefaultVisualBehavior:, nonatomic) bool wantsDefaultVisualBehavior;

- (void).cxx_destruct;
- (bool)_allowsSimultaneousDragWithEvent:(id)arg1;
- (bool)_canHandleDragEvent:(id)arg1;
- (void)_cleanupItemsInSessionAfterDrop:(id)arg1;
- (void)_dragDestinationGestureStateChanged:(id)arg1;
- (void)_dragDestinationViewDelegateForward:(id)arg1 delegate:(id)arg2;
- (void)_draggingItem:(id)arg1 willAnimateSetDownWithAnimator:(id)arg2;
- (id)_dropItemForDroppingDraggingItem:(id)arg1;
- (void)_dropSessionEntered:(id)arg1 withSessionDestination:(id)arg2;
- (id)_dynamicGestureRecognizersForEvent:(id)arg1;
- (bool)_gestureRecognizer:(id)arg1 shouldReceiveDragEvent:(id)arg2;
- (void)_gestureRecognizerFailed:(id)arg1;
- (id)_initWithPasteConfiguration:(id)arg1;
- (id)_initWithViewDelegate:(id)arg1;
- (id)_pasteConfiguration;
- (void)_prepareForSetDownAnimationInWindow:(id)arg1 withDraggingItem:(id)arg2 visibleDroppedItem:(id)arg3;
- (void)_prepareItemsInSessionForDrop:(id)arg1;
- (void)_sendSessionDidEnd:(id)arg1;
- (unsigned long long)_setLastDragOperation:(unsigned long long)arg1 forbidden:(bool)arg2 precise:(bool)arg3 prefersFullSizePreview:(bool)arg4 onSession:(id)arg5;
- (void)_setWantsDefaultVisualBehavior:(bool)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_targetFrameOfDraggingItem:(id)arg1 inCoordinateSpace:(id)arg2;
- (unsigned long long)_validateDragOperation:(unsigned long long)arg1 forSelector:(SEL)arg2 delegate:(id)arg3 dropSession:(id)arg4 onSession:(id)arg5 forbidden:(bool*)arg6;
- (id)_viewDelegate;
- (bool)_wantsDefaultVisualBehavior;
- (bool)allowsSimultaneousDropSessions;
- (id)context;
- (id)delegate;
- (void)didMoveToView:(id)arg1;
- (id)initWithDelegate:(id)arg1;
- (id)interactionEffect;
- (bool)isActive;
- (void)setAllowsSimultaneousDropSessions:(bool)arg1;
- (void)setContext:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInteractionEffect:(id)arg1;
- (void)setView:(id)arg1;
- (id)view;
- (void)willMoveToView:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UINavigationBarContentViewLayout.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UINavigationBarContentViewLayout.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UINavigationBarContentViewLayout : NSObject {
    bool  _active;
    UIFont * _activeFontForScaling;
    long long  _alignment;
    NSArray * _alignmentConstraints;
    UIView<_UINavigationBarAugmentedTitleView> * _augmentedTitleView;
    NSArray * _augmentedTitleViewContraints;
    _UIButtonBarButton * _backButton;
    NSArray * _backButtonConstraints;
    UILayoutGuide * _backButtonGuide;
    UIView * _backButtonSnapshot;
    NSLayoutConstraint * _backButtonToLeadingBarSpacer;
    _UINavigationBarContentView * _contentView;
    long long  _currentContentSize;
    bool  _hasFakedBackButton;
    NSArray * _heightConstraints;
    UILabel * _inlineTitleView;
    bool  _keepsSnapshotsInHierarchy;
    struct NSDirectionalEdgeInsets { 
        double top; 
        double leading; 
        double bottom; 
        double trailing; 
    }  _layoutMargins;
    _UIButtonBar * _leadingBar;
    NSArray * _leadingBarConstraints;
    UIBarButtonItemGroup * _leadingBarGroup;
    UILayoutGuide * _leadingBarGuide;
    UIView * _leadingBarSnapshot;
    NSLayoutConstraint * _leadingBarToTitleSpacer;
    NSLayoutConstraint * _leadingMarginConstraint;
    double  _minimumBackButtonWidth;
    double  _overrideSize;
    long long  _resolvedAlignment;
    double  _resolvedSize;
    NSLayoutConstraint * _titleToTrailingBarSpacer;
    double  _titleVerticalPositionAdjustment;
    UIView * _titleView;
    NSArray * _titleViewConstraints;
    UILayoutGuide * _titleViewGuide;
    UIView * _titleViewSnapshot;
    _UITAMICAdaptorView * _titleViewWrapperView;
    _UIButtonBar * _trailingBar;
    NSArray * _trailingBarConstraints;
    UIBarButtonItemGroup * _trailingBarGroup;
    UILayoutGuide * _trailingBarGuide;
    UIView * _trailingBarSnapshot;
    NSLayoutConstraint * _trailingMarginConstraint;
}

@property (nonatomic) bool active;
@property (nonatomic, retain) UIFont *activeFontForScaling;
@property (nonatomic) long long alignment;
@property (nonatomic, retain) UIView<_UINavigationBarAugmentedTitleView> *augmentedTitleView;
@property (nonatomic, retain) _UIButtonBarButton *backButton;
@property (nonatomic, readonly) UILayoutGuide *backButtonGuide;
@property (nonatomic, readonly) UIView *backButtonSnapshot;
@property (nonatomic, readonly) _UINavigationBarContentView *contentView;
@property (nonatomic) long long currentContentSize;
@property (nonatomic, readonly) double currentHeight;
@property (nonatomic, readonly) UIView *effectiveTitleView;
@property (nonatomic) bool hasFakedBackButton;
@property (nonatomic, retain) UILabel *inlineTitleView;
@property (nonatomic) bool keepsSnapshotsInHierarchy;
@property (nonatomic) struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; } layoutMargins;
@property (nonatomic, retain) _UIButtonBar *leadingBar;
@property (nonatomic, readonly) UILayoutGuide *leadingBarGuide;
@property (nonatomic, retain) NSArray *leadingBarItems;
@property (nonatomic, readonly) UIView *leadingBarSnapshot;
@property (nonatomic) double minimumBackButtonWidth;
@property (nonatomic) double overrideSize;
@property (nonatomic, readonly) long long resolvedAlignment;
@property (nonatomic, readonly) double resolvedSize;
@property (nonatomic) double titleVerticalPositionAdjustment;
@property (nonatomic, retain) UIView *titleView;
@property (nonatomic, readonly) UILayoutGuide *titleViewGuide;
@property (nonatomic, readonly) UIView *titleViewSnapshot;
@property (nonatomic, readonly) _UITAMICAdaptorView *titleViewWrapperView;
@property (nonatomic, retain) _UIButtonBar *trailingBar;
@property (nonatomic, readonly) UILayoutGuide *trailingBarGuide;
@property (nonatomic, retain) NSArray *trailingBarItems;
@property (nonatomic, readonly) UIView *trailingBarSnapshot;

- (void).cxx_destruct;
- (void)_activateAllConstraints;
- (double)_baseHeight;
- (double)_contentHeight;
- (void)_deactivateAllConstraints;
- (void)_disableLayoutFlushing:(bool)arg1;
- (void)_keepConstraintsActiveIfNecessary:(id*)arg1 updateLayout:(id /* block */)arg2;
- (void)_prepareTitleViewAndWrapIfNecessary;
- (void)_updateAlignmentConstraints;
- (void)_updateAugmentedTitleViewConstraints;
- (void)_updateAugmentedTitleViewLayout;
- (void)_updateBackButtonConstraints;
- (void)_updateHeightConstraints;
- (void)_updateLeadingBarConstraints;
- (void)_updateMarginConstraints;
- (void)_updateSubviewOrder;
- (void)_updateTitleViewConstraints;
- (void)_updateTrailingBarConstraints;
- (bool)active;
- (id)activeFontForScaling;
- (long long)alignment;
- (id)augmentedTitleView;
- (id)backButton;
- (id)backButtonGuide;
- (id)backButtonSnapshot;
- (void)cleanupAfterLayoutTransitionCompleted;
- (id)contentView;
- (long long)currentContentSize;
- (double)currentHeight;
- (id)description;
- (id)effectiveTitleView;
- (void)freeze;
- (bool)hasFakedBackButton;
- (id)initWithContentView:(id)arg1;
- (id)inlineTitleView;
- (void)invalidate;
- (bool)keepsSnapshotsInHierarchy;
- (struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })layoutMargins;
- (id)leadingBar;
- (id)leadingBarGuide;
- (id)leadingBarItems;
- (id)leadingBarSnapshot;
- (double)minimumBackButtonWidth;
- (double)overrideSize;
- (void)removeAllSnapshots;
- (void)replaceBackButtonWithSnapshot;
- (void)replaceLeadingBarWithSnapshot;
- (void)replaceTitleViewWithSnapshot;
- (void)replaceTrailingBarWithSnapshot;
- (long long)resolvedAlignment;
- (double)resolvedSize;
- (void)setActive:(bool)arg1;
- (void)setActiveFontForScaling:(id)arg1;
- (void)setAlignment:(long long)arg1;
- (void)setAugmentedTitleView:(id)arg1;
- (void)setBackButton:(id)arg1;
- (void)setBackButtonHidden:(bool)arg1 titleHidden:(bool)arg2 barsHidden:(bool)arg3;
- (void)setContentHidden:(bool)arg1;
- (void)setCurrentContentSize:(long long)arg1;
- (void)setHasFakedBackButton:(bool)arg1;
- (void)setInlineTitleView:(id)arg1;
- (void)setKeepsSnapshotsInHierarchy:(bool)arg1;
- (void)setLayoutMargins:(struct NSDirectionalEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLeadingBar:(id)arg1;
- (void)setLeadingBarItems:(id)arg1;
- (void)setMinimumBackButtonWidth:(double)arg1;
- (void)setOverrideSize:(double)arg1;
- (void)setTitleVerticalPositionAdjustment:(double)arg1;
- (void)setTitleView:(id)arg1;
- (void)setTrailingBar:(id)arg1;
- (void)setTrailingBarItems:(id)arg1;
- (double)titleVerticalPositionAdjustment;
- (id)titleView;
- (id)titleViewGuide;
- (id)titleViewSnapshot;
- (id)titleViewWrapperView;
- (id)trailingBar;
- (id)trailingBarGuide;
- (id)trailingBarItems;
- (id)trailingBarSnapshot;
- (void)unfreeze;
- (void)updateAugmentedTitleViewHeight;
- (void)updateAugmentedTitleViewLayout;
- (void)updateSpacingConstraints;
- (void)updateTitleHeight;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

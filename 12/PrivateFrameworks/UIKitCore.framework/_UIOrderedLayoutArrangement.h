<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIOrderedLayoutArrangement.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIOrderedLayoutArrangement.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIOrderedLayoutArrangement : _UILayoutArrangement <_UIOLAPropertySource> {
    bool  _baselineRelativeArrangement;
    NSMapTable * _customSpacings;
    long long  _distribution;
    NSMapTable * _edgeToEdgeConstraintsForHiddenItems;
    NSMapTable * _edgeToEdgeConstraintsForVisibleItems;
    NSMapTable * _hidingDimensionConstraints;
    bool  _itemFittingSizeChanged;
    bool  _itemOrderingChanged;
    NSMapTable * _multilineTextWidthDisambiguationConstraints;
    double  _proportionalFillDenominator;
    NSMapTable * _relatedDimensionConstraints;
    double  _spacing;
    NSMapTable * _spacingOrCenteringGuides;
}

@property (setter=_setItemFittingSizeChanged:, nonatomic) bool _itemFittingSizeChanged;
@property (setter=_setItemOrderingChanged:, nonatomic) bool _itemOrderingChanged;
@property (nonatomic, readonly) NSSet *_newlyHiddenItems;
@property (nonatomic, readonly) NSSet *_newlyUnhiddenItems;
@property (nonatomic) long long axis;
@property (getter=isBaselineRelativeArrangement, nonatomic) bool baselineRelativeArrangement;
@property (nonatomic, readonly) NSMapTable *customSpacings;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long distribution;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool layoutFillsCanvas;
@property (nonatomic) bool layoutUsesCanvasMarginsWhenFilling;
@property (nonatomic) double spacing;
@property (readonly) Class superclass;

+ (Class)_configurationHistoryClass;

- (void).cxx_destruct;
- (void)_activateAndInsertEdgeToEdgeConstraintForGapBetweenPrecedingItem:(id)arg1 followingItem:(id)arg2 isPrecededByVisibleItem:(bool)arg3 isFollowedByVisibleItem:(bool)arg4 isHidden:(bool)arg5;
- (void)_activateAndInsertEdgeToEdgeConstraintForGapBetweenSpanningLayoutGuide:(id)arg1 hiddenItem:(id)arg2;
- (void)_adjustConstraintConstantsIfPossible;
- (id)_baselineViewVendTallest:(bool)arg1 forFirstBaseline:(bool)arg2;
- (double)_calculatedIntrinsicHeight;
- (bool)_canvasConnectionConstraintsNeedUpdatePass;
- (void)_cleanUpEdgeToEdgeConstraintsForHiddenItemsForItem:(id)arg1 atIndex:(unsigned long long)arg2 processAdjacentHiddenItems:(bool)arg3;
- (void)_cleanUpEdgeToEdgeConstraintsForVisibleItemsForItem:(id)arg1 atIndex:(unsigned long long)arg2 processPrecedingVisisbleItem:(bool)arg3;
- (void)_cleanUpGuideAtGapFollowingItem:(id)arg1;
- (void)_cleanUpGuides;
- (void)_cleanUpWithoutResettingKeepAliveWorkaround;
- (void)_clearAllConstraintsArrays;
- (bool)_configurationRequiresCanvasConnectionFittingConstraint;
- (double)_constantForMultilineTextWidthDisambiguationConstraintWithNumberOfVisibleItems:(unsigned long long)arg1;
- (bool)_customSpacingChanged;
- (void)_didEvaluateMultilineHeightForView:(id)arg1;
- (id)_dimensionRefItemFromConstraint:(id)arg1;
- (id)_edgeToEdgeConstraintForGapBetweenPrecedingItem:(id)arg1 followingItem:(id)arg2 isPrecededByVisibleItem:(bool)arg3 isFollowedByVisibleItem:(bool)arg4;
- (double)_expectedEdgeToEdgeSpacingForPrecedingItem:(id)arg1 followingItem:(id)arg2 isPrecededByVisibleItem:(bool)arg3 isFollowedByVisibleItem:(bool)arg4;
- (id)_firstVisibleItem;
- (bool)_hasStaleConfiguration;
- (bool)_hasStaleSpacing;
- (id)_identifierForSpanningLayoutGuide;
- (unsigned long long)_indexOfItemForLocationAttribute:(long long)arg1;
- (void)_insertIndividualGuidesAndConstraintsAsNecessary;
- (void)_intrinsicContentSizeInvalidatedForItem:(id)arg1;
- (bool)_itemCountChanged;
- (bool)_itemFittingSizeChanged;
- (bool)_itemOrderingChanged;
- (id)_lastVisibleItem;
- (long long)_maxAttributeForGapConstraintRespectingBaselineRelative:(bool)arg1;
- (long long)_minAttributeForGapConstraint;
- (long long)_minAttributeForGapConstraintRespectingBaselineRelative:(bool)arg1;
- (bool)_monitorsSystemLayoutFittingSizeForItem:(id)arg1;
- (void)_notifyCanvasesBaselineParametersDidChange;
- (id)_orderedConfigurationHistory;
- (id)_orderedPropertySource;
- (long long)_precedingLocationAttributeForGuideConstraint;
- (void)_removeGuideAndConstraintGroupsAsNecessary;
- (void)_removeIndividualGuidesAndConstraintsAsNecessary;
- (void)_setItemFittingSizeChanged:(bool)arg1;
- (void)_setItemOrderingChanged:(bool)arg1;
- (void)_setUpDimensionConstraintForItem:(id)arg1 referenceItem:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_setUpHidingDimensionConstraintForItem:(id)arg1;
- (void)_setUpMultilineTextWidthDisambiguationConstraintForItem:(id)arg1;
- (id)_setUpSpacingOrCenteringGuideForGapIndex:(unsigned long long)arg1;
- (void)_systemLayoutFittingSizeDidChangeForItem:(id)arg1;
- (id)_tallestItem;
- (void)_trackChangesAffectingExternalBaselineConstraints:(id /* block */)arg1;
- (void)_updateArrangementConstraints;
- (void)_updateConfigurationHistory;
- (void)_visibilityParameterChangedForItem:(id)arg1;
- (id)_visibleItemAtEndWithEnumerationOptions:(unsigned long long)arg1;
- (bool)_wantsProportionalDistribution;
- (double)customSpacingAfterItem:(id)arg1;
- (id)customSpacings;
- (long long)distribution;
- (void)insertItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (bool)isBaselineRelativeArrangement;
- (void)removeItem:(id)arg1;
- (void)setAxis:(long long)arg1;
- (void)setBaselineRelativeArrangement:(bool)arg1;
- (void)setCustomSpacing:(double)arg1 afterItem:(id)arg2;
- (void)setDistribution:(long long)arg1;
- (void)setLayoutFillsCanvas:(bool)arg1;
- (void)setLayoutUsesCanvasMarginsWhenFilling:(bool)arg1;
- (void)setSpacing:(double)arg1;
- (double)spacing;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

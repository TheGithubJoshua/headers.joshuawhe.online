<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UINavigationBarTransitionContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UINavigationBarTransitionContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UINavigationBarTransitionContext : NSObject {
    bool  _allowLargeTitles;
    _UIBarBackground * _backgroundView;
    bool  _beginWithLargeTitle;
    NSMutableSet * _clippingViews;
    _UINavigationBarContentView * _contentView;
    bool  _endWithLargeTitle;
    _UINavigationBarContentViewLayout * _fromContentLayout;
    _UINavigationBarLargeTitleViewLayout * _fromLargeTitleLayout;
    bool  _isRTL;
    int  _largeTitleTransitionType;
    _UINavigationBarLargeTitleView * _largeTitleView;
    UINavigationBar * _navigationBar;
    _UINavigationBarModernPromptView * _promptView;
    _UINavigationBarItemStack * _stack;
    _UINavigationBarContentViewLayout * _toContentLayout;
    _UINavigationBarLargeTitleViewLayout * _toLargeTitleLayout;
    bool  _twoPart;
}

@property (nonatomic) bool allowLargeTitles;
@property (nonatomic, retain) _UIBarBackground *backgroundView;
@property (nonatomic) bool beginWithLargeTitle;
@property (nonatomic, retain) _UINavigationBarContentView *contentView;
@property (nonatomic, readonly) double contentViewFittingHeight;
@property (nonatomic, readonly) double contentViewMaxY;
@property (nonatomic) bool endWithLargeTitle;
@property (nonatomic, retain) _UINavigationBarContentViewLayout *fromContentLayout;
@property (nonatomic, retain) _UINavigationBarLargeTitleViewLayout *fromLargeTitleLayout;
@property (nonatomic) bool isRTL;
@property (nonatomic, retain) _UINavigationBarLargeTitleView *largeTitleView;
@property (nonatomic) UINavigationBar *navigationBar;
@property (nonatomic, retain) _UINavigationBarModernPromptView *promptView;
@property (nonatomic, retain) _UINavigationBarItemStack *stack;
@property (nonatomic, retain) _UINavigationBarContentViewLayout *toContentLayout;
@property (nonatomic, retain) _UINavigationBarLargeTitleViewLayout *toLargeTitleLayout;
@property (nonatomic, readonly) int transition;
@property (nonatomic) bool twoPart;
@property (nonatomic, readonly) UIView *viewFadingInFromCustomAlpha;
@property (nonatomic, readonly) UIView *viewUsingEaseInCurve;
@property (nonatomic, readonly) UIView *viewUsingEaseOutCurve;

+ (id)contextForTransition:(int)arg1;

- (void).cxx_destruct;
- (void)_addClippingView:(id)arg1;
- (void)_removeAllClippingViews;
- (bool)allowLargeTitles;
- (void)animate;
- (id)backgroundView;
- (bool)beginWithLargeTitle;
- (void)cancel;
- (void)complete;
- (id)contentView;
- (double)contentViewFittingHeight;
- (double)contentViewMaxY;
- (bool)endWithLargeTitle;
- (id)fromContentLayout;
- (id)fromLargeTitleLayout;
- (bool)isRTL;
- (id)largeTitleView;
- (id)navigationBar;
- (void)prepare;
- (id)promptView;
- (void)recordUpdates:(id /* block */)arg1;
- (void)setAllLargeTitleLayoutsVisible;
- (void)setAllowLargeTitles:(bool)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setBeginWithLargeTitle:(bool)arg1;
- (void)setContentView:(id)arg1;
- (void)setEndWithLargeTitle:(bool)arg1;
- (void)setFromContentLayout:(id)arg1;
- (void)setFromLargeTitleLayout:(id)arg1;
- (void)setIsRTL:(bool)arg1;
- (void)setLargeTitleView:(id)arg1;
- (void)setNavigationBar:(id)arg1;
- (void)setPromptView:(id)arg1;
- (void)setStack:(id)arg1;
- (void)setToContentLayout:(id)arg1;
- (void)setToLargeTitleLayout:(id)arg1;
- (void)setTwoPart:(bool)arg1;
- (id)stack;
- (id)toContentLayout;
- (id)toLargeTitleLayout;
- (bool)twoPart;
- (id)viewFadingInFromCustomAlpha;
- (id)viewUsingEaseInCurve;
- (id)viewUsingEaseOutCurve;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

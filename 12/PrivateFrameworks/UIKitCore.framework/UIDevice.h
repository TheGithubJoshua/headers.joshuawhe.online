<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIDevice : NSObject {
    float  _batteryLevel;
    struct { 
        unsigned int batteryMonitoringEnabled : 1; 
        unsigned int proximityMonitoringEnabled : 1; 
        unsigned int expectsFaceContactInLandscape : 1; 
        unsigned int orientation : 3; 
        unsigned int batteryState : 2; 
        unsigned int proximityState : 1; 
        unsigned int hasTouchPadOverride : 1; 
        unsigned int hasTouchPad : 1; 
    }  _deviceFlags;
    long long  _numDeviceOrientationObservers;
}

@property (setter=_setBacklightLevel:, nonatomic) float _backlightLevel;
@property (nonatomic, readonly) bool _supportsPencil;
@property (nonatomic, readonly) float batteryLevel;
@property (getter=isBatteryMonitoringEnabled, nonatomic) bool batteryMonitoringEnabled;
@property (nonatomic, readonly) long long batteryState;
@property (nonatomic, readonly, retain) NSString *buildVersion;
@property (getter=_feedbackSupportLevel, nonatomic, readonly) long long feedbackSupportLevel;
@property (getter=isGeneratingDeviceOrientationNotifications, nonatomic, readonly) bool generatesDeviceOrientationNotifications;
@property (nonatomic, readonly) NSUUID *identifierForVendor;
@property (nonatomic, readonly) NSString *localizedModel;
@property (nonatomic, readonly) NSString *model;
@property (getter=isMultitaskingSupported, nonatomic, readonly) bool multitaskingSupported;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic) long long orientation;
@property (nonatomic, readonly) long long orientation;
@property (getter=isProximityMonitoringEnabled, nonatomic) bool proximityMonitoringEnabled;
@property (nonatomic, readonly) bool proximityState;
@property (nonatomic, readonly) NSString *systemName;
@property (nonatomic, readonly) NSString *systemVersion;
@property (nonatomic, readonly) long long userInterfaceIdiom;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

+ (bool)_hasHomeButton;
+ (bool)_isLowEnd;
+ (bool)_isWatch;
+ (bool)_isWatchCompanion;
+ (id)currentDevice;
+ (long long)currentDeviceOrientationAllowingAmbiguous:(bool)arg1;
+ (id)modelSpecificLocalizedStringKeyForKey:(id)arg1;

- (float)_backlightLevel;
- (void)_clearGraphicsQualityOverride;
- (id)_deviceInfoForKey:(struct __CFString { }*)arg1;
- (void)_enableDeviceOrientationEvents:(bool)arg1;
- (long long)_feedbackSupportLevel;
- (long long)_graphicsQuality;
- (bool)_hasGraphicsQualityOverride;
- (bool)_hasTouchPad;
- (bool)_isSystemSoundEnabled;
- (long long)_keyboardGraphicsQuality;
- (long long)_nativeScreenGamut;
- (void)_playInputDeleteSound;
- (void)_playInputSelectSound;
- (void)_playSystemSound:(unsigned int)arg1;
- (long long)_predictionGraphicsQuality;
- (void)_registerForSystemSounds:(id)arg1;
- (void)_setActiveUserInterfaceIdiom:(long long)arg1;
- (void)_setBacklightLevel:(float)arg1;
- (void)_setBatteryLevel:(float)arg1;
- (void)_setBatteryState:(long long)arg1;
- (void)_setExpectsFaceContactInLandscape:(bool)arg1;
- (void)_setGraphicsQualityOverride:(long long)arg1;
- (void)_setHasTouchPad:(bool)arg1;
- (void)_setProximityState:(bool)arg1;
- (float)_softwareDimmingAlpha;
- (bool)_supportsDeepColor;
- (bool)_supportsForceTouch;
- (bool)_supportsPencil;
- (id)_tapticEngine;
- (void)_unregisterForSystemSounds:(id)arg1;
- (void)_updateSystemSoundActiveStatus:(id)arg1;
- (float)batteryLevel;
- (long long)batteryState;
- (void)beginGeneratingDeviceOrientationNotifications;
- (id)buildVersion;
- (void)endGeneratingDeviceOrientationNotifications;
- (id)identifierForVendor;
- (bool)isBatteryMonitoringEnabled;
- (bool)isGeneratingDeviceOrientationNotifications;
- (bool)isMultitaskingSupported;
- (bool)isProximityMonitoringEnabled;
- (id)localizedModel;
- (id)model;
- (id)name;
- (long long)orientation;
- (void)playInputClick;
- (bool)proximityState;
- (void)setBatteryMonitoringEnabled:(bool)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 animated:(bool)arg2;
- (void)setProximityMonitoringEnabled:(bool)arg1;
- (id)systemName;
- (id)systemVersion;
- (long long)userInterfaceIdiom;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

- (bool)cn_hasSensorArray;

// Image: /System/Library/PrivateFrameworks/CameraEffectsKit.framework/CameraEffectsKit

- (bool)CFX_disableExpensiveFilters;
- (bool)_deviceHasDualBackCam;
- (bool)_deviceHasTrueDepth;
- (bool)allowsDepthFromDualBackCamera;
- (double)aspectRatio;
- (bool)canDecodeHEVC2160P;
- (bool)canEncode2160P;
- (bool)canEncode2160P:(bool)arg1;
- (bool)canEncodeHEVC2160P;
- (id)deviceCharacteristicsDict;
- (bool)enoughMemoryFor2160P;
- (bool)enoughMemoryForRendering12MPPhoto;
- (bool)enoughPowerFor2160P;
- (bool)enoughPowerForLargerPhotoThumbnails;
- (bool)enoughPowerForStyleTransfer;
- (bool)enoughPowerForUIBlur;
- (long long)freeMemory;
- (bool)hasDualBackCam;
- (bool)hasMoreThan1GBOfMemory;
- (bool)hasPlentyOfMemory;
- (double)imageScale;
- (bool)isLargePhone;
- (bool)isSelfieCompatible;
- (bool)isWidePhone;
- (double)maxPixelsForImage:(bool)arg1;
- (long long)memorySize;
- (int)numberOfCPU;
- (id)orientationString;
- (int)osBuildNumber:(id)arg1;
- (bool)osVersionAtLeast:(id)arg1;
- (struct CGSize { double x1; double x2; })screenBounds;
- (bool)screenCanShow2160P;
- (double)screenHeight;
- (struct CGSize { double x1; double x2; })squareCompositionSize;
- (double)thumbnailScale;

// Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI

- (long long)cam_initialLayoutStyle;

// Image: /System/Library/PrivateFrameworks/ControlCenterUIKit.framework/ControlCenterUIKit

+ (id)_ccuiDevicesIncapableOfGroupRendering;

- (bool)ccuiSupportsGroupRendering;

// Image: /System/Library/PrivateFrameworks/DocumentCamera.framework/DocumentCamera

+ (bool)dc_requiresCompactLandscapeIcons;

// Image: /System/Library/PrivateFrameworks/DrawingKit.framework/DrawingKit

- (bool)dk_deviceSupportsGL;

// Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI

+ (id)hu_modelSpecificLocalizedStringKeyWithGreenTeaForKey:(id)arg1;

// Image: /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit

+ (id)mt_lowQualityDevicesForBaseLuminanceOverlay;
+ (id)mt_lowQualityDevicesForDynamicBlurRadius;
+ (id)mt_mediumQualityDevicesForDynamicBlurRadius;

- (long long)mt_baseLuminanceOverlayGraphicsQuality;
- (id)mt_currentProduct;
- (long long)mt_dynamicBlurRadiusGraphicsQuality;

// Image: /System/Library/PrivateFrameworks/Memories.framework/Memories

- (bool)canEncode2160P;
- (bool)enoughMemoryFor2160P;
- (bool)enoughMemoryForRendering12MPPhoto;
- (bool)enoughPowerFor2160P;
- (bool)enoughPowerForLargerPhotoThumbnails;
- (long long)freeMemory;
- (bool)hasMoreThan1GBOfMemory;
- (bool)hasPlentyOfMemory;
- (bool)isLargePhone;
- (bool)isWidePhone;
- (long long)memorySize;
- (int)numberOfCPU;
- (id)orientationString;
- (bool)osVersionAtLeast:(id)arg1;
- (bool)screenCanShow2160P;
- (bool)sufficientOomphForZoomedRenderScale;

// Image: /System/Library/PrivateFrameworks/NotesUI.framework/NotesUI

+ (bool)ic_isLargeiPad;
+ (bool)ic_isPlusiPhone;
+ (bool)ic_isiPad;
+ (bool)ic_isiPhone;

// Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport

+ (id)platformString;

// Image: /System/Library/PrivateFrameworks/Silex.framework/Silex

+ (bool)sx_isSpectreDevice;

// Image: /System/Library/PrivateFrameworks/SlideshowKit.framework/Frameworks/OpusFoundation.framework/OpusFoundation

+ (id)platform;

// Image: /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation

- (id)_currentProduct;
- (id)_deviceInfoForKey:(struct __CFString { }*)arg1;
- (long long)_graphicsQualityIncludingMediumN41:(bool)arg1;
- (id)_lowQualityDevicesForCoverSheetBlur;
- (id)_lowQualityDevicesForDashBoardPresentation;
- (id)_lowQualityDevicesForHomeScreenBlur;
- (id)_lowQualityDevicesForSearchTransitions;
- (id)_mediumQualityDevicesForCoverSheetBlur;
- (id)_mediumQualityDevicesForHomeScreenBlur;
- (id)_mediumQualityProductsIncludingN41:(bool)arg1;
- (long long)sbf_bannerGraphicsQuality;
- (long long)sbf_controlCenterGraphicsQuality;
- (long long)sbf_coverSheetBlurGraphicsQuality;
- (long long)sbf_dashBoardPresentationGraphicsQuality;
- (long long)sbf_homeScreenBlurGraphicsQuality;
- (long long)sbf_searchTransitionGraphicsQuality;

// Image: /System/Library/PrivateFrameworks/TSUtility.framework/TSUtility

+ (id)platformString;

// Image: /System/Library/PrivateFrameworks/WiFiKitUI.framework/WiFiKitUI

+ (bool)currentIsIPad;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

+ (id)platformString;
+ (bool)tsk_landscapePhoneUI;
+ (bool)tsk_padUI;
+ (bool)tsk_phoneDevice;
+ (bool)tsk_phoneUI;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

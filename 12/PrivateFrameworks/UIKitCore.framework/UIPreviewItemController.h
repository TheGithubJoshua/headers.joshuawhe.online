<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIPreviewItemController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIPreviewItemController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIPreviewItemController : NSObject <UIInteractionProgressObserver, UIPreviewInteractionControllerDelegate> {
    bool  _contentManagedByClient;
    <UIPreviewItemDelegate> * _delegate;
    bool  _interactionInProgress;
    double  _lastPreviewIndicatorAnimationTimestamp;
    MLULookupItem * _lookupItem;
    UIViewController * _presentedViewController;
    UIViewController * _presentingViewController;
    NSDictionary * _previewData;
    double  _previewIndicatorAnimationTargetAlpha;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _previewIndicatorBoundingRect;
    CADisplayLink * _previewIndicatorDisplayLink;
    UIImageView * _previewIndicatorImageView;
    UIView * _previewIndicatorSnapshotView;
    bool  _previewIndicatorUsesStandardAnimation;
    UIView * _previewIndicatorView;
    UIPreviewInteractionController * _previewInteractionController;
    UIPreviewItemController * _strongSelf;
    long long  _type;
    UIView * _view;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UIPreviewItemDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *gestureRecognizers;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool interactionInProgress;
@property (nonatomic, readonly) UIGestureRecognizer *presentationGestureRecognizer;
@property (nonatomic, readonly) UIGestureRecognizer *presentationSecondaryGestureRecognizer;
@property (nonatomic, readonly) UIViewController *presentedViewController;
@property (nonatomic, readonly) UIViewController *presentingViewController;
@property (nonatomic, readonly) NSDictionary *previewData;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long type;
@property (nonatomic, readonly) UIView *view;

- (void).cxx_destruct;
- (bool)_isMobileSafariRestricted;
- (bool)_shouldCancelPreviewWithNegativeFeedback;
- (void)clearPreviewIndicator;
- (void)dealloc;
- (id)delegate;
- (id)gestureRecognizers;
- (id)init;
- (id)initWithView:(id)arg1;
- (bool)interactionInProgress;
- (void)interactionProgress:(id)arg1 didEnd:(bool)arg2;
- (void)interactionProgressDidUpdate:(id)arg1;
- (bool)performsCustomCommitTransitionForPreviewInteractionController:(id)arg1;
- (bool)performsViewControllerCommitTransitionForPreviewInteractionController:(id)arg1;
- (void)preparePreviewIndicatorViewInSourceView:(id)arg1 updateScreen:(bool)arg2;
- (id)presentationGestureRecognizer;
- (id)presentationSecondaryGestureRecognizer;
- (id)presentedViewController;
- (id)presentingViewController;
- (id)previewData;
- (void)previewInteractionController:(id)arg1 didDismissViewController:(id)arg2 committing:(bool)arg3;
- (void)previewInteractionController:(id)arg1 interactionProgress:(id)arg2 forRevealAtLocation:(struct CGPoint { double x1; double x2; })arg3 inSourceView:(id)arg4 containerView:(id)arg5;
- (void)previewInteractionController:(id)arg1 performCommitForPreviewViewController:(id)arg2 committedViewController:(id)arg3;
- (void)previewInteractionController:(id)arg1 performCustomCommitForPreviewViewController:(id)arg2 completion:(id /* block */)arg3;
- (bool)previewInteractionController:(id)arg1 shouldUseStandardRevealTransformForPreviewingAtLocation:(struct CGPoint { double x1; double x2; })arg2 inView:(id)arg3;
- (id)previewInteractionController:(id)arg1 viewControllerForPreviewingAtPosition:(struct CGPoint { double x1; double x2; })arg2 inView:(id)arg3 presentingViewController:(id*)arg4;
- (void)previewInteractionController:(id)arg1 willPresentViewController:(id)arg2 forPosition:(struct CGPoint { double x1; double x2; })arg3 inSourceView:(id)arg4;
- (bool)previewInteractionControllerShouldPerformCompatibilityCommitTransition:(id)arg1;
- (id)previewViewControllerForPosition:(struct CGPoint { double x1; double x2; })arg1 inSourceView:(id)arg2 documentProperties:(id)arg3;
- (void)setDelegate:(id)arg1;
- (void)setupPreviewIndicatorInSourceView:(id)arg1;
- (void)startInteraction;
- (void)stopInteraction;
- (long long)type;
- (void)updatePreviewIndicatorAnimation:(id)arg1;
- (id)view;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

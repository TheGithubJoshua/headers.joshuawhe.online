<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIApplicationModalProgressController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIApplicationModalProgressController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIApplicationModalProgressController : NSObject {
    UIAlertController * _alertController;
    bool  _disableButtonAction;
    id /* block */  _dismissalHandler;
    double  _displayDelaySeconds;
    double  _displayStartTime;
    NSTimer * _hideTimer;
    id /* block */  _preDisplayTestBlock;
    NSProgress * _progress;
    _UIProgressView * _progressView;
    NSTimer * _showTimer;
    NSProgress * _urlProgress;
    UIWindow * _window;
}

@property (getter=_alertController, setter=_setAlertController:, nonatomic, retain) UIAlertController *alertController;
@property (getter=_dismissalHandler, setter=_setDismissalHandler:, nonatomic, copy) id /* block */ dismissalHandler;
@property (nonatomic) double displayDelaySeconds;
@property (getter=_displayStartTime, setter=_setDisplayStartTime:, nonatomic) double displayStartTime;
@property (getter=_hideTimer, setter=_setHideTimer:, nonatomic, retain) NSTimer *hideTimer;
@property (nonatomic, copy) NSString *message;
@property (getter=_preDisplaySetBlock, setter=_setPreDisplayTestBlock:, nonatomic, copy) id /* block */ preDisplayTestBlock;
@property (getter=_progress, setter=_setProgress:, nonatomic, retain) NSProgress *progress;
@property (getter=_showTimer, setter=_setShowTimer:, nonatomic, retain) NSTimer *showTimer;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, retain) NSProgress *urlProgress;
@property (getter=_window, setter=_setWindow:, nonatomic, retain) UIWindow *window;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (id)_alertController;
- (void)_callAndClearDismissalHandlerWasDismissedByUser:(bool)arg1;
- (void)_dismissButtonAction:(id)arg1;
- (id /* block */)_dismissalHandler;
- (double)_displayStartTime;
- (void)_hideImmediatelyWasDismissedByUser:(bool)arg1;
- (id)_hideTimer;
- (void)_hideTimerAction:(id)arg1;
- (id /* block */)_preDisplaySetBlock;
- (id)_progress;
- (void)_reset;
- (void)_setAlertController:(id)arg1;
- (void)_setDismissalHandler:(id /* block */)arg1;
- (void)_setDisplayStartTime:(double)arg1;
- (void)_setHideTimer:(id)arg1;
- (void)_setPreDisplayTestBlock:(id /* block */)arg1;
- (void)_setProgress:(id)arg1;
- (void)_setShowTimer:(id)arg1;
- (void)_setWindow:(id)arg1;
- (id)_showTimer;
- (void)_showTimerAction:(id)arg1;
- (id)_window;
- (double)displayDelaySeconds;
- (void)displayForCopyingFileAtURL:(id)arg1 toURL:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)displayForDownloadingURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)displayForDownloadingURL:(id)arg1 copyToURL:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)displayWithTitle:(id)arg1 message:(id)arg2 progress:(id)arg3 buttonTitle:(id)arg4 preDisplayTestBlock:(id /* block */)arg5 dismissalHandler:(id /* block */)arg6;
- (void)hideAfterDelay:(double)arg1 forceCompletion:(bool)arg2 afterMinimumUptimeDismissalHandler:(id /* block */)arg3;
- (void)hideAfterMinimumUptimeWithDismissalHandler:(id /* block */)arg1;
- (id)init;
- (id)message;
- (void)reconfigureWithTitle:(id)arg1 message:(id)arg2 progress:(id)arg3 buttonTitle:(id)arg4 dismissalHandler:(id /* block */)arg5;
- (void)setDisplayDelaySeconds:(double)arg1;
- (void)setMessage:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUrlProgress:(id)arg1;
- (id)title;
- (id)urlProgress;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

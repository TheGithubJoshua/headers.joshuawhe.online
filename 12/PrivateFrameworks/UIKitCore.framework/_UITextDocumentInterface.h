<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UITextDocumentInterface.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UITextDocumentInterface.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UITextDocumentInterface : UIInputViewControllerInterface <UITextDocumentProxy> {
    _UIInputViewControllerOutput * _controllerOutput;
    _UIInputViewControllerState * _controllerState;
    <_UITextDocumentInterfaceDelegate> * _delegate;
    TIKeyboardOutput * _keyboardOutput;
}

@property (nonatomic) long long autocapitalizationType;
@property (nonatomic) long long autocorrectionType;
@property (getter=_controllerOutput, nonatomic, retain) _UIInputViewControllerOutput *controllerOutput;
@property (getter=_controllerState, nonatomic, retain) _UIInputViewControllerState *controllerState;
@property (readonly, copy) NSString *debugDescription;
@property (getter=_delegate, nonatomic) <_UITextDocumentInterfaceDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSString *documentContextAfterInput;
@property (nonatomic, readonly) NSString *documentContextBeforeInput;
@property (nonatomic, readonly, copy) NSUUID *documentIdentifier;
@property (nonatomic, readonly) UITextInputMode *documentInputMode;
@property (getter=_documentState, nonatomic, readonly) TIDocumentState *documentState;
@property (nonatomic) bool enablesReturnKeyAutomatically;
@property (nonatomic, readonly) bool hasText;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long keyboardAppearance;
@property (getter=_keyboardOutput, nonatomic, readonly) TIKeyboardOutput *keyboardOutput;
@property (nonatomic) long long keyboardType;
@property (nonatomic, copy) UITextInputPasswordRules *passwordRules;
@property (nonatomic) long long returnKeyType;
@property (getter=isSecureTextEntry, nonatomic) bool secureTextEntry;
@property (nonatomic, readonly) NSString *selectedText;
@property (nonatomic) long long smartDashesType;
@property (nonatomic) long long smartInsertDeleteType;
@property (nonatomic) long long smartQuotesType;
@property (nonatomic) long long spellCheckingType;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *textContentType;
@property (getter=_textInputTraits, nonatomic, readonly) TITextInputTraits *textInputTraits;

- (id)_controllerOutput;
- (id)_controllerState;
- (void)_createControllerOutputIfNecessary;
- (id)_delegate;
- (void)_didPerformOutputOperation;
- (id)_documentState;
- (void)_handleInputViewControllerState:(id)arg1;
- (id)_keyboardOutput;
- (void)_setHasDictation:(bool)arg1;
- (void)_setInputModeList:(long long)arg1 touchBegan:(double)arg2 fromLocation:(struct CGPoint { double x1; double x2; })arg3 updatePoint:(struct CGPoint { double x1; double x2; })arg4;
- (void)_setPrimaryLanguage:(id)arg1;
- (void)_setProceedShouldReturnIfPossibleForASP;
- (void)_setShouldAdvanceInputMode;
- (void)_setShouldDismiss;
- (id)_textInputTraits;
- (void)_willPerformOutputOperation;
- (void)adjustTextPositionByCharacterOffset:(long long)arg1;
- (long long)autocapitalizationType;
- (long long)autocorrectionType;
- (void)dealloc;
- (void)deleteBackward;
- (id)documentContextAfterInput;
- (id)documentContextBeforeInput;
- (id)documentIdentifier;
- (id)documentInputMode;
- (bool)enablesReturnKeyAutomatically;
- (bool)hasText;
- (void)insertText:(id)arg1;
- (bool)isSecureTextEntry;
- (long long)keyboardAppearance;
- (long long)keyboardType;
- (bool)needsInputModeSwitchKey;
- (long long)returnKeyType;
- (id)selectedText;
- (void)setControllerOutput:(id)arg1;
- (void)setControllerState:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setForwardingInterface:(id)arg1;
- (long long)smartDashesType;
- (long long)smartInsertDeleteType;
- (long long)smartQuotesType;
- (long long)spellCheckingType;
- (id)textContentType;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

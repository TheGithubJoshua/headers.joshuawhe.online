<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UISearchDisplayController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UISearchDisplayController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UISearchDisplayController : NSObject <_UIScrollViewScrollObserver_Internal> {
    double  __activationGapHeight;
    double  __additionalNonCollapsingHeightAboveSearchBar;
    UIButton * _animatingAppearanceNavigationButton;
    double  _animatingAppearanceNavigationSearchBarWidth;
    _UINavigationControllerPalette * _attachedNavigationPalette;
    UISearchDisplayControllerContainerView * _containerView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _containingScrollViewContentOffset;
    struct __CFArray { } * _containingScrollViews;
    <UISearchDisplayDelegate> * _delegate;
    _UISearchControllerDidScrollDelegate * _didScrollDelegate;
    UIColor * _dimmingOverlayColor;
    UIView * _dimmingView;
    bool  _displaysSearchBarInNavigationBar;
    double  _lastFooterAdjustment;
    double  _lastKeyboardAdjustment;
    unsigned long long  _navigationBarSearchFieldSizing;
    id  _navigationControllerBookkeeper;
    UINavigationItem * _navigationItem;
    UILabel * _noResultsLabel;
    NSString * _noResultsMessage;
    UIPopoverController * _popoverController;
    NSString * _resultsTitle;
    UIScrollView * _savedContainingScrollView;
    unsigned long long  _savedSearchBarResizingMask;
    NSArray * _savedSelectedCellsWhenViewWillAppear;
    UISearchBar * _searchBar;
    struct { 
        unsigned int visible : 1; 
        unsigned int animating : 1; 
        unsigned int hidIndexBar : 1; 
        unsigned int hidNavigationBar : 1; 
        unsigned int noResultsMessageVisible : 1; 
        unsigned int noResultsMessageAutoDisplay : 1; 
        unsigned int navigationBarHidingEnabled : 1; 
        unsigned int dimTableViewOnEmptySearchString : 1; 
        unsigned int isRotatingWithPopover : 1; 
        unsigned int cancelButtonManagementDisabled : 1; 
        unsigned int allowDisablingNavigationBarHiding : 1; 
        unsigned int showsResultsForEmptyField : 1; 
        unsigned int searchBarCanBeHoisted : 1; 
        unsigned int animatingSearchResultsDisappearance : 1; 
        unsigned int navigationBarShadowWasHidden : 1; 
        unsigned int hoistingSearchBar : 1; 
    }  _searchDisplayControllerFlags;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _searchFieldInNavigationBarFrame;
    long long  _searchResultsTableViewStyle;
    UITableView * _tableView;
    UIView * _tableViewBackgroundHeaderView;
    <UITableViewDataSource> * _tableViewDataSource;
    <UITableViewDelegate> * _tableViewDelegate;
    long long  _unactivatedBarPosition;
    UIViewController * _viewController;
}

@property (nonatomic) double _activationGapHeight;
@property (nonatomic) double _additionalNonCollapsingHeightAboveSearchBar;
@property (getter=isActive, nonatomic) bool active;
@property (nonatomic) bool automaticallyShowsNoResultsMessage;
@property (getter=_isCancelButtonManagementDisabled, setter=_setCancelButtonManagementDisabled:, nonatomic) bool cancelButtonManagementDisabled;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UISearchDisplayDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool dimTableViewOnEmptySearchString;
@property (nonatomic) bool displaysSearchBarInNavigationBar;
@property (readonly) unsigned long long hash;
@property (getter=isNavigationBarHidingEnabled, nonatomic) bool navigationBarHidingEnabled;
@property (nonatomic) unsigned long long navigationBarSearchFieldSizing;
@property (nonatomic, readonly) UINavigationItem *navigationItem;
@property (nonatomic, copy) NSString *noResultsMessage;
@property (nonatomic) bool noResultsMessageVisible;
@property (nonatomic, readonly) UISearchBar *searchBar;
@property (nonatomic, readonly) UIViewController *searchContentsController;
@property (nonatomic) <UITableViewDataSource> *searchResultsDataSource;
@property (nonatomic) <UITableViewDelegate> *searchResultsDelegate;
@property (nonatomic, readonly) UITableView *searchResultsTableView;
@property (nonatomic, copy) NSString *searchResultsTitle;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (double)_activationGapHeight;
- (double)_additionalNonCollapsingHeightAboveSearchBar;
- (void)_adjustTableViewContentInsetsAndOffsetsIgnoringCurrent:(bool)arg1;
- (bool)_allowDisablingNavigationBarHiding;
- (void)_animateNavigationBarSearchBarAppearance:(id)arg1;
- (bool)_areSearchContentsSplitViewMaster;
- (void)_cleanUpSearchBar;
- (void)_clearSavedSelectedCellsWeUsedWhenHedgingOurBets;
- (void)_clearViewController;
- (void)_configureContainerView;
- (void)_configureNewSearchBar;
- (void)_configureSearchBarForTableView;
- (bool)_containedInPopover;
- (id)_containerView;
- (id)_containingTableView;
- (id)_containingViewOfClass:(Class)arg1;
- (id)_createPopoverController;
- (void)_destroyManagedTableView;
- (id)_dimmingOverlayColor;
- (double)_dimmingViewAlpha;
- (id)_dimmingViewColor;
- (void)_disableParentScrollViews;
- (void)_enableParentScrollViews;
- (void)_hideVisibleRefreshControl;
- (void)_hoistSearchBar;
- (void)_indexBarFrameChanged:(id)arg1;
- (bool)_isCancelButtonManagementDisabled;
- (bool)_isSearchBarInBar;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_managedTableViewDidScroll;
- (id)_noResultsMessageLabel;
- (void)_observeScrollViewDidScroll:(id)arg1;
- (void)_popoverClearButtonPressed:(id)arg1;
- (void)_popoverKeyboardDidHide:(id)arg1;
- (void)_popoverKeyboardDidShow:(id)arg1;
- (void)_restoreSelectedCellsInCaseViewDidNotReallyAppear;
- (void)_saveSelectedRowsInCaseViewDoesNotReallyAppear;
- (bool)_searchBarInNavigationControllerComponent;
- (bool)_searchBarShouldScrollToVisible:(id)arg1;
- (void)_searchBarSuperviewChanged;
- (void)_searchBarSuperviewWillChange;
- (void)_sendDelegateDidBeginDidEndSearch;
- (void)_setAllowDisablingNavigationBarHiding:(bool)arg1;
- (void)_setCancelButtonManagementDisabled:(bool)arg1;
- (void)_setDimmingOverlayColor:(id)arg1;
- (void)_setShowsResultsForEmptyField:(bool)arg1;
- (void)_setTableViewVisible:(bool)arg1 inView:(id)arg2;
- (void)_setupNoResultsLabelIfNecessary;
- (bool)_shouldAccountForStatusBarHeight;
- (bool)_showsResultsForEmptyField;
- (double)_statusBarHeight;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_tableViewContentInsets;
- (id)_topShadowView;
- (double)_updateNavigationPalette;
- (void)_updateNoSearchResultsMessageVisiblity;
- (void)_updatePinnedSearchBar;
- (void)_updateSearchBarMaskIfNecessary;
- (void)_updateTableHeaderBackgroundViewInTableView:(id)arg1 amountScrolledUnder:(double)arg2;
- (void)_watchContainingTableViewForScrolling:(bool)arg1;
- (bool)automaticallyShowsNoResultsMessage;
- (void)dealloc;
- (id)delegate;
- (bool)dimTableViewOnEmptySearchString;
- (bool)displaysSearchBarInNavigationBar;
- (void)encodeWithCoder:(id)arg1;
- (bool)hidNavigationBar;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithSearchBar:(id)arg1 contentsController:(id)arg2;
- (id)initWithSearchBar:(id)arg1 contentsController:(id)arg2 searchResultsTableViewStyle:(long long)arg3;
- (bool)isActive;
- (bool)isNavigationBarHidingEnabled;
- (unsigned long long)navigationBarSearchFieldSizing;
- (void)navigationControllerDidCancelShowingViewController:(id)arg1;
- (void)navigationControllerDidShowViewController:(id)arg1;
- (void)navigationControllerWillShowViewController:(id)arg1;
- (id)navigationItem;
- (id)noResultsMessage;
- (bool)noResultsMessageVisible;
- (void)popoverController:(id)arg1 animationCompleted:(long long)arg2;
- (bool)popoverControllerShouldDismissPopover:(id)arg1;
- (id)searchBar;
- (void)searchBar:(id)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBarResultsListButtonClicked:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (id)searchContentsController;
- (id)searchResultsDataSource;
- (id)searchResultsDelegate;
- (id)searchResultsTableView;
- (id)searchResultsTitle;
- (void)setActive:(bool)arg1;
- (void)setActive:(bool)arg1 animated:(bool)arg2;
- (void)setAutomaticallyShowsNoResultsMessage:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimTableViewOnEmptySearchString:(bool)arg1;
- (void)setDisplaysSearchBarInNavigationBar:(bool)arg1;
- (void)setNavigationBarHidingEnabled:(bool)arg1;
- (void)setNavigationBarSearchFieldSizing:(unsigned long long)arg1;
- (void)setNoResultsMessage:(id)arg1;
- (void)setNoResultsMessageVisible:(bool)arg1;
- (void)setSearchBar:(id)arg1;
- (void)setSearchContentsController:(id)arg1;
- (void)setSearchResultsDataSource:(id)arg1;
- (void)setSearchResultsDelegate:(id)arg1;
- (void)setSearchResultsTitle:(id)arg1;
- (void)set_activationGapHeight:(double)arg1;
- (void)set_additionalNonCollapsingHeightAboveSearchBar:(double)arg1;
- (void)showHideAnimationDidFinish;
- (void)windowDidRotate:(id)arg1;
- (void)windowWillAnimateRotation:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

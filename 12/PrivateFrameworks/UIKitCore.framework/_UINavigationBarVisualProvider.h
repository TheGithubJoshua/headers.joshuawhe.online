<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UINavigationBarVisualProvider.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UINavigationBarVisualProvider.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UINavigationBarVisualProvider : NSObject {
    UINavigationBar * _navigationBar;
    NSDictionary * _overrides;
    _UINavigationControllerRefreshControlHost * _refreshControlHost;
    _UINavigationBarItemStack * _stack;
    bool  _usesLegacyUI;
}

@property (nonatomic, readonly) long long currentContentSize;
@property (nonatomic, readonly) UINavigationBar *navigationBar;
@property (nonatomic, retain) _UINavigationControllerRefreshControlHost *refreshControlHost;
@property (nonatomic, retain) _UINavigationBarItemStack *stack;
@property (nonatomic, readonly) bool wantsLargeTitleDisplayed;

+ (bool)supportsRefreshControlHosting;

- (void).cxx_destruct;
- (id)_accessibility_HUDItemForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)_accessibility_controlToActivateForHUDGestureLiftAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_shim_30244716;
- (bool)_shim_34415965;
- (id)_shim_backIndicatorView;
- (id)_shim_backdropGroupName;
- (long long)_shim_backdropStyle;
- (double)_shim_backgroundAlpha;
- (double)_shim_backgroundHeight;
- (id)_shim_compatibilityBackgroundView;
- (id)_shim_contentView;
- (id)_shim_customHitTest:(struct CGPoint { double x1; double x2; })arg1 forView:(id)arg2;
- (bool)_shim_disableBlurTinting;
- (id)_shim_displayViewsIncludingHiddenBackButtonViews:(bool)arg1;
- (id)_shim_layoutView;
- (void)_shim_popForCarplayPressAtFakePoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_shim_pressBackIndicator:(bool)arg1 initialPress:(bool)arg2;
- (id)_shim_promptText;
- (void)_shim_setBackdropGroupName:(id)arg1;
- (void)_shim_setCustomBackgroundView:(id)arg1;
- (void)_shim_setDisableBlurTinting:(bool)arg1;
- (void)_shim_setPromptText:(id)arg1 animated:(bool)arg2;
- (void)_shim_setShadowAlpha:(double)arg1;
- (void)_shim_setUseContentView:(bool)arg1;
- (double)_shim_shadowAlpha;
- (bool)_shim_throwConstraintExceptions;
- (void)_shim_touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_shim_touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_shim_touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)_shim_touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)_shim_updateBackIndicator;
- (void)_shim_updateBackdropView;
- (void)_shim_updateBackgroundViewIgnoringFlag;
- (void)_shim_updateUserContentGuideForTopItem:(id)arg1 backItem:(id)arg2;
- (id)_shim_userContentGuide;
- (bool)_shim_wantsCustomTouchHandlingForTouches:(id)arg1;
- (void)_updateBackground;
- (void)_updateTitleViewForOpacityChange;
- (void)animateForSearchPresentation:(bool)arg1;
- (void)barSizeChanged;
- (bool)canHandleStatusBarTouchAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)changeAppearance;
- (void)changeLayout;
- (long long)currentContentSize;
- (bool)gestureRecognizerShouldBegin:(id)arg1 defaultAnswer:(id /* block */)arg2;
- (struct { double x1; double x2; })heightRangeFittingWidth:(double)arg1;
- (id)initWithNavigationBar:(id)arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (void)intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (void)invalidateIntrinsicContentSize;
- (void)layoutSubviews;
- (id)navigationBar;
- (void)popAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (id)preferredFocusedView;
- (void)prepare;
- (void)prepareForPop;
- (void)prepareForPush;
- (void)provideViewsForContents:(id)arg1 topItem:(id)arg2 backItem:(id)arg3;
- (void)pushAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)recordBarSize:(struct CGSize { double x1; double x2; })arg1;
- (id)refreshControlHost;
- (void)safeAreaInsetsDidChange;
- (void)setBackButtonVisible:(bool)arg1 animated:(bool)arg2;
- (void)setRefreshControlHost:(id)arg1;
- (void)setSemanticContentAttribute:(long long)arg1;
- (void)setStack:(id)arg1;
- (void)setupTopNavigationItem;
- (bool)shouldUseHeightRangeFittingWidth;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)stack;
- (void)stackDidChangeFrom:(id)arg1;
- (long long)statusBarStyle;
- (void)teardown;
- (void)traitCollectionDidChange:(id)arg1;
- (void)updateArchivedSubviews:(id)arg1;
- (void)updateConstraints;
- (void)updateTopNavigationItemAnimated:(bool)arg1;
- (void)updateTopNavigationItemTitleView;
- (bool)wantsLargeTitleDisplayed;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

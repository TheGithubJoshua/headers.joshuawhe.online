<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIPreviewInteractionClassicImpl.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIPreviewInteractionClassicImpl.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIPreviewInteractionClassicImpl : NSObject <_UIPreviewInteractionImpl> {
    CADisplayLink * _continuousEvaluationDisplayLink;
    _UIPreviewInteractionStateRecognizer * _currentInteractionStateRecognizer;
    _UIDeepPressAnalyzer * _deepPressAnalyzer;
    <UIPreviewInteractionDelegate> * _delegate;
    _UIStatesFeedbackGenerator * _feedbackGenerator;
    bool  _feedbackGeneratorTurnedOn;
    _UIPreviewInteractionHighlighter * _highlighter;
    UIPreviewInteraction * _previewInteraction;
    struct { 
        unsigned int delegatePreviewInteractionShouldBegin : 1; 
        unsigned int delegateDidUpdateCommitTransition : 1; 
        unsigned int delegateShouldFinishTransitionToPreview : 1; 
        unsigned int delegateShouldAutomaticallyTransitionToPreviewAfterDelay : 1; 
        unsigned int delegateHighlighterForPreviewTransition : 1; 
        unsigned int delegateViewControllerPresentationForPresentingViewController : 1; 
        unsigned int interactive : 1; 
        unsigned int delegateDidPreventInteraction : 1; 
        unsigned int interactionRequiresRestart : 1; 
        unsigned int interactionWasCancelled : 1; 
        unsigned int previousProgressWasNegativeOrZero : 1; 
        unsigned int currentState : 3; 
        unsigned int nextUpdateShouldTransitionToPreview : 1; 
        unsigned int nextPreviewShouldPreventHapticFeedback : 1; 
    }  _previewInteractionFlags;
    struct CGPoint { 
        double x; 
        double y; 
    }  _sceneReferenceLocationFromLatestUpdate;
    <_UIPreviewInteractionTouchForceProviding> * _systemTouchForceProvider;
    <_UIPreviewInteractionTouchForceProviding> * _touchForceProvider;
    UIView * _view;
    _UIPreviewInteractionViewControllerHelper * _viewControllerHelper;
    id  _viewControllerPresentationObserver;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <UIPreviewInteractionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) UIPreviewInteraction *previewInteraction;
@property (readonly) Class superclass;
@property (nonatomic, retain) <_UIPreviewInteractionTouchForceProviding> *touchForceProvider;
@property (nonatomic, readonly) UIView *view;

- (void).cxx_destruct;
- (void)_actuateFeedbackForStateIfNeeded:(long long)arg1;
- (void)_dismissPreviewViewControllerIfNeeded;
- (void)_endContinuousEvaluation;
- (void)_endHighlightingIfNeeded;
- (void)_endInteractionIfNeeded;
- (void)_endInteractiveStateTransitions;
- (void)_endUsingFeedbackIfNeeded;
- (void)_endViewControllerPresentationObserving;
- (id)_gestureRecognizerForExclusionRelationship;
- (void)_prepareForInteractionIfNeeded;
- (void)_prepareForViewControllerPresentationObserving;
- (void)_prepareHighlighterIfNeeded;
- (void)_prepareUsingFeedback;
- (void)_prepareUsingFeedbackIfNeeded;
- (void)_presentPreviewViewControllerIfNeeded;
- (void)_resetAfterInteraction;
- (bool)_shouldCancelTransitionToState:(long long)arg1;
- (void)_startPreviewAtLocation:(struct CGPoint { double x1; double x2; })arg1 inCoordinateSpace:(id)arg2;
- (void)_turnOffFeedbackGenerator;
- (void)_turnOnFeedbackGenerator;
- (void)_updateFeedbackTowardNextState:(long long)arg1 progress:(double)arg2;
- (void)_updateForContinuousEvaluation:(id)arg1;
- (void)_updateForCurrentTouchForceProvider;
- (void)_updateHighlighter:(double)arg1;
- (void)_updateInteractionStateRecognizerForTouchForce:(double)arg1 atTimestamp:(double)arg2 withCentroidAtLocation:(struct CGPoint { double x1; double x2; })arg3;
- (void)cancelInteraction;
- (void)dealloc;
- (id)delegate;
- (id)init;
- (id)initWithView:(id)arg1 previewInteraction:(id)arg2;
- (struct CGPoint { double x1; double x2; })locationInCoordinateSpace:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)previewInteraction;
- (void)setDelegate:(id)arg1;
- (void)setPreviewInteraction:(id)arg1;
- (void)setTouchForceProvider:(id)arg1;
- (id)touchForceProvider;
- (id)view;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

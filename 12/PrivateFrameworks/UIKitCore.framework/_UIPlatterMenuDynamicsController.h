<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_UIPlatterMenuDynamicsController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/_UIPlatterMenuDynamicsController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface _UIPlatterMenuDynamicsController : NSObject <_UIPlatterMenuPanningTransformerDelegate> {
    UIDynamicAnimator * _animator;
    UIView * _containerView;
    <_UIPlatterMenuDynamicsControllerDelegate> * _delegate;
    long long  _didPresentCount;
    UIAttachmentBehavior * _gestureAttachmentBehavior;
    struct CGPoint { 
        double x; 
        double y; 
    }  _initialTouchPoint;
    bool  _isCurrentlyUnderDirectManipulation;
    bool  _leadingSwipeActionViewSelected;
    double  _leadingSwipeEdgeMultiplier;
    _UIPlatterMenuSnapBehavior * _menuDismissedSnapBehavior;
    UIDynamicItemBehavior * _menuItemBehavior;
    _UIPlatterMenuSnapBehavior * _menuPresentedSnapBehavior;
    UIAttachmentBehavior * _menuVerticalLockAttachment;
    UIView * _menuView;
    UIDynamicItemBehavior * _noRotationBehavior;
    _UIDynamicItemObservingBehavior * _observingBehavior;
    _UIPlatterMenuPanningTransformer * _panningLockTransformer;
    <UIDynamicItem> * _platterItem;
    UIDynamicItemBehavior * _platterItemBehavior;
    UIAttachmentBehavior * _platterMenuAttachmentBehavior;
    UICollisionBehavior * _platterMenuCollisionBounds;
    UIAttachmentBehavior * _platterMenuSlidingAttachmentBehavior;
    _UIPlatterMenuSnapBehavior * _platterSnapBehavior;
    UIView * _platterView;
    long long  _state;
    _UIStatesFeedbackGenerator * _swipeFeedbackGenerator;
    bool  _trailingSwipeActionViewSelected;
    double  _trailingSwipeEdgeMultiplier;
}

@property (nonatomic, retain) UIDynamicAnimator *animator;
@property (nonatomic) UIView *containerView;
@property (nonatomic, readonly) struct CGVector { double x1; double x2; } currentTranslation;
@property (nonatomic, readonly) struct CGVector { double x1; double x2; } currentVelocity;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <_UIPlatterMenuDynamicsControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long didPresentCount;
@property (nonatomic, retain) UIAttachmentBehavior *gestureAttachmentBehavior;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGPoint { double x1; double x2; } initialTouchPoint;
@property (nonatomic) bool isCurrentlyUnderDirectManipulation;
@property (nonatomic) bool leadingSwipeActionViewSelected;
@property (nonatomic) double leadingSwipeEdgeMultiplier;
@property (nonatomic, retain) _UIPlatterMenuSnapBehavior *menuDismissedSnapBehavior;
@property (nonatomic, retain) UIDynamicItemBehavior *menuItemBehavior;
@property (nonatomic, retain) _UIPlatterMenuSnapBehavior *menuPresentedSnapBehavior;
@property (nonatomic, retain) UIAttachmentBehavior *menuVerticalLockAttachment;
@property (nonatomic) UIView *menuView;
@property (nonatomic, retain) UIDynamicItemBehavior *noRotationBehavior;
@property (nonatomic, retain) _UIDynamicItemObservingBehavior *observingBehavior;
@property (nonatomic, retain) _UIPlatterMenuPanningTransformer *panningLockTransformer;
@property (nonatomic) <UIDynamicItem> *platterItem;
@property (nonatomic, retain) UIDynamicItemBehavior *platterItemBehavior;
@property (nonatomic, retain) UIAttachmentBehavior *platterMenuAttachmentBehavior;
@property (nonatomic, retain) UICollisionBehavior *platterMenuCollisionBounds;
@property (nonatomic, retain) UIAttachmentBehavior *platterMenuSlidingAttachmentBehavior;
@property (nonatomic, retain) _UIPlatterMenuSnapBehavior *platterSnapBehavior;
@property (nonatomic) UIView *platterView;
@property (nonatomic) long long state;
@property (readonly) Class superclass;
@property (nonatomic, retain) _UIStatesFeedbackGenerator *swipeFeedbackGenerator;
@property (nonatomic) bool trailingSwipeActionViewSelected;
@property (nonatomic) double trailingSwipeEdgeMultiplier;

- (void).cxx_destruct;
- (void)_activateFeedbackIfNeeded;
- (void)_animateToPlatterDismissedWithDuration:(double)arg1 completion:(id /* block */)arg2;
- (void)_animateToPlatterPresentedWithVelocity:(struct CGVector { double x1; double x2; })arg1;
- (void)_beginInYLockedStatePresented;
- (void)_configureAnimator;
- (void)_configureFeedbackGenerator;
- (void)_deactivateFeedbackIfNeeded;
- (void)_fireConfirmFeedbackIfNeededForInitialSelectionState:(bool)arg1 finalSelectionState:(bool)arg2;
- (bool)_isPlatterInYLockedPosition;
- (void)_positionSwipeActionViewsForCurrentPlatterViewPosition;
- (long long)_stateForPosition:(struct CGPoint { double x1; double x2; })arg1 offset:(struct CGVector { double x1; double x2; })arg2 velocity:(struct CGVector { double x1; double x2; })arg3;
- (void)_updateSwipeEdgeMultipliersIfNeededForTouchPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)addBehaviorIfNotPresent:(id)arg1;
- (id)animator;
- (void)beginTransitionWithAnimatorUsingBehaviors:(id)arg1 observedItems:(id)arg2 stateIfCompleted:(long long)arg3;
- (struct CGPoint { double x1; double x2; })centerForCurrentPlatterPosition;
- (struct CGPoint { double x1; double x2; })centerForMenuPresentedRelativeToCurrentPlatter;
- (id)containerView;
- (struct CGVector { double x1; double x2; })currentTranslation;
- (struct CGVector { double x1; double x2; })currentVelocity;
- (void)dealloc;
- (id)delegate;
- (void)didBeginPanningWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)didEndPanningWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)didPanWithPoint:(struct CGPoint { double x1; double x2; })arg1;
- (long long)didPresentCount;
- (id)gestureAttachmentBehavior;
- (bool)hasBeenPresented;
- (id)initWithContainerView:(id)arg1 platterView:(id)arg2 menuView:(id)arg3 delegate:(id)arg4;
- (struct CGPoint { double x1; double x2; })initialTouchPoint;
- (bool)isCurrentlyUnderDirectManipulation;
- (bool)isDefaultAnimatorBehavior:(id)arg1;
- (bool)isMenuPresented;
- (bool)isMenuPresenting;
- (bool)isSelectingSwipeAction;
- (bool)leadingSwipeActionViewSelected;
- (double)leadingSwipeEdgeMultiplier;
- (void)lockIntoYAxis;
- (struct CGPoint { double x1; double x2; })menuCenter;
- (id)menuDismissedSnapBehavior;
- (id)menuItemBehavior;
- (id)menuPresentedSnapBehavior;
- (id)menuVerticalLockAttachment;
- (id)menuView;
- (struct CGVector { double x1; double x2; })modifiedOffsetForPosition:(struct CGPoint { double x1; double x2; })arg1 offset:(struct CGVector { double x1; double x2; })arg2 touchPosition:(struct CGPoint { double x1; double x2; })arg3 axisLock:(int)arg4;
- (id)noRotationBehavior;
- (id)observingBehavior;
- (id)panningLockTransformer;
- (void)panningTransformer:(id)arg1 didBeginPanToTransformedPosition:(struct CGPoint { double x1; double x2; })arg2;
- (void)panningTransformer:(id)arg1 didEndPanToTransformedPosition:(struct CGPoint { double x1; double x2; })arg2 offsetFromPrevious:(struct CGVector { double x1; double x2; })arg3 velocity:(struct CGVector { double x1; double x2; })arg4;
- (void)panningTransformer:(id)arg1 didEnterTransitionNotchForTransformedPosition:(struct CGPoint { double x1; double x2; })arg2;
- (void)panningTransformer:(id)arg1 didPanToTransformedPosition:(struct CGPoint { double x1; double x2; })arg2 offsetFromPrevious:(struct CGVector { double x1; double x2; })arg3 touchPosition:(struct CGPoint { double x1; double x2; })arg4 velocity:(struct CGVector { double x1; double x2; })arg5 didChangeAxis:(bool)arg6 axisLock:(int)arg7;
- (void)performActionsAndEnterState:(long long)arg1;
- (void)performActionsAndEnterState:(long long)arg1 velocity:(struct CGVector { double x1; double x2; })arg2 underDirectManipulation:(bool)arg3;
- (struct CGPoint { double x1; double x2; })platterCenter;
- (id)platterItem;
- (id)platterItemBehavior;
- (id)platterMenuAttachmentBehavior;
- (id)platterMenuCollisionBounds;
- (id)platterMenuSlidingAttachmentBehavior;
- (bool)platterPanned;
- (id)platterSnapBehavior;
- (id)platterView;
- (void)resetAnimator;
- (void)resetAnimatorToDefaultBehaviors;
- (void)setAnimator:(id)arg1;
- (void)setContainerView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidPresentCount:(long long)arg1;
- (void)setGestureAttachmentBehavior:(id)arg1;
- (void)setInitialTouchPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setIsCurrentlyUnderDirectManipulation:(bool)arg1;
- (void)setLeadingSwipeActionViewSelected:(bool)arg1;
- (void)setLeadingSwipeEdgeMultiplier:(double)arg1;
- (void)setMenuDismissedSnapBehavior:(id)arg1;
- (void)setMenuItemBehavior:(id)arg1;
- (void)setMenuPresentedSnapBehavior:(id)arg1;
- (void)setMenuVerticalLockAttachment:(id)arg1;
- (void)setMenuView:(id)arg1;
- (void)setNoRotationBehavior:(id)arg1;
- (void)setObservingBehavior:(id)arg1;
- (void)setPanningLockTransformer:(id)arg1;
- (void)setPlatterItem:(id)arg1;
- (void)setPlatterItemBehavior:(id)arg1;
- (void)setPlatterMenuAttachmentBehavior:(id)arg1;
- (void)setPlatterMenuCollisionBounds:(id)arg1;
- (void)setPlatterMenuSlidingAttachmentBehavior:(id)arg1;
- (void)setPlatterSnapBehavior:(id)arg1;
- (void)setPlatterView:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setSwipeFeedbackGenerator:(id)arg1;
- (void)setTrailingSwipeActionViewSelected:(bool)arg1;
- (void)setTrailingSwipeEdgeMultiplier:(double)arg1;
- (long long)state;
- (void)stopObservingBehavior;
- (id)swipeFeedbackGenerator;
- (void)toggleAnimatorDebugState;
- (bool)trailingSwipeActionViewSelected;
- (double)trailingSwipeEdgeMultiplier;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

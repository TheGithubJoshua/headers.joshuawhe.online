<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>UIKBHandwritingView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/UIKitCore.framework/UIKBHandwritingView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (61000)
 */

@interface UIKBHandwritingView : UIKBKeyView <UIGestureRecognizerDelegate> {
    NSMutableSet * _activeTouches;
    UIKBHandwritingBezierPathPointFIFO * _bezierPathFIFO;
    UIBezierPath * _currentPath;
    NSMutableArray * _currentPoints;
    bool  _initialPointPosted;
    struct CGColor { } * _inkColor;
    struct CGImage { } * _inkMask;
    double  _inkWidth;
    NSMutableArray * _interpolatedPoints;
    UIKBHandwritingQuadCurvePointFIFO * _interpolatingFIFO;
    struct { 
        struct CGPoint { 
            double x; 
            double y; 
        } point; 
        double force; 
    }  _previousPoint;
    UIKBHandwritingBoxcarFilterPointFIFO * _smoothingFIFO;
    UIKBHandwritingStrokePointFIFO * _strokeFIFO;
    UIKBHandwritingStrokeView * _strokeView;
}

@property (nonatomic, retain) NSMutableSet *activeTouches;
@property (nonatomic, retain) UIKBHandwritingBezierPathPointFIFO *bezierPathFIFO;
@property (nonatomic, retain) UIBezierPath *currentPath;
@property (nonatomic, retain) NSMutableArray *currentPoints;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool initialPointPosted;
@property (nonatomic) struct CGColor { }*inkColor;
@property (nonatomic) struct CGImage { }*inkMask;
@property (nonatomic) double inkWidth;
@property (nonatomic, retain) NSMutableArray *interpolatedPoints;
@property (nonatomic, retain) UIKBHandwritingQuadCurvePointFIFO *interpolatingFIFO;
@property (nonatomic) struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; } previousPoint;
@property (nonatomic, retain) UIKBHandwritingBoxcarFilterPointFIFO *smoothingFIFO;
@property (nonatomic, retain) UIKBHandwritingStrokePointFIFO *strokeFIFO;
@property (nonatomic, retain) UIKBHandwritingStrokeView *strokeView;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)activeTouches;
- (void)addInkPoint:(struct CGPoint { double x1; double x2; })arg1 value:(double)arg2;
- (id)bezierPathFIFO;
- (bool)cancelTouchTracking;
- (void)clearAndNotify:(bool)arg1;
- (void)clearTouches;
- (id)currentPath;
- (id)currentPoints;
- (void)dealloc;
- (void)deleteStrokesAtIndexes:(id)arg1;
- (bool)endStrokeWithTouches:(id)arg1 event:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 keyplane:(id)arg2 key:(id)arg3;
- (bool)initialPointPosted;
- (struct CGColor { }*)inkColor;
- (struct CGImage { }*)inkMask;
- (double)inkWidth;
- (id)interpolatedPoints;
- (id)interpolatingFIFO;
- (void)log;
- (unsigned long long)numberOfStrokes;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; })previousPoint;
- (void)send;
- (void)setActiveTouches:(id)arg1;
- (void)setBezierPathFIFO:(id)arg1;
- (void)setCurrentPath:(id)arg1;
- (void)setCurrentPoints:(id)arg1;
- (void)setInitialPointPosted:(bool)arg1;
- (void)setInkColor:(struct CGColor { }*)arg1;
- (void)setInkMask:(struct CGImage { }*)arg1;
- (void)setInkWidth:(double)arg1;
- (void)setInterpolatedPoints:(id)arg1;
- (void)setInterpolatingFIFO:(id)arg1;
- (void)setPreviousPoint:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; double x2; })arg1;
- (void)setRenderConfig:(id)arg1;
- (void)setSmoothingFIFO:(id)arg1;
- (void)setStrokeFIFO:(id)arg1;
- (void)setStrokeView:(id)arg1;
- (bool)shouldAllowSelectionGestures:(bool)arg1;
- (bool)shouldCache;
- (id)smoothingFIFO;
- (id)strokeFIFO;
- (id)strokeView;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)updateForKeyplane:(id)arg1 key:(id)arg2;
- (void)updateInkColor;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

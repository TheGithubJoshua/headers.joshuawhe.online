<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ATAssetLinkController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ATFoundation.framework/ATAssetLinkController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ATFoundation.framework/ATFoundation (1)
 */

@interface ATAssetLinkController : NSObject <ATAssetLinkDelegate, ATEnvironmentMonitorObserver> {
    MSVXPCTransaction * _activeDownLoadsKeepAliveTransaction;
    NSMutableOrderedSet * _assetLinks;
    NSMutableOrderedSet * _assetQueue;
    NSMapTable * _assetsToFailedLinks;
    NSMapTable * _assetsToLinks;
    NSObject<OS_dispatch_queue> * _callbackQueue;
    unsigned long long  _lastThermalPressureLevel;
    NSHashTable * _observers;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_addFailedLink:(id)arg1 forAsset:(id)arg2;
- (void)_assetsDidChange;
- (bool)_canEnqueueAsset:(id)arg1;
- (bool)_canEnqueueAsset:(id)arg1 onLink:(id)arg2;
- (void)_cancelAssets:(id)arg1 withError:(id)arg2;
- (void)_finishAsset:(id)arg1 withError:(id)arg2;
- (void)_handleEnqueue:(id)arg1 onLink:(id)arg2 withPriority:(bool)arg3;
- (void)_performSelectorOnObservers:(SEL)arg1 object:(id)arg2 object:(id)arg3;
- (void)_prioritizeAsset:(id)arg1 onLinkClass:(Class)arg2;
- (bool)_shouldReleaseKeepAliveTransaction;
- (void)addAssetLink:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)allAssetLinks;
- (id)allAssets;
- (bool)assetIsEnqueued:(id)arg1;
- (void)assetLink:(id)arg1 didCloseWithOutstandingAssets:(id)arg2;
- (void)assetLink:(id)arg1 didFinishAsset:(id)arg2 error:(id)arg3 retryable:(bool)arg4;
- (void)assetLink:(id)arg1 didFinishAsset:(id)arg2 error:(id)arg3 retryable:(bool)arg4 cancelPendingAssetsInBatch:(bool)arg5;
- (void)assetLink:(id)arg1 didOpenWithPendingAssets:(id)arg2;
- (void)assetLink:(id)arg1 didPauseAsseDownload:(id)arg2 error:(id)arg3;
- (void)assetLink:(id)arg1 didTransitionAssetStates:(id)arg2;
- (void)assetLink:(id)arg1 didUpdateAsset:(id)arg2 progress:(double)arg3;
- (void)assetLinkDidChange:(id)arg1;
- (void)cancelAllAssetsMatchingPredicate:(id)arg1 withError:(id)arg2;
- (void)cancelAssets:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)cancelAssets:(id)arg1 withError:(id)arg2 completion:(id /* block */)arg3;
- (void)dealloc;
- (void)dispatchBlockOnControllerQueue:(id /* block */)arg1;
- (void)enqueueAssetForStoreDownload:(long long)arg1 withCompletion:(id /* block */)arg2;
- (void)enqueueAssets:(id)arg1;
- (void)enqueueAssets:(id)arg1 progress:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)environmentMonitorDidChangeThermalPressure:(id)arg1;
- (id)getNonEnqueuedAssets:(id)arg1;
- (id)init;
- (void)prioritizeAsset:(id)arg1;
- (void)prioritizeAssetWithStoreForLibraryIdentifier:(long long)arg1 withCompletion:(id /* block */)arg2;
- (void)removeAssetLink:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)syncClient:(id)arg1 didProcessFinishedAsset:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

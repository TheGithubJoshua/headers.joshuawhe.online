<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ATPMessage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ATFoundation.framework/ATPMessage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ATFoundation.framework/ATFoundation (1)
 */

@interface ATPMessage : PBCodable <NSCopying> {
    bool  _additionalPayload;
    struct { 
        unsigned int messageID : 1; 
        unsigned int messageType : 1; 
        unsigned int sessionID : 1; 
        unsigned int additionalPayload : 1; 
    }  _has;
    unsigned int  _messageID;
    int  _messageType;
    NSData * _parameters;
    NSData * _paramsSignature;
    NSData * _payload;
    NSData * _payloadSignature;
    ATPRequest * _request;
    ATPResponse * _response;
    unsigned int  _sessionID;
    ATPError * _streamError;
}

@property (nonatomic) bool additionalPayload;
@property (nonatomic) bool hasAdditionalPayload;
@property (nonatomic) bool hasMessageID;
@property (nonatomic) bool hasMessageType;
@property (nonatomic, readonly) bool hasParameters;
@property (nonatomic, readonly) bool hasParamsSignature;
@property (nonatomic, readonly) bool hasPayload;
@property (nonatomic, readonly) bool hasPayloadSignature;
@property (nonatomic, readonly) bool hasRequest;
@property (nonatomic, readonly) bool hasResponse;
@property (nonatomic) bool hasSessionID;
@property (nonatomic, readonly) bool hasStreamError;
@property (nonatomic) unsigned int messageID;
@property (nonatomic) int messageType;
@property (nonatomic, retain) NSData *parameters;
@property (nonatomic, retain) NSData *paramsSignature;
@property (nonatomic, retain) NSData *payload;
@property (nonatomic, retain) NSData *payloadSignature;
@property (nonatomic, retain) ATPRequest *request;
@property (nonatomic, retain) ATPResponse *response;
@property (nonatomic) unsigned int sessionID;
@property (nonatomic, retain) ATPError *streamError;

- (void).cxx_destruct;
- (bool)additionalPayload;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)formattedDescription;
- (bool)hasAdditionalPayload;
- (bool)hasMessageID;
- (bool)hasMessageType;
- (bool)hasParameters;
- (bool)hasParamsSignature;
- (bool)hasPayload;
- (bool)hasPayloadSignature;
- (bool)hasRequest;
- (bool)hasResponse;
- (bool)hasSessionID;
- (bool)hasStreamError;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned int)messageID;
- (int)messageType;
- (id)parameters;
- (id)paramsSignature;
- (id)payload;
- (id)payloadSignature;
- (bool)readFrom:(id)arg1;
- (id)request;
- (id)response;
- (unsigned int)sessionID;
- (void)setAdditionalPayload:(bool)arg1;
- (void)setHasAdditionalPayload:(bool)arg1;
- (void)setHasMessageID:(bool)arg1;
- (void)setHasMessageType:(bool)arg1;
- (void)setHasSessionID:(bool)arg1;
- (void)setMessageID:(unsigned int)arg1;
- (void)setMessageType:(int)arg1;
- (void)setParameters:(id)arg1;
- (void)setParamsSignature:(id)arg1;
- (void)setPayload:(id)arg1;
- (void)setPayloadSignature:(id)arg1;
- (void)setRequest:(id)arg1;
- (void)setResponse:(id)arg1;
- (void)setSessionID:(unsigned int)arg1;
- (void)setStreamError:(id)arg1;
- (id)streamError;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

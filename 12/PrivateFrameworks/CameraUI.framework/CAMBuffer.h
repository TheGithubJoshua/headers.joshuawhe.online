<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CAMBuffer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CameraUI.framework/CAMBuffer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI (1)
 */

@interface CAMBuffer : NSObject {
    NSObject<OS_dispatch_queue> * __bufferQueue;
    NSMutableArray * __bufferQueueBufferedValues;
    NSMutableArray * __bufferQueueObservances;
    NSMutableDictionary * __bufferQueueObservers;
    <NSCopying> * _bufferQueueCurrentValue;
    bool  _bufferQueueEnabled;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_bufferQueue;
@property (nonatomic, readonly) NSMutableArray *_bufferQueueBufferedValues;
@property (nonatomic, readonly) NSMutableArray *_bufferQueueObservances;
@property (nonatomic, readonly) NSMutableDictionary *_bufferQueueObservers;
@property (nonatomic, retain) <NSCopying> *bufferQueueCurrentValue;
@property (getter=isBufferQueueEnabled, nonatomic) bool bufferQueueEnabled;
@property (nonatomic, readonly) NSArray *bufferedValues;
@property (nonatomic, readonly) id currentValue;
@property (getter=isEnabled, nonatomic, readonly) bool enabled;
@property (nonatomic, readonly) id firstBufferedValue;
@property (nonatomic, readonly) bool isBufferEmpty;
@property (nonatomic, readonly) id lastBufferedValue;

+ (id)keyPathsForValuesAffectingCurrentValue;
+ (id)keyPathsForValuesAffectingEnabled;

- (void).cxx_destruct;
- (id)_addObserver:(id /* block */)arg1 onMainQueue:(bool)arg2;
- (id)_bufferQueue;
- (id)_bufferQueueBufferedValues;
- (void)_bufferQueueEvaluateObservances;
- (void)_bufferQueueFulfillAndEvaluateWithChange:(id)arg1;
- (void)_bufferQueueFulfillObservancesWithChange:(id)arg1;
- (id)_bufferQueueObservances;
- (id)_bufferQueueObservers;
- (void)_bufferQueueSetupObservance:(id)arg1;
- (void)_bufferQueueTeardownObservance:(id)arg1;
- (void)_bufferQueueTeardownObservances:(id)arg1;
- (void)_emitBufferedValues;
- (bool)_isBufferQueue;
- (id)addMainQueueObserver:(id /* block */)arg1;
- (id)addObserver:(id /* block */)arg1;
- (id)bufferQueueCurrentValue;
- (id)bufferedValues;
- (id)currentValue;
- (void)dealloc;
- (void)disableUntil:(id /* block */)arg1;
- (void)disableUntilKeyPath:(id)arg1 ofObject:(id)arg2 evaluates:(id /* block */)arg3;
- (void)disableUntilNotification:(id)arg1 fromObject:(id)arg2 usingNotificationCenter:(id)arg3;
- (void)disableWhile:(id /* block */)arg1;
- (void)disableWhileKeyPath:(id)arg1 ofObject:(id)arg2 evaluates:(id /* block */)arg3;
- (void)disableWhileNotification:(id)arg1 fromObject:(id)arg2 usingNotificationCenter:(id)arg3;
- (id)firstBufferedValue;
- (void)handleObservedNotification:(id)arg1;
- (id)init;
- (bool)isBufferEmpty;
- (bool)isBufferQueueEnabled;
- (bool)isEnabled;
- (id)lastBufferedValue;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)push:(id)arg1;
- (void)reevaluate;
- (void)removeObserverForKey:(id)arg1;
- (void)replaceWith:(id)arg1;
- (void)setBufferQueueCurrentValue:(id)arg1;
- (void)setBufferQueueEnabled:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

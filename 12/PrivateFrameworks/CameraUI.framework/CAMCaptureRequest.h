<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CAMCaptureRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CameraUI.framework/CAMCaptureRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI (1)
 */

@interface CAMCaptureRequest : NSObject <CAMDistinctPersistenceCopying, NSCopying> {
    unsigned int  _assertionIdentifier;
    long long  _captureDevice;
    long long  _captureMode;
    long long  _captureOrientation;
    bool  _capturedFromPhotoBooth;
    unsigned long long  _deferredPersistenceOptions;
    CLHeading * _heading;
    NSURL * _localDestinationURL;
    CLLocation * _location;
    long long  _origin;
    long long  _persistenceOptions;
    NSString * _persistenceUUID;
    long long  _photoEncodingBehavior;
    long long  _pressType;
    unsigned short  _sessionIdentifier;
    bool  _shouldDelayRemotePersistence;
    bool  _shouldExtractDiagnosticsFromMetadata;
    bool  _shouldPersistDiagnosticsToSidecar;
    long long  _temporaryPersistenceOptions;
    long long  _type;
    long long  _videoEncodingBehavior;
}

@property (nonatomic, readonly) unsigned int assertionIdentifier;
@property (nonatomic, readonly) long long captureDevice;
@property (nonatomic, readonly) long long captureMode;
@property (nonatomic, readonly) long long captureOrientation;
@property (nonatomic, readonly) bool capturedFromPhotoBooth;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) unsigned long long deferredPersistenceOptions;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) CLHeading *heading;
@property (nonatomic, readonly, copy) NSURL *localDestinationURL;
@property (nonatomic, readonly) CLLocation *location;
@property (nonatomic, readonly) long long origin;
@property (nonatomic, readonly) long long persistenceOptions;
@property (nonatomic, readonly, copy) NSString *persistenceUUID;
@property (nonatomic, readonly) long long photoEncodingBehavior;
@property (nonatomic, readonly) long long pressType;
@property (nonatomic, readonly) unsigned short sessionIdentifier;
@property (nonatomic, readonly) bool shouldDelayRemotePersistence;
@property (nonatomic, readonly) bool shouldExtractDiagnosticsFromMetadata;
@property (nonatomic, readonly) bool shouldPersistDiagnosticsToSidecar;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long temporaryPersistenceOptions;
@property (nonatomic, readonly) long long type;
@property (nonatomic, readonly) long long videoEncodingBehavior;

+ (bool)shouldPersistToIncomingDirectoryWithPersistenceOptions:(long long)arg1 temporaryPersistenceOptions:(long long)arg2;

- (void).cxx_destruct;
- (unsigned int)assertionIdentifier;
- (long long)captureDevice;
- (long long)captureMode;
- (long long)captureOrientation;
- (bool)capturedFromPhotoBooth;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)deferredPersistenceOptions;
- (id)distinctPersistenceCopy;
- (id)heading;
- (id)init;
- (id)initWithRequest:(id)arg1 distinctPersistence:(bool)arg2;
- (id)initWithType:(long long)arg1;
- (id)localDestinationURL;
- (id)location;
- (long long)origin;
- (long long)persistenceOptions;
- (id)persistenceUUID;
- (long long)photoEncodingBehavior;
- (long long)pressType;
- (unsigned short)sessionIdentifier;
- (bool)shouldDelayRemotePersistence;
- (bool)shouldExtractDiagnosticsFromMetadata;
- (bool)shouldPersistDiagnosticsToSidecar;
- (bool)shouldPersistToIncomingDirectory;
- (bool)shouldProtectPersistence;
- (long long)temporaryPersistenceOptions;
- (long long)type;
- (long long)videoEncodingBehavior;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CAMMutableVideoCaptureRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CameraUI.framework/CAMMutableVideoCaptureRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI (1)
 */

@interface CAMMutableVideoCaptureRequest : CAMVideoCaptureRequest <CAMMutableCaptureRequestEncodingBehavior, CAMMutableCaptureRequestLocation, CAMMutableCaptureRequestOrigin, CAMMutableCaptureRequestPersistence, CAMMutableCaptureRequestPower>

@property (nonatomic) unsigned int assertionIdentifier;
@property (nonatomic) long long captureDevice;
@property (nonatomic) long long captureMode;
@property (nonatomic) long long captureOrientation;
@property (nonatomic) long long captureVideoConfiguration;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) unsigned long long deferredPersistenceOptions;
@property (nonatomic) <CAMVideoCaptureRequestDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) CLHeading *heading;
@property (nonatomic, copy) NSURL *localDestinationURL;
@property (nonatomic, retain) CLLocation *location;
@property (nonatomic) double maximumRecordedDuration;
@property (nonatomic) long long maximumRecordedFileSize;
@property (nonatomic) long long origin;
@property (nonatomic) long long persistenceOptions;
@property (nonatomic, copy) NSString *persistenceUUID;
@property (nonatomic) long long photoEncodingBehavior;
@property (nonatomic) long long pressType;
@property (nonatomic) long long remainingDiskUsageThreshold;
@property (nonatomic) unsigned short sessionIdentifier;
@property (nonatomic) bool shouldDelayRemotePersistence;
@property (nonatomic) bool shouldExtractDiagnosticsFromMetadata;
@property (nonatomic) bool shouldGenerateVideoPreviewImage;
@property (nonatomic) bool shouldPersistDiagnosticsToSidecar;
@property (readonly) Class superclass;
@property (nonatomic) long long temporaryPersistenceOptions;
@property (getter=isTimelapse, nonatomic) bool timelapse;
@property (nonatomic) long long torchMode;
@property (nonatomic) double userInitationTimestamp;
@property (nonatomic) long long videoEncodingBehavior;

- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (void)setAssertionIdentifier:(unsigned int)arg1;
- (void)setCaptureDevice:(long long)arg1;
- (void)setCaptureMode:(long long)arg1;
- (void)setCaptureOrientation:(long long)arg1;
- (void)setCaptureVideoConfiguration:(long long)arg1;
- (void)setDeferredPersistenceOptions:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHeading:(id)arg1;
- (void)setLocalDestinationURL:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setMaximumRecordedDuration:(double)arg1;
- (void)setMaximumRecordedFileSize:(long long)arg1;
- (void)setOrigin:(long long)arg1;
- (void)setPersistenceOptions:(long long)arg1;
- (void)setPersistenceUUID:(id)arg1;
- (void)setPressType:(long long)arg1;
- (void)setRemainingDiskUsageThreshold:(long long)arg1;
- (void)setSessionIdentifier:(unsigned short)arg1;
- (void)setShouldDelayRemotePersistence:(bool)arg1;
- (void)setShouldExtractDiagnosticsFromMetadata:(bool)arg1;
- (void)setShouldGenerateVideoPreviewImage:(bool)arg1;
- (void)setShouldPersistDiagnosticsToSidecar:(bool)arg1;
- (void)setTemporaryPersistenceOptions:(long long)arg1;
- (void)setTimelapse:(bool)arg1;
- (void)setTorchMode:(long long)arg1;
- (void)setUserInitationTimestamp:(double)arg1;
- (void)setVideoEncodingBehavior:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CAMStageLightAnimator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CameraUI.framework/CAMStageLightAnimator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI (1)
 */

@interface CAMStageLightAnimator : NSObject {
    unsigned long long  __appearingAnimationCount;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _circleBaseFrame;
    CALayer * _circleLayer;
    CAGradientLayer * _gradientLayer;
    unsigned long long  _state;
}

@property (getter=_isAppearing, nonatomic, readonly) bool _appearing;
@property (setter=_setAppearingAnimationCount:, nonatomic) unsigned long long _appearingAnimationCount;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } circleBaseFrame;
@property (nonatomic, readonly) CALayer *circleLayer;
@property (nonatomic, readonly) CAGradientLayer *gradientLayer;
@property (nonatomic) unsigned long long state;

- (void).cxx_destruct;
- (void)_animateAppearing;
- (void)_animateBounceIfNeeded;
- (void)_animateCircleFromGeometry:(struct { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; })arg1 toGeometry:(struct { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; })arg2 duration:(double)arg3 timing:(id)arg4 repeats:(bool)arg5 completion:(id /* block */)arg6;
- (void)_animateCircleGeometry:(struct { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; }*)arg1 count:(unsigned long long)arg2 duration:(double)arg3 timing:(id)arg4 repeats:(bool)arg5 completion:(id /* block */)arg6;
- (void)_animateCircleToGeometry:(struct { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; })arg1 duration:(double)arg2 timing:(id)arg3 completion:(id /* block */)arg4;
- (void)_animateGradientFromProperties:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; })arg1 toProperties:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; })arg2 duration:(double)arg3 timing:(id)arg4 repeats:(bool)arg5;
- (void)_animateGradientProperties:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; }*)arg1 count:(unsigned long long)arg2 duration:(double)arg3 timing:(id)arg4 repeats:(bool)arg5;
- (void)_animateGradientToProperties:(struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; })arg1 duration:(double)arg2 timing:(id)arg3;
- (void)_animateHidden;
- (void)_animateSearchingIfNeededFromState:(unsigned long long)arg1;
- (unsigned long long)_appearingAnimationCount;
- (struct { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; })_circleGeometryForState:(unsigned long long)arg1;
- (double)_circleLineWidth;
- (struct { double x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; })_currentCircleGeometry;
- (struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; })_currentGradientProperties;
- (void)_didFinishAppearing;
- (struct { double x1; double x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; })_gradientGeometryForState:(unsigned long long)arg1;
- (struct { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGPoint { double x_2_1_1; double x_2_1_2; } x2; double x3; })_gradientPropertiesForGeometry:(struct { double x1; double x2; struct CGPoint { double x_3_1_1; double x_3_1_2; } x3; })arg1;
- (bool)_isAppearing;
- (void)_setAppearingAnimationCount:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })circleBaseFrame;
- (id)circleLayer;
- (id)gradientLayer;
- (id)initWithGradientLayer:(id)arg1 circleLayer:(id)arg2;
- (void)setCircleBaseFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCircleBaseFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 animated:(bool)arg2;
- (void)setState:(unsigned long long)arg1;
- (unsigned long long)state;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CAMZoomDial.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CameraUI.framework/CAMZoomDial.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI (1)
 */

@interface CAMZoomDial : UIView {
    UIImageView * __backgroundView;
    bool  __backgroundViewUpdateNeeded;
    UIView * __dotAndLabelContainerView;
    CAMZoomDialDotsView * __dotsFromDualCameraSwitchOver;
    CAMZoomDialDotsView * __dotsFromMinimumZoomFactor;
    bool  __labelAndDotUpdateNeeded;
    NSArray * __labels;
    double  __spacingMultiplier;
    NSString * _contentSizeCategory;
    double  _contractionDistance;
    double  _dualCameraSwitchOverZoomFactor;
    bool  _expanded;
    double  _maximumZoomFactor;
    double  _minimumZoomFactor;
    long long  _orientation;
    bool  _shouldDisableValuesBelowDualCameraSwitchOver;
    bool  _shouldShowLabelAtDualCameraSwitchOver;
    double  _zoomFactor;
}

@property (nonatomic, readonly) UIImageView *_backgroundView;
@property (getter=_isBackgroundViewUpdateNeeded, setter=_setBackgroundViewUpdateNeeded:, nonatomic) bool _backgroundViewUpdateNeeded;
@property (nonatomic, readonly) UIView *_dotAndLabelContainerView;
@property (nonatomic, readonly) CAMZoomDialDotsView *_dotsFromDualCameraSwitchOver;
@property (nonatomic, readonly) CAMZoomDialDotsView *_dotsFromMinimumZoomFactor;
@property (getter=_isLabelAndDotUpdateNeeded, setter=_setLabelAndDotUpdateNeeded:, nonatomic) bool _labelAndDotUpdateNeeded;
@property (setter=_setLabels:, nonatomic, retain) NSArray *_labels;
@property (nonatomic, readonly) double _radiusDelta;
@property (setter=_setSpacingMultiplier:, nonatomic) double _spacingMultiplier;
@property (nonatomic, copy) NSString *contentSizeCategory;
@property (nonatomic) double contractionDistance;
@property (nonatomic, readonly) double dialBorderWidth;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } dialCenter;
@property (nonatomic, readonly) double dotCenterInset;
@property (nonatomic) double dualCameraSwitchOverZoomFactor;
@property (getter=isExpanded, nonatomic) bool expanded;
@property (nonatomic) double maximumZoomFactor;
@property (nonatomic) double minimumZoomFactor;
@property (nonatomic) long long orientation;
@property (nonatomic) bool shouldDisableValuesBelowDualCameraSwitchOver;
@property (nonatomic) bool shouldShowLabelAtDualCameraSwitchOver;
@property (nonatomic) double zoomFactor;

- (void).cxx_destruct;
- (id)_backgroundView;
- (double)_borderStrokeWidth;
- (id)_createBackgroundImage;
- (id)_createDotImage;
- (id)_dotAndLabelContainerView;
- (struct CGPoint { double x1; double x2; })_dotCenterForOffsetAngle:(double)arg1 assumeExpanded:(bool)arg2;
- (struct CGPoint { double x1; double x2; })_dotCenterForZoomFactor:(double)arg1 assumeExpanded:(bool)arg2 relativeToCurrentZoomFactor:(bool)arg3;
- (id)_dotsFromDualCameraSwitchOver;
- (id)_dotsFromMinimumZoomFactor;
- (double)_fullRadius;
- (double)_fullRadiusInset;
- (bool)_isBackgroundViewUpdateNeeded;
- (bool)_isLabelAndDotUpdateNeeded;
- (double)_labelRotationAngleForOrientation;
- (id)_labels;
- (double)_offsetAngleForZoomFactor:(double)arg1 relativeToCurrentZoomFactor:(bool)arg2;
- (double)_radiusDelta;
- (void)_setBackgroundViewUpdateNeeded:(bool)arg1;
- (void)_setLabelAndDotUpdateNeeded:(bool)arg1;
- (void)_setLabels:(id)arg1;
- (void)_setSpacingMultiplier:(double)arg1;
- (double)_signedAngleDeltaForZoomRange;
- (double)_spacingMultiplier;
- (void)_updateBackroundImageViewIfNeeded;
- (void)_updateDots;
- (void)_updateLabels;
- (void)_updateLabelsAndDotsIfNeeded;
- (void)_updateViewVisibility;
- (id)contentSizeCategory;
- (double)contractionDistance;
- (double)dialBorderWidth;
- (struct CGPoint { double x1; double x2; })dialCenter;
- (struct CGPoint { double x1; double x2; })dotCenterForZoomFactor:(double)arg1 assumeExpanded:(bool)arg2;
- (double)dotCenterInset;
- (double)dualCameraSwitchOverZoomFactor;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isExpanded;
- (void)layoutSubviews;
- (double)maximumZoomFactor;
- (double)minimumZoomFactor;
- (double)normalizedValueForZoomFactor:(double)arg1;
- (double)offsetAngleForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (double)offsetAngleForZoomFactor:(double)arg1;
- (long long)orientation;
- (void)removeInternalAnimationsAndSetToCurrentPresentationValues:(bool)arg1;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentSizeCategory:(id)arg1;
- (void)setContractionDistance:(double)arg1;
- (void)setDualCameraSwitchOverZoomFactor:(double)arg1;
- (void)setExpanded:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setMaximumZoomFactor:(double)arg1;
- (void)setMinimumZoomFactor:(double)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 animated:(bool)arg2;
- (void)setShouldDisableValuesBelowDualCameraSwitchOver:(bool)arg1;
- (void)setShouldShowLabelAtDualCameraSwitchOver:(bool)arg1;
- (void)setZoomFactor:(double)arg1;
- (bool)shouldDisableValuesBelowDualCameraSwitchOver;
- (bool)shouldShowLabelAtDualCameraSwitchOver;
- (double)zoomFactor;
- (double)zoomFactorForNormalizedValue:(double)arg1;
- (double)zoomFactorForOffsetAngle:(double)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

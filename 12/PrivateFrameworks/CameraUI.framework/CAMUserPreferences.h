<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CAMUserPreferences.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CameraUI.framework/CAMUserPreferences.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI (1)
 */

@interface CAMUserPreferences : NSObject {
    bool  _QRBannersEnabledInSettings;
    bool  __preferHEVCWhenAvailable;
    double  __resetTimeoutOverride;
    NSUserDefaults * __underlyingUserDefaults;
    bool  _autoLowLightVideoEnabled;
    bool  _burstFollowsEncoderSettings;
    CAMCaptureConfiguration * _captureConfiguration;
    CAMConflictingControlConfiguration * _conflictingControlConfiguration;
    bool  _didAcknowledgePortraitModeDescription;
    bool  _didAcknowledgeQRCodeDescription;
    bool  _didResetTorchMode;
    bool  _forceEnableQRBanners;
    bool  _lockAsShutterEnabled;
    long long  _overriddenBackCaptureInterval;
    long long  _overriddenFrontCaptureInterval;
    long long  _photoModeLastCapturedEffectFilterType;
    long long  _portraitModeLastCapturedEffectFilterType;
    long long  _preferredMinimumFreeBytes;
    bool  _preserveCaptureMode;
    bool  _preserveEffectFilter;
    bool  _preserveLivePhoto;
    long long  _previewViewAspectMode;
    NSDate * _resetTimeoutDate;
    bool  _shouldCaptureHDREV0;
    bool  _shouldDelayRemotePersistence;
    bool  _shouldDisableCameraSwitchingDuringVideoRecording;
    bool  _shouldForceMonoAudioRecording;
    bool  _shouldShowGridView;
    bool  _shouldUseModernHDRBehavior;
    long long  _slomoConfiguration;
    long long  _squareModeLastCapturedEffectFilterType;
    long long  _videoConfiguration;
}

@property (nonatomic, readonly) bool QRBannersEnabledInSettings;
@property (nonatomic, readonly) bool _preferHEVCWhenAvailable;
@property (nonatomic, readonly) double _resetTimeoutOverride;
@property (getter=_underlyingUserDefaults, setter=_setUnderlyingUserDefaults:, nonatomic, retain) NSUserDefaults *_underlyingUserDefaults;
@property (getter=isAutoLowLightVideoEnabled, nonatomic, readonly) bool autoLowLightVideoEnabled;
@property (nonatomic, readonly) bool burstFollowsEncoderSettings;
@property (nonatomic, retain) CAMCaptureConfiguration *captureConfiguration;
@property (nonatomic, retain) CAMConflictingControlConfiguration *conflictingControlConfiguration;
@property (nonatomic) bool didAcknowledgePortraitModeDescription;
@property (nonatomic) bool didAcknowledgeQRCodeDescription;
@property (setter=_setDidResetTorchMode:, nonatomic) bool didResetTorchMode;
@property (nonatomic) bool forceEnableQRBanners;
@property (getter=isLockAsShutterEnabled, nonatomic, readonly) bool lockAsShutterEnabled;
@property (nonatomic, readonly) long long overriddenBackCaptureInterval;
@property (nonatomic, readonly) long long overriddenFrontCaptureInterval;
@property (nonatomic, readonly) long long photoEncodingBehavior;
@property (nonatomic) long long photoModeLastCapturedEffectFilterType;
@property (nonatomic) long long portraitModeLastCapturedEffectFilterType;
@property (nonatomic, readonly) long long preferredMinimumFreeBytes;
@property (nonatomic, readonly) bool preserveCaptureMode;
@property (nonatomic, readonly) bool preserveEffectFilter;
@property (nonatomic, readonly) bool preserveLivePhoto;
@property (nonatomic) long long previewViewAspectMode;
@property (setter=_setResetTimeoutDate:, nonatomic, retain) NSDate *resetTimeoutDate;
@property (nonatomic, readonly) bool shouldCaptureHDREV0;
@property (nonatomic, readonly) bool shouldDelayRemotePersistence;
@property (nonatomic, readonly) bool shouldDisableCameraSwitchingDuringVideoRecording;
@property (nonatomic, readonly) bool shouldForceMonoAudioRecording;
@property (nonatomic, readonly) bool shouldShowGridView;
@property (nonatomic, readonly) bool shouldShowQRBanners;
@property (nonatomic, readonly) bool shouldUseModernHDRBehavior;
@property (nonatomic, readonly) long long slomoConfiguration;
@property (nonatomic) long long squareModeLastCapturedEffectFilterType;
@property (nonatomic, readonly) long long videoConfiguration;

+ (id)_defaultCaptureConfiguration;
+ (bool)_fallBackToCameraDefaultsForBundleIdentifier:(id)arg1;
+ (long long)defaultFilterTypeForMode:(long long)arg1;
+ (long long)defaultLightingTypeForMode:(long long)arg1;
+ (id)preferences;

- (void).cxx_destruct;
- (bool)QRBannersEnabledInSettings;
- (bool)_preferHEVCWhenAvailable;
- (double)_resetTimeoutOverride;
- (long long)_sanitizeEffectFilterType:(long long)arg1 forMode:(long long)arg2;
- (long long)_sanitizeLightingType:(long long)arg1 forMode:(long long)arg2;
- (void)_setDidResetTorchMode:(bool)arg1;
- (void)_setResetTimeoutDate:(id)arg1;
- (void)_setUnderlyingUserDefaults:(id)arg1;
- (id)_underlyingUserDefaults;
- (bool)burstFollowsEncoderSettings;
- (id)captureConfiguration;
- (id)conflictingControlConfiguration;
- (bool)didAcknowledgePortraitModeDescription;
- (bool)didAcknowledgeQRCodeDescription;
- (bool)didResetTorchMode;
- (id)filterTypesForMode:(long long)arg1;
- (bool)forceEnableQRBanners;
- (bool)isAutoLowLightVideoEnabled;
- (bool)isLockAsShutterEnabled;
- (long long)overriddenBackCaptureInterval;
- (long long)overriddenFrontCaptureInterval;
- (long long)photoEncodingBehavior;
- (long long)photoModeLastCapturedEffectFilterType;
- (long long)portraitModeLastCapturedEffectFilterType;
- (long long)ppt_readPortraitLightingType;
- (long long)preferredMinimumFreeBytes;
- (bool)preserveCaptureMode;
- (bool)preserveEffectFilter;
- (bool)preserveLivePhoto;
- (long long)previewViewAspectMode;
- (bool)readPreferencesWithOverrides:(id)arg1 emulationMode:(long long)arg2 callActive:(bool)arg3;
- (id)resetTimeoutDate;
- (void)setCaptureConfiguration:(id)arg1;
- (void)setConflictingControlConfiguration:(id)arg1;
- (void)setDidAcknowledgePortraitModeDescription:(bool)arg1;
- (void)setDidAcknowledgeQRCodeDescription:(bool)arg1;
- (void)setForceEnableQRBanners:(bool)arg1;
- (void)setPhotoModeLastCapturedEffectFilterType:(long long)arg1;
- (void)setPortraitModeLastCapturedEffectFilterType:(long long)arg1;
- (void)setPreviewViewAspectMode:(long long)arg1;
- (void)setSquareModeLastCapturedEffectFilterType:(long long)arg1;
- (bool)shouldCaptureHDREV0;
- (bool)shouldDelayRemotePersistence;
- (bool)shouldDisableCameraSwitchingDuringVideoRecording;
- (bool)shouldForceMonoAudioRecording;
- (bool)shouldResetCaptureConfiguration;
- (bool)shouldShowGridView;
- (bool)shouldShowQRBanners;
- (bool)shouldUseModernHDRBehavior;
- (long long)slomoConfiguration;
- (long long)squareModeLastCapturedEffectFilterType;
- (long long)videoConfiguration;
- (long long)videoEncodingBehaviorForConfiguration:(long long)arg1;
- (void)writePreferences;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

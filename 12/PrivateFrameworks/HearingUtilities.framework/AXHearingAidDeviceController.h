<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AXHearingAidDeviceController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HearingUtilities.framework/AXHearingAidDeviceController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AXHearingSupport.framework/AXHearingSupport (1)
 */

@interface AXHearingAidDeviceController : NSObject <AXHADeviceControllerProtocol, CBCentralManagerDelegate> {
    AXDispatchTimer * _advertisingTimeoutTimer;
    NSMutableDictionary * _advertisingTimestamps;
    AXDispatchTimer * _availableDeviceTimer;
    NSMutableArray * _availablePeripherals;
    NSMutableArray * _availableSearchBlocks;
    NSObject<OS_dispatch_queue> * _bluetoothCentralQueue;
    CBCentralManager * _bluetoothManager;
    NSLock * _centralRequestsLock;
    NSMutableArray * _connectedDevices;
    NSMutableArray * _connectedSearchBlocks;
    NSMutableDictionary * _deviceUpdatesDescription;
    NSObject<OS_dispatch_queue> * _deviceUpdatesQueue;
    bool  _isResetting;
    bool  _isScanning;
    NSMutableArray * _loadedDevices;
    NSMutableArray * _persistentDevices;
    bool  _shouldActiveScan;
    NSMutableArray * _updateDeviceBlocks;
    NSMutableArray * centralRequestBlocks;
}

@property (nonatomic, retain) NSMutableArray *availablePeripherals;
@property (nonatomic, retain) NSMutableArray *availableSearchBlocks;
@property (nonatomic, retain) NSMutableArray *centralRequestBlocks;
@property (nonatomic, retain) NSMutableArray *connectedDevices;
@property (nonatomic, retain) NSMutableArray *connectedSearchBlocks;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSMutableArray *loadedDevices;
@property (nonatomic, retain) NSMutableArray *persistentDevices;
@property (nonatomic) bool shouldActiveScan;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSMutableArray *updateDeviceBlocks;

+ (id)sharedController;

- (void).cxx_destruct;
- (void)addAvailableDevice:(id)arg1;
- (void)addConnectedDevice:(id)arg1;
- (void)addLoadedDevice:(id)arg1;
- (id)availablePeripherals;
- (id)availableSearchBlocks;
- (void)cancelPendingConnections;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didRetrieveConnectedPeripherals:(id)arg2;
- (void)centralManager:(id)arg1 didRetrievePeripherals:(id)arg2;
- (void)centralManagerDidUpdateState:(id)arg1;
- (id)centralRequestBlocks;
- (void)clearAvailableDevices;
- (void)clearConnectedDevices;
- (void)clearLoadedDevices;
- (void)clearMissingHearingAids;
- (void)connectToPeripheral:(id)arg1;
- (id)connectedDevices;
- (id)connectedSearchBlocks;
- (void)dealloc;
- (void)device:(id)arg1 didUpdateProperty:(unsigned long long)arg2;
- (void)deviceDidFinishLoading:(id)arg1;
- (void)disconnectFromHearingAidWithDeviceUUID:(id)arg1;
- (void)disconnectFromPeripheral:(id)arg1;
- (void)forgetDevice:(id)arg1;
- (id)hearingAidForDeviceID:(id)arg1;
- (id)hearingAidForPeripheral:(id)arg1;
- (id)hearingAidsForPeripheral:(id)arg1;
- (id)hearingAidsForUUID:(id)arg1;
- (id)init;
- (bool)isBluetoothAvailable;
- (bool)isConnected;
- (bool)isPartiallyConnected;
- (bool)isPartiallyPaired;
- (bool)isScanning;
- (id)loadedDevices;
- (void)loadedDevicesDidChange;
- (void)mergeDevice:(id)arg1 withDevice:(id)arg2;
- (void)pairedHearingAidsDidChange;
- (void)pairingAgent:(id)arg1 peerDidCompletePairing:(id)arg2;
- (void)pairingAgent:(id)arg1 peerDidFailToCompletePairing:(id)arg2 error:(id)arg3;
- (void)pairingAgent:(id)arg1 peerDidUnpair:(id)arg2;
- (bool)peripheralIsPaired:(id)arg1;
- (id)persistentDevices;
- (void)registerForPropertyUpdates:(id /* block */)arg1;
- (void)removeAvailableDevice:(id)arg1;
- (void)removeConnectedDevice:(id)arg1;
- (void)removeLoadedDevice:(id)arg1;
- (void)resetConnectionToPeripheral:(id)arg1;
- (void)searchForAvailableDevices;
- (void)searchForAvailableDevicesWithCompletion:(id /* block */)arg1;
- (void)searchForConnectedDevices;
- (void)sendRequestToCentralManager:(id /* block */)arg1;
- (void)setAvailablePeripherals:(id)arg1;
- (void)setAvailableSearchBlocks:(id)arg1;
- (void)setCentralRequestBlocks:(id)arg1;
- (void)setConnectedDevices:(id)arg1;
- (void)setConnectedSearchBlocks:(id)arg1;
- (void)setLoadedDevices:(id)arg1;
- (void)setPersistentDevices:(id)arg1;
- (void)setShouldActiveScan:(bool)arg1;
- (void)setUpdateDeviceBlocks:(id)arg1;
- (bool)shouldActiveScan;
- (void)stopPropertyUpdates;
- (void)stopSearching;
- (void)unpairPeripheralWithUUID:(id)arg1;
- (id)updateDeviceBlocks;
- (void)updateProperty:(unsigned long long)arg1 forDeviceID:(id)arg2;
- (id)valueForProperty:(unsigned long long)arg1 forDeviceID:(id)arg2;
- (void)writeValue:(id)arg1 forProperty:(unsigned long long)arg2 forDeviceID:(id)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_TVRKeyboardView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVRemoteUI.framework/_TVRKeyboardView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVRemoteUI.framework/TVRemoteUI (1)
 */

@interface _TVRKeyboardView : UIView <RTIInputSystemPayloadDelegate, UITextFieldDelegate> {
    TVRCKeyboardAttributes * _attributes;
    RTIInputSystemSourceSession * _currentSourceSession;
    <_TVRKeyboardViewDelegate> * _delegate;
    UIVisualEffectView * _effectView;
    UINavigationBar * _navigationBar;
    UIView * _separator;
    _TVRTextField * _textField;
    UIView * _textFieldBackgroundView;
    UIView * _textFieldWrapper;
}

@property (nonatomic, retain) TVRCKeyboardAttributes *attributes;
@property (nonatomic, retain) RTIInputSystemSourceSession *currentSourceSession;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <_TVRKeyboardViewDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIVisualEffectView *effectView;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UINavigationBar *navigationBar;
@property (nonatomic, retain) UIView *separator;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *text;
@property (nonatomic, retain) _TVRTextField *textField;
@property (nonatomic, retain) UIView *textFieldBackgroundView;
@property (nonatomic, retain) UIView *textFieldWrapper;
@property (nonatomic, copy) NSString *title;

- (void).cxx_destruct;
- (void)_cancelButton:(id)arg1;
- (void)_dictationButtonReleased:(id)arg1;
- (void)_dictationButtonTapped:(id)arg1;
- (double)_separatorHeight;
- (void)_textDidChange:(id)arg1;
- (id)attributes;
- (bool)becomeFirstResponder;
- (id)currentSourceSession;
- (id)delegate;
- (id)effectView;
- (void)handleTextActionPayload:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (id)navigationBar;
- (bool)resignFirstResponder;
- (id)separator;
- (void)setAttributes:(id)arg1;
- (void)setCurrentSourceSession:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEffectView:(id)arg1;
- (void)setNavigationBar:(id)arg1;
- (void)setSeparator:(id)arg1;
- (void)setText:(id)arg1;
- (void)setTextField:(id)arg1;
- (void)setTextFieldBackgroundView:(id)arg1;
- (void)setTextFieldWrapper:(id)arg1;
- (void)setTitle:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)text;
- (id)textField;
- (id)textFieldBackgroundView;
- (bool)textFieldShouldReturn:(id)arg1;
- (id)textFieldWrapper;
- (id)title;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CalDAVContainerSyncTaskGroup.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CalDAV.framework/CalDAVContainerSyncTaskGroup.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CalDAV.framework/CalDAV (265)
 */

@interface CalDAVContainerSyncTaskGroup : CoreDAVContainerSyncTaskGroup {
    <CalDAVCalendar> * _calendar;
    NSDateComponents * _eventFilterEndDate;
    NSDateComponents * _eventFilterStartDate;
    bool  _fallbackOnMultiGetError;
    int  _fetchingEtagState;
    bool  _getScheduleChanges;
    bool  _getScheduleTags;
    bool  _supportsExtendedCalendarQuery;
    bool  _syncEvents;
    bool  _syncTodos;
    NSDateComponents * _todoFilterEndDate;
    NSDateComponents * _todoFilterStartDate;
}

@property (nonatomic, retain) <CalDAVCalendar> *calendar;
@property (nonatomic, retain) NSDateComponents *eventFilterEndDate;
@property (nonatomic, retain) NSDateComponents *eventFilterStartDate;
@property (nonatomic) bool fallbackOnMultiGetError;
@property (nonatomic) bool getScheduleChanges;
@property (nonatomic) bool getScheduleTags;
@property (nonatomic) bool supportsExtendedCalendarQuery;
@property (nonatomic) bool syncEvents;
@property (nonatomic) bool syncTodos;
@property (nonatomic, retain) NSDateComponents *todoFilterEndDate;
@property (nonatomic, retain) NSDateComponents *todoFilterStartDate;

- (void).cxx_destruct;
- (bool)_shouldFetchEventsForState:(int)arg1;
- (bool)_shouldFetchTodosForState:(int)arg1;
- (void)applyAdditionalPropertiesFromPostTask:(id)arg1;
- (void)applyAdditionalPropertiesFromPutTask:(id)arg1;
- (id)calendar;
- (id)copyAdditionalResourcePropertiesToFetch;
- (id)copyGetEtagTaskWithPropertiesToFind:(id)arg1;
- (id)copyGetTaskWithURL:(id)arg1;
- (id)copyMultiGetTaskWithURLs:(id)arg1;
- (id)copyPutTaskWithPayloadItem:(id)arg1 forAction:(id)arg2;
- (id)dataContentType;
- (id)eventFilterEndDate;
- (id)eventFilterStartDate;
- (bool)fallbackOnMultiGetError;
- (bool)getScheduleChanges;
- (bool)getScheduleTags;
- (id)initWithCalendar:(id)arg1 accountInfoProvider:(id)arg2 taskManager:(id)arg3;
- (id)initWithFolderURL:(id)arg1 previousCTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 accountInfoProvider:(id)arg5 taskManager:(id)arg6 appSpecificCalendarItemClass:(Class)arg7;
- (id)initWithFolderURL:(id)arg1 previousCTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 getScheduleTags:(bool)arg5 getScheduleChanges:(bool)arg6 accountInfoProvider:(id)arg7 taskManager:(id)arg8 appSpecificCalendarItemClass:(Class)arg9;
- (id)initWithFolderURL:(id)arg1 previousCTag:(id)arg2 previousSyncToken:(id)arg3 getScheduleTags:(bool)arg4 getScheduleChanges:(bool)arg5 accountInfoProvider:(id)arg6 taskManager:(id)arg7;
- (void)setCalendar:(id)arg1;
- (void)setEventFilterEndDate:(id)arg1;
- (void)setEventFilterStartDate:(id)arg1;
- (void)setFallbackOnMultiGetError:(bool)arg1;
- (void)setGetScheduleChanges:(bool)arg1;
- (void)setGetScheduleTags:(bool)arg1;
- (void)setSupportsExtendedCalendarQuery:(bool)arg1;
- (void)setSyncEvents:(bool)arg1;
- (void)setSyncTodos:(bool)arg1;
- (void)setTodoFilterEndDate:(id)arg1;
- (void)setTodoFilterStartDate:(id)arg1;
- (bool)shouldFetchMoreETags;
- (bool)shouldFetchResourceWithEtag:(id)arg1 propertiesToValues:(id)arg2;
- (bool)supportsExtendedCalendarQuery;
- (bool)syncEvents;
- (bool)syncTodos;
- (id)todoFilterEndDate;
- (id)todoFilterStartDate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

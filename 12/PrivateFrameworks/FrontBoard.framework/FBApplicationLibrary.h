<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FBApplicationLibrary.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FrontBoard.framework/FBApplicationLibrary.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard (486.52)
 */

@interface FBApplicationLibrary : NSObject <FBApplicationInfoProvider, LSApplicationWorkspaceObserverProtocol> {
    LSApplicationWorkspace * _applicationWorkspace;
    NSObject<OS_dispatch_queue> * _callOutQueue;
    NSObject<OS_dispatch_queue> * _completionQueue;
    FBApplicationLibraryConfiguration * _configuration;
    bool  _initializing;
    NSObject<OS_dispatch_queue> * _observerQueue;
    NSMapTable * _observerQueue_tokensToBlocks;
    NSObject<OS_dispatch_queue> * _workQueue;
    NSMutableDictionary * _workQueue_installedApplicationsByBundleID;
    NSMutableArray * _workQueue_pendingSynchronizationExecutionBlocks;
    NSMutableDictionary * _workQueue_placeholdersByBundleID;
    unsigned long long  _workQueue_synchronizationActionCount;
    bool  _workQueue_usingNetwork;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (getter=isUsingNetwork, nonatomic, readonly) bool usingNetwork;

+ (id)_systemApplicationBundleIdentifier;
+ (id)_systemApplicationProxy;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (void)_handleApplicationStateDidChange:(id)arg1 notifyForUpdateInsteadOfReplacement:(bool)arg2;
- (void)_load;
- (void)_notifyDidAddApplications:(id)arg1;
- (void)_notifyDidAddPlaceholders:(id)arg1;
- (void)_notifyDidCancelPlaceholders:(id)arg1;
- (void)_notifyDidChangeNetworkUsage:(bool)arg1;
- (void)_notifyDidDemoteApplications:(id)arg1;
- (void)_notifyDidRemoveApplications:(id)arg1;
- (void)_notifyDidReplaceApplications:(id)arg1;
- (void)_notifyDidUpdateApplications:(id)arg1;
- (void)_notifyForType:(long long)arg1 synchronously:(bool)arg2 withCastingBlock:(id /* block */)arg3;
- (id)_observeType:(long long)arg1 withBlock:(id)arg2;
- (bool)_workQueue_applicationHasBeenModified:(id)arg1 applicationProxy:(id)arg2;
- (id)_workQueue_applicationInfoForProxy:(id)arg1 filterExisting:(bool)arg2 createIfNecessary:(bool)arg3 createReason:(id)arg4;
- (id)_workQueue_applicationsForProxies:(id)arg1 createIfNecessary:(bool)arg2 createReason:(id)arg3 createdApplications:(id*)arg4 existingApplications:(id*)arg5 filterExistingApplications:(id*)arg6 unmappedProxies:(id*)arg7;
- (void)_workQueue_decrementSynchronizationActionCount;
- (void)_workQueue_executeInstallSynchronizationBlocksIfAppropriate;
- (void)_workQueue_incrementSynchronizationActionCount;
- (void)_workQueue_notePlaceholdersModifiedSignificantly:(id)arg1;
- (id)_workQueue_placeholderForProxy:(id)arg1 filterExisting:(bool)arg2 updateExistingIfNecessary:(bool)arg3 createIfNecessary:(bool)arg4 createReason:(id)arg5;
- (id)_workQueue_placeholdersForProxies:(id)arg1 updateExistingIfNecessary:(bool)arg2 createIfNecessary:(bool)arg3 createReason:(id)arg4 createdPlaceholders:(id*)arg5 existingPlaceholders:(id*)arg6 filterExistingPlaceholders:(id*)arg7 unmappedProxies:(id*)arg8;
- (void)_workQueue_removeInstalledApplicationFromModelForBundleID:(id)arg1 withReason:(id)arg2;
- (void)_workQueue_removePlaceholderFromModelForBundleID:(id)arg1 withReason:(id)arg2;
- (id)allInstalledApplications;
- (id)allPlaceholders;
- (id)applicationInfoForBundleIdentifier:(id)arg1;
- (void)applicationInstallsArePrioritized:(id)arg1 arePaused:(id)arg2;
- (void)applicationInstallsDidCancel:(id)arg1;
- (void)applicationInstallsDidChange:(id)arg1;
- (void)applicationInstallsDidPause:(id)arg1;
- (void)applicationInstallsDidPrioritize:(id)arg1;
- (void)applicationInstallsDidResume:(id)arg1;
- (void)applicationInstallsDidStart:(id)arg1;
- (void)applicationInstallsDidUpdateIcon:(id)arg1;
- (void)applicationStateDidChange:(id)arg1;
- (void)applicationsDidFailToInstall:(id)arg1;
- (void)applicationsDidFailToUninstall:(id)arg1;
- (void)applicationsDidInstall:(id)arg1;
- (void)applicationsDidUninstall:(id)arg1;
- (void)applicationsWillInstall:(id)arg1;
- (void)applicationsWillUninstall:(id)arg1;
- (void)dealloc;
- (id)description;
- (void)deviceManagementPolicyDidChange:(id)arg1;
- (void)executeOrPendInstallSynchronizationBlock:(id /* block */)arg1;
- (id)init;
- (id)initWithApplicationWorkspace:(id)arg1 configuration:(id)arg2;
- (id)initWithConfiguration:(id)arg1;
- (id)installedApplicationWithBundleIdentifier:(id)arg1;
- (void)installedApplicationWithBundleIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)isUsingNetwork;
- (void)networkUsageChanged:(bool)arg1;
- (void)noteSystemAppDidFinishLaunching;
- (id)observeDidAddApplicationsWithBlock:(id /* block */)arg1;
- (id)observeDidAddPlaceholdersWithBlock:(id /* block */)arg1;
- (id)observeDidCancelPlaceholdersWithBlock:(id /* block */)arg1;
- (id)observeDidChangeNetworkUsageWithBlock:(id /* block */)arg1;
- (id)observeDidDemoteApplicationsWithBlock:(id /* block */)arg1;
- (id)observeDidRemoveApplicationsWithBlock:(id /* block */)arg1;
- (id)observeDidReplaceApplicationsWithBlock:(id /* block */)arg1;
- (id)observeDidUpdateApplicationsWithBlock:(id /* block */)arg1;
- (id)placeholderWithBundleIdentifier:(id)arg1;
- (void)removeObserverForToken:(id)arg1;
- (void)uninstallApplication:(id)arg1 completion:(id /* block */)arg2;
- (void)uninstallApplication:(id)arg1 withOptions:(id)arg2 completion:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

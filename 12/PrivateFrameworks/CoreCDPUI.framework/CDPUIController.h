<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CDPUIController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreCDPUI.framework/CDPUIController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreCDPUI.framework/CoreCDPUI (1)
 */

@interface CDPUIController : CDPUIBaseController <CDPDevicePickerDelegate, CDPRemoteSecretEntryDelegate, KeychainSyncViewControllerDelegate> {
    CDPContext * _activeContext;
    <CDPUIDelegate> * _delegate;
    CDPDevicePickerViewController * _devicePicker;
    NSArray * _devices;
    bool  _forceInlinePresentation;
    NSNumber * _icscNumericLength;
    bool  _isNumericICSC;
    bool  _isRandomICSC;
    bool  _isUsingMultipleICSC;
    UINavigationController * _navController;
    CDPRecoveryKeyEntryViewModel * _recoveryKeyViewModel;
    CDPRemoteDeviceSecretValidator * _remoteSecretValidator;
    UIViewController * _rootViewController;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CDPUIDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool forceInlinePresentation;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_beginDevicePickerFlowFromEntryController:(id)arg1;
- (void)_beginWaitingForApprovalFlow;
- (id)_deviceLimitOfferForDevice:(id)arg1;
- (void)_dismissPresentedViewControllerCompletion:(id /* block */)arg1;
- (id)_enterSecretLaterEscapeOptionWithSecret:(unsigned long long)arg1;
- (id)_escapeOfferForDevice:(id)arg1 withMask:(unsigned long long)arg2;
- (id)_escapeOfferForMultiApprovalWithMask:(unsigned long long)arg1;
- (id)_escapeOfferForSingleApprovalWithMask:(unsigned long long)arg1;
- (id)_escapeOffersForgotAllWithMask:(unsigned long long)arg1 presenter:(id)arg2 devices:(id)arg3;
- (id)_localDeviceClass;
- (id)_newestDeviceFromDevices:(id)arg1;
- (void)_presentRemoteApprovalViewControllerWithEscapeOfferMask:(unsigned long long)arg1;
- (void)_presentRemoteSecretControllerWithNewestDevice:(id)arg1;
- (void)_presentRootController:(id)arg1 completion:(id /* block */)arg2;
- (id)_recoveryKeyControllerWithContext:(id)arg1 validator:(id)arg2 completion:(id /* block */)arg3;
- (id)_recoveryKeyEscapeOffer;
- (id)_recoveryKeyEscapeOption;
- (id)_recoveryKeyEscapeOptionWithPresentationBlock:(id /* block */)arg1;
- (id)_remoteApprovalEscapeOption;
- (id)_remoteSecretControllerForDevice:(id)arg1;
- (id)_remoteSecretControllerForNewestDevice:(id)arg1;
- (void)_replaceViewController:(id)arg1 withNewController:(id)arg2;
- (id)_resetAccountDataEscapeOption;
- (void)_setupDevicePickerController:(id /* block */)arg1;
- (void)_showResetKeychainConfirmationAlertWithViewController:(id)arg1;
- (id)_signInLaterEscapeOffer;
- (id)_signInLaterEscapeOption;
- (id)_singleICSCEscapeOfferWithMask:(unsigned long long)arg1 withController:(id)arg2;
- (id)_waitingForApprovalEscapeOffer;
- (void)approveFromAnotherDevice:(bool)arg1;
- (void)backTappedFromRoot:(id)arg1;
- (void)cancelRemoteApprovalTapped:(id)arg1;
- (void)cancelTapped:(id)arg1;
- (void)cancelledRemoteSecretEntry:(id)arg1;
- (void)cdpContext:(id)arg1 beginRemoteApprovalWithValidator:(id)arg2;
- (void)cdpContext:(id)arg1 confirmRecoveryKeyWithValidator:(id)arg2 completion:(id /* block */)arg3;
- (void)cdpContext:(id)arg1 presentRecoveryKeyWithValidator:(id)arg2 completion:(id /* block */)arg3;
- (void)cdpContext:(id)arg1 promptForAdoptionOfMultipleICSC:(id /* block */)arg2;
- (void)cdpContext:(id)arg1 promptForICSCWithIsNumeric:(bool)arg2 numericLength:(id)arg3 isRandom:(bool)arg4 validator:(id)arg5;
- (void)cdpContext:(id)arg1 promptForInteractiveAuthenticationWithCompletion:(id /* block */)arg2;
- (void)cdpContext:(id)arg1 promptForLocalSecretWithHandler:(id)arg2;
- (void)cdpContext:(id)arg1 promptForRecoveryKeyWithValidator:(id)arg2 completion:(id /* block */)arg3;
- (void)cdpContext:(id)arg1 promptForRemoteSecretWithDevices:(id)arg2 offeringRemoteApproval:(bool)arg3 validator:(id)arg4;
- (void)cdpContext:(id)arg1 showError:(id)arg2 withDefaultIndex:(long long)arg3 withCompletion:(id /* block */)arg4;
- (void)dealloc;
- (id)delegate;
- (void)devicePicker:(id)arg1 didSelectDevice:(id)arg2;
- (id)devicePicker:(id)arg1 escapeOffersForDevices:(id)arg2;
- (void)dismissRecoveryFlow:(id)arg1 completion:(id /* block */)arg2;
- (void)exceededMaximumAttemptsForRemoteSecretEntry:(id)arg1;
- (void)finishValidation:(id)arg1 withError:(id)arg2;
- (bool)forceInlinePresentation;
- (void)handleBackPopCompletion;
- (void)keychainSyncController:(id)arg1 didFinishWithResult:(id)arg2 error:(id)arg3;
- (void)performAccountReset:(id)arg1;
- (void)performRecoveryKeyRecovery:(id)arg1;
- (void)performRemoteApproval:(id)arg1;
- (bool)performingAccountRecovery;
- (id)recoveryKeyEntryControllerForCircleJoinWithCancel:(bool)arg1;
- (void)remoteSecretEntry:(id)arg1 depletedRemainingAttemptsForDevice:(id)arg2;
- (void)remoteSecretEntry:(id)arg1 didAcceptValidRemoteSecretForDevice:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setForceInlinePresentation:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

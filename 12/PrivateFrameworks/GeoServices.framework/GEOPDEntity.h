<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOPDEntity.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOPDEntity.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOPDEntity : PBCodable <NSCopying> {
    NSMutableArray * _altFaxs;
    bool  _altTelephoneAdsOptOut;
    NSMutableArray * _altTelephones;
    NSMutableArray * _altUrls;
    unsigned long long  _brandMuid;
    int  _capacity;
    int  _displayStyle;
    NSString * _fax;
    struct { 
        unsigned int brandMuid : 1; 
        unsigned int capacity : 1; 
        unsigned int displayStyle : 1; 
        unsigned int placeDisplayType : 1; 
        unsigned int searchSection : 1; 
        unsigned int type : 1; 
        unsigned int altTelephoneAdsOptOut : 1; 
        unsigned int isDisputed : 1; 
        unsigned int isPermanentlyClosed : 1; 
        unsigned int isStandaloneBrand : 1; 
        unsigned int telephoneAdsOptOut : 1; 
    }  _has;
    bool  _isDisputed;
    bool  _isPermanentlyClosed;
    bool  _isStandaloneBrand;
    NSMutableArray * _localizedCategorys;
    NSString * _mapsCategoryId;
    NSMutableArray * _names;
    int  _placeDisplayType;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _placeLookupCategorys;
    int  _searchSection;
    GEOLocalizedString * _secondaryName;
    GEOLocalizedString * _secondarySpokenName;
    NSMutableArray * _spokenNames;
    GEOStyleAttributes * _styleAttributes;
    NSString * _telephone;
    bool  _telephoneAdsOptOut;
    int  _type;
    PBUnknownFields * _unknownFields;
    NSString * _url;
    NSString * _walletCategoryId;
}

@property (nonatomic, retain) NSMutableArray *altFaxs;
@property (nonatomic) bool altTelephoneAdsOptOut;
@property (nonatomic, retain) NSMutableArray *altTelephones;
@property (nonatomic, retain) NSMutableArray *altUrls;
@property (nonatomic) unsigned long long brandMuid;
@property (nonatomic) int capacity;
@property (nonatomic) int displayStyle;
@property (nonatomic, retain) NSString *fax;
@property (nonatomic) bool hasAltTelephoneAdsOptOut;
@property (nonatomic) bool hasBrandMuid;
@property (nonatomic) bool hasCapacity;
@property (nonatomic) bool hasDisplayStyle;
@property (nonatomic, readonly) bool hasFax;
@property (nonatomic) bool hasIsDisputed;
@property (nonatomic) bool hasIsPermanentlyClosed;
@property (nonatomic) bool hasIsStandaloneBrand;
@property (nonatomic, readonly) bool hasMapsCategoryId;
@property (nonatomic) bool hasPlaceDisplayType;
@property (nonatomic) bool hasSearchSection;
@property (nonatomic, readonly) bool hasSecondaryName;
@property (nonatomic, readonly) bool hasSecondarySpokenName;
@property (nonatomic, readonly) bool hasStyleAttributes;
@property (nonatomic, readonly) bool hasTelephone;
@property (nonatomic) bool hasTelephoneAdsOptOut;
@property (nonatomic) bool hasType;
@property (nonatomic, readonly) bool hasUrl;
@property (nonatomic, readonly) bool hasWalletCategoryId;
@property (nonatomic) bool isDisputed;
@property (nonatomic) bool isPermanentlyClosed;
@property (nonatomic) bool isStandaloneBrand;
@property (nonatomic, retain) NSMutableArray *localizedCategorys;
@property (nonatomic, retain) NSString *mapsCategoryId;
@property (nonatomic, retain) NSMutableArray *names;
@property (nonatomic) int placeDisplayType;
@property (nonatomic, readonly) int*placeLookupCategorys;
@property (nonatomic, readonly) unsigned long long placeLookupCategorysCount;
@property (nonatomic) int searchSection;
@property (nonatomic, retain) GEOLocalizedString *secondaryName;
@property (nonatomic, retain) GEOLocalizedString *secondarySpokenName;
@property (nonatomic, retain) NSMutableArray *spokenNames;
@property (nonatomic, retain) GEOStyleAttributes *styleAttributes;
@property (nonatomic, retain) NSString *telephone;
@property (nonatomic) bool telephoneAdsOptOut;
@property (nonatomic) int type;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;
@property (nonatomic, retain) NSString *url;
@property (nonatomic, retain) NSString *walletCategoryId;

+ (Class)altFaxType;
+ (Class)altTelephoneType;
+ (Class)altUrlType;
+ (id)entityForPlaceData:(id)arg1;
+ (Class)localizedCategoryType;
+ (Class)nameType;
+ (Class)spokenNameType;

- (void).cxx_destruct;
- (int)StringAsDisplayStyle:(id)arg1;
- (int)StringAsPlaceDisplayType:(id)arg1;
- (int)StringAsPlaceLookupCategorys:(id)arg1;
- (int)StringAsSearchSection:(id)arg1;
- (int)StringAsType:(id)arg1;
- (void)addAltFax:(id)arg1;
- (void)addAltTelephone:(id)arg1;
- (void)addAltUrl:(id)arg1;
- (void)addLocalizedCategory:(id)arg1;
- (void)addName:(id)arg1;
- (void)addPlaceLookupCategory:(int)arg1;
- (void)addSpokenName:(id)arg1;
- (id)altFaxAtIndex:(unsigned long long)arg1;
- (id)altFaxs;
- (unsigned long long)altFaxsCount;
- (bool)altTelephoneAdsOptOut;
- (id)altTelephoneAtIndex:(unsigned long long)arg1;
- (id)altTelephones;
- (unsigned long long)altTelephonesCount;
- (id)altUrlAtIndex:(unsigned long long)arg1;
- (id)altUrls;
- (unsigned long long)altUrlsCount;
- (id)bestLocalizedName;
- (unsigned long long)brandMuid;
- (int)capacity;
- (void)clearAltFaxs;
- (void)clearAltTelephones;
- (void)clearAltUrls;
- (void)clearLocalizedCategorys;
- (void)clearNames;
- (void)clearPlaceLookupCategorys;
- (void)clearSpokenNames;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (int)displayStyle;
- (id)displayStyleAsString:(int)arg1;
- (id)fax;
- (bool)hasAltTelephoneAdsOptOut;
- (bool)hasBrandMuid;
- (bool)hasCapacity;
- (bool)hasDisplayStyle;
- (bool)hasFax;
- (bool)hasIsDisputed;
- (bool)hasIsPermanentlyClosed;
- (bool)hasIsStandaloneBrand;
- (bool)hasMapsCategoryId;
- (bool)hasPlaceDisplayType;
- (bool)hasSearchSection;
- (bool)hasSecondaryName;
- (bool)hasSecondarySpokenName;
- (bool)hasStyleAttributes;
- (bool)hasTelephone;
- (bool)hasTelephoneAdsOptOut;
- (bool)hasType;
- (bool)hasUrl;
- (bool)hasWalletCategoryId;
- (unsigned long long)hash;
- (bool)isDisputed;
- (bool)isEqual:(id)arg1;
- (bool)isPermanentlyClosed;
- (bool)isStandaloneBrand;
- (id)localizedCategoryAtIndex:(unsigned long long)arg1;
- (id)localizedCategorys;
- (unsigned long long)localizedCategorysCount;
- (id)mapsCategoryId;
- (void)mergeFrom:(id)arg1;
- (id)nameAtIndex:(unsigned long long)arg1;
- (id)names;
- (unsigned long long)namesCount;
- (int)placeDisplayType;
- (id)placeDisplayTypeAsString:(int)arg1;
- (int)placeLookupCategoryAtIndex:(unsigned long long)arg1;
- (int*)placeLookupCategorys;
- (id)placeLookupCategorysAsString:(int)arg1;
- (unsigned long long)placeLookupCategorysCount;
- (bool)readFrom:(id)arg1;
- (int)searchSection;
- (id)searchSectionAsString:(int)arg1;
- (id)secondaryName;
- (id)secondarySpokenName;
- (void)setAltFaxs:(id)arg1;
- (void)setAltTelephoneAdsOptOut:(bool)arg1;
- (void)setAltTelephones:(id)arg1;
- (void)setAltUrls:(id)arg1;
- (void)setBrandMuid:(unsigned long long)arg1;
- (void)setCapacity:(int)arg1;
- (void)setDisplayStyle:(int)arg1;
- (void)setFax:(id)arg1;
- (void)setHasAltTelephoneAdsOptOut:(bool)arg1;
- (void)setHasBrandMuid:(bool)arg1;
- (void)setHasCapacity:(bool)arg1;
- (void)setHasDisplayStyle:(bool)arg1;
- (void)setHasIsDisputed:(bool)arg1;
- (void)setHasIsPermanentlyClosed:(bool)arg1;
- (void)setHasIsStandaloneBrand:(bool)arg1;
- (void)setHasPlaceDisplayType:(bool)arg1;
- (void)setHasSearchSection:(bool)arg1;
- (void)setHasTelephoneAdsOptOut:(bool)arg1;
- (void)setHasType:(bool)arg1;
- (void)setIsDisputed:(bool)arg1;
- (void)setIsPermanentlyClosed:(bool)arg1;
- (void)setIsStandaloneBrand:(bool)arg1;
- (void)setLocalizedCategorys:(id)arg1;
- (void)setMapsCategoryId:(id)arg1;
- (void)setNames:(id)arg1;
- (void)setPlaceDisplayType:(int)arg1;
- (void)setPlaceLookupCategorys:(int*)arg1 count:(unsigned long long)arg2;
- (void)setSearchSection:(int)arg1;
- (void)setSecondaryName:(id)arg1;
- (void)setSecondarySpokenName:(id)arg1;
- (void)setSpokenNames:(id)arg1;
- (void)setStyleAttributes:(id)arg1;
- (void)setTelephone:(id)arg1;
- (void)setTelephoneAdsOptOut:(bool)arg1;
- (void)setType:(int)arg1;
- (void)setUrl:(id)arg1;
- (void)setWalletCategoryId:(id)arg1;
- (id)spokenNameAtIndex:(unsigned long long)arg1;
- (id)spokenNames;
- (unsigned long long)spokenNamesCount;
- (id)styleAttributes;
- (id)telephone;
- (bool)telephoneAdsOptOut;
- (int)type;
- (id)typeAsString:(int)arg1;
- (id)unknownFields;
- (id)url;
- (id)walletCategoryId;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

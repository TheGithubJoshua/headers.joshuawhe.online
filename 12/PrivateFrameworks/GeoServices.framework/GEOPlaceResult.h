<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOPlaceResult.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOPlaceResult.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOPlaceResult : PBCodable <NSCopying> {
    NSMutableArray * _additionalPlaces;
    int  _cacheControl;
    NSMutableArray * _disambiguationLabels;
    unsigned long long  _flyoverTourMuid;
    struct { 
        unsigned int flyoverTourMuid : 1; 
        unsigned int cacheControl : 1; 
        unsigned int travelDistance : 1; 
        unsigned int travelTime : 1; 
    }  _has;
    NSMutableArray * _matchedTokens;
    NSMutableArray * _namedFeatures;
    GEOPlace * _place;
    NSString * _quad;
    GEOPlaceSearchRequest * _revgeoRequestTemplate;
    NSString * _suggestedQuery;
    GEOAddress * _tokenEntity;
    unsigned int  _travelDistance;
    unsigned int  _travelTime;
    PBUnknownFields * _unknownFields;
    NSMutableArray * _unmatchedStrings;
}

@property (nonatomic, retain) NSMutableArray *additionalPlaces;
@property (nonatomic) int cacheControl;
@property (nonatomic, retain) NSMutableArray *disambiguationLabels;
@property (nonatomic) unsigned long long flyoverTourMuid;
@property (nonatomic) bool hasCacheControl;
@property (nonatomic) bool hasFlyoverTourMuid;
@property (nonatomic, readonly) bool hasQuad;
@property (nonatomic, readonly) bool hasRevgeoRequestTemplate;
@property (nonatomic, readonly) bool hasSuggestedQuery;
@property (nonatomic, readonly) bool hasTokenEntity;
@property (nonatomic) bool hasTravelDistance;
@property (nonatomic) bool hasTravelTime;
@property (nonatomic, retain) NSMutableArray *matchedTokens;
@property (nonatomic, retain) NSMutableArray *namedFeatures;
@property (nonatomic, retain) GEOPlace *place;
@property (nonatomic, retain) NSString *quad;
@property (nonatomic, retain) GEOPlaceSearchRequest *revgeoRequestTemplate;
@property (nonatomic, retain) NSString *suggestedQuery;
@property (nonatomic, retain) GEOAddress *tokenEntity;
@property (nonatomic) unsigned int travelDistance;
@property (nonatomic) unsigned int travelTime;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;
@property (nonatomic, retain) NSMutableArray *unmatchedStrings;

+ (Class)additionalPlaceType;
+ (Class)disambiguationLabelType;
+ (Class)matchedTokenType;
+ (Class)namedFeatureType;
+ (Class)unmatchedStringType;

- (void).cxx_destruct;
- (int)StringAsCacheControl:(id)arg1;
- (void)addAdditionalPlace:(id)arg1;
- (void)addDisambiguationLabel:(id)arg1;
- (void)addMatchedToken:(id)arg1;
- (void)addNamedFeature:(id)arg1;
- (void)addUnmatchedString:(id)arg1;
- (id)additionalPlaceAtIndex:(unsigned long long)arg1;
- (id)additionalPlaces;
- (unsigned long long)additionalPlacesCount;
- (int)cacheControl;
- (id)cacheControlAsString:(int)arg1;
- (void)clearAdditionalPlaces;
- (void)clearDisambiguationLabels;
- (void)clearMatchedTokens;
- (void)clearNamedFeatures;
- (void)clearUnmatchedStrings;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)disambiguationLabelAtIndex:(unsigned long long)arg1;
- (id)disambiguationLabels;
- (unsigned long long)disambiguationLabelsCount;
- (unsigned long long)flyoverTourMuid;
- (id)geoMapItem;
- (bool)hasCacheControl;
- (bool)hasFlyoverTourMuid;
- (bool)hasQuad;
- (bool)hasRevgeoRequestTemplate;
- (bool)hasSuggestedQuery;
- (bool)hasTokenEntity;
- (bool)hasTravelDistance;
- (bool)hasTravelTime;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)matchedTokenAtIndex:(unsigned long long)arg1;
- (id)matchedTokens;
- (unsigned long long)matchedTokensCount;
- (void)mergeFrom:(id)arg1;
- (id)namedFeatureAtIndex:(unsigned long long)arg1;
- (id)namedFeatures;
- (unsigned long long)namedFeaturesCount;
- (id)place;
- (id)quad;
- (bool)readFrom:(id)arg1;
- (id)revgeoRequestTemplate;
- (void)setAdditionalPlaces:(id)arg1;
- (void)setCacheControl:(int)arg1;
- (void)setDisambiguationLabels:(id)arg1;
- (void)setFlyoverTourMuid:(unsigned long long)arg1;
- (void)setHasCacheControl:(bool)arg1;
- (void)setHasFlyoverTourMuid:(bool)arg1;
- (void)setHasTravelDistance:(bool)arg1;
- (void)setHasTravelTime:(bool)arg1;
- (void)setMatchedTokens:(id)arg1;
- (void)setNamedFeatures:(id)arg1;
- (void)setPlace:(id)arg1;
- (void)setQuad:(id)arg1;
- (void)setRevgeoRequestTemplate:(id)arg1;
- (void)setSuggestedQuery:(id)arg1;
- (void)setTokenEntity:(id)arg1;
- (void)setTravelDistance:(unsigned int)arg1;
- (void)setTravelTime:(unsigned int)arg1;
- (void)setUnmatchedStrings:(id)arg1;
- (id)suggestedQuery;
- (id)tokenEntity;
- (unsigned int)travelDistance;
- (unsigned int)travelTime;
- (id)unknownFields;
- (id)unmatchedStringAtIndex:(unsigned long long)arg1;
- (id)unmatchedStrings;
- (unsigned long long)unmatchedStringsCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOComposedRouteStep.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOComposedRouteStep.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOComposedRouteStep : NSObject {
    GEOComposedRoute * _composedRoute;
    int  _drivingSide;
    GEOStep * _geoStep;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _maneuverPointRange;
    NSString * _maneuverRoadName;
    NSString * _maneuverRoadOrExitName;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _pointRange;
    long long  _routeLegType;
    unsigned long long  _stepIndex;
}

@property (nonatomic, readonly) GEOComposedTransitTripRouteStep *closestLogicalBoardOrAlightStep;
@property (nonatomic) GEOComposedRoute *composedRoute;
@property (nonatomic, readonly) unsigned int distance;
@property (nonatomic, readonly) int drivingSide;
@property (nonatomic, readonly) unsigned int duration;
@property (nonatomic, readonly) struct { double x1; double x2; } endGeoCoordinate;
@property (nonatomic, readonly) unsigned int endPointIndex;
@property (nonatomic, readonly) GEOPBTransitStop *endingStop;
@property (nonatomic, readonly) GEOStep *geoStep;
@property (nonatomic, readonly) bool hasDuration;
@property (nonatomic, readonly) GEOInstructionSet *instructions;
@property (nonatomic, readonly) bool isArrivalStep;
@property (nonatomic, readonly) bool isUncertainArrival;
@property (nonatomic, readonly) GEOComposedRouteLeg *leg;
@property (nonatomic, readonly) unsigned int maneuverEndPointIndex;
@property (nonatomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } maneuverPointRange;
@property (nonatomic, readonly) NSString *maneuverRoadName;
@property (nonatomic, readonly) NSString *maneuverRoadOrExitName;
@property (nonatomic, readonly) unsigned int maneuverStartPointIndex;
@property (nonatomic, readonly) GEOComposedTransitTripRouteStep *nextAlightingStep;
@property (nonatomic, readonly) GEOComposedTransitTripRouteStep *nextBoardingStep;
@property (getter=getNextStep, nonatomic, readonly) GEOComposedRouteStep *nextStep;
@property (nonatomic, readonly) GEOPBTransitStop *nextStop;
@property (nonatomic, readonly) unsigned int pointCount;
@property (nonatomic, readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } pointRange;
@property (nonatomic, readonly) GEOComposedTransitTripRouteStep *previousAlightingStep;
@property (nonatomic, readonly) GEOComposedTransitTripRouteStep *previousBoardingStep;
@property (getter=getPreviousStep, nonatomic, readonly) GEOComposedRouteStep *previousStep;
@property (nonatomic, readonly) GEOPBTransitStop *previousStop;
@property (nonatomic, readonly) NSArray *routeDetailsPrimaryArtwork;
@property (nonatomic, readonly) <GEOTransitArtworkDataSource> *routeDetailsSecondaryArtwork;
@property (nonatomic, readonly) long long routeLegType;
@property (nonatomic, readonly) bool shouldCreateAlightExitGroup;
@property (nonatomic, readonly) bool shouldCreateArrivalGroup;
@property (nonatomic, readonly) bool shouldCreateEnterBoardGroup;
@property (nonatomic, readonly) bool shouldCreateFerryProgressionGroup;
@property (nonatomic, readonly) bool shouldCreateTransferGroup;
@property (nonatomic, readonly) bool shouldCreateTripProgressionGroup;
@property (nonatomic, readonly) struct { double x1; double x2; } startGeoCoordinate;
@property (nonatomic, readonly) unsigned int startPointIndex;
@property (nonatomic, readonly) unsigned int startTime;
@property (nonatomic, readonly) GEOPBTransitStop *startingStop;
@property (nonatomic, readonly) unsigned int stepID;
@property (nonatomic, readonly) unsigned long long stepIndex;
@property (nonatomic, readonly) NSArray *steppingArtwork;
@property (nonatomic, readonly) GEOTransitStep *transitStep;
@property (nonatomic, readonly) int transportType;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

- (void).cxx_destruct;
- (bool)_MapsCarPlay_isEqual:(id)arg1;
- (bool)_belongsToTransferGroup;
- (id)closestLogicalBoardOrAlightStep;
- (id)composedRoute;
- (id)description;
- (unsigned int)distance;
- (int)drivingSide;
- (unsigned int)duration;
- (struct { double x1; double x2; })endGeoCoordinate;
- (unsigned int)endPointIndex;
- (id)endingStop;
- (id)firstNameOrBranch;
- (id)geoStep;
- (id)getNextStep;
- (id)getPreviousStep;
- (bool)hasDuration;
- (id)initWithComposedRoute:(id)arg1 GEOStep:(id)arg2 routeLegType:(long long)arg3 stepIndex:(unsigned long long)arg4 pointRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg5 maneuverPointRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6;
- (id)initWithComposedRoute:(id)arg1 routeLegType:(long long)arg2 stepIndex:(unsigned long long)arg3 pointRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4;
- (id)instructions;
- (bool)isArrivalStep;
- (bool)isUncertainArrival;
- (id)leg;
- (int)maneuver;
- (unsigned int)maneuverEndPointIndex;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })maneuverPointRange;
- (id)maneuverRoadName;
- (id)maneuverRoadOrExitName;
- (unsigned int)maneuverStartPointIndex;
- (id)nextAlightingStep;
- (id)nextBoardingStep;
- (id)nextStop;
- (unsigned int)pointCount;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })pointRange;
- (id)previousAlightingStep;
- (id)previousBoardingStep;
- (id)previousStop;
- (id)routeDetailsPrimaryArtwork;
- (id)routeDetailsSecondaryArtwork;
- (long long)routeLegType;
- (void)setComposedRoute:(id)arg1;
- (bool)shouldCreateAlightExitGroup;
- (bool)shouldCreateArrivalGroup;
- (bool)shouldCreateEnterBoardGroup;
- (bool)shouldCreateFerryProgressionGroup;
- (bool)shouldCreateTransferGroup;
- (bool)shouldCreateTripProgressionGroup;
- (bool)shouldPreloadWithHighPriority;
- (struct { double x1; double x2; })startGeoCoordinate;
- (unsigned int)startPointIndex;
- (unsigned int)startTime;
- (id)startingStop;
- (unsigned int)stepID;
- (unsigned long long)stepIndex;
- (id)steppingArtwork;
- (id)transitStep;
- (int)transportType;

// Image: /System/Library/PrivateFrameworks/Navigation.framework/Navigation

- (id)contentsForContext:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

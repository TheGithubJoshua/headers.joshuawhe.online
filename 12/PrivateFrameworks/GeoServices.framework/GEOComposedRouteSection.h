<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOComposedRouteSection.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOComposedRouteSection.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOComposedRouteSection : NSObject {
    struct { 
        struct { 
            double x; 
            double y; 
        } origin; 
        struct { 
            double width; 
            double height; 
        } size; 
    }  _bounds;
    GEOComposedRouteLeg * _composedRouteLeg;
    unsigned long long  _composedRouteLegIndex;
    GEOComposedRouteStep * _composedRouteStep;
    unsigned long long  _finalStepIndex;
    double  _lengthScaleFactor;
    struct { 
        struct { 
            double x; 
            double y; 
        } origin; 
        struct { 
            double width; 
            double height; 
        } size; 
    }  _overlayBounds;
    unsigned int  _pointCount;
    struct { float x1; float x2; } * _points;
    double  _startDistance;
    unsigned int  _startPointIndex;
    int  _transportType;
}

@property (nonatomic, readonly) struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property (nonatomic, readonly) GEOComposedRouteLeg *composedRouteLeg;
@property (nonatomic, readonly) unsigned long long composedRouteLegIndex;
@property (nonatomic, readonly) GEOComposedRouteStep *composedRouteStep;
@property (nonatomic, readonly) unsigned int endPointIndex;
@property (nonatomic, readonly) unsigned long long finalStepIndex;
@property (nonatomic) double lengthScaleFactor;
@property (nonatomic, readonly) unsigned int pointCount;
@property (nonatomic, readonly) struct { float x1; float x2; }*points;
@property (nonatomic, readonly) double startDistance;
@property (nonatomic, readonly) unsigned int startPointIndex;
@property (nonatomic, readonly) int transportType;
@property (nonatomic, readonly) /* Warning: unhandled struct encoding: '{Box<double' */ struct  vkBounds; /* unknown property attribute:  1>=[2d]}} */

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

- (void).cxx_destruct;
- (bool)_MapsCarPlay_isEqual:(id)arg1;
- (void)_initStepForRoute:(id)arg1;
- (struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (id)composedRouteLeg;
- (unsigned long long)composedRouteLegIndex;
- (id)composedRouteStep;
- (void)dealloc;
- (id)description;
- (unsigned int)endPointIndex;
- (unsigned long long)finalStepIndex;
- (id)initWithRoute:(id)arg1 startPoint:(unsigned int)arg2 pointCount:(unsigned int)arg3 bounds:(struct { struct { double x_1_1_1; double x_1_1_2; } x1; struct { double x_2_1_1; double x_2_1_2; } x2; })arg4 transportType:(int)arg5 finalStepIndex:(unsigned long long)arg6 startDistance:(double)arg7 lengthScaleFactor:(double)arg8;
- (id)initWithRoute:(id)arg1 startPoint:(unsigned int)arg2 pointCount:(unsigned int)arg3 transportType:(int)arg4 finalStepIndex:(unsigned long long)arg5 fallbackStartCoordinate:(struct { double x1; double x2; })arg6 fallbackEndCoordinate:(struct { double x1; double x2; })arg7 startDistance:(double)arg8 lengthScaleFactor:(double)arg9;
- (bool)isTransfer;
- (double)lengthScaleFactor;
- (unsigned int)pointCount;
- (struct { float x1; float x2; }*)points;
- (void)setLengthScaleFactor:(double)arg1;
- (double)startDistance;
- (unsigned int)startPointIndex;
- (int)transportType;

// Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit

- (id)pathsForRenderRegion:(id)arg1 inOverlay:(id)arg2;
- (id)pathsForRenderRegion:(id)arg1 inOverlay:(id)arg2 excludedSegments:(const struct vector<gm::Range<unsigned int>, std::__1::allocator<gm::Range<unsigned int> > > { struct Range<unsigned int> {} *x1; struct Range<unsigned int> {} *x2; struct __compressed_pair<gm::Range<unsigned int> *, std::__1::allocator<gm::Range<unsigned int> > > { struct Range<unsigned int> {} *x_3_1_1; } x3; }*)arg3;
- (id)pathsForRenderRegion:(id)arg1 inOverlay:(id)arg2 shouldSnapToTransit:(bool)arg3 verifySnapping:(bool)arg4;
- (struct Box<double, 2> { struct Matrix<double, 2, 1> { double x_1_1_1[2]; } x1; struct Matrix<double, 2, 1> { double x_2_1_1[2]; } x2; })vkBounds;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

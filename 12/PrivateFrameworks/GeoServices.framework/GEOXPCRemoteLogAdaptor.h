<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOXPCRemoteLogAdaptor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOXPCRemoteLogAdaptor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOXPCRemoteLogAdaptor : GEOBaseLogAdaptor <GEOProtobufSessionTaskDelegate> {
    NSString * _adaptorIdentifier;
    unsigned long long  _backOffRetryInterval;
    long long  _cacheCountFlushThreshold;
    unsigned long long  _cacheEncryptionType;
    long long  _cacheMaxAllowedMessageCount;
    long long  _cacheMessageExpiryInterval;
    NSString * _debugRequestName;
    unsigned long long  _intervalJitter;
    NSString * _logMessageCacheFilePath;
    GEOLogMessageCacheManager * _logMessageCacheManager;
    bool  _logMessageCollectionRequestPending;
    NSLock * _logMessageCollectionRequesterLock;
    GEOProtobufSessionTask * _logMessageCollectionSessionTask;
    NSObject<OS_dispatch_queue> * _logMessageSendQueue;
    long long  _logMessagesOverflowPurgeSize;
    long long  _maxMessageChunkCount;
    long long  _maxMessageChunkSize;
    NSNumber * _needsProxy;
    NSObject<OS_dispatch_queue> * _networkChangeObserverQueue;
    bool  _observingNetworkChange;
    NSString * _policyIdentifier;
    NSURL * _remoteURL;
    GEOLogMessageCollectionRequest * _request;
    bool  _requireWiFi;
    unsigned long long  _retryInterval;
    bool  _sendInRealtime;
    bool  _shouldAddIntervalJitter;
    bool  _shouldCacheOnDisk;
    bool  _shouldCompressRequest;
    id /* block */  _shouldDeferXPCActivityBlock;
    NSLock * _shouldDeferXPCActivityBlockLock;
    NSLock * _xpcActivityInfoLock;
    NSString * _xpcActivityName;
}

@property (readonly) NSString *adaptorIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSString *debugRequestName;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSNumber *needsProxy;
@property (nonatomic, retain) NSURL *remoteURL;
@property (readonly) Class superclass;
@property (readonly) int supportedLogMessageType;
@property (nonatomic) long long xpcActivityTriggerCount;

- (void).cxx_destruct;
- (void)_addNetworkObserver;
- (void)_beginSendingLogMessageChunks;
- (void)_captureTrafficProbesAndTelemetricEventsFor:(id)arg1 result:(unsigned char)arg2;
- (void)_cleanupLogMessageCollectionRequester;
- (void)_continueToSendNextBatch:(bool)arg1;
- (void)_deviceLocking;
- (void)_deviceUnlocked;
- (void)_initializeAdaptor;
- (void)_networkReachabilityChanged;
- (void)_purgeAndSendLogMessages;
- (void)_purgeExpiredLogMessagesFromCache;
- (void)_purgeLogMessageCache;
- (void)_purgeMapsSuggestionsCacheFile;
- (void)_queueNextLogMessagesChunkForSending;
- (void)_registerXPCActivityTimer;
- (void)_removeNetworkObserver;
- (void)_requesterStartSendRequest:(id)arg1;
- (void)_sendLogMessageRequest:(id)arg1;
- (void)_sendNextLogMessageChunk;
- (void)_setupLogMessageCache;
- (void)_setupQueueAndNotifications;
- (void)_setupXPCActivity;
- (void)_unregisterXPCActivityTimer;
- (bool)_useInMemoryLogMessageCache;
- (id)adaptorIdentifier;
- (void)dealloc;
- (id)debugRequestName;
- (void)flushLogs;
- (void)forceFlushLogs;
- (void)incrementXpcActivityTriggerCount;
- (id)initWithAdaptorPolicy:(id)arg1;
- (id)initWithRemoteURL:(id)arg1 needsProxy:(id)arg2 debugRequestName:(id)arg3 supportedTypes:(id)arg4;
- (bool)isLogFrameworkAdaptor;
- (int)logMsgEventNetworkServiceForSupportedLogMsgType;
- (id)needsProxy;
- (void)protobufSession:(id)arg1 didCompleteTask:(id)arg2;
- (void)queueLogMessage:(id)arg1;
- (id)remoteURL;
- (void)setDebugRequestName:(id)arg1;
- (void)setNeedsProxy:(id)arg1;
- (void)setRemoteURL:(id)arg1;
- (void)setXpcActivityTriggerCount:(long long)arg1;
- (int)supportedLogMessageType;
- (void)tearDown;
- (void)updateAdaptorPolicyConfiguration:(id)arg1;
- (long long)xpcActivityTriggerCount;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

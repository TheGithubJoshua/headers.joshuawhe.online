<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOComposedTransitRouteStep.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOComposedTransitRouteStep.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOComposedTransitRouteStep : GEOComposedRouteStep {
    GEOPBTransitHall * _destinationHall;
    GEOPBTransitStop * _destinationStop;
    unsigned int  _duration;
    int  _maneuver;
    GEOPBTransitHall * _originHall;
    GEOPBTransitStop * _originStop;
    <GEOTransitRoutingIncidentMessage> * _routeDetailsIncidentMessage;
    NSArray * _routeDetailsPrimaryArtwork;
    <GEOTransitArtworkDataSource> * _routeDetailsSecondaryArtwork;
    unsigned int  _startTime;
    NSArray * _steppingArtwork;
    <GEOTransitRoutingIncidentMessage> * _steppingIncidentMessage;
    GEOTransitStep * _transitStep;
}

@property (nonatomic, readonly) GEOPBTransitHall *destinationHall;
@property (nonatomic, readonly) GEOPBTransitStop *destinationStop;
@property (nonatomic, readonly) NSString *destinationStopIntermediateListName;
@property (nonatomic, readonly) unsigned long long destinationTransitEntityMuid;
@property (nonatomic, readonly) GEOInstructionSet *instructions;
@property (nonatomic, readonly) int maneuver;
@property (nonatomic, readonly) GEOComposedTransitRouteStep *nextTransitStep;
@property (nonatomic, readonly) GEOPBTransitHall *originHall;
@property (nonatomic, readonly) GEOPBTransitStop *originStop;
@property (nonatomic, readonly) NSString *originStopIntermediateListName;
@property (nonatomic, readonly) unsigned long long originTransitEntityMuid;
@property (nonatomic, readonly) GEOComposedTransitRouteStep *previousTransitStep;
@property (nonatomic, readonly) <GEOTransitRoutingIncidentMessage> *routeDetailsIncidentMessage;
@property (nonatomic, readonly) <GEOTransitRoutingIncidentMessage> *steppingIncidentMessage;
@property (nonatomic, readonly) GEOTransitStep *transitStep;

- (void).cxx_destruct;
- (id)_intermediateListNameForStop:(id)arg1;
- (id)_largestEntityAtStop:(id)arg1 passingTest:(id /* block */)arg2;
- (unsigned long long)_muidForStop:(id)arg1;
- (void)_populateArtworksWithDecoderData:(id)arg1;
- (void)_populateIncidentsWithDecoderData:(id)arg1;
- (id)description;
- (id)destinationHall;
- (id)destinationStop;
- (id)destinationStopIntermediateListName;
- (unsigned long long)destinationTransitEntityMuid;
- (unsigned int)distance;
- (unsigned int)duration;
- (struct { double x1; double x2; })endGeoCoordinate;
- (id)endingStop;
- (bool)hasDuration;
- (id)initWithComposedRoute:(id)arg1 routeLegType:(long long)arg2 step:(id)arg3 stepIndex:(unsigned long long)arg4 duration:(unsigned int)arg5 pointRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6;
- (id)instructions;
- (bool)isArrivalStep;
- (int)maneuver;
- (id)nextAlightingStep;
- (id)nextBoardingStep;
- (id)nextStop;
- (id)nextTransitStep;
- (id)originHall;
- (id)originStop;
- (id)originStopIntermediateListName;
- (unsigned long long)originTransitEntityMuid;
- (id)previousAlightingStep;
- (id)previousBoardingStep;
- (id)previousStop;
- (id)previousTransitStep;
- (id)routeDetailsIncidentMessage;
- (id)routeDetailsPrimaryArtwork;
- (id)routeDetailsSecondaryArtwork;
- (struct { double x1; double x2; })startGeoCoordinate;
- (unsigned int)startTime;
- (id)startingStop;
- (id)steppingArtwork;
- (id)steppingIncidentMessage;
- (id)transitStep;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

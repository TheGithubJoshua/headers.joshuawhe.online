<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOPDPlace.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOPDPlace.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOPDPlace : PBCodable <NSCopying> {
    NSMutableArray * _components;
    struct { 
        unsigned int muid : 1; 
        unsigned int preferredMuid : 1; 
        unsigned int updateVersion : 1; 
        unsigned int referenceFrame : 1; 
        unsigned int resultProviderId : 1; 
        unsigned int status : 1; 
    }  _has;
    GEOPDMapsIdentifier * _mapsId;
    unsigned long long  _muid;
    unsigned long long  _preferredMuid;
    int  _referenceFrame;
    GEOMapItemInitialRequestData * _requestData;
    int  _resultProviderId;
    int  _status;
    PBUnknownFields * _unknownFields;
    unsigned long long  _updateVersion;
}

@property (nonatomic, retain) NSMutableArray *components;
@property (nonatomic, readonly) bool hasMapsId;
@property (nonatomic) bool hasMuid;
@property (nonatomic) bool hasPreferredMuid;
@property (nonatomic) bool hasReferenceFrame;
@property (nonatomic, readonly) bool hasRequestData;
@property (nonatomic) bool hasResultProviderId;
@property (nonatomic) bool hasStatus;
@property (nonatomic) bool hasUpdateVersion;
@property (nonatomic, retain) GEOPDMapsIdentifier *mapsId;
@property (nonatomic) unsigned long long muid;
@property (nonatomic) unsigned long long preferredMuid;
@property (nonatomic) int referenceFrame;
@property (nonatomic, retain) GEOMapItemInitialRequestData *requestData;
@property (nonatomic) int resultProviderId;
@property (nonatomic) int status;
@property (getter=isSupportedVenue, nonatomic, readonly) bool supportedVenue;
@property (getter=isSupportedVenuePOI, nonatomic, readonly) bool supportedVenuePOI;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;
@property (nonatomic) unsigned long long updateVersion;

+ (id)attributionForPlaceData:(id)arg1 type:(int)arg2;
+ (Class)componentType;
+ (id)failedPlaceData;
+ (id)failedPlaceDataForMuid:(unsigned long long)arg1;

- (void).cxx_destruct;
- (int)StringAsReferenceFrame:(id)arg1;
- (int)StringAsStatus:(id)arg1;
- (id)_cleanedPhoneNumberForPhoneNumberRepresentation:(id)arg1;
- (id)_entityName;
- (void)_removeETAComponents;
- (void)addComponent:(id)arg1;
- (id)bestName;
- (unsigned long long)brandMUID;
- (id)businessURL;
- (id)cacheKey;
- (void)clearComponents;
- (id)compactDebugDescription;
- (id)componentAtIndex:(unsigned long long)arg1;
- (id)componentOfType:(int)arg1 options:(unsigned long long)arg2;
- (id)components;
- (unsigned long long)componentsCount;
- (void)copyTo:(id)arg1;
- (id)copyWithStrippedOptionalData;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)copyWithoutETAComponents;
- (id)description;
- (id)dictionaryRepresentation;
- (void)enumerateComponentOfType:(int)arg1 enumerationOptions:(unsigned long long)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateComponentValuesOfType:(int)arg1 enumerationOptions:(unsigned long long)arg2 usingBlock:(id /* block */)arg3;
- (void)enumerateComponentsWithOptions:(unsigned long long)arg1 usingBlock:(id /* block */)arg2;
- (void)enumerateValidComponentValuesOfType:(int)arg1 usingBlock:(id /* block */)arg2;
- (void)enumerateValidComponentWithValuesOfType:(int)arg1 usingBlock:(id /* block */)arg2;
- (void)enumerateValidComponentsWithValuesUsingBlock:(id /* block */)arg1;
- (id)geoMapItem;
- (id)geoMapItemWithDetourInfo:(id)arg1;
- (bool)hasBrandMUID;
- (bool)hasExpiredComponentsAsOf:(double)arg1;
- (bool)hasMapsId;
- (bool)hasMuid;
- (bool)hasPreferredMuid;
- (bool)hasReferenceFrame;
- (bool)hasRequestData;
- (bool)hasResultProviderId;
- (bool)hasStatus;
- (bool)hasUpdateVersion;
- (unsigned long long)hash;
- (bool)isDisputed;
- (bool)isEqual:(id)arg1;
- (bool)isStandAloneBrand;
- (bool)isStringIndicatingPoiInsideWestfield:(id)arg1;
- (bool)isSupportedVenue;
- (bool)isSupportedVenuePOI;
- (id)mapsId;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)muid;
- (bool)phoneNumberOptsOutOfAds:(id)arg1;
- (id)phoneNumbers;
- (int)placeDisplayType;
- (unsigned long long)preferredMuid;
- (bool)readFrom:(id)arg1;
- (int)referenceFrame;
- (id)referenceFrameAsString:(int)arg1;
- (id)requestData;
- (int)resultProviderId;
- (id)secondaryName;
- (id)secondarySpokenName;
- (void)setComponents:(id)arg1;
- (void)setFirstSeenTimestamp:(double)arg1;
- (void)setHasMuid:(bool)arg1;
- (void)setHasPreferredMuid:(bool)arg1;
- (void)setHasReferenceFrame:(bool)arg1;
- (void)setHasResultProviderId:(bool)arg1;
- (void)setHasStatus:(bool)arg1;
- (void)setHasUpdateVersion:(bool)arg1;
- (void)setMapsId:(id)arg1;
- (void)setMuid:(unsigned long long)arg1;
- (void)setPreferredMuid:(unsigned long long)arg1;
- (void)setReferenceFrame:(int)arg1;
- (void)setRequestData:(id)arg1;
- (void)setResultProviderId:(int)arg1;
- (void)setStatus:(int)arg1;
- (void)setUpdateVersion:(unsigned long long)arg1;
- (id)spokenNameForLocale:(id)arg1;
- (int)status;
- (id)statusAsString:(int)arg1;
- (bool)statusCodeIsValid;
- (id)successfulComponentWithValuesOfType:(int)arg1;
- (id)unknownFields;
- (unsigned long long)updateVersion;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOPBTransitIncident.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOPBTransitIncident.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOPBTransitIncident : PBCodable <NSCopying> {
    NSMutableArray * _affectedEntitys;
    bool  _blocking;
    unsigned int  _creationDatetime;
    unsigned int  _endDatetime;
    struct { 
        unsigned int incidentMuid : 1; 
        unsigned int creationDatetime : 1; 
        unsigned int endDatetime : 1; 
        unsigned int iconEnum : 1; 
        unsigned int incidentIndex : 1; 
        unsigned int startDatetime : 1; 
        unsigned int updatedDatetime : 1; 
        unsigned int blocking : 1; 
    }  _has;
    int  _iconEnum;
    unsigned int  _incidentIndex;
    unsigned long long  _incidentMuid;
    GEOPBTransitArtwork * _incidentTypeArtwork;
    NSString * _longDescriptionString;
    NSString * _messageForAllBlocking;
    NSString * _messageForIncidentType;
    NSString * _messageString;
    NSString * _shortDescriptionString;
    unsigned int  _startDatetime;
    NSString * _titleString;
    PBUnknownFields * _unknownFields;
    unsigned int  _updatedDatetime;
}

@property (nonatomic, retain) NSMutableArray *affectedEntitys;
@property (nonatomic) bool blocking;
@property (nonatomic) unsigned int creationDatetime;
@property (nonatomic) unsigned int endDatetime;
@property (nonatomic) bool hasBlocking;
@property (nonatomic) bool hasCreationDatetime;
@property (nonatomic) bool hasEndDatetime;
@property (nonatomic) bool hasIconEnum;
@property (nonatomic) bool hasIncidentIndex;
@property (nonatomic) bool hasIncidentMuid;
@property (nonatomic, readonly) bool hasIncidentTypeArtwork;
@property (nonatomic, readonly) bool hasLongDescriptionString;
@property (nonatomic, readonly) bool hasMessageForAllBlocking;
@property (nonatomic, readonly) bool hasMessageForIncidentType;
@property (nonatomic, readonly) bool hasMessageString;
@property (nonatomic, readonly) bool hasShortDescriptionString;
@property (nonatomic) bool hasStartDatetime;
@property (nonatomic, readonly) bool hasTitleString;
@property (nonatomic) bool hasUpdatedDatetime;
@property (nonatomic) int iconEnum;
@property (nonatomic) unsigned int incidentIndex;
@property (nonatomic) unsigned long long incidentMuid;
@property (nonatomic, retain) GEOPBTransitArtwork *incidentTypeArtwork;
@property (nonatomic, retain) NSString *longDescriptionString;
@property (nonatomic, retain) NSString *messageForAllBlocking;
@property (nonatomic, retain) NSString *messageForIncidentType;
@property (nonatomic, retain) NSString *messageString;
@property (nonatomic, retain) NSString *shortDescriptionString;
@property (nonatomic) unsigned int startDatetime;
@property (nonatomic, retain) NSString *titleString;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;
@property (nonatomic) unsigned int updatedDatetime;

+ (Class)affectedEntityType;

- (void).cxx_destruct;
- (int)StringAsIconEnum:(id)arg1;
- (void)addAffectedEntity:(id)arg1;
- (id)affectedEntityAtIndex:(unsigned long long)arg1;
- (id)affectedEntitys;
- (unsigned long long)affectedEntitysCount;
- (bool)blocking;
- (void)clearAffectedEntitys;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned int)creationDatetime;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)endDatetime;
- (bool)hasBlocking;
- (bool)hasCreationDatetime;
- (bool)hasEndDatetime;
- (bool)hasIconEnum;
- (bool)hasIncidentIndex;
- (bool)hasIncidentMuid;
- (bool)hasIncidentTypeArtwork;
- (bool)hasLongDescriptionString;
- (bool)hasMessageForAllBlocking;
- (bool)hasMessageForIncidentType;
- (bool)hasMessageString;
- (bool)hasShortDescriptionString;
- (bool)hasStartDatetime;
- (bool)hasTitleString;
- (bool)hasUpdatedDatetime;
- (unsigned long long)hash;
- (int)iconEnum;
- (id)iconEnumAsString:(int)arg1;
- (unsigned int)incidentIndex;
- (unsigned long long)incidentMuid;
- (id)incidentTypeArtwork;
- (bool)isEqual:(id)arg1;
- (id)longDescriptionString;
- (void)mergeFrom:(id)arg1;
- (id)messageForAllBlocking;
- (id)messageForIncidentType;
- (id)messageString;
- (bool)readFrom:(id)arg1;
- (void)setAffectedEntitys:(id)arg1;
- (void)setBlocking:(bool)arg1;
- (void)setCreationDatetime:(unsigned int)arg1;
- (void)setEndDatetime:(unsigned int)arg1;
- (void)setHasBlocking:(bool)arg1;
- (void)setHasCreationDatetime:(bool)arg1;
- (void)setHasEndDatetime:(bool)arg1;
- (void)setHasIconEnum:(bool)arg1;
- (void)setHasIncidentIndex:(bool)arg1;
- (void)setHasIncidentMuid:(bool)arg1;
- (void)setHasStartDatetime:(bool)arg1;
- (void)setHasUpdatedDatetime:(bool)arg1;
- (void)setIconEnum:(int)arg1;
- (void)setIncidentIndex:(unsigned int)arg1;
- (void)setIncidentMuid:(unsigned long long)arg1;
- (void)setIncidentTypeArtwork:(id)arg1;
- (void)setLongDescriptionString:(id)arg1;
- (void)setMessageForAllBlocking:(id)arg1;
- (void)setMessageForIncidentType:(id)arg1;
- (void)setMessageString:(id)arg1;
- (void)setShortDescriptionString:(id)arg1;
- (void)setStartDatetime:(unsigned int)arg1;
- (void)setTitleString:(id)arg1;
- (void)setUpdatedDatetime:(unsigned int)arg1;
- (id)shortDescriptionString;
- (unsigned int)startDatetime;
- (id)titleString;
- (id)unknownFields;
- (unsigned int)updatedDatetime;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>LOGMSGEVENTLogMsgEventRideBookedSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/LOGMSGEVENTLogMsgEventRideBookedSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface LOGMSGEVENTLogMsgEventRideBookedSession : PBCodable <NSCopying> {
    bool  _bookedUsingMaps;
    bool  _cancelled;
    bool  _contactedDriver;
    struct { 
        unsigned int statusIssue : 1; 
        unsigned int bookedUsingMaps : 1; 
        unsigned int cancelled : 1; 
        unsigned int contactedDriver : 1; 
        unsigned int invalidVehicleLocation : 1; 
        unsigned int missingVehicleLocation : 1; 
        unsigned int tappedProactiveTrayItem : 1; 
        unsigned int viewedDetails : 1; 
        unsigned int viewedInProactiveTray : 1; 
    }  _has;
    NSMutableArray * _intentResponseFailures;
    bool  _invalidVehicleLocation;
    bool  _missingVehicleLocation;
    NSString * _rideAppId;
    NSString * _rideAppVersion;
    NSString * _rideBookedSessionId;
    int  _statusIssue;
    bool  _tappedProactiveTrayItem;
    bool  _viewedDetails;
    bool  _viewedInProactiveTray;
}

@property (nonatomic) bool bookedUsingMaps;
@property (nonatomic) bool cancelled;
@property (nonatomic) bool contactedDriver;
@property (nonatomic) bool hasBookedUsingMaps;
@property (nonatomic) bool hasCancelled;
@property (nonatomic) bool hasContactedDriver;
@property (nonatomic) bool hasInvalidVehicleLocation;
@property (nonatomic) bool hasMissingVehicleLocation;
@property (nonatomic, readonly) bool hasRideAppId;
@property (nonatomic, readonly) bool hasRideAppVersion;
@property (nonatomic, readonly) bool hasRideBookedSessionId;
@property (nonatomic) bool hasStatusIssue;
@property (nonatomic) bool hasTappedProactiveTrayItem;
@property (nonatomic) bool hasViewedDetails;
@property (nonatomic) bool hasViewedInProactiveTray;
@property (nonatomic, retain) NSMutableArray *intentResponseFailures;
@property (nonatomic) bool invalidVehicleLocation;
@property (nonatomic) bool missingVehicleLocation;
@property (nonatomic, retain) NSString *rideAppId;
@property (nonatomic, retain) NSString *rideAppVersion;
@property (nonatomic, retain) NSString *rideBookedSessionId;
@property (nonatomic) int statusIssue;
@property (nonatomic) bool tappedProactiveTrayItem;
@property (nonatomic) bool viewedDetails;
@property (nonatomic) bool viewedInProactiveTray;

+ (Class)intentResponseFailureType;

- (void).cxx_destruct;
- (int)StringAsStatusIssue:(id)arg1;
- (void)addIntentResponseFailure:(id)arg1;
- (bool)bookedUsingMaps;
- (bool)cancelled;
- (void)clearIntentResponseFailures;
- (bool)contactedDriver;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasBookedUsingMaps;
- (bool)hasCancelled;
- (bool)hasContactedDriver;
- (bool)hasInvalidVehicleLocation;
- (bool)hasMissingVehicleLocation;
- (bool)hasRideAppId;
- (bool)hasRideAppVersion;
- (bool)hasRideBookedSessionId;
- (bool)hasStatusIssue;
- (bool)hasTappedProactiveTrayItem;
- (bool)hasViewedDetails;
- (bool)hasViewedInProactiveTray;
- (unsigned long long)hash;
- (id)intentResponseFailureAtIndex:(unsigned long long)arg1;
- (id)intentResponseFailures;
- (unsigned long long)intentResponseFailuresCount;
- (bool)invalidVehicleLocation;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)missingVehicleLocation;
- (bool)readFrom:(id)arg1;
- (id)rideAppId;
- (id)rideAppVersion;
- (id)rideBookedSessionId;
- (void)setBookedUsingMaps:(bool)arg1;
- (void)setCancelled:(bool)arg1;
- (void)setContactedDriver:(bool)arg1;
- (void)setHasBookedUsingMaps:(bool)arg1;
- (void)setHasCancelled:(bool)arg1;
- (void)setHasContactedDriver:(bool)arg1;
- (void)setHasInvalidVehicleLocation:(bool)arg1;
- (void)setHasMissingVehicleLocation:(bool)arg1;
- (void)setHasStatusIssue:(bool)arg1;
- (void)setHasTappedProactiveTrayItem:(bool)arg1;
- (void)setHasViewedDetails:(bool)arg1;
- (void)setHasViewedInProactiveTray:(bool)arg1;
- (void)setIntentResponseFailures:(id)arg1;
- (void)setInvalidVehicleLocation:(bool)arg1;
- (void)setMissingVehicleLocation:(bool)arg1;
- (void)setRideAppId:(id)arg1;
- (void)setRideAppVersion:(id)arg1;
- (void)setRideBookedSessionId:(id)arg1;
- (void)setStatusIssue:(int)arg1;
- (void)setTappedProactiveTrayItem:(bool)arg1;
- (void)setViewedDetails:(bool)arg1;
- (void)setViewedInProactiveTray:(bool)arg1;
- (int)statusIssue;
- (id)statusIssueAsString:(int)arg1;
- (bool)tappedProactiveTrayItem;
- (bool)viewedDetails;
- (bool)viewedInProactiveTray;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

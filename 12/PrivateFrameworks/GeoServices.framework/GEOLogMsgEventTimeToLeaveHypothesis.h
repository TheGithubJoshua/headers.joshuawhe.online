<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOLogMsgEventTimeToLeaveHypothesis.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOLogMsgEventTimeToLeaveHypothesis.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOLogMsgEventTimeToLeaveHypothesis : PBCodable <NSCopying> {
    int  _arrival;
    int  _departure;
    double  _earliestArrivalOffset;
    double  _earliestDepartureOffset;
    struct { 
        unsigned int earliestArrivalOffset : 1; 
        unsigned int earliestDepartureOffset : 1; 
        unsigned int latestArrivalOffset : 1; 
        unsigned int latestDepartureOffset : 1; 
        unsigned int arrival : 1; 
        unsigned int departure : 1; 
        unsigned int numberOfReroutes : 1; 
        unsigned int ttlUiNotificationShown : 1; 
    }  _has;
    double  _latestArrivalOffset;
    double  _latestDepartureOffset;
    unsigned int  _numberOfReroutes;
    int  _ttlUiNotificationShown;
}

@property (nonatomic) int arrival;
@property (nonatomic) int departure;
@property (nonatomic) double earliestArrivalOffset;
@property (nonatomic) double earliestDepartureOffset;
@property (nonatomic) bool hasArrival;
@property (nonatomic) bool hasDeparture;
@property (nonatomic) bool hasEarliestArrivalOffset;
@property (nonatomic) bool hasEarliestDepartureOffset;
@property (nonatomic) bool hasLatestArrivalOffset;
@property (nonatomic) bool hasLatestDepartureOffset;
@property (nonatomic) bool hasNumberOfReroutes;
@property (nonatomic) bool hasTtlUiNotificationShown;
@property (nonatomic) double latestArrivalOffset;
@property (nonatomic) double latestDepartureOffset;
@property (nonatomic) unsigned int numberOfReroutes;
@property (nonatomic) int ttlUiNotificationShown;

- (int)StringAsArrival:(id)arg1;
- (int)StringAsDeparture:(id)arg1;
- (int)StringAsTtlUiNotificationShown:(id)arg1;
- (int)arrival;
- (id)arrivalAsString:(int)arg1;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)departure;
- (id)departureAsString:(int)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (double)earliestArrivalOffset;
- (double)earliestDepartureOffset;
- (bool)hasArrival;
- (bool)hasDeparture;
- (bool)hasEarliestArrivalOffset;
- (bool)hasEarliestDepartureOffset;
- (bool)hasLatestArrivalOffset;
- (bool)hasLatestDepartureOffset;
- (bool)hasNumberOfReroutes;
- (bool)hasTtlUiNotificationShown;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (double)latestArrivalOffset;
- (double)latestDepartureOffset;
- (void)mergeFrom:(id)arg1;
- (unsigned int)numberOfReroutes;
- (bool)readFrom:(id)arg1;
- (void)setArrival:(int)arg1;
- (void)setDeparture:(int)arg1;
- (void)setEarliestArrivalOffset:(double)arg1;
- (void)setEarliestDepartureOffset:(double)arg1;
- (void)setHasArrival:(bool)arg1;
- (void)setHasDeparture:(bool)arg1;
- (void)setHasEarliestArrivalOffset:(bool)arg1;
- (void)setHasEarliestDepartureOffset:(bool)arg1;
- (void)setHasLatestArrivalOffset:(bool)arg1;
- (void)setHasLatestDepartureOffset:(bool)arg1;
- (void)setHasNumberOfReroutes:(bool)arg1;
- (void)setHasTtlUiNotificationShown:(bool)arg1;
- (void)setLatestArrivalOffset:(double)arg1;
- (void)setLatestDepartureOffset:(double)arg1;
- (void)setNumberOfReroutes:(unsigned int)arg1;
- (void)setTtlUiNotificationShown:(int)arg1;
- (int)ttlUiNotificationShown;
- (id)ttlUiNotificationShownAsString:(int)arg1;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

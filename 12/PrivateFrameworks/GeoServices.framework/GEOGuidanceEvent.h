<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOGuidanceEvent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOGuidanceEvent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOGuidanceEvent : PBCodable <NSCopying> {
    int  _distanceZilchIndex;
    int  _endValidDistance;
    int  _eventType;
    struct { 
        unsigned int maxSpeed : 1; 
        unsigned int minSpeed : 1; 
        unsigned int distanceZilchIndex : 1; 
        unsigned int endValidDistance : 1; 
        unsigned int eventType : 1; 
        unsigned int identifier : 1; 
        unsigned int offsetForDistanceString : 1; 
        unsigned int startValidDistance : 1; 
        unsigned int sticky : 1; 
    }  _has;
    unsigned int  _identifier;
    GEOVisualLaneGuidance * _laneGuidance;
    double  _maxSpeed;
    double  _minSpeed;
    int  _offsetForDistanceString;
    GEOSignGuidance * _signGuidance;
    GEOSpokenGuidance * _spokenGuidance;
    int  _startValidDistance;
    bool  _sticky;
}

@property (nonatomic) int distanceZilchIndex;
@property (nonatomic) int endValidDistance;
@property (nonatomic) int eventType;
@property (nonatomic) bool hasDistanceZilchIndex;
@property (nonatomic) bool hasEndValidDistance;
@property (nonatomic) bool hasEventType;
@property (nonatomic) bool hasIdentifier;
@property (nonatomic, readonly) bool hasLaneGuidance;
@property (nonatomic) bool hasMaxSpeed;
@property (nonatomic) bool hasMinSpeed;
@property (nonatomic) bool hasOffsetForDistanceString;
@property (nonatomic, readonly) bool hasSignGuidance;
@property (nonatomic, readonly) bool hasSpokenGuidance;
@property (nonatomic) bool hasStartValidDistance;
@property (nonatomic) bool hasSticky;
@property (nonatomic) unsigned int identifier;
@property (nonatomic, retain) GEOVisualLaneGuidance *laneGuidance;
@property (nonatomic) double maxSpeed;
@property (nonatomic) double minSpeed;
@property (nonatomic) int offsetForDistanceString;
@property (nonatomic, retain) GEOSignGuidance *signGuidance;
@property (nonatomic, retain) GEOSpokenGuidance *spokenGuidance;
@property (nonatomic) int startValidDistance;
@property (nonatomic) bool sticky;

- (void).cxx_destruct;
- (int)StringAsEventType:(id)arg1;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (int)distanceZilchIndex;
- (int)endValidDistance;
- (int)eventType;
- (id)eventTypeAsString:(int)arg1;
- (bool)hasDistanceZilchIndex;
- (bool)hasEndValidDistance;
- (bool)hasEventType;
- (bool)hasIdentifier;
- (bool)hasLaneGuidance;
- (bool)hasMaxSpeed;
- (bool)hasMinSpeed;
- (bool)hasOffsetForDistanceString;
- (bool)hasSignGuidance;
- (bool)hasSpokenGuidance;
- (bool)hasStartValidDistance;
- (bool)hasSticky;
- (unsigned long long)hash;
- (unsigned int)identifier;
- (bool)isEqual:(id)arg1;
- (id)laneGuidance;
- (double)maxSpeed;
- (void)mergeFrom:(id)arg1;
- (double)minSpeed;
- (int)offsetForDistanceString;
- (bool)readFrom:(id)arg1;
- (void)setDistanceZilchIndex:(int)arg1;
- (void)setEndValidDistance:(int)arg1;
- (void)setEventType:(int)arg1;
- (void)setHasDistanceZilchIndex:(bool)arg1;
- (void)setHasEndValidDistance:(bool)arg1;
- (void)setHasEventType:(bool)arg1;
- (void)setHasIdentifier:(bool)arg1;
- (void)setHasMaxSpeed:(bool)arg1;
- (void)setHasMinSpeed:(bool)arg1;
- (void)setHasOffsetForDistanceString:(bool)arg1;
- (void)setHasStartValidDistance:(bool)arg1;
- (void)setHasSticky:(bool)arg1;
- (void)setIdentifier:(unsigned int)arg1;
- (void)setLaneGuidance:(id)arg1;
- (void)setMaxSpeed:(double)arg1;
- (void)setMinSpeed:(double)arg1;
- (void)setOffsetForDistanceString:(int)arg1;
- (void)setSignGuidance:(id)arg1;
- (void)setSpokenGuidance:(id)arg1;
- (void)setStartValidDistance:(int)arg1;
- (void)setSticky:(bool)arg1;
- (id)signGuidance;
- (id)spokenGuidance;
- (int)startValidDistance;
- (bool)sticky;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

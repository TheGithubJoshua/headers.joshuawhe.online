<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEORouteHypothesisMonitor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEORouteHypothesisMonitor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEORouteHypothesisMonitor : NSObject <GEOETAUpdaterDelegate, NSSecureCoding> {
    GEORouteHypothesizerAnalyticsStore * _analyticsStore;
    NSDate * _arrivalDate;
    GEOMapRegion * _arrivalMapRegion;
    GEOETARoute * _baselineETARoute;
    GEOCommonOptions * _commonOptions;
    GEODirectionsRequest * _currentRequest;
    GEOComposedWaypoint * _destination;
    GEOETAUpdater * _etaUpdater;
    GEODirectionsRequestFeedback * _feedback;
    id /* block */  _handler;
    bool  _hasArrived;
    GEORouteHypothesis * _hypothesis;
    bool  _isTraveling;
    GEOLocation * _lastLocation;
    GEOLocation * _lastMatchedLocation;
    GEOETARoute * _liveETARoute;
    bool  _needReroute;
    GEOLocation * _originLocation;
    NSObject<OS_dispatch_queue> * _requestIsolationQueue;
    NSMutableArray * _rerouteEntries;
    GEOComposedRoute * _route;
    GEORouteAttributes * _routeAttributes;
    GEORouteMatch * _routeMatch;
    GEOComposedWaypoint * _source;
    NSString * _traceName;
    <GEOTTLTraceRecorder> * _traceRecorder;
    GEOMapServiceTraits * _traits;
    int  _transportType;
    double  _travelScore;
}

@property (nonatomic, readonly) NSDate *arrivalDate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) GEOComposedWaypoint *destination;
@property (nonatomic, retain) GEODirectionsRequestFeedback *feedback;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) GEORouteHypothesis *hypothesis;
@property (nonatomic, readonly) NSString *routeName;
@property (nonatomic, readonly) GEOComposedWaypoint *source;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsDirections;
@property (nonatomic, readonly) bool supportsLiveTraffic;
@property (nonatomic, readonly) int transportType;

+ (id)monitorWithSource:(id)arg1 toDestination:(id)arg2 transportType:(int)arg3 arrivalDate:(id)arg4 traceName:(id)arg5 traits:(id)arg6;
+ (id)serverFormattedStringFormatter;
+ (void)setServerFormattedStringFormatter:(id)arg1;
+ (void)setTTLTraceRecorderFactory:(id)arg1;
+ (void)setUserPreferencesProvider:(id)arg1;
+ (bool)supportsSecureCoding;
+ (id)ttlTraceRecorderFactory;
+ (id)userPreferencesProvider;

- (void).cxx_destruct;
- (void)_commonInit;
- (void)_executeBlockAccessingCurrentRequest:(id /* block */)arg1;
- (void)_fetchETAWithRouteMatch:(id)arg1;
- (void)_finishEtaUpdaterInit;
- (bool)_hasInitialRoute;
- (bool)_isNavigating;
- (bool)_isNavigatingToDestination;
- (void)_recalculateETAWithRouteMatch:(id)arg1;
- (void)_recievedRouteResponse:(id)arg1 forLocation:(id)arg2 isReroute:(bool)arg3;
- (void)_recordTraceForEvent:(long long)arg1 parameters:(id)arg2;
- (void)_requestNewRouteFromLocation:(id)arg1 usualRouteData:(id)arg2;
- (void)_routeRequestFailed:(id)arg1;
- (void)_showDebugAlert;
- (void)_updateLocation:(id)arg1 allowServer:(bool)arg2;
- (void)_updateRouteMatchETAAndTravelState;
- (void)_updateScoreForLocation:(id)arg1;
- (id)arrivalDate;
- (void)callHandlerIvar;
- (void)cancelCurrentRequest;
- (void)checkRouteForLocation:(id)arg1;
- (void)clientDisplayedUINotification:(unsigned long long)arg1;
- (void)dealloc;
- (id)description;
- (id)destination;
- (void)encodeWithCoder:(id)arg1;
- (void)etaUpdater:(id)arg1 receivedETATrafficUpdateResponse:(id)arg2;
- (void)etaUpdater:(id)arg1 receivedError:(id)arg2;
- (void)etaUpdater:(id)arg1 willSendETATrafficUpdateRequest:(id)arg2;
- (void)etaUpdaterReceivedInvalidRoute:(id)arg1 newRoute:(id)arg2 incidentsOnRoute:(id)arg3 incidentsOffRoute:(id)arg4;
- (void)etaUpdaterRequestCompleted:(id)arg1;
- (id)etaUpdaterRoutesForETATrafficUpdateRequest:(id)arg1;
- (void)etaUpdaterUpdatedETA:(id)arg1;
- (id)feedback;
- (id)hypothesis;
- (id)initWithCoder:(id)arg1;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 transportType:(int)arg3 arrivalDate:(id)arg4 traceName:(id)arg5 traits:(id)arg6;
- (id)navDestination;
- (void)recordETAUpdatesAfterEventStart;
- (id)routeMatchForLocation:(id)arg1;
- (id)routeName;
- (void)setFeedback:(id)arg1;
- (id)source;
- (void)stopMonitoring;
- (bool)supportsDirections;
- (bool)supportsLiveTraffic;
- (int)transportType;
- (void)travelStateChanged;
- (void)updateLocation:(id)arg1 allowServer:(bool)arg2 hypothesisHandler:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOUsageCollection.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOUsageCollection.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOUsageCollection : PBCodable <NSCopying> {
    int  _cellWifi;
    NSString * _countryCode;
    int  _geoService;
    struct { 
        unsigned int sessionID : 1; 
        unsigned int requestErrorCode : 1; 
        unsigned int timestamp : 1; 
        unsigned int cellWifi : 1; 
        unsigned int geoService : 1; 
        unsigned int placeRequestType : 1; 
        unsigned int requestDataSize : 1; 
        unsigned int responseDataSize : 1; 
        unsigned int responseTime : 1; 
        unsigned int sessionIDIsPersistent : 1; 
    }  _has;
    NSString * _hwMachine;
    int  _placeRequestType;
    int  _requestDataSize;
    long long  _requestErrorCode;
    NSString * _requestErrorDescription;
    NSString * _requestErrorDomain;
    int  _responseDataSize;
    int  _responseTime;
    struct GEOSessionID { 
        unsigned long long _high; 
        unsigned long long _low; 
    }  _sessionID;
    bool  _sessionIDIsPersistent;
    struct GEOTileUsage { unsigned int x1; int x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; } * _tileUsages;
    unsigned long long  _tileUsagesCount;
    unsigned long long  _tileUsagesSpace;
    double  _timestamp;
}

@property (nonatomic) int cellWifi;
@property (nonatomic, retain) NSString *countryCode;
@property (nonatomic) int geoService;
@property (nonatomic) bool hasCellWifi;
@property (nonatomic, readonly) bool hasCountryCode;
@property (nonatomic) bool hasGeoService;
@property (nonatomic, readonly) bool hasHwMachine;
@property (nonatomic) bool hasPlaceRequestType;
@property (nonatomic) bool hasRequestDataSize;
@property (nonatomic) bool hasRequestErrorCode;
@property (nonatomic, readonly) bool hasRequestErrorDescription;
@property (nonatomic, readonly) bool hasRequestErrorDomain;
@property (nonatomic) bool hasResponseDataSize;
@property (nonatomic) bool hasResponseTime;
@property (nonatomic) bool hasSessionID;
@property (nonatomic) bool hasSessionIDIsPersistent;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic, retain) NSString *hwMachine;
@property (nonatomic) int placeRequestType;
@property (nonatomic) int requestDataSize;
@property (nonatomic) long long requestErrorCode;
@property (nonatomic, retain) NSString *requestErrorDescription;
@property (nonatomic, retain) NSString *requestErrorDomain;
@property (nonatomic) int responseDataSize;
@property (nonatomic) int responseTime;
@property (nonatomic) struct GEOSessionID { unsigned long long x1; unsigned long long x2; } sessionID;
@property (nonatomic) bool sessionIDIsPersistent;
@property (nonatomic, readonly) struct GEOTileUsage { unsigned int x1; int x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; }*tileUsages;
@property (nonatomic, readonly) unsigned long long tileUsagesCount;
@property (nonatomic) double timestamp;

- (void).cxx_destruct;
- (int)StringAsCellWifi:(id)arg1;
- (int)StringAsGeoService:(id)arg1;
- (int)StringAsPlaceRequestType:(id)arg1;
- (void)addTileUsage:(struct GEOTileUsage { unsigned int x1; int x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; })arg1;
- (int)cellWifi;
- (id)cellWifiAsString:(int)arg1;
- (void)clearTileUsages;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)countryCode;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (int)geoService;
- (id)geoServiceAsString:(int)arg1;
- (bool)hasCellWifi;
- (bool)hasCountryCode;
- (bool)hasGeoService;
- (bool)hasHwMachine;
- (bool)hasPlaceRequestType;
- (bool)hasRequestDataSize;
- (bool)hasRequestErrorCode;
- (bool)hasRequestErrorDescription;
- (bool)hasRequestErrorDomain;
- (bool)hasResponseDataSize;
- (bool)hasResponseTime;
- (bool)hasSessionID;
- (bool)hasSessionIDIsPersistent;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (id)hwMachine;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (int)placeRequestType;
- (id)placeRequestTypeAsString:(int)arg1;
- (bool)readFrom:(id)arg1;
- (int)requestDataSize;
- (long long)requestErrorCode;
- (id)requestErrorDescription;
- (id)requestErrorDomain;
- (int)responseDataSize;
- (int)responseTime;
- (struct GEOSessionID { unsigned long long x1; unsigned long long x2; })sessionID;
- (bool)sessionIDIsPersistent;
- (void)setCellWifi:(int)arg1;
- (void)setCountryCode:(id)arg1;
- (void)setGeoService:(int)arg1;
- (void)setHasCellWifi:(bool)arg1;
- (void)setHasGeoService:(bool)arg1;
- (void)setHasPlaceRequestType:(bool)arg1;
- (void)setHasRequestDataSize:(bool)arg1;
- (void)setHasRequestErrorCode:(bool)arg1;
- (void)setHasResponseDataSize:(bool)arg1;
- (void)setHasResponseTime:(bool)arg1;
- (void)setHasSessionID:(bool)arg1;
- (void)setHasSessionIDIsPersistent:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHwMachine:(id)arg1;
- (void)setPlaceRequestType:(int)arg1;
- (void)setRequestDataSize:(int)arg1;
- (void)setRequestErrorCode:(long long)arg1;
- (void)setRequestErrorDescription:(id)arg1;
- (void)setRequestErrorDomain:(id)arg1;
- (void)setResponseDataSize:(int)arg1;
- (void)setResponseTime:(int)arg1;
- (void)setSessionID:(struct GEOSessionID { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setSessionIDIsPersistent:(bool)arg1;
- (void)setTileUsages:(struct GEOTileUsage { unsigned int x1; int x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; }*)arg1 count:(unsigned long long)arg2;
- (void)setTimestamp:(double)arg1;
- (struct GEOTileUsage { unsigned int x1; int x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; })tileUsageAtIndex:(unsigned long long)arg1;
- (struct GEOTileUsage { unsigned int x1; int x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; }*)tileUsages;
- (unsigned long long)tileUsagesCount;
- (double)timestamp;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

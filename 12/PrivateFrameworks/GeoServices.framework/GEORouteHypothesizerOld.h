<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEORouteHypothesizerOld.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEORouteHypothesizerOld.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEORouteHypothesizerOld : NSObject <GEOETAUpdaterDelegate, GEORouteHypothesizerUpdaterDelegate> {
    NSDate * _arrivalDate;
    GEOETARoute * _baselineETARoute;
    <GEORouteHypothesizerDelegate> * _delegate;
    NSDate * _departureDate;
    GEOComposedWaypoint * _destination;
    unsigned long long  _etaUpdateFrequency;
    double  _etaUpdateInterval;
    GEOETAUpdater * _etaUpdater;
    GEORoute * _existingRoute;
    GEODirectionsRequestFeedback * _feedback;
    id /* block */  _handler;
    GEORouteHypothesisOld * _hypothesis;
    NSDate * _lastETARequestDate;
    GEOLocation * _lastLocation;
    GEOETARoute * _liveETARoute;
    GEOLocationShifter * _locationShifter;
    GEORouteAttributes * _routeAttributes;
    GEOComposedWaypoint * _source;
    NSDate * _suggestedNextUpdateDate;
    GEORouteHypothesizerUpdater * _updater;
    NSData * _usualRouteData;
}

@property (nonatomic, readonly) NSDate *arrivalDate;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <GEORouteHypothesizerDelegate> *delegate;
@property (nonatomic, readonly) NSDate *departureDate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) GEOComposedWaypoint *destination;
@property (nonatomic) unsigned long long etaUpdateFrequency;
@property (nonatomic, retain) GEODirectionsRequestFeedback *feedback;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) GEOComposedRoute *route;
@property (nonatomic, readonly) GEOComposedWaypoint *source;
@property (nonatomic, readonly) NSDate *suggestedNextUpdateDate;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsDirections;
@property (nonatomic, readonly) bool supportsLiveTraffic;

- (void).cxx_destruct;
- (void)_commonInit;
- (void)_createUpdaterWithStartingLocation:(id)arg1;
- (void)_refreshETAWithRouteMatch:(id)arg1;
- (void)_updateETAWithRouteMatch:(id)arg1;
- (void)_updateLocation:(id)arg1 hypothesisHandler:(id /* block */)arg2;
- (void)_updateLocationAndETAUpdateInterval;
- (void)addRouteAttributes:(id)arg1;
- (id)arrivalDate;
- (void)dealloc;
- (id)delegate;
- (id)departureDate;
- (id)destination;
- (unsigned long long)etaUpdateFrequency;
- (void)etaUpdater:(id)arg1 receivedETATrafficUpdateResponse:(id)arg2;
- (void)etaUpdater:(id)arg1 receivedError:(id)arg2;
- (void)etaUpdater:(id)arg1 willSendETATrafficUpdateRequest:(id)arg2;
- (void)etaUpdaterReceivedInvalidRoute:(id)arg1 newRoute:(id)arg2 incidentsOnRoute:(id)arg3 incidentsOffRoute:(id)arg4;
- (id)etaUpdaterRoutesForETATrafficUpdateRequest:(id)arg1;
- (void)etaUpdaterUpdatedETA:(id)arg1;
- (id)feedback;
- (id)initWithExistingRoute:(id)arg1 source:(id)arg2 destination:(id)arg3 etaUpdater:(id)arg4;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 arrivalDate:(id)arg3 usualRouteData:(id)arg4;
- (id)initWithSource:(id)arg1 toDestination:(id)arg2 departureDate:(id)arg3 usualRouteData:(id)arg4;
- (id)route;
- (void)routeHypothesizerUpdater:(id)arg1 receivedNewRoute:(id)arg2 request:(id)arg3 response:(id)arg4;
- (void)routeHypothesizerUpdater:(id)arg1 willRequestNewRoute:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setEtaUpdateFrequency:(unsigned long long)arg1;
- (void)setFeedback:(id)arg1;
- (id)source;
- (id)suggestedNextUpdateDate;
- (bool)supportsDirections;
- (bool)supportsLiveTraffic;
- (void)updateLocation:(id)arg1 hypothesisHandler:(id /* block */)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOABAssignmentResponse.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOABAssignmentResponse.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOABAssignmentResponse : PBCodable <NSCopying> {
    NSMutableArray * _assignments;
    unsigned long long  _branchExpirationTtlHours;
    GEOABClientConfig * _clientConfig;
    struct { 
        unsigned int branchExpirationTtlHours : 1; 
        unsigned int refreshIntervalSeconds : 1; 
        unsigned int timestamp : 1; 
        unsigned int invalidatePoiCache : 1; 
        unsigned int invalidateTileCache : 1; 
    }  _has;
    bool  _invalidatePoiCache;
    bool  _invalidateTileCache;
    GEOABSecondPartyPlaceRequestClientMetaData * _mapsAbClientMetadata;
    GEOABSecondPartyPlaceRequestClientMetaData * _parsecClientMetadata;
    GEOABSecondPartyPlaceRequestClientMetaData * _rapClientMetadata;
    unsigned long long  _refreshIntervalSeconds;
    NSString * _requestGuid;
    GEOABSecondPartyPlaceRequestClientMetaData * _siriClientMetadata;
    NSString * _sourceURL;
    double  _timestamp;
    PBUnknownFields * _unknownFields;
}

@property (nonatomic, retain) NSMutableArray *assignments;
@property (nonatomic) unsigned long long branchExpirationTtlHours;
@property (nonatomic, retain) GEOABClientConfig *clientConfig;
@property (nonatomic) bool hasBranchExpirationTtlHours;
@property (nonatomic, readonly) bool hasClientConfig;
@property (nonatomic) bool hasInvalidatePoiCache;
@property (nonatomic) bool hasInvalidateTileCache;
@property (nonatomic, readonly) bool hasMapsAbClientMetadata;
@property (nonatomic, readonly) bool hasParsecClientMetadata;
@property (nonatomic, readonly) bool hasRapClientMetadata;
@property (nonatomic) bool hasRefreshIntervalSeconds;
@property (nonatomic, readonly) bool hasRequestGuid;
@property (nonatomic, readonly) bool hasSiriClientMetadata;
@property (nonatomic, readonly) bool hasSourceURL;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool invalidatePoiCache;
@property (nonatomic) bool invalidateTileCache;
@property (nonatomic, retain) GEOABSecondPartyPlaceRequestClientMetaData *mapsAbClientMetadata;
@property (nonatomic, retain) GEOABSecondPartyPlaceRequestClientMetaData *parsecClientMetadata;
@property (nonatomic, retain) GEOABSecondPartyPlaceRequestClientMetaData *rapClientMetadata;
@property (nonatomic) unsigned long long refreshIntervalSeconds;
@property (nonatomic, retain) NSString *requestGuid;
@property (nonatomic, retain) GEOABSecondPartyPlaceRequestClientMetaData *siriClientMetadata;
@property (nonatomic, retain) NSString *sourceURL;
@property (nonatomic) double timestamp;
@property (nonatomic, readonly) PBUnknownFields *unknownFields;

+ (Class)assignmentType;

- (void).cxx_destruct;
- (id)_clientConfigValueForKey:(id)arg1;
- (id)_experimentAssignmentForServiceType:(int)arg1 placeRequestType:(int)arg2;
- (id)_querySubstringForServiceType:(int)arg1 placeRequestType:(int)arg2;
- (void)addAssignment:(id)arg1;
- (id)assignmentAtIndex:(unsigned long long)arg1;
- (id)assignments;
- (unsigned long long)assignmentsCount;
- (unsigned long long)branchExpirationTtlHours;
- (void)clearAssignments;
- (id)clientConfig;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasBranchExpirationTtlHours;
- (bool)hasClientConfig;
- (bool)hasInvalidatePoiCache;
- (bool)hasInvalidateTileCache;
- (bool)hasMapsAbClientMetadata;
- (bool)hasParsecClientMetadata;
- (bool)hasRapClientMetadata;
- (bool)hasRefreshIntervalSeconds;
- (bool)hasRequestGuid;
- (bool)hasSiriClientMetadata;
- (bool)hasSourceURL;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (bool)invalidatePoiCache;
- (bool)invalidateTileCache;
- (bool)isEqual:(id)arg1;
- (id)mapsAbClientMetadata;
- (void)mergeFrom:(id)arg1;
- (id)parsecClientMetadata;
- (id)rapClientMetadata;
- (bool)readFrom:(id)arg1;
- (unsigned long long)refreshIntervalSeconds;
- (id)requestGuid;
- (void)setAssignments:(id)arg1;
- (void)setBranchExpirationTtlHours:(unsigned long long)arg1;
- (void)setClientConfig:(id)arg1;
- (void)setHasBranchExpirationTtlHours:(bool)arg1;
- (void)setHasInvalidatePoiCache:(bool)arg1;
- (void)setHasInvalidateTileCache:(bool)arg1;
- (void)setHasRefreshIntervalSeconds:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setInvalidatePoiCache:(bool)arg1;
- (void)setInvalidateTileCache:(bool)arg1;
- (void)setMapsAbClientMetadata:(id)arg1;
- (void)setParsecClientMetadata:(id)arg1;
- (void)setRapClientMetadata:(id)arg1;
- (void)setRefreshIntervalSeconds:(unsigned long long)arg1;
- (void)setRequestGuid:(id)arg1;
- (void)setSiriClientMetadata:(id)arg1;
- (void)setSourceURL:(id)arg1;
- (void)setTimestamp:(double)arg1;
- (id)siriClientMetadata;
- (id)sourceURL;
- (double)timestamp;
- (id)unknownFields;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

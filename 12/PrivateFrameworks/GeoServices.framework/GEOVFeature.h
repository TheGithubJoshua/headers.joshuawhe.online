<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOVFeature.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOVFeature.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOVFeature : PBCodable <NSCopying> {
    unsigned long long  _businessID;
    unsigned int  _centerlineCount;
    unsigned int  _centerlineStart;
    GEOVCharacteristics * _characteristics;
    float  _endLaneWidth;
    float  _endOffset;
    float  _endRoadOffset;
    unsigned int  _entryPointMask;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _extrusionHeights;
    int  _formOfWay;
    struct { 
        unsigned int businessID : 1; 
        unsigned int uID : 1; 
        unsigned int centerlineCount : 1; 
        unsigned int centerlineStart : 1; 
        unsigned int endLaneWidth : 1; 
        unsigned int endOffset : 1; 
        unsigned int endRoadOffset : 1; 
        unsigned int entryPointMask : 1; 
        unsigned int formOfWay : 1; 
        unsigned int minzoomRank : 1; 
        unsigned int placeType : 1; 
        unsigned int roadClass : 1; 
        unsigned int sectionCount : 1; 
        unsigned int sectionStart : 1; 
        unsigned int speedLimit : 1; 
        unsigned int startLaneWidth : 1; 
        unsigned int startOffset : 1; 
        unsigned int startRoadOffset : 1; 
        unsigned int styleGroup : 1; 
        unsigned int travelDirection : 1; 
        unsigned int type : 1; 
        unsigned int polyIsConvex : 1; 
    }  _has;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _labelOffsets;
    float  _minzoomRank;
    NSData * _oBSOLETECenterlines;
    NSData * _oBSOLETEShieldLabelPositions;
    NSData * _oBSOLETEVertexLabelPositions;
    int  _placeType;
    NSData * _pointLabelPosition;
    bool  _polyIsConvex;
    int  _roadClass;
    int  _sectionCount;
    int  _sectionStart;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _shieldLabelOffsets;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _shieldLabelTypes;
    int  _speedLimit;
    float  _startLaneWidth;
    float  _startOffset;
    float  _startRoadOffset;
    NSMutableArray * _styleAttributes;
    unsigned int  _styleGroup;
    int  _travelDirection;
    int  _type;
    long long  _uID;
}

@property (nonatomic) unsigned long long businessID;
@property (nonatomic) unsigned int centerlineCount;
@property (nonatomic) unsigned int centerlineStart;
@property (nonatomic, retain) GEOVCharacteristics *characteristics;
@property (nonatomic) float endLaneWidth;
@property (nonatomic) float endOffset;
@property (nonatomic) float endRoadOffset;
@property (nonatomic) unsigned int entryPointMask;
@property (nonatomic, readonly) int*extrusionHeights;
@property (nonatomic, readonly) unsigned long long extrusionHeightsCount;
@property (nonatomic) int formOfWay;
@property (nonatomic) bool hasBusinessID;
@property (nonatomic) bool hasCenterlineCount;
@property (nonatomic) bool hasCenterlineStart;
@property (nonatomic, readonly) bool hasCharacteristics;
@property (nonatomic) bool hasEndLaneWidth;
@property (nonatomic) bool hasEndOffset;
@property (nonatomic) bool hasEndRoadOffset;
@property (nonatomic) bool hasEntryPointMask;
@property (nonatomic) bool hasFormOfWay;
@property (nonatomic) bool hasMinzoomRank;
@property (nonatomic, readonly) bool hasOBSOLETECenterlines;
@property (nonatomic, readonly) bool hasOBSOLETEShieldLabelPositions;
@property (nonatomic, readonly) bool hasOBSOLETEVertexLabelPositions;
@property (nonatomic) bool hasPlaceType;
@property (nonatomic, readonly) bool hasPointLabelPosition;
@property (nonatomic) bool hasPolyIsConvex;
@property (nonatomic) bool hasRoadClass;
@property (nonatomic) bool hasSectionCount;
@property (nonatomic) bool hasSectionStart;
@property (nonatomic) bool hasSpeedLimit;
@property (nonatomic) bool hasStartLaneWidth;
@property (nonatomic) bool hasStartOffset;
@property (nonatomic) bool hasStartRoadOffset;
@property (nonatomic) bool hasStyleGroup;
@property (nonatomic) bool hasTravelDirection;
@property (nonatomic) bool hasType;
@property (nonatomic) bool hasUID;
@property (nonatomic, readonly) int*labelOffsets;
@property (nonatomic, readonly) unsigned long long labelOffsetsCount;
@property (nonatomic) float minzoomRank;
@property (nonatomic, retain) NSData *oBSOLETECenterlines;
@property (nonatomic, retain) NSData *oBSOLETEShieldLabelPositions;
@property (nonatomic, retain) NSData *oBSOLETEVertexLabelPositions;
@property (nonatomic) int placeType;
@property (nonatomic, retain) NSData *pointLabelPosition;
@property (nonatomic) bool polyIsConvex;
@property (nonatomic) int roadClass;
@property (nonatomic) int sectionCount;
@property (nonatomic) int sectionStart;
@property (nonatomic, readonly) int*shieldLabelOffsets;
@property (nonatomic, readonly) unsigned long long shieldLabelOffsetsCount;
@property (nonatomic, readonly) int*shieldLabelTypes;
@property (nonatomic, readonly) unsigned long long shieldLabelTypesCount;
@property (nonatomic) int speedLimit;
@property (nonatomic) float startLaneWidth;
@property (nonatomic) float startOffset;
@property (nonatomic) float startRoadOffset;
@property (nonatomic, retain) NSMutableArray *styleAttributes;
@property (nonatomic) unsigned int styleGroup;
@property (nonatomic) int travelDirection;
@property (nonatomic) int type;
@property (nonatomic) long long uID;

- (void).cxx_destruct;
- (void)addExtrusionHeight:(int)arg1;
- (void)addLabelOffset:(int)arg1;
- (void)addShieldLabelOffset:(int)arg1;
- (void)addShieldLabelType:(int)arg1;
- (void)addStyleAttributes:(id)arg1;
- (unsigned long long)businessID;
- (unsigned int)centerlineCount;
- (unsigned int)centerlineStart;
- (id)characteristics;
- (void)clearExtrusionHeights;
- (void)clearLabelOffsets;
- (void)clearShieldLabelOffsets;
- (void)clearShieldLabelTypes;
- (void)clearStyleAttributes;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (float)endLaneWidth;
- (float)endOffset;
- (float)endRoadOffset;
- (unsigned int)entryPointMask;
- (int)extrusionHeightAtIndex:(unsigned long long)arg1;
- (int*)extrusionHeights;
- (unsigned long long)extrusionHeightsCount;
- (int)formOfWay;
- (bool)hasBusinessID;
- (bool)hasCenterlineCount;
- (bool)hasCenterlineStart;
- (bool)hasCharacteristics;
- (bool)hasEndLaneWidth;
- (bool)hasEndOffset;
- (bool)hasEndRoadOffset;
- (bool)hasEntryPointMask;
- (bool)hasFormOfWay;
- (bool)hasMinzoomRank;
- (bool)hasOBSOLETECenterlines;
- (bool)hasOBSOLETEShieldLabelPositions;
- (bool)hasOBSOLETEVertexLabelPositions;
- (bool)hasPlaceType;
- (bool)hasPointLabelPosition;
- (bool)hasPolyIsConvex;
- (bool)hasRoadClass;
- (bool)hasSectionCount;
- (bool)hasSectionStart;
- (bool)hasSpeedLimit;
- (bool)hasStartLaneWidth;
- (bool)hasStartOffset;
- (bool)hasStartRoadOffset;
- (bool)hasStyleGroup;
- (bool)hasTravelDirection;
- (bool)hasType;
- (bool)hasUID;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (int)labelOffsetAtIndex:(unsigned long long)arg1;
- (int*)labelOffsets;
- (unsigned long long)labelOffsetsCount;
- (float)minzoomRank;
- (id)oBSOLETECenterlines;
- (id)oBSOLETEShieldLabelPositions;
- (id)oBSOLETEVertexLabelPositions;
- (int)placeType;
- (id)pointLabelPosition;
- (bool)polyIsConvex;
- (bool)readFrom:(id)arg1;
- (int)roadClass;
- (int)sectionCount;
- (int)sectionStart;
- (void)setBusinessID:(unsigned long long)arg1;
- (void)setCenterlineCount:(unsigned int)arg1;
- (void)setCenterlineStart:(unsigned int)arg1;
- (void)setCharacteristics:(id)arg1;
- (void)setEndLaneWidth:(float)arg1;
- (void)setEndOffset:(float)arg1;
- (void)setEndRoadOffset:(float)arg1;
- (void)setEntryPointMask:(unsigned int)arg1;
- (void)setExtrusionHeights:(int*)arg1 count:(unsigned long long)arg2;
- (void)setFormOfWay:(int)arg1;
- (void)setHasBusinessID:(bool)arg1;
- (void)setHasCenterlineCount:(bool)arg1;
- (void)setHasCenterlineStart:(bool)arg1;
- (void)setHasEndLaneWidth:(bool)arg1;
- (void)setHasEndOffset:(bool)arg1;
- (void)setHasEndRoadOffset:(bool)arg1;
- (void)setHasEntryPointMask:(bool)arg1;
- (void)setHasFormOfWay:(bool)arg1;
- (void)setHasMinzoomRank:(bool)arg1;
- (void)setHasPlaceType:(bool)arg1;
- (void)setHasPolyIsConvex:(bool)arg1;
- (void)setHasRoadClass:(bool)arg1;
- (void)setHasSectionCount:(bool)arg1;
- (void)setHasSectionStart:(bool)arg1;
- (void)setHasSpeedLimit:(bool)arg1;
- (void)setHasStartLaneWidth:(bool)arg1;
- (void)setHasStartOffset:(bool)arg1;
- (void)setHasStartRoadOffset:(bool)arg1;
- (void)setHasStyleGroup:(bool)arg1;
- (void)setHasTravelDirection:(bool)arg1;
- (void)setHasType:(bool)arg1;
- (void)setHasUID:(bool)arg1;
- (void)setLabelOffsets:(int*)arg1 count:(unsigned long long)arg2;
- (void)setMinzoomRank:(float)arg1;
- (void)setOBSOLETECenterlines:(id)arg1;
- (void)setOBSOLETEShieldLabelPositions:(id)arg1;
- (void)setOBSOLETEVertexLabelPositions:(id)arg1;
- (void)setPlaceType:(int)arg1;
- (void)setPointLabelPosition:(id)arg1;
- (void)setPolyIsConvex:(bool)arg1;
- (void)setRoadClass:(int)arg1;
- (void)setSectionCount:(int)arg1;
- (void)setSectionStart:(int)arg1;
- (void)setShieldLabelOffsets:(int*)arg1 count:(unsigned long long)arg2;
- (void)setShieldLabelTypes:(int*)arg1 count:(unsigned long long)arg2;
- (void)setSpeedLimit:(int)arg1;
- (void)setStartLaneWidth:(float)arg1;
- (void)setStartOffset:(float)arg1;
- (void)setStartRoadOffset:(float)arg1;
- (void)setStyleAttributes:(id)arg1;
- (void)setStyleGroup:(unsigned int)arg1;
- (void)setTravelDirection:(int)arg1;
- (void)setType:(int)arg1;
- (void)setUID:(long long)arg1;
- (int)shieldLabelOffsetAtIndex:(unsigned long long)arg1;
- (int*)shieldLabelOffsets;
- (unsigned long long)shieldLabelOffsetsCount;
- (int)shieldLabelTypeAtIndex:(unsigned long long)arg1;
- (int*)shieldLabelTypes;
- (unsigned long long)shieldLabelTypesCount;
- (int)speedLimit;
- (float)startLaneWidth;
- (float)startOffset;
- (float)startRoadOffset;
- (id)styleAttributes;
- (id)styleAttributesAtIndex:(unsigned long long)arg1;
- (unsigned long long)styleAttributesCount;
- (unsigned int)styleGroup;
- (int)travelDirection;
- (int)type;
- (long long)uID;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEONavdDefaults.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEONavdDefaults.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEONavdDefaults : NSObject

@property (nonatomic, readonly) unsigned long long accessValueThresholdToUpdateCacheEntries;
@property (nonatomic, readonly) double ageForRefresh;
@property (nonatomic, readonly) double automaticTrafficIncidentRerouteDelay;
@property (nonatomic, readonly) double averageWalkingSpeed;
@property (nonatomic, readonly) double defaultExpirationOffset;
@property (nonatomic, readonly) double exitRegionSize;
@property (nonatomic, readonly) double extraLocationWaitTimeInterval;
@property (nonatomic, readonly) double fastWalkingSpeed;
@property (nonatomic, readonly) double hypothesisResponseStaleToPurgeFromDiskThresholdInSeconds;
@property (nonatomic, readonly) double hypothesisResponseStaleToRefreshThresholdInSeconds;
@property (nonatomic, readonly) double hypothesisShouldPersistThresholdInSeconds;
@property (nonatomic, readonly) unsigned long long initialClientInitiatedHypothesisCacheAccessValue;
@property (nonatomic, readonly) unsigned long long initialSelfInitiatedHypothesisCacheAccessValue;
@property (nonatomic, readonly) double locationFreshnessThreshold;
@property (nonatomic, readonly) double locationReuseThreshold;
@property (nonatomic, readonly) double locationUpdateTimerInterval;
@property (nonatomic, readonly) double locationUpdatesDesiredAccuracyForDriving;
@property (nonatomic, readonly) double locationUpdatesDesiredAccuracyForWalking;
@property (nonatomic, readonly) double locationUpdatesDesiredAccuracyWhileStationaryForDriving;
@property (nonatomic, readonly) double locationUpdatesDesiredAccuracyWhileStationaryForWalking;
@property (nonatomic, readonly) double maxDistanceFromOriginToSuppressReroute;
@property (nonatomic, readonly) unsigned long long maxRandomJitterForHypothesisWakeup;
@property (nonatomic, readonly) long long maximumNumberOfDestinationsToMonitor;
@property (nonatomic, readonly) unsigned long long maximumNumberOfEntriesInTheCacheUnderMemoryPressure;
@property (nonatomic, readonly) unsigned long long maximumNumberOfLeechedLocations;
@property (nonatomic, readonly) unsigned long long maximumNumberOfProcessingLoopRepeats;
@property (nonatomic, readonly) double maximumRefreshIntervalLeeway;
@property (nonatomic, readonly) double maximumTimeBetweenConsecutiveHypothesisUpdatesInSeconds;
@property (nonatomic, readonly) unsigned long long maximumTraceFileCount;
@property (nonatomic, readonly) double maximumUserRoutingPreferencesAge;
@property (nonatomic, readonly) unsigned long long minRandomJitterForHypothesisWakeup;
@property (nonatomic, readonly) double minimumDistanceToCompareAgainstLocationAccuracy;
@property (nonatomic, readonly) double minimumDistanceToConsiderLeechedLocationInMeters;
@property (nonatomic, readonly) double minimumDistanceToGetLocationUpdatesInMeters;
@property (nonatomic, readonly) double minimumExpirationOffset;
@property (nonatomic, readonly) double minimumTimeBetweenConsecutiveLocationUpdatesInSeconds;
@property (nonatomic, readonly) double minimumTimeIntervalToConsiderLeechedLocationInSeconds;
@property (nonatomic, readonly) double minimumTimerTimeStampFudge;
@property (nonatomic, readonly) double pendingStopTimeToLive;
@property (nonatomic, readonly) double predictionsWatchdogInterval;
@property (nonatomic, readonly) unsigned long long refreshEquationHighestFrequency;
@property (nonatomic, readonly) unsigned long long refreshEquationLowestFrequency;
@property (nonatomic, readonly) unsigned long long refreshEquationLowestFrequencyTransit;
@property (nonatomic, readonly) double refreshTimeIntervalBackoffBase;
@property (nonatomic, readonly) double refreshTimeIntervalBackoffMax;
@property (nonatomic, readonly) double refreshTimeIntervalToUseIfError;
@property (nonatomic, readonly) bool shouldAutomaticallyRerouteTrafficIncidents;
@property (nonatomic, readonly) bool shouldLazyLoadRoutes;
@property (nonatomic, readonly) bool shouldMatchToLAR;
@property (nonatomic, readonly) bool shouldPreloadSubscriptions;
@property (nonatomic, readonly) bool shouldRequestInlineShields;
@property (nonatomic, readonly) bool shouldRequestLaneGuidance;
@property (nonatomic, readonly) bool shouldRunNavigationInDaemon;
@property (nonatomic, readonly) bool shouldShowServiceErrorAlert;
@property (nonatomic, readonly) bool shouldSnapToParkingLotSegments;
@property (nonatomic, readonly) bool shouldUseGuidanceEventManager;
@property (nonatomic, readonly) bool shouldUseServerSideETAs;
@property (nonatomic, readonly) double slowWalkingSpeed;
@property (nonatomic, readonly) double staleLocationUseTimerInterval;
@property (nonatomic, readonly) bool transitTTLSupported;
@property (nonatomic, readonly) double updateTimeout;
@property (nonatomic, readonly) bool useConservativeDepartureForRefreshTimer;

+ (id)sharedInstance;

- (unsigned long long)accessValueThresholdToUpdateCacheEntries;
- (double)ageForRefresh;
- (double)automaticTrafficIncidentRerouteDelay;
- (double)averageWalkingSpeed;
- (double)defaultExpirationOffset;
- (double)exitRegionSize;
- (double)extraLocationWaitTimeInterval;
- (double)fastWalkingSpeed;
- (double)hypothesisResponseStaleToPurgeFromDiskThresholdInSeconds;
- (double)hypothesisResponseStaleToRefreshThresholdInSeconds;
- (double)hypothesisShouldPersistThresholdInSeconds;
- (unsigned long long)initialClientInitiatedHypothesisCacheAccessValue;
- (unsigned long long)initialSelfInitiatedHypothesisCacheAccessValue;
- (double)locationFreshnessThreshold;
- (double)locationReuseThreshold;
- (double)locationUpdateTimerInterval;
- (double)locationUpdatesDesiredAccuracyForDriving;
- (double)locationUpdatesDesiredAccuracyForWalking;
- (double)locationUpdatesDesiredAccuracyWhileStationaryForDriving;
- (double)locationUpdatesDesiredAccuracyWhileStationaryForWalking;
- (double)maxDistanceFromOriginToSuppressReroute;
- (unsigned long long)maxRandomJitterForHypothesisWakeup;
- (long long)maximumNumberOfDestinationsToMonitor;
- (unsigned long long)maximumNumberOfEntriesInTheCacheUnderMemoryPressure;
- (unsigned long long)maximumNumberOfLeechedLocations;
- (unsigned long long)maximumNumberOfProcessingLoopRepeats;
- (double)maximumRefreshIntervalLeeway;
- (double)maximumTimeBetweenConsecutiveHypothesisUpdatesInSeconds;
- (unsigned long long)maximumTraceFileCount;
- (double)maximumUserRoutingPreferencesAge;
- (unsigned long long)minRandomJitterForHypothesisWakeup;
- (double)minimumDistanceToCompareAgainstLocationAccuracy;
- (double)minimumDistanceToConsiderLeechedLocationInMeters;
- (double)minimumDistanceToGetLocationUpdatesInMeters;
- (double)minimumExpirationOffset;
- (double)minimumTimeBetweenConsecutiveLocationUpdatesInSeconds;
- (double)minimumTimeIntervalToConsiderLeechedLocationInSeconds;
- (double)minimumTimerTimeStampFudge;
- (double)pendingStopTimeToLive;
- (double)predictionsWatchdogInterval;
- (unsigned long long)refreshEquationHighestFrequency;
- (unsigned long long)refreshEquationLowestFrequency;
- (unsigned long long)refreshEquationLowestFrequencyTransit;
- (double)refreshTimeIntervalBackoffBase;
- (double)refreshTimeIntervalBackoffMax;
- (double)refreshTimeIntervalToUseIfError;
- (bool)shouldAutomaticallyRerouteTrafficIncidents;
- (bool)shouldLazyLoadRoutes;
- (bool)shouldMatchToLAR;
- (bool)shouldPreloadSubscriptions;
- (bool)shouldRequestInlineShields;
- (bool)shouldRequestLaneGuidance;
- (bool)shouldRunNavigationInDaemon;
- (bool)shouldShowServiceErrorAlert;
- (bool)shouldSnapToParkingLotSegments;
- (bool)shouldUseGuidanceEventManager;
- (bool)shouldUseServerSideETAs;
- (double)slowWalkingSpeed;
- (double)staleLocationUseTimerInterval;
- (bool)transitTTLSupported;
- (double)updateTimeout;
- (bool)useConservativeDepartureForRefreshTimer;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

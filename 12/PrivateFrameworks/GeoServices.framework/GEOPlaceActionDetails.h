<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEOPlaceActionDetails.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEOPlaceActionDetails.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEOPlaceActionDetails : PBCodable <NSCopying> {
    NSString * _actionUrl;
    unsigned long long  _animationID;
    unsigned long long  _businessID;
    NSString * _destinationApp;
    struct { 
        unsigned int animationID : 1; 
        unsigned int businessID : 1; 
        unsigned int placeID : 1; 
        unsigned int searchResponseRelativeTimestamp : 1; 
        unsigned int targetID : 1; 
        unsigned int localSearchProviderID : 1; 
        unsigned int resultIndex : 1; 
    }  _has;
    int  _localSearchProviderID;
    NSString * _photoId;
    long long  _placeID;
    int  _resultIndex;
    NSString * _richProviderId;
    double  _searchResponseRelativeTimestamp;
    unsigned long long  _targetID;
    GEOTransitPlaceCard * _transitPlaceCard;
}

@property (nonatomic, retain) NSString *actionUrl;
@property (nonatomic) unsigned long long animationID;
@property (nonatomic) unsigned long long businessID;
@property (nonatomic, retain) NSString *destinationApp;
@property (nonatomic, readonly) bool hasActionUrl;
@property (nonatomic) bool hasAnimationID;
@property (nonatomic) bool hasBusinessID;
@property (nonatomic, readonly) bool hasDestinationApp;
@property (nonatomic) bool hasLocalSearchProviderID;
@property (nonatomic, readonly) bool hasPhotoId;
@property (nonatomic) bool hasPlaceID;
@property (nonatomic) bool hasResultIndex;
@property (nonatomic, readonly) bool hasRichProviderId;
@property (nonatomic) bool hasSearchResponseRelativeTimestamp;
@property (nonatomic) bool hasTargetID;
@property (nonatomic, readonly) bool hasTransitPlaceCard;
@property (nonatomic) int localSearchProviderID;
@property (nonatomic, retain) NSString *photoId;
@property (nonatomic) long long placeID;
@property (nonatomic) int resultIndex;
@property (nonatomic, retain) NSString *richProviderId;
@property (nonatomic) double searchResponseRelativeTimestamp;
@property (nonatomic) unsigned long long targetID;
@property (nonatomic, retain) GEOTransitPlaceCard *transitPlaceCard;

+ (id)actionDetailsWithChildPlace:(id)arg1 timestamp:(double)arg2 resultIndex:(int)arg3;
+ (id)actionDetailsWithDetails:(id)arg1 timestamp:(double)arg2;
+ (id)actionDetailsWithMapItem:(id)arg1 childPlace:(id)arg2 timestamp:(double)arg3 resultIndex:(int)arg4 targetID:(unsigned long long)arg5 transitCardCategory:(int)arg6 transitSystem:(id)arg7 transitDepartureSequence:(id)arg8 transitIncident:(id)arg9;
+ (id)actionDetailsWithMapItem:(id)arg1 timestamp:(double)arg2 resultIndex:(int)arg3;
+ (id)actionDetailsWithMapItem:(id)arg1 timestamp:(double)arg2 resultIndex:(int)arg3 targetID:(unsigned long long)arg4;
+ (id)actionDetailsWithMapItem:(id)arg1 timestamp:(double)arg2 resultIndex:(int)arg3 targetID:(unsigned long long)arg4 transitCardCategory:(int)arg5 transitSystem:(id)arg6 transitDepartureSequence:(id)arg7 transitIncident:(id)arg8;
+ (id)actionDetailsWithTargetID:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)actionUrl;
- (unsigned long long)animationID;
- (unsigned long long)businessID;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)destinationApp;
- (id)dictionaryRepresentation;
- (bool)hasActionUrl;
- (bool)hasAnimationID;
- (bool)hasBusinessID;
- (bool)hasDestinationApp;
- (bool)hasLocalSearchProviderID;
- (bool)hasPhotoId;
- (bool)hasPlaceID;
- (bool)hasResultIndex;
- (bool)hasRichProviderId;
- (bool)hasSearchResponseRelativeTimestamp;
- (bool)hasTargetID;
- (bool)hasTransitPlaceCard;
- (unsigned long long)hash;
- (id)initWithMapItem:(id)arg1 childPlace:(id)arg2 relativeTimestamp:(double)arg3 resultIndex:(int)arg4 targetID:(unsigned long long)arg5 transitCardCategory:(int)arg6 transitSystem:(id)arg7 transitDepartureSequence:(id)arg8 transitIncident:(id)arg9;
- (id)initWithMapItem:(id)arg1 relativeTimestamp:(double)arg2 resultIndex:(int)arg3;
- (id)initWithMapItem:(id)arg1 relativeTimestamp:(double)arg2 resultIndex:(int)arg3 targetID:(unsigned long long)arg4;
- (bool)isEqual:(id)arg1;
- (int)localSearchProviderID;
- (void)mergeFrom:(id)arg1;
- (id)photoId;
- (long long)placeID;
- (bool)readFrom:(id)arg1;
- (int)resultIndex;
- (id)richProviderId;
- (double)searchResponseRelativeTimestamp;
- (void)setActionUrl:(id)arg1;
- (void)setAnimationID:(unsigned long long)arg1;
- (void)setBusinessID:(unsigned long long)arg1;
- (void)setDestinationApp:(id)arg1;
- (void)setHasAnimationID:(bool)arg1;
- (void)setHasBusinessID:(bool)arg1;
- (void)setHasLocalSearchProviderID:(bool)arg1;
- (void)setHasPlaceID:(bool)arg1;
- (void)setHasResultIndex:(bool)arg1;
- (void)setHasSearchResponseRelativeTimestamp:(bool)arg1;
- (void)setHasTargetID:(bool)arg1;
- (void)setLocalSearchProviderID:(int)arg1;
- (void)setPhotoId:(id)arg1;
- (void)setPlaceID:(long long)arg1;
- (void)setResultIndex:(int)arg1;
- (void)setRichProviderId:(id)arg1;
- (void)setSearchResponseRelativeTimestamp:(double)arg1;
- (void)setTargetID:(unsigned long long)arg1;
- (void)setTransitPlaceCard:(id)arg1;
- (unsigned long long)targetID;
- (id)transitPlaceCard;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

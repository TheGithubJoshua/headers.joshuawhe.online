<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GEORPFeatureHandle.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GeoServices.framework/GEORPFeatureHandle.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices (1364.36.4.19.8)
 */

@interface GEORPFeatureHandle : PBCodable <NSCopying> {
    unsigned int  _featureIndex;
    unsigned int  _featureTileX;
    unsigned int  _featureTileY;
    unsigned int  _featureTileZ;
    struct { 
        unsigned int featureIndex : 1; 
        unsigned int featureTileX : 1; 
        unsigned int featureTileY : 1; 
        unsigned int featureTileZ : 1; 
        unsigned int identifier : 1; 
        unsigned int style : 1; 
        unsigned int type : 1; 
    }  _has;
    unsigned int  _identifier;
    int  _style;
    struct GEORPFeatureHandleStyleAttribute { int x1; int x2; } * _styleAttributes;
    unsigned long long  _styleAttributesCount;
    unsigned long long  _styleAttributesSpace;
    int  _type;
}

@property (nonatomic) unsigned int featureIndex;
@property (nonatomic) unsigned int featureTileX;
@property (nonatomic) unsigned int featureTileY;
@property (nonatomic) unsigned int featureTileZ;
@property (nonatomic) bool hasFeatureIndex;
@property (nonatomic) bool hasFeatureTileX;
@property (nonatomic) bool hasFeatureTileY;
@property (nonatomic) bool hasFeatureTileZ;
@property (nonatomic) bool hasIdentifier;
@property (nonatomic) bool hasStyle;
@property (nonatomic) bool hasType;
@property (nonatomic) unsigned int identifier;
@property (nonatomic) int style;
@property (nonatomic, readonly) struct GEORPFeatureHandleStyleAttribute { int x1; int x2; }*styleAttributes;
@property (nonatomic, readonly) unsigned long long styleAttributesCount;
@property (nonatomic) int type;

- (int)StringAsStyle:(id)arg1;
- (int)StringAsType:(id)arg1;
- (void)addStyleAttribute:(struct GEORPFeatureHandleStyleAttribute { int x1; int x2; })arg1;
- (void)clearStyleAttributes;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)featureIndex;
- (unsigned int)featureTileX;
- (unsigned int)featureTileY;
- (unsigned int)featureTileZ;
- (bool)hasFeatureIndex;
- (bool)hasFeatureTileX;
- (bool)hasFeatureTileY;
- (bool)hasFeatureTileZ;
- (bool)hasIdentifier;
- (bool)hasStyle;
- (bool)hasType;
- (unsigned long long)hash;
- (unsigned int)identifier;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setFeatureIndex:(unsigned int)arg1;
- (void)setFeatureTileX:(unsigned int)arg1;
- (void)setFeatureTileY:(unsigned int)arg1;
- (void)setFeatureTileZ:(unsigned int)arg1;
- (void)setHasFeatureIndex:(bool)arg1;
- (void)setHasFeatureTileX:(bool)arg1;
- (void)setHasFeatureTileY:(bool)arg1;
- (void)setHasFeatureTileZ:(bool)arg1;
- (void)setHasIdentifier:(bool)arg1;
- (void)setHasStyle:(bool)arg1;
- (void)setHasType:(bool)arg1;
- (void)setIdentifier:(unsigned int)arg1;
- (void)setStyle:(int)arg1;
- (void)setStyleAttributes:(struct GEORPFeatureHandleStyleAttribute { int x1; int x2; }*)arg1 count:(unsigned long long)arg2;
- (void)setType:(int)arg1;
- (int)style;
- (id)styleAsString:(int)arg1;
- (struct GEORPFeatureHandleStyleAttribute { int x1; int x2; })styleAttributeAtIndex:(unsigned long long)arg1;
- (struct GEORPFeatureHandleStyleAttribute { int x1; int x2; }*)styleAttributes;
- (unsigned long long)styleAttributesCount;
- (int)type;
- (id)typeAsString:(int)arg1;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

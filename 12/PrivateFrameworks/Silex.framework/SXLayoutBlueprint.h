<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SXLayoutBlueprint.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Silex.framework/SXLayoutBlueprint.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Silex.framework/Silex (2166)
 */

@interface SXLayoutBlueprint : NSObject <NSCopying> {
    NSMutableDictionary * _blueprint;
    struct CGSize { 
        double width; 
        double height; 
    }  _blueprintSize;
    <SXComponentBlueprintFactory> * _componentBlueprintFactory;
    SXComponentDependencyResolver * _dependencySolver;
    NSMutableDictionary * _flattenedBlueprint;
    NSMutableSet * _invalidatedComponents;
    bool  _isComplete;
    SXLayoutOptions * _layoutOptions;
    NSMutableArray * _orderedComponentIdentifiers;
    SXLayoutBlueprint * _parentLayoutBlueprint;
    NSOrderedSet * _snapLines;
    <SXUnitConverterFactory> * _unitConverterFactory;
    bool  _updating;
}

@property (nonatomic, retain) NSMutableDictionary *blueprint;
@property (nonatomic) struct CGSize { double x1; double x2; } blueprintSize;
@property (nonatomic, readonly) <SXComponentBlueprintFactory> *componentBlueprintFactory;
@property (nonatomic, retain) SXComponentDependencyResolver *dependencySolver;
@property (nonatomic, retain) NSMutableDictionary *flattenedBlueprint;
@property (nonatomic, retain) NSMutableSet *invalidatedComponents;
@property (nonatomic, readonly) bool isComplete;
@property (nonatomic, readonly) SXLayoutOptions *layoutOptions;
@property (nonatomic, retain) NSMutableArray *orderedComponentIdentifiers;
@property (nonatomic) SXLayoutBlueprint *parentLayoutBlueprint;
@property (nonatomic, readonly) SXLayoutBlueprint *rootLayoutBlueprint;
@property (nonatomic, retain) NSOrderedSet *snapLines;
@property (nonatomic, readonly) <SXUnitConverterFactory> *unitConverterFactory;
@property (getter=isUpdating, nonatomic) bool updating;

- (void).cxx_destruct;
- (id)blueprint;
- (struct CGSize { double x1; double x2; })blueprintSize;
- (id)componentBlueprintFactory;
- (id)componentBlueprintForComponentIdentifier:(id)arg1;
- (id)componentBlueprintForComponentIdentifier:(id)arg1 includeChildren:(bool)arg2;
- (id)componentIdentifiers;
- (id)componentsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)containerComponentIdentifierContainingComponentWithIdentifier:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)debugDescription;
- (id)dependencySolver;
- (id)description;
- (void)endUpdates;
- (id)flattenedBlueprint;
- (id)initWithLayoutOptions:(id)arg1 componentBlueprintFactory:(id)arg2 unitConverterFactory:(id)arg3;
- (void)invalidateBlueprint;
- (void)invalidateBlueprintPosition;
- (void)invalidateDependentsOfComponentNode:(id)arg1 forDependencyResolver:(id)arg2;
- (void)invalidateDependentsOfInvalidatedComponents;
- (void)invalidatePositionForComponentWithIdentifier:(id)arg1;
- (void)invalidateSizeForComponentWithIdentifier:(id)arg1;
- (void)invalidateSizeForComponentWithIdentifier:(id)arg1 suggestedSize:(struct CGSize { double x1; double x2; })arg2;
- (id)invalidatedComponents;
- (bool)isComplete;
- (bool)isUpdating;
- (id)layoutDescriptionForBlueprint:(id)arg1 depth:(unsigned long long)arg2;
- (id)layoutOptions;
- (id)orderedComponentIdentifiers;
- (id)parentLayoutBlueprint;
- (void)registerLayout:(id)arg1 sizer:(id)arg2 forComponent:(id)arg3;
- (void)registerLayout:(id)arg1 sizer:(id)arg2 forComponent:(id)arg3 atIndex:(unsigned long long)arg4;
- (id)rootLayoutBlueprint;
- (void)setBlueprint:(id)arg1;
- (void)setBlueprintSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setDependencySolver:(id)arg1;
- (void)setFlattenedBlueprint:(id)arg1;
- (void)setInvalidatedComponents:(id)arg1;
- (void)setOrderedComponentIdentifiers:(id)arg1;
- (void)setParentLayoutBlueprint:(id)arg1;
- (void)setSnapLines:(id)arg1;
- (void)setUpdating:(bool)arg1;
- (id)snapLines;
- (id)snapLinesIncludingChildren:(bool)arg1;
- (void)startUpdatesForWidth:(double)arg1;
- (void)storeComponentsFromBlueprint:(id)arg1 inDictionary:(id)arg2;
- (id)unitConverterFactory;
- (void)unregisterLayout:(id)arg1;
- (void)updatePosition:(struct CGPoint { double x1; double x2; })arg1 forComponentWithIdentifier:(id)arg2;
- (void)updateSize:(struct CGSize { double x1; double x2; })arg1 forComponentWithIdentifier:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SXWebContentComponentView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Silex.framework/SXWebContentComponentView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Silex.framework/Silex (2166)
 */

@interface SXWebContentComponentView : SXComponentView <SXReachabilityObserver, SXViewportChangeListener> {
    <SXAnalyticsReporting> * _analyticsReporting;
    SXWebContentComponentExposureEvent * _componentExposureEvent;
    SXComponentExposureMonitor * _componentExposureMonitor;
    <SXWebContentConfigurationProvider> * _configurationProvider;
    SXWebContentContainerViewController * _containerViewController;
    <SXWebContentDataSourceProviding> * _dataSourceProvider;
    UILabel * _errorLabel;
    SXWebContentComponentInteractionManager * _interactionManager;
    NFPendingPromise * _invalidationPromise;
    <SXLayoutInvalidator> * _layoutInvalidator;
    UIActivityIndicatorView * _loadingIndicator;
    <SXWebContentLoadingPolicyProvider> * _loadingPolicyProvider;
    <SXWebContentNavigationManager> * _navigationManager;
    <SXReachabilityProvider> * _reachabilityProvider;
    <SXResourceDataSource> * _resourceDataSource;
    NFStateMachine * _stateMachine;
    UITapGestureRecognizer * _tapGestureRecognizer;
}

@property (nonatomic, readonly) <SXAnalyticsReporting> *analyticsReporting;
@property (nonatomic, retain) SXWebContentComponentExposureEvent *componentExposureEvent;
@property (nonatomic, readonly) SXComponentExposureMonitor *componentExposureMonitor;
@property (nonatomic, readonly) <SXWebContentConfigurationProvider> *configurationProvider;
@property (nonatomic, readonly) SXWebContentContainerViewController *containerViewController;
@property (nonatomic, readonly) <SXWebContentDataSourceProviding> *dataSourceProvider;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UILabel *errorLabel;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SXWebContentComponentInteractionManager *interactionManager;
@property (nonatomic, retain) NFPendingPromise *invalidationPromise;
@property (nonatomic, readonly) <SXLayoutInvalidator> *layoutInvalidator;
@property (nonatomic, readonly) UIActivityIndicatorView *loadingIndicator;
@property (nonatomic, readonly) <SXWebContentLoadingPolicyProvider> *loadingPolicyProvider;
@property (nonatomic, readonly) <SXWebContentNavigationManager> *navigationManager;
@property (nonatomic, readonly) <SXReachabilityProvider> *reachabilityProvider;
@property (nonatomic, readonly) <SXResourceDataSource> *resourceDataSource;
@property (nonatomic, readonly) NFStateMachine *stateMachine;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UITapGestureRecognizer *tapGestureRecognizer;

- (void).cxx_destruct;
- (id)analyticsReporting;
- (id)componentExposureEvent;
- (id)componentExposureMonitor;
- (id)configurationProvider;
- (void)configure;
- (void)configureComponentExposureMonitor;
- (void)configureConfigurationProvider;
- (void)configureErrorProvider;
- (void)configurePresentationManager;
- (void)configureViewController;
- (id)containerViewController;
- (id)createDisabledState;
- (id)createErrorState;
- (id)createLoadingState;
- (id)createPresentationState;
- (id)createStateMachine;
- (id)dataSourceProvider;
- (id)errorLabel;
- (void)handleTap:(id)arg1;
- (id)initWithDOMObjectProvider:(id)arg1 viewport:(id)arg2 presentationDelegate:(id)arg3 componentStyleRendererFactory:(id)arg4 containerViewController:(id)arg5 configurationProvider:(id)arg6 navigationManager:(id)arg7 analyticsReporting:(id)arg8 componentExposureMonitor:(id)arg9 interactionManagerFactory:(id)arg10 reachabilityProvider:(id)arg11 resourceDataSource:(id)arg12 loadingPolicyProvider:(id)arg13 dataSourceProvider:(id)arg14 layoutInvalidator:(id)arg15;
- (id)interactionManager;
- (id)invalidationPromise;
- (void)layout;
- (void)layoutErrorView;
- (id)layoutInvalidator;
- (void)layoutLoadingIndicator;
- (void)layoutSubviews;
- (void)layoutWebView;
- (void)loadComponent:(id)arg1;
- (void)loadWebContent;
- (id)loadingIndicator;
- (id)loadingPolicyProvider;
- (id)navigationManager;
- (void)presentComponentWithChanges:(struct { bool x1; bool x2; })arg1;
- (void)reachabilityChanged:(bool)arg1;
- (id)reachabilityProvider;
- (void)reloadWebContent;
- (id)resourceDataSource;
- (void)setComponentExposureEvent:(id)arg1;
- (void)setErrorLabel:(id)arg1;
- (void)setInvalidationPromise:(id)arg1;
- (id)stateMachine;
- (id)tapGestureRecognizer;
- (void)viewport:(id)arg1 appearStateChangedFromState:(unsigned long long)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

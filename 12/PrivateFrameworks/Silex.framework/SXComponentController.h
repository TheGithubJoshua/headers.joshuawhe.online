<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SXComponentController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Silex.framework/SXComponentController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Silex.framework/Silex (2166)
 */

@interface SXComponentController : NSObject <SXComponentController, SXLayoutIntegrator, SXViewportChangeListener> {
    <SXDOMObjectProviding> * _DOMObjectProvider;
    <SXComponentViewEngine> * _componentViewEngine;
    NSArray * _flattenedComponentViews;
    <SXComponentHosting> * _host;
    bool  _isPresented;
    bool  _isPresenting;
    NSMutableDictionary * _mappedComponentViews;
    NSMutableArray * _nestedComponentViews;
    NSHashTable * _observers;
    SXPresentationAttributes * _presentationAttributes;
    SXLayoutBlueprint * _presentedBlueprint;
    NSMutableArray * _sortedComponentViews;
    SXViewport * _viewport;
}

@property (nonatomic, readonly) <SXDOMObjectProviding> *DOMObjectProvider;
@property (nonatomic, readonly) <SXComponentViewEngine> *componentViewEngine;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *flattenedComponentViews;
@property (readonly) unsigned long long hash;
@property (nonatomic) <SXComponentHosting> *host;
@property (nonatomic, readonly) bool isPresented;
@property (nonatomic) bool isPresenting;
@property (nonatomic, retain) NSMutableDictionary *mappedComponentViews;
@property (nonatomic, retain) NSMutableArray *nestedComponentViews;
@property (nonatomic, readonly) NSHashTable *observers;
@property (nonatomic, readonly) SXPresentationAttributes *presentationAttributes;
@property (nonatomic, readonly) SXLayoutBlueprint *presentedBlueprint;
@property (nonatomic, retain) NSMutableArray *sortedComponentViews;
@property (readonly) Class superclass;
@property (nonatomic, readonly) SXViewport *viewport;

- (void).cxx_destruct;
- (id)DOMObjectProvider;
- (void)addObserver:(id)arg1;
- (void)assistiveTechnologyStatusDidChange;
- (id)componentViewEngine;
- (id)componentViewForIdentifier:(id)arg1;
- (id)componentViewForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)componentViewForPoint:(struct CGPoint { double x1; double x2; })arg1 inComponents:(id)arg2;
- (id)componentViews;
- (id)componentViewsForRole:(int)arg1;
- (id)componentViewsForRole:(int)arg1 forLayoutBlueprint:(id)arg2;
- (id)componentsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)fadeComponent:(id)arg1 completion:(id /* block */)arg2;
- (id)flattenedComponentViews;
- (id)host;
- (id)initWithViewport:(id)arg1 componentViewEngine:(id)arg2 DOMObjectProvider:(id)arg3;
- (void)integrateBlueprint:(id)arg1 withCompletion:(id /* block */)arg2;
- (bool)isPresented;
- (bool)isPresenting;
- (id)mappedComponentViews;
- (id)nestedComponentViews;
- (id)observers;
- (void)presentBlueprint:(id)arg1 forParentComponentView:(id)arg2 inHost:(id)arg3;
- (id)presentComponentBlueprint:(id)arg1 inHost:(id)arg2 columnLayout:(id)arg3;
- (void)presentComponentsInBlueprint:(id)arg1;
- (id)presentationAttributes;
- (id)presentedBlueprint;
- (void)provideInfosLayoutTo:(id)arg1;
- (void)removeComponentsInLayoutBlueprint:(id)arg1 removedFromLayoutBlueprint:(id)arg2;
- (void)removeObserver:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })renderBounds;
- (void)renderContentsIfNeededForComponents:(id)arg1;
- (void)setHost:(id)arg1;
- (void)setIsPresenting:(bool)arg1;
- (void)setMappedComponentViews:(id)arg1;
- (void)setNestedComponentViews:(id)arg1;
- (void)setSortedComponentViews:(id)arg1;
- (id)sortedComponentViews;
- (void)updateVisibilityStatesForComponentViews:(id)arg1;
- (void)updateVisibilityStatesForComponentViews:(id)arg1 parentComponent:(id)arg2 withOffset:(struct CGPoint { double x1; double x2; })arg3;
- (void)updateVisibilityStatesForComponentViews:(id)arg1 toState:(long long)arg2;
- (id)viewport;
- (void)viewport:(id)arg1 appearStateChangedFromState:(unsigned long long)arg2;
- (void)viewport:(id)arg1 boundsDidChangeFromBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)viewport:(id)arg1 dynamicBoundsDidChangeFromBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (struct CGSize { double x1; double x2; })viewportSize;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SXAVPlayer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Silex.framework/SXAVPlayer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Silex.framework/Silex (2166)
 */

@interface SXAVPlayer : AVPlayer <AVPlayerItemDelegate> {
    int  _audioMode;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _cumulativeTimePlayed;
    double  _duration;
    SVKeyValueObserver * _durationObserver;
    double  _elapsedTime;
    double  _frameRate;
    SVKeyValueObserver * _loadedTimeRangesObserver;
    id /* block */  _loadingProgressBlock;
    int  _playbackPosition;
    id /* block */  _playbackProgressBlock;
    int  _playbackStatus;
    id /* block */  _playbackStatusBlock;
    SVKeyValueObserver * _statusObserver;
    SVKeyValueObserver * _timeControlStatusObserver;
    id  _timeObserver;
}

@property (nonatomic, readonly) int audioMode;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } cumulativeTimePlayed;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double duration;
@property (nonatomic, retain) SVKeyValueObserver *durationObserver;
@property (nonatomic) double elapsedTime;
@property (nonatomic) double frameRate;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SVKeyValueObserver *loadedTimeRangesObserver;
@property (nonatomic, copy) id /* block */ loadingProgressBlock;
@property (nonatomic) int playbackPosition;
@property (nonatomic, copy) id /* block */ playbackProgressBlock;
@property (nonatomic) int playbackStatus;
@property (nonatomic, copy) id /* block */ playbackStatusBlock;
@property (nonatomic, retain) SVKeyValueObserver *statusObserver;
@property (readonly) Class superclass;
@property (nonatomic, retain) SVKeyValueObserver *timeControlStatusObserver;
@property (nonatomic, retain) id timeObserver;
@property (nonatomic, readonly) double totalTimePlayed;

- (void).cxx_destruct;
- (void)addObservers;
- (int)audioMode;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })cumulativeTimePlayed;
- (void)dealloc;
- (double)duration;
- (void)durationChanged;
- (id)durationObserver;
- (double)elapsedTime;
- (double)frameRate;
- (id)initWithPlayerItem:(id)arg1 audioMode:(int)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 audioMode:(int)arg2;
- (void)loadFrameRate;
- (void)loadedTimeRangesChanged;
- (id)loadedTimeRangesObserver;
- (id /* block */)loadingProgressBlock;
- (int)playbackPosition;
- (id /* block */)playbackProgressBlock;
- (int)playbackStatus;
- (id /* block */)playbackStatusBlock;
- (void)playedToEnd:(id)arg1;
- (void)seekToStartWithCompletionBlock:(id /* block */)arg1;
- (void)setCumulativeTimePlayed:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setDuration:(double)arg1;
- (void)setDurationObserver:(id)arg1;
- (void)setElapsedTime:(double)arg1;
- (void)setElapsedTime:(double)arg1 duration:(double)arg2;
- (void)setFrameRate:(double)arg1;
- (void)setLoadedTimeRangesObserver:(id)arg1;
- (void)setLoadingProgressBlock:(id /* block */)arg1;
- (void)setPlaybackPosition:(int)arg1;
- (void)setPlaybackProgressBlock:(id /* block */)arg1;
- (void)setPlaybackStatus:(int)arg1;
- (void)setPlaybackStatusBlock:(id /* block */)arg1;
- (void)setStatusObserver:(id)arg1;
- (void)setTimeControlStatusObserver:(id)arg1;
- (void)setTimeObserver:(id)arg1;
- (void)startTimeObserver;
- (void)statusChanged;
- (id)statusObserver;
- (void)stopTimeObserver;
- (void)timeControlStatusChanged;
- (id)timeControlStatusObserver;
- (id)timeObserver;
- (double)totalTimePlayed;
- (void)updateTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 duration:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

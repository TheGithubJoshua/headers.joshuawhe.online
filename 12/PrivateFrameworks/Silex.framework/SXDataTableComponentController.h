<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SXDataTableComponentController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Silex.framework/SXDataTableComponentController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Silex.framework/Silex (2166)
 */

@interface SXDataTableComponentController : NSObject <SXDataTableDataSource, SXTextSourceDataSource> {
    <SXDOMObjectProviding> * _DOMObjectProvider;
    SXDataTableDictionary * _cellObjects;
    <SXDataTableComponentControllerDataSource> * _dataSource;
    SXDataRecordValueTransformerFactory * _recordValueTransformerFactory;
    NSArray * _records;
    <SXDataTableStyleFactory> * _styleFactory;
    SXDataTableDictionary * _textLayouters;
    <SXDataTableTextSourceFactory> * _textSourceFactory;
}

@property (nonatomic, readonly) <SXDOMObjectProviding> *DOMObjectProvider;
@property (nonatomic, readonly) SXDataTableDictionary *cellObjects;
@property (nonatomic, readonly) <SXDataTableComponentControllerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SXDataRecordValueTransformerFactory *recordValueTransformerFactory;
@property (nonatomic, retain) NSArray *records;
@property (nonatomic, readonly) <SXDataTableStyleFactory> *styleFactory;
@property (readonly) Class superclass;
@property (nonatomic, readonly) SXDataTableDictionary *textLayouters;
@property (nonatomic, readonly) <SXDataTableTextSourceFactory> *textSourceFactory;

- (void).cxx_destruct;
- (id)DOMObjectProvider;
- (id)additionsForTextSource:(id)arg1;
- (id)backgroundColorForCellAtIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (id)backgroundColorForColumnAtIndex:(unsigned long long)arg1;
- (id)backgroundColorForRowAtIndex:(unsigned long long)arg1;
- (id)cellBorderForCellAtIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (id)cellObjectForIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (id)cellObjects;
- (id)cellStyleForIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (id)columnDividerAtIndex:(unsigned long long)arg1;
- (id)columnStyleForColumnIndex:(unsigned long long)arg1;
- (id)component;
- (id)componentTextStyleForTextSource:(id)arg1 inheritingFromDefaultStyles:(bool)arg2;
- (id)contentSizeCategoryForTextSource:(id)arg1;
- (double)convertConvertibleValue:(struct _SXConvertibleValue { double x1; unsigned long long x2; })arg1;
- (id)dataDescriptorForIdentifier:(id)arg1;
- (id)dataDescriptorForIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (unsigned long long)dataOrientation;
- (id)dataSource;
- (id)defaultComponentTextStyleForTextSource:(id)arg1;
- (id)defaultComponentTextStylesForTextSource:(id)arg1;
- (bool)hasColumnHeader;
- (bool)hasRowHeader;
- (double)heightForCellAtIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (double)heightForCellndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1 forWidth:(double)arg2;
- (unsigned long long)horizontalAlignmentForCellAtIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (bool)indexPathIsHeader:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (struct { unsigned long long x1; unsigned long long x2; })indexPathSubstractingHeaders:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (id)initWithStyleFactory:(id)arg1 textSourceFactory:(id)arg2 dataSource:(id)arg3 recordValueTransformerFactory:(id)arg4 DOMObjectProvider:(id)arg5;
- (id)inlineTextStylesForTextSource:(id)arg1;
- (id)linkStyleForTextSource:(id)arg1;
- (void)loadRecords;
- (double)minimumWidthForCellAtIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (double)minimumWidthForStorage:(id)arg1 usingStringEnumeration:(unsigned long long)arg2;
- (unsigned long long)numberOfColumns;
- (unsigned long long)numberOfRows;
- (struct { double x1; double x2; double x3; double x4; })paddingForCellAtIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (void)prepareForLayout;
- (id)recordForIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (id)recordValueTransformerFactory;
- (id)records;
- (id)rowDividerAtIndex:(unsigned long long)arg1;
- (id)rowStyleForRowIndex:(unsigned long long)arg1;
- (void)setRecordValueTransformerFactory:(id)arg1;
- (void)setRecords:(id)arg1;
- (bool)shouldTreatIndexPathAsHeader:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (id)styleFactory;
- (id)tableBorder;
- (id)textLayouterForIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (id)textLayouters;
- (id)textResizerForTextSource:(id)arg1;
- (id)textRulesForTextSource:(id)arg1;
- (id)textSourceFactory;
- (id)textStyleForIdentifier:(id)arg1;
- (unsigned long long)verticalAlignmentForCellAtIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;
- (double)widthForCellAtIndexPath:(struct { unsigned long long x1; unsigned long long x2; })arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

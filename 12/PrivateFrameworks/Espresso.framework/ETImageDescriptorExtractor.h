<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ETImageDescriptorExtractor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Espresso.framework/ETImageDescriptorExtractor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Espresso.framework/Espresso (120)
 */

@interface ETImageDescriptorExtractor : NSObject {
    float  _brightness_range;
    float  _contrast_range;
    void * _ctx;
    unsigned long long  _descriptors_file_cache_size;
    unsigned long long  _descriptors_mem_cache_size;
    int  _doBatchnormTuning;
    float  _horizontal_flip;
    struct { 
        void *data; 
        void *reserved; 
        unsigned long long dim[4]; 
        unsigned long long stride[4]; 
        unsigned long long width; 
        unsigned long long height; 
        unsigned long long channels; 
        unsigned long long batch_number; 
        unsigned long long sequence_length; 
        unsigned long long stride_width; 
        unsigned long long stride_height; 
        unsigned long long stride_channels; 
        unsigned long long stride_batch_number; 
        unsigned long long stride_sequence_length; 
        int storage_type; 
    }  _inputBlob;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { 
        struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { 
            struct __rep { 
                union { 
                    struct __long { 
                        char *__data_; 
                        unsigned long long __size_; 
                        unsigned long long __cap_; 
                    } __l; 
                    struct __short { 
                        BOOL __data_[23]; 
                        struct { 
                            unsigned char __size_; 
                        } ; 
                    } __s; 
                    struct __raw { 
                        unsigned long long __words[3]; 
                    } __r; 
                } ; 
            } __value_; 
        } __r_; 
    }  _inputName;
    unsigned long long * _inputShape;
    int  _nAugmentations;
    struct { 
        void *plan; 
        int network_index; 
    }  _net;
    struct { 
        void *data; 
        void *reserved; 
        unsigned long long dim[4]; 
        unsigned long long stride[4]; 
        unsigned long long width; 
        unsigned long long height; 
        unsigned long long channels; 
        unsigned long long batch_number; 
        unsigned long long sequence_length; 
        unsigned long long stride_width; 
        unsigned long long stride_height; 
        unsigned long long stride_channels; 
        unsigned long long stride_batch_number; 
        unsigned long long stride_sequence_length; 
        int storage_type; 
    }  _outputBlob;
    void * _plan;
    float  _rotation_range;
    float  _shear_range;
    unsigned long long  _targetHeight;
    unsigned long long  _targetWidth;
    float  _zoom_range;
}

@property float brightness_range;
@property float contrast_range;
@property unsigned long long descriptors_file_cache_size;
@property unsigned long long descriptors_mem_cache_size;
@property int doBatchnormTuning;
@property float horizontal_flip;
@property int nAugmentations;
@property float rotation_range;
@property float shear_range;
@property float zoom_range;

+ (id)VisionSceneNet_iOS10_Extractor;
+ (id)VisionSmartCamNet_iOS11_Extractor;
+ (id)inception_v3_Extractor;
+ (id)passthroughExtractor;

- (id).cxx_construct;
- (void).cxx_destruct;
- (float)brightness_range;
- (float)contrast_range;
- (struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; })cropResizeInputImage:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; })arg1;
- (unsigned long long)descriptors_file_cache_size;
- (unsigned long long)descriptors_mem_cache_size;
- (int)doBatchnormTuning;
- (float*)extractDescriptorForDataPoint:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; })arg1 freeWhenDone:(bool)arg2;
- (void)extractForDataPoint:(id)arg1;
- (float)horizontal_flip;
- (id)initWithNetwork:(id)arg1;
- (int)nAugmentations;
- (int)numberOfChannels;
- (float)rotation_range;
- (void)setBrightness_range:(float)arg1;
- (void)setContrast_range:(float)arg1;
- (void)setDescriptors_file_cache_size:(unsigned long long)arg1;
- (void)setDescriptors_mem_cache_size:(unsigned long long)arg1;
- (void)setDoBatchnormTuning:(int)arg1;
- (void)setHorizontal_flip:(float)arg1;
- (void)setNAugmentations:(int)arg1;
- (void)setRotation_range:(float)arg1;
- (void)setShear_range:(float)arg1;
- (void)setZoom_range:(float)arg1;
- (float)shear_range;
- (float)zoom_range;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

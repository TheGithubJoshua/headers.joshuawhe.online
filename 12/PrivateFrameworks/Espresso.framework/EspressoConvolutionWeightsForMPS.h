<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EspressoConvolutionWeightsForMPS.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Espresso.framework/EspressoConvolutionWeightsForMPS.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Espresso.framework/Espresso (120)
 */

@interface EspressoConvolutionWeightsForMPS : NSObject <MPSCNNConvolutionDataSource> {
    struct shared_ptr<Espresso::blob<float, 1> > { 
        struct blob<float, 1> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  biases_blob;
    unsigned int  data_type;
    struct convolution_uniforms { 
        int W; 
        int H; 
        int Winput; 
        int Hinput; 
        int start_channel_low_priority_split; 
        int output_row_bytes; 
        int fused_relu; 
        int fused_tanh; 
        int has_biases; 
        float leaky_relu_alpha; 
        int C; 
        int K; 
        int Nx; 
        int Ny; 
        int backward_stride; 
        int fused_activation_mode; 
        float fused_activation_alpha; 
        float fused_activation_beta; 
        struct padding_params_t { 
            short pad_mode; 
            short fill_mode; 
            float value; 
            short l; 
            short r; 
            short t; 
            short b; 
        } pad; 
        short stride_x; 
        short stride_y; 
        short dilation_x; 
        short dilation_y; 
        unsigned short mtl_pad_l; 
        unsigned short mtl_pad_t; 
        int has_8bit_weights; 
        int do_ncc; 
        int has_batch_norm; 
        int n_groups; 
        int n_parallel; 
        unsigned short start_channel_bottom; 
        unsigned short start_channel_top; 
        unsigned short total_channel_bottom; 
        unsigned short total_channel_top; 
        unsigned short split_K_channels_low_priority_split; 
        short n_batch; 
        int deconv_out_width; 
        int deconv_out_height; 
        int low_precision_accumulation; 
        int hint_use_winograd_win_size; 
    }  params;
    struct shared_ptr<Espresso::blob<float, 1> > { 
        struct blob<float, 1> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  quantization_lut;
    struct shared_ptr<Espresso::blob<float __attribute__((ext_vector_type(2))), 1> >="__ptr_"^{blob<float __attribute__((ext_vector_type(2))), 1> {}  quantization_ranges;
    struct shared_ptr<Espresso::blob<unsigned char, 4> > { 
        struct blob<unsigned char, 4> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  quantized_weights_blob;
    struct shared_ptr<Espresso::blob<float, 1> > { 
        struct blob<float, 1> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  scale_factor_batch_norm;
    struct shared_ptr<Espresso::blob<float, 4> > { 
        struct blob<float, 4> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  weights_blob;
    struct shared_ptr<Espresso::blob<unsigned short, 4> > { 
        struct blob<unsigned short, 4> {} *__ptr_; 
        struct __shared_weak_count {} *__cntrl_; 
    }  weights_f16_blob;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (float*)biasTerms;
- (unsigned int)dataType;
- (id)descriptor;
- (id)initWithParams:(struct convolution_uniforms { int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; float x10; int x11; int x12; int x13; int x14; int x15; int x16; float x17; float x18; struct padding_params_t { short x_19_1_1; short x_19_1_2; float x_19_1_3; short x_19_1_4; short x_19_1_5; short x_19_1_6; short x_19_1_7; } x19; short x20; short x21; short x22; short x23; unsigned short x24; unsigned short x25; int x26; int x27; int x28; int x29; int x30; unsigned short x31; unsigned short x32; unsigned short x33; unsigned short x34; unsigned short x35; short x36; int x37; int x38; int x39; int x40; })arg1;
- (id)label;
- (bool)load;
- (float*)lookupTableForUInt8Kernel;
- (void)purge;
- (/* Warning: Unrecognized filer type: '1' using 'void*' */ void**)rangesForUInt8Kernel;
- (bool)ready;
- (void*)weights;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

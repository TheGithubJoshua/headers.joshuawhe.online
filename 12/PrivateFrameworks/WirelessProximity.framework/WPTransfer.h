<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WPTransfer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WirelessProximity.framework/WPTransfer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WirelessProximity.framework/WirelessProximity (1)
 */

@interface WPTransfer : WPClient {
    bool  _advertiserConnected;
    bool  _advertising;
    bool  _connectedToPeripheral;
    NSUUID * _currentPeripheralUUID;
    NSUUID * _currentlySubscribedCentral;
    <WPTransferDelegate> * _delegate;
    NSMutableSet * _ignoredDevices;
    long long  _lockScanTimer;
    NSMutableData * _notificationData;
    bool  _scanning;
    bool  _sendingTransferComplete;
    bool  _sentEOM;
    bool  _unsubscribeComing;
}

@property bool advertiserConnected;
@property bool advertising;
@property bool connectedToPeripheral;
@property (retain) NSUUID *currentPeripheralUUID;
@property (retain) NSUUID *currentlySubscribedCentral;
@property <WPTransferDelegate> *delegate;
@property (retain) NSMutableSet *ignoredDevices;
@property long long lockScanTimer;
@property (retain) NSMutableData *notificationData;
@property bool scanning;
@property bool sendingTransferComplete;
@property bool sentEOM;
@property bool unsubscribeComing;

- (void).cxx_destruct;
- (bool)advertiserConnected;
- (void)advertiserStateDidChange:(long long)arg1;
- (bool)advertising;
- (void)advertisingFailedToStart:(id)arg1 ofType:(unsigned char)arg2;
- (void)advertisingPendingOfType:(unsigned char)arg1;
- (void)advertisingStartedOfType:(unsigned char)arg1;
- (void)advertisingStoppedOfType:(unsigned char)arg1;
- (void)central:(id)arg1 subscribed:(bool)arg2 toCharacteristic:(id)arg3 inService:(id)arg4;
- (id)clientAsString;
- (void)connectedDevice:(id)arg1 withError:(id)arg2 shouldDiscover:(bool)arg3;
- (bool)connectedToPeripheral;
- (id)currentPeripheralUUID;
- (id)currentlySubscribedCentral;
- (void)dealloc;
- (id)delegate;
- (void)deviceDiscovered:(id)arg1;
- (void)disconnectedDevice:(id)arg1 withError:(id)arg2;
- (void)discoveredCharacteristicsAndServices:(id)arg1 forPeripheral:(id)arg2;
- (void)ignoreDevice;
- (id)ignoredDevices;
- (id)initWithDelegate:(id)arg1 queue:(id)arg2;
- (id)initWithDelegate:(id)arg1 queue:(id)arg2 machName:(id)arg3;
- (id)initWithDelegate:(id)arg1 queue:(id)arg2 machName:(id)arg3 options:(id)arg4;
- (void)invalidate;
- (long long)lockScanTimer;
- (id)notificationData;
- (void)populateClientGATT:(id /* block */)arg1;
- (void)receivedData:(id)arg1;
- (void)receivedData:(id)arg1 forCharacteristic:(id)arg2 inService:(id)arg3 forPeripheral:(id)arg4;
- (void)scannerStateDidChange:(long long)arg1;
- (bool)scanning;
- (void)scanningFailedToStart:(id)arg1 ofType:(unsigned char)arg2;
- (void)scanningStartedOfType:(unsigned char)arg1;
- (void)scanningStoppedOfType:(unsigned char)arg1;
- (bool)sendingTransferComplete;
- (void)sentData:(id)arg1 forCharacteristic:(id)arg2 inService:(id)arg3 forPeripheral:(id)arg4 withError:(id)arg5;
- (bool)sentEOM;
- (void)setAdvertiserConnected:(bool)arg1;
- (void)setAdvertising:(bool)arg1;
- (void)setConnectedToPeripheral:(bool)arg1;
- (void)setCurrentPeripheralUUID:(id)arg1;
- (void)setCurrentlySubscribedCentral:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIgnoredDevices:(id)arg1;
- (void)setLockScanTimer:(long long)arg1;
- (void)setNotificationData:(id)arg1;
- (void)setScanning:(bool)arg1;
- (void)setSendingTransferComplete:(bool)arg1;
- (void)setSentEOM:(bool)arg1;
- (void)setUnsubscribeComing:(bool)arg1;
- (void)startAdvertising;
- (void)startScan;
- (void)stopAdvertising;
- (void)stopScan;
- (void)transferFailed:(id)arg1;
- (bool)unsubscribeComing;
- (void)updatedNotificationState:(bool)arg1 forCharacteristic:(id)arg2 inService:(id)arg3 withPeripheral:(id)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

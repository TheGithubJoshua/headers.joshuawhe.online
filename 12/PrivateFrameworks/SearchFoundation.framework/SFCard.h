<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SFCard.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SearchFoundation.framework/SFCard.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation (213.5.3)
 */

@interface SFCard : NSObject <CRCard, NSCopying, NSSecureCoding, SFCard> {
    NSString * _cardId;
    NSArray * _cardSections;
    NSString * _contextReferenceIdentifier;
    NSArray * _dismissalCommands;
    NSData * _entityIdentifier;
    NSArray * _entityProtobufMessages;
    NSString * _fbr;
    bool  _flexibleSectionOrder;
    struct { 
        unsigned int type : 1; 
        unsigned int source : 1; 
        unsigned int queryId : 1; 
        unsigned int flexibleSectionOrder : 1; 
    }  _has;
    NSData * _intentMessageData;
    NSString * _intentMessageName;
    NSData * _intentResponseMessageData;
    NSString * _intentResponseMessageName;
    NSData * _originalCardData;
    unsigned long long  _queryId;
    NSString * _resultIdentifier;
    int  _source;
    NSString * _title;
    int  _type;
    NSURL * _urlValue;
}

@property (setter=acs_setInteraction:, nonatomic, retain) INInteraction *acs_interaction;
@property (nonatomic, readonly) bool asynchronous;
@property (nonatomic, readonly) SFCard *backingCard;
@property (nonatomic, readonly) unsigned long long cardFormat;
@property (nonatomic, copy) NSString *cardId;
@property (nonatomic, readonly, copy) NSString *cardIdentifier;
@property (nonatomic, readonly) NSArray *cardSections;
@property (copy) NSArray *cardSections;
@property (nonatomic, copy) NSString *contextReferenceIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSDictionary *dictionaryRepresentation;
@property (nonatomic, readonly) NSArray *dismissalCommands;
@property (nonatomic, copy) NSArray *dismissalCommands;
@property (nonatomic, copy) NSData *entityIdentifier;
@property (nonatomic, copy) NSArray *entityProtobufMessages;
@property (nonatomic, copy) NSString *fbr;
@property (nonatomic, readonly) bool flexibleSectionOrder;
@property (nonatomic) bool flexibleSectionOrder;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSData *intentMessageData;
@property (nonatomic, copy) NSString *intentMessageName;
@property (nonatomic, copy) NSData *intentResponseMessageData;
@property (nonatomic, copy) NSString *intentResponseMessageName;
@property (nonatomic, readonly) NSSet *interactions;
@property (nonatomic, readonly) NSData *jsonData;
@property (getter=_originalCardData, setter=_setOriginalCardData:, nonatomic, copy) NSData *originalCardData;
@property (nonatomic) unsigned long long queryId;
@property (nonatomic, copy) NSString *resultIdentifier;
@property (nonatomic) int source;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *title;
@property (nonatomic) int type;
@property (nonatomic, copy) NSURL *urlValue;

// Image: /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_originalCardData;
- (void)_setOriginalCardData:(id)arg1;
- (id)cardId;
- (id)cardSections;
- (id)contextReferenceIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dictionaryRepresentation;
- (id)dismissalCommands;
- (void)encodeWithCoder:(id)arg1;
- (id)entityIdentifier;
- (id)entityProtobufMessages;
- (id)fbr;
- (bool)flexibleSectionOrder;
- (bool)hasFlexibleSectionOrder;
- (bool)hasQueryId;
- (bool)hasSource;
- (bool)hasType;
- (id)initWithCoder:(id)arg1;
- (id)initWithProtobuf:(id)arg1;
- (id)intentMessageData;
- (id)intentMessageName;
- (id)intentResponseMessageData;
- (id)intentResponseMessageName;
- (id)jsonData;
- (void)loadCardSectionsWithCompletionAndErrorHandler:(id /* block */)arg1;
- (void)loadCardSectionsWithCompletionHandler:(id /* block */)arg1;
- (unsigned long long)queryId;
- (id)resultIdentifier;
- (void)setCardId:(id)arg1;
- (void)setCardSections:(id)arg1;
- (void)setContextReferenceIdentifier:(id)arg1;
- (void)setDismissalCommands:(id)arg1;
- (void)setEntityIdentifier:(id)arg1;
- (void)setEntityProtobufMessages:(id)arg1;
- (void)setFbr:(id)arg1;
- (void)setFlexibleSectionOrder:(bool)arg1;
- (void)setIntentMessageData:(id)arg1;
- (void)setIntentMessageName:(id)arg1;
- (void)setIntentResponseMessageData:(id)arg1;
- (void)setIntentResponseMessageName:(id)arg1;
- (void)setQueryId:(unsigned long long)arg1;
- (void)setResultIdentifier:(id)arg1;
- (void)setSource:(int)arg1;
- (void)setTitle:(id)arg1;
- (void)setType:(int)arg1;
- (void)setUrlValue:(id)arg1;
- (int)source;
- (id)title;
- (int)type;
- (id)urlValue;

// Image: /System/Library/PrivateFrameworks/AssistantCardServiceSupport.framework/AssistantCardServiceSupport

+ (id)acs_uniquelyIdentifiedCard;

- (id)acs_interaction;
- (void)acs_setInteraction:(id)arg1;

// Image: /System/Library/PrivateFrameworks/Cards.framework/Cards

+ (id)_interactionsByIntentDataHashes;

- (id)_interactionDataKey;
- (bool)asynchronous;
- (id)backingCard;
- (unsigned long long)cardFormat;
- (id)cardIdentifier;
- (id)interaction;
- (id)interactions;
- (void)loadCardWithCompletion:(id /* block */)arg1;
- (id)underlyingInteraction;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

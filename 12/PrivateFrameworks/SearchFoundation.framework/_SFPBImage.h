<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_SFPBImage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SearchFoundation.framework/_SFPBImage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation (213.5.3)
 */

@interface _SFPBImage : PBCodable <NSSecureCoding, _SFPBImage> {
    _SFPBAppIconImage * _appIconImage;
    _SFPBContactImage * _contactImage;
    NSString * _contentType;
    _SFPBGraphicalFloat * _cornerRadius;
    NSString * _identifier;
    NSData * _imageData;
    bool  _isTemplate;
    NSString * _keyColor;
    _SFPBLocalImage * _localImage;
    _SFPBMediaArtworkImage * _mediaArtworkImage;
    _SFPBMonogramImage * _monogramImage;
    _SFPBGraphicalFloat * _scale;
    bool  _shouldCropToCircle;
    _SFPBPointSize * _size;
    int  _source;
    int  _type;
    _SFPBURLImage * _urlImage;
}

@property (nonatomic, retain) _SFPBAppIconImage *appIconImage;
@property (nonatomic, retain) _SFPBContactImage *contactImage;
@property (nonatomic, copy) NSString *contentType;
@property (nonatomic, retain) _SFPBGraphicalFloat *cornerRadius;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *identifier;
@property (copy) NSData *imageData;
@property (nonatomic) bool isTemplate;
@property (nonatomic, readonly) NSData *jsonData;
@property (nonatomic, copy) NSString *keyColor;
@property (nonatomic, retain) _SFPBLocalImage *localImage;
@property (nonatomic, retain) _SFPBMediaArtworkImage *mediaArtworkImage;
@property (nonatomic, retain) _SFPBMonogramImage *monogramImage;
@property (nonatomic, retain) _SFPBGraphicalFloat *scale;
@property (nonatomic) bool shouldCropToCircle;
@property (nonatomic, retain) _SFPBPointSize *size;
@property (nonatomic) int source;
@property (readonly) Class superclass;
@property (nonatomic) int type;
@property (nonatomic, retain) _SFPBURLImage *urlImage;

// Image: /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation

- (void).cxx_destruct;
- (id)appIconImage;
- (id)contactImage;
- (id)contentType;
- (id)cornerRadius;
- (id)dictionaryRepresentation;
- (unsigned long long)hash;
- (id)identifier;
- (id)imageData;
- (id)initWithDictionary:(id)arg1;
- (id)initWithFacade:(id)arg1;
- (id)initWithJSON:(id)arg1;
- (id)initWithSFImage:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isTemplate;
- (id)jsonData;
- (id)keyColor;
- (id)localImage;
- (id)mediaArtworkImage;
- (id)monogramImage;
- (bool)readFrom:(id)arg1;
- (id)scale;
- (void)setAppIconImage:(id)arg1;
- (void)setContactImage:(id)arg1;
- (void)setContentType:(id)arg1;
- (void)setCornerRadius:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setImageData:(id)arg1;
- (void)setIsTemplate:(bool)arg1;
- (void)setKeyColor:(id)arg1;
- (void)setLocalImage:(id)arg1;
- (void)setMediaArtworkImage:(id)arg1;
- (void)setMonogramImage:(id)arg1;
- (void)setScale:(id)arg1;
- (void)setShouldCropToCircle:(bool)arg1;
- (void)setSize:(id)arg1;
- (void)setSource:(int)arg1;
- (void)setType:(int)arg1;
- (void)setUrlImage:(id)arg1;
- (bool)shouldCropToCircle;
- (id)size;
- (int)source;
- (int)type;
- (id)urlImage;
- (void)writeTo:(id)arg1;

// Image: /System/Library/PrivateFrameworks/Cards.framework/Cards

+ (id)imageWithData:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

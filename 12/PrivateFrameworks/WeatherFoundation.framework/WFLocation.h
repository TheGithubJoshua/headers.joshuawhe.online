<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WFLocation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WeatherFoundation.framework/WFLocation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WeatherFoundation.framework/WeatherFoundation (1)
 */

@interface WFLocation : NSObject <NSCopying, NSSecureCoding> {
    long long  _archiveVersion;
    NSString * _city;
    NSString * _country;
    NSString * _countryAbbreviation;
    NSString * _county;
    NSDate * _creationDate;
    NSString * _displayName;
    CLLocation * _geoLocation;
    NSString * _locationID;
    NSString * _state;
    NSString * _stateAbbreviation;
    NSTimeZone * _timeZone;
    NSString * _weatherDisplayName;
}

@property long long archiveVersion;
@property (nonatomic, copy) NSString *city;
@property (nonatomic, copy) NSString *country;
@property (nonatomic, copy) NSString *countryAbbreviation;
@property (nonatomic, copy) NSString *county;
@property (nonatomic, copy) NSDate *creationDate;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic, copy) CLLocation *geoLocation;
@property (nonatomic, copy) NSString *locationID;
@property (nonatomic, readonly) bool shouldQueryForAirQualityData;
@property (nonatomic, copy) NSString *state;
@property (nonatomic, copy) NSString *stateAbbreviation;
@property (nonatomic, copy) NSTimeZone *timeZone;
@property (nonatomic, copy) NSString *weatherDisplayName;

+ (long long)currentArchiveVersion;
+ (id)knownKeys;
+ (id)locationsByConsolidatingDuplicates:(id)arg1 originalOrder:(id)arg2;
+ (id)locationsByConsolidatingDuplicatesInBucket:(id)arg1;
+ (id)locationsByFilteringDuplicates:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (long long)archiveVersion;
- (id)city;
- (id)cloudDictionaryRepresentation;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)countriesSupportAQI;
- (id)country;
- (id)countryAbbreviation;
- (id)county;
- (id)creationDate;
- (id)description;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (id)geoLocation;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCloudDictionaryRepresentation:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLocalDataRepresentation:(id)arg1;
- (id)initWithMapItem:(id)arg1;
- (id)initWithMapItem:(id)arg1 isCurrentLocation:(bool)arg2;
- (id)initWithPlacemark:(id)arg1;
- (id)initWithSearchResponse:(id)arg1;
- (bool)isDay;
- (bool)isDayForDate:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)localDataRepresentation;
- (id)locationID;
- (void)setArchiveVersion:(long long)arg1;
- (void)setCity:(id)arg1;
- (void)setCountry:(id)arg1;
- (void)setCountryAbbreviation:(id)arg1;
- (void)setCounty:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setGeoLocation:(id)arg1;
- (void)setLocationID:(id)arg1;
- (void)setState:(id)arg1;
- (void)setStateAbbreviation:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setWeatherDisplayName:(id)arg1;
- (bool)shouldQueryForAirQualityData;
- (id)state;
- (id)stateAbbreviation;
- (id)summary;
- (id)summaryThatIsCompact:(bool)arg1;
- (id)sunriseForDate:(id)arg1;
- (id)sunsetForDate:(id)arg1;
- (id)timeZone;
- (id)weatherDisplayName;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

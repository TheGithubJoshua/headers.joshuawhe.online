<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AKLayerPresentationManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AnnotationKit.framework/AKLayerPresentationManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit (232.3.30)
 */

@interface AKLayerPresentationManager : NSObject {
    bool  _adornmentsHidden;
    double  _alignmentGuidePositionX;
    double  _alignmentGuidePositionY;
    CAShapeLayer * _alignmentGuideXLayer;
    CAShapeLayer * _alignmentGuideYLayer;
    NSMapTable * _annotationsToAdornmentLayers;
    NSMapTable * _annotationsToAnnotationLayers;
    CALayer * _cropAdornmentLayer;
    CALayer * _cropAnnotationLayer;
    double  _currentScaleFactor;
    bool  _isObservingModel;
    AKPageController * _pageController;
    AKPageModelController * _pageModelController;
    CALayer * _rootLayer;
    bool  _shouldPixelate;
}

@property (nonatomic) bool adornmentsHidden;
@property (nonatomic) double alignmentGuidePositionX;
@property (nonatomic) double alignmentGuidePositionY;
@property (retain) CAShapeLayer *alignmentGuideXLayer;
@property (retain) CAShapeLayer *alignmentGuideYLayer;
@property (retain) NSMapTable *annotationsToAdornmentLayers;
@property (retain) NSMapTable *annotationsToAnnotationLayers;
@property (retain) CALayer *cropAdornmentLayer;
@property (retain) CALayer *cropAnnotationLayer;
@property double currentScaleFactor;
@property bool isObservingModel;
@property AKPageController *pageController;
@property (retain) AKPageModelController *pageModelController;
@property (retain) CALayer *rootLayer;
@property (nonatomic) bool shouldPixelate;

- (void).cxx_destruct;
- (void)_addAdornmentLayerForAnnotation:(id)arg1;
- (void)_addLayerForAnnotation:(id)arg1;
- (void)_applyUpdatesWithScale:(double)arg1 toLayers:(id)arg2 isLiveUpdate:(bool)arg3 forceUpdate:(bool)arg4;
- (double)_hiDPIScaleFactor;
- (void)_removeAdornmentLayerForAnnotation:(id)arg1;
- (void)_removeLayerForAnnotation:(id)arg1;
- (void)_setNeedsDisplayOnNewLayer:(id)arg1;
- (void)_startObservingModel;
- (void)_stopObservingModel;
- (void)_updateLoupeAnnotationsContributedToByAnnotation:(id)arg1;
- (void)_updateLoupeAnnotationsIntersectingRemovedAnnotation:(id)arg1;
- (bool)adornmentsHidden;
- (double)alignmentGuidePositionX;
- (double)alignmentGuidePositionY;
- (id)alignmentGuideXLayer;
- (id)alignmentGuideYLayer;
- (id)annotationsToAdornmentLayers;
- (id)annotationsToAnnotationLayers;
- (id)cropAdornmentLayer;
- (id)cropAnnotationLayer;
- (double)currentScaleFactor;
- (void)dealloc;
- (void)forceUpdateAnnotationLayer:(id)arg1;
- (id)initWithPageController:(id)arg1;
- (bool)isObservingModel;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)pageController;
- (id)pageModelController;
- (id)rootLayer;
- (void)setAdornmentsHidden:(bool)arg1;
- (void)setAlignmentGuidePositionX:(double)arg1;
- (void)setAlignmentGuidePositionY:(double)arg1;
- (void)setAlignmentGuideXLayer:(id)arg1;
- (void)setAlignmentGuideYLayer:(id)arg1;
- (void)setAnnotationsToAdornmentLayers:(id)arg1;
- (void)setAnnotationsToAnnotationLayers:(id)arg1;
- (void)setCropAdornmentLayer:(id)arg1;
- (void)setCropAnnotationLayer:(id)arg1;
- (void)setCurrentScaleFactor:(double)arg1;
- (void)setIsObservingModel:(bool)arg1;
- (void)setPageController:(id)arg1;
- (void)setPageModelController:(id)arg1;
- (void)setRootLayer:(id)arg1;
- (void)setShouldPixelate:(bool)arg1;
- (void)setup;
- (bool)shouldPixelate;
- (void)teardown;
- (void)updateScaleFactor:(double)arg1 isLiveUpdate:(bool)arg2 forceUpdate:(bool)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

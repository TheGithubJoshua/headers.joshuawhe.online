<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AKPageModelController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AnnotationKit.framework/AKPageModelController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit (232.3.30)
 */

@interface AKPageModelController : NSObject {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _appliedCropRect;
    AKCropAnnotation * _cropAnnotation;
    AKInkAnnotation * _inkCanvasAnnotation;
    NSMutableOrderedSet * _mutableAnnotations;
    NSMutableSet * _mutableSelectedAnnotations;
    id  _representedObject;
    AKStatistics * _statisticsLogger;
}

@property (readonly) NSArray *annotations;
@property struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } appliedCropRect;
@property (retain) AKCropAnnotation *cropAnnotation;
@property (retain) AKInkAnnotation *inkCanvasAnnotation;
@property id representedObject;
@property (readonly) NSSet *selectedAnnotations;
@property (nonatomic) AKStatistics *statisticsLogger;

+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;

- (void).cxx_destruct;
- (void)_coalescedEnsureInkAnnotationIsInFront:(id)arg1;
- (void)_enableEditObservationForAnnotationIfNew:(id)arg1;
- (void)_ensureInkAnnotationIsInFrontWhenEditsAreDone;
- (void)_logAnnotationAdded:(id)arg1;
- (void)_postSelectedAnnotationsChangedNotification;
- (void)addCropToolAnnotation;
- (void)addSelectedAnnotations:(id)arg1;
- (void)addSelectedAnnotationsObject:(id)arg1;
- (id)annotations;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })appliedCropRect;
- (id)archivableRepresentation;
- (void)bringSelectedAnnotationsForward;
- (void)bringSelectedAnnotationsToFront;
- (bool)containsAnnotation:(id)arg1;
- (id)cropAnnotation;
- (bool)hasMaskBorderAnnotation;
- (id)init;
- (id)initWithArchivableRepresentation:(id)arg1;
- (id)inkCanvasAnnotation;
- (void)insertAnnotations:(id)arg1 atIndexes:(id)arg2;
- (void)insertObject:(id)arg1 inAnnotationsAtIndex:(unsigned long long)arg2;
- (void)intersectSelectedAnnotations:(id)arg1;
- (void)removeAllAnnotations;
- (void)removeAnnotationsAtIndexes:(id)arg1;
- (void)removeCropToolAnnotation;
- (void)removeObjectFromAnnotationsAtIndex:(unsigned long long)arg1;
- (void)removeSelectedAnnotations:(id)arg1;
- (void)removeSelectedAnnotationsObject:(id)arg1;
- (void)replaceAnnotationsAtIndexes:(id)arg1 withAnnotations:(id)arg2;
- (void)replaceObjectInAnnotationsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (id)representedObject;
- (void)restoreSelectionStateForUndo:(id)arg1;
- (void)selectAllAnnotations;
- (void)selectAnnotation:(id)arg1 byExtendingSelection:(bool)arg2;
- (void)selectAnnotationsAtIndexes:(id)arg1 byExtendingSelection:(bool)arg2;
- (id)selectedAnnotations;
- (id)selectionStateForUndo;
- (void)sendSelectedAnnotationsBackward;
- (void)sendSelectedAnnotationsToBack;
- (void)setAppliedCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setCropAnnotation:(id)arg1;
- (void)setInkCanvasAnnotation:(id)arg1;
- (void)setInkCanvasAnnotationOneTime:(id)arg1;
- (void)setRepresentedObject:(id)arg1;
- (void)setSelectedAnnotations:(id)arg1;
- (void)setStatisticsLogger:(id)arg1;
- (id)statisticsLogger;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

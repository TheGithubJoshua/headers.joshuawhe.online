<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AKAnnotationPopoverViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AnnotationKit.framework/AKAnnotationPopoverViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit (232.3.30)
 */

@interface AKAnnotationPopoverViewController : UIViewController <AKPopoverAnnotationEditor, UIGestureRecognizerDelegate> {
    <AKAnnotationEditorDelegate> * _delegate;
    bool  _editsOnLaunch;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _presentationRect;
    UIView * _presentationView;
    AKAnnotation * mAnnotation;
    AKPageController * mAnnotationPageController;
    AKAnnotationTheme * mAnnotationTheme;
    AKTouchOutsideViewGestureRecognizer * mHideOnTouchGestureRecognizer;
    id  mObserver;
    int  mPosition;
}

@property (nonatomic, retain) AKAnnotation *annotation;
@property (nonatomic, retain) AKPageController *annotationPageController;
@property (nonatomic, retain) AKAnnotationTheme *annotationTheme;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AKAnnotationEditorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool editsOnLaunch;
@property (readonly) unsigned long long hash;
@property (nonatomic) int position;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } presentationRect;
@property (nonatomic, retain) UIView *presentationView;
@property (readonly) Class superclass;
@property (nonatomic, retain) IMTheme *theme;

- (void).cxx_destruct;
- (id)annotation;
- (id)annotationPageController;
- (id)annotationTheme;
- (bool)canPresentInPosition:(int)arg1;
- (void)dealloc;
- (id)delegate;
- (void)didHide;
- (void)didReceiveMemoryWarning;
- (void)didShow;
- (bool)editsOnLaunch;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)hide;
- (void)hideAnimation:(id)arg1 finished:(id)arg2 context:(void*)arg3;
- (id)init;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })p_containerFrameForView:(id)arg1;
- (void)popInAnimation:(id)arg1 finished:(id)arg2 context:(void*)arg3;
- (int)position;
- (void)presentFromRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 view:(id)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })presentationRect;
- (id)presentationView;
- (void)releaseOutlets;
- (void)setAnnotation:(id)arg1;
- (void)setAnnotationPageController:(id)arg1;
- (void)setAnnotationTheme:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditsOnLaunch:(bool)arg1;
- (void)setPosition:(int)arg1;
- (void)setPresentationRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPresentationView:(id)arg1;
- (void)viewDidLoad;
- (void)willHide;
- (int)willPresentInPosition:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 view:(id)arg2;
- (void)willShow;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AKFormFeatureDetector.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AnnotationKit.framework/AKFormFeatureDetector.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AnnotationKit.framework/AnnotationKit (232.3.30)
 */

@interface AKFormFeatureDetector : NSObject {
    NSObject<AKFormFeatureDetectorDelegate> * _delegate;
}

@property (nonatomic) NSObject<AKFormFeatureDetectorDelegate> *delegate;

+ (struct CGContext { }*)_newBitmapFromCGPDFDocument:(struct CGPDFDocument { }*)arg1;
+ (struct CGContext { }*)_newBitmapInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 onPage:(id)arg2 scale:(double)arg3;

- (void).cxx_destruct;
- (id)_boxOnLine:(id)arg1 atPoint:(struct CGPoint { double x1; double x2; })arg2;
- (id)_checkboxAtPoint:(struct CGPoint { double x1; double x2; })arg1 onPage:(id)arg2 pageBitmap:(struct CGContext { }*)arg3;
- (id)_defaultFeatureForPoint:(struct CGPoint { double x1; double x2; })arg1 onPage:(id)arg2 snapToVerticalEdges:(bool)arg3;
- (void)_drawThresholdedBitmapForTestForPageBitmap:(struct CGContext { }*)arg1 withPixels:(float*)arg2;
- (id)_featureAtPoint:(struct CGPoint { double x1; double x2; })arg1 onPage:(id)arg2 mode:(long long)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_findExtentForLineTop:(double)arg1 lineBottom:(double)arg2 x:(double)arg3 onPage:(id)arg4;
- (unsigned long long)_findLineEdgeTypeOnLeft:(bool)arg1 startingAt:(float*)arg2 withPageLeftEdge:(float*)arg3 withPageWidth:(long long)arg4 andFormHeight:(unsigned long long)arg5;
- (struct { bool x1; double x2; bool x3; double x4; })_findVerticalEdgesAtPoint:(struct CGPoint { double x1; double x2; })arg1 extent:(long long)arg2 onPage:(id)arg3;
- (bool)_floatPixelBufferForCGContext:(struct CGContext { }*)arg1 imageBuffer:(struct vImage_Buffer { void *x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; }*)arg2;
- (id)_formFieldAtPoint:(struct CGPoint { double x1; double x2; })arg1 onPage:(id)arg2 enforceMaxWidth:(bool)arg3 pageBitmap:(struct CGContext { }*)arg4;
- (id)_lineAtPoint:(struct CGPoint { double x1; double x2; })arg1 onPage:(id)arg2 useVerticalCenter:(bool)arg3;
- (long long)_scanToEdgeOfFormFieldStartingAtPoint:(struct CGPoint { double x1; double x2; })arg1 withBitmapData:(float*)arg2 width:(long long)arg3 height:(long long)arg4 bottomRowStartsAt:(float*)arg5 bottomRowEndsAt:(float*)arg6 withLineThickness:(long long)arg7 gapWidthForDottedLines:(long long)arg8 separatorHeights:(id)arg9 andRegionHeight:(long long*)arg10 trackAverageSpacingWidth:(long long*)arg11 trackFarthestPossibleEdge:(long long*)arg12 trackNumberOfSegments:(long long*)arg13 trackNumberOfGapsForDottedLine:(long long*)arg14 goingLeft:(bool)arg15;
- (float*)_shiftScanAwayFromEdgeInPixels:(float*)arg1;
- (id)_snappedFormFieldForField:(id)arg1;
- (float*)_thresholdPixelStripIn:(float*)arg1 withImageLenth:(long long)arg2 thresholdValue:(float)arg3 startingPtr:(float*)arg4 withThresholdLength:(long long)arg5;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_translateFeature:(id)arg1 toPageOrigin:(struct CGPoint { double x1; double x2; })arg2;
- (void)dealloc;
- (id)delegate;
- (id)featureAtPoint:(struct CGPoint { double x1; double x2; })arg1 onPage:(id)arg2 mode:(long long)arg3;
- (id)initWithDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

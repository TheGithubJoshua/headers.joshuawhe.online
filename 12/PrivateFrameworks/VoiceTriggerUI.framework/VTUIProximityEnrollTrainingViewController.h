<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VTUIProximityEnrollTrainingViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceTriggerUI.framework/VTUIProximityEnrollTrainingViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceTriggerUI.framework/VoiceTriggerUI (1)
 */

@interface VTUIProximityEnrollTrainingViewController : UIViewController <AFMyriadDelegate, AFUIDebugControllerDelegate, AFUISiriLanguageDelegate, CSVTUITrainingManagerDelegate, SUICFlamesViewDelegate, VTUIEnrollmentSetupIntroViewDelegate> {
    unsigned long long  _AVVCRetryCount;
    UIView * _aboutTappedSender;
    VTUIAudioHintPlayer * _audioHintPlayer;
    float  _audioRms;
    unsigned long long  _badMicRetryCount;
    long long  _consecutiveTimeoutCount;
    long long  _currentTrainingState;
    <AFUIDebugControlling> * _debugController;
    <VTUIEnrollTrainingViewControllerDelegate> * _delegate;
    bool  _disambiguateLanguageOptionsForTesting;
    VTUIProximityEnrollTrainingView * _enrollTrainingView;
    bool  _hasPHSInCloud;
    id /* block */  _hasPHSInCloudFetchBlock;
    NSObject<OS_dispatch_queue> * _hasPHSInCloudFetchQueue;
    bool  _hasRetriedTraining;
    VTUIProximityEnrollmentSetupIntroView * _introView;
    bool  _isResignedActive;
    VTUIProximityEnrollmentLanguageOptionsView * _languageOptionsView;
    AFMyriadCoordinator * _myriadCoordinator;
    long long  _orientation;
    unsigned long long  _sessionId;
    bool  _shouldTurnOnMyriad;
    AFUISiriLanguage * _siriLanguage;
    NSArray * _siriLanguageOptions;
    bool  _skipToEndForTesting;
    NSString * _spokenLanguageCode;
    VTUIProximityEnrollmentSuccessView * _successView;
    CSVTUITrainingManager * _trainingManager;
    NSArray * _trainingPageInstructions;
    VTUIProximityTryAgainView * _tryAgainView;
}

@property (nonatomic) unsigned long long AVVCRetryCount;
@property (nonatomic, retain) UIView *aboutTappedSender;
@property (nonatomic, retain) VTUIAudioHintPlayer *audioHintPlayer;
@property (nonatomic) float audioRms;
@property (nonatomic) unsigned long long badMicRetryCount;
@property (nonatomic) long long currentTrainingState;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VTUIEnrollTrainingViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disambiguateLanguageOptionsForTesting;
@property (nonatomic, retain) VTUIProximityEnrollTrainingView *enrollTrainingView;
@property (nonatomic) bool hasRetriedTraining;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) VTUIProximityEnrollmentSetupIntroView *introView;
@property (nonatomic, retain) VTUIProximityEnrollmentLanguageOptionsView *languageOptionsView;
@property (nonatomic, retain) AFMyriadCoordinator *myriadCoordinator;
@property (nonatomic) long long orientation;
@property (nonatomic, readonly) unsigned long long sessionId;
@property (nonatomic) bool shouldTurnOnMyriad;
@property (nonatomic) bool skipToEndForTesting;
@property (nonatomic, retain) NSString *spokenLanguageCode;
@property (nonatomic, retain) VTUIProximityEnrollmentSuccessView *successView;
@property (readonly) Class superclass;
@property (nonatomic, retain) CSVTUITrainingManager *trainingManager;
@property (nonatomic, retain) NSArray *trainingPageInstructions;
@property (nonatomic, retain) VTUIProximityTryAgainView *tryAgainView;

- (void).cxx_destruct;
- (unsigned long long)AVVCRetryCount;
- (void)VTUITrainingManagerAudioSessionTerminatedInStatus:(int)arg1;
- (void)VTUITrainingManagerFeedLevel:(float)arg1;
- (void)VTUITrainingManagerStopListening;
- (void)_advanceState;
- (void)_becomeActive;
- (void)_checkForPHSCloudDataIfNecessary:(id)arg1;
- (void)_cleanupHelper;
- (void)_cleanupTrainingManagerWithCompletion:(id /* block */)arg1;
- (void)_clearAggdScalar:(id)arg1;
- (void)_continueFromIntro:(id)arg1;
- (void)_continueFromLanguageOptions:(id)arg1;
- (void)_continueFromRetry:(id)arg1;
- (void)_createTrainingManagerIfNeeded;
- (void)_didEnterBackground;
- (void)_dismiss:(id)arg1;
- (void)_finishSiriSetup:(id)arg1;
- (id)_getSetupModeString;
- (void)_handleTrainingResultForNonRetryablePhraseWithStatus:(int)arg1;
- (void)_handleTrainingResultForRetryablePhraseWithStatus:(int)arg1 shouldShowCheckMark:(bool)arg2;
- (bool)_hasPHSCloudDataForSpokenLanguage;
- (void)_hideInstruction;
- (bool)_isLocaleSupported:(id)arg1;
- (bool)_isTrainingInProgress;
- (void)_logAggdCount:(long long)arg1 forKey:(id)arg2;
- (void)_logAggdScalar:(long long)arg1 forKey:(id)arg2;
- (void)_presentRadarView;
- (void)_resetEnrollment;
- (void)_resetIdleTimer;
- (void)_resetTrainingManager;
- (void)_resignActive;
- (void)_resumeGLDrawing;
- (void)_resumeTraining;
- (void)_retryAfterBadMicAlert;
- (void)_retryInstruction:(bool)arg1;
- (void)_setAssistantEnabled:(bool)arg1;
- (void)_setLanguageOptionsAndContinue:(id)arg1;
- (void)_setPHSEnrollmentPrefEnabled:(bool)arg1;
- (void)_setupEnrollTrainingView;
- (void)_setupMode;
- (void)_setupTrainingStates;
- (bool)_shouldSpeakAudioHint;
- (void)_showBadMicAlertCompletion:(id /* block */)arg1;
- (void)_showBadMicAlertWithCompletion:(id /* block */)arg1;
- (void)_showEnrollmentSuccessView;
- (void)_showInstruction:(long long)arg1 isRetry:(bool)arg2;
- (void)_showIntroView;
- (void)_showResultMark:(bool)arg1 completion:(id /* block */)arg2;
- (void)_showStatusMessage:(id)arg1 afterDelay:(double)arg2 completion:(id /* block */)arg3;
- (void)_showTrainingInstruction:(long long)arg1 afterDelay:(double)arg2 isRetry:(bool)arg3 animate:(bool)arg4;
- (void)_showUnsupportedLocaleAlert;
- (void)_showUnsupportedLocaleAlertCompletion:(id /* block */)arg1;
- (bool)_siriLanguageIsIncompatibleWithPairedWatch;
- (void)_startEnrollment;
- (void)_startTraining;
- (void)_stopGLDrawing;
- (void)_triggerEndpoint:(id)arg1;
- (void)_updateCurrentConstraintsToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (void)_updateFlamesForStatus:(long long)arg1;
- (void)_updatePageNumberForInstruction:(long long)arg1;
- (void)_warnForLanguageCompatibilityIfNecessary:(id /* block */)arg1;
- (void)aboutTapped:(id)arg1;
- (id)aboutTappedSender;
- (id)audioHintPlayer;
- (float)audioLevelForFlamesView:(id)arg1;
- (float)audioRms;
- (unsigned long long)badMicRetryCount;
- (void)cancelTraining;
- (long long)currentTrainingState;
- (void)dealloc;
- (void)debugController:(id)arg1 openURL:(id)arg2;
- (void)debugController:(id)arg1 stateDidChangeWithAddViews:(id)arg2;
- (void)debugController:(id)arg1 wantsDismissViewController:(id)arg2;
- (void)debugController:(id)arg1 wantsPresentViewController:(id)arg2;
- (id)delegate;
- (bool)disambiguateLanguageOptionsForTesting;
- (id)enrollTrainingView;
- (void)finish:(id)arg1;
- (void)getScreenshotImageForDebugController:(id)arg1 withCompletion:(id /* block */)arg2;
- (bool)hasRetriedTraining;
- (id)init;
- (id)interpretAudioSource:(unsigned long long)arg1;
- (long long)interpretSessionManagerStatus:(int)arg1 forInstruction:(long long)arg2;
- (id)introView;
- (id)languageOptionsView;
- (id)myriadCoordinator;
- (long long)orientation;
- (id)presentedViewControllerForDebugController;
- (unsigned long long)sessionId;
- (void)setAVVCRetryCount:(unsigned long long)arg1;
- (void)setAboutTappedSender:(id)arg1;
- (void)setAudioHintPlayer:(id)arg1;
- (void)setAudioRms:(float)arg1;
- (void)setBadMicRetryCount:(unsigned long long)arg1;
- (void)setCurrentTrainingState:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisambiguateLanguageOptionsForTesting:(bool)arg1;
- (void)setEnrollTrainingView:(id)arg1;
- (void)setHasRetriedTraining:(bool)arg1;
- (void)setIntroView:(id)arg1;
- (void)setLanguageOptionsView:(id)arg1;
- (void)setMyriadCoordinator:(id)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setShouldTurnOnMyriad:(bool)arg1;
- (void)setSkipToEndForTesting:(bool)arg1;
- (void)setSpokenLanguageCode:(id)arg1;
- (void)setSuccessView:(id)arg1;
- (void)setTrainingManager:(id)arg1;
- (void)setTrainingPageInstructions:(id)arg1;
- (void)setTryAgainView:(id)arg1;
- (void)setupNavigationBarStyleForAppearing:(bool)arg1;
- (void)shouldAbortAnotherDeviceBetter:(id)arg1;
- (void)shouldContinue:(id)arg1;
- (bool)shouldTurnOnMyriad;
- (void)siriLanguageSpokenLanguageCodeDidChange:(id)arg1;
- (void)skipAssistant:(id)arg1;
- (bool)skipToEndForTesting;
- (void)skipTraining:(id)arg1;
- (id)spokenLanguageCode;
- (id)successView;
- (id)trainingManager;
- (id)trainingPageInstructions;
- (id)tryAgainView;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SCROBrailleTranslationManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ScreenReaderOutput.framework/SCROBrailleTranslationManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ScreenReaderOutput.framework/ScreenReaderOutput (562.845)
 */

@interface SCROBrailleTranslationManager : NSObject {
    bool  _alwaysUsesNemethCodeForTechnicalText;
    bool  _auxTableSupportsContractedBraille;
    bool  _auxTableSupportsEightDotBraille;
    <SCROBrailleTranslatorProtocol> * _auxTranslator;
    NSBundle * _auxTranslatorBundle;
    NSRecursiveLock * _contentLock;
    <SCROBrailleTranslatorProtocol> * _nemethTranslator;
    NSString * _primaryTranslationTableIdentifier;
    bool  _tableSupportsContractedBraille;
    bool  _tableSupportsEightDotBraille;
    <SCROBrailleTranslatorProtocol> * _translator;
    NSBundle * _translatorBundle;
}

@property (nonatomic) bool alwaysUsesNemethCodeForTechnicalText;
@property (nonatomic, readonly) bool auxiliaryTableSupportsContractedBraille;
@property (nonatomic, readonly) bool auxiliaryTableSupportsEightDotBraille;
@property (nonatomic, readonly) bool primaryTableSupportsContractedBraille;
@property (nonatomic, readonly) bool primaryTableSupportsEightDotBraille;

+ (id)sharedManager;

- (void).cxx_destruct;
- (void)_loadPrimaryTableIfNecessary;
- (id)_loadTableIdentifier:(id)arg1 bundle:(id*)arg2 existingBundle:(id)arg3 existingTranslator:(id)arg4;
- (id)_printBrailleForText:(id)arg1 primaryTable:(bool)arg2 contracted:(bool)arg3 eightDot:(bool)arg4 locations:(id*)arg5 isTechnical:(bool)arg6 textPositionsRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg7;
- (bool)alwaysUsesNemethCodeForTechnicalText;
- (id)auxiliaryTableIdentifier;
- (bool)auxiliaryTableSupportsContractedBraille;
- (bool)auxiliaryTableSupportsEightDotBraille;
- (id)init;
- (void)lockAuxiliaryTable;
- (unsigned long long)numberOfTranslatorsLoaded;
- (bool)primaryAndAuxiliaryTranslatorsAreIdentical;
- (id)primaryTableIdentifier;
- (bool)primaryTableSupportsContractedBraille;
- (bool)primaryTableSupportsEightDotBraille;
- (bool)primaryTableSupportsRoundTripping;
- (id)printBrailleForTechnicalText:(id)arg1 primaryTable:(bool)arg2 locations:(id*)arg3;
- (id)printBrailleForText:(id)arg1 contracted:(bool)arg2 eightDot:(bool)arg3 locations:(id*)arg4;
- (id)printBrailleForText:(id)arg1 primaryTable:(bool)arg2 contracted:(bool)arg3 eightDot:(bool)arg4 locations:(id*)arg5;
- (id)printBrailleForText:(id)arg1 primaryTable:(bool)arg2 contracted:(bool)arg3 eightDot:(bool)arg4 locations:(id*)arg5 textPositionsRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg6;
- (void)setAlwaysUsesNemethCodeForTechnicalText:(bool)arg1;
- (void)setAuxiliaryTranslationTableWithTableIdentifier:(id)arg1;
- (void)setPrimaryTranslationTableWithTableIdentifier:(id)arg1;
- (id)textForPrintBraille:(id)arg1 contracted:(bool)arg2 eightDot:(bool)arg3 locations:(id*)arg4;
- (id)textForPrintBraille:(id)arg1 primaryTable:(bool)arg2 contracted:(bool)arg3 eightDot:(bool)arg4 locations:(id*)arg5;
- (void)unlockAuxiliaryTable;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

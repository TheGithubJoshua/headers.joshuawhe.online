<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PSYSyncCoordinator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PairedSync.framework/PSYSyncCoordinator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PairedSync.framework/PairedSync (1)
 */

@interface PSYSyncCoordinator : NSObject <NSXPCListenerDelegate, PSYActivity, PSYServiceSyncSessionDelegate> {
    PSYServiceSyncSession * _activeSyncSession;
    NSXPCConnection * _connection;
    <PSYSyncCoordinatorDelegate> * _delegate;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _delegateLock;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    bool  _hasStartedListening;
    NSXPCListener * _listener;
    NSMutableDictionary * _nrDevices;
    id /* block */  _pendingCompletion;
    NSObject<OS_dispatch_queue> * _queue;
    NSString * _serviceName;
    unsigned long long  _syncIDOfStartedSync;
    unsigned long long  _syncRestriction;
    int  _syncSwitchIDToken;
}

@property (nonatomic, readonly) PSYServiceSyncSession *activeSyncSession;
@property (nonatomic, retain) NSXPCConnection *connection;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PSYSyncCoordinatorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *serviceName;
@property (readonly) Class superclass;

+ (id)filteredErrorWithError:(id)arg1;
+ (void)initialize;
+ (id)syncCoordinatorWithServiceName:(id)arg1;

- (void).cxx_destruct;
- (void)_cleanup;
- (bool)_pairedSyncFinishedMigrationSyncWithPairingID:(id)arg1;
- (bool)_pairedSyncFinishedReunionSync;
- (void)_registerMonitorAllNRDevicesForMigrationChanges:(id /* block */)arg1;
- (void)_registerMonitorNRDevice:(id)arg1 forMigrationChanges:(id /* block */)arg2;
- (unsigned long long)_syncRestriction;
- (void)_syncRestrictionDidUpdate:(id)arg1 forServiceName:(id)arg2;
- (void)_unregisterNRDeviceMonitors;
- (oneway void)abortSyncWithCompletion:(id /* block */)arg1;
- (id)activeSyncSession;
- (void)beginDryRunSyncWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (oneway void)beginSyncWithOptions:(id)arg1 completion:(id /* block */)arg2;
- (id)connection;
- (void)dealloc;
- (id)delegate;
- (void)deviceChanged:(id)arg1;
- (void)exitForTestInput:(id)arg1;
- (id)initWithServiceName:(id)arg1;
- (id)initWithServiceName:(id)arg1 serviceLookupPath:(id)arg2;
- (void)invalidateActiveSyncSession;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)performDelegateBlock:(id /* block */)arg1;
- (id)progressHandler;
- (unsigned long long)readNotifyToken:(int)arg1;
- (void)registerForDeviceChangeNotifications;
- (int)registerNotifyTokenWithName:(id)arg1 withBlock:(id /* block */)arg2;
- (int)registerNotifyTokenWithName:(id)arg1 withQueue:(id)arg2 withBlock:(id /* block */)arg3;
- (void)reportProgress:(double)arg1;
- (id)serviceName;
- (void)setConnection:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (void)syncDidComplete;
- (void)syncDidCompleteSending;
- (void)syncDidFailWithError:(id)arg1;
- (unsigned long long)syncRestriction;
- (void)syncSession:(id)arg1 didFailWithError:(id)arg2;
- (void)syncSession:(id)arg1 reportProgress:(double)arg2;
- (void)syncSessionDidComplete:(id)arg1;
- (void)syncSessionDidCompleteSending:(id)arg1;
- (id)syncSessionForOptions:(id)arg1 supportsMigrationSync:(bool)arg2;
- (void)unregisterForDeviceChangeNotifications;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>IMMessagePartChatItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/IMCore.framework/IMMessagePartChatItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/IMCore.framework/IMCore (1000)
 */

@interface IMMessagePartChatItem : IMMessageChatItem <IMVisibleAssociatedMessageHost> {
    bool  _chatInScrutinyMode;
    NSAttributedString * _fallbackCorruptText;
    long long  _index;
    bool  _isBusiness;
    NSArray * _messageEditChatItems;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _messagePartRange;
    NSAttributedString * _text;
    NSArray * _visibleAssociatedMessageChatItems;
    bool  _whitelistedRichLinkSender;
}

@property (nonatomic) bool chatInScrutinyMode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSAttributedString *fallbackCorruptText;
@property (readonly) unsigned long long hash;
@property (nonatomic) long long index;
@property (nonatomic) bool isBusiness;
@property (nonatomic, readonly) bool isCorrupt;
@property (nonatomic, readonly) NSArray *messageEditChatItems;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } messagePartRange;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSAttributedString *text;
@property (setter=_setVisibleAssociatedMessageChatItems:, nonatomic, retain) NSArray *visibleAssociatedMessageChatItems;
@property (getter=isWhitelistedRichLinkSender, nonatomic) bool whitelistedRichLinkSender;

+ (id)_additionalSupportedRichLinkSchemesForWhitelistedSender:(id)arg1;
+ (id)_defaultRichLinkWhiteList;
+ (id)_guidForMessage:(id)arg1 url:(id)arg2;
+ (bool)_isWhiteListedURL:(id)arg1;
+ (bool)_isWhitelistedRichLinkSender:(id)arg1 isBusiness:(bool)arg2;
+ (id)_messageItemWithPartsDeleted:(id)arg1 fromMessageItem:(id)arg2;
+ (id)_newMessagePartsForMessageItem:(id)arg1;
+ (id)_newMessagePartsForMessageItem:(id)arg1 shouldDisplayLink:(bool)arg2 isBusiness:(bool)arg3 parentChatIsSpam:(bool)arg4 hasKnownParticipants:(bool)arg5;
+ (id)_richLinkRangesForMessageText:(id)arg1 sender:(id)arg2 isWhitelistedRichLinkSender:(bool)arg3;
+ (bool)_supportsRichLinkURL:(id)arg1 forSender:(id)arg2 isWhitelistedRichLinkSender:(bool)arg3;

- (void).cxx_destruct;
- (id)_initWithItem:(id)arg1 messagePartRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (id)_initWithItem:(id)arg1 text:(id)arg2 index:(long long)arg3 messagePartRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg4 visibleAssociatedMessageChatItems:(id)arg5;
- (void)_setMessageEditChatItems:(id)arg1;
- (void)_setVisibleAssociatedMessageChatItems:(id)arg1;
- (bool)canDelete;
- (bool)canSendMessageAcknowledgment;
- (bool)chatInScrutinyMode;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)fallbackCorruptText;
- (long long)index;
- (bool)isBusiness;
- (bool)isCorrupt;
- (bool)isWhitelistedRichLinkSender;
- (id)messageEditChatItems;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })messagePartRange;
- (void)setChatInScrutinyMode:(bool)arg1;
- (void)setIndex:(long long)arg1;
- (void)setIsBusiness:(bool)arg1;
- (void)setMessagePartRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setWhitelistedRichLinkSender:(bool)arg1;
- (id)text;
- (id)visibleAssociatedMessageChatItems;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

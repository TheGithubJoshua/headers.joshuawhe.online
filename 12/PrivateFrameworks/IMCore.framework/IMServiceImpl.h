<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>IMServiceImpl.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/IMCore.framework/IMServiceImpl.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/IMCore.framework/IMCore (1000)
 */

@interface IMServiceImpl : IMService {
    NSArray * _abProperties;
    bool  _allowsMultipleConnections;
    IMAccount * _bestAccount;
    NSMutableDictionary * _cardMap;
    NSString * _countryCode;
    NSDictionary * _defaultSettings;
    NSArray * _emailDomains;
    bool  _handlesChatInvites;
    bool  _hasLoadedServiceProperties;
    bool  _ignoresNetworkConnectivity;
    NSData * _imageData;
    bool  _isPersistent;
    bool  _isPlugInService;
    NSString * _localizedName;
    NSString * _localizedShortName;
    NSString * _name;
    NSDictionary * _personToIDMap;
    unsigned int  _screenNameSensitivity;
    NSDictionary * _serviceDefaults;
    NSDictionary * _serviceProps;
    bool  _shouldDisableDeactivation;
    bool  _shouldInternationalizeNumbers;
    NSArray * _siblingServiceNames;
    bool  _supportsAdding;
    bool  _supportsAudioMessages;
    bool  _supportsAuthorization;
    bool  _supportsDatabaseStorage;
    bool  _supportsGroupAttachments;
    bool  _supportsIDStatusLookup;
    bool  _supportsMutatingGroupMembers;
    bool  _supportsOfflineTransfers;
    bool  _supportsOneSessionForAllAccounts;
    bool  _supportsPhoneNumberMapping;
    bool  _supportsPresence;
    bool  _supportsRegistration;
    bool  _supportsSMS;
}

@property (nonatomic, readonly) unsigned int IDSensitivity;
@property (nonatomic, readonly) bool _supportsDatabaseStorage;
@property (nonatomic, readonly) bool _wantsInternationizedNumbers;
@property (nonatomic, readonly) Class accountClass;
@property (nonatomic, readonly) NSArray *accountIDs;
@property (nonatomic, readonly) NSArray *addressBookProperties;
@property (nonatomic, readonly) NSString *addressBookProperty;
@property (nonatomic, readonly) bool allowsMultipleConnections;
@property (nonatomic, readonly) long long buddyNotesMaxByteLength;
@property (nonatomic, readonly) NSDictionary *cardMap;
@property (nonatomic, retain) NSString *countryCode;
@property (nonatomic, retain) NSDictionary *defaultAccountSettings;
@property (getter=isDiscontinued, nonatomic, readonly) bool discontinued;
@property (nonatomic, readonly) NSArray *emailDomains;
@property (nonatomic, readonly) bool handlesChatInvites;
@property (nonatomic, readonly) bool ignoresNetworkConnectivity;
@property (nonatomic, readonly) NSString *internalName;
@property (nonatomic, readonly) bool isPersistent;
@property (nonatomic, readonly) bool isPlugInService;
@property (nonatomic, readonly) long long maxAttachmentSize;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, retain) NSDictionary *serviceDefaults;
@property (nonatomic, readonly) NSData *serviceImageData;
@property (nonatomic, retain) NSDictionary *serviceProperties;
@property (nonatomic, readonly) NSString *shortName;
@property (nonatomic, readonly) bool shouldDisableDeactivation;
@property (nonatomic, readonly) NSArray *siblingServices;
@property (nonatomic, readonly) bool supportsAdding;
@property (nonatomic, readonly) bool supportsAudioMessages;
@property (nonatomic, readonly) bool supportsAuthorization;
@property (nonatomic, readonly) bool supportsGroupAttachments;
@property (nonatomic, readonly) bool supportsIDStatusLookup;
@property (nonatomic, readonly) bool supportsMutatingGroupMembers;
@property (nonatomic, readonly) bool supportsOfflineTransfers;
@property (nonatomic, readonly) bool supportsOneSessionForAllAccounts;
@property (nonatomic, readonly) bool supportsPhoneNumberMapping;
@property (nonatomic, readonly) bool supportsPresence;
@property (nonatomic, readonly) bool supportsRegistration;

+ (id)activeServices;
+ (id)allServices;
+ (id)allServicesNonBlocking;
+ (id)connectedServices;
+ (id)connectedServicesWithCapability:(unsigned long long)arg1;
+ (bool)hasAlias:(id)arg1 onAccountForService:(id)arg2;
+ (bool)iMessageEnabled;
+ (bool)iMessageEnabledForSenderLastAddressedHandle:(id)arg1 simID:(id)arg2;
+ (bool)iMessageEnabledForSenderLastAddressedHandle:(id)arg1 simID:(id)arg2 previousService:(id)arg3;
+ (bool)mmsEnabled;
+ (bool)mmsEnabledforPhoneNumber:(id)arg1 simID:(id)arg2;
+ (id)operationalServicesWithCapability:(unsigned long long)arg1;
+ (Class)serviceClass;
+ (id)serviceWithInternalName:(id)arg1;
+ (id)serviceWithName:(id)arg1;
+ (id)servicesWithCapability:(unsigned long long)arg1;
+ (void)setServiceClass:(Class)arg1;
+ (bool)smsEnabled;
+ (id)supportedCountryCodes;
+ (bool)systemSupportsSMSSending;
+ (bool)systemSupportsSendingAttachmentsOfTypes:(id)arg1 error:(long long*)arg2;

- (void).cxx_destruct;
- (unsigned int)IDSensitivity;
- (id)_IDsToMapForIMPerson:(id)arg1;
- (id)_abPropertiesBySanitizingABProperties:(id)arg1;
- (void)_addAddressBookCards:(id)arg1 toMap:(id)arg2;
- (void)_blockUntilInitialSyncPerformed;
- (void)_calculateBestAccount;
- (void)_dumpCardMap;
- (void)_loadPropertiesIfNeeded;
- (id)_newIDToCardMap;
- (id)_personToIDMap;
- (bool)_supportsDatabaseStorage;
- (void)_syncWithRemoteBuddies;
- (bool)_wantsInternationizedNumbers;
- (Class)accountClass;
- (id)accountIDs;
- (void)activeAccountsChanged:(id)arg1;
- (id)addressBookProperties;
- (id)addressBookProperty;
- (bool)allowsMultipleConnections;
- (long long)buddyNotesMaxByteLength;
- (id)canonicalFormOfID:(id)arg1;
- (id)cardMap;
- (void)clearIDToCardMap;
- (long long)compareNames:(id)arg1;
- (id)countryCode;
- (void)dealloc;
- (id)defaultAccountSettings;
- (void)defaultsChanged:(id)arg1;
- (id)description;
- (void)disconnect;
- (void)doneSetup;
- (id)emailDomains;
- (bool)equalID:(id)arg1 andID:(id)arg2;
- (bool)handlesChatInvites;
- (bool)ignoresNetworkConnectivity;
- (id)imABPeopleWithScreenName:(id)arg1;
- (id)imABPeopleWithScreenName:(id)arg1 countryCode:(id)arg2 identifier:(int*)arg3;
- (id)imABPeopleWithScreenName:(id)arg1 identifier:(int*)arg2;
- (id)imABPeopleWithScreenName:(id)arg1 options:(unsigned long long)arg2;
- (id)infoForAllScreenNames;
- (id)infoForPreferredScreenNames;
- (id)infoForScreenName:(id)arg1;
- (id)initWithName:(id)arg1;
- (bool)initialSyncPerformed;
- (id)internalName;
- (bool)isDiscontinued;
- (bool)isEnabled;
- (bool)isPersistent;
- (bool)isPlugInService;
- (id)localizedName;
- (id)localizedShortName;
- (long long)maxAttachmentSize;
- (long long)maxChatParticipantsForHandle:(id)arg1 simID:(id)arg2;
- (id)myScreenNames;
- (id)name;
- (id)normalizedFormOfID:(id)arg1;
- (id)peopleWithScreenName:(id)arg1;
- (id)screenNamesForIMPerson:(id)arg1;
- (id)screenNamesForPerson:(id)arg1;
- (id)serviceDefaults;
- (id)serviceImageData;
- (id)serviceProperties;
- (void)setCountryCode:(id)arg1;
- (void)setDefaultAccountSettings:(id)arg1;
- (void)setServiceDefaults:(id)arg1;
- (void)setServiceProperties:(id)arg1;
- (id)shortName;
- (bool)shouldDisableDeactivation;
- (id)siblingServices;
- (unsigned long long)status;
- (void)statusChangedForAccount:(id)arg1 from:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (id)subtypeInformationForAccount:(id)arg1;
- (bool)supportsAdding;
- (bool)supportsAudioMessages;
- (bool)supportsAuthorization;
- (bool)supportsGroupAttachments;
- (bool)supportsIDStatusLookup;
- (bool)supportsMutatingGroupMembers;
- (bool)supportsOfflineTransfers;
- (bool)supportsOneSessionForAllAccounts;
- (bool)supportsPhoneNumberMapping;
- (bool)supportsPresence;
- (bool)supportsRegistration;
- (void)updateIDToCardMapWithNotification:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

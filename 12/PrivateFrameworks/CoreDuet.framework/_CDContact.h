<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_CDContact.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreDuet.framework/_CDContact.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet (1)
 */

@interface _CDContact : NSObject <NSCopying, NSSecureCoding> {
    NSString * _customIdentifier;
    NSString * _displayName;
    unsigned long long  _displayType;
    NSString * _identifier;
    NSString * _personId;
    unsigned long long  _personIdType;
    _CDContactStatistics * _statistics;
    unsigned long long  _type;
}

@property (retain) NSString *customIdentifier;
@property (retain) NSString *displayName;
@property unsigned long long displayType;
@property (readonly) NSString *handle;
@property (retain) NSString *identifier;
@property (retain) NSString *identifierType;
@property (retain) NSString *personId;
@property unsigned long long personIdType;
@property (retain) _CDContactStatistics *statistics;
@property unsigned long long type;

+ (id)_CDValueForContactProperty:(id)arg1;
+ (id)_contactPropertiesForContacts:(id)arg1 mechanismHints:(id)arg2;
+ (id)contactPropertiesForContacts:(id)arg1;
+ (id)contactPropertiesForContacts:(id)arg1 mechanismHints:(id)arg2;
+ (id)contactWithIdentifier:(id)arg1 identifierType:(id)arg2;
+ (id)contactWithIdentifier:(id)arg1 identifierType:(id)arg2 displayName:(id)arg3 personId:(id)arg4 personIdType:(unsigned long long)arg5;
+ (id)contactWithIdentifier:(id)arg1 identifierType:(id)arg2 personId:(id)arg3 personIdType:(unsigned long long)arg4;
+ (id)contactWithIdentifier:(id)arg1 type:(unsigned long long)arg2 displayName:(id)arg3 personId:(id)arg4 personIdType:(unsigned long long)arg5;
+ (unsigned long long)convertDisplayType:(long long)arg1;
+ (unsigned long long)convertHandleType:(long long)arg1;
+ (id)normalizedStringKey:(id)arg1;
+ (id)predicateForContact:(id)arg1;
+ (id)predicateForContactWithDisplayName:(id)arg1;
+ (id)predicateForContactWithIdentifier:(id)arg1;
+ (id)predicateForContactWithPersonId:(id)arg1 personIdType:(unsigned long long)arg2;
+ (id)predicateForContactWithType:(unsigned long long)arg1;
+ (bool)supportsSecureCoding;
+ (id)typeAsCNContactPropertyKey:(unsigned long long)arg1;
+ (unsigned long long)typeFromString:(id)arg1;

- (void).cxx_destruct;
- (long long)compare:(id)arg1;
- (id)contactProperty;
- (id)contactPropertyWithMechanismHint:(long long)arg1;
- (id)contactPropertyWithOptionalMechanismHint:(long long*)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)customIdentifier;
- (id)description;
- (id)displayName;
- (unsigned long long)displayType;
- (void)encodeWithCoder:(id)arg1;
- (id)handle;
- (unsigned long long)hash;
- (id)identifier;
- (id)identifierType;
- (id)initWithCoder:(id)arg1;
- (id)initWithContactProperty:(id)arg1;
- (id)initWithINPerson:(id)arg1;
- (id)initWithIdentifier:(id)arg1 type:(unsigned long long)arg2 customIdentifier:(id)arg3 displayName:(id)arg4 displayType:(unsigned long long)arg5 personId:(id)arg6 personIdType:(unsigned long long)arg7;
- (id)initWithIdentifier:(id)arg1 type:(unsigned long long)arg2 displayName:(id)arg3 personId:(id)arg4 personIdType:(unsigned long long)arg5;
- (bool)isEqual:(id)arg1;
- (bool)mayContainPrefix:(id)arg1;
- (bool)mayRepresentSamePersonAs:(id)arg1;
- (void)mergeWithContact:(id)arg1;
- (id)personId;
- (unsigned long long)personIdType;
- (void)setCustomIdentifier:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setDisplayType:(unsigned long long)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIdentifierType:(id)arg1;
- (void)setPersonId:(id)arg1;
- (void)setPersonIdType:(unsigned long long)arg1;
- (void)setStatistics:(id)arg1;
- (void)setType:(unsigned long long)arg1;
- (id)statistics;
- (unsigned long long)type;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

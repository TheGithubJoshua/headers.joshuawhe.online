<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_DKCoreDataStorage.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreDuet.framework/_DKCoreDataStorage.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet (1)
 */

@interface _DKCoreDataStorage : NSObject {
    NSString * _containerIdentifier;
    _DKDataProtectionStateMonitor * _dataProtectionMonitor;
    NSString * _databaseName;
    <_DKCoreDataStorageDelegate> * _delegate;
    NSString * _directory;
    NSFileManager * _fm;
    bool  _localOnly;
    NSMapTable * _managedObjectContexts;
    NSManagedObjectModel * _managedObjectModel;
    NSCloudKitMirroringDelegate * _mirroringDelegate;
    NSURL * _modelURL;
    NSMutableDictionary * _paths;
    NSMutableDictionary * _persistentStoreCoordinators;
    bool  _readOnly;
    bool  _requiresManualMigration;
    bool  _sync;
}

@property (readonly) NSString *containerIdentifier;
@property (readonly) NSString *databaseName;
@property <_DKCoreDataStorageDelegate> *delegate;
@property (readonly) NSString *directory;
@property (readonly) bool localOnly;
@property (readonly) NSCloudKitMirroringDelegate *mirroringDelegate;
@property (readonly) NSURL *modelURL;
@property (readonly) bool readOnly;
@property (nonatomic) bool requiresManualMigration;
@property (readonly) bool sync;

+ (unsigned long long)anonymizeObjectStringsInContext:(id)arg1 entityName:(id)arg2 predicate:(id)arg3 sortDescriptors:(id)arg4 batchFetchLimit:(unsigned long long)arg5 totalFetchLimit:(unsigned long long)arg6 includeSubentities:(bool)arg7 salt:(id)arg8;
+ (id)anonymizeString:(id)arg1 withSalt:(id)arg2;
+ (unsigned long long)anonymizeStringAttributesOfManagedObject:(id)arg1 withSalt:(id)arg2;
+ (unsigned long long)countObjectsInContext:(id)arg1 entityName:(id)arg2 predicate:(id)arg3 includeSubentities:(bool)arg4 includePendingChanges:(bool)arg5;
+ (unsigned long long)deleteObjectsIfNeededToLimitTotal:(unsigned long long)arg1 context:(id)arg2 entityName:(id)arg3 predicate:(id)arg4 sortDescriptors:(id)arg5 fetchLimit:(unsigned long long)arg6 includeSubentities:(bool)arg7 includePendingChanges:(bool)arg8;
+ (unsigned long long)deleteObjectsInContext:(id)arg1 entityName:(id)arg2 predicate:(id)arg3 sortDescriptors:(id)arg4 fetchLimit:(unsigned long long)arg5 includeSubentities:(bool)arg6 includePendingChanges:(bool)arg7;
+ (unsigned long long)deleteObjectsInContext:(id)arg1 entityName:(id)arg2 predicate:(id)arg3 sortDescriptors:(id)arg4 fetchOffset:(unsigned long long)arg5 fetchLimit:(unsigned long long)arg6 includeSubentities:(bool)arg7 includePendingChanges:(bool)arg8;
+ (unsigned long long)deleteOrphanedEntitiesInContext:(id)arg1;
+ (bool)forceCopyItemAtPath:(id)arg1 toPath:(id)arg2 error:(id*)arg3;
+ (unsigned long long)updateObjectsInContext:(id)arg1 entityName:(id)arg2 predicate:(id)arg3 sortDescriptors:(id)arg4 batchFetchLimit:(unsigned long long)arg5 totalFetchLimit:(unsigned long long)arg6 includeSubentities:(bool)arg7 updateBlock:(id /* block */)arg8;

- (void).cxx_destruct;
- (bool)_addStoresToCoordinator:(id)arg1 protectionClass:(id)arg2 error:(id*)arg3;
- (id)_defaultOptionsForStoreWithProtectionClass:(id)arg1;
- (bool)_deleteDatabaseFiles:(id)arg1;
- (id)_descriptionForStoreWithURL:(id)arg1 protectionClass:(id)arg2 sync:(bool)arg3;
- (id)autoMigratePersistentStoreAtURL:(id)arg1 toManagedObjectModel:(id)arg2 protectionClass:(id)arg3 error:(id*)arg4;
- (void)closeStorageForProtectionClass:(id)arg1;
- (bool)confirmDatabaseConnectionFor:(id)arg1;
- (id)containerIdentifier;
- (id)copyStorageFor:(id)arg1 toDirectory:(id)arg2;
- (id)databaseName;
- (id)databasePathFor:(id)arg1;
- (id)delegate;
- (bool)deleteStorageFor:(id)arg1;
- (bool)didAutoMigratePersistentStore:(id)arg1 toManagedObjectModel:(id)arg2 havingVersion:(unsigned long long)arg3 error:(id*)arg4;
- (id)directory;
- (void)handleDataProtectionChangeFor:(id)arg1 willBeAvailable:(bool)arg2;
- (void)handleDatabaseErrors:(id)arg1 forProtectionClass:(id)arg2;
- (id)init;
- (id)initWithDirectory:(id)arg1 databaseName:(id)arg2 modelURL:(id)arg3 readOnly:(bool)arg4 localOnly:(bool)arg5;
- (id)initWithDirectory:(id)arg1 databaseName:(id)arg2 modelURL:(id)arg3 readOnly:(bool)arg4 localOnly:(bool)arg5 sync:(bool)arg6;
- (id)initWithDirectory:(id)arg1 databaseName:(id)arg2 modelURL:(id)arg3 sync:(bool)arg4;
- (void)invalidateManagedObjectContextAndPersistentStoreCoordinatorFor:(id)arg1;
- (bool)isDatabaseOwner;
- (bool)isManagedObjectContextFor:(id)arg1 equalToManagedObjectContext:(id)arg2;
- (bool)isManagedObjectModel:(id)arg1 compatibleWithPersistentStoreAtURL:(id)arg2 error:(id*)arg3;
- (bool)localOnly;
- (id)managedObjectContextFor:(id)arg1;
- (id)managedObjectContextForKey:(id)arg1;
- (id)managedObjectModel;
- (id)managedObjectModelForVersion:(unsigned long long)arg1;
- (id)managedObjectModelURLForVersion:(unsigned long long)arg1;
- (unsigned long long)managedObjectModelVersionCompatibleWithPersistentStoreAtURL:(id)arg1 error:(id*)arg2;
- (bool)migratePersistentStoreAtURL:(id)arg1 toManagedObjectModel:(id)arg2 protectionClass:(id)arg3 error:(id*)arg4;
- (bool)migratePersistentStoreAtURL:(id)arg1 toManagedObjectModel:(id)arg2 protectionClass:(id)arg3 startVersion:(unsigned long long)arg4 endVersion:(unsigned long long)arg5 error:(id*)arg6;
- (id)mirroringDelegate;
- (id)modelURL;
- (long long)modelVersionForStoreAtURL:(id)arg1 error:(id*)arg2;
- (id)persistentStoreCoordinatorFor:(id)arg1;
- (bool)readOnly;
- (void)removeManagedObjectContextForKey:(id)arg1;
- (void)removePersistentStoreCoordinatorFor:(id)arg1;
- (void)removePersistentStoresInCoordinator:(id)arg1;
- (bool)requiresManualMigration;
- (void)setDelegate:(id)arg1;
- (void)setManagedObjectContext:(id)arg1 forKey:(id)arg2;
- (void)setManagedObjectModel:(id)arg1;
- (void)setRequiresManualMigration:(bool)arg1;
- (bool)sync;
- (bool)willAutoMigrateStoreAtURL:(id)arg1 fromManagedObjectModel:(id)arg2 havingVersion:(unsigned long long)arg3 error:(id*)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

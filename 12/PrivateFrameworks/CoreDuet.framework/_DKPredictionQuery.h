<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_DKPredictionQuery.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreDuet.framework/_DKPredictionQuery.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet (1)
 */

@interface _DKPredictionQuery : _DKEventQuery {
    NSDate * _asOfDate;
    bool  _isTopNPrediction;
    double  _minLikelihood;
    int  _minimumDaysOfHistory;
    unsigned long long  _partitionType;
    id /* block */  _predictionHandler;
    int  _slotDuration;
    _DKKnowledgeStorage * _storage;
    long long  _topN;
    int  _totalSlotsInDay;
    unsigned long long  _type;
    bool  _useHistoricalHistogram;
}

@property (nonatomic, retain) NSDate *asOfDate;
@property (nonatomic) bool isTopNPrediction;
@property (nonatomic) double minLikelihood;
@property (nonatomic) int minimumDaysOfHistory;
@property (nonatomic) unsigned long long partitionType;
@property (copy) id /* block */ predictionHandler;
@property (nonatomic) int slotDuration;
@property (nonatomic, retain) _DKKnowledgeStorage *storage;
@property (nonatomic) long long topN;
@property (nonatomic) int totalSlotsInDay;
@property (nonatomic) unsigned long long type;
@property (nonatomic) bool useHistoricalHistogram;

+ (id)predictionQueryForStream:(id)arg1 withPredicate:(id)arg2 withPredictionType:(unsigned long long)arg3;
+ (id)predictionQueryForStreams:(id)arg1 withPredicate:(id)arg2 withPredictionType:(unsigned long long)arg3;
+ (bool)supportsSecureCoding;
+ (id)topNPredictionQueryForStream:(id)arg1 withPredicate:(id)arg2 withTopN:(long long)arg3 withMinLikelihood:(double)arg4;

- (void).cxx_destruct;
- (void)addEventsToObservations:(id)arg1 startingHistogram:(id)arg2 endingHistogram:(id)arg3 withPredictionDate:(id)arg4;
- (id)asOfDate;
- (bool)both:(id)arg1 and:(id)arg2 areSameDayOfWeekWith:(id)arg3;
- (bool)both:(id)arg1 and:(id)arg2 areWeekendOrWeekdayWithCalendar:(id)arg3;
- (int)computeSlotForDate:(id)arg1 relativeToDate:(id)arg2;
- (int)computeSlotFromMidnightForDate:(id)arg1;
- (id)constructTimelineWithObservations:(id)arg1 withFirstEventDate:(id)arg2 withHistogramInterval:(id)arg3 withPredictionStartDate:(id)arg4 durationSinceFirstEvent:(double)arg5;
- (void)encodeWithCoder:(id)arg1;
- (id)executeUsingCoreDataStorage:(id)arg1 error:(id*)arg2;
- (void)handleEventPredictionWithEventStartDate:(id)arg1 eventEndDate:(id)arg2 predictionStartDate:(id)arg3 durationSinceFirstEvent:(double)arg4 calendar:(id)arg5 observations:(id)arg6 useWeights:(bool)arg7;
- (void)handleImpulsePredictionWithEventStartDate:(id)arg1 predictionStartDate:(id)arg2 durationSinceFirstEvent:(double)arg3 calendar:(id)arg4 observations:(id)arg5 lastDate:(id*)arg6 lastSlot:(int*)arg7;
- (id)handleResults:(id)arg1 error:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (bool)isTopNPrediction;
- (id)likelihoodForTopN:(long long)arg1 withMinLikelihood:(double)arg2 withData:(id)arg3;
- (double)minLikelihood;
- (int)minimumDaysOfHistory;
- (unsigned long long)partitionType;
- (id /* block */)predictionHandler;
- (id)predictionOfType:(unsigned long long)arg1 withData:(id)arg2;
- (void)setAsOfDate:(id)arg1;
- (void)setIsTopNPrediction:(bool)arg1;
- (void)setMinLikelihood:(double)arg1;
- (void)setMinimumDaysOfHistory:(int)arg1;
- (void)setPartitionType:(unsigned long long)arg1;
- (void)setPredictionHandler:(id /* block */)arg1;
- (void)setSlotDuration:(int)arg1;
- (void)setStorage:(id)arg1;
- (void)setTopN:(long long)arg1;
- (void)setTotalSlotsInDay:(int)arg1;
- (void)setType:(unsigned long long)arg1;
- (void)setUseHistoricalHistogram:(bool)arg1;
- (void)setValueForIndex:(int)arg1 forObservations:(id)arg2 withDenominator:(double)arg3;
- (bool)shouldIncludeEventWithStartDate:(id)arg1 eventSlot:(int)arg2 withPredictionStartDate:(id)arg3 withPartitionType:(unsigned long long)arg4 andCalendar:(id)arg5;
- (int)slotDuration;
- (id)storage;
- (long long)topN;
- (int)totalSlotsInDay;
- (unsigned long long)type;
- (bool)useHistoricalHistogram;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

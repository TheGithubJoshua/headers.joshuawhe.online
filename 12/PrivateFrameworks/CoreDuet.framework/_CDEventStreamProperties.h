<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_CDEventStreamProperties.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreDuet.framework/_CDEventStreamProperties.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet (1)
 */

@interface _CDEventStreamProperties : NSObject {
    NSString * _keyPathString;
    bool  canBeShared;
    bool  canBeSpeculative;
    bool  canPersistOnStorage;
    bool  canSendToServer;
    NSString * dataProtectionClass;
    long long  deResolitionPolicy;
    NSString * descriptionString;
    long long  eventsPerPeriod;
    bool  futureEvent;
    bool  hasStats;
    bool  isHistorical;
    bool  isInstant;
    NSString * knowledgeBaseMetadataClass;
    NSString * knowledgeBaseName;
    double  maxLatency;
    NSString * name;
    double  period;
    long long  pollingPeriod;
    bool  setupOnDemand;
    long long  sharingPolicy;
    bool  shouldSaveCurrentEventOnShutdown;
    long long  statisticsType;
    double  temporalPrecision;
    double  timeToLive;
    long long  totalSizeLimit;
    long long  valueType;
}

@property (nonatomic, readonly) bool canBeShared;
@property (nonatomic, readonly) bool canBeSpeculative;
@property (nonatomic, readonly) bool canPersistOnStorage;
@property (nonatomic, readonly) bool canSendToServer;
@property (nonatomic, readonly) NSString *dataProtectionClass;
@property (nonatomic, readonly) long long deResolitionPolicy;
@property (nonatomic, readonly) NSString *descriptionString;
@property (nonatomic, readonly) long long eventsPerPeriod;
@property (nonatomic, readonly) bool futureEvent;
@property (nonatomic, readonly) bool hasStats;
@property (nonatomic, readonly) bool isHistorical;
@property (nonatomic, readonly) bool isInstant;
@property (nonatomic, readonly) NSString *keyPathString;
@property (nonatomic, readonly) NSString *knowledgeBaseMetadataClass;
@property (nonatomic, readonly) NSString *knowledgeBaseName;
@property (nonatomic, readonly) double maxLatency;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic, readonly) double period;
@property (nonatomic, readonly) long long pollingPeriod;
@property (nonatomic, readonly) bool setupOnDemand;
@property (nonatomic, readonly) long long sharingPolicy;
@property (nonatomic, readonly) bool shouldSaveCurrentEventOnShutdown;
@property (nonatomic, readonly) long long statisticsType;
@property (nonatomic, readonly) double temporalPrecision;
@property (nonatomic, readonly) double timeToLive;
@property (nonatomic, readonly) long long totalSizeLimit;
@property (nonatomic, readonly) long long valueType;

+ (id)eventStreamPropertiesFromDictionary:(id)arg1;

- (void).cxx_destruct;
- (bool)canBeShared;
- (bool)canBeSpeculative;
- (bool)canPersistOnStorage;
- (bool)canSendToServer;
- (id)dataProtectionClass;
- (long long)deResolitionPolicy;
- (id)description;
- (id)descriptionString;
- (long long)eventsPerPeriod;
- (bool)futureEvent;
- (bool)hasStats;
- (id)initFromDictionary:(id)arg1;
- (bool)isHistorical;
- (bool)isInstant;
- (id)keyPathString;
- (id)knowledgeBaseMetadataClass;
- (id)knowledgeBaseName;
- (double)maxLatency;
- (id)name;
- (double)period;
- (long long)pollingPeriod;
- (bool)setupOnDemand;
- (long long)sharingPolicy;
- (bool)shouldSaveCurrentEventOnShutdown;
- (long long)statisticsType;
- (double)temporalPrecision;
- (double)timeToLive;
- (long long)totalSizeLimit;
- (long long)valueType;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

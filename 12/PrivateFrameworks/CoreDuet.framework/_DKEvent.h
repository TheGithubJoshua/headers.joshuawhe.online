<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_DKEvent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreDuet.framework/_DKEvent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet (1)
 */

@interface _DKEvent : _DKObject <DKPeriodType, _DKHasComparableValue, _DKHasPrimaryValue, _DKProtobufConverting> {
    double  _confidence;
    NSDate * _endDate;
    NSDictionary * _metadata;
    bool  _shouldSync;
    NSDate * _startDate;
    _DKEventStream * _stream;
    NSTimeZone * _timeZone;
    _DKObject * _value;
}

@property double confidence;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) double duration;
@property (readonly) NSDate *endDate;
@property (retain) NSDate *endDate;
@property (readonly) unsigned long long hash;
@property (copy) NSDictionary *metadata;
@property bool shouldSync;
@property (readonly) NSDate *startDate;
@property (retain) NSDate *startDate;
@property (retain) _DKEventStream *stream;
@property (readonly) Class superclass;
@property (retain) NSTimeZone *timeZone;
@property (retain) _DKObject *value;

// Image: /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet

+ (id)allowedWebpageURLSchemes;
+ (bool)copyMetadata:(id)arg1 toManagedObject:(id)arg2;
+ (id)entityName;
+ (id)eventRepresentingUserActivityWithSearchableItem:(id)arg1 bundleIdentifier:(id)arg2;
+ (id)eventStreamFromManagedObject:(id)arg1 forValue:(id)arg2 cache:(id)arg3;
+ (id)eventValueFromManagedObject:(id)arg1 streamName:(id)arg2 readMetadata:(bool)arg3 cache:(id)arg4;
+ (id)eventWithInteraction:(id)arg1 bundleIdentifier:(id)arg2 storeKeyImage:(bool)arg3;
+ (id)eventWithRelevantShortcut:(id)arg1 bundleID:(id)arg2;
+ (id)eventWithSearchableItem:(id)arg1 bundleIdentifier:(id)arg2;
+ (id)eventWithStream:(id)arg1 source:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 categoryIntegerValue:(long long)arg5 confidence:(double)arg6 metadata:(id)arg7;
+ (id)eventWithStream:(id)arg1 source:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 categoryIntegerValue:(long long)arg5 metadata:(id)arg6;
+ (id)eventWithStream:(id)arg1 source:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 identifierStringValue:(id)arg5 confidence:(double)arg6 metadata:(id)arg7;
+ (id)eventWithStream:(id)arg1 source:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 identifierStringValue:(id)arg5 metadata:(id)arg6;
+ (id)eventWithStream:(id)arg1 source:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 quantityDoubleValue:(double)arg5 confidence:(double)arg6 metadata:(id)arg7;
+ (id)eventWithStream:(id)arg1 source:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 quantityDoubleValue:(double)arg5 metadata:(id)arg6;
+ (id)eventWithStream:(id)arg1 source:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 value:(id)arg5 confidence:(double)arg6 metadata:(id)arg7;
+ (id)eventWithStream:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 categoryIntegerValue:(long long)arg4 metadata:(id)arg5;
+ (id)eventWithStream:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 identifierStringValue:(id)arg4 metadata:(id)arg5;
+ (id)eventWithStream:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 quantityDoubleValue:(double)arg4 metadata:(id)arg5;
+ (id)eventWithStream:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 value:(id)arg4;
+ (id)eventWithStream:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 value:(id)arg4 confidence:(double)arg5 metadata:(id)arg6;
+ (id)eventWithStream:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 value:(id)arg4 metadata:(id)arg5;
+ (id)fetchCustomMetadataWithName:(id)arg1 valueHash:(id)arg2 context:(id)arg3;
+ (id)fromPBCodable:(id)arg1;
+ (bool)isValidURL:(id)arg1;
+ (id)keyPathForMOKeyPath:(id)arg1;
+ (id)metadataForInteraction:(id)arg1 storeKeyImage:(bool)arg2;
+ (id)moKeyPathForKeyPath:(id)arg1;
+ (id)objectFromManagedObject:(id)arg1 readMetadata:(bool)arg2 cache:(id)arg3;
+ (bool)supportsSecureCoding;
+ (id)uncachedEventValueFromManagedObject:(id)arg1 readMetadata:(bool)arg2 cache:(id)arg3;

- (void).cxx_destruct;
- (bool)boolValue;
- (long long)compareValue:(id)arg1;
- (double)confidence;
- (bool)copyToManagedObject:(id)arg1;
- (id)description;
- (double)doubleValue;
- (void)encodeWithCoder:(id)arg1;
- (id)endDate;
- (unsigned long long)eventValueClassOf:(id)arg1;
- (void)fetchInteractionWithPopulatedKeyImage:(id /* block */)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithStream:(id)arg1 source:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 value:(id)arg5 confidence:(double)arg6 metadata:(id)arg7;
- (long long)integerValue;
- (id)interaction;
- (bool)isEqual:(id)arg1;
- (id)metadata;
- (id)metadataFromCustomMetadata:(id)arg1;
- (id)metadataFromCustomMetadata:(id)arg1 cache:(id)arg2;
- (id)metadataFromStructuredMetadata:(id)arg1;
- (id)metadataFromStructuredMetadata:(id)arg1 cache:(id)arg2;
- (id)primaryValue;
- (id)relevantAction;
- (id)relevantShortcut;
- (void)setConfidence:(double)arg1;
- (void)setEndDate:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setShouldSync:(bool)arg1;
- (void)setStartDate:(id)arg1;
- (void)setStream:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setValue:(id)arg1;
- (bool)shouldSync;
- (id)startDate;
- (id)stream;
- (id)stringValue;
- (id)timeZone;
- (id)toPBCodable;
- (id)value;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon

- (id)shortDescription;

// Image: /System/Library/PrivateFrameworks/KnowledgeMonitor.framework/KnowledgeMonitor

- (double)duration;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

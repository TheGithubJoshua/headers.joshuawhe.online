<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VSSpeechConnection.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceServices.framework/VSSpeechConnection.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices (1.0)
 */

@interface VSSpeechConnection : NSObject {
    <VSSpeechConnectionDelegate> * _delegate;
    VSSpeechConnectionDelegateWrapper * _delegateWrapper;
    NSString * _identifier;
    NSObject<OS_dispatch_queue> * _threadSafeQueue;
    NSXPCConnection * _xpcConnection;
}

@property (nonatomic) <VSSpeechConnectionDelegate> *delegate;
@property (nonatomic, retain) VSSpeechConnectionDelegateWrapper *delegateWrapper;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic, readonly) VSPresynthesizedAudioRequest *presynthesizedAudioRequest;
@property (nonatomic, readonly) VSSpeechRequest *request;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *threadSafeQueue;
@property (nonatomic, retain) NSXPCConnection *xpcConnection;

- (void).cxx_destruct;
- (void)_connectionInvalidated;
- (id)_remoteObject;
- (id)_remoteObjectWithErrorHandler:(id /* block */)arg1;
- (id)availableFootprintsForVoice:(id)arg1 languageCode:(id)arg2;
- (id)availableVoicesForLanguageCode:(id)arg1;
- (void)beginAudioPowerUpdateWithReply:(id /* block */)arg1;
- (void)cachePresynthesizedAudioRequest:(id)arg1;
- (oneway void)cleanUnusedAssets:(id /* block */)arg1;
- (id)concurrentSynthesisRequests;
- (void)continueCurrentSpeechRequest;
- (void)dealloc;
- (id)delegate;
- (id)delegateWrapper;
- (void)endAudioPowerUpdate;
- (void)getAutoDownloadedVoiceAssets:(id /* block */)arg1;
- (void)getLocalVoiceAssets:(id /* block */)arg1;
- (void)getLocalVoiceResources:(id /* block */)arg1;
- (void)getLogToFile:(id /* block */)arg1;
- (void)getTTSServerVoicesWithFilter:(id)arg1 reply:(id /* block */)arg2;
- (void)getVoiceInfoForLanguageCode:(id)arg1 footprint:(long long)arg2 gender:(long long)arg3 type:(long long)arg4 reply:(id /* block */)arg5;
- (void)getVoiceResourceForLanguage:(id)arg1 reply:(id /* block */)arg2;
- (id)identifier;
- (id)init;
- (bool)isSystemSpeaking;
- (bool)isSystemSpeakingOnBehalfOfCurrentConnection;
- (void)pauseCurrentSpeechRequestAtMark:(long long)arg1;
- (id)presynthesizedAudioRequest;
- (void)prewarmIfNeededWithRequest:(id)arg1;
- (bool)queryPhaticCapabilityWithRequest:(id)arg1;
- (id)request;
- (void)setAutoDownloadedVoiceAssets:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateWrapper:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setLogToFile:(bool)arg1;
- (void)setPresynthesizedAudioRequest:(id)arg1;
- (void)setRequest:(id)arg1;
- (void)setThreadSafeQueue:(id)arg1;
- (void)setXpcConnection:(id)arg1;
- (void)startPresynthesizedAudioRequest:(id)arg1;
- (void)startSpeechRequest:(id)arg1;
- (void)startSynthesisRequest:(id)arg1;
- (void)stopCurrentSpeechRequestAtMark:(long long)arg1;
- (void)stopPresynthesizedAudioRequest;
- (id)threadSafeQueue;
- (void)updateWithConnectionIdentifier:(id)arg1;
- (id)xpcConnection;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

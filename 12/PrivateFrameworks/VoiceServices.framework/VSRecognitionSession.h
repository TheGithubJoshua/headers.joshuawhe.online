<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VSRecognitionSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceServices.framework/VSRecognitionSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices (1.0)
 */

@interface VSRecognitionSession : NSObject {
    NSString * _audioInputPath;
    VSRecognitionAction * _currentAction;
    NSString * _debugDumpPath;
    <VSRecognitionSessionDelegate> * _delegate;
    id  _handlingThread;
    VSKeepAlive * _keepAlive;
    unsigned long long  _keywordPhase;
    NSString * _languageID;
    double  _levelInterval;
    NSString * _modelIdentifier;
    struct { 
        unsigned int delegateWillBegin : 1; 
        unsigned int delegateBegin : 1; 
        unsigned int delegateOpenURL : 1; 
        unsigned int delegateFinishedSpeaking : 1; 
        unsigned int delegateComplete : 1; 
        unsigned int debugDumpEnabled : 1; 
        unsigned int preferredEngine : 2; 
        unsigned int performHandlerActions : 1; 
        unsigned int allowSensitiveActions : 1; 
        unsigned int bluetoothAllowed : 1; 
        unsigned int resetNextAction : 1; 
        unsigned int isSpeaking : 1; 
        unsigned int actionBegan : 1; 
        unsigned int actionBeginning : 1; 
        unsigned int actionBeginDeferred : 1; 
        unsigned int invalid : 1; 
        unsigned int observeKeywordChange : 1; 
    }  _sessionFlags;
    VSSpeechSynthesizer * _synthesizer;
    NSArray * _topLevelKeywords;
}

- (void)_actionCompleted:(id)arg1 nextAction:(id)arg2 error:(id)arg3;
- (bool)_actionStarted:(id)arg1;
- (id)_beginSpeakingAttributedString:(id)arg1;
- (id)_beginSpeakingString:(id)arg1 attributedString:(id)arg2;
- (struct __CFDictionary { }*)_createKeywordIndex;
- (id)_createPhaseSortedKeywordsFromArray:(id)arg1;
- (id)_currentRecognizeAction;
- (void)_init;
- (void)_keywordIndexChanged;
- (id)_keywordsForModelIdentifier:(id)arg1;
- (void)_notifyDelegateActionStarted;
- (void)_notifyDelegateFinishedSpeakingWithError:(id)arg1;
- (id)_notifyDelegateOpenURL:(id)arg1;
- (id)_recognitionResultHandlingThread;
- (void)_setAction:(id)arg1;
- (id)_topLevelKeywords;
- (id)beginNextAction;
- (id)beginSpeakingFeedbackString;
- (id)beginSpeakingString:(id)arg1;
- (id)cancel;
- (id)cancelMaintainingKeepAlive:(bool)arg1;
- (void)dealloc;
- (id)debugDumpPath;
- (id)displayResultString;
- (id)displayStatusString;
- (bool)hasDeferredAction;
- (id)init;
- (id)initWithModelIdentifier:(id)arg1;
- (float)inputLevel;
- (float)inputLevelDB;
- (bool)isActivelyRecognizing;
- (bool)isBusy;
- (bool)isFinished;
- (bool)isRecognizing;
- (bool)isValid;
- (id)keywordAtIndex:(long long)arg1;
- (long long)keywordCount;
- (bool)nextActionWillRecognize;
- (bool)nextActionWillTerminateSession;
- (void)recognitionResultHandlingThread:(id)arg1 didHandleResults:(id)arg2 nextAction:(id)arg3;
- (id)reset;
- (bool)sensitiveActionsEnabled;
- (bool)setBluetoothInputAllowed:(bool)arg1;
- (bool)setDebugDumpEnabled:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInputLevelUpdateInterval:(double)arg1;
- (void)setKeywordPhase:(unsigned long long)arg1;
- (bool)setNextRecognitionAudioInputPath:(id)arg1;
- (bool)setNextRecognitionRequiresReset:(bool)arg1;
- (void)setPerformRecognitionHandlerActions:(bool)arg1;
- (bool)setPreferredEngine:(int)arg1;
- (void)setSensitiveActionsEnabled:(bool)arg1;
- (void)speechSynthesizer:(id)arg1 didFinishSpeaking:(bool)arg2 withError:(id)arg3;
- (id)spokenFeedbackAttributedString;
- (id)spokenFeedbackString;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VSSpeechRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceServices.framework/VSSpeechRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices (1.0)
 */

@interface VSSpeechRequest : NSObject <NSSecureCoding> {
    NSAttributedString * _attributedText;
    unsigned int  _audioQueueFlags;
    unsigned int  _audioSessionID;
    bool  _audioSessionIDIsValid;
    bool  _canUseServerTTS;
    NSString * _clientBundleIdentifier;
    NSDictionary * _contextInfo;
    bool  _disableCompactVoiceFallback;
    long long  _footprint;
    bool  _forceServerTTS;
    long long  _gender;
    NSString * _languageCode;
    bool  _maintainsInput;
    NSURL * _outputPath;
    id /* block */  _pauseHandler;
    double  _pitch;
    long long  _pointer;
    double  _rate;
    unsigned long long  _requestCreatedTimestamp;
    NSURL * _resourceListURL;
    NSURL * _resourceSearchPathURL;
    bool  _shouldCache;
    id /* block */  _stopHandler;
    NSString * _text;
    bool  _useCustomVoice;
    NSString * _voiceName;
    long long  _voiceType;
    double  _volume;
}

@property (nonatomic, copy) NSAttributedString *attributedText;
@property (nonatomic) unsigned int audioQueueFlags;
@property (nonatomic) unsigned int audioSessionID;
@property (nonatomic) bool audioSessionIDIsValid;
@property (nonatomic) bool canUseServerTTS;
@property (nonatomic, copy) NSString *clientBundleIdentifier;
@property (nonatomic, copy) NSDictionary *contextInfo;
@property (nonatomic) bool disableCompactVoiceFallback;
@property (nonatomic) long long footprint;
@property (nonatomic) bool forceServerTTS;
@property (nonatomic) long long gender;
@property (nonatomic, copy) NSString *languageCode;
@property (nonatomic) bool maintainsInput;
@property (nonatomic, copy) NSURL *outputPath;
@property (nonatomic, copy) id /* block */ pauseHandler;
@property (nonatomic) double pitch;
@property (nonatomic) long long pointer;
@property (nonatomic) double rate;
@property (nonatomic) unsigned long long requestCreatedTimestamp;
@property (nonatomic, copy) NSURL *resourceListURL;
@property (nonatomic, copy) NSURL *resourceSearchPathURL;
@property (nonatomic) bool shouldCache;
@property (nonatomic, copy) id /* block */ stopHandler;
@property (nonatomic, copy) NSString *text;
@property (nonatomic) bool useCustomVoice;
@property (nonatomic, copy) NSString *voiceName;
@property (nonatomic) long long voiceType;
@property (nonatomic) double volume;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)attributedText;
- (unsigned int)audioQueueFlags;
- (unsigned int)audioSessionID;
- (bool)audioSessionIDIsValid;
- (bool)canUseServerTTS;
- (id)clientBundleIdentifier;
- (id)contextInfo;
- (id)contextInfoString;
- (id)description;
- (bool)disableCompactVoiceFallback;
- (void)encodeWithCoder:(id)arg1;
- (long long)footprint;
- (bool)forceServerTTS;
- (long long)gender;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isSimilarTo:(id)arg1;
- (id)languageCode;
- (bool)maintainsInput;
- (id)outputPath;
- (id /* block */)pauseHandler;
- (double)pitch;
- (long long)pointer;
- (double)rate;
- (unsigned long long)requestCreatedTimestamp;
- (id)resourceListURL;
- (id)resourceSearchPathURL;
- (void)setAttributedText:(id)arg1;
- (void)setAudioQueueFlags:(unsigned int)arg1;
- (void)setAudioSessionID:(unsigned int)arg1;
- (void)setAudioSessionIDIsValid:(bool)arg1;
- (void)setCanUseServerTTS:(bool)arg1;
- (void)setClientBundleIdentifier:(id)arg1;
- (void)setContextInfo:(id)arg1;
- (void)setDisableCompactVoiceFallback:(bool)arg1;
- (void)setFootprint:(long long)arg1;
- (void)setForceServerTTS:(bool)arg1;
- (void)setGender:(long long)arg1;
- (void)setLanguageCode:(id)arg1;
- (void)setMaintainsInput:(bool)arg1;
- (void)setOutputPath:(id)arg1;
- (void)setPauseHandler:(id /* block */)arg1;
- (void)setPitch:(double)arg1;
- (void)setPointer:(long long)arg1;
- (void)setRate:(double)arg1;
- (void)setRequestCreatedTimestamp:(unsigned long long)arg1;
- (void)setResourceListURL:(id)arg1;
- (void)setResourceSearchPathURL:(id)arg1;
- (void)setShouldCache:(bool)arg1;
- (void)setStopHandler:(id /* block */)arg1;
- (void)setText:(id)arg1;
- (void)setUseCustomVoice:(bool)arg1;
- (void)setVoiceName:(id)arg1;
- (void)setVoiceType:(long long)arg1;
- (void)setVolume:(double)arg1;
- (bool)shouldCache;
- (id /* block */)stopHandler;
- (id)text;
- (bool)useCustomVoice;
- (id)voiceName;
- (long long)voiceType;
- (double)volume;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PanoramaClip.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/PanoramaClip.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface PanoramaClip : KenBurnsClip <CompoundClipInformation> {
    double  _burstAcrossSubClipDuration;
    NSArray * _containedClips;
    NSArray * _detectedFaceRects;
    unsigned long long  _panoramaDirection;
    unsigned long long  _panoramaStyle;
    double  _panoramaTransitionDuration;
    KenBurnsClip * _templateClip;
}

@property (nonatomic) double burstAcrossSubClipDuration;
@property (nonatomic, retain) NSArray *containedClips;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSArray *detectedFaceRects;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool panSupportsDoublePan;
@property (nonatomic, readonly) bool panSupportsTriplePan;
@property (nonatomic) unsigned long long panoramaDirection;
@property (nonatomic) unsigned long long panoramaStyle;
@property (nonatomic) double panoramaTransitionDuration;
@property (nonatomic, readonly) double projectAspectRatio;
@property (nonatomic, readonly) int projectFrameRate;
@property (readonly) Class superclass;
@property (nonatomic, retain) KenBurnsClip *templateClip;

+ (id)sharedRandomNumberGenerator;

- (void).cxx_destruct;
- (void)adjustDurationsOfClips:(id)arg1 withInTransition:(id)arg2 outTransition:(id)arg3;
- (id)appendLetterboxZoomOutToClips:(id)arg1 zoomOutFromLastClip:(bool)arg2;
- (id)buildClipsForBurstAcrossPanorama;
- (id)buildClipsForDoublePanorama;
- (id)buildClipsForSinglePanorama;
- (id)buildClipsForTriplePanorama;
- (double)burstAcrossSubClipDuration;
- (void)computeBurstAcrossClipCount:(int*)arg1 minLeftEdge:(double*)arg2 maxLeftEdge:(double*)arg3;
- (id)containedClips;
- (id)containedClipsWithInTransition:(id)arg1 outTransition:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)descriptionOfPanoramaDirection;
- (id)descriptionOfPanoramaStyle;
- (id)detectedFaceRects;
- (void)equalizeDurationsOfClips:(id)arg1 totalDuration:(int)arg2;
- (bool)expandsEditList;
- (id)initWithKenBurnsClip:(id)arg1;
- (bool)isBurstAcrossStyleSuitable;
- (bool)isPano;
- (void)logDetectedFaceRects;
- (void)lowLevelCustomizePanoramaKB:(id)arg1 panRight:(bool)arg2 leftLimit:(double)arg3 rightLimit:(double)arg4 allowLeftCrop:(bool)arg5 allowRightCrop:(bool)arg6 leftZoom:(double)arg7 rightZoom:(double)arg8;
- (void)offsetKenBurnsFramesForFaces:(id)arg1 panRight:(bool)arg2;
- (bool)panSupportsDoublePan;
- (bool)panSupportsTriplePan;
- (unsigned long long)panoramaDirection;
- (unsigned long long)panoramaStyle;
- (double)panoramaTransitionDuration;
- (struct CGSize { double x1; double x2; })panoramaViewportSizeForImageSize:(struct CGSize { double x1; double x2; })arg1;
- (id)plistRepresentationFromProject:(id)arg1;
- (double)projectAspectRatio;
- (int)projectFrameRate;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectEnclosingAllFacesWithFaceScale:(double)arg1 imageRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)setBurstAcrossSubClipDuration:(double)arg1;
- (void)setContainedClips:(id)arg1;
- (void)setContentsFromPlist:(id)arg1 inProject:(id)arg2;
- (void)setDetectedFaceRects:(id)arg1;
- (void)setDuration:(int)arg1;
- (void)setPanoramaDirection:(unsigned long long)arg1;
- (void)setPanoramaStyle:(unsigned long long)arg1;
- (void)setPanoramaTransitionDuration:(double)arg1;
- (void)setTemplateClip:(id)arg1;
- (void)takePropertiesFromKenBurnsClip:(id)arg1;
- (id)templateClip;
- (int)totalDurationOfClips:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EffectDataSource.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/EffectDataSource.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface EffectDataSource : NSObject <ItemStylePickerDataSource> {
    NSMutableDictionary * _allFilterDirtyPreviewsDict;
    NSMutableArray * _allFilterIDsArray;
    NSMutableDictionary * _allFilterNamesDict;
    NSMutableDictionary * _allFilterPreviewsDict;
    NSMutableDictionary * _allGeneratorDirtyPreviewsDict;
    NSMutableArray * _allGeneratorIDsArray;
    NSMutableDictionary * _allGeneratorNamesDict;
    NSMutableDictionary * _allGeneratorPreviewsDict;
    NSMutableDictionary * _allTitleDirtyPreviewsDict;
    NSMutableArray * _allTitleIDsArray;
    NSMutableDictionary * _allTitleNamesDict;
    NSMutableDictionary * _allTitlePreviewsDict;
    NSMutableDictionary * _allTransitionDirtyPreviewsDict;
    NSMutableArray * _allTransitionIDsArray;
    NSMutableDictionary * _allTransitionNamesDict;
    NSMutableDictionary * _allTransitionPreviewsDict;
    NSMutableArray * _factoryFilterIDsArray;
    NSMutableDictionary * _factoryFilterInternalNamesDict;
    NSMutableDictionary * _factoryFilterNamesDict;
    NSMutableArray * _factoryGeneratorIDsArray;
    NSMutableDictionary * _factoryGeneratorNamesDict;
    NSMutableArray * _factoryTitleIDsArray;
    NSMutableDictionary * _factoryTitleInternalNamesDict;
    NSMutableDictionary * _factoryTitleNamesDict;
    NSMutableArray * _factoryTransitionIDsArray;
    NSMutableDictionary * _factoryTransitionNamesDict;
    int  _filterClientRefCount;
    bool  _generatingThumbs;
    bool  _generatingThumbsInterrupted;
}

@property (nonatomic, retain) NSMutableDictionary *allFilterDirtyPreviewsDict;
@property (nonatomic, retain) NSMutableArray *allFilterIDsArray;
@property (nonatomic, retain) NSMutableDictionary *allFilterNamesDict;
@property (nonatomic, retain) NSMutableDictionary *allFilterPreviewsDict;
@property (nonatomic, retain) NSMutableDictionary *allGeneratorDirtyPreviewsDict;
@property (nonatomic, retain) NSMutableArray *allGeneratorIDsArray;
@property (nonatomic, retain) NSMutableDictionary *allGeneratorNamesDict;
@property (nonatomic, retain) NSMutableDictionary *allGeneratorPreviewsDict;
@property (nonatomic, retain) NSMutableDictionary *allTitleDirtyPreviewsDict;
@property (nonatomic, retain) NSMutableArray *allTitleIDsArray;
@property (nonatomic, retain) NSMutableDictionary *allTitleNamesDict;
@property (nonatomic, retain) NSMutableDictionary *allTitlePreviewsDict;
@property (nonatomic, retain) NSMutableDictionary *allTransitionDirtyPreviewsDict;
@property (nonatomic, retain) NSMutableArray *allTransitionIDsArray;
@property (nonatomic, retain) NSMutableDictionary *allTransitionNamesDict;
@property (nonatomic, retain) NSMutableDictionary *allTransitionPreviewsDict;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableArray *factoryFilterIDsArray;
@property (nonatomic, retain) NSMutableDictionary *factoryFilterInternalNamesDict;
@property (nonatomic, retain) NSMutableDictionary *factoryFilterNamesDict;
@property (nonatomic, retain) NSMutableArray *factoryGeneratorIDsArray;
@property (nonatomic, retain) NSMutableDictionary *factoryGeneratorNamesDict;
@property (nonatomic, retain) NSMutableArray *factoryTitleIDsArray;
@property (nonatomic, retain) NSMutableDictionary *factoryTitleInternalNamesDict;
@property (nonatomic, retain) NSMutableDictionary *factoryTitleNamesDict;
@property (nonatomic, retain) NSMutableArray *factoryTransitionIDsArray;
@property (nonatomic, retain) NSMutableDictionary *factoryTransitionNamesDict;
@property int filterClientRefCount;
@property (getter=isGeneratingThumbs, nonatomic) bool generatingThumbs;
@property (getter=isGeneratingThumbsInterrupted, nonatomic) bool generatingThumbsInterrupted;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)sharedDataSource;

- (void).cxx_destruct;
- (id)allFilterDirtyPreviewsDict;
- (id)allFilterIDsArray;
- (id)allFilterNamesDict;
- (id)allFilterPreviewsDict;
- (id)allGeneratorDirtyPreviewsDict;
- (id)allGeneratorIDsArray;
- (id)allGeneratorNamesDict;
- (id)allGeneratorPreviewsDict;
- (id)allTitleDirtyPreviewsDict;
- (id)allTitleIDsArray;
- (id)allTitleNamesDict;
- (id)allTitlePreviewsDict;
- (id)allTransitionDirtyPreviewsDict;
- (id)allTransitionIDsArray;
- (id)allTransitionNamesDict;
- (id)allTransitionPreviewsDict;
- (void)dirtyAllFilterPreviewsIncludingNone:(bool)arg1;
- (void)dirtyAllTitlePreviewsIncludingNone:(bool)arg1;
- (id)effectsForType:(id)arg1;
- (id)factoryFilterIDsArray;
- (id)factoryFilterInternalNamesDict;
- (id)factoryFilterNamesDict;
- (id)factoryGeneratorIDsArray;
- (id)factoryGeneratorNamesDict;
- (id)factoryTitleIDsArray;
- (id)factoryTitleInternalNamesDict;
- (id)factoryTitleNamesDict;
- (id)factoryTransitionIDsArray;
- (id)factoryTransitionNamesDict;
- (int)filterClientRefCount;
- (void)generateAllFilterPreviewsAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 effectRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg2 rawImage:(id)arg3 previewSize:(struct CGSize { double x1; double x2; })arg4;
- (void)generatePreviewImageForEffectID:(id)arg1 currentTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 effectRange:(struct { struct { long long x_1_1_1; int x_1_1_2; unsigned int x_1_1_3; long long x_1_1_4; } x1; struct { long long x_2_1_1; int x_2_1_2; unsigned int x_2_1_3; long long x_2_1_4; } x2; })arg3 rawImage:(id)arg4 previewSize:(struct CGSize { double x1; double x2; })arg5 completion:(id /* block */)arg6;
- (id)getAllFilterIDs;
- (id)getAllFilterNames;
- (id)getAllGeneratorIDs;
- (id)getAllGeneratorNames;
- (id)getAllTitleIDs;
- (id)getAllTitleNames;
- (id)getAllTransitionIDs;
- (id)getAllTransitionNames;
- (id)getEffectIDsForType:(id)arg1;
- (id)getEffectNamesForType:(id)arg1;
- (id)getFactoryFilterIDs;
- (id)getFactoryFilterInternalNames;
- (id)getFactoryFilterNames;
- (id)getFactoryTitleIDs;
- (id)getFactoryTitleInternalNames;
- (id)getFactoryTitleNames;
- (id)getFactoryTransitionIDs;
- (id)getFactoryTransitionInternalNames;
- (id)getFactoryTransitionNames;
- (id)getPreviewImageForFilterID:(id)arg1;
- (id)getPreviewImageForTitleID:(id)arg1;
- (id)indexPathOfItemID:(id)arg1;
- (id)indexPathOfItemName:(id)arg1;
- (id)init;
- (void)initAllEffectPreviewsForImage:(id)arg1 effectType:(id)arg2;
- (void)initAllFilterPreviewsForImage:(id)arg1;
- (void)initAllTitlePreviewsForImage:(id)arg1;
- (bool)isGeneratingThumbs;
- (bool)isGeneratingThumbsInterrupted;
- (id)itemIDAtIndexPath:(id)arg1;
- (id)itemNameAtIndexPath:(id)arg1;
- (long long)numberOfItems;
- (void)releaseAllFilterPreviewsIncludingNone:(bool)arg1;
- (void)releaseAllTitlePreviewsIncludingNone:(bool)arg1;
- (void)setAllFilterDirtyPreviewsDict:(id)arg1;
- (void)setAllFilterIDsArray:(id)arg1;
- (void)setAllFilterNamesDict:(id)arg1;
- (void)setAllFilterPreviewsDict:(id)arg1;
- (void)setAllGeneratorDirtyPreviewsDict:(id)arg1;
- (void)setAllGeneratorIDsArray:(id)arg1;
- (void)setAllGeneratorNamesDict:(id)arg1;
- (void)setAllGeneratorPreviewsDict:(id)arg1;
- (void)setAllTitleDirtyPreviewsDict:(id)arg1;
- (void)setAllTitleIDsArray:(id)arg1;
- (void)setAllTitleNamesDict:(id)arg1;
- (void)setAllTitlePreviewsDict:(id)arg1;
- (void)setAllTransitionDirtyPreviewsDict:(id)arg1;
- (void)setAllTransitionIDsArray:(id)arg1;
- (void)setAllTransitionNamesDict:(id)arg1;
- (void)setAllTransitionPreviewsDict:(id)arg1;
- (void)setFactoryFilterIDsArray:(id)arg1;
- (void)setFactoryFilterInternalNamesDict:(id)arg1;
- (void)setFactoryFilterNamesDict:(id)arg1;
- (void)setFactoryGeneratorIDsArray:(id)arg1;
- (void)setFactoryGeneratorNamesDict:(id)arg1;
- (void)setFactoryTitleIDsArray:(id)arg1;
- (void)setFactoryTitleInternalNamesDict:(id)arg1;
- (void)setFactoryTitleNamesDict:(id)arg1;
- (void)setFactoryTransitionIDsArray:(id)arg1;
- (void)setFactoryTransitionNamesDict:(id)arg1;
- (void)setFilterClientRefCount:(int)arg1;
- (void)setGeneratingThumbs:(bool)arg1;
- (void)setGeneratingThumbsInterrupted:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

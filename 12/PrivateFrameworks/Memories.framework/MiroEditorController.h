<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MiroEditorController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/MiroEditorController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface MiroEditorController : NSObject <MiroAssetPropertyEditing, MiroProjectEditing> {
    <MiroEditorControllerDelegate> * _delegate;
    NSArray * _displayedClips;
    NSArray * _displayedClipsInfo;
    MiroMemory * _memory;
    NSMutableDictionary * _modifiedAssetsMetadata;
    NSMutableDictionary * _previousAssetsMetadata;
    NSArray * _previousDisplayedClips;
    int  _projectFrameRate;
}

@property (nonatomic, readonly) NSArray *assetsFilteredForSuggestions;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MiroEditorControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSArray *displayedClips;
@property (nonatomic, retain) NSArray *displayedClipsInfo;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MiroMemory *memory;
@property (nonatomic, readonly) NSString *memoryLocalizedTitle;
@property (nonatomic, retain) NSMutableDictionary *modifiedAssetsMetadata;
@property (nonatomic, retain) NSMutableDictionary *previousAssetsMetadata;
@property (nonatomic, retain) NSArray *previousDisplayedClips;
@property (nonatomic) int projectFrameRate;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSSet *usedAssetIDs;

- (void).cxx_destruct;
- (void)_addAssetToModifiedAssets:(id)arg1;
- (id)_computeNewDislikedRangesWithExistingDislikedRanges:(id)arg1 proposedTrimRanges:(id)arg2 previousClipRanges:(id)arg3 currentClipRanges:(id)arg4;
- (id)_computeNewPickedRangesWithPreviousClipRanges:(id)arg1 currentClipRanges:(id)arg2;
- (id)_freezeRangeForClip:(id)arg1;
- (id)_indexesOfClips:(id)arg1;
- (void)_invalidateGainForClip:(id)arg1;
- (id)_makeTrimRangesWithClips:(id)arg1;
- (id)_mergeRanges:(id)arg1 withRanges:(id)arg2;
- (id)_otherSplitClipsForClip:(id)arg1;
- (id)_pickedLocallyAvailableAssetIDs;
- (void)_removeUserRangesOfType:(unsigned long long)arg1 fromAsset:(id)arg2;
- (void)_replaceRangesOnAsset:(id)arg1 trimmed:(id)arg2 disliked:(id)arg3;
- (id)_replaceRangesThatOverlap:(id)arg1 withOverlappingRanges:(id)arg2 discardedRanges:(id*)arg3;
- (void)_restoreModifiedAssets;
- (id)_trimRangesForAssetBeforeEditing:(id)arg1;
- (void)_updateDisplayedClipsInsertingClip:(id)arg1 afterClip:(id)arg2;
- (void)_updateDisplayedClipsWithRemovedClips:(id)arg1;
- (void)_updateTrimRangesOnAsset:(id)arg1;
- (void)addAssets:(id)arg1 removeAssets:(id)arg2;
- (bool)assetHasUserModifiedAudioLevel:(id)arg1;
- (bool)assetIsPartOfMultiUp:(id)arg1;
- (id)assetsFilteredForSuggestions;
- (unsigned long long)audioLevelForClip:(id)arg1;
- (id)clipAtIndex:(unsigned long long)arg1;
- (unsigned long long)clipIndexForSequenceTime:(int)arg1;
- (bool)clipIsKeyAsset:(id)arg1;
- (bool)clipIsPartOfMultiUp:(id)arg1;
- (bool)clipIsPartOfSplit:(id)arg1;
- (id)delegate;
- (id)displayedClips;
- (id)displayedClipsInfo;
- (id)indexesForClipsOfAssetID:(id)arg1;
- (id)initWithSequence:(id)arg1 memory:(id)arg2;
- (id)memory;
- (id)memoryLocalizedTitle;
- (id)modifiedAssetsMetadata;
- (void)moveClipAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfClips;
- (id)pickListSplitDistanceForAsset:(id)arg1;
- (bool)pickedLocallyAvailableScenesContainAsset:(id)arg1;
- (id)previousAssetsMetadata;
- (id)previousDisplayedClips;
- (int)projectFrameRate;
- (void)removeClip:(id)arg1;
- (void)revertEditedRanges;
- (void)setAudioLevel:(unsigned long long)arg1 forClip:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDisplayedClips:(id)arg1;
- (void)setDisplayedClipsInfo:(id)arg1;
- (void)setMemory:(id)arg1;
- (void)setModifiedAssetsMetadata:(id)arg1;
- (void)setPreviousAssetsMetadata:(id)arg1;
- (void)setPreviousDisplayedClips:(id)arg1;
- (void)setProjectFrameRate:(int)arg1;
- (bool)shouldRemoveClip:(id)arg1;
- (bool)shouldTrimClip:(id)arg1 startTime:(float)arg2 endTime:(float)arg3;
- (bool)trimClip:(id)arg1 startTime:(float)arg2 endTime:(float)arg3;
- (void)updateClipsFromSequence:(id)arg1;
- (id)usedAssetIDs;
- (id)usedAssetsForMemory;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

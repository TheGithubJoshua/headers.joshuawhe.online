<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MiroAutoEditor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/MiroAutoEditor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface MiroAutoEditor : NSObject {
    double  _autoEditFinishedTimePPT;
    double  _autoEditStartedTimePPT;
    id /* block */  _downloadCompleted;
    int  _downloadPolicy;
    float  _downloadProgress;
    MiroMemory * _memory;
    MovieController * _movieController;
    id  _observer;
    NSOperationQueue * _operationQueue;
    double  _playbackStartedTimePPT;
    NSDate * _prepareStartedTime;
    float  _progress;
    Project * _project;
    long long  _remainingAssetsToDownload;
    bool  _shouldBuildMovieController;
    bool  _shouldSave;
    NSDate * _tapStartedTime;
    bool  _topLevelCancel;
    double  _uiDidAppearTimePPT;
    double  _uiDidLoadTimePPT;
}

@property double autoEditFinishedTimePPT;
@property double autoEditStartedTimePPT;
@property (nonatomic, copy) id /* block */ downloadCompleted;
@property int downloadPolicy;
@property float downloadProgress;
@property (nonatomic, retain) MiroMemory *memory;
@property (retain) MovieController *movieController;
@property (nonatomic, retain) id observer;
@property (nonatomic, retain) NSOperationQueue *operationQueue;
@property double playbackStartedTimePPT;
@property (retain) NSDate *prepareStartedTime;
@property (nonatomic) float progress;
@property (retain) Project *project;
@property long long remainingAssetsToDownload;
@property (retain) <MiroSequence> *sequence;
@property bool shouldBuildMovieController;
@property bool shouldSave;
@property (retain) NSDate *tapStartedTime;
@property bool topLevelCancel;
@property double uiDidAppearTimePPT;
@property double uiDidLoadTimePPT;

+ (id)sharedInstanceForPregenerate;

- (void).cxx_destruct;
- (void)_autoEditMemory:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_cancel;
- (void)_downloadSongForPregenrateWithMemory:(id)arg1;
- (void)_logMemoryStuff:(id)arg1;
- (id)_printDataForAssetAsString:(id)arg1 andPickInfo:(id)arg2;
- (id)_returnTextDebugAsString;
- (id)assetMediaType:(id)arg1 itemStart:(double)arg2 itemDuration:(double)arg3;
- (double)autoEditFinishedTimePPT;
- (double)autoEditStartedTimePPT;
- (void)cancelAutoEdit;
- (void)dealloc;
- (id /* block */)downloadCompleted;
- (int)downloadPolicy;
- (float)downloadProgress;
- (id)durationsForAsset:(id)arg1 itemDuration:(double)arg2;
- (void)fetchAndPrintAssets:(id)arg1 andMemory:(id)arg2;
- (id)initForPregenerate;
- (id)initWithMemory:(id)arg1 shouldBuildMovieController:(bool)arg2;
- (bool)isAutoEditing;
- (bool)isBusy;
- (void)logFreeze:(id)arg1 message:(id)arg2;
- (id)memory;
- (id)movieController;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)observer;
- (id)operationQueue;
- (void)performAutoEdit;
- (void)performAutoEditWithCompletionHandler:(id /* block */)arg1;
- (void)performPersist;
- (double)playbackStartedTimePPT;
- (void)pregenerateMemory:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)prepareStartedTime;
- (float)progress;
- (id)project;
- (long long)remainingAssetsToDownload;
- (id)sequence;
- (void)setAutoEditFinishedTimePPT:(double)arg1;
- (void)setAutoEditStartedTimePPT:(double)arg1;
- (void)setDownloadCompleted:(id /* block */)arg1;
- (void)setDownloadPolicy:(int)arg1;
- (void)setDownloadProgress:(float)arg1;
- (void)setMemory:(id)arg1;
- (void)setMovieController:(id)arg1;
- (void)setObserver:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setPlaybackStartedTimePPT:(double)arg1;
- (void)setPrepareStartedTime:(id)arg1;
- (void)setProgress:(float)arg1;
- (void)setProject:(id)arg1;
- (void)setRemainingAssetsToDownload:(long long)arg1;
- (void)setSequence:(id)arg1;
- (void)setShouldBuildMovieController:(bool)arg1;
- (void)setShouldSave:(bool)arg1;
- (void)setTapStartedTime:(id)arg1;
- (void)setTopLevelCancel:(bool)arg1;
- (void)setUiDidAppearTimePPT:(double)arg1;
- (void)setUiDidLoadTimePPT:(double)arg1;
- (bool)shouldBuildMovieController;
- (bool)shouldNotifyProgress;
- (bool)shouldSave;
- (id)tapStartedTime;
- (bool)topLevelCancel;
- (double)uiDidAppearTimePPT;
- (double)uiDidLoadTimePPT;
- (void)updateDownloadProgress:(float)arg1;
- (void)updateMovieController:(id)arg1;
- (void)updateProgress:(float)arg1;
- (void)updateProject:(id)arg1;
- (void)updateRemainingAssetsToDownload:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

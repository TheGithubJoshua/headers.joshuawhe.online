<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MiroAutoLayoutClip.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/MiroAutoLayoutClip.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface MiroAutoLayoutClip : NSObject {
    unsigned long long  _altAssignedKBStyle;
    NSDictionary * _altAssignedTreatmentDict;
    int  _altAssignedTreatmentStyle;
    int  _altRequiredTreatmentStyle;
    bool  _altTransitionAssigned;
    bool  _altTreatmentApplied;
    unsigned long long  _assignedKBStyle;
    NSDictionary * _assignedTreatmentDict;
    int  _assignedTreatmentStyle;
    bool  _canSupportMultiUp;
    bool  _canSupportPrecedingTransition;
    int  _clipType;
    bool  _couldSupportNUpBase;
    int  _directionOfMovement;
    bool  _durationIsFlexible;
    int  _faceLocation;
    bool  _facesAreClose;
    bool  _isPortrait;
    bool  _isSquare;
    bool  _itemShouldHeroFeaturedPerson;
    MiroAutoEditKenBurnsController * _kbController;
    bool  _missedRollToBeats;
    MultiUpClip * _multiUpClip;
    NSArray * _multiUpPeers;
    int  _numberOfFaces;
    int  _preferredDirection;
    KonaClip * _projectClip;
    int  _requiredTreatmentStyle;
    MiroAutoLayoutClip * _selectedPeer;
    bool  _supportsHalf;
    bool  _supportsOneThird;
    bool  _supportsTwoThirds;
    bool  _transitionAssigned;
    bool  _treatmentApplied;
    bool  _zoomToPersonCandidate;
}

@property (nonatomic) unsigned long long altAssignedKBStyle;
@property (nonatomic, retain) NSDictionary *altAssignedTreatmentDict;
@property (nonatomic) int altAssignedTreatmentStyle;
@property (nonatomic) int altRequiredTreatmentStyle;
@property (nonatomic) bool altTransitionAssigned;
@property (nonatomic) bool altTreatmentApplied;
@property (nonatomic) unsigned long long assignedKBStyle;
@property (nonatomic, retain) NSDictionary *assignedTreatmentDict;
@property (nonatomic) int assignedTreatmentStyle;
@property (nonatomic) bool canSupportMultiUp;
@property (nonatomic) bool canSupportPrecedingTransition;
@property (nonatomic) int clipType;
@property (nonatomic) bool couldSupportNUpBase;
@property (nonatomic) int directionOfMovement;
@property (nonatomic) bool durationIsFlexible;
@property (nonatomic) int faceLocation;
@property (nonatomic, readonly) bool facesAreClose;
@property (nonatomic, readonly) bool isPortrait;
@property (nonatomic, readonly) bool isSquare;
@property (nonatomic) bool itemShouldHeroFeaturedPerson;
@property (nonatomic, retain) MiroAutoEditKenBurnsController *kbController;
@property (nonatomic) bool missedRollToBeats;
@property (nonatomic, retain) MultiUpClip *multiUpClip;
@property (nonatomic, retain) NSArray *multiUpPeers;
@property (nonatomic, readonly) int numberOfFaces;
@property (nonatomic) int preferredDirection;
@property (nonatomic, retain) KonaClip *projectClip;
@property (nonatomic) int requiredTreatmentStyle;
@property (nonatomic, retain) MiroAutoLayoutClip *selectedPeer;
@property (nonatomic) bool supportsHalf;
@property (nonatomic) bool supportsOneThird;
@property (nonatomic) bool supportsTwoThirds;
@property (nonatomic) bool transitionAssigned;
@property (nonatomic) bool treatmentApplied;
@property (nonatomic) bool zoomToPersonCandidate;

+ (bool)assetCanFillProjectFrame:(id)arg1;
+ (double)clipAspectRatio:(id)arg1;
+ (bool)clipIsPano:(id)arg1;
+ (bool)clipIsPortrait:(id)arg1;
+ (bool)clipIsPortraitOrSquare:(id)arg1;
+ (bool)clipIsSquare:(id)arg1;

- (void).cxx_destruct;
- (unsigned long long)altAssignedKBStyle;
- (id)altAssignedTreatmentDict;
- (int)altAssignedTreatmentStyle;
- (int)altRequiredTreatmentStyle;
- (bool)altTransitionAssigned;
- (bool)altTreatmentApplied;
- (void)applyAssignedTreatmentsFromRequired;
- (unsigned long long)assignedKBStyle;
- (id)assignedTreatmentDict;
- (int)assignedTreatmentStyle;
- (bool)canSupportMultiUp;
- (bool)canSupportPrecedingTransition;
- (bool)clipCanZoomCropforAlt:(bool)arg1;
- (int)clipType;
- (bool)couldSupportNUpBase;
- (id)description;
- (int)directionOfMovement;
- (double)distanceToLayoutClip:(id)arg1;
- (bool)durationIsFlexible;
- (void)establishCanSupportInEditMultiUp:(id)arg1;
- (void)establishCanSupportMultiUp:(id)arg1;
- (void)establishCanSupportPrecedingTransition;
- (void)establishDurationFlexibility;
- (void)establishFaceInfo:(id)arg1;
- (void)establishFacesAreClose;
- (void)establishIsPortrait;
- (void)establishIsSquare;
- (void)establishPreferredDirection;
- (void)establishProjectClipType;
- (int)establishRequiredTreatmentForAspect:(int)arg1 multiDelegate:(id)arg2 polishDelegate:(id)arg3;
- (void)establishShotType:(id)arg1;
- (int)faceLocation;
- (bool)facesAreClose;
- (bool)hasMultipleFaces;
- (bool)hasSingleFace;
- (id)initWithKonaClip:(id)arg1 multiUpDelegate:(id)arg2 polishDelegate:(id)arg3 zoomToPersonCandidate:(bool)arg4;
- (bool)isEdited;
- (bool)isEqual:(id)arg1;
- (bool)isFavorite;
- (bool)isPano;
- (bool)isPortrait;
- (bool)isSquare;
- (bool)isTransition;
- (bool)isVideo;
- (bool)itemMatchesProjectOrientation:(int)arg1;
- (bool)itemShouldHeroFeaturedPerson;
- (id)kbController;
- (id)locationForClip;
- (bool)missedRollToBeats;
- (id)multiUpClip;
- (id)multiUpPeers;
- (int)numberOfFaces;
- (int)preferredDirection;
- (id)projectClip;
- (int)requiredTreatmentStyle;
- (id)selectedPeer;
- (void)setAltAssignedKBStyle:(unsigned long long)arg1;
- (void)setAltAssignedTreatmentDict:(id)arg1;
- (void)setAltAssignedTreatmentStyle:(int)arg1;
- (void)setAltRequiredTreatmentStyle:(int)arg1;
- (void)setAltTransitionAssigned:(bool)arg1;
- (void)setAltTreatmentApplied:(bool)arg1;
- (void)setAssignedKBStyle:(unsigned long long)arg1;
- (void)setAssignedTreatmentDict:(id)arg1;
- (void)setAssignedTreatmentStyle:(int)arg1;
- (void)setCanSupportMultiUp:(bool)arg1;
- (void)setCanSupportPrecedingTransition:(bool)arg1;
- (void)setClipType:(int)arg1;
- (void)setCouldSupportNUpBase:(bool)arg1;
- (void)setDirectionOfMovement:(int)arg1;
- (void)setDurationIsFlexible:(bool)arg1;
- (void)setFaceLocation:(int)arg1;
- (void)setItemShouldHeroFeaturedPerson:(bool)arg1;
- (void)setKbController:(id)arg1;
- (void)setMissedRollToBeats:(bool)arg1;
- (void)setMultiUpClip:(id)arg1;
- (void)setMultiUpPeers:(id)arg1;
- (void)setPreferredDirection:(int)arg1;
- (void)setProjectClip:(id)arg1;
- (void)setRequiredTreatmentStyle:(int)arg1;
- (void)setSelectedPeer:(id)arg1;
- (void)setSupportsHalf:(bool)arg1;
- (void)setSupportsOneThird:(bool)arg1;
- (void)setSupportsTwoThirds:(bool)arg1;
- (void)setTransitionAssigned:(bool)arg1;
- (void)setTreatmentApplied:(bool)arg1;
- (void)setZoomToPersonCandidate:(bool)arg1;
- (bool)supportsHalf;
- (bool)supportsOneThird;
- (bool)supportsTwoThirds;
- (bool)transitionAssigned;
- (bool)treatmentApplied;
- (bool)zoomToPersonCandidate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

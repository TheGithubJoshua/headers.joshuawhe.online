<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MiroAutoEditAudioLayoutController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/MiroAutoEditAudioLayoutController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface MiroAutoEditAudioLayoutController : NSObject {
    MiroMemory * _activeMemory;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _lastBeatTime;
    NSArray * _layoutClips;
    MiroAutoEditLogger * _logger;
    Project * _project;
}

@property (nonatomic) MiroMemory *activeMemory;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } lastBeatTime;
@property (nonatomic, retain) NSArray *layoutClips;
@property (nonatomic, retain) MiroAutoEditLogger *logger;
@property (nonatomic, retain) Project *project;

- (void).cxx_destruct;
- (void)_applyComputedVolumesForClips:(id)arg1;
- (id)_applyFrozenVolumeAndReturnRemainingItems;
- (bool)_attemptToRollEditFromTime:(int)arg1 toTime:(int)arg2 firstClip:(id)arg3 secondClip:(id)arg4 failureReasons:(id)arg5 allowSlack:(bool)arg6;
- (bool)_clipLimitsRoll:(id)arg1;
- (unsigned long long)_computeMuteStateForClip:(id)arg1 hasAnalysis:(bool)arg2 hasVoice:(bool)arg3 hasVoiceAndFaces:(bool)arg4;
- (void)_computeVolumesForClip:(id)arg1 loudnessValues:(id)arg2 peakValues:(id)arg3 returnNormalVolume:(float*)arg4 returnDimmedVolume:(float*)arg5;
- (void)_enumerateClipsWithAudio:(id)arg1 usingBlock:(id /* block */)arg2;
- (bool)_hasVoiceAndFacesForClip:(id)arg1 gatherLoudness:(id*)arg2 peak:(id*)arg3 voiceRanges:(id*)arg4;
- (id)_interestingBeatTimedMetaItemsForFlexAudioClip:(id)arg1 forFrameTime:(int)arg2 withGranularity:(id)arg3;
- (id)_onsetDrivenInterestingBeatsForTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 metadataDict:(id)arg2;
- (id)_rollCutsToBeatsWithGranularity:(id)arg1 excludingTimes:(id)arg2;
- (id)_segmentAndBeatsBasedInterestingBeatsForTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 metadataDict:(id)arg2;
- (id)_timedMetadataItemAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 forFlexAudioClip:(id)arg2 withIdentifier:(id)arg3;
- (id)activeMemory;
- (void)analyzeLoudness:(id)arg1;
- (void)applyAudioFadeHandles;
- (void)applyAudioPolishToProject:(id)arg1 activeMemory:(id)arg2 layoutClips:(id)arg3;
- (void)applyBackgroundAudioVolume;
- (void)applyClipVolumes;
- (void)applyJAndLCuts;
- (unsigned long long)indexOfClipInLayoutClips:(id)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })lastBeatTime;
- (id)layoutClips;
- (id)logger;
- (id)project;
- (void)rollCutsToBeats;
- (void)setActiveMemory:(id)arg1;
- (void)setLastBeatTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setLayoutClips:(id)arg1;
- (void)setLogger:(id)arg1;
- (void)setProject:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

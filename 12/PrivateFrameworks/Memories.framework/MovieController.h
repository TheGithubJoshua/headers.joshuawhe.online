<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MovieController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/MovieController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface MovieController : NSObject <MovieControllerExportProtocol> {
    Composition * _composition;
    AVAssetImageGenerator * _customImageGen;
    long long  _customImageGenCount;
    bool  _forExport;
    id /* block */  _playerReadyCompletionBlock;
    struct CGSize { 
        double width; 
        double height; 
    }  _size;
    CALayer * compositionLayer;
    float  m_rate;
    CALayer * playerLayer;
    id /* block */  progressUpdateBlock;
    Project * project;
    bool  supportArbitraryAspectRatio;
}

@property (nonatomic, readonly) AVMutableComposition *AVComposition;
@property (nonatomic, readonly) AVMutableAudioMix *audioMix;
@property (retain) Composition *composition;
@property (nonatomic, readonly) CALayer *compositionLayer;
@property (retain) AVAssetImageGenerator *customImageGen;
@property long long customImageGenCount;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property bool forExport;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool playAltClips;
@property (nonatomic, readonly) AVPlayerItem *playerItem;
@property (nonatomic, retain) CALayer *playerLayer;
@property (copy) id /* block */ playerReadyCompletionBlock;
@property (nonatomic, copy) id /* block */ progressUpdateBlock;
@property (retain) Project *project;
@property struct CGSize { double x1; double x2; } size;
@property (readonly) Class superclass;
@property (nonatomic) bool supportArbitraryAspectRatio;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } temporarySize;
@property (nonatomic, readonly) AVMutableVideoComposition *videoComposition;

+ (id)controllerWithProject:(id)arg1 forExport:(bool)arg2 supportsArbitraryAspectRatio:(bool)arg3;
+ (id)imageFromProject:(id)arg1 atTime:(int)arg2 withSize:(struct CGSize { double x1; double x2; })arg3;

- (void).cxx_destruct;
- (id)AVComposition;
- (void)applyPlayerItemProperties;
- (id)audioMix;
- (void)cancelAllUIImageGeneration;
- (void)clearPlayerItemProperties;
- (id)composition;
- (id)compositionLayer;
- (id)customImageGen;
- (long long)customImageGenCount;
- (void)dealloc;
- (bool)forExport;
- (void)generateOrigUIImagesAsynchronouslyForSize:(struct CGSize { double x1; double x2; })arg1 atTimes:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)generateUIImagesAsynchronouslyForSize:(struct CGSize { double x1; double x2; })arg1 atTimes:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)imageAtTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1 withSize:(struct CGSize { double x1; double x2; })arg2;
- (bool)playAltClips;
- (id)playerItem;
- (id)playerLayer;
- (id /* block */)playerReadyCompletionBlock;
- (id /* block */)progressUpdateBlock;
- (id)project;
- (void)renderBothOrientationsOfFirstFrameAtSize:(struct CGSize { double x1; double x2; })arg1 withCompletion:(id /* block */)arg2;
- (void)setComposition:(id)arg1;
- (void)setCustomImageGen:(id)arg1;
- (void)setCustomImageGenCount:(long long)arg1;
- (void)setForExport:(bool)arg1;
- (void)setPlayAltClips:(bool)arg1;
- (void)setPlayerLayer:(id)arg1;
- (void)setPlayerReadyCompletionBlock:(id /* block */)arg1;
- (void)setProgressUpdateBlock:(id /* block */)arg1;
- (void)setProject:(id)arg1;
- (void)setProjectOnComposition;
- (void)setSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSupportArbitraryAspectRatio:(bool)arg1;
- (struct CGSize { double x1; double x2; })size;
- (bool)supportArbitraryAspectRatio;
- (void)tearDownProjectDisplay;
- (struct CGSize { double x1; double x2; })temporarySize;
- (void)updateComposition;
- (void)updateForProjectTimeInSeconds:(double)arg1 asynchronous:(bool)arg2 allowUnloading:(bool)arg3;
- (id)videoComposition;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PHAssetRepresentation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/PHAssetRepresentation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface PHAssetRepresentation : NSObject {
    bool  _adjustedVersion;
    PHAsset * _asset;
    double  _downloadProgress;
    NSDate * _downloadRequestDate;
    unsigned long long  _downloadState;
    unsigned long long  _lastKnownPersistenceState;
    NSString * _localIdentifier;
    long long  _mediaType;
    NSDate * _modificationDate;
    PHAssetResource * _mostUsefulResource;
}

@property (getter=isAdjustedVersion, nonatomic) bool adjustedVersion;
@property (nonatomic, retain) PHAsset *asset;
@property (nonatomic, readonly) NSString *derivativeFilePath;
@property (nonatomic) double downloadProgress;
@property (nonatomic, retain) NSDate *downloadRequestDate;
@property (nonatomic) unsigned long long downloadState;
@property (nonatomic) unsigned long long lastKnownPersistenceState;
@property (nonatomic, retain) NSString *localIdentifier;
@property (nonatomic) long long mediaType;
@property (nonatomic, retain) NSDate *modificationDate;
@property (readonly) PHAssetResource *mostUsefulResource;

+ (void)_cacheAssetRepresentation:(id)arg1;
+ (id)_cachedAssetRepresentationWithIdentifier:(id)arg1 adjustedVersion:(bool)arg2;
+ (id)assetRepresentationWithAsset:(id)arg1 adjustedVersion:(bool)arg2;
+ (id)assetRepresentationWithAssetsLibraryPersistentURL:(id)arg1;
+ (id)assetRepresentationWithIdentifierURL:(id)arg1;
+ (id)assetRepresentationWithPhotosIdentifierURL:(id)arg1;
+ (void)clearStaticCache;
+ (void)createStaticCache;
+ (void)initialize;

- (void).cxx_destruct;
- (id)asset;
- (id)avAsset;
- (void)dealloc;
- (id)derivativeFilePath;
- (id)description;
- (double)downloadProgress;
- (id)downloadRequestDate;
- (unsigned long long)downloadState;
- (unsigned long long)estimatedFileSize;
- (id)handlePlayerItemRequestCompletionWithResult:(id)arg1 info:(id)arg2 videoRequestOptions:(id)arg3;
- (id)handleRequestCompletionWithResult:(id)arg1 info:(id)arg2 videoRequestOptions:(id)arg3;
- (id)handleVideoRequestCompletionWithResult:(id)arg1 info:(id)arg2 videoRequestOptions:(id)arg3;
- (unsigned long long)hash;
- (id)identifierURL;
- (id)image;
- (id)imageData;
- (struct CGSize { double x1; double x2; })imageSize;
- (id)imageWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)imageWithSize:(struct CGSize { double x1; double x2; })arg1 imageManager:(id)arg2;
- (id)initWithAsset:(id)arg1 adjustedVersion:(bool)arg2;
- (id)initWithAsset:(id)arg1 localIdentifier:(id)arg2 adjustedVersion:(bool)arg3 modificationDate:(id)arg4 mediaType:(long long)arg5;
- (id)initWithLocalIdentifier:(id)arg1 adjustedVersion:(bool)arg2 modificationDate:(id)arg3 mediaType:(long long)arg4;
- (bool)isAdjustedVersion;
- (bool)isDerivativeFilePathPointingToJPEGorRAWorHEIFFile;
- (bool)isDownloading;
- (bool)isEqual:(id)arg1;
- (bool)isHEIF;
- (unsigned long long)lastKnownPersistenceState;
- (id)localIdentifier;
- (long long)mediaType;
- (id)modificationDate;
- (id)mostUsefulResource;
- (void)queryLastKnownPersistenceState;
- (int)requestExportSessionWithResultHandler:(id /* block */)arg1 progressHandler:(id /* block */)arg2;
- (int)requestImageDataWithResultHandler:(id /* block */)arg1;
- (int)requestImageDataWithResultHandler:(id /* block */)arg1 progressHandler:(id /* block */)arg2 synchronous:(bool)arg3;
- (int)requestImageDataWithResultHandler:(id /* block */)arg1 synchronous:(bool)arg2;
- (int)requestImageWithResultHandler:(id /* block */)arg1;
- (int)requestImageWithResultHandler:(id /* block */)arg1 progressHandler:(id /* block */)arg2;
- (int)requestImageWithResultHandler:(id /* block */)arg1 progressHandler:(id /* block */)arg2 imageManager:(id)arg3;
- (int)requestMediaWithResultHandler:(id /* block */)arg1 progressHandler:(id /* block */)arg2;
- (int)requestPlayerItemWithResultHandler:(id /* block */)arg1 progressHandler:(id /* block */)arg2 networkAccessAllowed:(bool)arg3;
- (int)requestThumbnailWithResultHandler:(id /* block */)arg1 synchronous:(bool)arg2 networkAccessAllowed:(bool)arg3;
- (int)requestVideoWithResultHandler:(id /* block */)arg1;
- (int)requestVideoWithResultHandler:(id /* block */)arg1 progressHandler:(id /* block */)arg2;
- (int)requestVideoWithResultHandler:(id /* block */)arg1 progressHandler:(id /* block */)arg2 imageManager:(id)arg3;
- (void)setAdjustedVersion:(bool)arg1;
- (void)setAsset:(id)arg1;
- (void)setDownloadProgress:(double)arg1;
- (void)setDownloadRequestDate:(id)arg1;
- (void)setDownloadState:(unsigned long long)arg1;
- (void)setLastKnownPersistenceState:(unsigned long long)arg1;
- (void)setLocalIdentifier:(id)arg1;
- (void)setMediaType:(long long)arg1;
- (void)setModificationDate:(id)arg1;
- (id)thumbnailImage;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MiroEditorClipCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/MiroEditorClipCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface MiroEditorClipCell : UICollectionViewCell {
    UIButton * _audioButton;
    UIView * _audioButtonContainerView;
    NSLayoutConstraint * _bottomBarBottomSpaceConstraint;
    UIView * _circularPlayButton;
    <MiroClip> * _clip;
    <MiroEditorClipCellDataSource> * _dataSource;
    MiroEditorClipDebugView * _debugInfoView;
    UILabel * _debugLabel;
    <MiroEditorClipCellDelegate> * _delegate;
    FrameGenerator * _frameGenerator;
    AVPlayer * _player;
    AVPlayerItem * _playerItem;
    AVPlayerLayer * _playerLayer;
    UIImage * _thumbnail;
    NSLayoutConstraint * _thumbnailAspectConstraint;
    UIImageView * _thumbnailView;
}

@property (nonatomic) UIButton *audioButton;
@property (nonatomic) UIView *audioButtonContainerView;
@property (nonatomic, retain) NSLayoutConstraint *bottomBarBottomSpaceConstraint;
@property (nonatomic, retain) UIView *circularPlayButton;
@property (nonatomic, retain) <MiroClip> *clip;
@property (nonatomic) <MiroEditorClipCellDataSource> *dataSource;
@property (nonatomic) MiroEditorClipDebugView *debugInfoView;
@property (nonatomic) UILabel *debugLabel;
@property (nonatomic) <MiroEditorClipCellDelegate> *delegate;
@property (nonatomic, readonly) FrameGenerator *frameGenerator;
@property (nonatomic, readonly) bool isPlaying;
@property (nonatomic, retain) AVPlayer *player;
@property (nonatomic, retain) AVPlayerItem *playerItem;
@property (nonatomic, retain) AVPlayerLayer *playerLayer;
@property (nonatomic, retain) UIImage *thumbnail;
@property (nonatomic, retain) NSLayoutConstraint *thumbnailAspectConstraint;
@property (nonatomic) UIImageView *thumbnailView;

- (void).cxx_destruct;
- (void)_applicationWillResignActive:(id)arg1;
- (void)_didPlayToEnd:(id)arg1;
- (void)_disableAudioTracks;
- (void)_hidePlayer;
- (void)_setupCircularPlayButton;
- (void)_updateAudioButton;
- (void)_updateAudioVolume;
- (void)_updateDebugInfoView;
- (void)_updatePlayButton;
- (void)_updateThumbnailAspectIfNecessary;
- (id)audioButton;
- (id)audioButtonContainerView;
- (void)audioButtonTouchUpInside:(id)arg1;
- (void)awakeFromNib;
- (id)bottomBarBottomSpaceConstraint;
- (id)circularPlayButton;
- (bool)circularPlayButtonIsHidden;
- (id)clip;
- (id)dataSource;
- (void)dealloc;
- (id)debugInfoView;
- (id)debugLabel;
- (id)delegate;
- (id)description;
- (id)frameGenerator;
- (id)initWithCoder:(id)arg1;
- (bool)isPlaying;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pause:(id)arg1;
- (void)play:(id)arg1;
- (void)playButtonTouchUpInside:(id)arg1;
- (void)playPause:(id)arg1;
- (id)player;
- (id)playerItem;
- (id)playerLayer;
- (void)prepareForReuse;
- (void)setAudioButton:(id)arg1;
- (void)setAudioButtonContainerView:(id)arg1;
- (void)setBottomBarBottomSpaceConstraint:(id)arg1;
- (void)setCircularPlayButton:(id)arg1;
- (void)setClip:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDebugInfoView:(id)arg1;
- (void)setDebugLabel:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setPlayer:(id)arg1;
- (void)setPlayerItem:(id)arg1;
- (void)setPlayerLayer:(id)arg1;
- (void)setThumbnail:(id)arg1;
- (void)setThumbnailAspectConstraint:(id)arg1;
- (void)setThumbnailView:(id)arg1;
- (void)showPlayerWithCompletionHandler:(id /* block */)arg1;
- (void)stopPlayback:(id)arg1;
- (id)thumbnail;
- (id)thumbnailAspectConstraint;
- (id)thumbnailView;
- (void)updateControlVisibility;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

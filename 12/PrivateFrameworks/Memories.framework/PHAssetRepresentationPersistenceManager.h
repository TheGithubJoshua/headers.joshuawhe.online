<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PHAssetRepresentationPersistenceManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Memories.framework/PHAssetRepresentationPersistenceManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Memories.framework/Memories (4267.0.31)
 */

@interface PHAssetRepresentationPersistenceManager : VEiOSSharedObject <PHAssetRepresentationDownloadOperationDelegate, PHPhotoLibraryChangeObserver> {
    NSMapTable * _assetRepresentationToPersistenceObserverMap;
    bool  _bulkAssetRegistrationRequestCount;
    unsigned long long  _cellularAuthorization;
    NSMutableSet * _deletedLocalIdentifiers;
    NSOperationQueue * _downloadQueue;
    NSRecursiveLock * _downloadsLock;
    NSMutableArray * _fetchResults;
    Reachability * _hostReachability;
    Reachability * _internetReachability;
    NSMapTable * _localIdentifierToAssetRepresentationMap;
    NSRecursiveLock * _observerLock;
    bool  _online;
    PHAssetRepresentation * _pendingAssetRepresentation;
    NSMutableArray * _pendingRegistrationLocalIDs;
    unsigned long long  _reachabilityStatus;
    NSMutableSet * _recentDownloads;
    NSMutableDictionary * _recentDownloadsDict;
    NSMutableDictionary * _requestedDownloadsDict;
    NSHashTable * _universalPersistenceObservers;
    NSMutableSet * _unreadDownloads;
    Reachability * _wifiReachability;
}

@property (nonatomic, retain) NSMapTable *assetRepresentationToPersistenceObserverMap;
@property (nonatomic) bool bulkAssetRegistrationRequestCount;
@property (nonatomic) unsigned long long cellularAuthorization;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSMutableSet *deletedLocalIdentifiers;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSOperationQueue *downloadQueue;
@property (nonatomic, retain) NSRecursiveLock *downloadsLock;
@property (nonatomic, retain) NSMutableArray *fetchResults;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) Reachability *hostReachability;
@property (nonatomic, retain) Reachability *internetReachability;
@property (nonatomic, retain) NSMapTable *localIdentifierToAssetRepresentationMap;
@property (nonatomic, retain) NSRecursiveLock *observerLock;
@property (getter=isOnline, nonatomic) bool online;
@property (nonatomic, retain) PHAssetRepresentation *pendingAssetRepresentation;
@property (nonatomic, retain) NSMutableArray *pendingRegistrationLocalIDs;
@property (nonatomic) unsigned long long reachabilityStatus;
@property (nonatomic, retain) NSMutableSet *recentDownloads;
@property (nonatomic, retain) NSMutableDictionary *recentDownloadsDict;
@property (nonatomic, retain) NSMutableDictionary *requestedDownloadsDict;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSHashTable *universalPersistenceObservers;
@property (nonatomic, retain) NSMutableSet *unreadDownloads;
@property (nonatomic, retain) Reachability *wifiReachability;

+ (void)purgeSharedInstance;
+ (id)sharedManager;

- (void).cxx_destruct;
- (id)assetRepresentationToPersistenceObserverMap;
- (void)beginBulkAssetRegistration;
- (bool)bulkAssetRegistrationRequestCount;
- (void)cancelAllDownloads;
- (void)cancelDownloadOfAssetRepresentation:(id)arg1;
- (unsigned long long)cellularAuthorization;
- (void)clearStaticCaches;
- (void)dealloc;
- (id)deletedLocalIdentifiers;
- (void)downloadOperation:(id)arg1 didProgess:(double)arg2;
- (void)downloadOperationDidFinish:(id)arg1;
- (void)downloadOperationDidStart:(id)arg1;
- (id)downloadQueue;
- (id)downloadsLock;
- (void)endBulkAssetRegistration;
- (void)enumerateObserversOfAssetRepresentation:(id)arg1 withBlock:(id /* block */)arg2;
- (id)fetchResults;
- (id)hostReachability;
- (id)init;
- (id)internetReachability;
- (bool)isOnline;
- (void)issueRequestedDownloads;
- (void)loadRecentDownloads;
- (void)loadRequestedDownloads;
- (id)localIdentifierToAssetRepresentationMap;
- (void)markAssetRepresentationAsRecent:(id)arg1;
- (void)markAssetRepresentationAsRequested:(id)arg1;
- (void)markAssetRepresentationAsUnread:(id)arg1;
- (unsigned long long)numberOfRequestedDownloads;
- (unsigned long long)numberOfUnreadDownloads;
- (id)observerLock;
- (id)pendingAssetRepresentation;
- (id)pendingRegistrationLocalIDs;
- (void)photoLibraryDidChange:(id)arg1;
- (void)reachabilityChanged:(id)arg1;
- (unsigned long long)reachabilityStatus;
- (id)recentDownloads;
- (id)recentDownloadsDict;
- (id)recentDownloadsPath;
- (id)recentlyDownloadedAssetRepresentations;
- (void)registerAssetRepresentation:(id)arg1;
- (void)registerObserver:(id)arg1 forAssetRepresentation:(id)arg2;
- (void)requestDownloadOfAssetRepresentation:(id)arg1;
- (void)requestDownloadOfAssetRepresentation:(id)arg1 userInitiated:(bool)arg2;
- (id)requestedDownloadsDict;
- (id)requestedDownloadsPath;
- (void)resetUnreadDownloads;
- (void)saveRecentDownloads;
- (void)saveRequestedDownloads;
- (void)setAssetRepresentationToPersistenceObserverMap:(id)arg1;
- (void)setBulkAssetRegistrationRequestCount:(bool)arg1;
- (void)setCellularAuthorization:(unsigned long long)arg1;
- (void)setDeletedLocalIdentifiers:(id)arg1;
- (void)setDownloadQueue:(id)arg1;
- (void)setDownloadsLock:(id)arg1;
- (void)setFetchResults:(id)arg1;
- (void)setHostReachability:(id)arg1;
- (void)setInternetReachability:(id)arg1;
- (void)setLocalIdentifierToAssetRepresentationMap:(id)arg1;
- (void)setObserverLock:(id)arg1;
- (void)setOnline:(bool)arg1;
- (void)setPendingAssetRepresentation:(id)arg1;
- (void)setPendingRegistrationLocalIDs:(id)arg1;
- (void)setPersistenceState:(unsigned long long)arg1 ofAssetRepresentation:(id)arg2;
- (void)setReachabilityStatus:(unsigned long long)arg1;
- (void)setRecentDownloads:(id)arg1;
- (void)setRecentDownloadsDict:(id)arg1;
- (void)setRequestedDownloadsDict:(id)arg1;
- (void)setUniversalPersistenceObservers:(id)arg1;
- (void)setUnreadDownloads:(id)arg1;
- (void)setWifiReachability:(id)arg1;
- (void)submitDownloadOperationForAssetRepresentation:(id)arg1 userInitiated:(bool)arg2;
- (id)universalPersistenceObservers;
- (void)unmarkAssetRepresentationAsRecent:(id)arg1;
- (void)unmarkAssetRepresentationAsRequested:(id)arg1;
- (id)unreadDownloadedAssetRepresentations;
- (id)unreadDownloads;
- (void)unregisterAssetRepresentation:(id)arg1;
- (void)unregisterObserver:(id)arg1;
- (void)unregisterObserver:(id)arg1 forAssetRepresentation:(id)arg2;
- (void)updateOnlineStatus;
- (id)wifiReachability;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

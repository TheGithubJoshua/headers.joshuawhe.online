<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUPhotoEditLevelSlider.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosEditUI.framework/PUPhotoEditLevelSlider.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosEditUI.framework/PhotosEditUI (1)
 */

@interface PUPhotoEditLevelSlider : UIView <PUPhotoEditLayoutStaticAdaptable> {
    UIView * __sliderContentView;
    PUAdjustmentsMode * _adjustmentsMode;
    double  _baseValue;
    bool  _baseValueIndicatorHidden;
    UIView * _baseValueIndicatorView;
    NSArray * _baseValueIndicatorViewConstraints;
    NSLayoutConstraint * _baseValueIndicatorViewPositionConstraint;
    struct CGSize { 
        double width; 
        double height; 
    }  _contentSize;
    NSArray * _contentViewConstraints;
    NSLayoutConstraint * _contentViewOffsetConstraint;
    double  _currentValue;
    bool  _directionReversed;
    double  _identityOffset;
    double  _identityValue;
    long long  _layoutOrientation;
    UIView * _levelIndicatorView;
    NSArray * _levelIndicatorViewConstraints;
    NSLayoutConstraint * _levelIndicatorViewOffsetConstraint;
    NSLayoutConstraint * _levelIndicatorViewSpanConstraint;
    double  _maxValue;
    double  _minValue;
    double  _pointsPerUnitAboveIdentity;
    double  _pointsPerUnitBelowIdentity;
    bool  _scaleFactorsAreValid;
}

@property (nonatomic, retain) PUAdjustmentsMode *adjustmentsMode;
@property (nonatomic) double baseValue;
@property (getter=isBaseValueIndicatorHidden, nonatomic) bool baseValueIndicatorHidden;
@property (nonatomic) struct CGSize { double x1; double x2; } contentSize;
@property (nonatomic) double currentValue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDirectionReversed, nonatomic) bool directionReversed;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double identityOffset;
@property (nonatomic) double identityValue;
@property (nonatomic, readonly) long long layoutOrientation;
@property (nonatomic) double maxValue;
@property (nonatomic) double minValue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool wantsLevelIndicator;

- (void).cxx_destruct;
- (double)_baseValueIndicatorOffset;
- (double)_contentOffsetForLevelValue:(double)arg1;
- (void)_invalidateContentViewConstraints;
- (double)_levelIndicatorOffset;
- (double)_levelIndicatorWidth;
- (id)_sliderContentView;
- (void)_updateBaseValueIndicatorVisibiliyAnimated:(bool)arg1;
- (void)_updateConversionFactorsIfNeeded;
- (void)_updateLevelDisplay;
- (id)adjustmentsMode;
- (double)baseValue;
- (struct CGSize { double x1; double x2; })contentSize;
- (double)currentValue;
- (double)identityOffset;
- (double)identityValue;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)invalidateConversionFactors;
- (bool)isBaseValueIndicatorHidden;
- (bool)isDirectionReversed;
- (long long)layoutOrientation;
- (double)levelValueForOffset:(double)arg1;
- (double)maxValue;
- (double)minValue;
- (double)offsetForLevelValue:(double)arg1;
- (id)preferredSliderContentView;
- (void)setAdjustmentsMode:(id)arg1;
- (void)setBaseValue:(double)arg1;
- (void)setBaseValueIndicatorHidden:(bool)arg1;
- (void)setBaseValueIndicatorHidden:(bool)arg1 animated:(bool)arg2;
- (void)setBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setCurrentValue:(double)arg1;
- (void)setDirectionReversed:(bool)arg1;
- (void)setIdentityValue:(double)arg1;
- (void)setMaxValue:(double)arg1;
- (void)setMinValue:(double)arg1;
- (void)setupWithLayoutOrientation:(long long)arg1;
- (void)updateConstraints;
- (bool)wantsLevelIndicator;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

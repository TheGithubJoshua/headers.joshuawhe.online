<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUPhotoEditResourceLoader.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosEditUI.framework/PUPhotoEditResourceLoader.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosEditUI.framework/PhotosEditUI (1)
 */

@interface PUPhotoEditResourceLoader : NSObject {
    PUPhotoEditResourceLoadRequest * __currentRequest;
    PHResourceDownloadRequest * __downloadRequest;
    unsigned long long  __downloadSignpostId;
    NSMutableArray * __enqueuedRequests;
    <PUEditableAsset> * _asset;
    long long  _assetRawPropertyCheckState;
    bool  _loadingMedia;
    PUEditableMediaProvider * _mediaProvider;
    long long  _resourcesAvailability;
}

@property (setter=_setCurrentRequest:, nonatomic, retain) PUPhotoEditResourceLoadRequest *_currentRequest;
@property (setter=_setDownloadRequest:, nonatomic, retain) PHResourceDownloadRequest *_downloadRequest;
@property (nonatomic) unsigned long long _downloadSignpostId;
@property (setter=_setEnqueuedRequests:, nonatomic, retain) NSMutableArray *_enqueuedRequests;
@property (nonatomic, readonly) <PUEditableAsset> *asset;
@property (nonatomic, readonly) long long assetRawPropertyCheckState;
@property (getter=isDownloadingResources, nonatomic, readonly) bool downloadingResources;
@property (getter=isLoadingMedia, setter=_setLoadingMedia:, nonatomic) bool loadingMedia;
@property (nonatomic, readonly) PUEditableMediaProvider *mediaProvider;
@property (setter=_setResourcesAvailability:, nonatomic) long long resourcesAvailability;
@property (getter=areResourcesAvailable, nonatomic, readonly) bool resourcesAvailable;

- (void).cxx_destruct;
- (bool)_assetNeedsImageURLLoaded;
- (bool)_assetNeedsVideoLoaded;
- (void)_checkIfDownloadRequiredWithRequest:(id)arg1;
- (void)_checkIfShouldUseRawWithRequest:(id)arg1;
- (id)_currentRequest;
- (void)_dequeueRequestIfNeeded;
- (id)_downloadRequest;
- (void)_downloadSignpostBegin;
- (void)_downloadSignpostEnd;
- (void)_downloadSignpostEvent:(const char *)arg1;
- (unsigned long long)_downloadSignpostId;
- (id)_enqueuedRequests;
- (void)_fetchMediaForRequest:(id)arg1 result:(id)arg2;
- (void)_fetchResourcesWithRequest:(id)arg1;
- (void)_handleDidLoadAdjustmentData:(id)arg1 forAsset:(id)arg2 completion:(id /* block */)arg3;
- (void)_handleDownloadCompletedWithRequest:(id)arg1 success:(bool)arg2 canceled:(bool)arg3 error:(id)arg4;
- (void)_handleDownloadRequired:(bool)arg1 withRequest:(id)arg2 downloadRequest:(id)arg3;
- (void)_handleSuccess:(bool)arg1 withResult:(id)arg2 forRequest:(id)arg3 error:(id)arg4;
- (void)_initiateRequest:(id)arg1;
- (void)_loadAdjustmentsIfNeededWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (int)_loadImageIfNeededWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (int)_loadImageURLIfNeededWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (int)_loadVideoIfNeededWithRequest:(id)arg1 completion:(id /* block */)arg2;
- (void)_setCurrentRequest:(id)arg1;
- (void)_setDownloadRequest:(id)arg1;
- (void)_setEnqueuedRequests:(id)arg1;
- (void)_setLoadingMedia:(bool)arg1;
- (void)_setResourcesAvailability:(long long)arg1;
- (void)_updateEditModel:(id)arg1 withAsset:(id)arg2;
- (bool)areResourcesAvailable;
- (id)asset;
- (long long)assetRawPropertyCheckState;
- (void)cancelAllRequests;
- (void)enqueueRequest:(id)arg1;
- (id)initWithAsset:(id)arg1 mediaProvider:(id)arg2;
- (bool)isDownloadingResources;
- (bool)isLoadingMedia;
- (id)mediaProvider;
- (long long)resourcesAvailability;
- (void)set_downloadSignpostId:(unsigned long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

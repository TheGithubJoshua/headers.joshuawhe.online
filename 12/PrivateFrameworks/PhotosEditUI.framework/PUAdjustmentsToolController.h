<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUAdjustmentsToolController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosEditUI.framework/PUAdjustmentsToolController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosEditUI.framework/PhotosEditUI (1)
 */

@interface PUAdjustmentsToolController : PUPhotoEditToolController <PUAdjustmentsModeBarDataSource, PUAdjustmentsModeBarDelegate, PUPhotoEditVisualLevelSliderDataSource, UIGestureRecognizerDelegate, UIScrollViewDelegate> {
    NSArray * __allAvailableModes;
    PXUISnappingController * __snappingController;
    UIScrollView * _adjustmentScrollView;
    NSArray * _adjustmentScrollViewConstraints;
    PUAdjustmentsModeBar * _adjustmentsModeBar;
    NSArray * _adjustmentsModeBarConstraints;
    NSMutableSet * _cleanSliderThumbnailsModes;
    double  _currentModeLevelSliderOffset;
    struct CGPoint { 
        double x; 
        double y; 
    }  _interactionInitialScrollOffset;
    long long  _interactionMode;
    double  _interactiveModeTransitionStartOffset;
    PUAdjustmentsMode * _lastUsedMode;
    NSMapTable * _levelSlidersByMode;
    bool  _ppt_EverAdjusted;
    double  _ppt_scrollDelta;
    double  _scrollViewModeSwitchSideOriginOffset;
    NSMapTable * _sliderThumbnailsByModeAndIntensity;
    PUAdjustmentsStatisticsCache * _statisticsCache;
    long long  _viewLoadingStartTime;
}

@property (setter=_setSnappingController:, nonatomic, retain) PXUISnappingController *_snappingController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) PUAdjustmentsToolControllerSpec *spec;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (double)_adjustmentScrollViewOffsetForLevel:(double)arg1 inMode:(id)arg2;
- (id)_allAvailableModes;
- (void)_copyAdjustmentValuesFromModel:(id)arg1;
- (id)_existingLevelSliderForMode:(id)arg1;
- (void)_finishCurentInteraction;
- (void)_generateThumbnailsIfNeededForSlider:(id)arg1 mode:(id)arg2;
- (void)_handleModePickerCancelButton:(id)arg1;
- (void)_invalidateVisualSliderThumbnailsForAllModes;
- (void)_invalidateVisualSliderThumbnailsForMode:(id)arg1;
- (double)_levelForAdjustmentScrollViewOffset:(double)arg1 inMode:(id)arg2;
- (id)_levelSliderForMode:(id)arg1;
- (void)_ppt_scrollAfterDelay:(id /* block */)arg1;
- (void)_reloadLayoutDependentUIFromOrientation:(long long)arg1 toOrientation:(long long)arg2 withTransitionCoordinator:(id)arg3;
- (void)_resyncAdjustmentScrollViewOffset;
- (void)_saveVisualSliderImage:(id)arg1 forMode:(id)arg2 intensityIndex:(long long)arg3;
- (void)_setCurrentModeLevelSliderOffset:(double)arg1 animatedBaseValueIndicator:(bool)arg2;
- (void)_setSnappingController:(id)arg1;
- (double)_sliderLength;
- (id)_snappingController;
- (void)_updateAdjustmentScrollView;
- (void)_updateAdjustmentsModeBar;
- (void)_updateAlternateToolbarButton;
- (void)_updateBackgroundColorAnimated:(bool)arg1;
- (void)_updateSubviewsOrdering;
- (void)_updateValuesForLevelSlider:(id)arg1 mode:(id)arg2 animatedBaseValueIndicator:(bool)arg3;
- (id)_visualSliderImageForMode:(id)arg1 intensityIndex:(long long)arg2;
- (id)adjustmentModesForAdjustmentsModeBar:(id)arg1;
- (void)adjustmentsModeBar:(id)arg1 didTapModeToggle:(id)arg2;
- (bool)adjustmentsModeBar:(id)arg1 isEnabledForMode:(id)arg2;
- (double)adjustmentsModeBar:(id)arg1 levelForMode:(id)arg2;
- (id)adjustmentsModeBar:(id)arg1 levelSliderForMode:(id)arg2;
- (void)adjustmentsModeBarDidChangeModeListExpandedState:(id)arg1;
- (void)adjustmentsModeBarDidChangeSelectedMode:(id)arg1;
- (void)basePhotoInvalidated;
- (bool)canResetToDefaultValue;
- (void)didBecomeActiveTool;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)installLivePhotoPlaybackGestureRecognizer:(id)arg1;
- (bool)installTogglePreviewGestureRecognizer:(id)arg1;
- (void)invalidateStatisticsCacheWithEditModel:(id)arg1 andUpdate:(bool)arg2;
- (void)loadView;
- (id)localizedName;
- (id)localizedResetToolActionTitle;
- (void)mediaViewIsReady;
- (void)photoEditModelDidChange;
- (void)ppt_scrollSelectedSliderByDelta;
- (void)ppt_selectBWSlider:(id /* block */)arg1;
- (void)ppt_selectColorSlider:(id /* block */)arg1;
- (void)ppt_selectLightSlider:(id /* block */)arg1;
- (void)ppt_setSteps:(long long)arg1;
- (id)preferredPreviewBackgroundColor;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })preferredPreviewViewInsets;
- (void)resetToDefaultValueAnimated:(bool)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (id)selectedToolbarIcon;
- (void)setLayoutOrientation:(long long)arg1;
- (void)setLayoutOrientation:(long long)arg1 withTransitionCoordinator:(id)arg2;
- (void)setupWithPhotoEditModel:(id)arg1 editSource:(id)arg2 valuesCalculator:(id)arg3;
- (void)specDidChange;
- (id)toolbarIcon;
- (void)updateViewConstraints;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(bool)arg1;
- (id)visualLevelSlider:(id)arg1 imageForIntensityIndex:(long long)arg2;
- (long long)visualLevelSliderNumberOfThumbnails:(id)arg1;
- (void)willBecomeActiveTool;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUTrimToolController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosEditUI.framework/PUTrimToolController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosEditUI.framework/PhotosEditUI (1)
 */

@interface PUTrimToolController : UIViewController <ISChangeObserver, PULivePhotoKeyFrameSelectionViewControllerDelegate, PULivePhotoTrimScrubberDelegate, UIPopoverPresentationControllerDelegate> {
    ISWrappedAVPlayer * __avPlayer;
    PLPhotoEditRenderer * __renderer;
    bool  _canEditStillFrameTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _currentStillFrameTime;
    bool  _didPerformInitialVideoCompositionUpdate;
    bool  _disabled;
    UIView * _disabledOverlayView;
    PLEditSource * _editSource;
    bool  _lastLivePhotoRenderIncludesVisualChanges;
    PULivePhotoKeyFrameSelectionViewController * _livePhotoKeyFramePicker;
    PHLivePhotoView * _livePhotoView;
    double  _minimumTrimDuration;
    PLPhotoEditMutableModel * _photoEditModel;
    id  _playerTimeObservationToken;
    double  _previouslyOpenedWidth;
    PUPhotoEditSnapStripView * _snapStripView;
    PULivePhotoTrimScrubber * _trimScrubber;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _unadjustedStillImageTime;
}

@property (setter=_setAVPlayer:, nonatomic, retain) ISWrappedAVPlayer *_avPlayer;
@property (setter=_setRenderer:, nonatomic, retain) PLPhotoEditRenderer *_renderer;
@property (nonatomic) bool canEditStillFrameTime;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } currentStillFrameTime;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool disabled;
@property (nonatomic, retain) PLEditSource *editSource;
@property (readonly) unsigned long long hash;
@property (nonatomic) PULivePhotoKeyFrameSelectionViewController *livePhotoKeyFramePicker;
@property (nonatomic, readonly) PHLivePhotoView *livePhotoView;
@property (nonatomic) double minimumTrimDuration;
@property (nonatomic, retain) PLPhotoEditMutableModel *photoEditModel;
@property (nonatomic, retain) UIImage *placeholderImage;
@property (nonatomic, retain) id playerTimeObservationToken;
@property (nonatomic) double previouslyOpenedWidth;
@property (readonly) Class superclass;
@property (nonatomic) struct { long long x1; int x2; unsigned int x3; long long x4; } unadjustedStillImageTime;

- (void).cxx_destruct;
- (id)_avPlayer;
- (void)_avPlayerTimeDidChange:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)_createRendererIfNeeded;
- (id)_currentLivePhoto;
- (id)_currentVideoAsset;
- (id)_currentVideoPlayerItem;
- (void)_livePhotoKeyFramePickerDidDismiss:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_presentationRectFromLoupeRect;
- (id)_renderer;
- (void)_resetScrubberToStillPhotoFrame;
- (void)_setAVPlayer:(id)arg1;
- (void)_setRenderer:(id)arg1;
- (void)_updateLivePhotoViewTrim;
- (void)_updatePassivePlayhead;
- (void)_updatePhotoEditModel;
- (void)_updateScrubberContents;
- (void)_updateScrubberTimes;
- (void)_updateSnapStripView;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (bool)canEditStillFrameTime;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })currentStillFrameTime;
- (bool)disabled;
- (id)editSource;
- (id)initWithLivePhotoView:(id)arg1;
- (id)livePhotoKeyFramePicker;
- (void)livePhotoRenderDidChange:(bool)arg1;
- (id)livePhotoView;
- (double)minimumTrimDuration;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)photoEditModel;
- (id)placeholderImage;
- (id)playerTimeObservationToken;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (bool)popoverPresentationControllerShouldDismissPopover:(id)arg1;
- (double)previouslyOpenedWidth;
- (void)setCanEditStillFrameTime:(bool)arg1;
- (void)setCurrentStillFrameTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setDisabled:(bool)arg1;
- (void)setEditSource:(id)arg1;
- (void)setLivePhotoKeyFramePicker:(id)arg1;
- (void)setMinimumTrimDuration:(double)arg1;
- (void)setPhotoEditModel:(id)arg1;
- (void)setPlaceholderImage:(id)arg1;
- (void)setPlayerTimeObservationToken:(id)arg1;
- (void)setPreviouslyOpenedWidth:(double)arg1;
- (void)setUnadjustedStillImageTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (bool)trimScrubber:(id)arg1 canBeginInteractivelyEditingElement:(long long)arg2;
- (void)trimScrubber:(id)arg1 didBeginInteractivelyEditingElement:(long long)arg2;
- (void)trimScrubber:(id)arg1 didChangeTimeForElement:(long long)arg2;
- (void)trimScrubber:(id)arg1 didEndInteractivelyEditingElement:(long long)arg2 successful:(bool)arg3;
- (void)trimScrubberAssetDurationDidChange:(id)arg1;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })unadjustedStillImageTime;
- (void)userDidRequestToMakeKeyPhoto:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VSAppSettingsFacade.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideoSubscriberAccountUI.framework/VSAppSettingsFacade.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideoSubscriberAccountUI.framework/VideoSubscriberAccountUI (291.60.3)
 */

@interface VSAppSettingsFacade : NSObject {
    NSOperation * _currentPresentationOperation;
    NSArray * _decidedApps;
    NSArray * _featuredAdamIDs;
    VSIdentityProvider * _identityProvider;
    VSOptional * _identityProviderID;
    NSArray * _knownAppBundles;
    VSAppSettingsViewModel * _mvpdAppSettingsViewModel;
    UIViewController * _mvpdInstallPromptPresentingViewController;
    bool  _needsPresentationOfMVPDAppInstallPromptIfAvailable;
    bool  _needsUpdateApps;
    NSOperationQueue * _privateQueue;
    int  _registrationToken;
    VSRestrictionsCenter * _restrictionsCenter;
    VSPersistentStorage * _storage;
    NSArray * _unredeemedVouchers;
    NSArray * _voucherApps;
}

@property (nonatomic, retain) NSOperation *currentPresentationOperation;
@property (nonatomic, copy) NSArray *decidedApps;
@property (nonatomic, copy) NSArray *featuredAdamIDs;
@property (nonatomic, retain) VSIdentityProvider *identityProvider;
@property (nonatomic, copy) VSOptional *identityProviderID;
@property (nonatomic, copy) NSArray *knownAppBundles;
@property (nonatomic, retain) VSAppSettingsViewModel *mvpdAppSettingsViewModel;
@property (nonatomic, retain) UIViewController *mvpdInstallPromptPresentingViewController;
@property (nonatomic) bool needsPresentationOfMVPDAppInstallPromptIfAvailable;
@property (nonatomic) bool needsUpdateApps;
@property (nonatomic, retain) NSOperationQueue *privateQueue;
@property (nonatomic) int registrationToken;
@property (nonatomic, retain) VSRestrictionsCenter *restrictionsCenter;
@property (nonatomic, retain) VSPersistentStorage *storage;
@property (nonatomic, copy) NSArray *unredeemedVouchers;
@property (nonatomic, copy) NSArray *voucherApps;

- (void).cxx_destruct;
- (id)_fetchOperationForAdamIDs:(id)arg1;
- (void)_setNeedsUpdateApps;
- (void)_updateApps;
- (id)autorelease;
- (id)currentPresentationOperation;
- (void)dealloc;
- (id)decidedApps;
- (id)featuredAdamIDs;
- (id)identityProvider;
- (id)identityProviderID;
- (id)init;
- (id)initWithStorage:(id)arg1 restrictionsCenter:(id)arg2;
- (id)knownAppBundles;
- (id)mvpdAppSettingsViewModel;
- (id)mvpdInstallPromptPresentingViewController;
- (bool)needsPresentationOfMVPDAppInstallPromptIfAvailable;
- (bool)needsUpdateApps;
- (void)presentMVPDAppInstallPromptFromViewController:(id)arg1;
- (id)privateQueue;
- (int)registrationToken;
- (oneway void)release;
- (id)restrictionsCenter;
- (id)retain;
- (void)setCurrentPresentationOperation:(id)arg1;
- (void)setDecidedApps:(id)arg1;
- (void)setFeaturedAdamIDs:(id)arg1;
- (void)setIdentityProvider:(id)arg1;
- (void)setIdentityProviderID:(id)arg1;
- (void)setKnownAppBundles:(id)arg1;
- (void)setMvpdAppSettingsViewModel:(id)arg1;
- (void)setMvpdInstallPromptPresentingViewController:(id)arg1;
- (void)setNeedsPresentationOfMVPDAppInstallPromptIfAvailable:(bool)arg1;
- (void)setNeedsUpdateApps:(bool)arg1;
- (void)setPrivateQueue:(id)arg1;
- (void)setRegistrationToken:(int)arg1;
- (void)setRestrictionsCenter:(id)arg1;
- (void)setStorage:(id)arg1;
- (void)setUnredeemedVouchers:(id)arg1;
- (void)setVoucherApps:(id)arg1;
- (bool)shouldShowMVPDAppInstallPrompt;
- (bool)shouldShowMVPDAppInstallPromptFromViewController:(id)arg1;
- (id)storage;
- (id)unredeemedVouchers;
- (id)voucherApps;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

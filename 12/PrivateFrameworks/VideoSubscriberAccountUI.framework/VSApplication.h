<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VSApplication.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideoSubscriberAccountUI.framework/VSApplication.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideoSubscriberAccountUI.framework/VideoSubscriberAccountUI (291.60.3)
 */

@interface VSApplication : NSObject <IKAppContextDelegate, IKApplication, VSStateMachineDelegate> {
    IKAppContext * _appContext;
    VSAppDeviceConfig * _appDeviceConfig;
    VSAuditToken * _auditToken;
    NSURL * _bootURL;
    NSHTTPCookieStorage * _cookieStorage;
    <VSApplicationDelegate> * _delegate;
    NSError * _failureToStart;
    bool  _shouldAllowRemoteInspection;
    VSStateMachine * _stateMachine;
}

@property (nonatomic, retain) IKAppContext *appContext;
@property (nonatomic, retain) VSAppDeviceConfig *appDeviceConfig;
@property (nonatomic, copy) VSAuditToken *auditToken;
@property (nonatomic, readonly, copy) NSURL *bootURL;
@property (nonatomic, retain) NSHTTPCookieStorage *cookieStorage;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <VSApplicationDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSError *failureToStart;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool shouldAllowRemoteInspection;
@property (nonatomic, retain) VSStateMachine *stateMachine;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)activeDocument;
- (id)appContext;
- (void)appContext:(id)arg1 didFailWithError:(id)arg2;
- (void)appContext:(id)arg1 didStartWithOptions:(id)arg2;
- (void)appContext:(id)arg1 didStopWithOptions:(id)arg2;
- (void)appContext:(id)arg1 evaluateAppJavaScriptInContext:(id)arg2;
- (bool)appContext:(id)arg1 validateDOMDocument:(id)arg2 inContext:(id)arg3 error:(id*)arg4;
- (id)appDeviceConfig;
- (void)appDocumentForDocument:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)appIdentifier;
- (bool)appIsTrusted;
- (id)appJSURL;
- (id)appLaunchParams;
- (id)auditToken;
- (id)bootURL;
- (id)cookieStorage;
- (void)dealloc;
- (id)delegate;
- (id)deviceConfigForContext:(id)arg1;
- (void)evaluate:(id /* block */)arg1 completionHandler:(id /* block */)arg2;
- (id)failureToStart;
- (id)init;
- (id)initWithBootURL:(id)arg1;
- (id)localStorage;
- (id)objectForMediaItem:(id)arg1;
- (id)objectForPlayer:(id)arg1;
- (id)objectForPlaylist:(id)arg1;
- (oneway void)release;
- (void)sendErrorWithMessage:(id)arg1;
- (void)setAppContext:(id)arg1;
- (void)setAppDeviceConfig:(id)arg1;
- (void)setAuditToken:(id)arg1;
- (void)setCookieStorage:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFailureToStart:(id)arg1;
- (void)setShouldAllowRemoteInspection:(bool)arg1;
- (void)setStateMachine:(id)arg1;
- (bool)shouldAllowRemoteInspection;
- (bool)shouldIgnoreJSValidation;
- (id)sourceApplicationAuditTokenDataForContext:(id)arg1;
- (id)sourceApplicationBundleIdentifierForContext:(id)arg1;
- (void)start;
- (id)stateMachine;
- (void)stop;
- (void)transitionToInvalidState;
- (void)transitionToNotifyingOfFailureToStartState;
- (void)transitionToReadyState;
- (void)transitionToStartingState;
- (void)transitionToStoppingState;
- (id)userDefaultsStorage;
- (id)vendorIdentifier;
- (id)vendorStorage;
- (id)viewElementRegistry;
- (id)xhrSessionConfigurationForContext:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CATOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Catalyst.framework/CATOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst (5.10)
 */

@interface CATOperation : NSOperation {
    NSUUID * _UUID;
    bool  _canCancel;
    long long  _completedUnitCount;
    NSDate * _createdDate;
    NSDate * _enqueuedDate;
    NSError * _error;
    NSDate * _finishedDate;
    unsigned long long  _phase;
    id  _resultObject;
    NSDate * _startedDate;
    long long  _totalUnitCount;
    NSDictionary * _userInfo;
    NSArray * mCallStackSymbols;
    NSLock * mLock;
    _CATObserverManager * mObserverManager;
    _Atomic int  mState;
}

@property (retain) NSUUID *UUID;
@property (readonly) bool canCancel;
@property long long completedUnitCount;
@property (retain) NSDate *createdDate;
@property (retain) NSDate *enqueuedDate;
@property (retain) NSError *error;
@property (retain) NSDate *finishedDate;
@property (readonly) bool isCanceled;
@property unsigned long long phase;
@property (retain) id resultObject;
@property (retain) NSDate *startedDate;
@property long long totalUnitCount;
@property (retain) NSDictionary *userInfo;

+ (bool)automaticallyNotifiesObserversOfCreatedDate;
+ (bool)automaticallyNotifiesObserversOfEnqueuedDate;
+ (bool)automaticallyNotifiesObserversOfFinishedDate;
+ (bool)automaticallyNotifiesObserversOfStartedDate;
+ (bool)automaticallyNotifiesObserversOfUUID;
+ (id)callStackSymbols;
+ (bool)isCancelable;
+ (id)keyPathsForValuesAffectingIsCanceled;

- (void).cxx_destruct;
- (id)UUID;
- (void)addObserver:(id)arg1;
- (void)addTarget:(id)arg1 selector:(SEL)arg2 forOperationEvents:(unsigned long long)arg3;
- (void)addTarget:(id)arg1 selector:(SEL)arg2 forOperationEvents:(unsigned long long)arg3 delegateQueue:(id)arg4;
- (void)addTarget:(id)arg1 selector:(SEL)arg2 forOperationEvents:(unsigned long long)arg3 userInfo:(id)arg4;
- (void)addTarget:(id)arg1 selector:(SEL)arg2 forOperationEvents:(unsigned long long)arg3 userInfo:(id)arg4 delegateQueue:(id)arg5;
- (bool)canCancel;
- (long long)completedUnitCount;
- (id)createdDate;
- (id)description;
- (void)endOperationSuccessfullyIfNeeded;
- (void)endOperationWithError:(id)arg1;
- (void)endOperationWithResultObject:(id)arg1;
- (id)enqueuedDate;
- (id)error;
- (void)finalizeOperation;
- (id)finishedDate;
- (id)init;
- (bool)isAsynchronous;
- (bool)isCanceled;
- (bool)isExecuting;
- (bool)isFinished;
- (bool)isReady;
- (void)operationDidFinish;
- (void)operationWillEnqueueOntoOperationQueue:(id)arg1;
- (void)operationWillFinish;
- (void)operationWillStart;
- (unsigned long long)phase;
- (id)resultObject;
- (void)setCompletedUnitCount:(long long)arg1;
- (void)setCreatedDate:(id)arg1;
- (void)setEnqueuedDate:(id)arg1;
- (void)setError:(id)arg1;
- (void)setFinishedDate:(id)arg1;
- (void)setPhase:(unsigned long long)arg1;
- (void)setResultObject:(id)arg1;
- (void)setStartedDate:(id)arg1;
- (void)setTotalUnitCount:(long long)arg1;
- (void)setUUID:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (void)start;
- (id)startedDate;
- (id)stateDescription;
- (long long)totalUnitCount;
- (id)userInfo;
- (bool)whenStateIs:(int)arg1 atomicallySwapWith:(int)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WUIWeatherConditionBackgroundView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WeatherUI.framework/WUIWeatherConditionBackgroundView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WeatherUI.framework/WeatherUI (1)
 */

@interface WUIWeatherConditionBackgroundView : UIView {
    long long  _activeIndex;
    WUIDynamicWeatherBackground * _background;
    NSArray * _cities;
    NSObject<OS_dispatch_source> * _crossfadeEffectTimer;
    WUIDynamicWeatherBackgroundInteractiveTransaction * _crossfadeTransaction;
    bool  _hasViewAppeared;
    bool  _hidesConditions;
    UIImageView * _introductionImageView;
    WUIWeatherCondition * _leftCondition;
    WUIWeatherCondition * _rightCondition;
    double  _scrollOffset;
}

@property (nonatomic, readonly) WUIDynamicWeatherBackground *background;
@property (nonatomic, retain) NSArray *cities;
@property (nonatomic, readonly) NSArray *conditions;
@property (nonatomic, retain) NSObject<OS_dispatch_source> *crossfadeEffectTimer;
@property (nonatomic, retain) WUIDynamicWeatherBackgroundInteractiveTransaction *crossfadeTransaction;
@property (nonatomic) bool hasViewAppeared;
@property (nonatomic) bool hidesConditions;
@property (nonatomic, retain) UIImageView *introductionImageView;
@property (nonatomic, retain) WUIWeatherCondition *leftCondition;
@property (nonatomic, retain) WUIWeatherCondition *rightCondition;
@property (nonatomic) double scrollOffset;

- (void).cxx_destruct;
- (void)_addBackAllLayers;
- (void)_cityDidUpdate:(id)arg1;
- (id)_conditionAtIndex:(unsigned long long)arg1;
- (id)_conditions;
- (void)_removeSideLayers;
- (void)_setCondition:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)animateTransitionToSize:(struct CGSize { double x1; double x2; })arg1;
- (id)background;
- (id)cities;
- (id)conditions;
- (id)crossfadeEffectTimer;
- (id)crossfadeTransaction;
- (void)dealloc;
- (void)didTransitionToSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)hasViewAppeared;
- (bool)hidesConditions;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)introductionImageView;
- (void)layoutSubviews;
- (id)leftCondition;
- (void)prepareToResume;
- (void)prepareToSuspend;
- (id)relinquishConditionViewForCityAtIndex:(long long)arg1;
- (id)rightCondition;
- (void)saveImageForKeyCondition;
- (double)scrollOffset;
- (void)setCities:(id)arg1;
- (void)setCities:(id)arg1 activeCityIndex:(long long)arg2;
- (void)setCities:(id)arg1 activeCityIndex:(long long)arg2 activeCityLiveConditionOnly:(bool)arg3 animationDuration:(double)arg4;
- (void)setCities:(id)arg1 activeCityIndex:(long long)arg2 animationDuration:(double)arg3;
- (void)setCrossfadeEffectTimer:(id)arg1;
- (void)setCrossfadeTransaction:(id)arg1;
- (void)setHasViewAppeared:(bool)arg1;
- (void)setHidesConditions:(bool)arg1;
- (void)setIntroductionImageView:(id)arg1;
- (void)setLeftCondition:(id)arg1;
- (void)setRightCondition:(id)arg1;
- (void)setScrollEnded;
- (void)setScrollOffset:(double)arg1;
- (void)updateConditionIfNeededWithCities:(id)arg1 activeCityIndex:(long long)arg2;
- (void)updateConditionsAboutCityIndex:(long long)arg1;
- (void)useConditionView:(id)arg1 activeCityIndex:(unsigned long long)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

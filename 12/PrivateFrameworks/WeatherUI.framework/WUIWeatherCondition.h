<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WUIWeatherCondition.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/WeatherUI.framework/WUIWeatherCondition.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/WeatherUI.framework/WeatherUI (1)
 */

@interface WUIWeatherCondition : NSObject <CALayerDelegate> {
    unsigned long long  _CAMLState;
    double  _alpha;
    City * _city;
    long long  _condition;
    bool  _forcesCondition;
    long long  _forcesNight;
    NSMutableArray * _gyroLayers;
    bool  _hidden;
    bool  _isRotating;
    CALayer * _layer;
    NSString * _loadedFileName;
    bool  _multiCityMode;
    bool  _playing;
    CALayer * _rootLayer;
    bool  _shouldRasterize;
    double  _speed;
    CAStateController * _stateController;
    double  _timeOffset;
}

@property (nonatomic) unsigned long long CAMLState;
@property (nonatomic) double alpha;
@property (nonatomic) City *city;
@property (nonatomic) long long condition;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool forcesCondition;
@property (nonatomic) long long forcesNight;
@property (nonatomic, retain) NSMutableArray *gyroLayers;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hidden;
@property (nonatomic) bool isRotating;
@property (nonatomic, readonly) CALayer *layer;
@property (nonatomic, retain) NSString *loadedFileName;
@property (nonatomic) bool multiCityMode;
@property (nonatomic) bool playing;
@property (nonatomic) bool shouldRasterize;
@property (nonatomic) double speed;
@property (nonatomic, retain) CAStateController *stateController;
@property (readonly) Class superclass;
@property (nonatomic) double timeOffset;

+ (void)initialize;

- (void).cxx_destruct;
- (unsigned long long)CAMLState;
- (bool)_interfaceConsideredPortraitForCAMLLayer;
- (bool)_interfaceConsideredPortraitForCAMLLayerWithSize:(struct CGSize { double x1; double x2; })arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (double)alpha;
- (id)city;
- (long long)condition;
- (void)dealloc;
- (bool)forcesCondition;
- (long long)forcesNight;
- (id)gyroLayers;
- (bool)hidden;
- (id)init;
- (bool)isRotating;
- (id)layer;
- (void)layoutSublayersOfLayer:(id)arg1;
- (id)loadedFileName;
- (bool)multiCityMode;
- (void)pause;
- (bool)playing;
- (void)resume;
- (void)setAlpha:(double)arg1;
- (void)setAlpha:(double)arg1 animationDuration:(double)arg2;
- (void)setCAMLLayerStateForInterfaceOrientation:(long long)arg1 animated:(bool)arg2;
- (void)setCAMLState:(unsigned long long)arg1;
- (void)setCity:(id)arg1;
- (void)setCity:(id)arg1 animationDuration:(double)arg2;
- (void)setCondition:(long long)arg1;
- (void)setCondition:(long long)arg1 animationDuration:(double)arg2;
- (void)setCorrectStateForCurrentOrientationAndMode;
- (void)setForcesCondition:(bool)arg1;
- (void)setForcesNight:(long long)arg1;
- (void)setGyroLayers:(id)arg1;
- (void)setHidden:(bool)arg1;
- (void)setIsRotating:(bool)arg1;
- (void)setLoadedFileName:(id)arg1;
- (void)setMultiCityMode:(bool)arg1;
- (void)setPlaying:(bool)arg1;
- (void)setShouldRasterize:(bool)arg1;
- (void)setSpeed:(double)arg1;
- (void)setStateController:(id)arg1;
- (void)setTime:(float)arg1;
- (void)setTimeOffset:(double)arg1;
- (bool)shouldRasterize;
- (double)speed;
- (id)stateController;
- (double)timeOffset;
- (void)transitionToSize:(struct CGSize { double x1; double x2; })arg1 animated:(bool)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

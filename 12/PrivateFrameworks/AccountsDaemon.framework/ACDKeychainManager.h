<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ACDKeychainManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AccountsDaemon.framework/ACDKeychainManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AccountsDaemon.framework/AccountsDaemon (113)
 */

@interface ACDKeychainManager : NSObject

+ (bool)_accountSyncItemExistsForServiceName:(id)arg1 hostname:(id)arg2;
+ (bool)_accountSyncItemExistsForServiceName:(id)arg1 username:(id)arg2;
+ (void)_accountTypeIdentifierFromComponents:(id)arg1 handler:(id /* block */)arg2;
+ (void)_createNoSyncOAuthTokens:(id)arg1 account:(id)arg2 clientID:(id)arg3;
+ (id)_credentialForAccountWithID:(id)arg1 accountTypeID:(id)arg2 credentialType:(id)arg3 clientID:(id)arg4 allowAdditionalAccountTypeSegment:(bool)arg5 options:(id)arg6 error:(id*)arg7;
+ (bool)_dataclassSyncItemExistsForServiceName:(id)arg1 username:(id)arg2;
+ (void)_fallbackToUnsyncedOAuthTokens:(id)arg1;
+ (id)_fetchOptionsForAccount:(id)arg1;
+ (id)_itemForServiceName:(id)arg1 username:(id)arg2 accessGroup:(id)arg3 options:(id)arg4 error:(id*)arg5;
+ (void)_keychainLock_addItem:(id)arg1 forServiceName:(id)arg2 username:(id)arg3 accessGroup:(id)arg4 accessibility:(id)arg5 syncable:(bool)arg6 requiresTouchID:(bool)arg7 error:(id*)arg8;
+ (bool)_keychainLock_removeItemForService:(id)arg1 username:(id)arg2 accessGroup:(id)arg3 options:(id)arg4 error:(id*)arg5;
+ (void)_keychainLock_updateItem:(id)arg1 existingPassword:(id)arg2 forServiceName:(id)arg3 username:(id)arg4 accessGroup:(id)arg5 accessibility:(id)arg6 options:(id)arg7 error:(id*)arg8;
+ (void)_migrateCredential:(id)arg1 forAccount:(id)arg2 clientID:(id)arg3;
+ (void)_removeCredentialForAccountWithUsername:(id)arg1 accountQualifiedUsername:(id)arg2 accountIdentifier:(id)arg3 accountTypeIdentifier:(id)arg4 credentialType:(id)arg5 clientID:(id)arg6 options:(id)arg7 error:(id*)arg8;
+ (void)_removeCredentialItemWithKey:(id)arg1 forAccountWithID:(id)arg2 username:(id)arg3 accountTypeID:(id)arg4 clientID:(id)arg5 options:(id)arg6 error:(id*)arg7;
+ (bool)_removeItemForService:(id)arg1 username:(id)arg2 accessGroup:(id)arg3 options:(id)arg4 error:(id*)arg5;
+ (void)_saveCredential:(id)arg1 forAccount:(id)arg2 clientID:(id)arg3 error:(id*)arg4;
+ (bool)_setAccountSyncItem:(id)arg1 hostname:(id)arg2 accessGroup:(id)arg3 accessibility:(id)arg4 options:(id)arg5 error:(id*)arg6;
+ (bool)_setAccountSyncItem:(id)arg1 username:(id)arg2 accessGroup:(id)arg3 accessibility:(id)arg4 options:(id)arg5 error:(id*)arg6;
+ (bool)_setAccountSyncMigrateItem:(id)arg1 username:(id)arg2 accessGroup:(id)arg3 accessibility:(id)arg4 options:(id)arg5 error:(id*)arg6;
+ (void)_setCredentialForAccount:(id)arg1 clientID:(id)arg2 handleCredentialItemRemovals:(bool)arg3 error:(id*)arg4;
+ (bool)_setDataclassSyncItem:(id)arg1 username:(id)arg2 accessGroup:(id)arg3 accessibility:(id)arg4 options:(id)arg5 error:(id*)arg6;
+ (void)_setItem:(id)arg1 forServiceName:(id)arg2 username:(id)arg3 accessGroup:(id)arg4 accessibility:(id)arg5 syncable:(bool)arg6 requiresTouchID:(bool)arg7 options:(id)arg8 error:(id*)arg9;
+ (void)_setNonPersistentCredentialTimerForAccount:(id)arg1;
+ (bool)_shouldSyncCredentialForAccount:(id)arg1;
+ (bool)accountSyncMigrated;
+ (id)accountSynciOSVersion;
+ (void)componentsFromKeychainServiceName:(id)arg1 handler:(id /* block */)arg2;
+ (bool)createAccountSyncItemForAccount:(id)arg1 clientID:(id)arg2 properties:(id)arg3 error:(id*)arg4;
+ (bool)createAccountSyncMigratedItemWithError:(id*)arg1;
+ (void)createDataclassAccountSyncItemForAccount:(id)arg1 withDataclassActions:(id)arg2;
+ (id)credentialForAccount:(id)arg1 clientID:(id)arg2;
+ (id)credentialForAccount:(id)arg1 clientID:(id)arg2 error:(id*)arg3;
+ (id)credentialForManagedAccountObject:(id)arg1;
+ (id)credentialForManagedAccountObject:(id)arg1 clientID:(id)arg2;
+ (id)credentialForManagedAccountObject:(id)arg1 clientID:(id)arg2 error:(id*)arg3;
+ (void)initialize;
+ (id)keychainAccounts;
+ (id)keychainDeletedAccounts;
+ (id)keychainDeletedContactAccounts;
+ (id)keychainDeletedHostnameAccounts;
+ (id)keychainHostnameAccounts;
+ (id)keychainServiceNameForClientID:(id)arg1 accountTypeIdentifier:(id)arg2 additionalAccountTypeSegment:(id)arg3 key:(id)arg4;
+ (void)makeItemInvisibleWithService:(id)arg1 andAccount:(id)arg2;
+ (bool)removeAccountSyncItemForAccount:(id)arg1 clientID:(id)arg2 properties:(id)arg3 error:(id*)arg4;
+ (void)removeCredentialForAccount:(id)arg1;
+ (void)removeCredentialForAccount:(id)arg1 clientID:(id)arg2;
+ (void)removeCredentialForAccount:(id)arg1 clientID:(id)arg2 error:(id*)arg3;
+ (void)removeCredentialForAccount:(id)arg1 error:(id*)arg2;
+ (void)removeCredentialForAccount:(id)arg1 key:(id)arg2 error:(id*)arg3;
+ (void)removeDataclassAccountSyncItemForAccount:(id)arg1;
+ (id)removeTombstonesForAccount:(id)arg1 clientID:(id)arg2 error:(id*)arg3;
+ (void)setAccountSynciOSVersion:(id)arg1;
+ (void)setCredentialForAccount:(id)arg1;
+ (void)setCredentialForAccount:(id)arg1 clientID:(id)arg2;
+ (void)setCredentialForAccount:(id)arg1 clientID:(id)arg2 error:(id*)arg3;
+ (void)setCredentialForAccount:(id)arg1 error:(id*)arg2;
+ (void)setCredentialForNewAccount:(id)arg1 clientID:(id)arg2 error:(id*)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

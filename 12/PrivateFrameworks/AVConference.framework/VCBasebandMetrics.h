<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCBasebandMetrics.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCBasebandMetrics.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCBasebandMetrics : NSObject {
    unsigned int  _averageBitrate;
    unsigned int  _averageBitrateLong;
    double  _bdcd;
    struct { 
        double time[15]; 
        double bdcd[15]; 
        double delay[15]; 
        int frontIndex; 
        int rearIndex; 
        unsigned int size; 
    }  _bdcdList;
    double  _expectedQueuingDelay;
    double  _expectedQueuingDelayLong;
    struct { 
        double time[15]; 
        unsigned int transmittedBytes[15]; 
        int frontIndex; 
        int rearIndex; 
        unsigned int size; 
    }  _infoList;
    bool  _isBDCDListReady;
    bool  _isTargetBitrateStabilized;
    struct { 
        int type; 
        unsigned short version; 
        double arrivalTime; 
        union { 
            struct { 
                unsigned short radioTechnology; 
                unsigned char transmissionAntenna; 
                unsigned short numberOfFlows; 
                unsigned char flowType; 
                BOOL transmissionPower; 
                unsigned int queueDepth1; 
                unsigned int queueDepth2; 
                unsigned int basebandTransmissionBytes; 
                unsigned int lastTransmissionTimestamp; 
            } report; 
            struct { 
                unsigned short transactionID; 
                unsigned short totalNumDropped; 
                unsigned short numberOfPayloadTypes; 
                struct { 
                    unsigned char payloadType; 
                    unsigned short numberOfPacketDropped; 
                    unsigned short awDroppedSN[500]; 
                } PTSpecific[6]; 
            } dropAck; 
            struct { 
                unsigned short currentBitrate; 
                unsigned short suggestedBitrate; 
            } codecRateChange; 
        } notes; 
    }  _lastBasebandNotification;
    void * _logBasebandDump;
    VCRateControlMediaController * _mediaController;
    double  _normalizedBDCD;
    double  _normalizedDelay;
    unsigned int  _previousAverageBitrate;
    bool  _resetAverageBitrateLong;
    unsigned int  _targetBitrate;
    unsigned int  _txBitrate;
}

@property (nonatomic) bool isTargetBitrateStabilized;
@property (nonatomic, retain) VCRateControlMediaController *mediaController;
@property (nonatomic) unsigned int targetBitrate;

- (void)addBDCDListWithNotificationArrivalTime:(double)arg1 bdcd:(double)arg2 queuingDelay:(double)arg3;
- (void)addInfoListWithNotificationArrivalTime:(double)arg1 transmittedBytes:(unsigned int)arg2;
- (void)calculateBitratesAndDelays:(unsigned int)arg1 totalQueueDepth:(unsigned int)arg2;
- (void)dealloc;
- (void)enableBasebandLogDump:(void*)arg1;
- (struct { int x1; double x2; union { struct { unsigned int x_1_2_1; unsigned int x_1_2_2; unsigned int x_1_2_3; unsigned int x_1_2_4; unsigned int x_1_2_5; double x_1_2_6; double x_1_2_7; double x_1_2_8; double x_1_2_9; BOOL x_1_2_10[64]; } x_3_1_1; struct { unsigned int x_2_2_1; unsigned int x_2_2_2; unsigned int x_2_2_3; unsigned int x_2_2_4; unsigned int x_2_2_5; unsigned int x_2_2_6; unsigned int x_2_2_7; } x_3_1_2; struct { double x_3_2_1; unsigned int x_3_2_2; unsigned int x_3_2_3; unsigned int x_3_2_4; unsigned int x_3_2_5; unsigned int x_3_2_6; unsigned long long x_3_2_7; } x_3_1_3; struct { unsigned int x_4_2_1; bool x_4_2_2; bool x_4_2_3; bool x_4_2_4; unsigned int x_4_2_5; unsigned int x_4_2_6; double x_4_2_7; unsigned int x_4_2_8; } x_3_1_4; struct { unsigned char x_5_2_1; unsigned int x_5_2_2; unsigned int x_5_2_3; unsigned int x_5_2_4; unsigned int x_5_2_5; unsigned int x_5_2_6; unsigned int x_5_2_7; unsigned int x_5_2_8; unsigned int x_5_2_9; unsigned int x_5_2_10; double x_5_2_11; double x_5_2_12; double x_5_2_13; unsigned int x_5_2_14; unsigned int x_5_2_15; unsigned int x_5_2_16; } x_3_1_5; } x3; })getBasebandMetricsWithNotification:(struct { int x1; unsigned short x2; double x3; union { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned short x_1_2_3; unsigned char x_1_2_4; BOOL x_1_2_5; unsigned int x_1_2_6; unsigned int x_1_2_7; unsigned int x_1_2_8; unsigned int x_1_2_9; } x_4_1_1; struct { unsigned short x_2_2_1; unsigned short x_2_2_2; unsigned short x_2_2_3; struct { unsigned char x_4_3_1; unsigned short x_4_3_2; unsigned short x_4_3_3[500]; } x_2_2_4[6]; } x_4_1_2; struct { unsigned short x_3_2_1; unsigned short x_3_2_2; } x_4_1_3; } x4; }*)arg1;
- (bool)isTargetBitrateStabilized;
- (id)mediaController;
- (void)normalizeBDCD:(double)arg1;
- (void)resetBDCDList;
- (void)setIsTargetBitrateStabilized:(bool)arg1;
- (void)setMediaController:(id)arg1;
- (void)setTargetBitrate:(unsigned int)arg1;
- (unsigned int)targetBitrate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

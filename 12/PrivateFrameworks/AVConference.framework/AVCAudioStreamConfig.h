<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVCAudioStreamConfig.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/AVCAudioStreamConfig.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface AVCAudioStreamConfig : NSObject {
    long long  _audioStreamMode;
    unsigned long long  _channelAwareOffset;
    bool  _cnEnabled;
    unsigned long long  _cnPayloadType;
    unsigned int  _codecRateModeMask;
    long long  _codecType;
    unsigned long long  _dtmfPayloadType;
    unsigned long long  _dtmfTimestampRate;
    bool  _dtxEnabled;
    bool  _enableMaxBitrateOnNoChangeCMR;
    bool  _headerFullOnly;
    bool  _latencySensitiveMode;
    unsigned long long  _maxPtime;
    unsigned long long  _numRedundantPayloads;
    bool  _octetAligned;
    long long  _preferredCodecRateMode;
    unsigned long long  _ptime;
    unsigned long long  _rxRedPayloadType;
    unsigned long long  _txRedPayloadType;
    float  _volume;
}

@property (nonatomic) long long audioStreamMode;
@property (nonatomic) unsigned long long channelAwareOffset;
@property (getter=isCNEnabled, nonatomic) bool cnEnabled;
@property (nonatomic) unsigned long long cnPayloadType;
@property (nonatomic) unsigned int codecRateModeMask;
@property (nonatomic) long long codecType;
@property (nonatomic) unsigned long long dtmfPayloadType;
@property (nonatomic) unsigned long long dtmfTimestampRate;
@property (getter=isDTXEnabled, nonatomic) bool dtxEnabled;
@property (nonatomic) bool enableMaxBitrateOnNoChangeCMR;
@property (getter=isHeaderFullOnly, nonatomic) bool headerFullOnly;
@property (getter=isLatencySensitiveMode, nonatomic) bool latencySensitiveMode;
@property (nonatomic) unsigned long long maxPtime;
@property (nonatomic) unsigned long long numRedundantPayloads;
@property (getter=isOctectAligned, nonatomic) bool octetAligned;
@property (nonatomic) long long preferredCodecRateMode;
@property (nonatomic) unsigned long long ptime;
@property (nonatomic) unsigned long long rxRedPayloadType;
@property (nonatomic) unsigned long long txRedPayloadType;
@property (nonatomic) float volume;

+ (unsigned int)clientCodecRateMaskForCodecRateMode:(unsigned int)arg1;
+ (long long)clientCodecRateModeForCodecRateMode:(int)arg1;
+ (long long)clientCodecTypeWithCodecType:(long long)arg1;
+ (long long)clientStreamModeWithStreamMode:(long long)arg1;
+ (unsigned int)codecRateMaskForClientCodecRateMode:(unsigned int)arg1;
+ (int)codecRateModeForClientCodecRateMode:(long long)arg1;
+ (long long)codecTypeWithClientCodecType:(long long)arg1;
+ (long long)streamModeWithClientStreamMode:(long long)arg1;

- (long long)audioStreamMode;
- (unsigned long long)channelAwareOffset;
- (unsigned long long)cnPayloadType;
- (unsigned int)codecRateModeMask;
- (long long)codecType;
- (id)dictionary;
- (unsigned long long)dtmfPayloadType;
- (unsigned long long)dtmfTimestampRate;
- (bool)enableMaxBitrateOnNoChangeCMR;
- (id)init;
- (bool)isCNEnabled;
- (bool)isCNValid;
- (bool)isDTMFValid;
- (bool)isDTXEnabled;
- (bool)isHeaderFullOnly;
- (bool)isLatencySensitiveMode;
- (bool)isOctectAligned;
- (bool)isRedValid;
- (bool)isValid;
- (unsigned long long)maxPtime;
- (unsigned long long)numRedundantPayloads;
- (long long)preferredCodecRateMode;
- (unsigned long long)ptime;
- (unsigned long long)rxRedPayloadType;
- (void)setAudioStreamMode:(long long)arg1;
- (void)setChannelAwareOffset:(unsigned long long)arg1;
- (void)setCnEnabled:(bool)arg1;
- (void)setCnPayloadType:(unsigned long long)arg1;
- (void)setCodecRateModeMask:(unsigned int)arg1;
- (void)setCodecType:(long long)arg1;
- (void)setDtmfPayloadType:(unsigned long long)arg1;
- (void)setDtmfTimestampRate:(unsigned long long)arg1;
- (void)setDtxEnabled:(bool)arg1;
- (void)setEnableMaxBitrateOnNoChangeCMR:(bool)arg1;
- (void)setHeaderFullOnly:(bool)arg1;
- (void)setLatencySensitiveMode:(bool)arg1;
- (void)setMaxPtime:(unsigned long long)arg1;
- (void)setNumRedundantPayloads:(unsigned long long)arg1;
- (void)setOctetAligned:(bool)arg1;
- (void)setPreferredCodecRateMode:(long long)arg1;
- (void)setPtime:(unsigned long long)arg1;
- (void)setRxRedPayloadType:(unsigned long long)arg1;
- (void)setTxRedPayloadType:(unsigned long long)arg1;
- (void)setUpWithDictionary:(id)arg1;
- (void)setVolume:(float)arg1;
- (unsigned long long)txRedPayloadType;
- (float)volume;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

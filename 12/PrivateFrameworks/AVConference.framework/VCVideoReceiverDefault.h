<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCVideoReceiverDefault.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCVideoReceiverDefault.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCVideoReceiverDefault : VCVideoReceiverBase {
    void * _controlInfoGenerator;
    unsigned short  _lastKeyFrameRequestStreamID;
    double  _lastKeyFrameRequestTime;
    bool  _shouldEnableFaceZoom;
    long long  _streamToken;
    struct tagHANDLE { int x1; } * _videoReceiverHandle;
    bool  receivedFirstRemoteFrame;
    unsigned int  remoteFrameHeight;
    unsigned int  remoteFrameWidth;
    VideoAttributes * remoteVideoAttributes;
}

@property (retain) VideoAttributes *remoteVideoAttributes;
@property (nonatomic) bool shouldEnableFaceZoom;

- (void)collectChannelMetrics:(struct { unsigned int x1; unsigned int x2; double x3; }*)arg1 interval:(float)arg2;
- (void)dealloc;
- (void)didSwitchFromStreamID:(unsigned short)arg1 toStreamID:(unsigned short)arg2;
- (void)handleActiveConnectionChange:(id)arg1;
- (void)handleKeyFrameRequestWithSizeAndFistMBs:(unsigned short*)arg1 count:(int)arg2 didReceiveRTCPFB:(bool)arg3 didReceiveFIR:(bool)arg4;
- (void)handleRemoteFrame:(struct __CVBuffer { }*)arg1 timestamp:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 cameraStatusBits:(unsigned char)arg3;
- (void)handleRequestingKeyFrameGenerationWithStreamID:(unsigned short)arg1;
- (id)initWithConfig:(struct tagVCVideoReceiverConfig { unsigned int x1; struct tagVCVideoReceiverStreamConfig { struct tagHANDLE {} *x_2_1_1; unsigned short x_2_1_2; unsigned short x_2_1_3; bool x_2_1_4; unsigned int x_2_1_5; unsigned short x_2_1_6[4]; unsigned short x_2_1_7[4]; unsigned short x_2_1_8; } x2[4]; bool x3; long long x4; int x5; int x6; int x7; unsigned int x8; int x9; int x10; int x11; int x12; int x13; int x14; bool x15; void *x16; int (*x17)(); int (*x18)(); int (*x19)(); unsigned long long x20; }*)arg1 delegate:(id)arg2 reportingAgent:(struct opaqueRTCReporting { }*)arg3 statisticsCollector:(id)arg4;
- (double)lastReceivedVideoRTCPPacketTime;
- (double)lastReceivedVideoRTPPacketTime;
- (void)pauseVideo;
- (id)remoteVideoAttributes;
- (double)roundTripTime;
- (void)rtcpSendIntervalElapsed;
- (void)setEnableCVO:(bool)arg1 cvoExtensionID:(unsigned long long)arg2;
- (void)setEnableRateAdaptation:(bool)arg1 maxBitrate:(unsigned int)arg2 minBitrate:(unsigned int)arg3 adaptationInterval:(double)arg4;
- (void)setRemoteVideoAttributes:(id)arg1;
- (void)setRoundTripTime:(double)arg1;
- (void)setShouldEnableFaceZoom:(bool)arg1;
- (void)setTargetStreamID:(unsigned short)arg1;
- (bool)shouldEnableFaceZoom;
- (void)startVideo;
- (void)stopVideo;
- (void)updateSourcePlayoutTimestamp:(struct { long long x1; int x2; unsigned int x3; long long x4; }*)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

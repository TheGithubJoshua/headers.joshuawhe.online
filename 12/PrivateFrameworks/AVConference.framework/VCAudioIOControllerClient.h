<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCAudioIOControllerClient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCAudioIOControllerClient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCAudioIOControllerClient : NSObject <VCAudioIOControllerSink, VCAudioIOControllerSource> {
    bool  _allowAudioRecording;
    int  _clientPid;
    id  _delegate;
    int  _deviceRole;
    unsigned char  _direction;
    struct VoiceIOFarEndVersionInfo { 
        unsigned char farEndHwModel[64]; 
        unsigned char farEndOSVersion[64]; 
        unsigned int farEndAUVersion; 
    }  _farEndVersionInfo;
    struct AudioStreamBasicDescription { 
        double mSampleRate; 
        unsigned int mFormatID; 
        unsigned int mFormatFlags; 
        unsigned int mBytesPerPacket; 
        unsigned int mFramesPerPacket; 
        unsigned int mBytesPerFrame; 
        unsigned int mChannelsPerFrame; 
        unsigned int mBitsPerChannel; 
        unsigned int mReserved; 
    }  _format;
    bool  _isInputMeteringEnabled;
    bool  _isOutputMeteringEnabled;
    bool  _isRemoteCodecInfoValid;
    bool  _isRemoteVersionInfoValid;
    int  _operatingMode;
    double  _remoteCodecSampleRate;
    unsigned int  _remoteCodecType;
}

@property (nonatomic) bool allowAudioRecording;
@property (nonatomic, readonly) int clientPid;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) <VCAudioIOControllerDelegate><VCAudioIOControllerSink><VCAudioIOControllerSource> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) int deviceRole;
@property (nonatomic) unsigned char direction;
@property (nonatomic, readonly) struct VoiceIOFarEndVersionInfo { unsigned char x1[64]; unsigned char x2[64]; unsigned int x3; } farEndVersionInfo;
@property (nonatomic, readonly) struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; } format;
@property (readonly) unsigned long long hash;
@property (getter=isInputMeteringEnabled, nonatomic) bool inputMeteringEnabled;
@property (nonatomic, readonly) bool isRemoteCodecInfoValid;
@property (nonatomic, readonly) bool isRemoteVersionInfoValid;
@property (nonatomic) int operatingMode;
@property (getter=isOuputMeteringEnabled, nonatomic) bool outputMeteringEnabled;
@property (nonatomic, readonly) double remoteCodecSampleRate;
@property (nonatomic, readonly) unsigned int remoteCodecType;
@property (readonly) Class superclass;

- (bool)allowAudioRecording;
- (int)clientPid;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (int)deviceRole;
- (unsigned char)direction;
- (struct VoiceIOFarEndVersionInfo { unsigned char x1[64]; unsigned char x2[64]; unsigned int x3; })farEndVersionInfo;
- (struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })format;
- (id)initWithDelegate:(id)arg1 clientPid:(int)arg2;
- (bool)isInputMeteringEnabled;
- (bool)isOuputMeteringEnabled;
- (bool)isRemoteCodecInfoValid;
- (bool)isRemoteVersionInfoValid;
- (int)operatingMode;
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList { }*)arg1 controllerTime:(const struct _VCAudioIOControllerTime { unsigned int x1; unsigned long long x2; }*)arg2;
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList { }*)arg1 controllerTime:(const struct _VCAudioIOControllerTime { unsigned int x1; unsigned long long x2; }*)arg2;
- (double)remoteCodecSampleRate;
- (unsigned int)remoteCodecType;
- (void)setAllowAudioRecording:(bool)arg1;
- (void)setClientFormat:(struct AudioStreamBasicDescription { double x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; })arg1;
- (void)setDeviceRole:(int)arg1;
- (void)setDirection:(unsigned char)arg1;
- (void)setFarEndVersionInfo:(struct VoiceIOFarEndVersionInfo { unsigned char x1[64]; unsigned char x2[64]; unsigned int x3; })arg1;
- (void)setInputMeteringEnabled:(bool)arg1;
- (void)setOperatingMode:(int)arg1;
- (void)setOutputMeteringEnabled:(bool)arg1;
- (void)setRemoteCodecType:(unsigned int)arg1 sampleRate:(double)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

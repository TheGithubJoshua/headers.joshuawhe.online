<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCVideoTransmitterBase.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCVideoTransmitterBase.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCVideoTransmitterBase : NSObject <VCConnectionChangedHandler> {
    unsigned int  _captureHeight;
    unsigned int  _captureWidth;
    void * _controlInfoGenerator;
    unsigned int  _encodingHeight;
    unsigned int  _encodingWidth;
    bool  _isServerBasedBandwidthProbingEnabled;
    double  _lastKeyFrameSentTime;
    double  _lastSentAudioHostTime;
    unsigned int  _lastSentAudioSampleTime;
    struct { 
        long long value; 
        int timescale; 
        unsigned int flags; 
        long long epoch; 
    }  _latestSampleBufferTimestamp;
    unsigned int  _targetFramerate;
    unsigned int  _temporaryMaximumBitrate;
    unsigned int  _timestamp;
    unsigned int  _txMaxBitrate;
    unsigned int  _txMinBitrate;
    VCVideoRule * _videoRule;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isServerBasedBandwidthProbingEnabled;
@property struct { long long x1; int x2; unsigned int x3; long long x4; } lastFrameTime;
@property double lastKeyFrameSentTime;
@property unsigned int lastRTPTimestamp;
@property double lastSentAudioHostTime;
@property unsigned int lastSentAudioSampleTime;
@property (readonly) Class superclass;

- (void)collectChannelMetrics:(struct { unsigned int x1; unsigned int x2; double x3; }*)arg1 interval:(float)arg2;
- (void)dealloc;
- (bool)enqueueVideoFrame:(struct opaqueCMSampleBuffer { }*)arg1 frameTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 droppedFrames:(int)arg3 cameraStatusBits:(unsigned char)arg4;
- (void)generateKeyFrame;
- (void)handleActiveConnectionChange:(id)arg1;
- (id)initWithConfig:(id)arg1;
- (bool)isServerBasedBandwidthProbingEnabled;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })lastFrameTime;
- (double)lastKeyFrameSentTime;
- (unsigned int)lastRTPTimestamp;
- (double)lastSentAudioHostTime;
- (unsigned int)lastSentAudioSampleTime;
- (void)setFECRatio:(double)arg1;
- (void)setIsServerBasedBandwidthProbingEnabled:(bool)arg1;
- (void)setKeyFrameOnlyStreamID:(unsigned short)arg1;
- (void)setLastFrameTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setLastKeyFrameSentTime:(double)arg1;
- (void)setLastRTPTimestamp:(unsigned int)arg1;
- (void)setLastSentAudioHostTime:(double)arg1;
- (void)setLastSentAudioSampleTime:(unsigned int)arg1;
- (void)setStreamIDs:(unsigned short*)arg1 numOfStreamIDs:(unsigned char)arg2 repairedStreamIDs:(unsigned short*)arg3 numOfRepairedStreamIDs:(unsigned char)arg4;
- (unsigned int)setTemporaryMaximumBitrate:(unsigned int)arg1;
- (void)startVideo;
- (void)stopVideo;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

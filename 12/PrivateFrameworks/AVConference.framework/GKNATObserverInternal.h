<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKNATObserverInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/GKNATObserverInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface GKNATObserverInternal : GKNATObserver {
    int  _NATCheckRetryCount;
    double  _NATCheckRetryDelay;
    bool  _addCarrierFlag;
    bool  _addInRangeFlag;
    bool  _checkTCPAndSSL;
    NSMutableDictionary * _currentNetworkNames;
    id  _delegate;
    struct __SCDynamicStore { } * _dynamicStore;
    bool  _fNATCheckInProgress;
    bool  _fNATCheckQueued;
    bool  _favorNonCarrier;
    bool  _hasNATCheckEnded;
    bool  _hasNATCheckStarted;
    bool  _ignoreCarrierBundle;
    bool  _ignoreNatTypeCache;
    NSMutableDictionary * _interfaceInfoDictionary;
    int  _lastReportedCarrierNATType;
    int  _lastReportedNATType;
    int  _lastReportedNonCarrierNATType;
    NSObject<OS_dispatch_group> * _natCheckGroup;
    NSObject<OS_dispatch_semaphore> * _natCheckNetNameSema;
    NSObject<OS_dispatch_queue> * _natCheckQueue;
    bool  _newCarrierType;
    bool  _nonCarrierInterfacesOnly;
    NSObject<OS_dispatch_queue> * _reportNATQueue;
    GKNATObserver_SCContext * _sccontext;
    NSRecursiveLock * _xNATCheck;
}

- (void)HTTPCheckWithIPPort:(struct tagIPPORT { int x1; BOOL x2[16]; union { unsigned int x_3_1_1; unsigned char x_3_1_2[16]; } x3; unsigned short x4; }*)arg1 ipv6Prefix:(const struct { int x1; unsigned char x2[12]; }*)arg2 useCache:(bool)arg3;
- (void)HTTPSCheckWithIPPort:(struct tagIPPORT { int x1; BOOL x2[16]; union { unsigned int x_3_1_1; unsigned char x_3_1_2[16]; } x3; unsigned short x4; }*)arg1 ipv6Prefix:(const struct { int x1; unsigned char x2[12]; }*)arg2 useCache:(bool)arg3;
- (void)NATCheckWithIPPort:(struct tagIPPORT { int x1; BOOL x2[16]; union { unsigned int x_3_1_1; unsigned char x_3_1_2[16]; } x3; unsigned short x4; }*)arg1 ipv6Prefix:(const struct { int x1; unsigned char x2[12]; }*)arg2 useCache:(bool)arg3;
- (void)cacheNATFlags:(id)arg1 forNetwork:(id)arg2;
- (void)calculateSummmaryNATType:(int*)arg1 andCarrierNATType:(int*)arg2 andNonCarrierNATType:(int*)arg3 copyInterfaceInfoDictionary:(id*)arg4;
- (struct tagCommNATInfo { unsigned int x1; unsigned int x2; unsigned short x3[3]; unsigned int x4; }*)callCommNATTestFromIPPort:(struct tagIPPORT { int x1; BOOL x2[16]; union { unsigned int x_3_1_1; unsigned char x_3_1_2[16]; } x3; unsigned short x4; }*)arg1 ipv6Prefix:(const struct { int x1; unsigned char x2[12]; }*)arg2;
- (int)callHTTPTestFromIPPort:(struct tagIPPORT { int x1; BOOL x2[16]; union { unsigned int x_3_1_1; unsigned char x_3_1_2[16]; } x3; unsigned short x4; }*)arg1 ipv6Prefix:(const struct { int x1; unsigned char x2[12]; }*)arg2 ToServer:(id)arg3 isSSL:(bool)arg4;
- (void)clearRetries;
- (id)copyNatTypeCache;
- (id)copyNatTypeCachePlistScheme;
- (id)copyNatTypeCache_OSXGamedScheme;
- (int)currentNATType;
- (void)dealloc;
- (id)delegate;
- (bool)ensureNatCachePathExists;
- (id)init;
- (id)initWithOptions:(id)arg1;
- (id)lookupCachedNATFlagsForNetwork:(id)arg1;
- (id)nameForNetworkWithIPPort:(struct tagIPPORT { int x1; BOOL x2[16]; union { unsigned int x_3_1_1; unsigned char x_3_1_2[16]; } x3; unsigned short x4; }*)arg1 interfaceName:(id)arg2;
- (int)natTypeForCommNATFlags:(unsigned int)arg1 isCarrier:(bool)arg2;
- (void)registerForNetworkChanges;
- (oneway void)release;
- (void)reportNATType;
- (unsigned int)setCommNATFlags:(unsigned int)arg1 forInterface:(id)arg2 isCached:(bool)arg3;
- (void)setDelegate:(id)arg1;
- (unsigned int)setFlags:(unsigned int)arg1 forInterface:(id)arg2 isCached:(bool)arg3 isCachedKey:(id)arg4 mask:(unsigned int)arg5;
- (unsigned int)setSSLFlags:(unsigned int)arg1 forInterface:(id)arg2 isCached:(bool)arg3;
- (unsigned int)setTCPFlags:(unsigned int)arg1 forInterface:(id)arg2 isCached:(bool)arg3;
- (void)shouldTryNATCheck;
- (void)tryNATCheckWithDelay:(double)arg1;
- (void)updateNatTypeCache:(id)arg1;
- (void)updateNatTypeCache_CachePlistScheme:(id)arg1;
- (void)updateNatTypeCache_OSXGamedScheme:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

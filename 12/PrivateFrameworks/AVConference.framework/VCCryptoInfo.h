<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCCryptoInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCCryptoInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCCryptoInfo : NSObject {
    struct tagSRTPINFO { 
        int fSRTPInitialized; 
        int fCancelled; 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } xWait; 
        struct _opaque_pthread_cond_t { 
            long long __sig; 
            BOOL __opaque[40]; 
        } cWait; 
        unsigned int dwSSRC; 
        unsigned int dwRTPROC; 
        unsigned short wFirstRTPSeq; 
        unsigned short wHighestRTPSeq; 
        unsigned int dwFirstRTCPSeq; 
        unsigned int dwHighestRTCPSeq; 
        unsigned long long SRTPIndex; 
        int masterKeyLength; 
        int sessionKeyLength; 
        unsigned char MasterKey[32]; 
        unsigned char MasterSalt[14]; 
        unsigned char SessionKey[32]; 
        unsigned char SessionSalt[14]; 
        unsigned char SessionAuthenticationKey[20]; 
        struct _opaque_pthread_mutex_t { 
            long long __sig; 
            BOOL __opaque[56]; 
        } MKIAccess; 
        void *masterKeyIndex; 
        void *masterKeyIndexInPacket; 
        unsigned int SRTCPIndex; 
        unsigned int dwDerivationRate; 
        struct tagSRTPCryptContext { 
            struct { 
                unsigned long long Length; 
                char *Data; 
            } secAsn1Key; 
            struct _CCCryptor {} *ccCryptorRef; 
            unsigned char ccContext[404]; 
        } cryptContext; 
        struct tagSRTPTransformPolicy { 
            int cipherMode; 
            int masterKeyLength; 
            int sessionKeyLength; 
            int sessionSaltLength; 
            int authenticationMode; 
            int sessionAuthenticationKeyLength; 
            int sessionAuthenticationTagLength; 
        } policy; 
        unsigned int operatingMode; 
    }  _SRTPInfo;
}

@property (readonly) struct tagSRTPINFO { int x1; int x2; struct _opaque_pthread_mutex_t { long long x_3_1_1; BOOL x_3_1_2[56]; } x3; struct _opaque_pthread_cond_t { long long x_4_1_1; BOOL x_4_1_2[40]; } x4; unsigned int x5; unsigned int x6; unsigned short x7; unsigned short x8; unsigned int x9; unsigned int x10; unsigned long long x11; int x12; int x13; unsigned char x14[32]; unsigned char x15[14]; unsigned char x16[32]; unsigned char x17[14]; unsigned char x18[20]; struct _opaque_pthread_mutex_t { long long x_19_1_1; BOOL x_19_1_2[56]; } x19; void *x20; void *x21; unsigned int x22; unsigned int x23; struct tagSRTPCryptContext { struct { unsigned long long x_1_2_1; char *x_1_2_2; } x_24_1_1; struct _CCCryptor {} *x_24_1_2; unsigned char x_24_1_3[404]; } x24; struct tagSRTPTransformPolicy { int x_25_1_1; int x_25_1_2; int x_25_1_3; int x_25_1_4; int x_25_1_5; int x_25_1_6; int x_25_1_7; } x25; unsigned int x26; }*state;

- (void)dealloc;
- (id)initWithSRTPInfo:(struct tagSRTPINFO { int x1; int x2; struct _opaque_pthread_mutex_t { long long x_3_1_1; BOOL x_3_1_2[56]; } x3; struct _opaque_pthread_cond_t { long long x_4_1_1; BOOL x_4_1_2[40]; } x4; unsigned int x5; unsigned int x6; unsigned short x7; unsigned short x8; unsigned int x9; unsigned int x10; unsigned long long x11; int x12; int x13; unsigned char x14[32]; unsigned char x15[14]; unsigned char x16[32]; unsigned char x17[14]; unsigned char x18[20]; struct _opaque_pthread_mutex_t { long long x_19_1_1; BOOL x_19_1_2[56]; } x19; void *x20; void *x21; unsigned int x22; unsigned int x23; struct tagSRTPCryptContext { struct { unsigned long long x_1_2_1; char *x_1_2_2; } x_24_1_1; struct _CCCryptor {} *x_24_1_2; unsigned char x_24_1_3[404]; } x24; struct tagSRTPTransformPolicy { int x_25_1_1; int x_25_1_2; int x_25_1_3; int x_25_1_4; int x_25_1_5; int x_25_1_6; int x_25_1_7; } x25; unsigned int x26; }*)arg1;
- (struct tagSRTPINFO { int x1; int x2; struct _opaque_pthread_mutex_t { long long x_3_1_1; BOOL x_3_1_2[56]; } x3; struct _opaque_pthread_cond_t { long long x_4_1_1; BOOL x_4_1_2[40]; } x4; unsigned int x5; unsigned int x6; unsigned short x7; unsigned short x8; unsigned int x9; unsigned int x10; unsigned long long x11; int x12; int x13; unsigned char x14[32]; unsigned char x15[14]; unsigned char x16[32]; unsigned char x17[14]; unsigned char x18[20]; struct _opaque_pthread_mutex_t { long long x_19_1_1; BOOL x_19_1_2[56]; } x19; void *x20; void *x21; unsigned int x22; unsigned int x23; struct tagSRTPCryptContext { struct { unsigned long long x_1_2_1; char *x_1_2_2; } x_24_1_1; struct _CCCryptor {} *x_24_1_2; unsigned char x_24_1_3[404]; } x24; struct tagSRTPTransformPolicy { int x_25_1_1; int x_25_1_2; int x_25_1_3; int x_25_1_4; int x_25_1_5; int x_25_1_6; int x_25_1_7; } x25; unsigned int x26; }*)state;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCSessionStatsController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCSessionStatsController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCSessionStatsController : NSObject {
    int  _bytesReceivedToReport;
    int  _bytesSentToReport;
    VCConnectionManager * _connectionManager;
    bool  _didReceiveServerStatsResponse;
    unsigned int  _downlinkMostRecentSendTimestamp;
    unsigned int  _downlinkServerStatsByteUsed;
    AVCStatisticsCollector * _downlinkStatisticsCollector;
    bool  _isReceiveStatsFailedSymptomReported;
    double  _lastHealthPrintTime;
    int  _lastProcessedBytesReceived;
    int  _lastProcessedBytesSent;
    double  _lastTimeReceiveStatsFailed;
    double  _lastTriggerRateControlTime;
    double  _lastUpdateTime;
    NSObject<OS_dispatch_source> * _localSessionStatsTimemoutSource;
    int  _maxReceivedRate;
    int  _maxSentRate;
    double  _maxStatsTransportStreamQueueTime;
    int  _minReceivedRate;
    int  _minSentRate;
    unsigned int  _numStatsDroppedDueToLinkID;
    unsigned int  _numStatsDroppedDueToStatsID;
    unsigned int  _numStatsDroppedDueToTooLate;
    unsigned int  _numStatsProcessed;
    unsigned int  _numStatsTriggered;
    unsigned int  _previousTotalPacketReceived;
    unsigned int  _previousTotalPacketSent;
    struct { 
        double responseTime; 
        unsigned char linkID; 
        unsigned short statsIdentifier; 
        unsigned short remoteTimestamp; 
        unsigned short serverPacketInterval; 
        unsigned short uplinkBandwidthSample; 
        unsigned short totalRemoteMediaPacketSent; 
        unsigned short totalRemoteMediaPacketReceived; 
    }  _remoteStats;
    id  _reportingAgentWeak;
    unsigned short  _statsArrayIndex;
    struct tagVCRealTimeThread { unsigned int x1; unsigned int x2; struct _opaque_pthread_mutex_t { long long x_3_1_1; BOOL x_3_1_2[56]; } x3; struct _opaque_pthread_mutex_t { long long x_4_1_1; BOOL x_4_1_2[56]; } x4; struct _opaque_pthread_cond_t { long long x_5_1_1; BOOL x_5_1_2[40]; } x5; int (*x6)(); void *x7; struct OpaqueFigThread {} *x8; int x9; BOOL x10[60]; unsigned int x11; unsigned int x12; } * _statsReceiveThread;
    unsigned int  _statsRequestCounter;
    unsigned int  _statsResponseCounter;
    unsigned short  _streamID;
    double  _totalStatsTransportStreamQueueTime;
    VCTransportStream * _transportStream;
    unsigned int  _uplinkMostRecentSendTimestamp;
    unsigned int  _uplinkServerStatsByteUsed;
    AVCStatisticsCollector * _uplinkStatisticsCollector;
}

@property (readonly) id reportingAgent;

- (void)dealloc;
- (void)deregisterPeriodicTask;
- (void)flushRealTimeReportingStats;
- (void)handleRemoteSessionStats:(struct { unsigned char x1; double x2; unsigned char x3[1472]; int x4; int x5; struct { unsigned short x_6_1_1[12]; unsigned char x_6_1_2; bool x_6_1_3; unsigned short x_6_1_4; unsigned char x_6_1_5; bool x_6_1_6; bool x_6_1_7; unsigned long long x_6_1_8; bool x_6_1_9; bool x_6_1_10; bool x_6_1_11; unsigned short x_6_1_12; struct { unsigned short x_13_2_1; unsigned short x_13_2_2; unsigned short x_13_2_3; unsigned short x_13_2_4; unsigned short x_13_2_5; } x_6_1_13; bool x_6_1_14; } x6; }*)arg1;
- (void)healthPrintForServerStats;
- (id)initWithConnectionManager:(id)arg1 uplinkStatsCollector:(id)arg2 downlinkStatsCollector:(id)arg3 reportingAgent:(struct opaqueRTCReporting { }*)arg4 transportSessionID:(unsigned int)arg5 streamID:(unsigned short)arg6 mediaQueue:(struct tagVCMediaQueue { }*)arg7;
- (bool)isRemoteSessionStatsTooLateWithStatsId:(unsigned short)arg1;
- (void)periodicTask:(void*)arg1;
- (void)registerPeriodicTask;
- (id)reportingAgent;
- (void)reset;
- (void)resetHealthPrintCounters;
- (void)sendLocalStats;
- (int)startLocalSessionStatsReceive;
- (void)startLocalSessionStatsSend;
- (void)startLocalSessionStatsUpdate;
- (void)statsReceiveStatsPayload;
- (void)stopLocalSessionStatsUpdate;
- (unsigned short)translateTimestampFromMicro:(double)arg1;
- (void)triggerRateControlWithLocalSessionStats:(struct { double x1; unsigned char x2; unsigned short x3; unsigned int x4; unsigned int x5; unsigned int x6; })arg1 time:(double)arg2;
- (void)updateRemoteSessionStats:(struct { double x1; unsigned char x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned short x7; unsigned short x8; })arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

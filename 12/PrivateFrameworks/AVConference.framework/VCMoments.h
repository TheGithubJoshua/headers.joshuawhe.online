<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCMoments.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCMoments.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCMoments : NSObject <VCMomentsMessenger> {
    unsigned int  _capabilities;
    int  _currentActiveRequestsCount;
    id  _delegate;
    bool  _isClientRegistered;
    bool  _lastRequest;
    unsigned char  _mode;
    VCMomentsHistory * _momentsHistory;
    VideoAttributes * _remoteScreenAttributes;
    NSMutableSet * _requests;
    unsigned int  _streamToken;
    id  _transportDelegate;
    NSObject<OS_dispatch_queue> * delegateNotificationQueue;
}

@property (nonatomic) unsigned int capabilities;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isClientRegistered;
@property (nonatomic, retain) VideoAttributes *remoteScreenAttributes;
@property (readonly) Class superclass;

+ (unsigned long long)deviceFreeDiskSpace;
+ (bool)deviceHasSufficientFreeSpace;

- (void)addLocalAudioSample:(struct opaqueVCAudioBufferList { }*)arg1 timestamp:(unsigned int)arg2;
- (void)addLocalVideoSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1 cameraStatusBits:(unsigned char)arg2 timestamp:(unsigned int)arg3;
- (void)addRemoteAudioSample:(struct opaqueVCAudioBufferList { }*)arg1 timestamp:(unsigned int)arg2;
- (unsigned int)capabilities;
- (void)cleanupActiveRequests;
- (void)dealloc;
- (void)deregisterClient;
- (unsigned long long)directorySize:(id)arg1;
- (void)getInitialRemoteScreenAttributes:(id)arg1;
- (void)handleInsufficientFreeSpaceWithRequest:(id)arg1 delegate:(id)arg2;
- (id)initWithStreamToken:(unsigned int)arg1 delegate:(id)arg2;
- (bool)isClientRegistered;
- (bool)isHistorySupported;
- (id)momentsDelegate;
- (void)notifyFinishWithRequest:(id)arg1 didSucceed:(bool)arg2 fileSize:(long long)arg3;
- (void)notifyLocalFinishWithRequest:(id)arg1 didSucceed:(bool)arg2;
- (void)notifyRemoteFinishWithRequest:(id)arg1 didSucceed:(bool)arg2 fileSize:(long long)arg3;
- (bool)processClientRequest:(id)arg1 error:(id*)arg2;
- (void)processRemoteLivePhotoRequest:(id)arg1;
- (void)processRemotePhotoRequest:(id)arg1;
- (void)processRemoteVideoRequest:(id)arg1;
- (void)processRequest:(id)arg1;
- (void)registerClient;
- (id)remoteScreenAttributes;
- (void)setCapabilities:(unsigned int)arg1;
- (void)setFrameRate:(float)arg1;
- (void)setMomentsDelegate:(id)arg1;
- (void)setRemoteScreenAttributes:(id)arg1;
- (void)setTransportDelegate:(id)arg1;
- (id)transportDelegate;
- (void)updateRemoteScreenAttributes:(id)arg1;
- (void)updateVCMomentsMode;
- (bool)validateIncomingRequest:(id)arg1;
- (bool)validateNumberOfRequestsWithError:(id*)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

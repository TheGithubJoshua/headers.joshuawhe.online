<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCMediaNegotiationBlob.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCMediaNegotiationBlob.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCMediaNegotiationBlob : PBCodable <NSCopying> {
    bool  _allowDynamicMaxBitrate;
    bool  _allowsContentsChangeWithAspectPreservation;
    VCMediaNegotiationBlobAudioSettings * _audioSettings;
    NSMutableArray * _bandwidthSettings;
    NSString * _basebandCodec;
    unsigned int  _basebandCodecSampleRate;
    unsigned int  _blobVersion;
    VCMediaNegotiationBlobCaptionsSettings * _captionsSettings;
    struct { 
        unsigned int ntpTime : 1; 
        unsigned int basebandCodecSampleRate : 1; 
        unsigned int blobVersion : 1; 
        unsigned int allowDynamicMaxBitrate : 1; 
        unsigned int allowsContentsChangeWithAspectPreservation : 1; 
    }  _has;
    VCMediaNegotiationBlobMomentsSettings * _momentsSettings;
    NSMutableArray * _multiwayAudioStreams;
    NSMutableArray * _multiwayVideoStreams;
    unsigned long long  _ntpTime;
    VCMediaNegotiationBlobVideoSettings * _screenSettings;
    NSString * _userAgent;
    VCMediaNegotiationBlobVideoSettings * _videoSettings;
}

@property (nonatomic) bool allowDynamicMaxBitrate;
@property (nonatomic) bool allowsContentsChangeWithAspectPreservation;
@property (nonatomic, retain) VCMediaNegotiationBlobAudioSettings *audioSettings;
@property (nonatomic, retain) NSMutableArray *bandwidthSettings;
@property (nonatomic, retain) NSString *basebandCodec;
@property (nonatomic) unsigned int basebandCodecSampleRate;
@property (nonatomic) unsigned int blobVersion;
@property (nonatomic, retain) VCMediaNegotiationBlobCaptionsSettings *captionsSettings;
@property (nonatomic) bool hasAllowDynamicMaxBitrate;
@property (nonatomic) bool hasAllowsContentsChangeWithAspectPreservation;
@property (nonatomic, readonly) bool hasAudioSettings;
@property (nonatomic, readonly) bool hasBasebandCodec;
@property (nonatomic) bool hasBasebandCodecSampleRate;
@property (nonatomic) bool hasBlobVersion;
@property (nonatomic, readonly) bool hasCaptionsSettings;
@property (nonatomic, readonly) bool hasMomentsSettings;
@property (nonatomic) bool hasNtpTime;
@property (nonatomic, readonly) bool hasScreenSettings;
@property (nonatomic, readonly) bool hasUserAgent;
@property (nonatomic, readonly) bool hasVideoSettings;
@property (nonatomic, retain) VCMediaNegotiationBlobMomentsSettings *momentsSettings;
@property (nonatomic, retain) NSMutableArray *multiwayAudioStreams;
@property (nonatomic, retain) NSMutableArray *multiwayVideoStreams;
@property (nonatomic) unsigned long long ntpTime;
@property (nonatomic, retain) VCMediaNegotiationBlobVideoSettings *screenSettings;
@property (nonatomic, retain) NSString *userAgent;
@property (nonatomic, retain) VCMediaNegotiationBlobVideoSettings *videoSettings;

+ (Class)bandwidthSettingsType;
+ (Class)multiwayAudioStreamsType;
+ (Class)multiwayVideoStreamType;

- (void)addBandwidthSettings:(id)arg1;
- (void)addMultiwayAudioStreams:(id)arg1;
- (void)addMultiwayVideoStream:(id)arg1;
- (bool)allowDynamicMaxBitrate;
- (bool)allowsContentsChangeWithAspectPreservation;
- (id)audioSettings;
- (id)bandwidthSettings;
- (id)bandwidthSettingsAtIndex:(unsigned long long)arg1;
- (unsigned long long)bandwidthSettingsCount;
- (id)basebandCodec;
- (unsigned int)basebandCodecSampleRate;
- (unsigned int)blobVersion;
- (id)captionsSettings;
- (void)clearBandwidthSettings;
- (void)clearMultiwayAudioStreams;
- (void)clearMultiwayVideoStreams;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasAllowDynamicMaxBitrate;
- (bool)hasAllowsContentsChangeWithAspectPreservation;
- (bool)hasAudioSettings;
- (bool)hasBasebandCodec;
- (bool)hasBasebandCodecSampleRate;
- (bool)hasBlobVersion;
- (bool)hasCaptionsSettings;
- (bool)hasMomentsSettings;
- (bool)hasNtpTime;
- (bool)hasScreenSettings;
- (bool)hasUserAgent;
- (bool)hasVideoSettings;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)momentsSettings;
- (id)multiwayAudioStreams;
- (id)multiwayAudioStreamsAtIndex:(unsigned long long)arg1;
- (unsigned long long)multiwayAudioStreamsCount;
- (id)multiwayVideoStreamAtIndex:(unsigned long long)arg1;
- (id)multiwayVideoStreams;
- (unsigned long long)multiwayVideoStreamsCount;
- (unsigned long long)ntpTime;
- (void)printBandwidthSettingsWithLogFile:(void*)arg1;
- (void)printCaptionsSettingsWithLogFile:(void*)arg1;
- (void)printMomentsSettingsWithLogFile:(void*)arg1;
- (void)printMultiwayAudioStreamsWithLogFile:(void*)arg1;
- (void)printMultiwayVideoStreamsWithLogFile:(void*)arg1;
- (void)printWithTitle:(id)arg1 blobSize:(unsigned int)arg2 logFile:(void*)arg3;
- (bool)readFrom:(id)arg1;
- (id)screenSettings;
- (void)setAllowDynamicMaxBitrate:(bool)arg1;
- (void)setAllowsContentsChangeWithAspectPreservation:(bool)arg1;
- (void)setAudioSettings:(id)arg1;
- (void)setBandwidthSettings:(id)arg1;
- (void)setBasebandCodec:(id)arg1;
- (void)setBasebandCodecSampleRate:(unsigned int)arg1;
- (void)setBlobVersion:(unsigned int)arg1;
- (void)setCaptionsSettings:(id)arg1;
- (void)setHasAllowDynamicMaxBitrate:(bool)arg1;
- (void)setHasAllowsContentsChangeWithAspectPreservation:(bool)arg1;
- (void)setHasBasebandCodecSampleRate:(bool)arg1;
- (void)setHasBlobVersion:(bool)arg1;
- (void)setHasNtpTime:(bool)arg1;
- (void)setMomentsSettings:(id)arg1;
- (void)setMultiwayAudioStreams:(id)arg1;
- (void)setMultiwayVideoStreams:(id)arg1;
- (void)setNtpTime:(unsigned long long)arg1;
- (void)setScreenSettings:(id)arg1;
- (void)setUserAgent:(id)arg1;
- (void)setVideoSettings:(id)arg1;
- (id)userAgent;
- (id)videoSettings;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

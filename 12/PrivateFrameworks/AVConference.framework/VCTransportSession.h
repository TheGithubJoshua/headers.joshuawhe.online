<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCTransportSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCTransportSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCTransportSession : NSObject {
    unsigned int  _basebandNotificationRegistrationToken;
    VCConnectionManager * _connectionManager;
    NSObject * _connectionSetupPiggybackBlob;
    bool  _didRegisterForBasebandNotifications;
    id /* block */  _eventHandler;
    bool  _isCallActive;
    NSObject<OS_dispatch_queue> * _notificationQueue;
    TimingCollection * _perfTimings;
    struct opaqueRTCReporting { } * _reportingAgent;
    bool  _requiresWiFi;
    NSObject<OS_dispatch_queue> * _stateQueue;
    bool  _useCompressedConnectionData;
}

@property (nonatomic, readonly) unsigned int basebandNotificationRegistrationToken;
@property (nonatomic, readonly) VCConnectionManager *connectionManager;
@property (nonatomic, retain) NSObject *connectionSetupPiggybackBlob;
@property (nonatomic, readonly) unsigned int connectionSetupRTTEstimate;
@property (nonatomic, readonly) int detailedErrorCode;
@property (nonatomic, copy) id /* block */ eventHandler;
@property (setter=setCallActive:, nonatomic) bool isCallActive;
@property (nonatomic, readonly) bool isHandoverSupported;
@property (nonatomic, readonly) bool isRemoteOSPreLion;
@property (nonatomic, retain) TimingCollection *perfTimings;
@property (nonatomic) bool requiresWiFi;
@property (nonatomic) bool useCompressedConnectionData;

- (unsigned int)basebandNotificationRegistrationToken;
- (void)callEventHandlerWithEvent:(unsigned int)arg1 info:(id)arg2;
- (void)cleanupBaseband;
- (id)connectionManager;
- (id)connectionSetupPiggybackBlob;
- (unsigned int)connectionSetupRTTEstimate;
- (void)dealloc;
- (void)deregisterBasebandNotifications;
- (int)detailedErrorCode;
- (id /* block */)eventHandler;
- (int)flushBasebandQueueForConnection:(id)arg1 payloadInfoList:(id)arg2;
- (int)flushBasebandQueueWithPayloads:(id)arg1 flushCount:(unsigned int*)arg2;
- (bool)getConnectionSetupData:(id*)arg1 withOptions:(id)arg2 error:(id*)arg3;
- (int)getSignalStrength:(int*)arg1 signalRaw:(int*)arg2 signalGrade:(int*)arg3;
- (void)handleMediaReceivedOverPeerToPeerLinkWithConnectionId:(int)arg1;
- (void)handleMediaReceivedOverRelayLinkWithConnectionId:(int)arg1;
- (id)initWithNotificationQueue:(id)arg1 reportingAgent:(struct opaqueRTCReporting { }*)arg2;
- (bool)isCallActive;
- (bool)isHandoverSupported;
- (bool)isRemoteOSPreLion;
- (id)perfTimings;
- (int)registerBasebandNotificationsForConnection:(id)arg1;
- (void)reportNetworkConditionsDegraded;
- (bool)requiresWiFi;
- (void)setCallActive:(bool)arg1;
- (void)setConnectionSetupPiggybackBlob:(id)arg1;
- (void)setEventHandler:(id /* block */)arg1;
- (void)setPerfTimings:(id)arg1;
- (void)setRequiresWiFi:(bool)arg1;
- (void)setUseCompressedConnectionData:(bool)arg1;
- (void)start;
- (void)stop;
- (int)updateBasebandForConnection:(id)arg1;
- (int)updateQualityIndicator:(int)arg1 isIPv6:(bool)arg2;
- (bool)useCompressedConnectionData;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

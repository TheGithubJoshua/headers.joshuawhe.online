<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCMediaNegotiator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCMediaNegotiator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCMediaNegotiator : NSObject {
    bool  _isCellular16x9Capable;
    VCMediaNegotiatorLocalConfiguration * _localSettings;
    VCMediaNegotiatorAudioResults * _negotiatedAudioSettings;
    VCMediaNegotiatorCaptionsResults * _negotiatedCaptionsSettings;
    VCMediaNegotiatorMomentsResults * _negotiatedMomentsSettings;
    NSMutableArray * _negotiatedMultiwayAudioStreams;
    NSMutableArray * _negotiatedMultiwayVideoStreams;
    VCMediaNegotiatorVideoResults * _negotiatedScreenSettings;
    VCMediaNegotiatorResults * _negotiatedSettings;
    VCMediaNegotiatorVideoResults * _negotiatedVideoSettings;
    bool  _negotiationDone;
    bool  _usePreNegotiation;
}

@property (nonatomic, readonly) bool isCaller;
@property (nonatomic, readonly) VCMediaNegotiatorLocalConfiguration *localSettings;
@property (nonatomic, readonly) VCMediaNegotiatorAudioResults *negotiatedAudioSettings;
@property (nonatomic, readonly) VCMediaNegotiatorCaptionsResults *negotiatedCaptionsSettings;
@property (nonatomic, readonly) VCMediaNegotiatorMomentsResults *negotiatedMomentsSettings;
@property (nonatomic, readonly) NSArray *negotiatedMultiwayAudioStreams;
@property (nonatomic, readonly) NSArray *negotiatedMultiwayVideoStreams;
@property (nonatomic, readonly) VCMediaNegotiatorVideoResults *negotiatedScreenSettings;
@property (nonatomic, readonly) VCMediaNegotiatorResults *negotiatedSettings;
@property (nonatomic, readonly) VCMediaNegotiatorVideoResults *negotiatedVideoSettings;
@property (nonatomic, readonly) bool usePreNegotiation;

+ (id)negotiationBlobFromData:(id)arg1;
+ (id)newCompressedBlob:(id)arg1;
+ (id)newDecompressedBlob:(id)arg1;

- (bool)addBandwidthSettingsForMediaBlob:(id)arg1 operatingMode:(int)arg2 connectionType:(int)arg3;
- (int)bandwidthConfigurationWithOperatingMode:(int)arg1 connectionType:(int)arg2;
- (bool)canDecodeVideo:(id)arg1;
- (bool)canEncodeVideo:(id)arg1;
- (void)dealloc;
- (void)dumpBlob:(id)arg1 prefix:(id)arg2;
- (id)getPreferredScreenPayloadList;
- (id)getPreferredVideoPayloadList:(id)arg1;
- (id)initWithLocalSettings:(id)arg1;
- (bool)isCaller;
- (bool)isCellular16x9EncodeCapable;
- (bool)isVideoStreamSupported:(int)arg1;
- (id)localSettings;
- (void)negotiateAudioAllowRecording:(id)arg1;
- (bool)negotiateAudioDTXPayload:(id)arg1;
- (bool)negotiateAudioPrimaryPayload:(id)arg1;
- (bool)negotiateAudioREDPayload:(id)arg1;
- (void)negotiateAudioSecondaryPayloads:(id)arg1;
- (bool)negotiateAudioSettings:(id)arg1;
- (void)negotiateAudioUseSBR:(id)arg1 audioRuleCollection:(id)arg2;
- (bool)negotiateCaptionsWithCaptionsSettings:(id)arg1;
- (bool)negotiateMomentsWithMomentsSettings:(id)arg1;
- (bool)negotiateMultiwayAudioStreams:(id)arg1;
- (bool)negotiateMultiwayVideoStreams:(id)arg1;
- (void)negotiateRTCPFB:(id)arg1;
- (bool)negotiateScreenSettings:(id)arg1;
- (id)negotiateVideoMaxResolutionWithEncodeRules:(id)arg1 decodeRules:(id)arg2 isEncoder:(bool)arg3;
- (bool)negotiateVideoSettings:(id)arg1;
- (id)negotiatedAudioSettings;
- (id)negotiatedCaptionsSettings;
- (id)negotiatedFeaturesStringWithLocalFeaturesString:(id)arg1 remoteFeaturesString:(id)arg2;
- (id)negotiatedMomentsSettings;
- (id)negotiatedMultiwayAudioStreams;
- (id)negotiatedMultiwayVideoStreams;
- (id)negotiatedScreenSettings;
- (id)negotiatedSettings;
- (id)negotiatedVideoSettings;
- (id)newInviteBlob;
- (id)newResponseBlob;
- (bool)processInviteBlob:(id)arg1;
- (bool)processParameterSets:(id)arg1 videoResults:(id)arg2;
- (bool)processResponseBlob:(id)arg1;
- (unsigned int)remoteMaxBandwidthForOperatingMode:(int)arg1 connectionType:(int)arg2;
- (void)saveRemoteBandwidthSettingsWithMediaBlob:(id)arg1;
- (bool)selectBestVideoRuleForTransport:(unsigned char)arg1 payload:(int)arg2 encodingType:(unsigned char)arg3 localVideoRuleCollection:(id)arg4 remoteVideoSettings:(id)arg5 negotiatedVideoSettings:(id)arg6 isScreen:(bool)arg7;
- (id)selectVideoFeatureString:(id)arg1 selectedPayload:(int)arg2;
- (bool)setupAudioWithNegotiatedSettings:(id)arg1;
- (bool)setupBandwidthSettingsForMediaBlob:(id)arg1;
- (void)setupCaptionsForMediaBlob:(id)arg1;
- (void)setupMomentsForMediaBlob:(id)arg1;
- (void)setupMultiwayAudioStreamsForMediaBlob:(id)arg1;
- (void)setupMultiwayVideoStreamsForMediaBlob:(id)arg1;
- (bool)setupScreenWithNegotiatedSettings:(id)arg1;
- (bool)setupVideoWithNegotiatedSettings:(id)arg1;
- (bool)usePreNegotiation;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCPacketBundler.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/VCPacketBundler.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface VCPacketBundler : NSObject {
    unsigned int  _accessUnitDataSectionSize;
    struct tagAccessUnitHeaderInfo { 
        unsigned short accessUnitCount; 
        unsigned short accessUnitSize[3]; 
    }  _accessUnitHeaderInfo;
    bool  _allowLargePackets;
    char * _buffer;
    unsigned int  _bufferSize;
    unsigned int  _bundledPackets;
    int  _bundlingScheme;
    bool  _currentBundleVoiceActivity;
    unsigned int  _encodedBufferSize;
    bool  _isFull;
    bool  _lastBundleVoiceActivity;
    unsigned int  _maxPacketSize;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _mutex;
    int  _operatingMode;
    unsigned int  _packetsPerBundle;
    int  _payload;
    unsigned char  _priority;
    unsigned int  _timestamp;
}

@property (nonatomic) bool allowLargePackets;
@property (nonatomic, readonly) unsigned int bundledPackets;
@property (nonatomic) int bundlingScheme;
@property (nonatomic, readonly) char *encodedBuffer;
@property (nonatomic, readonly) unsigned int encodedBufferSize;
@property (nonatomic, readonly) bool isFull;
@property (nonatomic, readonly) bool isTalkSpurtStart;
@property (nonatomic) unsigned int maxPacketSize;
@property (nonatomic, readonly) unsigned int packetsPerBundle;
@property (nonatomic) int payload;
@property (nonatomic, readonly) unsigned char priority;
@property (nonatomic) unsigned int timestamp;

- (bool)_copyInputBytes:(void*)arg1 numInputBytes:(unsigned int)arg2 payloadType:(int)arg3 timestamp:(unsigned int)arg4;
- (char *)accessUnitDataSectionHead;
- (unsigned int)accessUnitHeaderSectionSize;
- (unsigned int)accessUnitHeaderSectionSizeMaximum;
- (bool)allocateBundleBuffer:(unsigned int)arg1;
- (bool)allowLargePackets;
- (bool)bundleAudio:(void*)arg1 numInputBytes:(unsigned int)arg2 payloadType:(int)arg3 timestamp:(unsigned int)arg4 voiceActivity:(bool)arg5 priority:(unsigned char)arg6;
- (bool)bundleAudioLegacy:(void*)arg1 numInputBytes:(unsigned int)arg2 payloadType:(int)arg3 timestamp:(unsigned int)arg4;
- (bool)bundleAudioRFC3640:(void*)arg1 numInputBytes:(unsigned int)arg2 payloadType:(int)arg3 timestamp:(unsigned int)arg4;
- (unsigned int)bundleBufferSizeWidthMaxPacketSize:(unsigned int)arg1 maxPacketCount:(unsigned int)arg2;
- (unsigned int)bundledPackets;
- (int)bundlingScheme;
- (void)dealloc;
- (char *)encodedBuffer;
- (char *)encodedBufferForRFC3640;
- (unsigned int)encodedBufferSize;
- (unsigned int)encodedBufferSizeForRFC3640;
- (void)initLock;
- (id)initWithOperatingMode:(int)arg1;
- (bool)isFull;
- (bool)isTalkSpurtStart;
- (void)lock;
- (unsigned int)maxPacketSize;
- (unsigned int)packetsPerBundle;
- (int)payload;
- (unsigned char)priority;
- (bool)reallocateBufferWithMaxPacketSize:(unsigned int)arg1 maxPacketCount:(unsigned int)arg2;
- (void)releaseBundleBuffer;
- (void)resetBuffer;
- (void)setAllowLargePackets:(bool)arg1;
- (void)setBundlingScheme:(int)arg1;
- (void)setMaxPacketSize:(unsigned int)arg1;
- (bool)setPacketsPerBundle:(unsigned int)arg1;
- (void)setPayload:(int)arg1;
- (void)setTimestamp:(unsigned int)arg1;
- (unsigned int)timestamp;
- (void)unlock;
- (void)updatePriority:(unsigned char)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

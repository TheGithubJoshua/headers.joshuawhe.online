<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVCMediaStreamConfig.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AVConference.framework/AVCMediaStreamConfig.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AVConference.framework/AVConference (1475.1.8)
 */

@interface AVCMediaStreamConfig : NSObject {
    long long  _SRTCPCipherSuite;
    long long  _SRTPCipherSuite;
    AVCAudioStreamConfig * _audio;
    NSString * _cName;
    long long  _direction;
    AVCNetworkAddress * _localAddress;
    bool  _rateAdaptationEnabled;
    NSData * _receiveMasterKey;
    unsigned long long  _recommendedMTU;
    AVCNetworkAddress * _remoteAddress;
    unsigned int  _remoteSSRC;
    bool  _rtcpEnabled;
    unsigned short  _rtcpRemotePort;
    double  _rtcpSendInterval;
    bool  _rtcpTimeOutEnabled;
    double  _rtcpTimeOutInterval;
    bool  _rtcpXREnabled;
    bool  _rtpTimeOutEnabled;
    double  _rtpTimeOutInterval;
    unsigned long long  _rxPayloadType;
    NSData * _sendMasterKey;
    AVCTextStreamConfig * _text;
    unsigned long long  _txPayloadType;
    AVCVideoStreamConfig * _video;
}

@property (nonatomic) long long SRTCPCipherSuite;
@property (nonatomic) long long SRTPCipherSuite;
@property (nonatomic, retain) AVCAudioStreamConfig *audio;
@property (nonatomic, copy) NSString *cName;
@property (nonatomic) long long direction;
@property (nonatomic, retain) AVCNetworkAddress *localAddress;
@property (getter=isRateAdaptationEnabled, nonatomic) bool rateAdaptationEnabled;
@property (nonatomic, retain) NSData *receiveMasterKey;
@property (nonatomic) unsigned long long recommendedMTU;
@property (nonatomic, retain) AVCNetworkAddress *remoteAddress;
@property (nonatomic) unsigned int remoteSSRC;
@property (getter=isRTCPEnabled, nonatomic) bool rtcpEnabled;
@property (nonatomic) unsigned short rtcpRemotePort;
@property (nonatomic) double rtcpSendInterval;
@property (getter=isRTCPTimeOutEnabled, nonatomic) bool rtcpTimeOutEnabled;
@property (nonatomic) double rtcpTimeOutInterval;
@property (getter=isRTCPXREnabled, nonatomic) bool rtcpXREnabled;
@property (getter=isRTPTimeOutEnabled, nonatomic) bool rtpTimeOutEnabled;
@property (nonatomic) double rtpTimeOutInterval;
@property (nonatomic) unsigned long long rxPayloadType;
@property (nonatomic, retain) NSData *sendMasterKey;
@property (nonatomic, retain) AVCTextStreamConfig *text;
@property (nonatomic) unsigned long long txPayloadType;
@property (nonatomic, retain) AVCVideoStreamConfig *video;

+ (long long)cipherSuiteWithClientCipherSuite:(long long)arg1;
+ (long long)clientCipherSuiteWithCipherSuite:(long long)arg1;
+ (long long)clientStreamDirectionWithDirection:(long long)arg1;
+ (id)dictionaryForCommonStreamConfig:(id)arg1;
+ (long long)streamDirectionWithClientDirection:(long long)arg1;

- (long long)SRTCPCipherSuite;
- (long long)SRTPCipherSuite;
- (id)audio;
- (id)cName;
- (void)dealloc;
- (id)description;
- (id)dictionary;
- (long long)direction;
- (id)init;
- (bool)isAudioCodecValid;
- (bool)isRTCPEnabled;
- (bool)isRTCPTimeOutEnabled;
- (bool)isRTCPXREnabled;
- (bool)isRTPTimeOutEnabled;
- (bool)isRateAdaptationEnabled;
- (bool)isValidAudioConfig;
- (bool)isValidTextConfig;
- (bool)isValidVideoConfig;
- (id)localAddress;
- (id)receiveMasterKey;
- (unsigned long long)recommendedMTU;
- (id)remoteAddress;
- (unsigned int)remoteSSRC;
- (unsigned short)rtcpRemotePort;
- (double)rtcpSendInterval;
- (double)rtcpTimeOutInterval;
- (double)rtpTimeOutInterval;
- (unsigned long long)rxPayloadType;
- (id)sendMasterKey;
- (void)setAudio:(id)arg1;
- (void)setCName:(id)arg1;
- (void)setDirection:(long long)arg1;
- (void)setLocalAddress:(id)arg1;
- (void)setRateAdaptationEnabled:(bool)arg1;
- (void)setReceiveMasterKey:(id)arg1;
- (void)setRecommendedMTU:(unsigned long long)arg1;
- (void)setRemoteAddress:(id)arg1;
- (void)setRemoteSSRC:(unsigned int)arg1;
- (void)setRtcpEnabled:(bool)arg1;
- (void)setRtcpRemotePort:(unsigned short)arg1;
- (void)setRtcpSendInterval:(double)arg1;
- (void)setRtcpTimeOutEnabled:(bool)arg1;
- (void)setRtcpTimeOutInterval:(double)arg1;
- (void)setRtcpXREnabled:(bool)arg1;
- (void)setRtpTimeOutEnabled:(bool)arg1;
- (void)setRtpTimeOutInterval:(double)arg1;
- (void)setRxPayloadType:(unsigned long long)arg1;
- (void)setSRTCPCipherSuite:(long long)arg1;
- (void)setSRTPCipherSuite:(long long)arg1;
- (void)setSendMasterKey:(id)arg1;
- (void)setText:(id)arg1;
- (void)setTxPayloadType:(unsigned long long)arg1;
- (void)setUpWithDictionary:(id)arg1;
- (void)setVideo:(id)arg1;
- (id)text;
- (unsigned long long)txPayloadType;
- (id)video;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

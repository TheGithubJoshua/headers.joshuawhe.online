<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_ATXAggregateLogger.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AppPredictionInternal.framework/_ATXAggregateLogger.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AppPredictionInternal.framework/AppPredictionInternal (1)
 */

@interface _ATXAggregateLogger : NSObject {
    PETScalarEventTracker * _allLaunchesPredictionTracker;
    PETScalarEventTracker * _appOutcomeTracker;
    long long  _buildType;
    _ATXBundleIdSet * _bundleIdSet;
    PETDistributionEventTracker * _consumerOutcomeCacheAgeHistogram;
    PETScalarEventTracker * _conversionPositionTracker;
    PETScalarEventTracker * _conversionTracker;
    PETScalarEventTracker * _expertOutcomeTracker;
    PETGoalConversionEventTracker * _fidesRecordCreationTracker;
    PETDistributionEventTracker * _inputsTracker;
    PETScalarEventTracker * _itemsShownTracker;
    PETScalarEventTracker * _limitedAppLaunchTracker;
    PETScalarEventTracker * _notificationOutcomeTracker;
    PETScalarEventTracker * _outcomeConsumerTracker;
    PETDistributionEventTracker * _outcomeConsumerTrackerWithCacheAge;
    PETScalarEventTracker * _outcomeTracker;
    PETScalarEventTracker * _predictUninstalledAppsTracker;
    PETScalarEventTracker * _predictionTracker;
    PETScalarEventTracker * _promotingSuggestionOutcomeTracker;
    PETScalarEventTracker * _quietingSuggestionOutcomeTracker;
    PETDistributionEventTracker * _scoreTracker;
    PETScalarEventTracker * _suggestionsCountTracker;
    PETScalarEventTracker * _widgetBackgroundRefreshTracker;
}

+ (long long)getBuildType;
+ (bool)isConversionOutcome:(unsigned long long)arg1;
+ (id)notificationOutcomesMapping;
+ (id)predictedItemOutcomesMapping;
+ (id)predictionOutcomesMapping;
+ (id)propertyStringForLaunchReason:(id)arg1;
+ (id)quietingSuggestionOutcomesMapping;
+ (id)sharedInstance;
+ (id)stringForPredictedItemOutcome:(unsigned long long)arg1;
+ (id)stringForPredictionOutcome:(unsigned long long)arg1;
+ (id)suggestionCountsArray;
+ (bool)yesWithProbability:(double)arg1;
+ (void)yesWithProbabilityAlwaysSays:(bool)arg1;
+ (void)yesWithProbabilityStopMocking;

- (void).cxx_destruct;
- (id)init;
- (void)logAppLaunch:(id)arg1 bundleId:(id)arg2;
- (void)logFidesRecordCreation:(bool)arg1;
- (void)logInputs:(const float*)arg1 andScore:(float)arg2 withOutcome:(unsigned long long)arg3;
- (void)logLaunchEventWithLaunchReason:(id)arg1 predicted:(bool)arg2 position:(long long)arg3;
- (void)logNotificationInteraction:(long long)arg1 orbed:(bool)arg2 onscreen:(bool)arg3;
- (void)logPredictUninstalledApps:(unsigned long long)arg1 consumerSubType:(unsigned char)arg2;
- (void)logPredictionEventWith:(id)arg1 outcome:(unsigned long long)arg2 forABGroup:(id)arg3 consumerType:(unsigned long long)arg4 andSubType:(unsigned char)arg5;
- (void)logPredictionOfAppWithBundleId:(id)arg1 inputs:(const float*)arg2 outcome:(unsigned long long)arg3 rank:(unsigned long long)arg4 score:(float)arg5 forABGroup:(id)arg6;
- (void)logPromotingSuggestionOutcome:(long long)arg1;
- (void)logQuietingSuggestionOutcome:(long long)arg1;
- (void)logRefreshedWidgetInBackground;
- (void)logSuggestionCounts:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

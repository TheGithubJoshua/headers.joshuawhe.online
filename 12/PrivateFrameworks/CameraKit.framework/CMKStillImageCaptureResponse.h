<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CMKStillImageCaptureResponse.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CameraKit.framework/CMKStillImageCaptureResponse.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CameraKit.framework/CameraKit (1)
 */

@interface CMKStillImageCaptureResponse : CMKCaptureResponse {
    NSString * _avalancheUUID;
    CIFilter * _effectFilter;
    bool  _finalResponse;
    id /* block */  _stillImageCompletionBlock;
    UIImage * _stillImageFilteredPreviewImage;
    struct __IOSurface { } * _stillImageFilteredPreviewSurface;
    NSData * _stillImageJPEGData;
    NSMutableDictionary * _stillImageJob;
    UIImage * _stillImageOriginalImage;
    struct opaqueCMSampleBuffer { } * _stillImageOriginalSampleBuffer;
    struct __IOSurface { } * _stillImageOriginalSurface;
    unsigned long long  _stillImageOriginalSurfaceSize;
    id /* block */  _stillImageRequestEnqueuedBlock;
    UIImage * _stillImageUnfilteredPreviewImage;
    struct __IOSurface { } * _stillImageUnfilteredPreviewSurface;
    NSString * _timelapseDestinationPath;
    bool  _transient;
}

@property (nonatomic, copy) NSString *avalancheUUID;
@property (nonatomic, copy) CIFilter *effectFilter;
@property (getter=isFinalResponse, nonatomic) bool finalResponse;
@property (nonatomic, copy) id /* block */ stillImageCompletionBlock;
@property (nonatomic, retain) UIImage *stillImageFilteredPreviewImage;
@property (nonatomic) struct __IOSurface { }*stillImageFilteredPreviewSurface;
@property (nonatomic, retain) NSData *stillImageJPEGData;
@property (nonatomic, retain) NSMutableDictionary *stillImageJob;
@property (nonatomic, readonly, copy) NSDictionary *stillImageMetadata;
@property (nonatomic, retain) UIImage *stillImageOriginalImage;
@property (nonatomic) struct opaqueCMSampleBuffer { }*stillImageOriginalSampleBuffer;
@property (nonatomic) struct __IOSurface { }*stillImageOriginalSurface;
@property (nonatomic) unsigned long long stillImageOriginalSurfaceSize;
@property (nonatomic, copy) id /* block */ stillImageRequestEnqueuedBlock;
@property (nonatomic, retain) UIImage *stillImageUnfilteredPreviewImage;
@property (nonatomic) struct __IOSurface { }*stillImageUnfilteredPreviewSurface;
@property (nonatomic, readonly) UIImage *thumbnailImage;
@property (nonatomic, copy) NSString *timelapseDestinationPath;
@property (getter=isTransient, nonatomic) bool transient;

- (void).cxx_destruct;
- (id)avalancheUUID;
- (void)dealloc;
- (id)effectFilter;
- (id)init;
- (bool)isFinalResponse;
- (bool)isTransient;
- (void)releaseCachedImages;
- (void)setAvalancheUUID:(id)arg1;
- (void)setEffectFilter:(id)arg1;
- (void)setFinalResponse:(bool)arg1;
- (void)setStillImageCompletionBlock:(id /* block */)arg1;
- (void)setStillImageFilteredPreviewImage:(id)arg1;
- (void)setStillImageFilteredPreviewSurface:(struct __IOSurface { }*)arg1;
- (void)setStillImageJPEGData:(id)arg1;
- (void)setStillImageJob:(id)arg1;
- (void)setStillImageOriginalImage:(id)arg1;
- (void)setStillImageOriginalSampleBuffer:(struct opaqueCMSampleBuffer { }*)arg1;
- (void)setStillImageOriginalSurface:(struct __IOSurface { }*)arg1;
- (void)setStillImageOriginalSurfaceSize:(unsigned long long)arg1;
- (void)setStillImageRequestEnqueuedBlock:(id /* block */)arg1;
- (void)setStillImageUnfilteredPreviewImage:(id)arg1;
- (void)setStillImageUnfilteredPreviewSurface:(struct __IOSurface { }*)arg1;
- (void)setTimelapseDestinationPath:(id)arg1;
- (void)setTransient:(bool)arg1;
- (id /* block */)stillImageCompletionBlock;
- (id)stillImageFilteredPreviewImage;
- (struct __IOSurface { }*)stillImageFilteredPreviewSurface;
- (id)stillImageJPEGData;
- (id)stillImageJob;
- (id)stillImageMetadata;
- (id)stillImageOriginalImage;
- (struct opaqueCMSampleBuffer { }*)stillImageOriginalSampleBuffer;
- (struct __IOSurface { }*)stillImageOriginalSurface;
- (unsigned long long)stillImageOriginalSurfaceSize;
- (id /* block */)stillImageRequestEnqueuedBlock;
- (id)stillImageUnfilteredPreviewImage;
- (struct __IOSurface { }*)stillImageUnfilteredPreviewSurface;
- (id)thumbnailImage;
- (id)timelapseDestinationPath;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

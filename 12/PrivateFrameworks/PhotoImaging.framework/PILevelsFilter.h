<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PILevelsFilter.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotoImaging.framework/PILevelsFilter.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotoImaging.framework/PhotoImaging (3462.2.130)
 */

@interface PILevelsFilter : CIFilter {
    NSNumber * _inputBlackDstBlue;
    NSNumber * _inputBlackDstGreen;
    NSNumber * _inputBlackDstRGB;
    NSNumber * _inputBlackDstRed;
    NSNumber * _inputBlackSrcBlue;
    NSNumber * _inputBlackSrcGreen;
    NSNumber * _inputBlackSrcRGB;
    NSNumber * _inputBlackSrcRed;
    NSString * _inputColorSpace;
    NSNumber * _inputHilightDstBlue;
    NSNumber * _inputHilightDstGreen;
    NSNumber * _inputHilightDstRGB;
    NSNumber * _inputHilightDstRed;
    NSNumber * _inputHilightSrcBlue;
    NSNumber * _inputHilightSrcGreen;
    NSNumber * _inputHilightSrcRGB;
    NSNumber * _inputHilightSrcRed;
    CIImage * _inputImage;
    NSNumber * _inputMidDstBlue;
    NSNumber * _inputMidDstGreen;
    NSNumber * _inputMidDstRGB;
    NSNumber * _inputMidDstRed;
    NSNumber * _inputMidSrcBlue;
    NSNumber * _inputMidSrcGreen;
    NSNumber * _inputMidSrcRGB;
    NSNumber * _inputMidSrcRed;
    NSNumber * _inputShadowDstBlue;
    NSNumber * _inputShadowDstGreen;
    NSNumber * _inputShadowDstRGB;
    NSNumber * _inputShadowDstRed;
    NSNumber * _inputShadowSrcBlue;
    NSNumber * _inputShadowSrcGreen;
    NSNumber * _inputShadowSrcRGB;
    NSNumber * _inputShadowSrcRed;
    NSNumber * _inputWhiteDstBlue;
    NSNumber * _inputWhiteDstGreen;
    NSNumber * _inputWhiteDstRGB;
    NSNumber * _inputWhiteDstRed;
    NSNumber * _inputWhiteSrcBlue;
    NSNumber * _inputWhiteSrcGreen;
    NSNumber * _inputWhiteSrcRGB;
    NSNumber * _inputWhiteSrcRed;
}

@property (nonatomic, retain) NSNumber *inputBlackDstBlue;
@property (nonatomic, retain) NSNumber *inputBlackDstGreen;
@property (nonatomic, retain) NSNumber *inputBlackDstRGB;
@property (nonatomic, retain) NSNumber *inputBlackDstRed;
@property (nonatomic, retain) NSNumber *inputBlackSrcBlue;
@property (nonatomic, retain) NSNumber *inputBlackSrcGreen;
@property (nonatomic, retain) NSNumber *inputBlackSrcRGB;
@property (nonatomic, retain) NSNumber *inputBlackSrcRed;
@property (nonatomic, retain) NSString *inputColorSpace;
@property (nonatomic, retain) NSNumber *inputHilightDstBlue;
@property (nonatomic, retain) NSNumber *inputHilightDstGreen;
@property (nonatomic, retain) NSNumber *inputHilightDstRGB;
@property (nonatomic, retain) NSNumber *inputHilightDstRed;
@property (nonatomic, retain) NSNumber *inputHilightSrcBlue;
@property (nonatomic, retain) NSNumber *inputHilightSrcGreen;
@property (nonatomic, retain) NSNumber *inputHilightSrcRGB;
@property (nonatomic, retain) NSNumber *inputHilightSrcRed;
@property (nonatomic, retain) CIImage *inputImage;
@property (nonatomic, retain) NSNumber *inputMidDstBlue;
@property (nonatomic, retain) NSNumber *inputMidDstGreen;
@property (nonatomic, retain) NSNumber *inputMidDstRGB;
@property (nonatomic, retain) NSNumber *inputMidDstRed;
@property (nonatomic, retain) NSNumber *inputMidSrcBlue;
@property (nonatomic, retain) NSNumber *inputMidSrcGreen;
@property (nonatomic, retain) NSNumber *inputMidSrcRGB;
@property (nonatomic, retain) NSNumber *inputMidSrcRed;
@property (nonatomic, retain) NSNumber *inputShadowDstBlue;
@property (nonatomic, retain) NSNumber *inputShadowDstGreen;
@property (nonatomic, retain) NSNumber *inputShadowDstRGB;
@property (nonatomic, retain) NSNumber *inputShadowDstRed;
@property (nonatomic, retain) NSNumber *inputShadowSrcBlue;
@property (nonatomic, retain) NSNumber *inputShadowSrcGreen;
@property (nonatomic, retain) NSNumber *inputShadowSrcRGB;
@property (nonatomic, retain) NSNumber *inputShadowSrcRed;
@property (nonatomic, retain) NSNumber *inputWhiteDstBlue;
@property (nonatomic, retain) NSNumber *inputWhiteDstGreen;
@property (nonatomic, retain) NSNumber *inputWhiteDstRGB;
@property (nonatomic, retain) NSNumber *inputWhiteDstRed;
@property (nonatomic, retain) NSNumber *inputWhiteSrcBlue;
@property (nonatomic, retain) NSNumber *inputWhiteSrcGreen;
@property (nonatomic, retain) NSNumber *inputWhiteSrcRGB;
@property (nonatomic, retain) NSNumber *inputWhiteSrcRed;

+ (id)P3Kernel;
+ (id)_customAttributesForKey:(id)arg1;
+ (id)customAttributes;
+ (id)defaultValueForKey:(id)arg1;

- (void).cxx_destruct;
- (id)_LUTImage;
- (double)floatValueForKey:(id)arg1 defaultValue:(double)arg2 clearIfNotDefault:(bool*)arg3;
- (id)inputBlackDstBlue;
- (id)inputBlackDstGreen;
- (id)inputBlackDstRGB;
- (id)inputBlackDstRed;
- (id)inputBlackSrcBlue;
- (id)inputBlackSrcGreen;
- (id)inputBlackSrcRGB;
- (id)inputBlackSrcRed;
- (id)inputColorSpace;
- (id)inputHilightDstBlue;
- (id)inputHilightDstGreen;
- (id)inputHilightDstRGB;
- (id)inputHilightDstRed;
- (id)inputHilightSrcBlue;
- (id)inputHilightSrcGreen;
- (id)inputHilightSrcRGB;
- (id)inputHilightSrcRed;
- (id)inputImage;
- (id)inputMidDstBlue;
- (id)inputMidDstGreen;
- (id)inputMidDstRGB;
- (id)inputMidDstRed;
- (id)inputMidSrcBlue;
- (id)inputMidSrcGreen;
- (id)inputMidSrcRGB;
- (id)inputMidSrcRed;
- (id)inputShadowDstBlue;
- (id)inputShadowDstGreen;
- (id)inputShadowDstRGB;
- (id)inputShadowDstRed;
- (id)inputShadowSrcBlue;
- (id)inputShadowSrcGreen;
- (id)inputShadowSrcRGB;
- (id)inputShadowSrcRed;
- (id)inputWhiteDstBlue;
- (id)inputWhiteDstGreen;
- (id)inputWhiteDstRGB;
- (id)inputWhiteDstRed;
- (id)inputWhiteSrcBlue;
- (id)inputWhiteSrcGreen;
- (id)inputWhiteSrcRGB;
- (id)inputWhiteSrcRed;
- (id)outputImage;
- (void)setDefaults;
- (void)setInputBlackDstBlue:(id)arg1;
- (void)setInputBlackDstGreen:(id)arg1;
- (void)setInputBlackDstRGB:(id)arg1;
- (void)setInputBlackDstRed:(id)arg1;
- (void)setInputBlackSrcBlue:(id)arg1;
- (void)setInputBlackSrcGreen:(id)arg1;
- (void)setInputBlackSrcRGB:(id)arg1;
- (void)setInputBlackSrcRed:(id)arg1;
- (void)setInputColorSpace:(id)arg1;
- (void)setInputHilightDstBlue:(id)arg1;
- (void)setInputHilightDstGreen:(id)arg1;
- (void)setInputHilightDstRGB:(id)arg1;
- (void)setInputHilightDstRed:(id)arg1;
- (void)setInputHilightSrcBlue:(id)arg1;
- (void)setInputHilightSrcGreen:(id)arg1;
- (void)setInputHilightSrcRGB:(id)arg1;
- (void)setInputHilightSrcRed:(id)arg1;
- (void)setInputImage:(id)arg1;
- (void)setInputMidDstBlue:(id)arg1;
- (void)setInputMidDstGreen:(id)arg1;
- (void)setInputMidDstRGB:(id)arg1;
- (void)setInputMidDstRed:(id)arg1;
- (void)setInputMidSrcBlue:(id)arg1;
- (void)setInputMidSrcGreen:(id)arg1;
- (void)setInputMidSrcRGB:(id)arg1;
- (void)setInputMidSrcRed:(id)arg1;
- (void)setInputShadowDstBlue:(id)arg1;
- (void)setInputShadowDstGreen:(id)arg1;
- (void)setInputShadowDstRGB:(id)arg1;
- (void)setInputShadowDstRed:(id)arg1;
- (void)setInputShadowSrcBlue:(id)arg1;
- (void)setInputShadowSrcGreen:(id)arg1;
- (void)setInputShadowSrcRGB:(id)arg1;
- (void)setInputShadowSrcRed:(id)arg1;
- (void)setInputWhiteDstBlue:(id)arg1;
- (void)setInputWhiteDstGreen:(id)arg1;
- (void)setInputWhiteDstRGB:(id)arg1;
- (void)setInputWhiteDstRed:(id)arg1;
- (void)setInputWhiteSrcBlue:(id)arg1;
- (void)setInputWhiteSrcGreen:(id)arg1;
- (void)setInputWhiteSrcRGB:(id)arg1;
- (void)setInputWhiteSrcRed:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HAPAccessory.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreHAP.framework/HAPAccessory.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP (484.7.17.1)
 */

@interface HAPAccessory : HMFObject <HMFMerging> {
    HMFMACAddress * _bluetoothClassicMacAddress;
    <HAPAccessoryDelegate> * _delegate;
    NSString * _firmwareVersion;
    NSString * _identifier;
    NSNumber * _instanceID;
    long long  _linkType;
    NSString * _manufacturer;
    NSString * _model;
    NSString * _name;
    bool  _primary;
    bool  _reachable;
    NSString * _serialNumber;
    HAPAccessoryServer * _server;
    NSString * _serverIdentifier;
    NSArray * _services;
    bool  _supportsRelay;
    NSString * _uniqueIdentifier;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (copy) HMFMACAddress *bluetoothClassicMacAddress;
@property (nonatomic, readonly, copy) NSNumber *category;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HAPAccessoryDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *firmwareVersion;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSNumber *instanceID;
@property (nonatomic, readonly) long long linkType;
@property (nonatomic, copy) NSString *manufacturer;
@property (nonatomic, copy) NSString *model;
@property (nonatomic, copy) NSString *name;
@property (getter=isPaired, nonatomic, readonly) bool paired;
@property (getter=isPrimary, nonatomic) bool primary;
@property (getter=isReachable, nonatomic) bool reachable;
@property (nonatomic, copy) NSString *serialNumber;
@property (nonatomic) HAPAccessoryServer *server;
@property (nonatomic, copy) NSString *serverIdentifier;
@property (nonatomic, retain) NSArray *services;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsRelay;
@property (nonatomic, copy) NSString *uniqueIdentifier;
@property (retain) NSObject<OS_dispatch_queue> *workQueue;

+ (id)instanceIDForUniqueIdentifier:(id)arg1;
+ (bool)isAccessoryPairedWithIdentifier:(id)arg1;
+ (bool)isAccessoryPrimaryWithUniqueIdentifier:(id)arg1;
+ (id)serverIdentifierWithUniqueIdentifier:(id)arg1;

- (void).cxx_destruct;
- (bool)_isReachable;
- (void)_setReachable:(bool)arg1;
- (bool)_updateAndValidateServices;
- (bool)_updateForAccessoryInformationService;
- (bool)_updateService:(id)arg1;
- (id)bluetoothClassicMacAddress;
- (id)category;
- (id)characteristicOfType:(id)arg1 serviceType:(id)arg2;
- (id)characteristicsOfType:(id)arg1;
- (id)delegate;
- (id)description;
- (id)firmwareVersion;
- (unsigned long long)hash;
- (id)identifier;
- (id)init;
- (id)initWithServer:(id)arg1 instanceID:(id)arg2;
- (id)initWithServer:(id)arg1 instanceID:(id)arg2 parsedServices:(id)arg3;
- (id)instanceID;
- (void)invalidate;
- (bool)isEqual:(id)arg1;
- (bool)isPaired;
- (bool)isPrimary;
- (bool)isReachable;
- (long long)linkType;
- (id)manufacturer;
- (bool)mergeObject:(id)arg1;
- (id)model;
- (id)name;
- (void)readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)readValueForCharacteristic:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)serialNumber;
- (id)server;
- (id)serverIdentifier;
- (id)services;
- (id)servicesOfType:(id)arg1;
- (void)setBluetoothClassicMacAddress:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFirmwareVersion:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInstanceID:(id)arg1;
- (void)setManufacturer:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setName:(id)arg1;
- (void)setPrimary:(bool)arg1;
- (void)setReachable:(bool)arg1;
- (void)setSerialNumber:(id)arg1;
- (void)setServer:(id)arg1;
- (void)setServerIdentifier:(id)arg1;
- (void)setServices:(id)arg1;
- (void)setSupportsRelay:(bool)arg1;
- (void)setUniqueIdentifier:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (bool)shouldMergeObject:(id)arg1;
- (bool)supportsRelay;
- (id)uniqueIdentifier;
- (bool)validateCharacteristicValues:(id*)arg1;
- (id)workQueue;
- (void)writeCharacteristicValue:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(id /* block */)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HAPSecuritySession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreHAP.framework/HAPSecuritySession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP (484.7.17.1)
 */

@interface HAPSecuritySession : HMFObject {
    NSData * _broadcastKey;
    NSObject<OS_dispatch_queue> * _clientQueue;
    <HAPSecuritySessionDelegate> * _delegate;
    HAPSecuritySessionEncryption * _encryption;
    struct PairingSessionPrivate { } * _pairingSession;
    NSObject<OS_dispatch_queue> * _propertyQueue;
    unsigned long long  _resumeSessionID;
    unsigned long long  _role;
    unsigned long long  _state;
}

@property (nonatomic, retain) NSData *broadcastKey;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly) <HAPSecuritySessionDelegate> *delegate;
@property (nonatomic, retain) HAPSecuritySessionEncryption *encryption;
@property (getter=isOpen, readonly) bool open;
@property (getter=isOpening, readonly) bool opening;
@property (nonatomic) struct PairingSessionPrivate { }*pairingSession;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *propertyQueue;
@property (nonatomic, readonly) unsigned long long resumeSessionID;
@property (nonatomic, readonly) unsigned long long role;
@property unsigned long long state;

- (void).cxx_destruct;
- (id)_broadcastInfo;
- (void)_closeWithError:(id)arg1;
- (id)_handleLocalPairingIdentityRequestWithStatus:(int*)arg1;
- (id)_handlePeerPairingIdentityRequestWithIdentifier:(id)arg1 status:(int*)arg2;
- (void)_handleSetupExchangeComplete;
- (bool)_initializeSetupSession:(unsigned long long)arg1;
- (void)_initiateClientSessionSetupExchange;
- (id)_inputInfo;
- (void)_invalidate;
- (void)_notifyOpened;
- (void)_notifyOpening;
- (id)_outputInfo;
- (void)_processSetupExchangeData:(id)arg1 error:(id)arg2;
- (id)broadcastKey;
- (id)clientQueue;
- (void)close;
- (void)closeWithError:(id)arg1;
- (void)dealloc;
- (id)debugDescription;
- (id)decryptData:(id)arg1 additionalAuthenticatedData:(id)arg2 error:(id*)arg3;
- (id)delegate;
- (id)description;
- (id)encryptData:(id)arg1 additionalAuthenticatedData:(id)arg2 error:(id*)arg3;
- (id)encryption;
- (id)getBroadcastEncryptionKey;
- (id)initWithRole:(unsigned long long)arg1 resumeSessionID:(unsigned long long)arg2 delegate:(id)arg3;
- (bool)isOpen;
- (bool)isOpening;
- (void)open;
- (struct PairingSessionPrivate { }*)pairingSession;
- (id)propertyQueue;
- (void)reallyOpen;
- (void)receivedSetupExchangeData:(id)arg1 error:(id)arg2;
- (unsigned long long)resumeSessionID;
- (unsigned long long)role;
- (void)setBroadcastKey:(id)arg1;
- (void)setEncryption:(id)arg1;
- (void)setPairingSession:(struct PairingSessionPrivate { }*)arg1;
- (void)setResumeSessionID:(unsigned long long)arg1;
- (void)setState:(unsigned long long)arg1;
- (unsigned long long)state;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BBObserver.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BulletinBoard.framework/BBObserver.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard (1)
 */

@interface BBObserver : NSObject <BBAssertionDelegate> {
    NSMutableDictionary * _attachmentUUIDsForBulletinID;
    NSMapTable * _bulletinLifeAssertions;
    BBGuaranteedOnceCache * _cachedComposedImageForAttachmentUUID;
    BBGuaranteedOnceCache * _cachedComposedImageSizeForAttachmentUUID;
    BBGuaranteedOnceCache * _cachedDataForAttachmentUUID;
    NSObject<OS_dispatch_queue> * _calloutQueue;
    <BBObserverDelegate> * _delegate;
    NSString * _gatewayName;
    unsigned long long  _gatewayPriority;
    bool  _isGateway;
    unsigned long long  _observerFeed;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableDictionary * _remainingFeedsByBulletinID;
    NSMutableDictionary * _sectionParametersBySectionID;
    BBObserverServerProxy * _serverProxy;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <BBObserverDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSString *gatewayName;
@property (nonatomic, readonly) unsigned long long gatewayPriority;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long observerFeed;
@property (readonly) Class superclass;

+ (id)gatewayWithQueue:(id)arg1 calloutQueue:(id)arg2 name:(id)arg3 priority:(unsigned long long)arg4;
+ (void)initialize;
+ (id)observerWithQueue:(id)arg1 calloutQueue:(id)arg2 forGatewayName:(id)arg3;

- (void).cxx_destruct;
- (void)_getComposedImageIgnoringCacheForAttachment:(id)arg1 bulletin:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)_getComposedImageSizeIgnoringCacheForAttachment:(id)arg1 bulletin:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)_getDataIgnoringCacheForAttachment:(id)arg1 bulletin:(id)arg2 withCompletion:(id /* block */)arg3;
- (id)_initWithQueue:(id)arg1 calloutQueue:(id)arg2 gatewayName:(id)arg3 gatewayPriority:(unsigned long long)arg4 isGateway:(bool)arg5;
- (void)_prewarmSectionParametersAndAttachmentsForBulletin:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (void)_queue_associateAttachment:(id)arg1 withBulletin:(id)arg2;
- (id)_queue_cachedComposedImageForAttachment:(id)arg1;
- (id)_queue_cachedComposedImageSizeForAttachment:(id)arg1;
- (id)_queue_cachedDataForAttachment:(id)arg1;
- (void)_queue_cleanupAttachmentCacheForBulletinID:(id)arg1;
- (bool)_queue_hasCachedComposedImageForAttachment:(id)arg1;
- (bool)_queue_hasCachedComposedImageSizeForAttachment:(id)arg1;
- (bool)_queue_hasCachedDataForAttachment:(id)arg1;
- (void)_queue_invalidate;
- (void)_queue_registerBulletin:(id)arg1 withTransactionID:(unsigned long long)arg2;
- (void)_queue_serverProxy:(id)arg1 connectionStateDidChange:(bool)arg2;
- (void)_queue_setCachedComposedImage:(id)arg1 forAttachment:(id)arg2 bulletin:(id)arg3;
- (void)_queue_setCachedComposedImageSize:(id)arg1 forAttachment:(id)arg2 bulletin:(id)arg3;
- (void)_queue_setCachedData:(id)arg1 forAttachment:(id)arg2 bulletin:(id)arg3;
- (void)_queue_updateAddBulletin:(id)arg1 withReply:(id /* block */)arg2;
- (void)_queue_updateBulletin:(id)arg1 withReply:(id /* block */)arg2;
- (void)_queue_updateModifyBulletin:(id)arg1 withReply:(id /* block */)arg2;
- (void)_queue_updateRemoveBulletin:(id)arg1 withReply:(id /* block */)arg2;
- (void)assertionExpired:(id)arg1 transactionID:(unsigned long long)arg2;
- (id)cachedComposedImageForBulletin:(id)arg1 attachment:(id)arg2;
- (struct CGSize { double x1; double x2; })cachedComposedImageSizeForBulletin:(id)arg1 attachment:(id)arg2;
- (void)clearBulletins:(id)arg1 inSection:(id)arg2;
- (void)clearBulletinsFromDate:(id)arg1 toDate:(id)arg2 inSections:(id)arg3;
- (void)clearSection:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)gatewayName;
- (unsigned long long)gatewayPriority;
- (void)getAttachmentImageForBulletin:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)getBulletinsForPublisherMatchIDs:(id)arg1 sectionID:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)getBulletinsWithCompletion:(id /* block */)arg1;
- (void)getComposedImageForAttachment:(id)arg1 bulletin:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)getComposedImageSizeForAttachment:(id)arg1 bulletin:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)getDataForAttachment:(id)arg1 bulletin:(id)arg2 withCompletion:(id /* block */)arg3;
- (void)getParametersForSectionID:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)getPrimaryAttachmentDataForBulletin:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)getPublisherMatchIDsOfBulletinsPublishedAfterDate:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)getSectionInfoForActiveSectionsWithCompletion:(id /* block */)arg1;
- (void)getSectionInfoForSectionIDs:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)getSectionInfoWithCompletion:(id /* block */)arg1;
- (void)getUniversalSectionIDForSectionID:(id)arg1 withCompletion:(id /* block */)arg2;
- (id)init;
- (id)initWithQueue:(id)arg1;
- (id)initWithQueue:(id)arg1 asGateway:(id)arg2 priority:(unsigned long long)arg3;
- (id)initWithQueue:(id)arg1 calloutQueue:(id)arg2;
- (id)initWithQueue:(id)arg1 calloutQueue:(id)arg2 gatewayName:(id)arg3 gatewayPriority:(unsigned long long)arg4 isGateway:(bool)arg5 connection:(id)arg6;
- (id)initWithQueue:(id)arg1 forGateway:(id)arg2;
- (void)invalidate;
- (bool)isValid;
- (void)noteServerReceivedResponseForBulletin:(id)arg1;
- (unsigned long long)observerFeed;
- (id)parametersForSectionID:(id)arg1;
- (void)removeBulletins:(id)arg1 inSection:(id)arg2;
- (void)removeBulletins:(id)arg1 inSection:(id)arg2 fromFeed:(unsigned long long)arg3;
- (void)removeSection:(id)arg1;
- (void)requestListBulletinsForSectionID:(id)arg1;
- (void)requestNoticesBulletinsForAllSections;
- (void)requestNoticesBulletinsForSectionID:(id)arg1;
- (void)sendResponse:(id)arg1;
- (void)sendResponse:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)serverProxy:(id)arg1 connectionStateDidChange:(bool)arg2;
- (void)setDelegate:(id)arg1;
- (void)setObserverFeed:(unsigned long long)arg1;
- (void)updateBulletin:(id)arg1 withReply:(id /* block */)arg2;
- (void)updateSectionInfo:(id)arg1;
- (void)updateSectionParameters:(id)arg1 forSectionID:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

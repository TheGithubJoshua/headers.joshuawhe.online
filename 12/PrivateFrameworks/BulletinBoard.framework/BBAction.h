<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BBAction.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BulletinBoard.framework/BBAction.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard (1)
 */

@interface BBAction : NSObject <NSCopying, NSSecureCoding> {
    long long  _actionType;
    NSDictionary * _activatePluginContext;
    NSString * _activatePluginName;
    unsigned long long  _activationMode;
    BBAppearance * _appearance;
    bool  _authenticationRequired;
    long long  _behavior;
    NSDictionary * _behaviorParameters;
    bool  _deliverResponse;
    NSString * _identifier;
    id /* block */  _internalBlock;
    NSString * _launchBundleID;
    bool  _launchCanBypassPinLock;
    NSURL * _launchURL;
    NSString * _remoteServiceBundleIdentifier;
    NSString * _remoteViewControllerClassName;
    bool  _shouldDismissBulletin;
}

@property (nonatomic) long long actionType;
@property (nonatomic, copy) NSDictionary *activatePluginContext;
@property (nonatomic, copy) NSString *activatePluginName;
@property (nonatomic) unsigned long long activationMode;
@property (nonatomic, copy) BBAppearance *appearance;
@property (getter=isAuthenticationRequired, nonatomic) bool authenticationRequired;
@property (nonatomic) long long behavior;
@property (nonatomic, copy) NSDictionary *behaviorParameters;
@property (nonatomic) bool canBypassPinLock;
@property (nonatomic, readonly) bool hasInteractiveAction;
@property (nonatomic, readonly) bool hasLaunchAction;
@property (nonatomic, readonly) bool hasPluginAction;
@property (nonatomic, readonly) bool hasRemoteViewAction;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) id /* block */ internalBlock;
@property (nonatomic, copy) NSString *launchBundleID;
@property (nonatomic) bool launchCanBypassPinLock;
@property (nonatomic, copy) NSURL *launchURL;
@property (nonatomic, copy) NSString *remoteServiceBundleIdentifier;
@property (nonatomic, copy) NSString *remoteViewControllerClassName;
@property (nonatomic) bool shouldDismissBulletin;

+ (id)action;
+ (id)actionWithActivatePluginName:(id)arg1 activationContext:(id)arg2;
+ (id)actionWithAppearance:(id)arg1;
+ (id)actionWithCallblock:(id /* block */)arg1;
+ (id)actionWithIdentifier:(id)arg1;
+ (id)actionWithIdentifier:(id)arg1 title:(id)arg2;
+ (id)actionWithLaunchBundleID:(id)arg1;
+ (id)actionWithLaunchBundleID:(id)arg1 callblock:(id /* block */)arg2;
+ (id)actionWithLaunchURL:(id)arg1;
+ (id)actionWithLaunchURL:(id)arg1 callblock:(id /* block */)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_nameForActionType:(long long)arg1;
- (long long)actionType;
- (id)activatePluginContext;
- (id)activatePluginName;
- (unsigned long long)activationMode;
- (id)appearance;
- (id)awakeAfterUsingCoder:(id)arg1;
- (long long)behavior;
- (id)behaviorParameters;
- (id)bundleID;
- (bool)canBypassPinLock;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)deliverResponse:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasInteractiveAction;
- (bool)hasLaunchAction;
- (bool)hasPluginAction;
- (bool)hasRemoteViewAction;
- (unsigned long long)hash;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
- (id /* block */)internalBlock;
- (bool)isAuthenticationRequired;
- (bool)isEqual:(id)arg1;
- (id)launchBundleID;
- (bool)launchCanBypassPinLock;
- (id)launchURL;
- (id)partialDescription;
- (id)remoteServiceBundleIdentifier;
- (id)remoteViewControllerClassName;
- (id)replacementObjectForCoder:(id)arg1;
- (void)setActionType:(long long)arg1;
- (void)setActivatePluginContext:(id)arg1;
- (void)setActivatePluginName:(id)arg1;
- (void)setActivationMode:(unsigned long long)arg1;
- (void)setAppearance:(id)arg1;
- (void)setAuthenticationRequired:(bool)arg1;
- (void)setBehavior:(long long)arg1;
- (void)setBehaviorParameters:(id)arg1;
- (void)setCallblock:(id /* block */)arg1;
- (void)setCanBypassPinLock:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInternalBlock:(id /* block */)arg1;
- (void)setLaunchBundleID:(id)arg1;
- (void)setLaunchCanBypassPinLock:(bool)arg1;
- (void)setLaunchURL:(id)arg1;
- (void)setRemoteServiceBundleIdentifier:(id)arg1;
- (void)setRemoteViewControllerClassName:(id)arg1;
- (void)setShouldDismissBulletin:(bool)arg1;
- (bool)shouldDismissBulletin;
- (id)url;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TUConversation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TelephonyUtilities.framework/TUConversation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities (1.0)
 */

@interface TUConversation : NSObject <NSCopying, NSSecureCoding> {
    NSUUID * _UUID;
    NSSet * _activeRemoteParticipants;
    bool  _audioEnabled;
    long long  _avcSessionToken;
    TUContactsDataProvider * _contactsDataProvider;
    NSUUID * _groupUUID;
    TUHandle * _initiator;
    bool  _locallyCreated;
    long long  _maxVideoDecodesAllowed;
    NSString * _messagesGroupName;
    NSUUID * _messagesGroupUUID;
    NSSet * _participantHandles;
    NSSet * _remoteMembers;
    NSObject * _reportingHierarchySubToken;
    NSObject * _reportingHierarchyToken;
    long long  _state;
    bool  _videoEnabled;
}

@property (nonatomic, readonly) NSUUID *UUID;
@property (nonatomic, copy) NSSet *activeRemoteParticipants;
@property (getter=isAudioEnabled, nonatomic) bool audioEnabled;
@property (nonatomic) long long avcSessionToken;
@property (nonatomic, readonly) TUContactsDataProvider *contactsDataProvider;
@property (nonatomic, readonly) NSUUID *groupUUID;
@property (nonatomic, retain) TUHandle *initiator;
@property (getter=isLocallyCreated, nonatomic) bool locallyCreated;
@property (nonatomic) long long maxVideoDecodesAllowed;
@property (nonatomic, copy) NSString *messagesGroupName;
@property (nonatomic, retain) NSUUID *messagesGroupUUID;
@property (nonatomic, copy) NSSet *participantHandles;
@property (nonatomic, copy) NSSet *remoteMembers;
@property (nonatomic, retain) NSObject *reportingHierarchySubToken;
@property (nonatomic, retain) NSObject *reportingHierarchyToken;
@property (nonatomic) long long state;
@property (getter=isVideoEnabled, nonatomic) bool videoEnabled;

+ (id)emptyConversationWithGroupUUID:(id)arg1;
+ (id)numberFormatter;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)UUID;
- (id)activeRemoteParticipants;
- (long long)avcSessionToken;
- (id)contactsDataProvider;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (id)groupUUID;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithUUID:(id)arg1 groupUUID:(id)arg2;
- (id)initiator;
- (id)initiatorLocalizedName;
- (bool)isAudioEnabled;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToConversation:(id)arg1;
- (bool)isLocallyCreated;
- (bool)isRepresentedByRemoteMembers:(id)arg1;
- (bool)isVideoEnabled;
- (long long)maxVideoDecodesAllowed;
- (id)messagesGroupName;
- (id)messagesGroupUUID;
- (id)participantHandles;
- (id)remoteMembers;
- (id)reportingHierarchySubToken;
- (id)reportingHierarchyToken;
- (void)setActiveRemoteParticipants:(id)arg1;
- (void)setAudioEnabled:(bool)arg1;
- (void)setAvcSessionToken:(long long)arg1;
- (void)setInitiator:(id)arg1;
- (void)setLocallyCreated:(bool)arg1;
- (void)setMaxVideoDecodesAllowed:(long long)arg1;
- (void)setMessagesGroupName:(id)arg1;
- (void)setMessagesGroupUUID:(id)arg1;
- (void)setParticipantHandles:(id)arg1;
- (void)setRemoteMembers:(id)arg1;
- (void)setReportingHierarchySubToken:(id)arg1;
- (void)setReportingHierarchyToken:(id)arg1;
- (void)setState:(long long)arg1;
- (void)setVideoEnabled:(bool)arg1;
- (long long)state;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

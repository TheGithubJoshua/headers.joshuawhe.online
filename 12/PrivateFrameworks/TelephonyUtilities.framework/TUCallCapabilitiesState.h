<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TUCallCapabilitiesState.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TelephonyUtilities.framework/TUCallCapabilitiesState.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities (1.0)
 */

@interface TUCallCapabilitiesState : NSObject <NSCopying, NSSecureCoding, TUPubliclyAccessibleCopying> {
    bool  _accountsMatchForSecondaryCalling;
    bool  _accountsSupportSecondaryCalling;
    NSArray * _cloudCallingDevices;
    bool  _ctCapabilitiesValid;
    bool  _emergencyCallbackModeEnabled;
    bool  _emergencyCallbackPossible;
    bool  _faceTimeAudioAvailable;
    bool  _faceTimeVideoAvailable;
    NSString * _outgoingRelayCallerID;
    int  _relayCallingAvailability;
    NSDictionary * _relayCallingDisabledForDeviceID;
    bool  _relayCallingEnabled;
    bool  _relayCallingFeaturesEnabled;
    NSDictionary * _senderIdentityCapabilitiesStateByUUID;
    bool  _supportsBasebandCalling;
    bool  _supportsCellularData;
    bool  _supportsDisplayingFaceTimeAudioCalls;
    bool  _supportsDisplayingFaceTimeVideoCalls;
    bool  _supportsDisplayingTelephonyCalls;
    bool  _supportsFaceTimeAudioRelayCalling;
    bool  _supportsFaceTimeVideoRelayCalling;
    bool  _supportsPrimaryCalling;
    bool  _supportsRelayCalling;
    bool  _supportsTelephonyRelayCalling;
}

@property (nonatomic) bool accountsMatchForSecondaryCalling;
@property (nonatomic) bool accountsSupportSecondaryCalling;
@property (nonatomic, copy) NSArray *cloudCallingDevices;
@property (getter=areCTCapabilitiesValid, nonatomic) bool ctCapabilitiesValid;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) TUCloudCallingDevice *defaultPairedDevice;
@property (readonly, copy) NSString *description;
@property (getter=isEmergencyCallbackModeEnabled, nonatomic) bool emergencyCallbackModeEnabled;
@property (getter=isEmergencyCallbackPossible, nonatomic) bool emergencyCallbackPossible;
@property (getter=isFaceTimeAudioAvailable, nonatomic) bool faceTimeAudioAvailable;
@property (getter=isFaceTimeVideoAvailable, nonatomic) bool faceTimeVideoAvailable;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *outgoingRelayCallerID;
@property (nonatomic) int relayCallingAvailability;
@property (nonatomic, copy) NSDictionary *relayCallingDisabledForDeviceID;
@property (getter=isRelayCallingEnabled, nonatomic) bool relayCallingEnabled;
@property (getter=areRelayCallingFeaturesEnabled, nonatomic) bool relayCallingFeaturesEnabled;
@property (nonatomic, copy) NSDictionary *senderIdentityCapabilitiesStateByUUID;
@property (readonly) Class superclass;
@property (nonatomic) bool supportsBasebandCalling;
@property (nonatomic) bool supportsCellularData;
@property (nonatomic) bool supportsDisplayingFaceTimeAudioCalls;
@property (nonatomic) bool supportsDisplayingFaceTimeVideoCalls;
@property (nonatomic) bool supportsDisplayingTelephonyCalls;
@property (nonatomic) bool supportsFaceTimeAudioRelayCalling;
@property (nonatomic) bool supportsFaceTimeVideoRelayCalling;
@property (nonatomic) bool supportsPrimaryCalling;
@property (nonatomic) bool supportsRelayCalling;
@property (nonatomic) bool supportsTelephonyRelayCalling;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (bool)accountsMatchForSecondaryCalling;
- (bool)accountsSupportSecondaryCalling;
- (bool)areCTCapabilitiesValid;
- (bool)areRelayCallingFeaturesEnabled;
- (id)cloudCallingDevices;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)defaultPairedDevice;
- (id)description;
- (id)deviceIDForPhoneNumber:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isEmergencyCallbackModeEnabled;
- (bool)isEmergencyCallbackPossible;
- (bool)isFaceTimeAudioAvailable;
- (bool)isFaceTimeVideoAvailable;
- (bool)isRelayCallingEnabled;
- (id)outgoingRelayCallerID;
- (id)publiclyAccessibleCopy;
- (id)publiclyAccessibleCopyWithZone:(struct _NSZone { }*)arg1;
- (int)relayCallingAvailability;
- (id)relayCallingDisabledForDeviceID;
- (id)senderIdentityCapabilitiesStateByUUID;
- (void)setAccountsMatchForSecondaryCalling:(bool)arg1;
- (void)setAccountsSupportSecondaryCalling:(bool)arg1;
- (void)setCloudCallingDevices:(id)arg1;
- (void)setCtCapabilitiesValid:(bool)arg1;
- (void)setEmergencyCallbackModeEnabled:(bool)arg1;
- (void)setEmergencyCallbackPossible:(bool)arg1;
- (void)setFaceTimeAudioAvailable:(bool)arg1;
- (void)setFaceTimeVideoAvailable:(bool)arg1;
- (void)setOutgoingRelayCallerID:(id)arg1;
- (void)setRelayCallingAvailability:(int)arg1;
- (void)setRelayCallingDisabledForDeviceID:(id)arg1;
- (void)setRelayCallingEnabled:(bool)arg1;
- (void)setRelayCallingFeaturesEnabled:(bool)arg1;
- (void)setSenderIdentityCapabilitiesStateByUUID:(id)arg1;
- (void)setSupportsBasebandCalling:(bool)arg1;
- (void)setSupportsCellularData:(bool)arg1;
- (void)setSupportsDisplayingFaceTimeAudioCalls:(bool)arg1;
- (void)setSupportsDisplayingFaceTimeVideoCalls:(bool)arg1;
- (void)setSupportsDisplayingTelephonyCalls:(bool)arg1;
- (void)setSupportsFaceTimeAudioRelayCalling:(bool)arg1;
- (void)setSupportsFaceTimeVideoRelayCalling:(bool)arg1;
- (void)setSupportsPrimaryCalling:(bool)arg1;
- (void)setSupportsRelayCalling:(bool)arg1;
- (void)setSupportsTelephonyRelayCalling:(bool)arg1;
- (bool)supportsBasebandCalling;
- (bool)supportsCellularData;
- (bool)supportsDisplayingFaceTimeAudioCalls;
- (bool)supportsDisplayingFaceTimeVideoCalls;
- (bool)supportsDisplayingTelephonyCalls;
- (bool)supportsFaceTimeAudioRelayCalling;
- (bool)supportsFaceTimeVideoRelayCalling;
- (bool)supportsPrimaryCalling;
- (bool)supportsRelayCalling;
- (bool)supportsTelephonyRelayCalling;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

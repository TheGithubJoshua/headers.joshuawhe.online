<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TURoute.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TelephonyUtilities.framework/TURoute.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities (1.0)
 */

@interface TURoute : NSObject <NSCopying, NSMutableCopying, NSSecureCoding> {
    bool  _airTunes;
    bool  _bluetooth;
    long long  _bluetoothEndpointType;
    bool  _bluetoothLE;
    bool  _carAudio;
    bool  _currentlyPicked;
    bool  _defaultRoute;
    long long  _deviceType;
    bool  _guest;
    NSArray * _identifiersOfOtherConnectedDevices;
    NSString * _name;
    bool  _preferred;
    bool  _preferredAndActive;
    bool  _receiver;
    bool  _speaker;
    bool  _supportsPreferredAndActive;
    bool  _supportsRelay;
    NSString * _uniqueIdentifier;
    bool  _wiredHeadphones;
    bool  _wiredHeadset;
    bool  _wirelessHeadset;
}

@property (getter=isAirTunes, nonatomic) bool airTunes;
@property (getter=isBluetooth, nonatomic) bool bluetooth;
@property (nonatomic) long long bluetoothEndpointType;
@property (getter=isBluetoothLE, nonatomic) bool bluetoothLE;
@property (getter=isCarAudio, nonatomic) bool carAudio;
@property (getter=isCurrentlyPicked, nonatomic) bool currentlyPicked;
@property (getter=isDefaultRoute, nonatomic) bool defaultRoute;
@property (nonatomic) long long deviceType;
@property (getter=isGuest, nonatomic) bool guest;
@property (nonatomic, copy) NSArray *identifiersOfOtherConnectedDevices;
@property (nonatomic, readonly, copy) NSString *name;
@property (getter=isPreferred, nonatomic) bool preferred;
@property (getter=isPreferredAndActive, nonatomic) bool preferredAndActive;
@property (getter=isReceiver, nonatomic) bool receiver;
@property (getter=isSpeaker, nonatomic) bool speaker;
@property (nonatomic) bool supportsPreferredAndActive;
@property (nonatomic) bool supportsRelay;
@property (nonatomic, readonly, copy) NSString *uniqueIdentifier;
@property (getter=isWiredHeadphones, nonatomic) bool wiredHeadphones;
@property (getter=isWiredHeadset, nonatomic) bool wiredHeadset;
@property (getter=isWirelessHeadset, nonatomic) bool wirelessHeadset;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (long long)bluetoothEndpointType;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (long long)deviceType;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)identifiersOfOtherConnectedDevices;
- (id)initWithCoder:(id)arg1;
- (id)initWithUniqueIdentifier:(id)arg1 name:(id)arg2;
- (bool)isAirTunes;
- (bool)isBluetooth;
- (bool)isBluetoothLE;
- (bool)isCarAudio;
- (bool)isCurrentlyPicked;
- (bool)isDefaultRoute;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToRoute:(id)arg1;
- (bool)isGuest;
- (bool)isPreferred;
- (bool)isPreferredAndActive;
- (bool)isReceiver;
- (bool)isSpeaker;
- (bool)isWiredHeadphones;
- (bool)isWiredHeadset;
- (bool)isWirelessHeadset;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)name;
- (void)setAirTunes:(bool)arg1;
- (void)setBluetooth:(bool)arg1;
- (void)setBluetoothEndpointType:(long long)arg1;
- (void)setBluetoothLE:(bool)arg1;
- (void)setCarAudio:(bool)arg1;
- (void)setCurrentlyPicked:(bool)arg1;
- (void)setDefaultRoute:(bool)arg1;
- (void)setDeviceType:(long long)arg1;
- (void)setGuest:(bool)arg1;
- (void)setIdentifiersOfOtherConnectedDevices:(id)arg1;
- (void)setPreferred:(bool)arg1;
- (void)setPreferredAndActive:(bool)arg1;
- (void)setReceiver:(bool)arg1;
- (void)setSpeaker:(bool)arg1;
- (void)setSupportsPreferredAndActive:(bool)arg1;
- (void)setSupportsRelay:(bool)arg1;
- (void)setWiredHeadphones:(bool)arg1;
- (void)setWiredHeadset:(bool)arg1;
- (void)setWirelessHeadset:(bool)arg1;
- (bool)supportsPreferredAndActive;
- (bool)supportsRelay;
- (id)uniqueIdentifier;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

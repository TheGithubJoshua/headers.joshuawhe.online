<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TUVideoDeviceController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TelephonyUtilities.framework/TUVideoDeviceController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities (1.0)
 */

@interface TUVideoDeviceController : NSObject <TUVideoDeviceControllerProviderDelegate> {
    bool  _hasRefreshedPreviewAfterError;
    <TUVideoDeviceControllerProvider><TUVideoEffectsProvider> * _provider;
    NSObject<OS_dispatch_queue> * _serialQueue;
    bool  _wantsPreview;
}

@property (nonatomic, readonly, copy) NSArray *availableVideoEffects;
@property (nonatomic, retain) AVCaptureDevice *currentInputDevice;
@property (nonatomic, retain) TUVideoEffect *currentVideoEffect;
@property (nonatomic) int currentVideoOrientation;
@property (nonatomic) bool hasRefreshedPreviewAfterError;
@property (nonatomic, readonly, copy) NSArray *inputDevices;
@property (nonatomic, retain) CALayer *localBackLayer;
@property (nonatomic, retain) CALayer *localFrontLayer;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } localScreenContentsRect;
@property (getter=isPreviewRunning, nonatomic, readonly) bool previewRunning;
@property (nonatomic, readonly) <TUVideoDeviceControllerProvider><TUVideoEffectsProvider> *provider;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *serialQueue;
@property (nonatomic) bool wantsPreview;

+ (int)_tuOrientationForVideoOrientation:(int)arg1;
+ (int)_videoOrientationForTUOrientation:(int)arg1;

- (void).cxx_destruct;
- (id)availableVideoEffects;
- (void)captureDevicesChangedForProvider:(id)arg1;
- (id)currentInputDevice;
- (id)currentVideoEffect;
- (int)currentVideoOrientation;
- (id)debugDescription;
- (void)didStartPreviewForProvider:(id)arg1;
- (void)didStopPreviewForProvider:(id)arg1;
- (bool)hasRefreshedPreviewAfterError;
- (id)init;
- (id)initWithProvider:(id)arg1 serialQueue:(id)arg2;
- (id)initWithSerialQueue:(id)arg1;
- (id)inputDevices;
- (bool)isPreviewRunning;
- (id)localBackLayer;
- (id)localFrontLayer;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })localScreenContentsRect;
- (void)noteBeginAnimationToPIP;
- (void)noteBeginAnimationToPreview;
- (void)noteEndAnimationToPIP;
- (void)noteEndAnimationToPreview;
- (void)pausePreview;
- (id)provider;
- (void)provider:(id)arg1 cameraDidBecomeAvailableForUniqueID:(id)arg2;
- (void)provider:(id)arg1 didChangeLocalVideoAttributes:(id)arg2;
- (void)provider:(id)arg1 didReceiveErrorFromCameraUniqueID:(id)arg2 error:(id)arg3;
- (void)provider:(id)arg1 didReceiveFirstPreviewFrameFromCameraUniqueID:(id)arg2;
- (id)serialQueue;
- (void)setCurrentInputDevice:(id)arg1;
- (void)setCurrentVideoEffect:(id)arg1;
- (void)setCurrentVideoOrientation:(int)arg1;
- (void)setHasRefreshedPreviewAfterError:(bool)arg1;
- (void)setLocalBackLayer:(id)arg1;
- (void)setLocalFrontLayer:(id)arg1;
- (void)setLocalPortraitAspectRatio:(struct CGSize { double x1; double x2; })arg1 localLandscapeAspectRatio:(struct CGSize { double x1; double x2; })arg2;
- (void)setWantsPreview:(bool)arg1;
- (void)startPreview;
- (void)stopPreview;
- (bool)wantsPreview;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

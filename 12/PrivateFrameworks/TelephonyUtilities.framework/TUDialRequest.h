<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TUDialRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TelephonyUtilities.framework/TUDialRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities (1.0)
 */

@interface TUDialRequest : NSObject <NSCopying, NSSecureCoding, TUCallRequest, TUVideoRequest> {
    NSString * _audioSourceIdentifier;
    NSString * _contactIdentifier;
    NSDate * _dateDialed;
    bool  _dialAssisted;
    long long  _dialType;
    NSString * _endpointIDSDestinationURI;
    bool  _endpointOnCurrentDevice;
    TUHandle * _handle;
    bool  _hostOnCurrentDevice;
    id /* block */  _isEmergencyNumberBlock;
    id /* block */  _isEmergencyNumberOrIsWhitelistedBlock;
    struct CGSize { 
        double width; 
        double height; 
    }  _localLandscapeAspectRatio;
    struct CGSize { 
        double width; 
        double height; 
    }  _localPortraitAspectRatio;
    NSUUID * _localSenderIdentityAccountUUID;
    NSUUID * _localSenderIdentityUUID;
    long long  _originatingUIType;
    bool  _performDialAssist;
    bool  _performLocalDialAssist;
    TUCallProvider * _provider;
    NSString * _providerCustomIdentifier;
    TUCallProviderManager * _providerManager;
    bool  _redial;
    TUSenderIdentityClient * _senderIdentityClient;
    bool  _shouldSuppressInCallUI;
    bool  _showUIPrompt;
    bool  _sos;
    long long  _ttyType;
    NSString * _uniqueProxyIdentifier;
    bool  _video;
}

@property (nonatomic, readonly) NSURL *URL;
@property (nonatomic, copy) NSString *audioSourceIdentifier;
@property (nonatomic, copy) NSString *contactIdentifier;
@property (nonatomic, readonly) CNContactStore *contactStore;
@property (nonatomic, retain) NSDate *dateDialed;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *destinationID;
@property (getter=isDialAssisted, nonatomic) bool dialAssisted;
@property (nonatomic) long long dialType;
@property (nonatomic, readonly) IDSDestination *endpointIDSDestination;
@property (nonatomic, copy) NSString *endpointIDSDestinationURI;
@property (nonatomic) bool endpointOnCurrentDevice;
@property (nonatomic, retain) TUHandle *handle;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hostOnCurrentDevice;
@property (nonatomic, copy) id /* block */ isEmergencyNumberBlock;
@property (nonatomic, copy) id /* block */ isEmergencyNumberOrIsWhitelistedBlock;
@property (nonatomic) struct CGSize { double x1; double x2; } localLandscapeAspectRatio;
@property (nonatomic) struct CGSize { double x1; double x2; } localPortraitAspectRatio;
@property (nonatomic, readonly, copy) TUSenderIdentity *localSenderIdentity;
@property (nonatomic, copy) NSUUID *localSenderIdentityAccountUUID;
@property (nonatomic, copy) NSUUID *localSenderIdentityUUID;
@property (nonatomic) long long originatingUIType;
@property (nonatomic) bool performDialAssist;
@property (nonatomic) bool performLocalDialAssist;
@property (nonatomic, retain) TUCallProvider *provider;
@property (nonatomic, copy) NSString *providerCustomIdentifier;
@property (nonatomic, readonly) TUCallProviderManager *providerManager;
@property (getter=isRedial, nonatomic) bool redial;
@property (getter=isRTTAvailable, nonatomic, readonly) bool rttAvailable;
@property (nonatomic, readonly) TUSenderIdentityClient *senderIdentityClient;
@property (nonatomic, readonly) int service;
@property (nonatomic) bool shouldSuppressInCallUI;
@property (nonatomic) bool showUIPrompt;
@property (getter=isSOS, setter=setSOS:, nonatomic) bool sos;
@property (readonly) Class superclass;
@property (getter=isTTYAvailable, nonatomic, readonly) bool ttyAvailable;
@property (nonatomic) long long ttyType;
@property (nonatomic, copy) NSString *uniqueProxyIdentifier;
@property (nonatomic, readonly) bool useTTY;
@property (nonatomic, readonly) NSUserActivity *userActivity;
@property (getter=isValid, nonatomic, readonly) bool valid;
@property (nonatomic, readonly, copy) NSArray *validityErrors;
@property (getter=isVideo, nonatomic) bool video;

+ (id /* block */)callProviderManagerGeneratorBlock;
+ (long long)dialRequestTypeForIntentDestinationType:(long long)arg1;
+ (long long)handleTypeForQueryItem:(id)arg1;
+ (long long)intentTTYTypeForTTYType:(long long)arg1;
+ (id /* block */)legacyAddressBookIdentifierToContactIdentifierTransformBlock;
+ (long long)originatingUITypeForString:(id)arg1;
+ (id)providerForIntentPreferredCallProvider:(long long)arg1 providerManager:(id)arg2;
+ (void)setCallProviderManagerGeneratorBlock:(id /* block */)arg1;
+ (void)setLegacyAddressBookIdentifierToContactIdentifierTransformBlock:(id /* block */)arg1;
+ (id)stringForDialType:(long long)arg1;
+ (id)stringForOriginatingUIType:(long long)arg1;
+ (id)stringForTTYType:(long long)arg1;
+ (bool)supportsSecureCoding;
+ (long long)ttyTypeForIntentTTYType:(long long)arg1;
+ (long long)ttyTypeForString:(id)arg1;

- (void).cxx_destruct;
- (id)URL;
- (id)URLHost;
- (id)URLQueryItems;
- (id)URLScheme;
- (id)_contactFromINPerson:(id)arg1 bestGuessHandle:(id*)arg2;
- (id)audioSourceIdentifier;
- (id)audioSourceIdentifierURLQueryItem;
- (bool)boolValueForQueryItemWithName:(id)arg1 inURLComponents:(id)arg2;
- (id)callProviderFromURLComponents:(id)arg1 video:(bool*)arg2;
- (id)contactIdentifier;
- (id)contactIdentifierFromURLComponents:(id)arg1;
- (id)contactIdentifierURLQueryItem;
- (id)contactStore;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)dateDialed;
- (id)description;
- (id)destinationID;
- (id)destinationIDFromURL:(id)arg1;
- (id)dialAssistedURLQueryItem;
- (id)dialRequestByReplacingProvider:(id)arg1;
- (long long)dialType;
- (void)encodeWithCoder:(id)arg1;
- (id)endpointIDSDestination;
- (id)endpointIDSDestinationURI;
- (id)endpointIDSDestinationURIQueryItem;
- (bool)endpointOnCurrentDevice;
- (id)forceAssistURLQueryItem;
- (id)handle;
- (id)handleFromURL:(id)arg1;
- (id)handleTypeURLQueryItem;
- (unsigned long long)hash;
- (bool)hostOnCurrentDevice;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDialIntent:(id)arg1 providerManager:(id)arg2;
- (id)initWithProvider:(id)arg1;
- (id)initWithService:(int)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithUserActivity:(id)arg1;
- (id)initWithUserActivity:(id)arg1 providerManager:(id)arg2;
- (bool)isDialAssisted;
- (id /* block */)isEmergencyNumberBlock;
- (id /* block */)isEmergencyNumberOrIsWhitelistedBlock;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToDialRequest:(id)arg1;
- (bool)isRTTAvailable;
- (bool)isRedial;
- (bool)isSOS;
- (bool)isTTYAvailable;
- (bool)isValid;
- (bool)isVideo;
- (id)isVoicemailURLQueryItem;
- (int)legacyAddressBookIdentifierFromURLComponents:(id)arg1;
- (id)legacyAddressBookIdentifierQueryItemName;
- (struct CGSize { double x1; double x2; })localLandscapeAspectRatio;
- (struct CGSize { double x1; double x2; })localPortraitAspectRatio;
- (id)localSenderIdentity;
- (id)localSenderIdentityAccountUUID;
- (id)localSenderIdentityAccountUUIDURLQueryItem;
- (id)localSenderIdentityUUID;
- (id)localSenderIdentityUUIDURLQueryItem;
- (id)noPromptURLQueryItem;
- (long long)originatingUIType;
- (id)originatingUIURLQueryItem;
- (bool)performDialAssist;
- (bool)performLocalDialAssist;
- (id)provider;
- (id)providerCustomIdentifier;
- (id)providerCustomIdentifierURLQueryItem;
- (id)providerManager;
- (id)redialURLQueryItem;
- (id)senderIdentityClient;
- (int)service;
- (void)setAudioSourceIdentifier:(id)arg1;
- (void)setContactIdentifier:(id)arg1;
- (void)setDateDialed:(id)arg1;
- (void)setDestinationID:(id)arg1;
- (void)setDialAssisted:(bool)arg1;
- (void)setDialType:(long long)arg1;
- (void)setEndpointIDSDestinationURI:(id)arg1;
- (void)setEndpointOnCurrentDevice:(bool)arg1;
- (void)setHandle:(id)arg1;
- (void)setHostOnCurrentDevice:(bool)arg1;
- (void)setIsEmergencyNumberBlock:(id /* block */)arg1;
- (void)setIsEmergencyNumberOrIsWhitelistedBlock:(id /* block */)arg1;
- (void)setLocalLandscapeAspectRatio:(struct CGSize { double x1; double x2; })arg1;
- (void)setLocalPortraitAspectRatio:(struct CGSize { double x1; double x2; })arg1;
- (void)setLocalSenderIdentityAccountUUID:(id)arg1;
- (void)setLocalSenderIdentityUUID:(id)arg1;
- (void)setOriginatingUIType:(long long)arg1;
- (void)setPerformDialAssist:(bool)arg1;
- (void)setPerformLocalDialAssist:(bool)arg1;
- (void)setProvider:(id)arg1;
- (void)setProviderCustomIdentifier:(id)arg1;
- (void)setRedial:(bool)arg1;
- (void)setSOS:(bool)arg1;
- (void)setShouldSuppressInCallUI:(bool)arg1;
- (void)setShowUIPrompt:(bool)arg1;
- (void)setTtyType:(long long)arg1;
- (void)setUniqueProxyIdentifier:(id)arg1;
- (void)setVideo:(bool)arg1;
- (bool)shouldSuppressInCallUI;
- (id)shouldSuppressInCallUIQueryItem;
- (bool)showUIPrompt;
- (id)sosURLQueryItem;
- (id)suppressAssistURLQueryItem;
- (long long)ttyType;
- (id)ttyTypeURLQueryItem;
- (id)uniqueProxyIdentifier;
- (bool)useTTY;
- (id)userActivity;
- (id)validityErrorForDestinationIDWithVoicemail;
- (id)validityErrorForEmergencyCall;
- (id)validityErrorForEndpointNotOnCurrentDeviceForNonRelayableService;
- (id)validityErrorForNonNormalDialTypeWithoutTelephony;
- (id)validityErrorForNormalDialTypeWithUnknownDestination;
- (id)validityErrorForSOS;
- (id)validityErrorForUnspecifiedProvider;
- (id)validityErrorForUnsupportedHandleType;
- (id)validityErrorForVideoUnsupported;
- (id)validityErrors;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

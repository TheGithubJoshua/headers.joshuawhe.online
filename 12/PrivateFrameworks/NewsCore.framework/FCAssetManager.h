<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCAssetManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCAssetManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCAssetManager : NSObject <FCAssetHandleDelegate, FCCacheCoordinatorDelegate, FCCacheFlushing> {
    NSMapTable * _assetHandles;
    NFUnfairLock * _assetHandlesLock;
    FCAssetStore * _assetStore;
    FCCacheCoordinator * _cacheCoordinator;
    NSURL * _directoryURLForCachedAssets;
    NSObject<OS_dispatch_queue> * _initQueue;
    <FCAssetKeyManagerType> * _keyManager;
    FCKeyValueStore * _keyValueStore;
    NSString * _name;
    FCNetworkBehaviorMonitor * _networkBehaviorMonitor;
    NSString * _parentDirectory;
    bool  _shouldUseSecureConnectionForCKAssetDownloads;
}

@property (nonatomic, retain) NSMapTable *assetHandles;
@property (nonatomic, retain) NFUnfairLock *assetHandlesLock;
@property (nonatomic, retain) FCAssetStore *assetStore;
@property (nonatomic, retain) FCCacheCoordinator *cacheCoordinator;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSURL *directoryURLForCachedAssets;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *initQueue;
@property (nonatomic, retain) <FCAssetKeyManagerType> *keyManager;
@property (nonatomic, retain) FCKeyValueStore *keyValueStore;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, retain) FCNetworkBehaviorMonitor *networkBehaviorMonitor;
@property (nonatomic, copy) NSString *parentDirectory;
@property (nonatomic) bool shouldUseSecureConnectionForCKAssetDownloads;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (long long)_anefFileDataProviderOptions;
- (id)_assetHandleForCKAssetURLComponents:(id)arg1 lifetimeHint:(long long)arg2;
- (id)_assetKeyForRemoteURL:(id)arg1;
- (bool)_dataIsGzipped:(id)arg1;
- (void)_fetchDataProviderForAssetHandle:(id)arg1 completion:(id /* block */)arg2;
- (void)_importFileAtPath:(id)arg1 method:(long long)arg2 key:(id)arg3 mimeType:(id)arg4 lifetimeHint:(long long)arg5;
- (void)_initStores;
- (id)_populateRawFilePathForAssetHandle:(id)arg1 completion:(id /* block */)arg2;
- (void)_prepareForUseIfNeeded;
- (id)_transformerForAssetAtPath:(id)arg1 mimeType:(id)arg2 URL:(id)arg3;
- (id)assetHandleForCKAssetURL:(id)arg1 lifetimeHint:(long long)arg2;
- (id)assetHandleForCKAssetURLString:(id)arg1 lifetimeHint:(long long)arg2;
- (id)assetHandleForCKAssetURLString:(id)arg1 prefetchedData:(id)arg2 unzipIfNeeded:(bool)arg3 lifetimeHint:(long long)arg4;
- (id)assetHandleForRecordID:(id)arg1 field:(long long)arg2 lifetimeHint:(long long)arg3 contentDatabase:(id)arg4;
- (id)assetHandleForResourceID:(id)arg1 contentContext:(id)arg2;
- (id)assetHandleForResourceID:(id)arg1 lifetimeHint:(long long)arg2 contentContext:(id)arg3;
- (id)assetHandleForURL:(id)arg1 lifetimeHint:(long long)arg2;
- (id)assetHandleForURL:(id)arg1 prefetchedFileURL:(id)arg2 importMethod:(long long)arg3 lifetimeHint:(long long)arg4;
- (id)assetHandles;
- (id)assetHandlesLock;
- (id)assetStore;
- (id)cacheCoordinator;
- (void)cacheCoordinator:(id)arg1 flushKeysWithWriteLock:(id)arg2;
- (unsigned long long)cacheCoordinatorCurrentSizeWithReadLock:(id)arg1;
- (id)directoryURLForCachedAssets;
- (void)enableFlushingWithFlushingThreshold:(unsigned long long)arg1;
- (id)init;
- (id)initQueue;
- (id)initWithName:(id)arg1 directory:(id)arg2 keyManager:(id)arg3 networkBehaviorMonitor:(id)arg4;
- (id)keyManager;
- (id)keyValueStore;
- (id)name;
- (id)networkBehaviorMonitor;
- (id)operationToFetchDataProviderForAssetHandle:(id)arg1 completion:(id /* block */)arg2;
- (id)parentDirectory;
- (void)setAssetHandles:(id)arg1;
- (void)setAssetHandlesLock:(id)arg1;
- (void)setAssetStore:(id)arg1;
- (void)setCacheCoordinator:(id)arg1;
- (void)setInitQueue:(id)arg1;
- (void)setKeyManager:(id)arg1;
- (void)setKeyValueStore:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNetworkBehaviorMonitor:(id)arg1;
- (void)setParentDirectory:(id)arg1;
- (void)setShouldUseSecureConnectionForCKAssetDownloads:(bool)arg1;
- (bool)shouldUseSecureConnectionForCKAssetDownloads;
- (void)t_save;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

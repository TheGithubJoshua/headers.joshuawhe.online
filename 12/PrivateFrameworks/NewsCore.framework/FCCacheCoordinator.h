<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCCacheCoordinator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCCacheCoordinator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCCacheCoordinator : NSObject <FCOperationThrottlerDelegate> {
    FCThreadSafeMutableDictionary * _cacheHintsByKey;
    <FCCacheCoordinatorDelegate> * _delegate;
    FCCacheCoordinatorFlushPolicy * _flushPolicy;
    <FCOperationThrottler> * _flushThrottler;
    bool  _flushingEnabled;
    NFUnfairLock * _interestLock;
    NSCountedSet * _interestedKeys;
    NSMutableSet * _storedKeys;
    <FCCacheCoordinatorLocking> * _underlyingLock;
}

@property (nonatomic, retain) FCThreadSafeMutableDictionary *cacheHintsByKey;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <FCCacheCoordinatorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (retain) FCCacheCoordinatorFlushPolicy *flushPolicy;
@property (nonatomic, retain) <FCOperationThrottler> *flushThrottler;
@property (getter=isFlushingEnabled) bool flushingEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NFUnfairLock *interestLock;
@property (nonatomic, retain) NSCountedSet *interestedKeys;
@property (nonatomic, readonly) NSArray *keysWithNonZeroInterest;
@property (nonatomic, readonly) NSArray *keysWithZeroInterest;
@property (nonatomic, retain) NSMutableSet *storedKeys;
@property (readonly) Class superclass;
@property (nonatomic, retain) <FCCacheCoordinatorLocking> *underlyingLock;

- (void).cxx_destruct;
- (void)_modifyCacheHintForKeys:(id)arg1 withBlock:(id /* block */)arg2;
- (void)addInterestInKeys:(id)arg1;
- (bool)cacheContainsKey:(id)arg1;
- (id)cacheHintsByKey;
- (void)dealloc;
- (id)delegate;
- (void)didAccessKeys:(id)arg1;
- (void)didInsertKeyIntoCache:(id)arg1 withLifetimeHint:(long long)arg2;
- (void)didInsertKeysIntoCache:(id)arg1 withLifetimeHints:(id)arg2;
- (void)didRemoveKeysFromCache:(id)arg1;
- (void)enableFlushingWithPolicy:(id)arg1;
- (id)filterKeysForPreemptiveFlush:(id)arg1 cacheHints:(id)arg2;
- (id)flushPolicy;
- (id)flushThrottler;
- (id)holdTokenForKey:(id)arg1;
- (id)holdTokenForKeys:(id)arg1;
- (id)holdTokensForKeys:(id)arg1;
- (id)init;
- (id)interestLock;
- (id)interestedKeys;
- (bool)isFlushingEnabled;
- (id)keysWithNonZeroInterest;
- (id)keysWithZeroInterest;
- (void)operationThrottlerPerformOperation:(id)arg1;
- (void)performCacheRead:(id /* block */)arg1;
- (void)performCacheWrite:(id /* block */)arg1;
- (void)performReadSync:(id /* block */)arg1;
- (void)performWriteSync:(id /* block */)arg1;
- (id)persistableHints;
- (void)removeInterestInKeys:(id)arg1;
- (void)setCacheHintsByKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFlushPolicy:(id)arg1;
- (void)setFlushThrottler:(id)arg1;
- (void)setFlushingEnabled:(bool)arg1;
- (void)setInterestLock:(id)arg1;
- (void)setInterestedKeys:(id)arg1;
- (void)setStoredKeys:(id)arg1;
- (void)setUnderlyingLock:(id)arg1;
- (void)setupWithInitialKeys:(id)arg1;
- (void)setupWithInitialKeys:(id)arg1 persistedHints:(id)arg2;
- (id)storedKeys;
- (id)underlyingLock;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCFeedViewportExpandGapOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCFeedViewportExpandGapOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCFeedViewportExpandGapOperation : FCOperation {
    FCFeedViewportBookmark * _bookmark;
    bool  _cachedOnly;
    <FCCoreConfiguration> * _configuration;
    FCCloudContext * _context;
    unsigned long long  _desiredHeadlineCount;
    id /* block */  _expandGapCompletionHandler;
    FCFeedDescriptor * _feedDescriptor;
    <FCFeedElement> * _gapElement;
    unsigned long long  _gapExpansionDirection;
    long long  _gapExpansionPolicy;
    bool  _lightweightOnly;
    bool  _offlineMode;
    FCFeedViewportDiff * _resultDiff;
    FCFeedViewport * _resultViewport;
    FCFeedViewport * _sanitizedViewport;
    FCFeedViewport * _viewport;
}

@property (nonatomic, copy) FCFeedViewportBookmark *bookmark;
@property (nonatomic) bool cachedOnly;
@property (nonatomic, copy) <FCCoreConfiguration> *configuration;
@property (nonatomic, retain) FCCloudContext *context;
@property (nonatomic) unsigned long long desiredHeadlineCount;
@property (nonatomic, copy) id /* block */ expandGapCompletionHandler;
@property (nonatomic, retain) FCFeedDescriptor *feedDescriptor;
@property (nonatomic, copy) <FCFeedElement> *gapElement;
@property (nonatomic) unsigned long long gapExpansionDirection;
@property (nonatomic) long long gapExpansionPolicy;
@property bool lightweightOnly;
@property bool offlineMode;
@property (nonatomic, retain) FCFeedViewportDiff *resultDiff;
@property (nonatomic, retain) FCFeedViewport *resultViewport;
@property (nonatomic, retain) FCFeedViewport *sanitizedViewport;
@property (nonatomic, retain) FCFeedViewport *viewport;

+ (id)_sanitizeViewport:(id)arg1 context:(id)arg2 feedDescriptor:(id)arg3 configuration:(id)arg4;

- (void).cxx_destruct;
- (id)_groupEmitterWithIdentifier:(id)arg1;
- (id)bookmark;
- (bool)cachedOnly;
- (id)configuration;
- (id)context;
- (unsigned long long)desiredHeadlineCount;
- (id /* block */)expandGapCompletionHandler;
- (id)feedDescriptor;
- (id)gapElement;
- (unsigned long long)gapExpansionDirection;
- (long long)gapExpansionPolicy;
- (id)init;
- (bool)lightweightOnly;
- (bool)offlineMode;
- (void)operationWillFinishWithError:(id)arg1;
- (void)performOperation;
- (void)prepareOperation;
- (id)resultDiff;
- (id)resultViewport;
- (id)sanitizedViewport;
- (void)setBookmark:(id)arg1;
- (void)setCachedOnly:(bool)arg1;
- (void)setConfiguration:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDesiredHeadlineCount:(unsigned long long)arg1;
- (void)setExpandGapCompletionHandler:(id /* block */)arg1;
- (void)setFeedDescriptor:(id)arg1;
- (void)setGapElement:(id)arg1;
- (void)setGapExpansionDirection:(unsigned long long)arg1;
- (void)setGapExpansionPolicy:(long long)arg1;
- (void)setLightweightOnly:(bool)arg1;
- (void)setOfflineMode:(bool)arg1;
- (void)setResultDiff:(id)arg1;
- (void)setResultViewport:(id)arg1;
- (void)setSanitizedViewport:(id)arg1;
- (void)setViewport:(id)arg1;
- (bool)validateOperation;
- (id)viewport;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

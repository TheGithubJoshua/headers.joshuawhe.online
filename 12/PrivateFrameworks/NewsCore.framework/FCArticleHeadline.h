<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCArticleHeadline.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCArticleHeadline.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCArticleHeadline : FCHeadline <FCArticleAccessCheckable, FCHeadlineStocksFields> {
    NSString * _accessoryText;
    NSArray * _allowedStorefrontIDs;
    NSString * _articleID;
    FCInterestToken * _articleInterestToken;
    NTPBArticleRecord * _articleRecord;
    long long  _backendArticleVersion;
    long long  _behaviorFlags;
    NSArray * _blockedStorefrontIDs;
    bool  _boundToContext;
    bool  _bundlePaid;
    bool  _canBePurchased;
    NSString * _clusterID;
    unsigned long long  _contentType;
    NSURL * _contentURL;
    FCCoverArt * _coverArt;
    bool  _deleted;
    FCHeadlineExperimentalTitleMetadata * _experimentalTitleMetadata;
    bool  _featureCandidate;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList * _globalCohorts;
    unsigned long long  _halfLife;
    bool  _hasThumbnail;
    bool  _hiddenFromAutoFavorites;
    bool  _hiddenFromFeeds;
    NSArray * _iAdCategories;
    NSArray * _iAdKeywords;
    NSArray * _iAdSectionIDs;
    NSString * _identifier;
    bool  _isDraft;
    bool  _isLocalDraft;
    bool  _issueOnly;
    NSString * _language;
    NSDate * _lastFetchedDate;
    NSDate * _lastModifiedDate;
    NSArray * _linkedArticleIDs;
    NSArray * _linkedIssueIDs;
    FCIssue * _masterIssue;
    long long  _minimumNewsVersion;
    NSArray * _moreFromPublisherArticleIDs;
    bool  _needsRapidUpdates;
    bool  _paid;
    bool  _pressRelease;
    NSString * _primaryAudience;
    NSDate * _publishDate;
    long long  _publisherArticleVersion;
    COMAPPLEFELDSPARPROTOCOLLIVERPOOLCohortList * _publisherCohorts;
    NSString * _referencedArticleID;
    NSArray * _relatedArticleIDs;
    unsigned long long  _role;
    NSString * _shortExcerpt;
    bool  _showBundleSoftPaywall;
    bool  _showMinimalChrome;
    <FCChannelProviding> * _sourceChannel;
    NSString * _sourceName;
    bool  _sponsored;
    FCTopStoriesStyleConfiguration * _storyStyle;
    unsigned long long  _storyType;
    FCHeadlineThumbnail * _thumbnail;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _thumbnailFocalFrame;
    FCHeadlineThumbnail * _thumbnailHQ;
    FCHeadlineThumbnail * _thumbnailLQ;
    FCHeadlineThumbnail * _thumbnailMedium;
    FCHeadlineThumbnail * _thumbnailUltraHQ;
    FCHeadlineThumbnail * _thumbnailWidget;
    FCHeadlineThumbnail * _thumbnailWidgetHQ;
    FCHeadlineThumbnail * _thumbnailWidgetLQ;
    NSString * _title;
    NSString * _titleCompact;
    NSArray * _topicIDs;
    NSArray * _topics;
    NSString * _versionIdentifier;
    NSString * _videoCallToActionTitle;
    NSURL * _videoCallToActionURL;
    double  _videoDuration;
    NSURL * _videoURL;
    bool  _webEmbedsEnabled;
}

@property (nonatomic, readonly, copy) NSArray *allowedStorefrontIDs;
@property (nonatomic, retain) FCInterestToken *articleInterestToken;
@property (nonatomic, retain) NTPBArticleRecord *articleRecord;
@property (nonatomic) long long behaviorFlags;
@property (nonatomic, readonly, copy) NSArray *blockedStorefrontIDs;
@property (getter=isBundlePaid, nonatomic, readonly) bool bundlePaid;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool isBlockedExplicitContent;
@property (nonatomic, readonly) bool isDraft;
@property (nonatomic, readonly) bool isLocalDraft;
@property (nonatomic, readonly) long long minimumNewsVersion;
@property (getter=isPaid, nonatomic, readonly) bool paid;
@property (nonatomic, readonly, copy) <FCChannelProviding> *sourceChannel;
@property (nonatomic, readonly, copy) NSString *stocksClusterID;
@property (nonatomic, readonly, copy) NSString *stocksMetadataJSON;
@property (nonatomic, readonly, copy) NSString *stocksScoresJSON;
@property (nonatomic, copy) NSString *title;

+ (bool)_forceArticlesToBeShownAsSponsored;
+ (bool)_simulateTopStoriesBadges;

- (void).cxx_destruct;
- (id)accessoryText;
- (id)allowedStorefrontIDs;
- (id)articleID;
- (id)articleInterestToken;
- (id)articleRecirculationConfigJSON;
- (id)articleRecord;
- (long long)backendArticleVersion;
- (id)backingArticleRecordData;
- (long long)behaviorFlags;
- (id)blockedStorefrontIDs;
- (bool)canBePurchased;
- (id)clusterID;
- (id)contentManifestWithContext:(id)arg1;
- (unsigned long long)contentType;
- (id)contentURL;
- (id)coverArt;
- (id)experimentalTitleMetadata;
- (id)globalCohorts;
- (unsigned long long)halfLife;
- (bool)hasThumbnail;
- (id)iAdCategories;
- (id)iAdKeywords;
- (id)iAdSectionIDs;
- (id)identifier;
- (id)init;
- (id)initWithArticleRecord:(id)arg1 articleInterestToken:(id)arg2 sourceChannel:(id)arg3 masterIssue:(id)arg4 storyStyleConfigs:(id)arg5 storyTypeTimeout:(long long)arg6 rapidUpdatesTimeout:(long long)arg7 assetManager:(id)arg8 experimentalTitleProvider:(id)arg9;
- (id)initWithArticleRecordData:(id)arg1 sourceChannel:(id)arg2 masterIssue:(id)arg3 assetManager:(id)arg4;
- (bool)isBoundToContext;
- (bool)isBundlePaid;
- (bool)isDeleted;
- (bool)isDraft;
- (bool)isFeatureCandidate;
- (bool)isHiddenFromAutoFavorites;
- (bool)isHiddenFromFeeds;
- (bool)isIssueOnly;
- (bool)isLocalDraft;
- (bool)isPaid;
- (bool)isPressRelease;
- (bool)isSponsored;
- (id)language;
- (id)lastFetchedDate;
- (id)lastModifiedDate;
- (id)linkedArticleIDs;
- (id)linkedIssueIDs;
- (id)masterIssue;
- (long long)minimumNewsVersion;
- (id)moreFromPublisherArticleIDs;
- (bool)needsRapidUpdates;
- (id)primaryAudience;
- (id)publishDate;
- (long long)publisherArticleVersion;
- (id)publisherCohorts;
- (id)publisherID;
- (id)publisherSpecifiedArticleIDs;
- (id)referencedArticleID;
- (id)relatedArticleIDs;
- (unsigned long long)role;
- (void)setAccessoryText:(id)arg1;
- (void)setArticleID:(id)arg1;
- (void)setArticleInterestToken:(id)arg1;
- (void)setArticleRecord:(id)arg1;
- (void)setBehaviorFlags:(long long)arg1;
- (void)setClusterID:(id)arg1;
- (void)setContentType:(unsigned long long)arg1;
- (void)setDeleted:(bool)arg1;
- (void)setHalfLife:(unsigned long long)arg1;
- (void)setHasThumbnail:(bool)arg1;
- (void)setPublishDate:(id)arg1;
- (void)setRole:(unsigned long long)arg1;
- (void)setShortExcerpt:(id)arg1;
- (void)setSourceName:(id)arg1;
- (void)setSponsored:(bool)arg1;
- (void)setStoryStyle:(id)arg1;
- (void)setStoryType:(unsigned long long)arg1;
- (void)setThumbnail:(id)arg1;
- (void)setThumbnailFocalFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setThumbnailHQ:(id)arg1;
- (void)setThumbnailLQ:(id)arg1;
- (void)setThumbnailMedium:(id)arg1;
- (void)setThumbnailUltraHQ:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleCompact:(id)arg1;
- (void)setTopicIDs:(id)arg1;
- (id)shortExcerpt;
- (bool)showBundleSoftPaywall;
- (bool)showMinimalChrome;
- (id)sourceChannel;
- (id)sourceName;
- (id)stocksClusterID;
- (id)stocksFields;
- (id)stocksMetadataJSON;
- (id)stocksScoresJSON;
- (id)storyStyle;
- (unsigned long long)storyType;
- (id)thumbnail;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })thumbnailFocalFrame;
- (id)thumbnailHQ;
- (id)thumbnailLQ;
- (id)thumbnailMedium;
- (id)thumbnailUltraHQ;
- (id)thumbnailWidget;
- (id)thumbnailWidgetHQ;
- (id)thumbnailWidgetLQ;
- (id)title;
- (id)titleCompact;
- (id)topicIDs;
- (id)topics;
- (id)versionIdentifier;
- (id)videoCallToActionTitle;
- (id)videoCallToActionURL;
- (double)videoDuration;
- (id)videoURL;
- (bool)webEmbedsEnabled;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

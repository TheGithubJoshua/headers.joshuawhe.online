<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCFeedDatabase.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCFeedDatabase.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCFeedDatabase : NSObject <FCOperationThrottlerDelegate> {
    NSMutableDictionary * _cachedFeedsByID;
    long long  _endpoint;
    NSEntityDescription * _feedEntity;
    NSEntityDescription * _feedItemEntity;
    NSEntityDescription * _feedItemIndexEntity;
    NSEntityDescription * _feedSegmentEntity;
    NSObject<OS_dispatch_queue> * _initQueue;
    NSManagedObjectContext * _managedObjectContext;
    NSMutableSet * _modifiedFeedIDs;
    int  _nextFeedLookupID;
    NSURL * _parentDirectoryURL;
    NSPersistentStore * _persistentStore;
    <FCOperationThrottler> * _saveThrottler;
    long long  _usage;
    unsigned short  _version;
}

@property (nonatomic, retain) NSMutableDictionary *cachedFeedsByID;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) long long endpoint;
@property (nonatomic, retain) NSEntityDescription *feedEntity;
@property (nonatomic, retain) NSEntityDescription *feedItemEntity;
@property (nonatomic, retain) NSEntityDescription *feedItemIndexEntity;
@property (nonatomic, retain) NSEntityDescription *feedSegmentEntity;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *initQueue;
@property (nonatomic, retain) NSManagedObjectContext *managedObjectContext;
@property (nonatomic, retain) NSMutableSet *modifiedFeedIDs;
@property (nonatomic) int nextFeedLookupID;
@property (nonatomic, readonly, copy) NSURL *parentDirectoryURL;
@property (nonatomic, retain) NSPersistentStore *persistentStore;
@property (nonatomic, retain) <FCOperationThrottler> *saveThrottler;
@property (readonly) Class superclass;
@property (nonatomic) long long usage;
@property (nonatomic) unsigned short version;

+ (unsigned short)currentFeedDatabaseVersion;
+ (void)initialize;
+ (id)temporaryFeedDatabaseWithEndpoint:(long long)arg1;

- (void).cxx_destruct;
- (id)_feedItemsForLookups:(id)arg1 withFeedsByID:(id)arg2;
- (id)_feedItemsForLookups:(id)arg1 withFeedsByID:(id)arg2 boundedByCount:(unsigned long long)arg3;
- (id)_feedsForLookups:(id)arg1;
- (void)_initMOC;
- (void)_performWithMOCAndWait:(id /* block */)arg1;
- (id)_serviceLookup:(id)arg1 withFeed:(id)arg2 feedItems:(id)arg3;
- (id)_shortCircuitLookup:(id)arg1 withFeed:(id)arg2;
- (id)cachedFeedsByID;
- (void)d_sanityCheckFeed:(id)arg1;
- (long long)endpoint;
- (id)feedEntity;
- (id)feedItemEntity;
- (id)feedItemIndexEntity;
- (id)feedSegmentEntity;
- (id)initQueue;
- (id)initWithParentDirectoryURL:(id)arg1 usage:(long long)arg2 endpoint:(long long)arg3;
- (id)managedObjectContext;
- (id)modifiedFeedIDs;
- (int)nextFeedLookupID;
- (void)operationThrottlerPerformOperation:(id)arg1;
- (id)parentDirectoryURL;
- (id)performDatabaseLookups:(id)arg1;
- (id)performDatabaseLookups:(id)arg1 boundedByCount:(unsigned long long)arg2;
- (id)persistentStore;
- (void)saveFeedItems:(id)arg1 forFeedID:(id)arg2 insertionToken:(id)arg3 requestDate:(id)arg4 followingCKCursor:(id)arg5 reachedToOrder:(bool)arg6 extent:(unsigned long long)arg7 reachedEnd:(bool)arg8;
- (id)saveThrottler;
- (void)setCachedFeedsByID:(id)arg1;
- (void)setFeedEntity:(id)arg1;
- (void)setFeedItemEntity:(id)arg1;
- (void)setFeedItemIndexEntity:(id)arg1;
- (void)setFeedSegmentEntity:(id)arg1;
- (void)setInitQueue:(id)arg1;
- (void)setManagedObjectContext:(id)arg1;
- (void)setModifiedFeedIDs:(id)arg1;
- (void)setNextFeedLookupID:(int)arg1;
- (void)setPersistentStore:(id)arg1;
- (void)setSaveThrottler:(id)arg1;
- (void)setUsage:(long long)arg1;
- (void)setVersion:(unsigned short)arg1;
- (void)teardown;
- (long long)usage;
- (unsigned short)version;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

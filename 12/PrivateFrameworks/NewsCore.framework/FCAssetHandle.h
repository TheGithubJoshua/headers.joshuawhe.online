<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCAssetHandle.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCAssetHandle.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCAssetHandle : NSObject <TSAssetHandleType> {
    NSString * _assetKey;
    NTPBAsset * _assetMetadata;
    unsigned long long  _countOfPenalizedDownloadAttempts;
    <FCAssetDataProvider> * _dataProvider;
    NSDate * _dateOfLastDownloadAttempt;
    <FCAssetHandleDelegate> * _delegate;
    NSError * _downloadError;
    NSHashTable * _downloadRequests;
    NSObject<OS_dispatch_group> * _fetchGroup;
    FCOperation * _fetchOperation;
    FCInterestToken * _holdToken;
    long long  _lifetimeHint;
    NSString * _rawFilePath;
    NSURL * _remoteURL;
    NFUnfairLock * _stateLock;
}

@property (nonatomic, copy) NSString *assetKey;
@property (retain) NTPBAsset *assetMetadata;
@property unsigned long long countOfPenalizedDownloadAttempts;
@property (retain) <FCAssetDataProvider> *dataProvider;
@property (retain) NSDate *dateOfLastDownloadAttempt;
@property (nonatomic) <FCAssetHandleDelegate> *delegate;
@property (retain) NSError *downloadError;
@property (nonatomic, retain) NSHashTable *downloadRequests;
@property (nonatomic, readonly) UIImage *fallbackImage;
@property (nonatomic, retain) NSObject<OS_dispatch_group> *fetchGroup;
@property (nonatomic, retain) FCOperation *fetchOperation;
@property (readonly, copy) NSString *filePath;
@property (nonatomic, retain) FCInterestToken *holdToken;
@property (nonatomic) long long lifetimeHint;
@property (copy) NSString *rawFilePath;
@property (nonatomic, retain) NSURL *remoteURL;
@property (nonatomic, retain) NFUnfairLock *stateLock;
@property (nonatomic, readonly, copy) NSString *uniqueKey;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

- (void).cxx_destruct;
- (bool)_canRetryDownload;
- (void)_completeFetchWithDataProvider:(id)arg1 error:(id)arg2;
- (id)_downloadIfNeededWithPriority:(long long)arg1 completionQueue:(id)arg2 completion:(id /* block */)arg3;
- (void)_removeDownloadRequest:(id)arg1;
- (void)_revisitDownloadRequestPriorities;
- (id)assetKey;
- (id)assetMetadata;
- (unsigned long long)countOfPenalizedDownloadAttempts;
- (id)dataProvider;
- (id)dateOfLastDownloadAttempt;
- (void)dealloc;
- (id)delegate;
- (id)downloadError;
- (id)downloadIfNeededWithCompletion:(id /* block */)arg1;
- (id)downloadIfNeededWithCompletionQueue:(id)arg1 completion:(id /* block */)arg2;
- (id)downloadIfNeededWithGroup:(id)arg1;
- (id)downloadIfNeededWithPriority:(long long)arg1 completion:(id /* block */)arg2;
- (id)downloadRequests;
- (id)fetchDataProviderWithCompletion:(id /* block */)arg1;
- (id)fetchDataProviderWithPriority:(long long)arg1 completion:(id /* block */)arg2;
- (id)fetchGroup;
- (id)fetchOperation;
- (id)filePath;
- (id)holdToken;
- (id)initWithDataProvider:(id)arg1;
- (long long)lifetimeHint;
- (id)rawFilePath;
- (id)remoteURL;
- (void)setAssetKey:(id)arg1;
- (void)setAssetMetadata:(id)arg1;
- (void)setCountOfPenalizedDownloadAttempts:(unsigned long long)arg1;
- (void)setDataProvider:(id)arg1;
- (void)setDateOfLastDownloadAttempt:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDownloadError:(id)arg1;
- (void)setDownloadRequests:(id)arg1;
- (void)setFetchGroup:(id)arg1;
- (void)setFetchOperation:(id)arg1;
- (void)setHoldToken:(id)arg1;
- (void)setLifetimeHint:(long long)arg1;
- (void)setRawFilePath:(id)arg1;
- (void)setRemoteURL:(id)arg1;
- (void)setStateLock:(id)arg1;
- (id)stateLock;
- (id)uniqueKey;

// Image: /System/Library/PrivateFrameworks/News/TeaUI.framework/TeaUI

- (void)downloadWithGroup:(id)arg1;
- (id)fallbackImage;

// Image: /System/Library/PrivateFrameworks/Stocks/TeaUI.framework/TeaUI

- (void)downloadWithGroup:(id)arg1;
- (id)fallbackImage;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

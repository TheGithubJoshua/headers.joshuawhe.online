<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCFeedGroup.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCFeedGroup.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCFeedGroup : NSObject <FCFeedElement, FCFeedGroupOutlining> {
    FCFeedDescriptor * _L2FeedDescriptor;
    FCColorGradient * _backgroundGradient;
    FCColor * _cardBackgroundColor;
    NSDate * _creationDate;
    NSString * _ctaText;
    NTPBDiscoverMoreVideosInfo * _discoverMoreVideosInfo;
    FCFeedEdition * _edition;
    NSArray * _elements;
    NSString * _eyebrowText;
    long long  _groupType;
    NSArray * _headlines;
    NSString * _identifier;
    bool  _isFirstFromEdition;
    NSArray * _issueIDs;
    <FCForYouMagazineFeedGroup> * _magazineGroup;
    unsigned long long  _mergeID;
    unsigned long long  _options;
    FCColorGradient * _sauceGradient;
    NSString * _sourceIdentifier;
    NSString * _subtitle;
    NSString * _title;
    FCColor * _titleColor;
    NSArray * _videoPlaylistHeadlines;
}

@property (nonatomic, readonly, copy) FCFeedDescriptor *L2FeedDescriptor;
@property (nonatomic, readonly, copy) FCColorGradient *backgroundGradient;
@property (nonatomic, readonly, copy) NSString *backingTagID;
@property (nonatomic, readonly) bool canBeExtended;
@property (nonatomic, readonly, copy) FCColor *cardBackgroundColor;
@property (nonatomic, readonly) NSDate *creationDate;
@property (nonatomic, readonly, copy) NSString *ctaText;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NTPBDiscoverMoreVideosInfo *discoverMoreVideosInfo;
@property (nonatomic, readonly, copy) FCFeedEdition *edition;
@property (nonatomic, readonly, copy) NSArray *elements;
@property (nonatomic, readonly, copy) NSString *eyebrowText;
@property (nonatomic, readonly) long long feedElementType;
@property (nonatomic, readonly) long long groupType;
@property (nonatomic, readonly) bool hasStrictHeadlineOrder;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSArray *headlines;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool isFirstFromEdition;
@property (nonatomic, readonly, copy) NSArray *issueIDs;
@property (nonatomic, readonly) <FCForYouMagazineFeedGroup> *magazineGroup;
@property (nonatomic, readonly) unsigned long long mergeID;
@property (nonatomic, readonly) unsigned long long options;
@property (nonatomic, readonly, copy) FCColorGradient *sauceGradient;
@property (nonatomic, readonly) bool shouldPresentCollapsed;
@property (nonatomic, readonly, copy) NSString *sourceIdentifier;
@property (nonatomic, readonly, copy) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSString *title;
@property (nonatomic, readonly, copy) FCColor *titleColor;
@property (nonatomic, readonly, copy) NSArray *videoPlaylistHeadlines;

+ (id)_pbHeadlinesFromHeadlines:(id)arg1 sharedStringIndex:(id)arg2;
+ (id)pbGroupFromGroup:(id)arg1 sharedStringIndex:(id)arg2;

- (void).cxx_destruct;
- (id)L2FeedDescriptor;
- (id)backgroundGradient;
- (id)backingTagID;
- (bool)canBeExtended;
- (id)cardBackgroundColor;
- (id)copyWithEdition:(id)arg1 isFirst:(bool)arg2;
- (id)copyWithElements:(id)arg1;
- (id)copyWithMergeID:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (id)ctaText;
- (id)description;
- (id)discoverMoreVideosInfo;
- (id)edition;
- (id)elements;
- (id)eyebrowText;
- (long long)feedElementType;
- (long long)groupType;
- (bool)hasStrictHeadlineOrder;
- (unsigned long long)hash;
- (id)headlines;
- (id)identifier;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 elements:(id)arg3 options:(unsigned long long)arg4;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 magazineGroup:(id)arg3;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 title:(id)arg3 L2FeedDescriptor:(id)arg4 issueIDs:(id)arg5;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 title:(id)arg3 subtitle:(id)arg4 eyebrowText:(id)arg5 ctaText:(id)arg6 titleColor:(id)arg7 sauceGradient:(id)arg8 backgroundGradient:(id)arg9 cardBackgroundColor:(id)arg10 elements:(id)arg11 options:(unsigned long long)arg12;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 title:(id)arg3 subtitle:(id)arg4 titleColor:(id)arg5 backgroundGradient:(id)arg6 discoverMoreVideosInfo:(id)arg7 videoPlaylistHeadlines:(id)arg8 L2FeedDescriptor:(id)arg9 elements:(id)arg10 options:(unsigned long long)arg11;
- (id)initWithIdentifier:(id)arg1 groupType:(long long)arg2 sourceIdentifier:(id)arg3 creationDate:(id)arg4 title:(id)arg5 subtitle:(id)arg6 eyebrowText:(id)arg7 ctaText:(id)arg8 titleColor:(id)arg9 cardBackgroundColor:(id)arg10 sauceGradient:(id)arg11 backgroundGradient:(id)arg12 discoverMoreVideosInfo:(id)arg13 videoPlaylistHeadlines:(id)arg14 L2FeedDescriptor:(id)arg15 edition:(id)arg16 isFirstFromEdition:(bool)arg17 elements:(id)arg18 issueIDs:(id)arg19 magazineGroup:(id)arg20 options:(unsigned long long)arg21 mergeID:(unsigned long long)arg22;
- (id)initWithIdentifier:(id)arg1 groupType:(long long)arg2 sourceIdentifier:(id)arg3 title:(id)arg4 subtitle:(id)arg5 titleColor:(id)arg6 backgroundGradient:(id)arg7 discoverMoreVideosInfo:(id)arg8 videoPlaylistHeadlines:(id)arg9 L2FeedDescriptor:(id)arg10 elements:(id)arg11 options:(unsigned long long)arg12;
- (bool)isEqual:(id)arg1;
- (bool)isFirstFromEdition;
- (bool)isGap;
- (id)issueIDs;
- (id)magazineGroup;
- (unsigned long long)mergeID;
- (unsigned long long)options;
- (id)sauceGradient;
- (bool)shouldPresentCollapsed;
- (id)sourceIdentifier;
- (id)subtitle;
- (id)title;
- (id)titleColor;
- (id)videoPlaylistHeadlines;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

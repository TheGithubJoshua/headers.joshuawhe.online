<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCBundleSubscriptionManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCBundleSubscriptionManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCBundleSubscriptionManager : NSObject <FCAppActivityObserving, FCBundleChannelProviderDelegate, FCBundleSubscriptionManagerType> {
    NFMutexLock * _accessLock;
    <FCBundleChannelProviderType> * _bundleChannelProvider;
    <FCBundleEntitlementsProviderType> * _bundleEntitlementsProvider;
    FCBundleSubscriptionLookUpEntryManager * _bundleSubscriptionLookupEntryManager;
    FCBundleSubscription * _cachedSubscription;
    <FCCoreConfigurationManager> * _configurationManager;
    FCKeyValueStore * _localStore;
    NSHashTable * _observers;
    FCPurchaseLookupRecordSource * _purchaseLookupRecordSource;
}

@property (nonatomic, retain) NFMutexLock *accessLock;
@property (nonatomic, retain) <FCBundleChannelProviderType> *bundleChannelProvider;
@property (nonatomic, readonly) <FCBundleEntitlementsProviderType> *bundleEntitlementsProvider;
@property (nonatomic, readonly) FCBundleSubscription *bundleSubscription;
@property (nonatomic, retain) FCBundleSubscriptionLookUpEntryManager *bundleSubscriptionLookupEntryManager;
@property (nonatomic, retain) FCBundleSubscription *cachedSubscription;
@property (nonatomic, readonly) <FCCoreConfigurationManager> *configurationManager;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <FCEntitlementsOverrideProviderType> *entitlementsOverrideProvider;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) FCKeyValueStore *localStore;
@property (nonatomic, retain) NSHashTable *observers;
@property (nonatomic, readonly) FCPurchaseLookupRecordSource *purchaseLookupRecordSource;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)accessLock;
- (void)activityObservingApplicationDidEnterBackground;
- (void)activityObservingApplicationWillEnterForeground;
- (void)addObserver:(id)arg1;
- (id)bundleChannelProvider;
- (void)bundleChannelProvider:(id)arg1 bundleChannelIDsDidChangeWithChannelIDs:(id)arg2;
- (id)bundleEntitlementsProvider;
- (id)bundleSubscription;
- (id)bundleSubscriptionLookupEntry;
- (id)bundleSubscriptionLookupEntryManager;
- (id)cachedSubscription;
- (id)changeSetBetween:(id)arg1 newSubscription:(id)arg2;
- (void)clearBundleSubscription;
- (id)configurationManager;
- (void)expireBundleSubscription;
- (void)forceExpireBundleSubscriptionBasedOnInternalSettings;
- (id)init;
- (id)initWithPrivateDataDirectory:(id)arg1 configurationManager:(id)arg2 purchaseLookupRecordSource:(id)arg3 appActivityMonitor:(id)arg4 entitlementsProvider:(id)arg5;
- (id)localStore;
- (void)notifyObserversForChangeStateWithNewSubscription:(id)arg1 previousBundleSubscription:(id)arg2 changeSet:(id)arg3;
- (void)notifyObserversForExpiredStateWithSubscription:(id)arg1;
- (void)notifyObserversForSubscribedStateWithSubscription:(id)arg1;
- (id)observers;
- (void)prewarmBundleTagIDsWithPurchaseID:(id)arg1;
- (id)purchaseLookupRecordSource;
- (void)refreshBundleSubscriptionWithCachePolicy:(unsigned long long)arg1 completion:(id /* block */)arg2;
- (void)removeObserver:(id)arg1;
- (void)renewalNoticeShownWithPurchaseID:(id)arg1;
- (void)setAccessLock:(id)arg1;
- (void)setBundleChannelProvider:(id)arg1;
- (void)setBundleSubscriptionLookupEntryManager:(id)arg1;
- (void)setCachedSubscription:(id)arg1;
- (void)setEntitlementsOverrideProvider:(id)arg1;
- (void)setLocalStore:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setupCachedSubscription;
- (void)updateCachedSubscriptionWithSubscription:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

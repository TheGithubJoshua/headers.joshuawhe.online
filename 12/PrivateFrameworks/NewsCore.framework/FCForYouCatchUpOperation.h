<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCForYouCatchUpOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCForYouCatchUpOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCForYouCatchUpOperation : FCOperation {
    NSHashTable * _conditionWaiters;
    NFMutexLock * _conditionWaitersLock;
    long long  _contentTypes;
    FCCoverArticlesOperation * _coverArticlesOperation;
    FCDemoAdditionsOperation * _demoAdditionsOperation;
    FCEditorialOperation * _editorialOperation;
    FCMyArticlesOperation * _myArticlesOperation;
    NSOperationQueue * _operationQueue;
    FCSpecialEventsOperation * _specialEventsOperation;
    FCSpotlightOperation * _spotlightOperation;
    FCTopStoriesOperation * _topStoriesOperation;
    FCTrendingOperation * _trendingOperation;
    FCVideoArticlesOperation * _videoArticlesOperation;
}

@property (nonatomic, readonly, copy) NSArray *additionalDemoHeadlines;
@property (nonatomic, readonly, copy) NSArray *breakingNewsHeadlines;
@property (nonatomic, readonly, copy) NSError *catchUpError;
@property (nonatomic, retain) NSHashTable *conditionWaiters;
@property (nonatomic, retain) NFMutexLock *conditionWaitersLock;
@property (nonatomic) long long contentTypes;
@property (nonatomic, readonly, copy) NSArray *coverArticleHeadlines;
@property (nonatomic, retain) FCCoverArticlesOperation *coverArticlesOperation;
@property (nonatomic, retain) FCDemoAdditionsOperation *demoAdditionsOperation;
@property (nonatomic, retain) FCEditorialOperation *editorialOperation;
@property (readonly, copy) NSDictionary *feedContextByFeedID;
@property (nonatomic, readonly, copy) FCVideoArticlesOperationResult *moreVideosResult;
@property (nonatomic, retain) FCMyArticlesOperation *myArticlesOperation;
@property (nonatomic, readonly, copy) NSArray *nonEditorialFeedItems;
@property (nonatomic, readonly, copy) FCFeedPersonalizedItems *nonEditorialPersonalizedArticles;
@property (nonatomic, retain) NSOperationQueue *operationQueue;
@property (nonatomic, readonly, copy) NSArray *specialEventHeadlines;
@property (nonatomic, retain) FCSpecialEventsOperation *specialEventsOperation;
@property (nonatomic, retain) FCSpotlightOperation *spotlightOperation;
@property (nonatomic, readonly, copy) FCSpotlightOperationResult *spotlightResult;
@property (nonatomic, readonly, copy) NSArray *supplementalCoverArticleHeadlines;
@property (nonatomic, readonly, copy) <FCChannelProviding> *topStoriesChannel;
@property (nonatomic, retain) FCTopStoriesOperation *topStoriesOperation;
@property (nonatomic, readonly, copy) FCTopStoriesOperationResult *topStoriesResult;
@property (nonatomic, readonly, copy) FCVideoArticlesOperationResult *topVideosResult;
@property (nonatomic, readonly, copy) NSArray *trendingHeadlines;
@property (nonatomic, retain) FCTrendingOperation *trendingOperation;
@property (nonatomic, retain) FCVideoArticlesOperation *videoArticlesOperation;

+ (id)sharedCatchUpOperationForEdition:(id)arg1 contentTypes:(long long)arg2 configuration:(id)arg3 context:(id)arg4;

- (void).cxx_destruct;
- (void)_addConditionWaiter:(id)arg1;
- (void)_serviceConditionWaiters;
- (id)additionalDemoHeadlines;
- (id)allFeedItemsAfterTransformation:(id)arg1;
- (id)allNonEditorialFeedItemsAfterTransformation:(id)arg1;
- (id)breakingNewsHeadlines;
- (id)catchUpError;
- (id)catchUpErrorForContentTypes:(long long)arg1;
- (id)conditionWaiters;
- (id)conditionWaitersLock;
- (long long)contentTypes;
- (id)coverArticleHeadlines;
- (id)coverArticlesOperation;
- (id)demoAdditionsOperation;
- (id)editorialOperation;
- (void)enumerateEditorialSectionsByRecencyAfterTransformation:(id)arg1 minFamilySize:(unsigned long long)arg2 block:(id /* block */)arg3;
- (id)feedContextByFeedID;
- (id)initWithContext:(id)arg1 configuration:(id)arg2 dateRange:(id)arg3 contentTypes:(long long)arg4 background:(bool)arg5;
- (id)moreVideosResult;
- (id)myArticlesOperation;
- (id)nonEditorialFeedItems;
- (id)nonEditorialPersonalizedArticles;
- (void)operationDidFinishWithError:(id)arg1;
- (id)operationQueue;
- (id)orphanedEditorialHeadlinesAfterTransformation:(id)arg1 minFamilySize:(unsigned long long)arg2;
- (void)performOperation;
- (void)setConditionWaiters:(id)arg1;
- (void)setConditionWaitersLock:(id)arg1;
- (void)setContentTypes:(long long)arg1;
- (void)setCoverArticlesOperation:(id)arg1;
- (void)setDemoAdditionsOperation:(id)arg1;
- (void)setEditorialOperation:(id)arg1;
- (void)setMyArticlesOperation:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setSpecialEventsOperation:(id)arg1;
- (void)setSpotlightOperation:(id)arg1;
- (void)setTopStoriesOperation:(id)arg1;
- (void)setTrendingOperation:(id)arg1;
- (void)setVideoArticlesOperation:(id)arg1;
- (id)sortedNonEditorialFeedItemsAfterTransformation:(id)arg1;
- (id)specialEventHeadlines;
- (id)specialEventsOperation;
- (id)spotlightOperation;
- (id)spotlightResult;
- (id)supplementalCoverArticleHeadlines;
- (id)topStoriesChannel;
- (id)topStoriesOperation;
- (id)topStoriesResult;
- (id)topVideosResult;
- (id)trendingHeadlines;
- (id)trendingOperation;
- (id)videoArticlesOperation;
- (id)waiterForCondition:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

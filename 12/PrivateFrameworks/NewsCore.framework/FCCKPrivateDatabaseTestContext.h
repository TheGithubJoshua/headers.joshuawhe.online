<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCCKPrivateDatabaseTestContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCCKPrivateDatabaseTestContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCCKPrivateDatabaseTestContext : NSObject {
    NSArray * _allClientRecordIDs;
    NSArray * _allClientRecords;
    NSDictionary * _allClientRecordsByID;
    NSArray * _allClientZoneIDs;
    NSArray * _allClientZones;
    NSDictionary * _allClientZonesByID;
    NSArray * _allDefaultZoneClientRecordIDs;
    NSArray * _allDefaultZoneClientRecords;
    NSDictionary * _allDefaultZoneClientRecordsByID;
    NSArray * _allServerRecordIDs;
    NSArray * _allServerRecords;
    NSArray * _allServerZoneIDs;
    NSArray * _allServerZones;
    CKDatabase * _ckDatabase;
    CKDatabase * _ckDatabaseWithZoneWidePCS;
    CKDatabase * _ckSecureDatabase;
    CKRecord * _clientRecord;
    CKRecordID * _clientRecordID;
    CKRecordID * _clientRecordIDSecure;
    CKRecordID * _clientRecordIDWithZoneWidePCS;
    CKRecord * _clientRecordSecure;
    CKRecord * _clientRecordWithZoneWidePCS;
    CKRecordZone * _clientZone;
    CKRecordZoneID * _clientZoneID;
    CKRecordZoneID * _clientZoneIDSecure;
    CKRecordZoneID * _clientZoneIDWithZoneWidePCS;
    CKRecordZone * _clientZoneSecure;
    CKRecordZone * _clientZoneWithZoneWidePCS;
    FCCKPrivateDatabase * _database;
    CKRecord * _defaultZoneClientRecord;
    CKRecordID * _defaultZoneClientRecordID;
    CKRecordID * _defaultZoneClientRecordIDSecure;
    CKRecord * _defaultZoneClientRecordSecure;
    CKRecord * _defaultZoneServerRecord;
    CKRecordID * _defaultZoneServerRecordID;
    CKRecordID * _defaultZoneServerRecordIDSecure;
    CKRecord * _defaultZoneServerRecordSecure;
    CKRecord * _serverRecord;
    CKRecordID * _serverRecordID;
    CKRecordID * _serverRecordIDSecure;
    CKRecordID * _serverRecordIDWithZoneWidePCS;
    CKRecord * _serverRecordSecure;
    CKRecord * _serverRecordWithZoneWidePCS;
    CKRecordZone * _serverZone;
    CKRecordZoneID * _serverZoneID;
    CKRecordZoneID * _serverZoneIDSecure;
    CKRecordZoneID * _serverZoneIDWithZoneWidePCS;
    CKRecordZone * _serverZoneSecure;
    CKRecordZone * _serverZoneWithZoneWidePCS;
    TCKDatabase * _tckDatabase;
    TCKDatabase * _tckDatabaseWithZoneWidePCS;
    TCKDatabase * _tckSecureDatabase;
}

@property (nonatomic, readonly) NSArray *allClientRecordIDs;
@property (nonatomic, readonly) NSArray *allClientRecords;
@property (nonatomic, readonly) NSDictionary *allClientRecordsByID;
@property (nonatomic, readonly) NSArray *allClientZoneIDs;
@property (nonatomic, readonly) NSArray *allClientZones;
@property (nonatomic, readonly) NSDictionary *allClientZonesByID;
@property (nonatomic, readonly) NSArray *allDefaultZoneClientRecordIDs;
@property (nonatomic, readonly) NSArray *allDefaultZoneClientRecords;
@property (nonatomic, readonly) NSDictionary *allDefaultZoneClientRecordsByID;
@property (nonatomic, readonly) NSArray *allServerRecordIDs;
@property (nonatomic, readonly) NSArray *allServerRecords;
@property (nonatomic, readonly) NSArray *allServerZoneIDs;
@property (nonatomic, readonly) NSArray *allServerZones;
@property (nonatomic, readonly) CKDatabase *ckDatabase;
@property (nonatomic, readonly) CKDatabase *ckDatabaseWithZoneWidePCS;
@property (nonatomic, readonly) CKDatabase *ckSecureDatabase;
@property (nonatomic, readonly) CKRecord *clientRecord;
@property (nonatomic, readonly) CKRecordID *clientRecordID;
@property (nonatomic, readonly) CKRecordID *clientRecordIDSecure;
@property (nonatomic, readonly) CKRecordID *clientRecordIDWithZoneWidePCS;
@property (nonatomic, readonly) CKRecord *clientRecordSecure;
@property (nonatomic, readonly) CKRecord *clientRecordWithZoneWidePCS;
@property (nonatomic, readonly) CKRecordZone *clientZone;
@property (nonatomic, readonly) CKRecordZoneID *clientZoneID;
@property (nonatomic, readonly) CKRecordZoneID *clientZoneIDSecure;
@property (nonatomic, readonly) CKRecordZoneID *clientZoneIDWithZoneWidePCS;
@property (nonatomic, readonly) CKRecordZone *clientZoneSecure;
@property (nonatomic, readonly) CKRecordZone *clientZoneWithZoneWidePCS;
@property (nonatomic, readonly) FCCKPrivateDatabase *database;
@property (nonatomic, readonly) CKRecord *defaultZoneClientRecord;
@property (nonatomic, readonly) CKRecordID *defaultZoneClientRecordID;
@property (nonatomic, readonly) CKRecordID *defaultZoneClientRecordIDSecure;
@property (nonatomic, readonly) CKRecord *defaultZoneClientRecordSecure;
@property (nonatomic, readonly) CKRecord *defaultZoneServerRecord;
@property (nonatomic, readonly) CKRecordID *defaultZoneServerRecordID;
@property (nonatomic, readonly) CKRecordID *defaultZoneServerRecordIDSecure;
@property (nonatomic, readonly) CKRecord *defaultZoneServerRecordSecure;
@property (nonatomic, readonly) CKRecord *serverRecord;
@property (nonatomic, readonly) CKRecordID *serverRecordID;
@property (nonatomic, readonly) CKRecordID *serverRecordIDSecure;
@property (nonatomic, readonly) CKRecordID *serverRecordIDWithZoneWidePCS;
@property (nonatomic, readonly) CKRecord *serverRecordSecure;
@property (nonatomic, readonly) CKRecord *serverRecordWithZoneWidePCS;
@property (nonatomic, readonly) CKRecordZone *serverZone;
@property (nonatomic, readonly) CKRecordZoneID *serverZoneID;
@property (nonatomic, readonly) CKRecordZoneID *serverZoneIDSecure;
@property (nonatomic, readonly) CKRecordZoneID *serverZoneIDWithZoneWidePCS;
@property (nonatomic, readonly) CKRecordZone *serverZoneSecure;
@property (nonatomic, readonly) CKRecordZone *serverZoneWithZoneWidePCS;
@property (nonatomic, readonly) TCKDatabase *tckDatabase;
@property (nonatomic, readonly) TCKDatabase *tckDatabaseWithZoneWidePCS;
@property (nonatomic, readonly) TCKDatabase *tckSecureDatabase;

- (void).cxx_destruct;
- (id)allClientRecordIDs;
- (id)allClientRecords;
- (id)allClientRecordsByID;
- (id)allClientZoneIDs;
- (id)allClientZones;
- (id)allClientZonesByID;
- (id)allDefaultZoneClientRecordIDs;
- (id)allDefaultZoneClientRecords;
- (id)allDefaultZoneClientRecordsByID;
- (id)allServerRecordIDs;
- (id)allServerRecords;
- (id)allServerZoneIDs;
- (id)allServerZones;
- (id)ckDatabase;
- (id)ckDatabaseWithZoneWidePCS;
- (id)ckSecureDatabase;
- (id)clientRecord;
- (id)clientRecordID;
- (id)clientRecordIDSecure;
- (id)clientRecordIDWithZoneWidePCS;
- (id)clientRecordSecure;
- (id)clientRecordWithZoneWidePCS;
- (id)clientZone;
- (id)clientZoneID;
- (id)clientZoneIDSecure;
- (id)clientZoneIDWithZoneWidePCS;
- (id)clientZoneSecure;
- (id)clientZoneWithZoneWidePCS;
- (id)database;
- (id)defaultZoneClientRecord;
- (id)defaultZoneClientRecordID;
- (id)defaultZoneClientRecordIDSecure;
- (id)defaultZoneClientRecordSecure;
- (id)defaultZoneServerRecord;
- (id)defaultZoneServerRecordID;
- (id)defaultZoneServerRecordIDSecure;
- (id)defaultZoneServerRecordSecure;
- (id)init;
- (id)serverRecord;
- (id)serverRecordID;
- (id)serverRecordIDSecure;
- (id)serverRecordIDWithZoneWidePCS;
- (id)serverRecordSecure;
- (id)serverRecordWithZoneWidePCS;
- (id)serverZone;
- (id)serverZoneID;
- (id)serverZoneIDSecure;
- (id)serverZoneIDWithZoneWidePCS;
- (id)serverZoneSecure;
- (id)serverZoneWithZoneWidePCS;
- (id)tckDatabase;
- (id)tckDatabaseWithZoneWidePCS;
- (id)tckSecureDatabase;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

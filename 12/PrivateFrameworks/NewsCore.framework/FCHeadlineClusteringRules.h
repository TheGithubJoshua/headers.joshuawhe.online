<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FCHeadlineClusteringRules.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsCore.framework/FCHeadlineClusteringRules.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore (2166)
 */

@interface FCHeadlineClusteringRules : NSObject {
    double  _autoFavoriteClusterMaxSizeMultiplier;
    double  _autoFavoriteClusterMinSizeMultiplier;
    bool  _enableOptimizedLayout;
    double  _expandedAutofavoriteClusterMaxSizeMultiplier;
    double  _expandedAutofavoriteClusterMinSizeMultiplier;
    unsigned long long  _maxClusterSize;
    unsigned long long  _maxClusterSizeAutoFavorite;
    double  _maxExpandedAutofavoriteGroupCandidateRatio;
    unsigned long long  _maxIdealClusterSize;
    unsigned long long  _maxIdealClusterSizeAutoFavorite;
    unsigned long long  _maxPublisherOccurrences;
    unsigned long long  _maxUnpaidArticles;
    unsigned long long  _minClusterSize;
    unsigned long long  _minClusterSizeAutoFavorite;
    unsigned long long  _minIdealClusterSize;
    unsigned long long  _minIdealClusterSizeAutoFavorite;
    double  _minSubscribedChannelRatioForUGroup;
    unsigned long long  _optimizedLayoutIncrementUnit;
    unsigned long long  _optimizedLayoutSizeThreshold;
    FCSolConfiguration * _solConfiguration;
}

@property (nonatomic) double autoFavoriteClusterMaxSizeMultiplier;
@property (nonatomic) double autoFavoriteClusterMinSizeMultiplier;
@property (nonatomic, readonly) bool enableOptimizedLayout;
@property (nonatomic, readonly) double expandedAutofavoriteClusterMaxSizeMultiplier;
@property (nonatomic, readonly) double expandedAutofavoriteClusterMinSizeMultiplier;
@property (nonatomic, readonly) unsigned long long maxClusterSize;
@property (nonatomic) unsigned long long maxClusterSizeAutoFavorite;
@property (nonatomic, readonly) double maxExpandedAutofavoriteGroupCandidateRatio;
@property (nonatomic, readonly) unsigned long long maxIdealClusterSize;
@property (nonatomic) unsigned long long maxIdealClusterSizeAutoFavorite;
@property (nonatomic, readonly) unsigned long long maxPublisherOccurrences;
@property (nonatomic, readonly) unsigned long long maxUnpaidArticles;
@property (nonatomic, readonly) unsigned long long minClusterSize;
@property (nonatomic) unsigned long long minClusterSizeAutoFavorite;
@property (nonatomic, readonly) unsigned long long minIdealClusterSize;
@property (nonatomic) unsigned long long minIdealClusterSizeAutoFavorite;
@property (nonatomic, readonly) double minSubscribedChannelRatioForUGroup;
@property (nonatomic, readonly) unsigned long long optimizedLayoutIncrementUnit;
@property (nonatomic, readonly) unsigned long long optimizedLayoutSizeThreshold;
@property (nonatomic, retain) FCSolConfiguration *solConfiguration;

+ (id)rulesWithTreatment:(id)arg1 configurationSet:(long long)arg2 deviceIsiPad:(bool)arg3 limitUnpaidArticles:(bool)arg4;
+ (id)rulesWithTreatment:(id)arg1 deviceIsiPad:(bool)arg2 limitUnpaidArticles:(bool)arg3;

- (void).cxx_destruct;
- (double)autoFavoriteClusterMaxSizeMultiplier;
- (double)autoFavoriteClusterMinSizeMultiplier;
- (bool)enableOptimizedLayout;
- (double)expandedAutofavoriteClusterMaxSizeMultiplier;
- (double)expandedAutofavoriteClusterMinSizeMultiplier;
- (id)init;
- (id)initWithMinClusterSize:(unsigned long long)arg1 maxClusterSize:(unsigned long long)arg2 minIdealClusterSize:(unsigned long long)arg3 maxIdealClusterSize:(unsigned long long)arg4 minClusterSizeAutoFavorite:(unsigned long long)arg5 maxClusterSizeAutoFavorite:(unsigned long long)arg6 minIdealClusterSizeAutoFavorite:(unsigned long long)arg7 maxIdealClusterSizeAutoFavorite:(unsigned long long)arg8 maxPublisherOccurrences:(unsigned long long)arg9 maxUnpaidArticles:(unsigned long long)arg10 enableOptimizedLayout:(bool)arg11 optimizedLayoutSizeThreshold:(unsigned long long)arg12 optimizedLayoutIncrementUnit:(unsigned long long)arg13 solConfiguration:(id)arg14 minSubscribedChannelRatioForUGroup:(double)arg15 maxExpandedAutofavoriteGroupCandidateRatio:(double)arg16 expandedAutofavoriteClusterMinSizeMultiplier:(double)arg17 expandedAutofavoriteClusterMaxSizeMultiplier:(double)arg18;
- (unsigned long long)maxClusterSize;
- (unsigned long long)maxClusterSizeAutoFavorite;
- (double)maxExpandedAutofavoriteGroupCandidateRatio;
- (unsigned long long)maxIdealClusterSize;
- (unsigned long long)maxIdealClusterSizeAutoFavorite;
- (unsigned long long)maxPublisherOccurrences;
- (unsigned long long)maxUnpaidArticles;
- (unsigned long long)minClusterSize;
- (unsigned long long)minClusterSizeAutoFavorite;
- (unsigned long long)minIdealClusterSize;
- (unsigned long long)minIdealClusterSizeAutoFavorite;
- (double)minSubscribedChannelRatioForUGroup;
- (unsigned long long)optimizedLayoutIncrementUnit;
- (unsigned long long)optimizedLayoutSizeThreshold;
- (void)setAutoFavoriteClusterMaxSizeMultiplier:(double)arg1;
- (void)setAutoFavoriteClusterMinSizeMultiplier:(double)arg1;
- (void)setMaxClusterSizeAutoFavorite:(unsigned long long)arg1;
- (void)setMaxIdealClusterSizeAutoFavorite:(unsigned long long)arg1;
- (void)setMinClusterSizeAutoFavorite:(unsigned long long)arg1;
- (void)setMinIdealClusterSizeAutoFavorite:(unsigned long long)arg1;
- (void)setSolConfiguration:(id)arg1;
- (id)solConfiguration;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

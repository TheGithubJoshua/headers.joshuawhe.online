<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>XBApplicationSnapshotManifestImpl.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SplashBoard.framework/XBApplicationSnapshotManifestImpl.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SplashBoard.framework/SplashBoard (1)
 */

@interface XBApplicationSnapshotManifestImpl : XBApplicationSnapshotManifest <BSDescriptionProviding, NSSecureCoding> {
    bool  _archiveSchedulingQueue_dirty;
    bool  _archiveSchedulingQueue_scheduled;
    NSMutableArray * _archiveSchedulingQueue_synchronizeCompletions;
    _Atomic unsigned long long  _bytesWaitingToWriteOut;
    unsigned long long  _clientCount;
    XBSnapshotContainerIdentity * _containerIdentity;
    XBSnapshotManifestIdentity * _identity;
    NSFileManager * _imageAccessFileManger;
    BSAtomicSignal * _invalidatedSignal;
    unsigned long long  _pendingOperations;
    BSTimer * _reapingTimer;
    NSMutableDictionary * _snapshotGroupsByID;
}

@property (nonatomic, readonly, copy) XBSnapshotContainerIdentity *containerIdentity;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) XBSnapshotManifestIdentity *identity;
@property (readonly) Class superclass;

+ (void)_configureSnapshot:(id)arg1 withCompatibilityInfo:(id)arg2 forLaunchRequest:(id)arg3;
+ (void)_flushManifestQueue;
+ (long long)_outputFormatForSnapshot:(id)arg1;
+ (void)_queue_noteManifestInvalidated:(id)arg1;
+ (id)_snapshotPredicateForRequest:(id)arg1;
+ (id)acquireManifestForContainerIdentity:(id)arg1 store:(id)arg2 creatingIfNecessary:(bool)arg3;
+ (void)initialize;
+ (bool)isUnderMemoryPressure;
+ (void)relinquishManifest:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_allSnapshotGroups;
- (void)_commonInit;
- (id)_createSnapshotWithGroupID:(id)arg1 generationContext:(id)arg2;
- (id)_createSnapshotWithGroupID:(id)arg1 newSnapshotCreator:(id /* block */)arg2;
- (id)_generatableSnapshotForGroupID:(id)arg1 generationContext:(id)arg2;
- (bool)_imageAccessQueue_saveData:(id)arg1 forSnapshot:(id)arg2;
- (id)_initWithContainerIdentity:(id)arg1;
- (bool)_invalidate;
- (void)_noteDirtied;
- (void)_queue_accessSnapshotsWithBlock:(id /* block */)arg1 completion:(id /* block */)arg2;
- (void)_queue_checkClientCount;
- (void)_queue_decrementClientCount;
- (void)_queue_deletePaths:(id)arg1;
- (void)_queue_deleteSnapshots:(id)arg1;
- (void)_queue_doArchiveWithCompletions:(id)arg1;
- (void)_queue_gatherPaths:(id)arg1 forSnapshot:(id)arg2;
- (void)_queue_handleMemoryPressure;
- (void)_queue_incrementClientCount;
- (bool)_queue_purgeSnapshotsWithProtectedContent;
- (void)_queue_reallyCheckClientCount;
- (void)_queue_reapExpiredAndInvalidSnapshots;
- (id)_queue_snapshotGroupForID:(id)arg1 creatingIfNeeded:(bool)arg2;
- (id)_queue_snapshotsForGroupID:(id)arg1 matchingPredicate:(id)arg2;
- (id)_queue_snapshotsMatchingPredicate:(id)arg1;
- (bool)_queue_validateWithContainerIdentity:(id)arg1;
- (void)_scheduleArchivingIfNecessaryWithCompletion:(id /* block */)arg1;
- (id)_snapshotGroupsByID;
- (void)_synchronizeDataStoreWithCompletion:(id /* block */)arg1;
- (void)beginSnapshotAccessTransaction:(id /* block */)arg1 completion:(id /* block */)arg2;
- (id)bundleIdentifier;
- (id)containerIdentity;
- (id)containerPath;
- (id)createSnapshotWithGroupID:(id)arg1;
- (id)createVariantForSnapshot:(id)arg1 withIdentifier:(id)arg2;
- (void)dealloc;
- (void)deleteAllSnapshots;
- (void)deleteSnapshot:(id)arg1;
- (void)deleteSnapshots:(id)arg1;
- (void)deleteSnapshotsForGroupID:(id)arg1;
- (void)deleteSnapshotsForGroupID:(id)arg1 matchingPredicate:(id)arg2;
- (void)deleteSnapshotsForGroupID:(id)arg1 predicateBuilder:(id /* block */)arg2;
- (void)deleteSnapshotsMatchingPredicate:(id)arg1;
- (void)deleteSnapshotsUsingPredicateBuilder:(id /* block */)arg1;
- (id)description;
- (id)descriptionBuilderWithMultilinePrefix:(id)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)generateImageForSnapshot:(id)arg1 dataProvider:(id)arg2 writeToFile:(bool)arg3 didGenerateImage:(id /* block */)arg4 didSaveImage:(id /* block */)arg5;
- (id)identity;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)purgeSnapshotsWithProtectedContent;
- (void)saveSnapshot:(id)arg1 atPath:(id)arg2 withContext:(id)arg3;
- (id)snapshotsForGroupID:(id)arg1;
- (id)snapshotsForGroupID:(id)arg1 fetchRequest:(id)arg2;
- (id)snapshotsForGroupID:(id)arg1 matchingPredicate:(id)arg2;
- (id)succinctDescription;
- (id)succinctDescriptionBuilder;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

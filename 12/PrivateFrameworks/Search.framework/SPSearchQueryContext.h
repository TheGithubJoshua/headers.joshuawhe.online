<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SPSearchQueryContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Search.framework/SPSearchQueryContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Search.framework/Search (1.0)
 */

@interface SPSearchQueryContext : NSObject {
    bool  _allowInternet;
    double  _currentTime;
    NSArray * _disabledApps;
    NSArray * _disabledBundles;
    NSArray * _disabledDomains;
    SFSearchSuggestion * _engagedSuggestion;
    bool  _forceQueryEvenIfSame;
    bool  _isPasscodeLocked;
    NSString * _keyboardLanguage;
    NSString * _keyboardPrimaryLanguage;
    NSArray * _markedTextArray;
    bool  _noTokenize;
    bool  _promoteLocalResults;
    bool  _promoteParsecResults;
    unsigned long long  _queryIdent;
    NSArray * _searchDomains;
    NSArray * _searchEntities;
    NSString * _searchString;
    unsigned long long  _whyClear;
    unsigned long long  _whyQuery;
}

@property (nonatomic) bool allowInternet;
@property (nonatomic) double currentTime;
@property (nonatomic, retain) NSArray *disabledApps;
@property (nonatomic, retain) NSArray *disabledBundles;
@property (nonatomic, retain) NSArray *disabledDomains;
@property (nonatomic, readonly) NSString *displayedText;
@property (nonatomic, retain) SFSearchSuggestion *engagedSuggestion;
@property (nonatomic) bool forceQueryEvenIfSame;
@property (nonatomic, readonly) bool hasMarkedText;
@property (nonatomic) bool isPasscodeLocked;
@property (nonatomic, retain) NSString *keyboardLanguage;
@property (nonatomic, retain) NSString *keyboardPrimaryLanguage;
@property (nonatomic, retain) NSArray *markedTextArray;
@property (nonatomic) bool noTokenize;
@property (nonatomic) bool promoteLocalResults;
@property (nonatomic) bool promoteParsecResults;
@property (nonatomic) unsigned long long queryIdent;
@property (nonatomic, retain) NSArray *searchDomains;
@property (nonatomic, retain) NSArray *searchEntities;
@property (nonatomic, retain) NSString *searchString;
@property (nonatomic) unsigned long long whyClear;
@property (nonatomic) unsigned long long whyQuery;

+ (id)queryContextWithSearchString:(id)arg1;

- (void).cxx_destruct;
- (bool)allowInternet;
- (double)currentTime;
- (id)disabledApps;
- (id)disabledBundles;
- (id)disabledDomains;
- (id)displayedText;
- (id)engagedSuggestion;
- (bool)forceQueryEvenIfSame;
- (bool)hasMarkedText;
- (id)init;
- (id)initWithSearchString:(id)arg1;
- (bool)isPasscodeLocked;
- (id)keyboardLanguage;
- (id)keyboardPrimaryLanguage;
- (id)markedTextArray;
- (bool)noTokenize;
- (bool)promoteLocalResults;
- (bool)promoteParsecResults;
- (unsigned long long)queryIdent;
- (id)searchDomains;
- (id)searchEntities;
- (id)searchString;
- (void)setAllowInternet:(bool)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setDisabledApps:(id)arg1;
- (void)setDisabledBundles:(id)arg1;
- (void)setDisabledDomains:(id)arg1;
- (void)setEngagedSuggestion:(id)arg1;
- (void)setForceQueryEvenIfSame:(bool)arg1;
- (void)setIsPasscodeLocked:(bool)arg1;
- (void)setKeyboardLanguage:(id)arg1;
- (void)setKeyboardPrimaryLanguage:(id)arg1;
- (void)setMarkedTextArray:(id)arg1;
- (void)setNoTokenize:(bool)arg1;
- (void)setPromoteLocalResults:(bool)arg1;
- (void)setPromoteParsecResults:(bool)arg1;
- (void)setQueryIdent:(unsigned long long)arg1;
- (void)setSearchDomains:(id)arg1;
- (void)setSearchEntities:(id)arg1;
- (void)setSearchString:(id)arg1;
- (void)setWhyClear:(unsigned long long)arg1;
- (void)setWhyQuery:(unsigned long long)arg1;
- (unsigned long long)whyClear;
- (unsigned long long)whyQuery;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

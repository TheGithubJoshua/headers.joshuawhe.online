<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBSearchResultSelect.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBSearchResultSelect.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBSearchResultSelect : PBCodable <NSCopying> {
    NSMutableArray * _articleResultArticleIds;
    NSString * _campaignId;
    NSString * _campaignType;
    NSMutableArray * _channelResultFeedIds;
    NSString * _creativeId;
    bool  _didSelectResult;
    struct { 
        unsigned int searchExecutionMethod : 1; 
        unsigned int searchLocation : 1; 
        unsigned int searchResultSelectLocation : 1; 
        unsigned int selectedResultActionType : 1; 
        unsigned int selectedResultRankInSection : 1; 
        unsigned int selectedResultSection : 1; 
        unsigned int selectedResultType : 1; 
        unsigned int totalResults : 1; 
        unsigned int totalResultsInSelectedSection : 1; 
        unsigned int didSelectResult : 1; 
        unsigned int selectedResultShowMore : 1; 
    }  _has;
    NSMutableArray * _nonSelectedResultFeedIds;
    int  _searchExecutionMethod;
    int  _searchLocation;
    int  _searchResultSelectLocation;
    NSMutableArray * _searchResults;
    NSString * _searchString;
    int  _selectedResultActionType;
    NSString * _selectedResultArticleId;
    NSString * _selectedResultFeedId;
    int  _selectedResultRankInSection;
    int  _selectedResultSection;
    bool  _selectedResultShowMore;
    NSString * _selectedResultString;
    int  _selectedResultType;
    NSString * _storeFrontId;
    NSString * _topResultArticleId;
    NSString * _topResultChannelId;
    NSString * _topResultFeedId;
    NSString * _topResultTopicId;
    NSMutableArray * _topicResultFeedIds;
    int  _totalResults;
    int  _totalResultsInSelectedSection;
}

@property (nonatomic, retain) NSMutableArray *articleResultArticleIds;
@property (nonatomic, retain) NSString *campaignId;
@property (nonatomic, retain) NSString *campaignType;
@property (nonatomic, retain) NSMutableArray *channelResultFeedIds;
@property (nonatomic, retain) NSString *creativeId;
@property (nonatomic) bool didSelectResult;
@property (nonatomic, readonly) bool hasCampaignId;
@property (nonatomic, readonly) bool hasCampaignType;
@property (nonatomic, readonly) bool hasCreativeId;
@property (nonatomic) bool hasDidSelectResult;
@property (nonatomic) bool hasSearchExecutionMethod;
@property (nonatomic) bool hasSearchLocation;
@property (nonatomic) bool hasSearchResultSelectLocation;
@property (nonatomic, readonly) bool hasSearchString;
@property (nonatomic) bool hasSelectedResultActionType;
@property (nonatomic, readonly) bool hasSelectedResultArticleId;
@property (nonatomic, readonly) bool hasSelectedResultFeedId;
@property (nonatomic) bool hasSelectedResultRankInSection;
@property (nonatomic) bool hasSelectedResultSection;
@property (nonatomic) bool hasSelectedResultShowMore;
@property (nonatomic, readonly) bool hasSelectedResultString;
@property (nonatomic) bool hasSelectedResultType;
@property (nonatomic, readonly) bool hasStoreFrontId;
@property (nonatomic, readonly) bool hasTopResultArticleId;
@property (nonatomic, readonly) bool hasTopResultChannelId;
@property (nonatomic, readonly) bool hasTopResultFeedId;
@property (nonatomic, readonly) bool hasTopResultTopicId;
@property (nonatomic) bool hasTotalResults;
@property (nonatomic) bool hasTotalResultsInSelectedSection;
@property (nonatomic, retain) NSMutableArray *nonSelectedResultFeedIds;
@property (nonatomic) int searchExecutionMethod;
@property (nonatomic) int searchLocation;
@property (nonatomic) int searchResultSelectLocation;
@property (nonatomic, retain) NSMutableArray *searchResults;
@property (nonatomic, retain) NSString *searchString;
@property (nonatomic) int selectedResultActionType;
@property (nonatomic, retain) NSString *selectedResultArticleId;
@property (nonatomic, retain) NSString *selectedResultFeedId;
@property (nonatomic) int selectedResultRankInSection;
@property (nonatomic) int selectedResultSection;
@property (nonatomic) bool selectedResultShowMore;
@property (nonatomic, retain) NSString *selectedResultString;
@property (nonatomic) int selectedResultType;
@property (nonatomic, retain) NSString *storeFrontId;
@property (nonatomic, retain) NSString *topResultArticleId;
@property (nonatomic, retain) NSString *topResultChannelId;
@property (nonatomic, retain) NSString *topResultFeedId;
@property (nonatomic, retain) NSString *topResultTopicId;
@property (nonatomic, retain) NSMutableArray *topicResultFeedIds;
@property (nonatomic) int totalResults;
@property (nonatomic) int totalResultsInSelectedSection;

+ (Class)articleResultArticleIdsType;
+ (Class)channelResultFeedIdsType;
+ (Class)nonSelectedResultFeedIdType;
+ (Class)searchResultsType;
+ (Class)topicResultFeedIdsType;

- (void).cxx_destruct;
- (int)StringAsSearchExecutionMethod:(id)arg1;
- (int)StringAsSearchLocation:(id)arg1;
- (void)addArticleResultArticleIds:(id)arg1;
- (void)addChannelResultFeedIds:(id)arg1;
- (void)addNonSelectedResultFeedId:(id)arg1;
- (void)addSearchResults:(id)arg1;
- (void)addTopicResultFeedIds:(id)arg1;
- (id)articleResultArticleIds;
- (id)articleResultArticleIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)articleResultArticleIdsCount;
- (id)campaignId;
- (id)campaignType;
- (id)channelResultFeedIds;
- (id)channelResultFeedIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)channelResultFeedIdsCount;
- (void)clearArticleResultArticleIds;
- (void)clearChannelResultFeedIds;
- (void)clearNonSelectedResultFeedIds;
- (void)clearSearchResults;
- (void)clearTopicResultFeedIds;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creativeId;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)didSelectResult;
- (bool)hasCampaignId;
- (bool)hasCampaignType;
- (bool)hasCreativeId;
- (bool)hasDidSelectResult;
- (bool)hasSearchExecutionMethod;
- (bool)hasSearchLocation;
- (bool)hasSearchResultSelectLocation;
- (bool)hasSearchString;
- (bool)hasSelectedResultActionType;
- (bool)hasSelectedResultArticleId;
- (bool)hasSelectedResultFeedId;
- (bool)hasSelectedResultRankInSection;
- (bool)hasSelectedResultSection;
- (bool)hasSelectedResultShowMore;
- (bool)hasSelectedResultString;
- (bool)hasSelectedResultType;
- (bool)hasStoreFrontId;
- (bool)hasTopResultArticleId;
- (bool)hasTopResultChannelId;
- (bool)hasTopResultFeedId;
- (bool)hasTopResultTopicId;
- (bool)hasTotalResults;
- (bool)hasTotalResultsInSelectedSection;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)nonSelectedResultFeedIdAtIndex:(unsigned long long)arg1;
- (id)nonSelectedResultFeedIds;
- (unsigned long long)nonSelectedResultFeedIdsCount;
- (bool)readFrom:(id)arg1;
- (int)searchExecutionMethod;
- (id)searchExecutionMethodAsString:(int)arg1;
- (int)searchLocation;
- (id)searchLocationAsString:(int)arg1;
- (int)searchResultSelectLocation;
- (id)searchResults;
- (id)searchResultsAtIndex:(unsigned long long)arg1;
- (unsigned long long)searchResultsCount;
- (id)searchString;
- (int)selectedResultActionType;
- (id)selectedResultArticleId;
- (id)selectedResultFeedId;
- (int)selectedResultRankInSection;
- (int)selectedResultSection;
- (bool)selectedResultShowMore;
- (id)selectedResultString;
- (int)selectedResultType;
- (void)setArticleResultArticleIds:(id)arg1;
- (void)setCampaignId:(id)arg1;
- (void)setCampaignType:(id)arg1;
- (void)setChannelResultFeedIds:(id)arg1;
- (void)setCreativeId:(id)arg1;
- (void)setDidSelectResult:(bool)arg1;
- (void)setHasDidSelectResult:(bool)arg1;
- (void)setHasSearchExecutionMethod:(bool)arg1;
- (void)setHasSearchLocation:(bool)arg1;
- (void)setHasSearchResultSelectLocation:(bool)arg1;
- (void)setHasSelectedResultActionType:(bool)arg1;
- (void)setHasSelectedResultRankInSection:(bool)arg1;
- (void)setHasSelectedResultSection:(bool)arg1;
- (void)setHasSelectedResultShowMore:(bool)arg1;
- (void)setHasSelectedResultType:(bool)arg1;
- (void)setHasTotalResults:(bool)arg1;
- (void)setHasTotalResultsInSelectedSection:(bool)arg1;
- (void)setNonSelectedResultFeedIds:(id)arg1;
- (void)setSearchExecutionMethod:(int)arg1;
- (void)setSearchLocation:(int)arg1;
- (void)setSearchResultSelectLocation:(int)arg1;
- (void)setSearchResults:(id)arg1;
- (void)setSearchString:(id)arg1;
- (void)setSelectedResultActionType:(int)arg1;
- (void)setSelectedResultArticleId:(id)arg1;
- (void)setSelectedResultFeedId:(id)arg1;
- (void)setSelectedResultRankInSection:(int)arg1;
- (void)setSelectedResultSection:(int)arg1;
- (void)setSelectedResultShowMore:(bool)arg1;
- (void)setSelectedResultString:(id)arg1;
- (void)setSelectedResultType:(int)arg1;
- (void)setStoreFrontId:(id)arg1;
- (void)setTopResultArticleId:(id)arg1;
- (void)setTopResultChannelId:(id)arg1;
- (void)setTopResultFeedId:(id)arg1;
- (void)setTopResultTopicId:(id)arg1;
- (void)setTopicResultFeedIds:(id)arg1;
- (void)setTotalResults:(int)arg1;
- (void)setTotalResultsInSelectedSection:(int)arg1;
- (id)storeFrontId;
- (id)topResultArticleId;
- (id)topResultChannelId;
- (id)topResultFeedId;
- (id)topResultTopicId;
- (id)topicResultFeedIds;
- (id)topicResultFeedIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)topicResultFeedIdsCount;
- (int)totalResults;
- (int)totalResultsInSelectedSection;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

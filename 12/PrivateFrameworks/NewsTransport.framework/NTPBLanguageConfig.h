<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBLanguageConfig.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBLanguageConfig.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBLanguageConfig : PBCodable <NSCopying> {
    NSString * _appleEditorialChannelId;
    NSString * _breakingNewsChannelId;
    NSString * _briefingsTagId;
    NTPBCoverArticlesConfig * _coverArticlesConfig;
    NSString * _editorialGemsSectionId;
    NSString * _exploreArticleId;
    NSString * _featuredStoriesTagId;
    NSString * _forYouConfigId;
    NSString * _hiddenFeedId;
    NSString * _languageTag;
    NSMutableArray * _mediaSharingBlacklistedChannelIds;
    NSString * _moreVideosChannelId;
    NSMutableArray * _onboardingTagIds;
    NSMutableArray * _preSubscribedFeedIds;
    NSMutableArray * _preSubscribedNotificationsChannelIds;
    NSMutableArray * _recommendedNotificationChannels;
    NTPBCategory * _rootCategory;
    NSString * _savedStoriesTagId;
    NTPBVideoPlayerConfig * _shareVideoPlayerConfig;
    NSString * _specialEventsChannelId;
    NTPBTopStoriesConfig * _topStoriesConfig;
    NSString * _topVideosChannelId;
    NSString * _trendingTagId;
    NSString * _widgetSectionConfigId;
}

@property (nonatomic, retain) NSString *appleEditorialChannelId;
@property (nonatomic, retain) NSString *breakingNewsChannelId;
@property (nonatomic, retain) NSString *briefingsTagId;
@property (nonatomic, retain) NTPBCoverArticlesConfig *coverArticlesConfig;
@property (nonatomic, retain) NSString *editorialGemsSectionId;
@property (nonatomic, retain) NSString *exploreArticleId;
@property (nonatomic, retain) NSString *featuredStoriesTagId;
@property (nonatomic, retain) NSString *forYouConfigId;
@property (nonatomic, readonly) bool hasAppleEditorialChannelId;
@property (nonatomic, readonly) bool hasBreakingNewsChannelId;
@property (nonatomic, readonly) bool hasBriefingsTagId;
@property (nonatomic, readonly) bool hasCoverArticlesConfig;
@property (nonatomic, readonly) bool hasEditorialGemsSectionId;
@property (nonatomic, readonly) bool hasExploreArticleId;
@property (nonatomic, readonly) bool hasFeaturedStoriesTagId;
@property (nonatomic, readonly) bool hasForYouConfigId;
@property (nonatomic, readonly) bool hasHiddenFeedId;
@property (nonatomic, readonly) bool hasLanguageTag;
@property (nonatomic, readonly) bool hasMoreVideosChannelId;
@property (nonatomic, readonly) bool hasRootCategory;
@property (nonatomic, readonly) bool hasSavedStoriesTagId;
@property (nonatomic, readonly) bool hasShareVideoPlayerConfig;
@property (nonatomic, readonly) bool hasSpecialEventsChannelId;
@property (nonatomic, readonly) bool hasTopStoriesConfig;
@property (nonatomic, readonly) bool hasTopVideosChannelId;
@property (nonatomic, readonly) bool hasTrendingTagId;
@property (nonatomic, readonly) bool hasWidgetSectionConfigId;
@property (nonatomic, retain) NSString *hiddenFeedId;
@property (nonatomic, retain) NSString *languageTag;
@property (nonatomic, retain) NSMutableArray *mediaSharingBlacklistedChannelIds;
@property (nonatomic, retain) NSString *moreVideosChannelId;
@property (nonatomic, retain) NSMutableArray *onboardingTagIds;
@property (nonatomic, retain) NSMutableArray *preSubscribedFeedIds;
@property (nonatomic, retain) NSMutableArray *preSubscribedNotificationsChannelIds;
@property (nonatomic, retain) NSMutableArray *recommendedNotificationChannels;
@property (nonatomic, retain) NTPBCategory *rootCategory;
@property (nonatomic, retain) NSString *savedStoriesTagId;
@property (nonatomic, retain) NTPBVideoPlayerConfig *shareVideoPlayerConfig;
@property (nonatomic, retain) NSString *specialEventsChannelId;
@property (nonatomic, retain) NTPBTopStoriesConfig *topStoriesConfig;
@property (nonatomic, retain) NSString *topVideosChannelId;
@property (nonatomic, retain) NSString *trendingTagId;
@property (nonatomic, retain) NSString *widgetSectionConfigId;

+ (Class)mediaSharingBlacklistedChannelIdsType;
+ (Class)onboardingTagIdsType;
+ (Class)preSubscribedFeedIdsType;
+ (Class)preSubscribedNotificationsChannelIdsType;
+ (Class)recommendedNotificationChannelsType;

- (void).cxx_destruct;
- (void)addMediaSharingBlacklistedChannelIds:(id)arg1;
- (void)addOnboardingTagIds:(id)arg1;
- (void)addPreSubscribedFeedIds:(id)arg1;
- (void)addPreSubscribedNotificationsChannelIds:(id)arg1;
- (void)addRecommendedNotificationChannels:(id)arg1;
- (id)appleEditorialChannelId;
- (id)breakingNewsChannelId;
- (id)briefingsTagId;
- (void)clearMediaSharingBlacklistedChannelIds;
- (void)clearOnboardingTagIds;
- (void)clearPreSubscribedFeedIds;
- (void)clearPreSubscribedNotificationsChannelIds;
- (void)clearRecommendedNotificationChannels;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)coverArticlesConfig;
- (id)description;
- (id)dictionaryRepresentation;
- (id)editorialGemsSectionId;
- (id)exploreArticleId;
- (id)featuredStoriesTagId;
- (id)forYouConfigId;
- (bool)hasAppleEditorialChannelId;
- (bool)hasBreakingNewsChannelId;
- (bool)hasBriefingsTagId;
- (bool)hasCoverArticlesConfig;
- (bool)hasEditorialGemsSectionId;
- (bool)hasExploreArticleId;
- (bool)hasFeaturedStoriesTagId;
- (bool)hasForYouConfigId;
- (bool)hasHiddenFeedId;
- (bool)hasLanguageTag;
- (bool)hasMoreVideosChannelId;
- (bool)hasRootCategory;
- (bool)hasSavedStoriesTagId;
- (bool)hasShareVideoPlayerConfig;
- (bool)hasSpecialEventsChannelId;
- (bool)hasTopStoriesConfig;
- (bool)hasTopVideosChannelId;
- (bool)hasTrendingTagId;
- (bool)hasWidgetSectionConfigId;
- (unsigned long long)hash;
- (id)hiddenFeedId;
- (bool)isEqual:(id)arg1;
- (id)languageTag;
- (id)mediaSharingBlacklistedChannelIds;
- (id)mediaSharingBlacklistedChannelIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)mediaSharingBlacklistedChannelIdsCount;
- (void)mergeFrom:(id)arg1;
- (id)moreVideosChannelId;
- (id)onboardingTagIds;
- (id)onboardingTagIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)onboardingTagIdsCount;
- (id)preSubscribedFeedIds;
- (id)preSubscribedFeedIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)preSubscribedFeedIdsCount;
- (id)preSubscribedNotificationsChannelIds;
- (id)preSubscribedNotificationsChannelIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)preSubscribedNotificationsChannelIdsCount;
- (bool)readFrom:(id)arg1;
- (id)recommendedNotificationChannels;
- (id)recommendedNotificationChannelsAtIndex:(unsigned long long)arg1;
- (unsigned long long)recommendedNotificationChannelsCount;
- (id)rootCategory;
- (id)savedStoriesTagId;
- (void)setAppleEditorialChannelId:(id)arg1;
- (void)setBreakingNewsChannelId:(id)arg1;
- (void)setBriefingsTagId:(id)arg1;
- (void)setCoverArticlesConfig:(id)arg1;
- (void)setEditorialGemsSectionId:(id)arg1;
- (void)setExploreArticleId:(id)arg1;
- (void)setFeaturedStoriesTagId:(id)arg1;
- (void)setForYouConfigId:(id)arg1;
- (void)setHiddenFeedId:(id)arg1;
- (void)setLanguageTag:(id)arg1;
- (void)setMediaSharingBlacklistedChannelIds:(id)arg1;
- (void)setMoreVideosChannelId:(id)arg1;
- (void)setOnboardingTagIds:(id)arg1;
- (void)setPreSubscribedFeedIds:(id)arg1;
- (void)setPreSubscribedNotificationsChannelIds:(id)arg1;
- (void)setRecommendedNotificationChannels:(id)arg1;
- (void)setRootCategory:(id)arg1;
- (void)setSavedStoriesTagId:(id)arg1;
- (void)setShareVideoPlayerConfig:(id)arg1;
- (void)setSpecialEventsChannelId:(id)arg1;
- (void)setTopStoriesConfig:(id)arg1;
- (void)setTopVideosChannelId:(id)arg1;
- (void)setTrendingTagId:(id)arg1;
- (void)setWidgetSectionConfigId:(id)arg1;
- (id)shareVideoPlayerConfig;
- (id)specialEventsChannelId;
- (id)topStoriesConfig;
- (id)topVideosChannelId;
- (id)trendingTagId;
- (id)widgetSectionConfigId;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

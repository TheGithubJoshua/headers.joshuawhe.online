<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBGroupViewExposure.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBGroupViewExposure.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBGroupViewExposure : PBCodable <NSCopying> {
    NSData * _articleViewingSessionId;
    int  _curatedContentType;
    int  _feedAutoSubscribeType;
    NSData * _feedViewExposureId;
    int  _groupArticleCountInForYou;
    int  _groupDisplayMode;
    int  _groupDisplayRankInForYou;
    NSString * _groupExposedInLocationId;
    NSString * _groupExposedInSourceChannelId;
    NSString * _groupFeedId;
    int  _groupFormationReason;
    int  _groupLocation;
    int  _groupLocationFeedType;
    int  _groupPresentationReason;
    int  _groupType;
    NSData * _groupViewExposureId;
    NSMutableArray * _groupedArticleIds;
    NSMutableArray * _groupedIssueIds;
    struct { 
        unsigned int curatedContentType : 1; 
        unsigned int feedAutoSubscribeType : 1; 
        unsigned int groupArticleCountInForYou : 1; 
        unsigned int groupDisplayMode : 1; 
        unsigned int groupDisplayRankInForYou : 1; 
        unsigned int groupFormationReason : 1; 
        unsigned int groupLocation : 1; 
        unsigned int groupLocationFeedType : 1; 
        unsigned int groupPresentationReason : 1; 
        unsigned int groupType : 1; 
        unsigned int screenfulsFromTop : 1; 
        unsigned int topStoryMandatoryArticleCount : 1; 
        unsigned int topStoryOptionalArticleCount : 1; 
        unsigned int isIssueContext : 1; 
        unsigned int isSubscribedToGroupFeed : 1; 
        unsigned int reachedEndOfGroup : 1; 
    }  _has;
    bool  _isIssueContext;
    bool  _isSubscribedToGroupFeed;
    bool  _reachedEndOfGroup;
    int  _screenfulsFromTop;
    int  _topStoryMandatoryArticleCount;
    int  _topStoryOptionalArticleCount;
}

@property (nonatomic, retain) NSData *articleViewingSessionId;
@property (nonatomic) int curatedContentType;
@property (nonatomic) int feedAutoSubscribeType;
@property (nonatomic, retain) NSData *feedViewExposureId;
@property (nonatomic) int groupArticleCountInForYou;
@property (nonatomic) int groupDisplayMode;
@property (nonatomic) int groupDisplayRankInForYou;
@property (nonatomic, retain) NSString *groupExposedInLocationId;
@property (nonatomic, retain) NSString *groupExposedInSourceChannelId;
@property (nonatomic, retain) NSString *groupFeedId;
@property (nonatomic) int groupFormationReason;
@property (nonatomic) int groupLocation;
@property (nonatomic) int groupLocationFeedType;
@property (nonatomic) int groupPresentationReason;
@property (nonatomic) int groupType;
@property (nonatomic, retain) NSData *groupViewExposureId;
@property (nonatomic, retain) NSMutableArray *groupedArticleIds;
@property (nonatomic, retain) NSMutableArray *groupedIssueIds;
@property (nonatomic, readonly) bool hasArticleViewingSessionId;
@property (nonatomic) bool hasCuratedContentType;
@property (nonatomic) bool hasFeedAutoSubscribeType;
@property (nonatomic, readonly) bool hasFeedViewExposureId;
@property (nonatomic) bool hasGroupArticleCountInForYou;
@property (nonatomic) bool hasGroupDisplayMode;
@property (nonatomic) bool hasGroupDisplayRankInForYou;
@property (nonatomic, readonly) bool hasGroupExposedInLocationId;
@property (nonatomic, readonly) bool hasGroupExposedInSourceChannelId;
@property (nonatomic, readonly) bool hasGroupFeedId;
@property (nonatomic) bool hasGroupFormationReason;
@property (nonatomic) bool hasGroupLocation;
@property (nonatomic) bool hasGroupLocationFeedType;
@property (nonatomic) bool hasGroupPresentationReason;
@property (nonatomic) bool hasGroupType;
@property (nonatomic, readonly) bool hasGroupViewExposureId;
@property (nonatomic) bool hasIsIssueContext;
@property (nonatomic) bool hasIsSubscribedToGroupFeed;
@property (nonatomic) bool hasReachedEndOfGroup;
@property (nonatomic) bool hasScreenfulsFromTop;
@property (nonatomic) bool hasTopStoryMandatoryArticleCount;
@property (nonatomic) bool hasTopStoryOptionalArticleCount;
@property (nonatomic) bool isIssueContext;
@property (nonatomic) bool isSubscribedToGroupFeed;
@property (nonatomic) bool reachedEndOfGroup;
@property (nonatomic) int screenfulsFromTop;
@property (nonatomic) int topStoryMandatoryArticleCount;
@property (nonatomic) int topStoryOptionalArticleCount;

+ (Class)groupedArticleIdsType;
+ (Class)groupedIssueIdsType;

- (void).cxx_destruct;
- (int)StringAsCuratedContentType:(id)arg1;
- (int)StringAsFeedAutoSubscribeType:(id)arg1;
- (int)StringAsGroupFormationReason:(id)arg1;
- (int)StringAsGroupLocation:(id)arg1;
- (int)StringAsGroupLocationFeedType:(id)arg1;
- (int)StringAsGroupPresentationReason:(id)arg1;
- (int)StringAsGroupType:(id)arg1;
- (void)addGroupedArticleIds:(id)arg1;
- (void)addGroupedIssueIds:(id)arg1;
- (id)articleViewingSessionId;
- (void)clearGroupedArticleIds;
- (void)clearGroupedIssueIds;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)curatedContentType;
- (id)curatedContentTypeAsString:(int)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (int)feedAutoSubscribeType;
- (id)feedAutoSubscribeTypeAsString:(int)arg1;
- (id)feedViewExposureId;
- (int)groupArticleCountInForYou;
- (int)groupDisplayMode;
- (int)groupDisplayRankInForYou;
- (id)groupExposedInLocationId;
- (id)groupExposedInSourceChannelId;
- (id)groupFeedId;
- (int)groupFormationReason;
- (id)groupFormationReasonAsString:(int)arg1;
- (int)groupLocation;
- (id)groupLocationAsString:(int)arg1;
- (int)groupLocationFeedType;
- (id)groupLocationFeedTypeAsString:(int)arg1;
- (int)groupPresentationReason;
- (id)groupPresentationReasonAsString:(int)arg1;
- (int)groupType;
- (id)groupTypeAsString:(int)arg1;
- (id)groupViewExposureId;
- (id)groupedArticleIds;
- (id)groupedArticleIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)groupedArticleIdsCount;
- (id)groupedIssueIds;
- (id)groupedIssueIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)groupedIssueIdsCount;
- (bool)hasArticleViewingSessionId;
- (bool)hasCuratedContentType;
- (bool)hasFeedAutoSubscribeType;
- (bool)hasFeedViewExposureId;
- (bool)hasGroupArticleCountInForYou;
- (bool)hasGroupDisplayMode;
- (bool)hasGroupDisplayRankInForYou;
- (bool)hasGroupExposedInLocationId;
- (bool)hasGroupExposedInSourceChannelId;
- (bool)hasGroupFeedId;
- (bool)hasGroupFormationReason;
- (bool)hasGroupLocation;
- (bool)hasGroupLocationFeedType;
- (bool)hasGroupPresentationReason;
- (bool)hasGroupType;
- (bool)hasGroupViewExposureId;
- (bool)hasIsIssueContext;
- (bool)hasIsSubscribedToGroupFeed;
- (bool)hasReachedEndOfGroup;
- (bool)hasScreenfulsFromTop;
- (bool)hasTopStoryMandatoryArticleCount;
- (bool)hasTopStoryOptionalArticleCount;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isIssueContext;
- (bool)isSubscribedToGroupFeed;
- (void)mergeFrom:(id)arg1;
- (bool)reachedEndOfGroup;
- (bool)readFrom:(id)arg1;
- (int)screenfulsFromTop;
- (void)setArticleViewingSessionId:(id)arg1;
- (void)setCuratedContentType:(int)arg1;
- (void)setFeedAutoSubscribeType:(int)arg1;
- (void)setFeedViewExposureId:(id)arg1;
- (void)setGroupArticleCountInForYou:(int)arg1;
- (void)setGroupDisplayMode:(int)arg1;
- (void)setGroupDisplayRankInForYou:(int)arg1;
- (void)setGroupExposedInLocationId:(id)arg1;
- (void)setGroupExposedInSourceChannelId:(id)arg1;
- (void)setGroupFeedId:(id)arg1;
- (void)setGroupFormationReason:(int)arg1;
- (void)setGroupLocation:(int)arg1;
- (void)setGroupLocationFeedType:(int)arg1;
- (void)setGroupPresentationReason:(int)arg1;
- (void)setGroupType:(int)arg1;
- (void)setGroupViewExposureId:(id)arg1;
- (void)setGroupedArticleIds:(id)arg1;
- (void)setGroupedIssueIds:(id)arg1;
- (void)setHasCuratedContentType:(bool)arg1;
- (void)setHasFeedAutoSubscribeType:(bool)arg1;
- (void)setHasGroupArticleCountInForYou:(bool)arg1;
- (void)setHasGroupDisplayMode:(bool)arg1;
- (void)setHasGroupDisplayRankInForYou:(bool)arg1;
- (void)setHasGroupFormationReason:(bool)arg1;
- (void)setHasGroupLocation:(bool)arg1;
- (void)setHasGroupLocationFeedType:(bool)arg1;
- (void)setHasGroupPresentationReason:(bool)arg1;
- (void)setHasGroupType:(bool)arg1;
- (void)setHasIsIssueContext:(bool)arg1;
- (void)setHasIsSubscribedToGroupFeed:(bool)arg1;
- (void)setHasReachedEndOfGroup:(bool)arg1;
- (void)setHasScreenfulsFromTop:(bool)arg1;
- (void)setHasTopStoryMandatoryArticleCount:(bool)arg1;
- (void)setHasTopStoryOptionalArticleCount:(bool)arg1;
- (void)setIsIssueContext:(bool)arg1;
- (void)setIsSubscribedToGroupFeed:(bool)arg1;
- (void)setReachedEndOfGroup:(bool)arg1;
- (void)setScreenfulsFromTop:(int)arg1;
- (void)setTopStoryMandatoryArticleCount:(int)arg1;
- (void)setTopStoryOptionalArticleCount:(int)arg1;
- (int)topStoryMandatoryArticleCount;
- (int)topStoryOptionalArticleCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBDeviceInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBDeviceInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBDeviceInfo : PBCodable <NSCopying> {
    NSString * _deviceAppBundleId;
    NSString * _deviceAppVersion;
    long long  _deviceDstOffset;
    NSString * _deviceOsVersion;
    NSMutableArray * _devicePreferredLanguages;
    NSString * _devicePushToken;
    NSString * _deviceTimezone;
    int  _deviceTokenEnv;
    NSString * _deviceType;
    long long  _deviceUtcOffset;
    struct { 
        unsigned int deviceDstOffset : 1; 
        unsigned int deviceUtcOffset : 1; 
        unsigned int deviceTokenEnv : 1; 
    }  _has;
}

@property (nonatomic, retain) NSString *deviceAppBundleId;
@property (nonatomic, retain) NSString *deviceAppVersion;
@property (nonatomic) long long deviceDstOffset;
@property (nonatomic, retain) NSString *deviceOsVersion;
@property (nonatomic, retain) NSMutableArray *devicePreferredLanguages;
@property (nonatomic, retain) NSString *devicePushToken;
@property (nonatomic, retain) NSString *deviceTimezone;
@property (nonatomic) int deviceTokenEnv;
@property (nonatomic, retain) NSString *deviceType;
@property (nonatomic) long long deviceUtcOffset;
@property (nonatomic, readonly) bool hasDeviceAppBundleId;
@property (nonatomic, readonly) bool hasDeviceAppVersion;
@property (nonatomic) bool hasDeviceDstOffset;
@property (nonatomic, readonly) bool hasDeviceOsVersion;
@property (nonatomic, readonly) bool hasDevicePushToken;
@property (nonatomic, readonly) bool hasDeviceTimezone;
@property (nonatomic) bool hasDeviceTokenEnv;
@property (nonatomic, readonly) bool hasDeviceType;
@property (nonatomic) bool hasDeviceUtcOffset;

+ (Class)devicePreferredLanguageType;

- (void).cxx_destruct;
- (void)addDevicePreferredLanguage:(id)arg1;
- (void)clearDevicePreferredLanguages;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)deviceAppBundleId;
- (id)deviceAppVersion;
- (long long)deviceDstOffset;
- (id)deviceOsVersion;
- (id)devicePreferredLanguageAtIndex:(unsigned long long)arg1;
- (id)devicePreferredLanguages;
- (unsigned long long)devicePreferredLanguagesCount;
- (id)devicePushToken;
- (id)deviceTimezone;
- (int)deviceTokenEnv;
- (id)deviceType;
- (long long)deviceUtcOffset;
- (id)dictionaryRepresentation;
- (bool)hasDeviceAppBundleId;
- (bool)hasDeviceAppVersion;
- (bool)hasDeviceDstOffset;
- (bool)hasDeviceOsVersion;
- (bool)hasDevicePushToken;
- (bool)hasDeviceTimezone;
- (bool)hasDeviceTokenEnv;
- (bool)hasDeviceType;
- (bool)hasDeviceUtcOffset;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setDeviceAppBundleId:(id)arg1;
- (void)setDeviceAppVersion:(id)arg1;
- (void)setDeviceDstOffset:(long long)arg1;
- (void)setDeviceOsVersion:(id)arg1;
- (void)setDevicePreferredLanguages:(id)arg1;
- (void)setDevicePushToken:(id)arg1;
- (void)setDeviceTimezone:(id)arg1;
- (void)setDeviceTokenEnv:(int)arg1;
- (void)setDeviceType:(id)arg1;
- (void)setDeviceUtcOffset:(long long)arg1;
- (void)setHasDeviceDstOffset:(bool)arg1;
- (void)setHasDeviceTokenEnv:(bool)arg1;
- (void)setHasDeviceUtcOffset:(bool)arg1;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBFeedViewportHeadline.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBFeedViewportHeadline.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBFeedViewportHeadline : PBCodable <NSCopying> {
    NSString * _articleID;
    NSString * _callToActionText;
    NSString * _clusterID;
    NTPBDate * _displayDate;
    struct { 
        unsigned int tileProminenceScore : 1; 
        unsigned int storyType : 1; 
        unsigned int surfacedByBinIDRef : 1; 
        unsigned int surfacedByChannelIDRef : 1; 
        unsigned int surfacedBySectionIDRef : 1; 
        unsigned int surfacedByTopicIDRef : 1; 
        unsigned int topStoryType : 1; 
        unsigned int usesImageOnTopLayout : 1; 
    }  _has;
    int  _storyType;
    int  _surfacedByBinIDRef;
    int  _surfacedByChannelIDRef;
    int  _surfacedBySectionIDRef;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _surfacedByTagIDsRefs;
    int  _surfacedByTopicIDRef;
    double  _tileProminenceScore;
    int  _topStoryType;
    bool  _usesImageOnTopLayout;
}

@property (nonatomic, retain) NSString *articleID;
@property (nonatomic, retain) NSString *callToActionText;
@property (nonatomic, retain) NSString *clusterID;
@property (nonatomic, retain) NTPBDate *displayDate;
@property (nonatomic, readonly) bool hasArticleID;
@property (nonatomic, readonly) bool hasCallToActionText;
@property (nonatomic, readonly) bool hasClusterID;
@property (nonatomic, readonly) bool hasDisplayDate;
@property (nonatomic) bool hasStoryType;
@property (nonatomic) bool hasSurfacedByBinIDRef;
@property (nonatomic) bool hasSurfacedByChannelIDRef;
@property (nonatomic) bool hasSurfacedBySectionIDRef;
@property (nonatomic) bool hasSurfacedByTopicIDRef;
@property (nonatomic) bool hasTileProminenceScore;
@property (nonatomic) bool hasTopStoryType;
@property (nonatomic) bool hasUsesImageOnTopLayout;
@property (nonatomic) int storyType;
@property (nonatomic) int surfacedByBinIDRef;
@property (nonatomic) int surfacedByChannelIDRef;
@property (nonatomic) int surfacedBySectionIDRef;
@property (nonatomic, readonly) int*surfacedByTagIDsRefs;
@property (nonatomic, readonly) unsigned long long surfacedByTagIDsRefsCount;
@property (nonatomic) int surfacedByTopicIDRef;
@property (nonatomic) double tileProminenceScore;
@property (nonatomic) int topStoryType;
@property (nonatomic) bool usesImageOnTopLayout;

- (void)addSurfacedByTagIDsRefs:(int)arg1;
- (id)articleID;
- (id)callToActionText;
- (void)clearSurfacedByTagIDsRefs;
- (id)clusterID;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (id)displayDate;
- (bool)hasArticleID;
- (bool)hasCallToActionText;
- (bool)hasClusterID;
- (bool)hasDisplayDate;
- (bool)hasStoryType;
- (bool)hasSurfacedByBinIDRef;
- (bool)hasSurfacedByChannelIDRef;
- (bool)hasSurfacedBySectionIDRef;
- (bool)hasSurfacedByTopicIDRef;
- (bool)hasTileProminenceScore;
- (bool)hasTopStoryType;
- (bool)hasUsesImageOnTopLayout;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setArticleID:(id)arg1;
- (void)setCallToActionText:(id)arg1;
- (void)setClusterID:(id)arg1;
- (void)setDisplayDate:(id)arg1;
- (void)setHasStoryType:(bool)arg1;
- (void)setHasSurfacedByBinIDRef:(bool)arg1;
- (void)setHasSurfacedByChannelIDRef:(bool)arg1;
- (void)setHasSurfacedBySectionIDRef:(bool)arg1;
- (void)setHasSurfacedByTopicIDRef:(bool)arg1;
- (void)setHasTileProminenceScore:(bool)arg1;
- (void)setHasTopStoryType:(bool)arg1;
- (void)setHasUsesImageOnTopLayout:(bool)arg1;
- (void)setStoryType:(int)arg1;
- (void)setSurfacedByBinIDRef:(int)arg1;
- (void)setSurfacedByChannelIDRef:(int)arg1;
- (void)setSurfacedBySectionIDRef:(int)arg1;
- (void)setSurfacedByTagIDsRefs:(int*)arg1 count:(unsigned long long)arg2;
- (void)setSurfacedByTopicIDRef:(int)arg1;
- (void)setTileProminenceScore:(double)arg1;
- (void)setTopStoryType:(int)arg1;
- (void)setUsesImageOnTopLayout:(bool)arg1;
- (int)storyType;
- (int)surfacedByBinIDRef;
- (int)surfacedByChannelIDRef;
- (int)surfacedBySectionIDRef;
- (int*)surfacedByTagIDsRefs;
- (int)surfacedByTagIDsRefsAtIndex:(unsigned long long)arg1;
- (unsigned long long)surfacedByTagIDsRefsCount;
- (int)surfacedByTopicIDRef;
- (double)tileProminenceScore;
- (int)topStoryType;
- (bool)usesImageOnTopLayout;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBAppSessionEnd.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBAppSessionEnd.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBAppSessionEnd : PBCodable <NSCopying> {
    long long  _appSessionDuration;
    int  _appsAutoSubscribeFeedCount;
    NSMutableArray * _autoSubscribedFeedIds;
    bool  _breakingNewsAvailableDuringSession;
    bool  _breakingNewsDismissedDuringSession;
    int  _channelSubscriptionCount;
    NSMutableArray * _groupableFeedIds;
    struct { 
        unsigned int appSessionDuration : 1; 
        unsigned int appsAutoSubscribeFeedCount : 1; 
        unsigned int channelSubscriptionCount : 1; 
        unsigned int internalAutoSubscribeFeedCount : 1; 
        unsigned int notificationEnabledChannelsCount : 1; 
        unsigned int notitificationsEnabledChannelsCount : 1; 
        unsigned int portraitAutoSubscribeFeedCount : 1; 
        unsigned int safariAutoSubscribeFeedCount : 1; 
        unsigned int sessionEndReason : 1; 
        unsigned int topicSubscriptionCount : 1; 
        unsigned int breakingNewsAvailableDuringSession : 1; 
        unsigned int breakingNewsDismissedDuringSession : 1; 
        unsigned int syncedOtherUserIdDuringSession : 1; 
    }  _has;
    int  _internalAutoSubscribeFeedCount;
    NSMutableArray * _lastVisibleViews;
    NSMutableArray * _notificationChannelIds;
    int  _notificationEnabledChannelsCount;
    int  _notitificationsEnabledChannelsCount;
    NSMutableArray * _paidSubscriptionChannelIds;
    int  _portraitAutoSubscribeFeedCount;
    int  _safariAutoSubscribeFeedCount;
    int  _sessionEndReason;
    NSMutableArray * _subscribedFeedIds;
    bool  _syncedOtherUserIdDuringSession;
    int  _topicSubscriptionCount;
}

@property (nonatomic) long long appSessionDuration;
@property (nonatomic) int appsAutoSubscribeFeedCount;
@property (nonatomic, retain) NSMutableArray *autoSubscribedFeedIds;
@property (nonatomic) bool breakingNewsAvailableDuringSession;
@property (nonatomic) bool breakingNewsDismissedDuringSession;
@property (nonatomic) int channelSubscriptionCount;
@property (nonatomic, retain) NSMutableArray *groupableFeedIds;
@property (nonatomic) bool hasAppSessionDuration;
@property (nonatomic) bool hasAppsAutoSubscribeFeedCount;
@property (nonatomic) bool hasBreakingNewsAvailableDuringSession;
@property (nonatomic) bool hasBreakingNewsDismissedDuringSession;
@property (nonatomic) bool hasChannelSubscriptionCount;
@property (nonatomic) bool hasInternalAutoSubscribeFeedCount;
@property (nonatomic) bool hasNotificationEnabledChannelsCount;
@property (nonatomic) bool hasNotitificationsEnabledChannelsCount;
@property (nonatomic) bool hasPortraitAutoSubscribeFeedCount;
@property (nonatomic) bool hasSafariAutoSubscribeFeedCount;
@property (nonatomic) bool hasSessionEndReason;
@property (nonatomic) bool hasSyncedOtherUserIdDuringSession;
@property (nonatomic) bool hasTopicSubscriptionCount;
@property (nonatomic) int internalAutoSubscribeFeedCount;
@property (nonatomic, retain) NSMutableArray *lastVisibleViews;
@property (nonatomic, retain) NSMutableArray *notificationChannelIds;
@property (nonatomic) int notificationEnabledChannelsCount;
@property (nonatomic) int notitificationsEnabledChannelsCount;
@property (nonatomic, retain) NSMutableArray *paidSubscriptionChannelIds;
@property (nonatomic) int portraitAutoSubscribeFeedCount;
@property (nonatomic) int safariAutoSubscribeFeedCount;
@property (nonatomic) int sessionEndReason;
@property (nonatomic, retain) NSMutableArray *subscribedFeedIds;
@property (nonatomic) bool syncedOtherUserIdDuringSession;
@property (nonatomic) int topicSubscriptionCount;

+ (Class)autoSubscribedFeedIdsType;
+ (Class)groupableFeedIdsType;
+ (Class)lastVisibleViewsType;
+ (Class)notificationChannelIdsType;
+ (Class)paidSubscriptionChannelIdsType;
+ (Class)subscribedFeedIdsType;

- (void).cxx_destruct;
- (void)addAutoSubscribedFeedIds:(id)arg1;
- (void)addGroupableFeedIds:(id)arg1;
- (void)addLastVisibleViews:(id)arg1;
- (void)addNotificationChannelIds:(id)arg1;
- (void)addPaidSubscriptionChannelIds:(id)arg1;
- (void)addSubscribedFeedIds:(id)arg1;
- (long long)appSessionDuration;
- (int)appsAutoSubscribeFeedCount;
- (id)autoSubscribedFeedIds;
- (id)autoSubscribedFeedIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)autoSubscribedFeedIdsCount;
- (bool)breakingNewsAvailableDuringSession;
- (bool)breakingNewsDismissedDuringSession;
- (int)channelSubscriptionCount;
- (void)clearAutoSubscribedFeedIds;
- (void)clearGroupableFeedIds;
- (void)clearLastVisibleViews;
- (void)clearNotificationChannelIds;
- (void)clearPaidSubscriptionChannelIds;
- (void)clearSubscribedFeedIds;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)groupableFeedIds;
- (id)groupableFeedIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)groupableFeedIdsCount;
- (bool)hasAppSessionDuration;
- (bool)hasAppsAutoSubscribeFeedCount;
- (bool)hasBreakingNewsAvailableDuringSession;
- (bool)hasBreakingNewsDismissedDuringSession;
- (bool)hasChannelSubscriptionCount;
- (bool)hasInternalAutoSubscribeFeedCount;
- (bool)hasNotificationEnabledChannelsCount;
- (bool)hasNotitificationsEnabledChannelsCount;
- (bool)hasPortraitAutoSubscribeFeedCount;
- (bool)hasSafariAutoSubscribeFeedCount;
- (bool)hasSessionEndReason;
- (bool)hasSyncedOtherUserIdDuringSession;
- (bool)hasTopicSubscriptionCount;
- (unsigned long long)hash;
- (int)internalAutoSubscribeFeedCount;
- (bool)isEqual:(id)arg1;
- (id)lastVisibleViews;
- (id)lastVisibleViewsAtIndex:(unsigned long long)arg1;
- (unsigned long long)lastVisibleViewsCount;
- (void)mergeFrom:(id)arg1;
- (id)notificationChannelIds;
- (id)notificationChannelIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)notificationChannelIdsCount;
- (int)notificationEnabledChannelsCount;
- (int)notitificationsEnabledChannelsCount;
- (id)paidSubscriptionChannelIds;
- (id)paidSubscriptionChannelIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)paidSubscriptionChannelIdsCount;
- (int)portraitAutoSubscribeFeedCount;
- (bool)readFrom:(id)arg1;
- (int)safariAutoSubscribeFeedCount;
- (int)sessionEndReason;
- (void)setAppSessionDuration:(long long)arg1;
- (void)setAppsAutoSubscribeFeedCount:(int)arg1;
- (void)setAutoSubscribedFeedIds:(id)arg1;
- (void)setBreakingNewsAvailableDuringSession:(bool)arg1;
- (void)setBreakingNewsDismissedDuringSession:(bool)arg1;
- (void)setChannelSubscriptionCount:(int)arg1;
- (void)setGroupableFeedIds:(id)arg1;
- (void)setHasAppSessionDuration:(bool)arg1;
- (void)setHasAppsAutoSubscribeFeedCount:(bool)arg1;
- (void)setHasBreakingNewsAvailableDuringSession:(bool)arg1;
- (void)setHasBreakingNewsDismissedDuringSession:(bool)arg1;
- (void)setHasChannelSubscriptionCount:(bool)arg1;
- (void)setHasInternalAutoSubscribeFeedCount:(bool)arg1;
- (void)setHasNotificationEnabledChannelsCount:(bool)arg1;
- (void)setHasNotitificationsEnabledChannelsCount:(bool)arg1;
- (void)setHasPortraitAutoSubscribeFeedCount:(bool)arg1;
- (void)setHasSafariAutoSubscribeFeedCount:(bool)arg1;
- (void)setHasSessionEndReason:(bool)arg1;
- (void)setHasSyncedOtherUserIdDuringSession:(bool)arg1;
- (void)setHasTopicSubscriptionCount:(bool)arg1;
- (void)setInternalAutoSubscribeFeedCount:(int)arg1;
- (void)setLastVisibleViews:(id)arg1;
- (void)setNotificationChannelIds:(id)arg1;
- (void)setNotificationEnabledChannelsCount:(int)arg1;
- (void)setNotitificationsEnabledChannelsCount:(int)arg1;
- (void)setPaidSubscriptionChannelIds:(id)arg1;
- (void)setPortraitAutoSubscribeFeedCount:(int)arg1;
- (void)setSafariAutoSubscribeFeedCount:(int)arg1;
- (void)setSessionEndReason:(int)arg1;
- (void)setSubscribedFeedIds:(id)arg1;
- (void)setSyncedOtherUserIdDuringSession:(bool)arg1;
- (void)setTopicSubscriptionCount:(int)arg1;
- (id)subscribedFeedIds;
- (id)subscribedFeedIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)subscribedFeedIdsCount;
- (bool)syncedOtherUserIdDuringSession;
- (int)topicSubscriptionCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

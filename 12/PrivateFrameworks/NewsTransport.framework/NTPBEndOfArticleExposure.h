<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBEndOfArticleExposure.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBEndOfArticleExposure.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBEndOfArticleExposure : PBCodable <NSCopying> {
    NSString * _articleId;
    int  _articleType;
    int  _backendArticleVersion;
    long long  _backendArticleVersionInt64;
    int  _characterCount;
    NSString * _feedId;
    NSData * _feedViewExposureId;
    struct { 
        unsigned int backendArticleVersionInt64 : 1; 
        unsigned int personalizationTreatmentId : 1; 
        unsigned int publisherArticleVersionInt64 : 1; 
        unsigned int articleType : 1; 
        unsigned int backendArticleVersion : 1; 
        unsigned int characterCount : 1; 
        unsigned int publisherArticleVersion : 1; 
        unsigned int isUserSubscribedToFeed : 1; 
    }  _has;
    bool  _isUserSubscribedToFeed;
    NSString * _language;
    NSMutableArray * _namedEntities;
    long long  _personalizationTreatmentId;
    int  _publisherArticleVersion;
    long long  _publisherArticleVersionInt64;
    NSMutableArray * _recommendedArticleIds;
    NSString * _referencedArticleId;
    NSMutableArray * _referencedRecommendedArticleIds;
    NSString * _sectionHeadlineId;
    NSString * _surfacedByChannelId;
    NSString * _surfacedBySectionId;
    NSString * _surfacedByTopicId;
}

@property (nonatomic, retain) NSString *articleId;
@property (nonatomic) int articleType;
@property (nonatomic) int backendArticleVersion;
@property (nonatomic) long long backendArticleVersionInt64;
@property (nonatomic) int characterCount;
@property (nonatomic, retain) NSString *feedId;
@property (nonatomic, retain) NSData *feedViewExposureId;
@property (nonatomic, readonly) bool hasArticleId;
@property (nonatomic) bool hasArticleType;
@property (nonatomic) bool hasBackendArticleVersion;
@property (nonatomic) bool hasBackendArticleVersionInt64;
@property (nonatomic) bool hasCharacterCount;
@property (nonatomic, readonly) bool hasFeedId;
@property (nonatomic, readonly) bool hasFeedViewExposureId;
@property (nonatomic) bool hasIsUserSubscribedToFeed;
@property (nonatomic, readonly) bool hasLanguage;
@property (nonatomic) bool hasPersonalizationTreatmentId;
@property (nonatomic) bool hasPublisherArticleVersion;
@property (nonatomic) bool hasPublisherArticleVersionInt64;
@property (nonatomic, readonly) bool hasReferencedArticleId;
@property (nonatomic, readonly) bool hasSectionHeadlineId;
@property (nonatomic, readonly) bool hasSurfacedByChannelId;
@property (nonatomic, readonly) bool hasSurfacedBySectionId;
@property (nonatomic, readonly) bool hasSurfacedByTopicId;
@property (nonatomic) bool isUserSubscribedToFeed;
@property (nonatomic, retain) NSString *language;
@property (nonatomic, retain) NSMutableArray *namedEntities;
@property (nonatomic) long long personalizationTreatmentId;
@property (nonatomic) int publisherArticleVersion;
@property (nonatomic) long long publisherArticleVersionInt64;
@property (nonatomic, retain) NSMutableArray *recommendedArticleIds;
@property (nonatomic, retain) NSString *referencedArticleId;
@property (nonatomic, retain) NSMutableArray *referencedRecommendedArticleIds;
@property (nonatomic, retain) NSString *sectionHeadlineId;
@property (nonatomic, retain) NSString *surfacedByChannelId;
@property (nonatomic, retain) NSString *surfacedBySectionId;
@property (nonatomic, retain) NSString *surfacedByTopicId;

+ (Class)namedEntitiesType;
+ (Class)recommendedArticleIdType;
+ (Class)referencedRecommendedArticleIdsType;

- (void).cxx_destruct;
- (int)StringAsArticleType:(id)arg1;
- (void)addNamedEntities:(id)arg1;
- (void)addRecommendedArticleId:(id)arg1;
- (void)addReferencedRecommendedArticleIds:(id)arg1;
- (id)articleId;
- (int)articleType;
- (id)articleTypeAsString:(int)arg1;
- (int)backendArticleVersion;
- (long long)backendArticleVersionInt64;
- (int)characterCount;
- (void)clearNamedEntities;
- (void)clearRecommendedArticleIds;
- (void)clearReferencedRecommendedArticleIds;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)feedId;
- (id)feedViewExposureId;
- (bool)hasArticleId;
- (bool)hasArticleType;
- (bool)hasBackendArticleVersion;
- (bool)hasBackendArticleVersionInt64;
- (bool)hasCharacterCount;
- (bool)hasFeedId;
- (bool)hasFeedViewExposureId;
- (bool)hasIsUserSubscribedToFeed;
- (bool)hasLanguage;
- (bool)hasPersonalizationTreatmentId;
- (bool)hasPublisherArticleVersion;
- (bool)hasPublisherArticleVersionInt64;
- (bool)hasReferencedArticleId;
- (bool)hasSectionHeadlineId;
- (bool)hasSurfacedByChannelId;
- (bool)hasSurfacedBySectionId;
- (bool)hasSurfacedByTopicId;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isUserSubscribedToFeed;
- (id)language;
- (void)mergeFrom:(id)arg1;
- (id)namedEntities;
- (id)namedEntitiesAtIndex:(unsigned long long)arg1;
- (unsigned long long)namedEntitiesCount;
- (long long)personalizationTreatmentId;
- (int)publisherArticleVersion;
- (long long)publisherArticleVersionInt64;
- (bool)readFrom:(id)arg1;
- (id)recommendedArticleIdAtIndex:(unsigned long long)arg1;
- (id)recommendedArticleIds;
- (unsigned long long)recommendedArticleIdsCount;
- (id)referencedArticleId;
- (id)referencedRecommendedArticleIds;
- (id)referencedRecommendedArticleIdsAtIndex:(unsigned long long)arg1;
- (unsigned long long)referencedRecommendedArticleIdsCount;
- (id)sectionHeadlineId;
- (void)setArticleId:(id)arg1;
- (void)setArticleType:(int)arg1;
- (void)setBackendArticleVersion:(int)arg1;
- (void)setBackendArticleVersionInt64:(long long)arg1;
- (void)setCharacterCount:(int)arg1;
- (void)setFeedId:(id)arg1;
- (void)setFeedViewExposureId:(id)arg1;
- (void)setHasArticleType:(bool)arg1;
- (void)setHasBackendArticleVersion:(bool)arg1;
- (void)setHasBackendArticleVersionInt64:(bool)arg1;
- (void)setHasCharacterCount:(bool)arg1;
- (void)setHasIsUserSubscribedToFeed:(bool)arg1;
- (void)setHasPersonalizationTreatmentId:(bool)arg1;
- (void)setHasPublisherArticleVersion:(bool)arg1;
- (void)setHasPublisherArticleVersionInt64:(bool)arg1;
- (void)setIsUserSubscribedToFeed:(bool)arg1;
- (void)setLanguage:(id)arg1;
- (void)setNamedEntities:(id)arg1;
- (void)setPersonalizationTreatmentId:(long long)arg1;
- (void)setPublisherArticleVersion:(int)arg1;
- (void)setPublisherArticleVersionInt64:(long long)arg1;
- (void)setRecommendedArticleIds:(id)arg1;
- (void)setReferencedArticleId:(id)arg1;
- (void)setReferencedRecommendedArticleIds:(id)arg1;
- (void)setSectionHeadlineId:(id)arg1;
- (void)setSurfacedByChannelId:(id)arg1;
- (void)setSurfacedBySectionId:(id)arg1;
- (void)setSurfacedByTopicId:(id)arg1;
- (id)surfacedByChannelId;
- (id)surfacedBySectionId;
- (id)surfacedByTopicId;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

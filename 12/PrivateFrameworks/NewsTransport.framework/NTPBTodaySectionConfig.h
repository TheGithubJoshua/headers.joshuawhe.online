<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBTodaySectionConfig.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBTodaySectionConfig.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBTodaySectionConfig : PBCodable <NSCopying> {
    NTPBArticleIDsTodaySectionSpecificConfig * _articleIDsTodaySectionConfig;
    NTPBArticleListTodaySectionSpecificConfig * _articleListTodaySectionConfig;
    NSString * _backgroundGradientColor;
    unsigned long long  _cachedResultCutoffTime;
    NSString * _compactName;
    NTPBDiscoverMoreVideosInfo * _discoverMoreVideosInfo;
    bool  _displaysAsVideoPlaylist;
    unsigned long long  _fallbackOrder;
    NTPBForYouTodaySectionSpecificConfig * _forYouTodaySectionConfig;
    bool  _glanceable;
    NSString * _groupActionTitle;
    NSString * _groupActionUrl;
    struct { 
        unsigned int cachedResultCutoffTime : 1; 
        unsigned int fallbackOrder : 1; 
        unsigned int interSectionFilteringOptions : 1; 
        unsigned int intraSectionFilteringOptions : 1; 
        unsigned int maximumStoriesAllocation : 1; 
        unsigned int minimumStoriesAllocation : 1; 
        unsigned int personalizedPresenceFeatureClickPrior : 1; 
        unsigned int personalizedPresenceFeatureImpressionPrior : 1; 
        unsigned int seenArticlesMinimumTimeSinceFirstSeenToFilter : 1; 
        unsigned int leadingCellPromotionPolicy : 1; 
        unsigned int readArticlesFilterMethod : 1; 
        unsigned int sectionType : 1; 
        unsigned int seenArticlesFilterMethod : 1; 
        unsigned int displaysAsVideoPlaylist : 1; 
        unsigned int glanceable : 1; 
        unsigned int openVideoPlaylistInApp : 1; 
        unsigned int presenceDeterminedByPersonalization : 1; 
        unsigned int shownInFavoritesOnlyMode : 1; 
        unsigned int useNameColorInWidget : 1; 
        unsigned int videoPlaysMutedByDefault : 1; 
    }  _has;
    NSString * _identifier;
    unsigned long long  _interSectionFilteringOptions;
    unsigned long long  _intraSectionFilteringOptions;
    NTPBItemsTodaySectionSpecificConfig * _itemsTodaySectionConfig;
    int  _leadingCellPromotionPolicy;
    unsigned long long  _maximumStoriesAllocation;
    unsigned long long  _minimumStoriesAllocation;
    NSString * _name;
    NSString * _nameColor;
    bool  _openVideoPlaylistInApp;
    NSString * _personalizationFeatureID;
    NTPBPersonalizedSectionPresenceConfig * _personalizedPresenceConfig;
    unsigned long long  _personalizedPresenceFeatureClickPrior;
    NSString * _personalizedPresenceFeatureID;
    unsigned long long  _personalizedPresenceFeatureImpressionPrior;
    NTPBPersonalizedTodaySectionSpecificConfig * _personalizedTodaySectionConfig;
    bool  _presenceDeterminedByPersonalization;
    struct { 
        unsigned long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _queueMemberships;
    int  _readArticlesFilterMethod;
    NSString * _referralBarName;
    int  _sectionType;
    int  _seenArticlesFilterMethod;
    unsigned long long  _seenArticlesMinimumTimeSinceFirstSeenToFilter;
    bool  _shownInFavoritesOnlyMode;
    bool  _useNameColorInWidget;
    bool  _videoPlaysMutedByDefault;
}

@property (nonatomic, retain) NTPBArticleIDsTodaySectionSpecificConfig *articleIDsTodaySectionConfig;
@property (nonatomic, retain) NTPBArticleListTodaySectionSpecificConfig *articleListTodaySectionConfig;
@property (nonatomic, retain) NSString *backgroundGradientColor;
@property (nonatomic) unsigned long long cachedResultCutoffTime;
@property (nonatomic, retain) NSString *compactName;
@property (nonatomic, retain) NTPBDiscoverMoreVideosInfo *discoverMoreVideosInfo;
@property (nonatomic) bool displaysAsVideoPlaylist;
@property (nonatomic) unsigned long long fallbackOrder;
@property (nonatomic, retain) NTPBForYouTodaySectionSpecificConfig *forYouTodaySectionConfig;
@property (nonatomic) bool glanceable;
@property (nonatomic, retain) NSString *groupActionTitle;
@property (nonatomic, retain) NSString *groupActionUrl;
@property (nonatomic, readonly) bool hasArticleIDsTodaySectionConfig;
@property (nonatomic, readonly) bool hasArticleListTodaySectionConfig;
@property (nonatomic, readonly) bool hasBackgroundGradientColor;
@property (nonatomic) bool hasCachedResultCutoffTime;
@property (nonatomic, readonly) bool hasCompactName;
@property (nonatomic, readonly) bool hasDiscoverMoreVideosInfo;
@property (nonatomic) bool hasDisplaysAsVideoPlaylist;
@property (nonatomic) bool hasFallbackOrder;
@property (nonatomic, readonly) bool hasForYouTodaySectionConfig;
@property (nonatomic) bool hasGlanceable;
@property (nonatomic, readonly) bool hasGroupActionTitle;
@property (nonatomic, readonly) bool hasGroupActionUrl;
@property (nonatomic, readonly) bool hasIdentifier;
@property (nonatomic) bool hasInterSectionFilteringOptions;
@property (nonatomic) bool hasIntraSectionFilteringOptions;
@property (nonatomic, readonly) bool hasItemsTodaySectionConfig;
@property (nonatomic) bool hasLeadingCellPromotionPolicy;
@property (nonatomic) bool hasMaximumStoriesAllocation;
@property (nonatomic) bool hasMinimumStoriesAllocation;
@property (nonatomic, readonly) bool hasName;
@property (nonatomic, readonly) bool hasNameColor;
@property (nonatomic) bool hasOpenVideoPlaylistInApp;
@property (nonatomic, readonly) bool hasPersonalizationFeatureID;
@property (nonatomic, readonly) bool hasPersonalizedPresenceConfig;
@property (nonatomic) bool hasPersonalizedPresenceFeatureClickPrior;
@property (nonatomic, readonly) bool hasPersonalizedPresenceFeatureID;
@property (nonatomic) bool hasPersonalizedPresenceFeatureImpressionPrior;
@property (nonatomic, readonly) bool hasPersonalizedTodaySectionConfig;
@property (nonatomic) bool hasPresenceDeterminedByPersonalization;
@property (nonatomic) bool hasReadArticlesFilterMethod;
@property (nonatomic, readonly) bool hasReferralBarName;
@property (nonatomic) bool hasSectionType;
@property (nonatomic) bool hasSeenArticlesFilterMethod;
@property (nonatomic) bool hasSeenArticlesMinimumTimeSinceFirstSeenToFilter;
@property (nonatomic) bool hasShownInFavoritesOnlyMode;
@property (nonatomic) bool hasUseNameColorInWidget;
@property (nonatomic) bool hasVideoPlaysMutedByDefault;
@property (nonatomic, retain) NSString *identifier;
@property (nonatomic) unsigned long long interSectionFilteringOptions;
@property (nonatomic) unsigned long long intraSectionFilteringOptions;
@property (nonatomic, retain) NTPBItemsTodaySectionSpecificConfig *itemsTodaySectionConfig;
@property (nonatomic) int leadingCellPromotionPolicy;
@property (nonatomic) unsigned long long maximumStoriesAllocation;
@property (nonatomic) unsigned long long minimumStoriesAllocation;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) NSString *nameColor;
@property (nonatomic) bool openVideoPlaylistInApp;
@property (nonatomic, retain) NSString *personalizationFeatureID;
@property (nonatomic, retain) NTPBPersonalizedSectionPresenceConfig *personalizedPresenceConfig;
@property (nonatomic) unsigned long long personalizedPresenceFeatureClickPrior;
@property (nonatomic, retain) NSString *personalizedPresenceFeatureID;
@property (nonatomic) unsigned long long personalizedPresenceFeatureImpressionPrior;
@property (nonatomic, retain) NTPBPersonalizedTodaySectionSpecificConfig *personalizedTodaySectionConfig;
@property (nonatomic) bool presenceDeterminedByPersonalization;
@property (nonatomic, readonly) unsigned long long*queueMemberships;
@property (nonatomic, readonly) unsigned long long queueMembershipsCount;
@property (nonatomic) int readArticlesFilterMethod;
@property (nonatomic, retain) NSString *referralBarName;
@property (nonatomic) int sectionType;
@property (nonatomic) int seenArticlesFilterMethod;
@property (nonatomic) unsigned long long seenArticlesMinimumTimeSinceFirstSeenToFilter;
@property (nonatomic) bool shownInFavoritesOnlyMode;
@property (nonatomic) bool useNameColorInWidget;
@property (nonatomic) bool videoPlaysMutedByDefault;

// Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport

- (void)addQueueMembership:(unsigned long long)arg1;
- (id)articleIDsTodaySectionConfig;
- (id)articleListTodaySectionConfig;
- (id)backgroundGradientColor;
- (unsigned long long)cachedResultCutoffTime;
- (void)clearQueueMemberships;
- (id)compactName;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (id)discoverMoreVideosInfo;
- (bool)displaysAsVideoPlaylist;
- (unsigned long long)fallbackOrder;
- (id)forYouTodaySectionConfig;
- (bool)glanceable;
- (id)groupActionTitle;
- (id)groupActionUrl;
- (bool)hasArticleIDsTodaySectionConfig;
- (bool)hasArticleListTodaySectionConfig;
- (bool)hasBackgroundGradientColor;
- (bool)hasCachedResultCutoffTime;
- (bool)hasCompactName;
- (bool)hasDiscoverMoreVideosInfo;
- (bool)hasDisplaysAsVideoPlaylist;
- (bool)hasFallbackOrder;
- (bool)hasForYouTodaySectionConfig;
- (bool)hasGlanceable;
- (bool)hasGroupActionTitle;
- (bool)hasGroupActionUrl;
- (bool)hasIdentifier;
- (bool)hasInterSectionFilteringOptions;
- (bool)hasIntraSectionFilteringOptions;
- (bool)hasItemsTodaySectionConfig;
- (bool)hasLeadingCellPromotionPolicy;
- (bool)hasMaximumStoriesAllocation;
- (bool)hasMinimumStoriesAllocation;
- (bool)hasName;
- (bool)hasNameColor;
- (bool)hasOpenVideoPlaylistInApp;
- (bool)hasPersonalizationFeatureID;
- (bool)hasPersonalizedPresenceConfig;
- (bool)hasPersonalizedPresenceFeatureClickPrior;
- (bool)hasPersonalizedPresenceFeatureID;
- (bool)hasPersonalizedPresenceFeatureImpressionPrior;
- (bool)hasPersonalizedTodaySectionConfig;
- (bool)hasPresenceDeterminedByPersonalization;
- (bool)hasReadArticlesFilterMethod;
- (bool)hasReferralBarName;
- (bool)hasSectionType;
- (bool)hasSeenArticlesFilterMethod;
- (bool)hasSeenArticlesMinimumTimeSinceFirstSeenToFilter;
- (bool)hasShownInFavoritesOnlyMode;
- (bool)hasUseNameColorInWidget;
- (bool)hasVideoPlaysMutedByDefault;
- (unsigned long long)hash;
- (id)identifier;
- (unsigned long long)interSectionFilteringOptions;
- (unsigned long long)intraSectionFilteringOptions;
- (bool)isEqual:(id)arg1;
- (id)itemsTodaySectionConfig;
- (int)leadingCellPromotionPolicy;
- (unsigned long long)maximumStoriesAllocation;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)minimumStoriesAllocation;
- (id)name;
- (id)nameColor;
- (bool)openVideoPlaylistInApp;
- (id)personalizationFeatureID;
- (id)personalizedPresenceConfig;
- (unsigned long long)personalizedPresenceFeatureClickPrior;
- (id)personalizedPresenceFeatureID;
- (unsigned long long)personalizedPresenceFeatureImpressionPrior;
- (id)personalizedTodaySectionConfig;
- (bool)presenceDeterminedByPersonalization;
- (unsigned long long)queueMembershipAtIndex:(unsigned long long)arg1;
- (unsigned long long*)queueMemberships;
- (unsigned long long)queueMembershipsCount;
- (int)readArticlesFilterMethod;
- (bool)readFrom:(id)arg1;
- (id)referralBarName;
- (int)sectionType;
- (int)seenArticlesFilterMethod;
- (unsigned long long)seenArticlesMinimumTimeSinceFirstSeenToFilter;
- (void)setArticleIDsTodaySectionConfig:(id)arg1;
- (void)setArticleListTodaySectionConfig:(id)arg1;
- (void)setBackgroundGradientColor:(id)arg1;
- (void)setCachedResultCutoffTime:(unsigned long long)arg1;
- (void)setCompactName:(id)arg1;
- (void)setDiscoverMoreVideosInfo:(id)arg1;
- (void)setDisplaysAsVideoPlaylist:(bool)arg1;
- (void)setFallbackOrder:(unsigned long long)arg1;
- (void)setForYouTodaySectionConfig:(id)arg1;
- (void)setGlanceable:(bool)arg1;
- (void)setGroupActionTitle:(id)arg1;
- (void)setGroupActionUrl:(id)arg1;
- (void)setHasCachedResultCutoffTime:(bool)arg1;
- (void)setHasDisplaysAsVideoPlaylist:(bool)arg1;
- (void)setHasFallbackOrder:(bool)arg1;
- (void)setHasGlanceable:(bool)arg1;
- (void)setHasInterSectionFilteringOptions:(bool)arg1;
- (void)setHasIntraSectionFilteringOptions:(bool)arg1;
- (void)setHasLeadingCellPromotionPolicy:(bool)arg1;
- (void)setHasMaximumStoriesAllocation:(bool)arg1;
- (void)setHasMinimumStoriesAllocation:(bool)arg1;
- (void)setHasOpenVideoPlaylistInApp:(bool)arg1;
- (void)setHasPersonalizedPresenceFeatureClickPrior:(bool)arg1;
- (void)setHasPersonalizedPresenceFeatureImpressionPrior:(bool)arg1;
- (void)setHasPresenceDeterminedByPersonalization:(bool)arg1;
- (void)setHasReadArticlesFilterMethod:(bool)arg1;
- (void)setHasSectionType:(bool)arg1;
- (void)setHasSeenArticlesFilterMethod:(bool)arg1;
- (void)setHasSeenArticlesMinimumTimeSinceFirstSeenToFilter:(bool)arg1;
- (void)setHasShownInFavoritesOnlyMode:(bool)arg1;
- (void)setHasUseNameColorInWidget:(bool)arg1;
- (void)setHasVideoPlaysMutedByDefault:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInterSectionFilteringOptions:(unsigned long long)arg1;
- (void)setIntraSectionFilteringOptions:(unsigned long long)arg1;
- (void)setItemsTodaySectionConfig:(id)arg1;
- (void)setLeadingCellPromotionPolicy:(int)arg1;
- (void)setMaximumStoriesAllocation:(unsigned long long)arg1;
- (void)setMinimumStoriesAllocation:(unsigned long long)arg1;
- (void)setName:(id)arg1;
- (void)setNameColor:(id)arg1;
- (void)setOpenVideoPlaylistInApp:(bool)arg1;
- (void)setPersonalizationFeatureID:(id)arg1;
- (void)setPersonalizedPresenceConfig:(id)arg1;
- (void)setPersonalizedPresenceFeatureClickPrior:(unsigned long long)arg1;
- (void)setPersonalizedPresenceFeatureID:(id)arg1;
- (void)setPersonalizedPresenceFeatureImpressionPrior:(unsigned long long)arg1;
- (void)setPersonalizedTodaySectionConfig:(id)arg1;
- (void)setPresenceDeterminedByPersonalization:(bool)arg1;
- (void)setQueueMemberships:(unsigned long long*)arg1 count:(unsigned long long)arg2;
- (void)setReadArticlesFilterMethod:(int)arg1;
- (void)setReferralBarName:(id)arg1;
- (void)setSectionType:(int)arg1;
- (void)setSeenArticlesFilterMethod:(int)arg1;
- (void)setSeenArticlesMinimumTimeSinceFirstSeenToFilter:(unsigned long long)arg1;
- (void)setShownInFavoritesOnlyMode:(bool)arg1;
- (void)setUseNameColorInWidget:(bool)arg1;
- (void)setVideoPlaysMutedByDefault:(bool)arg1;
- (bool)shownInFavoritesOnlyMode;
- (bool)useNameColorInWidget;
- (bool)videoPlaysMutedByDefault;
- (void)writeTo:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

+ (id)sectionConfigWithJSONDictionary:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

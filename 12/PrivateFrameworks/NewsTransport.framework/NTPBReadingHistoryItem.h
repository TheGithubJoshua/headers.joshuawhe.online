<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTPBReadingHistoryItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsTransport.framework/NTPBReadingHistoryItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport (2166)
 */

@interface NTPBReadingHistoryItem : PBCodable <FCKeyValueStoreCoding, FCMutableReadingHistoryItem, NSCopying> {
    NSString * _articleID;
    NSString * _deviceID;
    NTPBDate * _firstSeenDate;
    NTPBDate * _firstSeenDateOfMaxVersionSeen;
    unsigned int  _flags;
    struct { 
        unsigned int maxVersionRead : 1; 
        unsigned int maxVersionSeen : 1; 
        unsigned int flags : 1; 
    }  _has;
    NTPBDate * _lastVisitedDate;
    long long  _maxVersionRead;
    long long  _maxVersionSeen;
    NSString * _sourceChannelTagID;
}

@property (nonatomic, readonly, copy) NSString *articleID;
@property (nonatomic, retain) NSString *articleID;
@property (nonatomic, readonly) unsigned long long articleLikingStatus;
@property (nonatomic, readonly) CKRecord *asCKRecord;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSString *deviceID;
@property (nonatomic, retain) NSString *deviceID;
@property (nonatomic, readonly, copy) NSDate *firstSeenAt;
@property (nonatomic, readonly, copy) NSDate *firstSeenAtOfMaxVersionSeen;
@property (nonatomic, retain) NTPBDate *firstSeenDate;
@property (nonatomic, retain) NTPBDate *firstSeenDateOfMaxVersionSeen;
@property (nonatomic, readonly) unsigned long long flags;
@property (nonatomic) unsigned int flags;
@property (nonatomic, readonly) bool hasArticleBeenConsumed;
@property (nonatomic, readonly) bool hasArticleBeenMarkedOffensive;
@property (nonatomic, readonly) bool hasArticleBeenRead;
@property (nonatomic, readonly) bool hasArticleBeenSeen;
@property (nonatomic, readonly) bool hasArticleID;
@property (nonatomic, readonly) bool hasDeviceID;
@property (nonatomic, readonly) bool hasFirstSeenDate;
@property (nonatomic, readonly) bool hasFirstSeenDateOfMaxVersionSeen;
@property (nonatomic) bool hasFlags;
@property (nonatomic, readonly) bool hasLastVisitedDate;
@property (nonatomic) bool hasMaxVersionRead;
@property (nonatomic) bool hasMaxVersionSeen;
@property (nonatomic, readonly) bool hasSourceChannelTagID;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly, copy) NSDate *lastVisitedAt;
@property (nonatomic, retain) NTPBDate *lastVisitedDate;
@property (nonatomic, readonly) long long maxVersionRead;
@property (nonatomic) long long maxVersionRead;
@property (nonatomic, readonly) long long maxVersionSeen;
@property (nonatomic) long long maxVersionSeen;
@property (nonatomic, readonly, copy) NSString *sourceChannelTagID;
@property (nonatomic, retain) NSString *sourceChannelTagID;
@property (readonly) Class superclass;

// Image: /System/Library/PrivateFrameworks/NewsTransport.framework/NewsTransport

- (id)articleID;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)deviceID;
- (id)dictionaryRepresentation;
- (id)firstSeenDate;
- (id)firstSeenDateOfMaxVersionSeen;
- (unsigned int)flags;
- (bool)hasArticleID;
- (bool)hasDeviceID;
- (bool)hasFirstSeenDate;
- (bool)hasFirstSeenDateOfMaxVersionSeen;
- (bool)hasFlags;
- (bool)hasLastVisitedDate;
- (bool)hasMaxVersionRead;
- (bool)hasMaxVersionSeen;
- (bool)hasSourceChannelTagID;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)lastVisitedDate;
- (long long)maxVersionRead;
- (long long)maxVersionSeen;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setArticleID:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setFirstSeenDate:(id)arg1;
- (void)setFirstSeenDateOfMaxVersionSeen:(id)arg1;
- (void)setFlags:(unsigned int)arg1;
- (void)setHasFlags:(bool)arg1;
- (void)setHasMaxVersionRead:(bool)arg1;
- (void)setHasMaxVersionSeen:(bool)arg1;
- (void)setLastVisitedDate:(id)arg1;
- (void)setMaxVersionRead:(long long)arg1;
- (void)setMaxVersionSeen:(long long)arg1;
- (void)setSourceChannelTagID:(id)arg1;
- (id)sourceChannelTagID;
- (void)writeTo:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

+ (int)keyValuePairType;
+ (id)readValueFromKeyValuePair:(id)arg1;
+ (id)readingHistoryItemWithCKRecord:(id)arg1;

- (unsigned long long)articleLikingStatus;
- (id)asCKRecord;
- (id)firstSeenAt;
- (id)firstSeenAtOfMaxVersionSeen;
- (bool)hasArticleBeenConsumed;
- (bool)hasArticleBeenMarkedOffensive;
- (bool)hasArticleBeenRead;
- (bool)hasArticleBeenSeen;
- (id)identifier;
- (id)lastVisitedAt;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (void)setArticleLikingStatus:(unsigned long long)arg1;
- (void)setFirstSeenAt:(id)arg1;
- (void)setFirstSeenAtOfMaxVersionSeen:(id)arg1;
- (void)setHasArticleBeenConsumed:(bool)arg1;
- (void)setHasArticleBeenMarkedOffensive:(bool)arg1;
- (void)setHasArticleBeenRead:(bool)arg1;
- (void)setHasArticleBeenSeen:(bool)arg1;
- (void)setLastVisitedAt:(id)arg1;
- (void)writeToKeyValuePair:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_IDSAccount.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/IDS.framework/_IDSAccount.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/IDS.framework/IDS (1000)
 */

@interface _IDSAccount : NSObject <IDSDaemonListenerProtocol> {
    NSDictionary * _accountConfig;
    id  _delegateContext;
    NSMapTable * _delegateToInfo;
    NSMutableArray * _devices;
    bool  _devicesLoaded;
    bool  _isEnabled;
    NSString * _loginID;
    NSMapTable * _registrationDelegateToInfo;
    NSString * _service;
    NSString * _serviceToken;
    NSMutableArray * _suppressedDevices;
    NSString * _uniqueID;
}

@property (setter=_setIsEnabled:, nonatomic) bool _isEnabled;
@property (nonatomic, retain) NSDictionary *accountInfo;
@property (nonatomic, readonly) int accountType;
@property (nonatomic, readonly) NSSet *activeAliases;
@property (nonatomic, readonly) NSArray *aliasStrings;
@property (nonatomic, readonly) NSArray *aliases;
@property (nonatomic, readonly) bool canSend;
@property (nonatomic, readonly) NSDate *dateRegistered;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *devices;
@property (nonatomic, readonly) NSString *displayName;
@property (nonatomic, readonly) NSArray *handles;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isActive;
@property (nonatomic, readonly) bool isInTransientRegistrationState;
@property (nonatomic, readonly) bool isTransientWhitelistedAccount;
@property (nonatomic, readonly) bool isUsableForOuterMessaging;
@property (nonatomic, readonly) bool isUserDisabled;
@property (nonatomic, retain) NSString *loginID;
@property (nonatomic, readonly) NSArray *nearbyDevices;
@property (nonatomic, readonly) NSDate *nextRegistrationDate;
@property (nonatomic, readonly) NSString *primaryServiceName;
@property (nonatomic, readonly) NSString *profileID;
@property (nonatomic, readonly) NSDictionary *profileInfo;
@property (nonatomic, readonly) NSData *pushToken;
@property (nonatomic, readonly) NSString *pushTopic;
@property (nonatomic, readonly) NSString *regionBasePhoneNumber;
@property (nonatomic, readonly) NSString *regionID;
@property (nonatomic, readonly) NSDictionary *regionServerContext;
@property (nonatomic, readonly) NSArray *registeredURIs;
@property (nonatomic, readonly) NSData *registrationCertificate;
@property (nonatomic, readonly) int registrationStatus;
@property (nonatomic, readonly) NSString *serviceName;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSArray *suppressedDevices;
@property (nonatomic, readonly) NSString *uniqueID;
@property (nonatomic, readonly) NSArray *vettedAliases;

- (void).cxx_destruct;
- (void)_callCloudConnectedDevicesChanged;
- (void)_callConnectedDevicesChanged;
- (void)_callDelegatesRespondingToSelector:(SEL)arg1 withPreCallbacksBlock:(id /* block */)arg2 callbackBlock:(id /* block */)arg3 postCallbacksBlock:(id /* block */)arg4;
- (void)_callDelegatesRespondingToSelector:(SEL)arg1 withPreCallbacksBlock:(id /* block */)arg2 callbackBlock:(id /* block */)arg3 postCallbacksBlock:(id /* block */)arg4 group:(id)arg5;
- (void)_callDelegatesWithBlock:(id /* block */)arg1;
- (void)_callDelegatesWithBlock:(id /* block */)arg1 group:(id)arg2;
- (void)_callDevicesChanged;
- (void)_callNearbyDevicesChanged;
- (void)_callRegistrationDelegatesWithBlock:(id /* block */)arg1;
- (void)_connect;
- (bool)_isEnabled;
- (bool)_isInvisibleAlias:(id)arg1;
- (bool)_isThumperService;
- (bool)_isiCloudPairingService;
- (id)_keychainRegistration;
- (void)_loadCachedDevices;
- (id)_objectForKey:(id)arg1;
- (id)_registeredURIs;
- (void)_reloadCachedDevices;
- (void)_reregisterAndReidentify:(bool)arg1;
- (void)_setIsEnabled:(bool)arg1;
- (void)_setObject:(id)arg1 forKey:(id)arg2;
- (void)_updateDependentDevicesWithDevicesInfo:(id)arg1;
- (void)account:(id)arg1 aliasesChanged:(id)arg2;
- (void)account:(id)arg1 dependentDevicesUpdated:(id)arg2;
- (void)account:(id)arg1 dependentDevicesUpdatedUponReconnect:(id)arg2;
- (void)account:(id)arg1 displayNameChanged:(id)arg2;
- (void)account:(id)arg1 localDeviceAdded:(id)arg2;
- (void)account:(id)arg1 localDeviceRemoved:(id)arg2;
- (void)account:(id)arg1 loginChanged:(id)arg2;
- (void)account:(id)arg1 profileChanged:(id)arg2;
- (void)account:(id)arg1 registrationStatusInfoChanged:(id)arg2;
- (void)account:(id)arg1 vettedAliasesChanged:(id)arg2;
- (id)accountInfo;
- (int)accountType;
- (void)activateAlias:(id)arg1;
- (id)activeAliases;
- (void)addAliases:(id)arg1;
- (void)addDelegate:(id)arg1 queue:(id)arg2;
- (void)addRegistrationDelegate:(id)arg1 queue:(id)arg2;
- (id)aliasStrings;
- (id)aliases;
- (void)authenticateAccount;
- (bool)canSend;
- (id)connectedDevices;
- (id)dateRegistered;
- (void)deactivateAlias:(id)arg1;
- (void)deactivateAndPurgeIdentify;
- (void)dealloc;
- (id)description;
- (id)devices;
- (id)displayName;
- (id)handles;
- (id)initWithDictionary:(id)arg1 uniqueID:(id)arg2 serviceName:(id)arg3 delegateContext:(id)arg4;
- (id)initWithLoginID:(id)arg1 uniqueID:(id)arg2 serviceName:(id)arg3 delegateContext:(id)arg4;
- (bool)isActive;
- (bool)isInTransientRegistrationState;
- (bool)isTransientWhitelistedAccount;
- (bool)isUsableForOuterMessaging;
- (bool)isUserDisabled;
- (id)loginID;
- (id)nearbyDevices;
- (id)nextRegistrationDate;
- (void)passwordUpdated;
- (id)primaryServiceName;
- (id)profileID;
- (id)profileInfo;
- (id)pushToken;
- (id)pushTopic;
- (void)refreshRegistrationForAccount:(id)arg1;
- (id)regionBasePhoneNumber;
- (id)regionID;
- (id)regionServerContext;
- (void)registerAccount;
- (id)registeredURIs;
- (id)registrationCertificate;
- (id)registrationInfo;
- (int)registrationStatus;
- (void)removeAliases:(id)arg1;
- (void)removeDelegate:(id)arg1;
- (void)removeRegistrationDelegate:(id)arg1;
- (id)serviceName;
- (void)setAccountInfo:(id)arg1;
- (void)setAuthToken:(id)arg1;
- (void)setLoginID:(id)arg1;
- (void)setPassword:(id)arg1;
- (id)suppressedDevices;
- (id)uniqueID;
- (void)unregisterAccount;
- (void)unvalidateAliases:(id)arg1;
- (void)updateAccountWithAccountInfo:(id)arg1;
- (void)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;
- (void)validateAliases:(id)arg1;
- (void)validateProfile;
- (id)vettedAliases;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

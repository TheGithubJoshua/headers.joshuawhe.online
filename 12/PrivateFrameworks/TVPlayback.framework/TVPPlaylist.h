<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TVPPlaylist.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVPlayback.framework/TVPPlaylist.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVPlayback.framework/TVPlayback (1)
 */

@interface TVPPlaylist : NSObject {
    NSArray * _activeList;
    unsigned long long  _activeListIndex;
    NSDictionary * _changeContext;
    unsigned long long  _count;
    unsigned long long  _currentIndex;
    NSObject<TVPMediaItem> * _currentMediaItem;
    long long  _endAction;
    NSString * _name;
    NSObject<TVPMediaItem> * _nextMediaItem;
    unsigned long long  _numConsecutivePlaybackFailures;
    NSObject<TVPMediaItem> * _previousMediaItem;
    long long  _repeatMode;
    bool  _shuffleEnabled;
    NSMutableArray * _shuffledItems;
    bool  _skipExplicit;
    NSMutableArray * _trackList;
    unsigned long long  _upNextIndex;
    NSArray * _upcomingItems;
    unsigned long long  _upcomingItemsLimit;
    bool  _windowed;
}

@property (nonatomic, readonly) NSArray *activeList;
@property (nonatomic, readonly) unsigned long long activeListIndex;
@property (nonatomic, retain) NSDictionary *changeContext;
@property (nonatomic) unsigned long long count;
@property (nonatomic) unsigned long long currentIndex;
@property (nonatomic, retain) NSObject<TVPMediaItem> *currentMediaItem;
@property (nonatomic) long long endAction;
@property (nonatomic, retain) NSString *name;
@property (nonatomic, retain) NSObject<TVPMediaItem> *nextMediaItem;
@property (nonatomic) unsigned long long numConsecutivePlaybackFailures;
@property (nonatomic, retain) NSObject<TVPMediaItem> *previousMediaItem;
@property (nonatomic) long long repeatMode;
@property (nonatomic, readonly) bool shuffleEnabled;
@property (nonatomic) bool skipExplicit;
@property (nonatomic, readonly) bool supportsRepeat;
@property (nonatomic, readonly) bool supportsShuffle;
@property (nonatomic, readonly) NSArray *trackList;
@property (nonatomic, readonly) unsigned long long upNextIndex;
@property (nonatomic, readonly) NSArray *upcomingItems;
@property (nonatomic) unsigned long long upcomingItemsLimit;
@property (nonatomic) bool windowed;

+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;

- (void).cxx_destruct;
- (bool)_isMediaItemExplicit:(id)arg1;
- (unsigned long long)_nextActiveListIndex;
- (unsigned long long)_previousActiveListIndex;
- (void)_shuffle:(bool)arg1;
- (void)_updateCurrent:(bool)arg1 andNextItems:(bool)arg2 withContext:(id)arg3;
- (id)activeList;
- (unsigned long long)activeListIndex;
- (void)addItem:(id)arg1;
- (void)addItems:(id)arg1;
- (void)addItemsToUpNext:(id)arg1;
- (id)changeContext;
- (void)changeMedia:(long long)arg1;
- (void)changeMedia:(long long)arg1 withContext:(id)arg2;
- (bool)changeToActiveListIndex:(unsigned long long)arg1 withContext:(id)arg2;
- (unsigned long long)count;
- (unsigned long long)currentIndex;
- (id)currentMediaItem;
- (long long)endAction;
- (id)init;
- (id)initWithMediaItems:(id)arg1 index:(long long)arg2 isCollection:(bool)arg3;
- (void)insertItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertItems:(id)arg1 atIndexes:(id)arg2;
- (bool)isEqualToPlaylist:(id)arg1;
- (bool)moreItemsAvailable:(long long)arg1;
- (id)name;
- (id)nextMediaItem;
- (unsigned long long)numConsecutivePlaybackFailures;
- (id)previousMediaItem;
- (void)removeItemAtIndex:(unsigned long long)arg1;
- (void)removeItemsAtIndexes:(id)arg1;
- (long long)repeatMode;
- (void)setChangeContext:(id)arg1;
- (void)setCount:(unsigned long long)arg1;
- (void)setCurrentIndex:(unsigned long long)arg1;
- (void)setCurrentMediaItem:(id)arg1;
- (void)setEndAction:(long long)arg1;
- (void)setName:(id)arg1;
- (void)setNextMediaItem:(id)arg1;
- (void)setNumConsecutivePlaybackFailures:(unsigned long long)arg1;
- (void)setPreviousMediaItem:(id)arg1;
- (void)setRepeatMode:(long long)arg1;
- (void)setShuffleEnabled:(bool)arg1 preserveCurrentItem:(bool)arg2;
- (void)setSkipExplicit:(bool)arg1;
- (void)setUpcomingItemsLimit:(unsigned long long)arg1;
- (void)setWindowed:(bool)arg1;
- (bool)shuffleEnabled;
- (bool)skipExplicit;
- (bool)supportsRepeat;
- (bool)supportsShuffle;
- (id)trackList;
- (unsigned long long)upNextIndex;
- (id)upcomingItems;
- (unsigned long long)upcomingItemsLimit;
- (bool)windowed;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

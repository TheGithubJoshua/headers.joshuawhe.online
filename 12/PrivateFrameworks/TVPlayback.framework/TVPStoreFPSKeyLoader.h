<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TVPStoreFPSKeyLoader.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TVPlayback.framework/TVPStoreFPSKeyLoader.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TVPlayback.framework/TVPlayback (1)
 */

@interface TVPStoreFPSKeyLoader : NSObject <TVPSecureKeyDeliveryCoordinatorDelegate, TVPSecureKeyLoaderDelegate> {
    NSURL * _certificateDataURL;
    NSObject<TVPStoreFPSKeyLoaderDelegate> * _delegate;
    bool  _didSkipRentalCheckout;
    NSError * _error;
    TVPPlaybackReportingEventCollection * _eventCollection;
    TVPSecureKeyStandardLoader * _fpsCertLoader;
    bool  _holdKeyResponses;
    bool  _includeGUID;
    NSURL * _keyDataURL;
    NSMutableArray * _pendingKeyRequests;
    NSNumber * _rentalID;
    bool  _requiresExternalEntitlementCheck;
    TVPSecureKeyDeliveryCoordinator * _secureKeyDeliveryCoordinator;
    TVPSecureKeyStandardLoader * _secureKeyStandardLoader;
    NSString * _serviceProviderID;
}

@property (nonatomic, copy) NSURL *certificateDataURL;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) NSObject<TVPStoreFPSKeyLoaderDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didSkipRentalCheckout;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, retain) TVPPlaybackReportingEventCollection *eventCollection;
@property (nonatomic, retain) TVPSecureKeyStandardLoader *fpsCertLoader;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool holdKeyResponses;
@property (nonatomic) bool includeGUID;
@property (nonatomic, copy) NSURL *keyDataURL;
@property (nonatomic, retain) NSMutableArray *pendingKeyRequests;
@property (nonatomic, retain) NSNumber *rentalID;
@property (nonatomic) bool requiresExternalEntitlementCheck;
@property (nonatomic, retain) TVPSecureKeyDeliveryCoordinator *secureKeyDeliveryCoordinator;
@property (nonatomic, retain) TVPSecureKeyStandardLoader *secureKeyStandardLoader;
@property (nonatomic, retain) NSString *serviceProviderID;
@property (readonly) Class superclass;

+ (void)initialize;
+ (void)preFetchFPSCertificate;

- (void).cxx_destruct;
- (void)_failPendingKeyRequestsWithError:(id)arg1;
- (void)_preFetchFPSCertificate;
- (id)certificateDataURL;
- (id)delegate;
- (bool)didSkipRentalCheckout;
- (id)error;
- (id)eventCollection;
- (id)fpsCertLoader;
- (bool)holdKeyResponses;
- (bool)includeGUID;
- (id)initWithCertificateDataURL:(id)arg1 keyDataURL:(id)arg2;
- (id)keyDataURL;
- (void)loadSecureKeyRequest:(id)arg1;
- (id)pendingKeyRequests;
- (id)rentalID;
- (bool)requiresExternalEntitlementCheck;
- (id)secureKeyDeliveryCoordinator;
- (void)secureKeyDeliveryCoordinator:(id)arg1 didReceiveOfflineKeyData:(id)arg2 forKeyRequest:(id)arg3;
- (void)secureKeyDeliveryCoordinator:(id)arg1 didReceiveUpdatedRentalExpirationDate:(id)arg2;
- (void)secureKeyDeliveryCoordinator:(id)arg1 didReceiveUpdatedRentalExpirationDate:(id)arg2 playbackStartDate:(id)arg3;
- (void)secureKeyDeliveryCoordinator:(id)arg1 didReceiveUpdatedRentalPlaybackStartDate:(id)arg2;
- (void)secureKeyDeliveryCoordinator:(id)arg1 willFailWithError:(id)arg2;
- (void)secureKeyDeliveryCoordinator:(id)arg1 willFailWithError:(id)arg2 forKeyRequest:(id)arg3;
- (void)secureKeyDeliveryCoordinatorWillSucceed:(id)arg1;
- (void)secureKeyDeliveryCoordinatorWillSucceed:(id)arg1 forKeyRequest:(id)arg2;
- (void)secureKeyLoader:(id)arg1 didFailWithError:(id)arg2 forRequest:(id)arg3;
- (void)secureKeyLoader:(id)arg1 didLoadCertificateData:(id)arg2 forRequest:(id)arg3;
- (void)secureKeyLoader:(id)arg1 didLoadContentIdentifierData:(id)arg2 forRequest:(id)arg3;
- (void)secureKeyLoader:(id)arg1 didLoadKeyResponseData:(id)arg2 renewalDate:(id)arg3 forRequest:(id)arg4;
- (void)secureKeyLoader:(id)arg1 didReceiveUpdatedRentalExpirationDate:(id)arg2;
- (id)secureKeyStandardLoader;
- (void)sendStopRequest;
- (id)serviceProviderID;
- (void)setCertificateDataURL:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidSkipRentalCheckout:(bool)arg1;
- (void)setError:(id)arg1;
- (void)setEventCollection:(id)arg1;
- (void)setFpsCertLoader:(id)arg1;
- (void)setHoldKeyResponses:(bool)arg1;
- (void)setIncludeGUID:(bool)arg1;
- (void)setKeyDataURL:(id)arg1;
- (void)setPendingKeyRequests:(id)arg1;
- (void)setRentalID:(id)arg1;
- (void)setRequiresExternalEntitlementCheck:(bool)arg1;
- (void)setSecureKeyDeliveryCoordinator:(id)arg1;
- (void)setSecureKeyStandardLoader:(id)arg1;
- (void)setServiceProviderID:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

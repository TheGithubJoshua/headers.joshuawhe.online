<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CRKUser.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ClassroomKit.framework/CRKUser.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ClassroomKit.framework/ClassroomKit (1)
 */

@interface CRKUser : NSObject <CRKCloudStoringSubItem, NSCopying, NSSecureCoding> {
    NSString * _displayName;
    NSString * _familyName;
    NSString * _givenName;
    NSString * _imageIdentifier;
    NSString * _imageURL;
    NSString * _phoneticFamilyName;
    NSString * _phoneticGivenName;
    long long  _role;
    bool  _useMeCardIfAvailable;
    NSString * _userIdentifier;
    CRKNotSoGoodImage * _userImage;
    NSData * _userImageData;
    NSString * _userSource;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic, copy) NSString *familyName;
@property (nonatomic, copy) NSString *givenName;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSString *imageIdentifier;
@property (nonatomic, copy) NSString *imageURL;
@property (nonatomic, readonly) bool isMeCardUser;
@property (nonatomic, readonly) bool isValid;
@property (nonatomic, readonly, copy) NSPersonNameComponents *nameComponents;
@property (nonatomic, copy) NSString *phoneticFamilyName;
@property (nonatomic, copy) NSString *phoneticGivenName;
@property (nonatomic) long long role;
@property (readonly) Class superclass;
@property (getter=shouldUseMeCardIfAvailable, nonatomic) bool useMeCardIfAvailable;
@property (nonatomic, copy) NSString *userIdentifier;
@property (nonatomic, copy) CRKNotSoGoodImage *userImage;
@property (nonatomic, copy) NSData *userImageData;
@property (nonatomic, copy) NSString *userSource;

+ (id)customUserFromMeCardUser:(id)arg1;
+ (id)instanceWithKeyValue:(id)arg1;
+ (id)instanceWithParentObject:(id)arg1 keyValue:(id)arg2;
+ (id)instanceWithRecord:(id)arg1;
+ (id)meCardUser;
+ (id)recordType;
+ (id)skeletonInstance;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)applyFieldsToRecord:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryValue;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (id)familyName;
- (id)givenName;
- (unsigned long long)hash;
- (id)imageIdentifier;
- (id)imageURL;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (bool)isChangedFrom:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToUser:(id)arg1;
- (bool)isMeCardUser;
- (bool)isValid;
- (id)nameComponents;
- (id)phoneticFamilyName;
- (id)phoneticGivenName;
- (id)recordName;
- (long long)role;
- (void)setDisplayName:(id)arg1;
- (void)setFamilyName:(id)arg1;
- (void)setGivenName:(id)arg1;
- (void)setImageIdentifier:(id)arg1;
- (void)setImageURL:(id)arg1;
- (void)setPhoneticFamilyName:(id)arg1;
- (void)setPhoneticGivenName:(id)arg1;
- (void)setRole:(long long)arg1;
- (void)setUseMeCardIfAvailable:(bool)arg1;
- (void)setUserIdentifier:(id)arg1;
- (void)setUserImage:(id)arg1;
- (void)setUserImageData:(id)arg1;
- (void)setUserSource:(id)arg1;
- (bool)shouldUseMeCardIfAvailable;
- (void)updateUserImage;
- (id)userIdentifier;
- (id)userImage;
- (id)userImageData;
- (id)userSource;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

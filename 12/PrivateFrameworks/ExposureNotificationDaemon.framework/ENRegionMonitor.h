<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ENRegionMonitor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ExposureNotificationDaemon.framework/ENRegionMonitor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ExposureNotificationDaemon.framework/ExposureNotificationDaemon (100.1)
 */

@interface ENRegionMonitor : NSObject <CLLocationManagerDelegate, ENRegionHistoryManagerDelegate, ENRegionMonitorSourceDelegate> {
    unsigned long long  _authorizationState;
    ENRegionMonitorCoreLocationDataSource * _coreLocationDataSource;
    ENRegionVisit * _currentRegionVisit;
    <ENRegionMonitorDelegate> * _delegate;
    unsigned long long  _exposureNotificationAuthorizationState;
    CLLocationManager * _exposureNotificationLocationManager;
    bool  _monitoringEnabled;
    unsigned long long  _monitoringMode;
    ENRegionHistoryManager * _regionHistoryManager;
    NSObject<OS_dispatch_queue> * _regionMonitorQueue;
    unsigned long long  _significantLocationsAuthorizationState;
    CLLocationManager * _significantLocationsLocationManager;
    ENRegionMonitorTelephonyDataSource * _telephonyDataSource;
    ENRegionTestDataSource * _testRegionDataSource;
}

@property (nonatomic) unsigned long long authorizationState;
@property (nonatomic, retain) ENRegionMonitorCoreLocationDataSource *coreLocationDataSource;
@property (nonatomic, copy) ENRegionVisit *currentRegionVisit;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ENRegionMonitorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long exposureNotificationAuthorizationState;
@property (nonatomic, retain) CLLocationManager *exposureNotificationLocationManager;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool monitoringEnabled;
@property (nonatomic) unsigned long long monitoringMode;
@property (nonatomic, retain) ENRegionHistoryManager *regionHistoryManager;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *regionMonitorQueue;
@property (nonatomic) unsigned long long significantLocationsAuthorizationState;
@property (nonatomic, retain) CLLocationManager *significantLocationsLocationManager;
@property (readonly) Class superclass;
@property (nonatomic, retain) ENRegionMonitorTelephonyDataSource *telephonyDataSource;
@property (nonatomic, retain) ENRegionTestDataSource *testRegionDataSource;

+ (id)locationAuthorizationStatusToString:(int)arg1;
+ (id)regionMonitorAuthorizationStateToString:(unsigned long long)arg1;
+ (id)regionMonitorMonitoringModeToString:(unsigned long long)arg1;
+ (unsigned long long)regionMonitorStateFromAuthorizationStatus:(int)arg1;

- (void).cxx_destruct;
- (void)_createCountryDataSource;
- (void)_createLocationManager;
- (void)_createSubdivisionDataSource;
- (void)_createTestDataSource;
- (id)_getAllRegionVisitsWithError:(id*)arg1;
- (id)_getAllRegionsWithError:(id*)arg1;
- (id)_getCurrentRegionVisitWithError:(id*)arg1;
- (void)_notifyDelegateOfCurrentRegion;
- (bool)_purgeAllRegionHistoryWithError:(id*)arg1;
- (bool)_purgeRegionsOlderThanDate:(id)arg1 error:(id*)arg2;
- (void)_regionDataSource:(id)arg1 updatedWithVisit:(id)arg2;
- (void)_resetRegionMonitor;
- (void)_setup;
- (void)_stopAllDataSources;
- (void)_updateRegionHistoryFileStatus;
- (unsigned long long)authorizationState;
- (id)coreLocationDataSource;
- (id)currentRegionVisit;
- (void)currentRegionVisitDidChange:(id)arg1;
- (id)delegate;
- (void)disableRegionMonitor;
- (void)enableRegionMonitor;
- (unsigned long long)exposureNotificationAuthorizationState;
- (id)exposureNotificationLocationManager;
- (id)getAllRegionVisitsWithError:(id*)arg1;
- (id)getAllRegionsWithError:(id*)arg1;
- (unsigned long long)getAuthorizationState;
- (id)getCurrentRegionVisit;
- (id)getCurrentRegionVisitWithError:(id*)arg1;
- (unsigned long long)getMonitoringMode;
- (id)init;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (bool)monitoringEnabled;
- (unsigned long long)monitoringMode;
- (bool)purgeAllRegionHistoryWithError:(id*)arg1;
- (bool)purgeRegionsOlderThanDate:(id)arg1 error:(id*)arg2;
- (void)regionDataSource:(id)arg1 updatedWithVisit:(id)arg2;
- (id)regionHistoryManager;
- (id)regionMonitorQueue;
- (void)resetRegionMonitor;
- (void)setAuthorizationState:(unsigned long long)arg1;
- (void)setConfigurationManager:(id)arg1;
- (void)setCoreLocationDataSource:(id)arg1;
- (void)setCurrentRegionVisit:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExposureNotificationAuthorizationState:(unsigned long long)arg1;
- (void)setExposureNotificationLocationManager:(id)arg1;
- (void)setMonitoringEnabled:(bool)arg1;
- (void)setMonitoringMode:(unsigned long long)arg1;
- (void)setRegionHistoryManager:(id)arg1;
- (void)setRegionMonitorQueue:(id)arg1;
- (void)setSignificantLocationsAuthorizationState:(unsigned long long)arg1;
- (void)setSignificantLocationsLocationManager:(id)arg1;
- (void)setTelephonyDataSource:(id)arg1;
- (void)setTestRegionDataSource:(id)arg1;
- (void)setup;
- (unsigned long long)significantLocationsAuthorizationState;
- (id)significantLocationsLocationManager;
- (id)telephonyDataSource;
- (id)testRegionDataSource;
- (void)updateAuthorizationState;
- (void)updateRegionHistoryFileStatus;
- (void)updateRegionMonitorMonitoringMode:(unsigned long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ENExposureCalculationSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ExposureNotificationDaemon.framework/ENExposureCalculationSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ExposureNotificationDaemon.framework/ExposureNotificationDaemon (100.1)
 */

@interface ENExposureCalculationSession : NSObject {
    NSNumber * _advertisementSampleCountThreshold;
    bool  _allowRecursiveReportType;
    NSNumber * _allowedRPIBroadcastDuration;
    unsigned char  _attenuationDurationThresholds;
    bool  _cacheExposureInfo;
    bool  _cacheExposureWindows;
    unsigned long long  _cachedExposureWindowCount;
    unsigned int  _cachedExposureWindowMetadataCount;
    unsigned int  _cachedScanInstanceCount;
    unsigned int  _droppedScanInstanceCount;
    ENExposureConfiguration * _exposureConfiguration;
    struct { unsigned int x1; long long x2; unsigned char x3; unsigned char x4; unsigned char x5; } * _exposureWindowMetadataBuffer;
    struct { unsigned int x1; double x2; unsigned char x3; unsigned char x4; unsigned short x5; } * _scanInstanceBuffer;
    unsigned int  _scanInstanceBufferSize;
    NSObject<OS_os_transaction> * _transaction;
}

@property (nonatomic, copy) NSNumber *advertisementSampleCountThreshold;
@property (nonatomic) bool allowRecursiveReportType;
@property (nonatomic, copy) NSNumber *allowedRPIBroadcastDuration;
@property (nonatomic) bool cacheExposureInfo;
@property (nonatomic) bool cacheExposureWindows;
@property (nonatomic, readonly) unsigned long long cachedExposureInfoCount;
@property (nonatomic, readonly) unsigned long long cachedExposureWindowCount;
@property (nonatomic, readonly) unsigned int droppedScanInstanceCount;
@property (nonatomic, copy) ENExposureConfiguration *exposureConfiguration;

- (void).cxx_destruct;
- (bool)_shouldMatchKey:(id)arg1;
- (id)advertisementSampleCountThreshold;
- (bool)allowRecursiveReportType;
- (id)allowedRPIBroadcastDuration;
- (bool)cacheExposureInfo;
- (bool)cacheExposureWindows;
- (unsigned long long)cachedExposureInfoCount;
- (unsigned long long)cachedExposureWindowCount;
- (void)dealloc;
- (unsigned int)droppedScanInstanceCount;
- (void)enumerateCachedExposureInfo:(id /* block */)arg1;
- (void)enumerateCachedExposureInfo:(id /* block */)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 withBatchSize:(unsigned int)arg3;
- (void)enumerateCachedExposureInfo:(id /* block */)arg1 withBatchSize:(unsigned int)arg2;
- (void)enumerateCachedExposureWindows:(id /* block */)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 withBatchSize:(unsigned int)arg3;
- (void)enumerateCachedExposureWindows:(id /* block */)arg1 inRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 withBatchSize:(unsigned int)arg3 options:(long long)arg4;
- (id)exposureConfiguration;
- (id)exposureInfoForExposureWindows:(id)arg1 key:(id)arg2;
- (id)exposureInfoForMatchedAdvertisements:(id)arg1 key:(id)arg2;
- (id)exposureWindowsForMatchedAdvertisements:(id)arg1 key:(id)arg2;
- (id)exposureWindowsForMatchedAdvertisements:(id)arg1 key:(id)arg2 options:(long long)arg3;
- (id)filterAdvertisements:(id)arg1 fromKey:(id)arg2;
- (id)initWithAttenuationThreshold:(unsigned char)arg1 capacity:(unsigned int)arg2;
- (struct { unsigned int x1; double x2; unsigned char x3; unsigned char x4; unsigned short x5; })scanInstanceFromAdvertisement:(id)arg1 key:(id)arg2;
- (void)setAdvertisementSampleCountThreshold:(id)arg1;
- (void)setAllowRecursiveReportType:(bool)arg1;
- (void)setAllowedRPIBroadcastDuration:(id)arg1;
- (void)setCacheExposureInfo:(bool)arg1;
- (void)setCacheExposureWindows:(bool)arg1;
- (void)setExposureConfiguration:(id)arg1;
- (unsigned char)weightedAttenuationValueForDurations:(unsigned int*)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

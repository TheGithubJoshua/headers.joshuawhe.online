<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ENConfigurationManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ExposureNotificationDaemon.framework/ENConfigurationManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ExposureNotificationDaemon.framework/ExposureNotificationDaemon (100.1)
 */

@interface ENConfigurationManager : NSObject {
    ENActiveEntity * _activeEntity;
    ENCloudServerChannel * _cloudServerChannel;
    ENConfigurationStore * _configurationStore;
    NSObject<ENConfigurationManagerDelegate> * _delegate;
    NSObject<OS_dispatch_queue> * _delegateQueue;
    ENXPCTimer * _gracePeriodConfigurationFetchTimer;
    bool  _mobileCountryCodeOverriden;
    bool  _prefTestHeaderEnabled;
    ENRegionMonitor * _regionMonitor;
    NSObject<OS_dispatch_queue> * _serialQueue;
    ENXPCTimer * _serverConfigurationFetchTimer;
}

@property (nonatomic, copy) ENActiveEntity *activeEntity;
@property (nonatomic, retain) ENCloudServerChannel *cloudServerChannel;
@property (nonatomic, retain) ENConfigurationStore *configurationStore;
@property (nonatomic) NSObject<ENConfigurationManagerDelegate> *delegate;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *delegateQueue;
@property (nonatomic, retain) ENXPCTimer *gracePeriodConfigurationFetchTimer;
@property (nonatomic) bool mobileCountryCodeOverriden;
@property (nonatomic) bool prefTestHeaderEnabled;
@property (nonatomic, retain) ENRegionMonitor *regionMonitor;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *serialQueue;
@property (nonatomic, retain) ENXPCTimer *serverConfigurationFetchTimer;

+ (id)iCloudServerEndpoint;
+ (id)staticRegionForBundleID:(id)arg1;
+ (bool)verifyAppleServerResponse:(id)arg1 signatureHeader:(id)arg2;

- (void).cxx_destruct;
- (void)_activate;
- (void)_fetchServerConfigurationsForRegion:(id)arg1 completion:(id /* block */)arg2;
- (void)_printServerConfiguration:(id)arg1;
- (void)_processServerConfiguration:(id)arg1 forceUpdate:(bool)arg2;
- (void)_reportErrorMetricForHTTPStatus:(long long)arg1;
- (void)_saveAndRemoveStaleConfigurations:(id)arg1 region:(id)arg2 error:(id)arg3;
- (void)_scheduleRegionConfigurationRefresh;
- (void)_serverFetchRegionConfiguration:(id)arg1 completion:(id /* block */)arg2;
- (void)activate;
- (id)activeEntity;
- (id)cloudServerChannel;
- (id)configurationStore;
- (void)dealloc;
- (id)delegate;
- (id)delegateQueue;
- (void)fetchServerConfigurationsForRegion:(id)arg1 withCompletion:(id /* block */)arg2;
- (id)gracePeriodConfigurationFetchTimer;
- (id)initWithDelegate:(id)arg1 activeEntity:(id)arg2;
- (bool)isInGracePeriodTransition;
- (bool)mobileCountryCodeOverriden;
- (bool)prefTestHeaderEnabled;
- (void)prefsChanged;
- (void)refreshServerConfigurationsUponProfileChange;
- (id)regionMonitor;
- (void)regionMonitor:(id)arg1 authorizationStateDidChange:(unsigned long long)arg2;
- (void)regionMonitor:(id)arg1 regionDidChange:(id)arg2;
- (void)resetConfigurationCache;
- (void)resetConfigurationManager;
- (id)serialQueue;
- (id)serverConfigurationFetchTimer;
- (void)serverFetchRegionConfiguration:(id)arg1 completion:(id /* block */)arg2;
- (void)setActiveEntity:(id)arg1;
- (void)setCloudServerChannel:(id)arg1;
- (void)setConfigurationStore:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)setGracePeriodConfigurationFetchTimer:(id)arg1;
- (void)setMobileCountryCodeOverriden:(bool)arg1;
- (void)setPrefTestHeaderEnabled:(bool)arg1;
- (void)setRegionMonitor:(id)arg1;
- (void)setSerialQueue:(id)arg1;
- (void)setServerConfigurationFetchTimer:(id)arg1;
- (void)setupGracePeriodFetchTimerWithDelay:(double)arg1;
- (void)stopGracePeriodTimer;
- (void)updateRegionMonitorModeForCurrentRegion;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

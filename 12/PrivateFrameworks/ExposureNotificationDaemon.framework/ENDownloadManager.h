<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ENDownloadManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ExposureNotificationDaemon.framework/ENDownloadManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ExposureNotificationDaemon.framework/ExposureNotificationDaemon (100.1)
 */

@interface ENDownloadManager : NSObject {
    NSURLSession * _URLSession;
    bool  _didUnscheduleOnce;
    NSURL * _directoryURL;
    id /* block */  _errorMetricReporter;
    NSBackgroundActivityScheduler * _fetchScheduler;
    bool  _invalidated;
    NSArray * _pendingEndpoints;
    NSObject<OS_dispatch_queue> * _queue;
    ENDownloadManagerState * _state;
    ENSecureArchiveFileWrapper * _stateFileWrapper;
}

@property (nonatomic, retain) NSURLSession *URLSession;
@property (nonatomic, readonly, copy) NSURL *directoryURL;
@property (nonatomic, readonly) unsigned long long enabledEndpointCount;
@property (nonatomic, copy) id /* block */ errorMetricReporter;
@property (nonatomic, readonly) NSBackgroundActivityScheduler *fetchScheduler;
@property (nonatomic, readonly) ENDownloadManagerState *state;

- (void).cxx_destruct;
- (id)URLSession;
- (double)_aggregateDownloadIntervalFromEndpoints:(id)arg1;
- (void)_backgroundActivityFiredWithCompletion:(id /* block */)arg1;
- (id)_baseDirectoryPathForEndpointWithState:(id)arg1;
- (bool)_copyDownloadedFileAtPath:(id)arg1 toPath:(id)arg2 removeExisting:(bool)arg3 error:(id*)arg4;
- (void)_downloadIndexWithTask:(id)arg1;
- (void)_downloadNextFileFromServerWithTask:(id)arg1;
- (id)_downloadsDirectoryPathForEndpointState:(id)arg1;
- (void)_handleFileDownloadFinishedForTask:(id)arg1 serverFilePath:(id)arg2 downloadedFilePath:(id)arg3;
- (void)_handleIndexFileDownloadFinishedForTask:(id)arg1 filePath:(id)arg2;
- (id)_indexFilePathForEndpointState:(id)arg1;
- (id)_nextFilePathToDownloadWithEndpointState:(id)arg1;
- (void)_performDownloadsWithScheduler:(id)arg1 atDate:(id)arg2 forced:(bool)arg3 completion:(id /* block */)arg4;
- (void)_purgeKeepingDownloadsForIdentifiers:(id)arg1 expiryDate:(id)arg2;
- (bool)_readStateIfNecessaryWithError:(id*)arg1;
- (void)_reportErrorMetric:(unsigned int)arg1;
- (void)_reportErrorMetricForHTTPStatus:(long long)arg1 forIndexFile:(bool)arg2;
- (bool)_saveState;
- (bool)_saveStateWithError:(id*)arg1;
- (bool)_shouldFetchFromEndpointWithState:(id)arg1 time:(double)arg2;
- (void)_updateFetchSchedule;
- (void)activate;
- (id)countOfAvailableDownloadsWithError:(id*)arg1;
- (id)createScheduler;
- (id)description;
- (id)directoryURL;
- (unsigned long long)enabledEndpointCount;
- (bool)enumerateDownloadsWithError:(id*)arg1 handler:(id /* block */)arg2;
- (id /* block */)errorMetricReporter;
- (id)fetchScheduler;
- (id)initWithDirectoryURL:(id)arg1 queue:(id)arg2;
- (id)initWithQueue:(id)arg1;
- (void)invalidate;
- (void)performDownloadsAtDate:(id)arg1 forced:(bool)arg2 completion:(id /* block */)arg3;
- (void)performDownloadsForced:(bool)arg1 completion:(id /* block */)arg2;
- (void)purgeAllDownloads;
- (void)purgeExpiredDownloadsWithDate:(id)arg1;
- (void)setDownloadEndpoints:(id)arg1;
- (void)setErrorMetricReporter:(id /* block */)arg1;
- (void)setURLSession:(id)arg1;
- (id)state;
- (void)update;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

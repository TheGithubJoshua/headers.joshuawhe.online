<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ENServerConfiguration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ExposureNotificationDaemon.framework/ENServerConfiguration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ExposureNotificationDaemon.framework/ExposureNotificationDaemon (100.1)
 */

@interface ENServerConfiguration : PBCodable <NSCopying> {
    long long  _advertisingIntervalInMilliSec;
    int  _applicationBackgroundRuntimeIntervalinHours;
    int  _attenuationMinThreshold;
    int  _attenuationThresholdForExposureInfo;
    long long  _callbackIntervalInMin;
    bool  _enEnabled;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _fetchAllRanges;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _fetchIncrementalRanges;
    struct { 
        unsigned int advertisingIntervalInMilliSec : 1; 
        unsigned int proximityDurationMinAPWakeThresholdInSec : 1; 
        unsigned int proximityDurationMinForceAPWakeThresholdInSec : 1; 
        unsigned int proximityDurationScanDurationAudioInSec : 1; 
        unsigned int proximityDurationScanDurationInSec : 1; 
        unsigned int proximityDurationScanIntervalAudioInMilliSec : 1; 
        unsigned int applicationBackgroundRuntimeIntervalinHours : 1; 
        unsigned int attenuationMinThreshold : 1; 
        unsigned int attenuationThresholdForExposureInfo : 1; 
        unsigned int proximityDurationMaxThresholdInSec : 1; 
        unsigned int proximityDurationMinThresholdInSec : 1; 
        unsigned int rollingIdentifierIntervalInMin : 1; 
        unsigned int rollingIdentifiersCacheExpiryAgeInSec : 1; 
    }  _has;
    int  _maximumFutureDayKeysToPublish;
    int  _maximumPastDaysKeysToFetchOrPublish;
    int  _proximityDurationMaxThresholdInSec;
    long long  _proximityDurationMinAPWakeThresholdInSec;
    long long  _proximityDurationMinForceAPWakeThresholdInSec;
    int  _proximityDurationMinThresholdInSec;
    long long  _proximityDurationScanDurationAudioInSec;
    long long  _proximityDurationScanDurationInSec;
    long long  _proximityDurationScanIntervalAudioInMilliSec;
    NSString * _regionIdentifier;
    int  _rollingIdentifierIntervalInMin;
    int  _rollingIdentifiersCacheExpiryAgeInSec;
    NSString * _serverConfigVersion;
}

@property (nonatomic) long long advertisingIntervalInMilliSec;
@property (nonatomic) int applicationBackgroundRuntimeIntervalinHours;
@property (nonatomic) int attenuationMinThreshold;
@property (nonatomic) int attenuationThresholdForExposureInfo;
@property (nonatomic) long long callbackIntervalInMin;
@property (nonatomic) bool enEnabled;
@property (nonatomic, readonly) int*fetchAllRanges;
@property (nonatomic, readonly) unsigned long long fetchAllRangesCount;
@property (nonatomic, readonly) int*fetchIncrementalRanges;
@property (nonatomic, readonly) unsigned long long fetchIncrementalRangesCount;
@property (nonatomic) bool hasAdvertisingIntervalInMilliSec;
@property (nonatomic) bool hasApplicationBackgroundRuntimeIntervalinHours;
@property (nonatomic) bool hasAttenuationMinThreshold;
@property (nonatomic) bool hasAttenuationThresholdForExposureInfo;
@property (nonatomic) bool hasProximityDurationMaxThresholdInSec;
@property (nonatomic) bool hasProximityDurationMinAPWakeThresholdInSec;
@property (nonatomic) bool hasProximityDurationMinForceAPWakeThresholdInSec;
@property (nonatomic) bool hasProximityDurationMinThresholdInSec;
@property (nonatomic) bool hasProximityDurationScanDurationAudioInSec;
@property (nonatomic) bool hasProximityDurationScanDurationInSec;
@property (nonatomic) bool hasProximityDurationScanIntervalAudioInMilliSec;
@property (nonatomic, readonly) bool hasRegionIdentifier;
@property (nonatomic) bool hasRollingIdentifierIntervalInMin;
@property (nonatomic) bool hasRollingIdentifiersCacheExpiryAgeInSec;
@property (nonatomic) int maximumFutureDayKeysToPublish;
@property (nonatomic) int maximumPastDaysKeysToFetchOrPublish;
@property (nonatomic) int proximityDurationMaxThresholdInSec;
@property (nonatomic) long long proximityDurationMinAPWakeThresholdInSec;
@property (nonatomic) long long proximityDurationMinForceAPWakeThresholdInSec;
@property (nonatomic) int proximityDurationMinThresholdInSec;
@property (nonatomic) long long proximityDurationScanDurationAudioInSec;
@property (nonatomic) long long proximityDurationScanDurationInSec;
@property (nonatomic) long long proximityDurationScanIntervalAudioInMilliSec;
@property (nonatomic, retain) NSString *regionIdentifier;
@property (nonatomic) int rollingIdentifierIntervalInMin;
@property (nonatomic) int rollingIdentifiersCacheExpiryAgeInSec;
@property (nonatomic, retain) NSString *serverConfigVersion;

- (void).cxx_destruct;
- (void)addFetchAllRange:(int)arg1;
- (void)addFetchIncrementalRange:(int)arg1;
- (long long)advertisingIntervalInMilliSec;
- (int)applicationBackgroundRuntimeIntervalinHours;
- (int)attenuationMinThreshold;
- (int)attenuationThresholdForExposureInfo;
- (long long)callbackIntervalInMin;
- (void)clearFetchAllRanges;
- (void)clearFetchIncrementalRanges;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)enEnabled;
- (int)fetchAllRangeAtIndex:(unsigned long long)arg1;
- (int*)fetchAllRanges;
- (unsigned long long)fetchAllRangesCount;
- (int)fetchIncrementalRangeAtIndex:(unsigned long long)arg1;
- (int*)fetchIncrementalRanges;
- (unsigned long long)fetchIncrementalRangesCount;
- (bool)hasAdvertisingIntervalInMilliSec;
- (bool)hasApplicationBackgroundRuntimeIntervalinHours;
- (bool)hasAttenuationMinThreshold;
- (bool)hasAttenuationThresholdForExposureInfo;
- (bool)hasProximityDurationMaxThresholdInSec;
- (bool)hasProximityDurationMinAPWakeThresholdInSec;
- (bool)hasProximityDurationMinForceAPWakeThresholdInSec;
- (bool)hasProximityDurationMinThresholdInSec;
- (bool)hasProximityDurationScanDurationAudioInSec;
- (bool)hasProximityDurationScanDurationInSec;
- (bool)hasProximityDurationScanIntervalAudioInMilliSec;
- (bool)hasRegionIdentifier;
- (bool)hasRollingIdentifierIntervalInMin;
- (bool)hasRollingIdentifiersCacheExpiryAgeInSec;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (int)maximumFutureDayKeysToPublish;
- (int)maximumPastDaysKeysToFetchOrPublish;
- (void)mergeFrom:(id)arg1;
- (int)proximityDurationMaxThresholdInSec;
- (long long)proximityDurationMinAPWakeThresholdInSec;
- (long long)proximityDurationMinForceAPWakeThresholdInSec;
- (int)proximityDurationMinThresholdInSec;
- (long long)proximityDurationScanDurationAudioInSec;
- (long long)proximityDurationScanDurationInSec;
- (long long)proximityDurationScanIntervalAudioInMilliSec;
- (bool)readFrom:(id)arg1;
- (id)regionIdentifier;
- (int)rollingIdentifierIntervalInMin;
- (int)rollingIdentifiersCacheExpiryAgeInSec;
- (id)serverConfigVersion;
- (void)setAdvertisingIntervalInMilliSec:(long long)arg1;
- (void)setApplicationBackgroundRuntimeIntervalinHours:(int)arg1;
- (void)setAttenuationMinThreshold:(int)arg1;
- (void)setAttenuationThresholdForExposureInfo:(int)arg1;
- (void)setCallbackIntervalInMin:(long long)arg1;
- (void)setEnEnabled:(bool)arg1;
- (void)setFetchAllRanges:(int*)arg1 count:(unsigned long long)arg2;
- (void)setFetchIncrementalRanges:(int*)arg1 count:(unsigned long long)arg2;
- (void)setHasAdvertisingIntervalInMilliSec:(bool)arg1;
- (void)setHasApplicationBackgroundRuntimeIntervalinHours:(bool)arg1;
- (void)setHasAttenuationMinThreshold:(bool)arg1;
- (void)setHasAttenuationThresholdForExposureInfo:(bool)arg1;
- (void)setHasProximityDurationMaxThresholdInSec:(bool)arg1;
- (void)setHasProximityDurationMinAPWakeThresholdInSec:(bool)arg1;
- (void)setHasProximityDurationMinForceAPWakeThresholdInSec:(bool)arg1;
- (void)setHasProximityDurationMinThresholdInSec:(bool)arg1;
- (void)setHasProximityDurationScanDurationAudioInSec:(bool)arg1;
- (void)setHasProximityDurationScanDurationInSec:(bool)arg1;
- (void)setHasProximityDurationScanIntervalAudioInMilliSec:(bool)arg1;
- (void)setHasRollingIdentifierIntervalInMin:(bool)arg1;
- (void)setHasRollingIdentifiersCacheExpiryAgeInSec:(bool)arg1;
- (void)setMaximumFutureDayKeysToPublish:(int)arg1;
- (void)setMaximumPastDaysKeysToFetchOrPublish:(int)arg1;
- (void)setProximityDurationMaxThresholdInSec:(int)arg1;
- (void)setProximityDurationMinAPWakeThresholdInSec:(long long)arg1;
- (void)setProximityDurationMinForceAPWakeThresholdInSec:(long long)arg1;
- (void)setProximityDurationMinThresholdInSec:(int)arg1;
- (void)setProximityDurationScanDurationAudioInSec:(long long)arg1;
- (void)setProximityDurationScanDurationInSec:(long long)arg1;
- (void)setProximityDurationScanIntervalAudioInMilliSec:(long long)arg1;
- (void)setRegionIdentifier:(id)arg1;
- (void)setRollingIdentifierIntervalInMin:(int)arg1;
- (void)setRollingIdentifiersCacheExpiryAgeInSec:(int)arg1;
- (void)setServerConfigVersion:(id)arg1;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ICCryptor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NotesShared.framework/ICCryptor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared (1349.30)
 */

@interface ICCryptor : NSObject

+ (id)allCachedKeys;
+ (bool)authenticateWithPassphrase:(id)arg1 forAccount:(id)arg2;
+ (bool)authenticateWithPassphrase:(id)arg1 forNote:(id)arg2;
+ (bool)authenticateWithPassphrase:(id)arg1 forObject:(id)arg2;
+ (void)cacheMasterKeyWithPassphrase:(id)arg1;
+ (void)cacheMasterKeyWithPassphrase:(id)arg1 forAccount:(id)arg2;
+ (void)cacheMasterKeyWithPassphrase:(id)arg1 forNote:(id)arg2;
+ (void)cacheMasterKeyWithPassphrase:(id)arg1 forObject:(id)arg2;
+ (void)cachedKeyClearingTimerDidFire;
+ (id)cachedMasterKeyForIdentifier:(id)arg1;
+ (id)cachedMasterKeyForObject:(id)arg1;
+ (void)clearAllCachedMasterKeys;
+ (id)decryptData:(id)arg1 forObject:(id)arg2;
+ (id)decryptData:(id)arg1 forObject:(id)arg2 withTag:(id)arg3 initializationVector:(id)arg4;
+ (bool)decryptFileFromURL:(id)arg1 toURL:(id)arg2 forObject:(id)arg3;
+ (id)decryptedDataFromFileURL:(id)arg1 forObject:(id)arg2;
+ (id)encryptData:(id)arg1 forObject:(id)arg2 tag:(id*)arg3 initializationVector:(id*)arg4;
+ (bool)encryptFileFromURL:(id)arg1 toURL:(id)arg2 forObject:(id)arg3;
+ (void)fixDivergedAttachmentsForNote:(id)arg1 usingPassphrase:(id)arg2;
+ (void)fixNoteWithDivergedKeyFromAccountPassphrase:(id)arg1 usingPassphrase:(id)arg2;
+ (void)fixUpAnyNotesToMatchAccountUsingPassphrase:(id)arg1;
+ (void)fixUpAnyNotesToMatchAccountUsingPassphraseIfNecessary:(id)arg1;
+ (bool)hasAnyCachedMasterKeys;
+ (bool)isAuthenticatedForAccount:(id)arg1;
+ (bool)isAuthenticatedForNote:(id)arg1;
+ (bool)isAuthenticatedForObject:(id)arg1;
+ (bool)isPassphrase:(id)arg1 correctForAccount:(id)arg2;
+ (bool)isPassphrase:(id)arg1 correctForNote:(id)arg2;
+ (bool)isPassphrase:(id)arg1 correctForObject:(id)arg2;
+ (bool)key:(id)arg1 decryptsObject:(id)arg2;
+ (id)masterKeysByAccountIdentifier;
+ (id)newWrappedKeyForObject:(id)arg1;
+ (void)removeItemFromBiometricID:(id)arg1;
+ (void)removePassphraseForAccount:(id)arg1;
+ (void)removePassphraseForNotesInAccount:(id)arg1;
+ (void)rewrapAndDivergeKeyForObject:(id)arg1 usingPassphrase:(id)arg2;
+ (void)rewrapKeyForObject:(id)arg1 newMasterKey:(id)arg2 salt:(id)arg3 iterationCount:(unsigned int)arg4 hint:(id)arg5;
+ (void)rewrapNote:(id)arg1 newMasterKey:(id)arg2 salt:(id)arg3 interationCount:(unsigned int)arg4 hint:(id)arg5;
+ (void)setCachedMasterKey:(id)arg1 forIdentifier:(id)arg2;
+ (void)setCachedMasterKey:(id)arg1 forObject:(id)arg2;
+ (bool)setPassphrase:(id)arg1 forAllAccountsAndNotesWithHint:(id)arg2;
+ (bool)setPassphrase:(id)arg1 forAllAccountsAndNotesWithHint:(id)arg2 oldPassphrase:(id)arg3;
+ (bool)setPassphrase:(id)arg1 hint:(id)arg2 forAccount:(id)arg3;
+ (void)startOrExtendCachedKeyClearingTimer;
+ (void)startOrExtendCachedKeyClearingTimerForModes:(id)arg1;
+ (double)timeIntervalBeforeClearingCachedKeys;
+ (void)transferSharedPassphraseFromAccount:(id)arg1 toAccount:(id)arg2;
+ (bool)unauthenticatedAttachmentsUsingSamePassphraseExistForNote:(id)arg1 passphrase:(id)arg2;
+ (id)unwrappedKeyForObject:(id)arg1;
+ (bool)updateAllNotesWithOldPassphrase:(id)arg1 toSharedPassphrase:(id)arg2 fromAccount:(id)arg3 progress:(id)arg4;
+ (bool)userHasPassphraseSetForAccount:(id)arg1;
+ (bool)userHasPassphraseSetForNote:(id)arg1;
+ (bool)userHasPassphraseSetForObject:(id)arg1;
+ (id)wrapKey:(id)arg1 withMasterKey:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

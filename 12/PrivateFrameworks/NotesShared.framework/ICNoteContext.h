<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ICNoteContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NotesShared.framework/ICNoteContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared (1349.30)
 */

@interface ICNoteContext : NSObject <ICNoteContainer> {
    ICAccountUtilities * _accountUtilities;
    NSObject<OS_dispatch_queue> * _backgroundTaskQueue;
    unsigned long long  _contextOptions;
    ICNotesCrossProcessChangeCoordinator * _crossProcessChangeCoordinator;
    ICNote * _currentNote;
    NSError * _databaseOpenError;
    bool  _databaseOpenFailedDueToLowDiskSpace;
    bool  _delaySaving;
    NSManagedObjectContext * _managedObjectContext;
    ICPersistentContainer * _persistentContainer;
    bool  _saving;
    NSTimer * _trashDeletionTimer;
    NSTimer * _updateAttachmentLocationsTimer;
    ICXPCStoreCrossProcessChangeListener * _xpcStoreCrossProcessListener;
}

@property (nonatomic, retain) ICAccountUtilities *accountUtilities;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *backgroundTaskQueue;
@property (nonatomic) unsigned long long contextOptions;
@property (nonatomic, retain) ICNotesCrossProcessChangeCoordinator *crossProcessChangeCoordinator;
@property (nonatomic, retain) ICNote *currentNote;
@property (nonatomic, retain) NSError *databaseOpenError;
@property (nonatomic) bool databaseOpenFailedDueToLowDiskSpace;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool delaySaving;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSManagedObjectContext *managedObjectContext;
@property (nonatomic, readonly) ICAccount *noteContainerAccount;
@property (readonly) ICPersistentContainer *persistentContainer;
@property (getter=isSaving) bool saving;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSTimer *trashDeletionTimer;
@property (nonatomic, retain) NSTimer *updateAttachmentLocationsTimer;
@property (nonatomic, retain) ICXPCStoreCrossProcessChangeListener *xpcStoreCrossProcessListener;

+ (void)crashThisApp;
+ (id)filenameFromFileWrapper:(id)arg1;
+ (bool)hasContextOptions:(unsigned long long)arg1;
+ (bool)hasSharedContext;
+ (bool)isActive;
+ (bool)isSingleRunningNotesApp;
+ (bool)legacyNotesDisabled;
+ (void)markOldTrashedNotesForDeletionInContext:(id)arg1;
+ (id)searchIndexerDataSource;
+ (void)setLegacyNotesDisabled:(bool)arg1;
+ (id)sharedContext;
+ (void)startSharedContextWithOptions:(unsigned long long)arg1;
+ (bool)updateSharedStateFile:(id)arg1 toState:(bool)arg2 error:(id*)arg3;

- (void).cxx_destruct;
- (id)accountName;
- (id)accountUtilities;
- (void)accountsDidChange:(id)arg1;
- (void)addOrDeleteLocalAccountIfNecessary;
- (id)allICloudACAccounts;
- (void)applicationWillTerminate;
- (id)backgroundTaskQueue;
- (bool)canBeSharedViaICloud;
- (void)clearPersistentContainer;
- (void)cloudContextFetchRecordChangeOperationDidFinish:(id)arg1;
- (unsigned long long)contextOptions;
- (id)crossProcessChangeCoordinator;
- (id)currentNote;
- (id)databaseOpenError;
- (bool)databaseOpenFailedDueToLowDiskSpace;
- (void)dealloc;
- (bool)delaySaving;
- (void)deleteEverything;
- (void)destroyPersistentStore;
- (id)fetchedResultsControllerForFetchRequest:(id)arg1 sectionNameKeyPath:(id)arg2;
- (bool)hasAnyContextOptions:(unsigned long long)arg1;
- (bool)hasContextOptions:(unsigned long long)arg1;
- (id)initWithOptions:(unsigned long long)arg1;
- (bool)isDeleted;
- (bool)isSaving;
- (id)managedObjectContext;
- (void)managedObjectContextDidSave:(id)arg1;
- (id)newFetchedResultsControllerForAllAccounts;
- (id)newFetchedResultsControllerForAllFoldersIncludingHiddenNoteContainers:(bool)arg1;
- (id)newFetchedResultsControllerForAllNoteContainersWithPredicate:(id)arg1;
- (id)newFetchedResultsControllerForAllRegularFoldersAndAccounts;
- (id)newWorkerManagedObjectContext;
- (id)noteContainerAccount;
- (bool)noteIsVisible:(id)arg1;
- (id)noteVisibilityTestingForSearchingAccount;
- (id)persistentContainer;
- (id)persistentContainerQueue;
- (id)persistentStoreCoordinator;
- (void)postMoveUpdateChangeCountForNote:(id)arg1;
- (id)predicateForPinnedNotes;
- (id)predicateForRegularFoldersAndAccounts;
- (id)predicateForSearchableAttachments;
- (id)predicateForSearchableNotes;
- (id)predicateForVisibleNotes;
- (id)primaryICloudACAccount;
- (void)purgeDeletedObjectsInManagedObjectContext:(id)arg1;
- (void)purgeEverything;
- (bool)recoverFromSaveError;
- (void)refreshAll;
- (void)reloadPersistentContainer;
- (bool)save;
- (bool)save:(id*)arg1;
- (void)saveAndClearDecryptedDataIfNecessary;
- (bool)saveImmediately;
- (void)setAccountUtilities:(id)arg1;
- (void)setBackgroundTaskQueue:(id)arg1;
- (void)setContextOptions:(unsigned long long)arg1;
- (void)setCrossProcessChangeCoordinator:(id)arg1;
- (void)setCurrentNote:(id)arg1;
- (void)setDatabaseOpenError:(id)arg1;
- (void)setDatabaseOpenFailedDueToLowDiskSpace:(bool)arg1;
- (void)setDelaySaving:(bool)arg1;
- (void)setManagedObjectContext:(id)arg1;
- (void)setSaving:(bool)arg1;
- (void)setTrashDeletionTimer:(id)arg1;
- (void)setUpdateAttachmentLocationsTimer:(id)arg1;
- (void)setXpcStoreCrossProcessListener:(id)arg1;
- (void)setupCrossProcessChangeCoordinator;
- (void)setupTrashDeletionTimer;
- (void)startSearchIndexerChangeObservingIfNecessary;
- (bool)supportsEditingNotes;
- (bool)supportsVisibilityTestingType:(long long)arg1;
- (id)titleForNavigationBar;
- (id)titleForTableViewCell;
- (id)trashDeletionTimer;
- (id)updateAttachmentLocationsTimer;
- (id)visibleNotes;
- (unsigned long long)visibleNotesCount;
- (id)xpcStoreCrossProcessListener;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKPeerInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameKitServices.framework/GKPeerInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices (1475.1.8)
 */

@interface GKPeerInternal : NSObject <GKTableCleanupWhenRemoved> {
    id * _addrList;
    double  _connectTimeout;
    NSString * _displayName;
    unsigned int * _interfaceList;
    bool  _isBusy;
    int  _lookupServiceCount;
    struct _DNSServiceRef_t {} ** _lookupServiceList;
    int  _lookupServiceSize;
    bool  _moreResolvesComing;
    bool  _needsToTimeout;
    unsigned int  _pid;
    struct _DNSServiceRef_t { } * _resolveService;
    int  _serviceCount;
    NSString * _serviceName;
    unsigned int  _servicePort;
    GKSessionInternal * _session;
    struct _DNSServiceRef_t { } * _txtRecordService;
}

@property (getter=isBusy) bool busy;
@property double connectTimeout;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) NSString *displayName;
@property (readonly) unsigned long long hash;
@property bool moreResolvesComing;
@property bool needsToTimeout;
@property (readonly) unsigned int pid;
@property struct _DNSServiceRef_t { }*resolveService;
@property int serviceCount;
@property (readonly) NSString *serviceName;
@property unsigned int servicePort;
@property (nonatomic, retain) GKSessionInternal *session;
@property (readonly) Class superclass;
@property struct _DNSServiceRef_t { }*txtRecordService;

+ (void)freeLookupList:(struct _DNSServiceRef_t {}**)arg1 andAddrList:(id*)arg2 andInterfaceList:(unsigned int*)arg3 count:(int)arg4;

- (void)addLookup:(struct _DNSServiceRef_t { }*)arg1;
- (void)cleanupForGKTable:(id)arg1;
- (void)clearResolving;
- (double)connectTimeout;
- (bool)containsLookupService:(struct _DNSServiceRef_t { }*)arg1;
- (void)copyLookupList:(struct _DNSServiceRef_t {}***)arg1 count:(int*)arg2;
- (void)dealloc;
- (id)displayName;
- (id)initWithPID:(unsigned int)arg1 displayName:(id)arg2 serviceName:(id)arg3;
- (bool)isBusy;
- (bool)moreResolvesComing;
- (bool)needsToTimeout;
- (unsigned int)pid;
- (void)removeAndReturnLookupList:(struct _DNSServiceRef_t {}***)arg1 andAddrList:(id**)arg2 andInterfaceList:(unsigned int**)arg3 count:(int*)arg4;
- (struct _DNSServiceRef_t { }*)resolveService;
- (int)serviceCount;
- (id)serviceName;
- (unsigned int)servicePort;
- (id)session;
- (void)setAddr:(const struct sockaddr_in { unsigned char x1; unsigned char x2; unsigned short x3; struct in_addr { unsigned int x_4_1_1; } x4; BOOL x5[8]; }*)arg1 interface:(unsigned int)arg2 forLookupService:(struct _DNSServiceRef_t { }*)arg3;
- (void)setBusy:(bool)arg1;
- (void)setConnectTimeout:(double)arg1;
- (void)setMoreResolvesComing:(bool)arg1;
- (void)setNeedsToTimeout:(bool)arg1;
- (void)setResolveService:(struct _DNSServiceRef_t { }*)arg1;
- (void)setServiceCount:(int)arg1;
- (void)setServicePort:(unsigned int)arg1;
- (void)setSession:(id)arg1;
- (void)setTxtRecordService:(struct _DNSServiceRef_t { }*)arg1;
- (void)stopResolving;
- (void)stopTXTRecordMonitoring;
- (bool)tryDetruncateDisplayName:(id)arg1;
- (struct _DNSServiceRef_t { }*)txtRecordService;
- (int)usableAddrs;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

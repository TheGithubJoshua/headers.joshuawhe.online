<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKVoiceChatServiceFocus.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameKitServices.framework/GKVoiceChatServiceFocus.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices (1475.1.8)
 */

@interface GKVoiceChatServiceFocus : GKVoiceChatServicePrivate {
    NSString * currentFocus;
    bool  hasMic;
    NSMutableArray * incomingCallDictList;
    long long  incomingUID;
    NSMutableArray * outgoingCallDictList;
    int  packetsPerBundle;
}

@property (nonatomic, copy) NSString *currentFocus;
@property bool hasMic;
@property int packetsPerBundle;

+ (id)defaultVoiceChatService;

- (bool)acceptCallID:(unsigned int)arg1 error:(id*)arg2;
- (id)currentFocus;
- (void)dealloc;
- (void)denyCallID:(unsigned int)arg1;
- (id)dictionaryForCallID:(unsigned int)arg1 isIncomingDictonary:(bool)arg2;
- (id)dictionaryForNonce:(long long)arg1 participantID:(id)arg2 isIncomingDictonary:(bool)arg3;
- (id)dictionaryForParticipantID:(id)arg1 isIncomingDictonary:(bool)arg2;
- (bool)hasMic;
- (id)incomingDictionaryMatchingOriginalCallID:(unsigned int)arg1 participantID:(id)arg2;
- (id)init;
- (bool)isAudioPausedToParticipantID:(id)arg1;
- (double)localBitrate;
- (id)localDisplayNameForCallID:(unsigned int)arg1;
- (double)localFramerate;
- (void*)localVideoLayer;
- (id)openOutgoingDictionaryForParticipantID:(id)arg1;
- (int)packetsPerBundle;
- (void)pauseAudio:(bool)arg1 toParticipantID:(id)arg2;
- (bool)processCancelDict:(id)arg1;
- (bool)processFocusChange:(id)arg1 fromParticipantID:(id)arg2;
- (bool)processFocusDict:(id)arg1 fromParticipantID:(id)arg2;
- (bool)processInviteDictionary:(id)arg1 fromParticipantID:(id)arg2;
- (bool)processInviteDictionaryForTie:(id)arg1 fromParticipantID:(id)arg2;
- (bool)processReplyDict:(id)arg1;
- (void)receivedData:(id)arg1 fromParticipantID:(id)arg2;
- (double)remoteBitrate;
- (void)remoteCancelled:(id)arg1;
- (void)remoteCancelledProc:(id)arg1;
- (id)remoteDisplayNameForCallID:(unsigned int)arg1;
- (double)remoteFramerate;
- (void*)remoteVideoLayer;
- (void)sendFocusChange:(bool)arg1;
- (void)setChatMode:(int)arg1;
- (void)setCurrentFocus:(id)arg1;
- (void)setFocus:(bool)arg1;
- (void)setHasMic:(bool)arg1;
- (void)setIsUsingSuppression:(bool)arg1;
- (void)setLocalVideoLayer:(void*)arg1;
- (void)setPacketsPerBundle:(int)arg1;
- (void)setQualityDelegate:(id)arg1;
- (void)setRemoteVideoLayer:(void*)arg1;
- (void)setShouldTimeoutPackets:(bool)arg1;
- (void)setSpeakingDelegate:(id)arg1;
- (void)setTalkingPeersLimit:(unsigned int)arg1;
- (bool)startVoiceChatWithParticipantID:(id)arg1 error:(id*)arg2;
- (void)stopVoiceChatProc:(id)arg1;
- (void)stopVoiceChatProc:(id)arg1 participantDidCancel:(bool)arg2;
- (void)updatedConnectedPeers:(id)arg1;
- (void)updatedMutedPeers:(id)arg1 forParticipantID:(id)arg2;
- (void)videoConference:(id)arg1 didStartSession:(bool)arg2 withCallID:(unsigned int)arg3 error:(id)arg4;
- (void)videoConference:(id)arg1 didStopWithCallID:(unsigned int)arg2 error:(id)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

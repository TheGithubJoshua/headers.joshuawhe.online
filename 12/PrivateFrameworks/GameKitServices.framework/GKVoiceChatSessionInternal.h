<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKVoiceChatSessionInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameKitServices.framework/GKVoiceChatSessionInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices (1475.1.8)
 */

@interface GKVoiceChatSessionInternal : NSObject <GKSessionVoiceChatDelegate, GKVoiceChatClient, InterfaceListenerDelegate, VideoConferenceSpeakingDelegate> {
    unsigned int  _conferenceID;
    NSMutableArray * _connectedFocusPeers;
    NSMutableArray * _connectedPeers;
    NSMutableArray * _connectedVoicePeers;
    bool  _currentWifiState;
    GKSessionInternal * _gkSession;
    NSMutableArray * _mutedPeers;
    NSMutableArray * _myPausedList;
    NSMutableDictionary * _peerChannelQuality;
    NSString * _peerID;
    id  _publicWrapper;
    VoiceChatSessionRoster * _roster;
    GKRWLock * _rwLock;
    NSObject<OS_dispatch_queue> * _sendQueue;
    NSString * _sessionName;
    unsigned int  _sessionState;
    GKVoiceChatServiceFocus * _vcService;
    GKInterfaceListener * _wifiListener;
    bool  activeSession;
    unsigned int  congestionState;
    <GKVoiceChatSessionDelegate> * delegate;
    bool  focusCallbacks;
    int  goodChannels;
    bool  isUsingSuppression;
    bool  needsRecalculateGoodChannels;
    float  sessionVolume;
    unsigned int  talkingPeersLimit;
}

@property (getter=isActiveSession) bool activeSession;
@property (nonatomic, readonly) unsigned int conferenceID;
@property (readonly, copy) NSString *debugDescription;
@property <GKVoiceChatSessionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property bool isUsingSuppression;
@property (readonly) NSArray *peerList;
@property (nonatomic, readonly) NSString *sessionName;
@property float sessionVolume;
@property (readonly) Class superclass;
@property unsigned int talkingPeersLimit;

+ (void)brokenHash:(id)arg1 response:(char *)arg2;

- (void)addPeerToFocusPausedList:(id)arg1;
- (int)calculateChannelQualities;
- (void)calculateConferenceID;
- (void)cleanup;
- (void)cleanupProc:(id)arg1;
- (unsigned int)conferenceID;
- (void)dealloc;
- (id)decodePeerID:(id)arg1;
- (id)delegate;
- (void)didStartSpeaking:(id)arg1;
- (void)didStopSpeaking:(id)arg1;
- (id)encodePeerID:(id)arg1;
- (bool)getMuteStateForPeer:(id)arg1;
- (int)goodChannels;
- (void)handlePeerDisconnected:(id)arg1;
- (void)informClientVoiceChatConnecting:(id)arg1;
- (void)informClientVoiceChatCouldNotConnect:(id)arg1;
- (void)informClientVoiceChatDidStart:(id)arg1;
- (void)informClientVoiceChatDidStop:(id)arg1;
- (void)informClientVoiceChatFocusChange:(id)arg1;
- (void)informClientVoiceChatSilent:(id)arg1;
- (void)informClientVoiceChatSpeaking:(id)arg1;
- (id)initWithGKSession:(id)arg1 publicWrapper:(id)arg2 sessionName:(id)arg3;
- (void)interfaceStateDidChangeWithWifiUp:(bool)arg1 cellUp:(bool)arg2;
- (bool)isActiveSession;
- (bool)isEqual:(id)arg1;
- (bool)isUsingSuppression;
- (void)lossRate:(float)arg1 forParticipantID:(id)arg2;
- (void)networkStateDidChange;
- (void)parseConnectedPeers:(id)arg1;
- (void)parseMutedPeers:(id)arg1 forPeer:(id)arg2;
- (id)participantID;
- (void)pauseAll;
- (unsigned int)peerCount;
- (id)peerList;
- (void)pruneBadLinks;
- (void)removeFromFocusPausedList:(id)arg1;
- (void)sendConnectedPeers;
- (void)sendMutedPeers;
- (void)session:(id)arg1 didReceiveAudioPacket:(id)arg2 fromPeerID:(id)arg3;
- (void)session:(id)arg1 didReceiveOOBAudioPacket:(id)arg2 fromPeerID:(id)arg3;
- (void)session:(id)arg1 peer:(id)arg2 didChangeState:(int)arg3;
- (id)sessionName;
- (float)sessionVolume;
- (void)setActiveSession:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIsUsingSuppression:(bool)arg1;
- (void)setMute:(bool)arg1 forPeer:(id)arg2;
- (void)setSessionVolume:(float)arg1;
- (void)setTalkingPeersLimit:(unsigned int)arg1;
- (void)startSession;
- (void)startSessionInternal;
- (void)stopSession;
- (void)stopSessionInternal;
- (unsigned int)talkingPeersLimit;
- (void)unPauseAll;
- (void)updatedConnectedPeers:(id)arg1;
- (void)updatedFocusID:(unsigned int)arg1;
- (void)updatedFocusPeers:(id)arg1;
- (void)updatedMutedPeers:(id)arg1 forPeer:(id)arg2;
- (void)updatedSubscribedBeaconList:(id)arg1;
- (void)voiceChatService:(id)arg1 didNotStartWithParticipantID:(id)arg2 error:(id)arg3;
- (void)voiceChatService:(id)arg1 didReceiveInvitationFromParticipantID:(id)arg2 callID:(unsigned int)arg3;
- (void)voiceChatService:(id)arg1 didStartWithParticipantID:(id)arg2;
- (void)voiceChatService:(id)arg1 didStopWithParticipantID:(id)arg2 error:(id)arg3;
- (void)voiceChatService:(id)arg1 sendData:(id)arg2 toParticipantID:(id)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

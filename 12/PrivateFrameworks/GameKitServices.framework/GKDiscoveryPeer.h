<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GKDiscoveryPeer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/GameKitServices.framework/GKDiscoveryPeer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices (1475.1.8)
 */

@interface GKDiscoveryPeer : NSObject <GKSimpleTimerDelegate> {
    NSMutableArray * _attemptedInterfaces;
    NSNumber * _chosenInterface;
    GKDiscoveryPeerConnection * _connection;
    NSString * _deviceID;
    double  _discoveryTimeStamp;
    NSMutableSet * _interfaces;
    NSMutableArray * _orderedInterfaces;
    NSString * _playerID;
    id /* block */  _resolveTimeoutHandler;
    GKSimpleTimer * _resolveTimer;
    NSMutableArray * _sendDataBuffer;
    NSString * _serviceName;
    bool  _shouldSignalDiscovery;
    int  _state;
    NSObject<OS_dispatch_queue> * _syncQueue;
    GKDiscoveryPeerConnection * _trialConnection;
}

@property (nonatomic, retain) NSMutableArray *attemptedInterfaces;
@property (nonatomic, retain) NSNumber *chosenInterface;
@property (nonatomic, retain) GKDiscoveryPeerConnection *connection;
@property (nonatomic, copy) NSString *deviceID;
@property (nonatomic) double discoveryTimeStamp;
@property (nonatomic, retain) NSMutableSet *interfaces;
@property (nonatomic, retain) NSMutableArray *orderedInterfaces;
@property (nonatomic, copy) NSString *playerID;
@property (nonatomic, copy) id /* block */ resolveTimeoutHandler;
@property (nonatomic, retain) GKSimpleTimer *resolveTimer;
@property (nonatomic, retain) NSMutableArray *sendDataBuffer;
@property (nonatomic, copy) NSString *serviceName;
@property (nonatomic) bool shouldSignalDiscovery;
@property (nonatomic) int state;
@property (nonatomic, readonly, retain) NSObject<OS_dispatch_queue> *syncQueue;
@property (nonatomic, retain) GKDiscoveryPeerConnection *trialConnection;

- (id)attemptedInterfaces;
- (id)chosenInterface;
- (void)cleanUpForBrowse;
- (id)connection;
- (void)dealloc;
- (id)description;
- (id)deviceID;
- (void)didLoseInterface:(id)arg1;
- (double)discoveryTimeStamp;
- (void)flushDataBuffer;
- (id)initWithServiceName:(id)arg1;
- (id)interfaces;
- (void)invalidate;
- (id)nextInterfaceIndex;
- (id)orderedInterfaces;
- (bool)parseServiceNameForInit:(id)arg1;
- (id)playerID;
- (id /* block */)resolveTimeoutHandler;
- (id)resolveTimer;
- (void)sendData:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)sendDataBuffer;
- (id)serviceName;
- (void)setAttemptedInterfaces:(id)arg1;
- (void)setChosenInterface:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setDeviceID:(id)arg1;
- (void)setDiscoveryTimeStamp:(double)arg1;
- (void)setInterfaces:(id)arg1;
- (void)setOrderedInterfaces:(id)arg1;
- (void)setPlayerID:(id)arg1;
- (void)setResolveTimeoutHandler:(id /* block */)arg1;
- (void)setResolveTimer:(id)arg1;
- (void)setSendDataBuffer:(id)arg1;
- (void)setServiceName:(id)arg1;
- (void)setShouldSignalDiscovery:(bool)arg1;
- (void)setState:(int)arg1;
- (void)setTrialConnection:(id)arg1;
- (bool)shouldSignalDiscovery;
- (void)startResolveTimerWithHandler:(id /* block */)arg1;
- (int)state;
- (void)stopResolveTimer;
- (id)stringForState:(int)arg1;
- (id)syncQueue;
- (void)timeout:(id)arg1;
- (id)trialConnection;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

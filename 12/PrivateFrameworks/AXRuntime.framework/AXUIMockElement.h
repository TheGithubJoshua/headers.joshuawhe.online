<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AXUIMockElement.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AXRuntime.framework/AXUIMockElement.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime (1)
 */

@interface AXUIMockElement : AXUIElement <NSCopying> {
    NSMutableDictionary * _attributes;
    id /* block */  _cacheUpdatedCallback;
    NSMutableDictionary * _performActionLog;
    bool  _usesCarriageReturnAsLinesSeparator;
    NSMutableDictionary * _writableAttributes;
}

@property (nonatomic, retain) NSMutableDictionary *attributes;
@property (nonatomic, copy) id /* block */ cacheUpdatedCallback;
@property (nonatomic) bool usesCarriageReturnAsLinesSeparator;

+ (void)applyElementAttributeCacheScheme:(unsigned long long)arg1;
+ (id)uiElementAtCoordinate:(struct CGPoint { double x1; double x2; })arg1;

- (void).cxx_destruct;
- (unsigned long long)_lineNumberForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (id)_valueForAttribute:(long long)arg1;
- (unsigned long long)arrayCountWithAXAttribute:(long long)arg1;
- (id)arrayWithAXAttribute:(long long)arg1;
- (id)attributes;
- (struct __AXUIElement { }*)axElement;
- (bool)boolWithAXAttribute:(long long)arg1;
- (id /* block */)cacheUpdatedCallback;
- (id)cachedAttributes;
- (bool)canPerformAXAction:(int)arg1;
- (bool)canSetAXAttribute:(long long)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)disableCache;
- (void)enableCache:(bool)arg1;
- (id)endLoggingActions;
- (void)fillStaticCache;
- (float)floatWithAXAttribute:(long long)arg1;
- (unsigned long long)hash;
- (id)init;
- (bool)isEqual:(id)arg1;
- (bool)isMockElement;
- (bool)isValid;
- (bool)isValidForApplication:(id)arg1;
- (long long)longWithAXAttribute:(long long)arg1;
- (id)nextElementsWithCount:(unsigned long long)arg1;
- (id)numberWithAXAttribute:(long long)arg1;
- (id)objectWithAXAttribute:(long long)arg1;
- (id)objectWithAXAttribute:(long long)arg1 parameter:(void*)arg2;
- (struct CGPath { }*)pathWithAXAttribute:(long long)arg1;
- (bool)performAXAction:(int)arg1;
- (bool)performAXAction:(int)arg1 withValue:(id)arg2;
- (id)performBlockWhileLoggingPerformedActions:(id /* block */)arg1;
- (int)pid;
- (struct CGPoint { double x1; double x2; })pointForLineNumber:(unsigned long long)arg1;
- (struct CGPoint { double x1; double x2; })pointWithAXAttribute:(long long)arg1;
- (id)previousElementsWithCount:(unsigned long long)arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeWithAXAttribute:(long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })rectWithAXAttribute:(long long)arg1;
- (void)setAXAttribute:(long long)arg1 withArray:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withBOOL:(bool)arg2;
- (void)setAXAttribute:(long long)arg1 withFloat:(float)arg2;
- (void)setAXAttribute:(long long)arg1 withLong:(long long)arg2;
- (void)setAXAttribute:(long long)arg1 withNumber:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withObject:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withObject:(id)arg2 synchronous:(bool)arg3;
- (void)setAXAttribute:(long long)arg1 withPoint:(struct CGPoint { double x1; double x2; })arg2;
- (void)setAXAttribute:(long long)arg1 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)setAXAttribute:(long long)arg1 withSize:(struct CGSize { double x1; double x2; })arg2;
- (void)setAXAttribute:(long long)arg1 withString:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withUIElement:(id)arg2;
- (void)setAXAttribute:(long long)arg1 withUIElementArray:(id)arg2;
- (void)setAttributes:(id)arg1;
- (void)setCacheUpdatedCallback:(id /* block */)arg1;
- (void)setUsesCarriageReturnAsLinesSeparator:(bool)arg1;
- (void)setValue:(id)arg1 forAXAttribute:(long long)arg2;
- (void)setValue:(id)arg1 forAXParameterizedAttribute:(long long)arg2;
- (void)setWritable:(bool)arg1 forAXAttribute:(long long)arg2;
- (struct CGSize { double x1; double x2; })sizeWithAXAttribute:(long long)arg1;
- (void)startLoggingActions;
- (id)stringWithAXAttribute:(long long)arg1;
- (id)uiElementArrayForAXAttribute:(long long)arg1;
- (id)uiElementWithAXAttribute:(long long)arg1;
- (id)uiElementsWithAttribute:(long long)arg1;
- (id)uiElementsWithAttribute:(long long)arg1 parameter:(void*)arg2;
- (id)uiElementsWithAttribute:(long long)arg1 parameter:(void*)arg2 fetchAttributes:(bool)arg3;
- (void)updateCache:(long long)arg1;
- (void)updateCacheWithAttributes:(id)arg1;
- (id)urlWithAXAttribute:(long long)arg1;
- (bool)usesCarriageReturnAsLinesSeparator;
- (id)visibleElements;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

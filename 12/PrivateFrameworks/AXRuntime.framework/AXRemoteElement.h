<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AXRemoteElement.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AXRuntime.framework/AXRemoteElement.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime (1)
 */

@interface AXRemoteElement : NSObject {
    id  _accessibilityContainer;
    NSMutableSet * _allChildren;
    unsigned int  _contextId;
    bool  _deniesDirectAppConnection;
    unsigned int  _machPort;
    bool  _onClientSide;
    <AXRemoteElementChildrenDelegate> * _remoteChildrenDelegate;
    int  _remotePid;
    NSString * _uuid;
}

@property (nonatomic) id accessibilityContainer;
@property (nonatomic) unsigned int contextId;
@property (nonatomic) bool deniesDirectAppConnection;
@property (nonatomic) unsigned int machPort;
@property (nonatomic) bool onClientSide;
@property (nonatomic) <AXRemoteElementChildrenDelegate> *remoteChildrenDelegate;
@property (nonatomic) int remotePid;
@property (nonatomic, retain) NSString *uuid;
@property (nonatomic, readonly) unsigned long long uuidHash;

// Image: /System/Library/PrivateFrameworks/AXRuntime.framework/AXRuntime

+ (void)initialize;
+ (bool)registerRemoteElement:(id)arg1;
+ (id)remoteElementForBlock:(id /* block */)arg1;
+ (id)remoteElementsForBlock:(id /* block */)arg1;
+ (id)remoteElementsForContextId:(unsigned int)arg1;

- (void).cxx_destruct;
- (id)_accessibilityActiveKeyboard;
- (id)_accessibilityFirstElement;
- (void)_accessibilityIncreaseSelection:(id)arg1;
- (id)_accessibilityLastElement;
- (id)_accessibilityResponderElement;
- (id)_accessibilitySortedElementsWithin;
- (id)_accessibilityTextOperations;
- (id)_accessibilityTextViewTextOperationResponder;
- (id)_remoteElementWithAttribute:(long long)arg1 limitToRemoteSubviews:(bool)arg2;
- (id)accessibilityContainer;
- (id)accessibilityElements;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })accessibilityFrame;
- (unsigned int)contextId;
- (void)dealloc;
- (bool)deniesDirectAppConnection;
- (id)description;
- (void)getLeafElementsFromRemoteSide:(id /* block */)arg1;
- (id)initWithUUID:(id)arg1 andRemotePid:(int)arg2 andContextId:(unsigned int)arg3;
- (unsigned int)machPort;
- (bool)onClientSide;
- (void)platformCleanup;
- (id)remoteChildrenDelegate;
- (int)remotePid;
- (void)setAccessibilityContainer:(id)arg1;
- (void)setContextId:(unsigned int)arg1;
- (void)setDeniesDirectAppConnection:(bool)arg1;
- (void)setMachPort:(unsigned int)arg1;
- (void)setOnClientSide:(bool)arg1;
- (void)setRemoteChildrenDelegate:(id)arg1;
- (void)setRemotePid:(int)arg1;
- (void)setUuid:(id)arg1;
- (void)unregister;
- (id)uuid;
- (unsigned long long)uuidHash;

// Image: /System/Library/PrivateFrameworks/UIAccessibility.framework/UIAccessibility

- (bool)_accessibilityEnumerateSiblingsWithParent:(id*)arg1 options:(id)arg2 usingBlock:(id /* block */)arg3;
- (bool)_accessibilityIsRemoteElement;
- (id)_ancestorElementThatSupportsActivationAction;
- (bool)accessibilityActivate;
- (id)accessibilityAttributeValue:(long long)arg1;
- (id)accessibilityAttributeValue:(long long)arg1 forParameter:(id)arg2;
- (bool)accessibilityViewIsModal;
- (void)platformCleanup;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

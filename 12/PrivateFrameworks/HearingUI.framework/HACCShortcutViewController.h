<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HACCShortcutViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HearingUI.framework/HACCShortcutViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AXHearingSupport.framework/AXHearingSupport (1)
 */

@interface HACCShortcutViewController : UIViewController <HACCContentModuleDelegate, UIGestureRecognizerDelegate> {
    MTMaterialView * _backgroundView;
    struct CGPoint { 
        double x; 
        double y; 
    }  _backgroundViewDismissalOrigin;
    bool  _bluetoothAvailable;
    CCUIContentModuleContext * _contentModuleContext;
    AXRemoteHearingAidDevice * _currentHearingDevice;
    <AXHAShortcutUpdateProtocol> * _delegate;
    double  _dismissalGestureYOffset;
    bool  _expanded;
    HACCContentViewController * _expandedController;
    NSMutableDictionary * _gridToModuleMap;
    HACCChevronView * _headerChevronView;
    NSMutableDictionary * _moduleToPointMap;
    NSMutableDictionary * _moduleToViewControllerMap;
    UIPanGestureRecognizer * _panRecognizer;
    UIView * _platterView;
    UIScrollView * _scrollView;
    NSMutableArray * _separatorViews;
    UITapGestureRecognizer * _tapRecognizer;
}

@property (nonatomic, retain) MTMaterialView *backgroundView;
@property (nonatomic) bool bluetoothAvailable;
@property (nonatomic, retain) CCUIContentModuleContext *contentModuleContext;
@property (nonatomic, retain) AXRemoteHearingAidDevice *currentHearingDevice;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <AXHAShortcutUpdateProtocol> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isExpanded, nonatomic) bool expanded;
@property (nonatomic) HACCContentViewController *expandedController;
@property (nonatomic, retain) NSMutableDictionary *gridToModuleMap;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HACCChevronView *headerChevronView;
@property (nonatomic, retain) NSMutableDictionary *moduleToPointMap;
@property (nonatomic, retain) NSMutableDictionary *moduleToViewControllerMap;
@property (nonatomic, retain) UIPanGestureRecognizer *panRecognizer;
@property (nonatomic, retain) UIView *platterView;
@property (nonatomic, retain) UIScrollView *scrollView;
@property (nonatomic, retain) NSMutableArray *separatorViews;
@property (readonly) Class superclass;
@property (nonatomic, retain) UITapGestureRecognizer *tapRecognizer;

- (void).cxx_destruct;
- (void)_cancelDismissalWithPanGesture:(id)arg1;
- (void)_endDismissalWithPanGesture:(id)arg1;
- (void)_handlePanGestureRecognizer:(id)arg1;
- (void)_handleTapGestureRecognizer:(id)arg1;
- (void)_updateDismissalWithPanGesture:(id)arg1;
- (void)_updateViewForDismissalPercentage:(double)arg1;
- (bool)animateAlongsideTransition:(id /* block */)arg1 completion:(id /* block */)arg2;
- (id)backgroundView;
- (void)bluetoothAvailabilityDidChange:(id)arg1;
- (bool)bluetoothAvailable;
- (void)content:(id)arg1 shouldPreview:(bool)arg2 withController:(id)arg3 andCompletion:(id /* block */)arg4;
- (void)contentCategoryDidChange:(id)arg1;
- (id)contentModuleContext;
- (void)controlDidActivate:(id)arg1;
- (id)currentHearingDevice;
- (id)delegate;
- (id)expandedController;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)gridToModuleMap;
- (id)headerChevronView;
- (id)initWithDelegate:(id)arg1;
- (bool)isExpanded;
- (id)moduleToPointMap;
- (id)moduleToViewControllerMap;
- (unsigned long long)numberOfColumnsForSize:(struct CGSize { double x1; double x2; })arg1;
- (id)panRecognizer;
- (id)platterView;
- (double)preferredContentWidth;
- (double)preferredExpandedContentHeight;
- (id)scrollView;
- (id)separatorViews;
- (void)setAlpha:(double)arg1 forAllModulesExcept:(id)arg2;
- (void)setBackgroundView:(id)arg1;
- (void)setBluetoothAvailable:(bool)arg1;
- (void)setContentModuleContext:(id)arg1;
- (void)setCurrentHearingDevice:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setExpanded:(bool)arg1;
- (void)setExpandedController:(id)arg1;
- (void)setGridToModuleMap:(id)arg1;
- (void)setHeaderChevronView:(id)arg1;
- (void)setModuleToPointMap:(id)arg1;
- (void)setModuleToViewControllerMap:(id)arg1;
- (void)setPanRecognizer:(id)arg1;
- (void)setPlatterView:(id)arg1;
- (void)setScrollView:(id)arg1;
- (void)setSeparatorViews:(id)arg1;
- (void)setTapRecognizer:(id)arg1;
- (bool)shouldDisplayControlForModule:(unsigned long long)arg1;
- (bool)shouldDrawBackground;
- (id)tapRecognizer;
- (void)updateAvailableControlsForSize:(struct CGSize { double x1; double x2; })arg1;
- (void)updateView;
- (void)updateViewForProperties:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

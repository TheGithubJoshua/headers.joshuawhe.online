<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNVCardParser.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/vCard.framework/CNVCardParser.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/vCard.framework/vCard ()
 */

@interface CNVCardParser : NSObject {
    bool  _30vCard;
    NSMutableDictionary * _activityAlerts;
    NSMutableArray * _addresses;
    NSDateComponents * _altBday;
    bool  _base64;
    NSDateComponents * _bday;
    NSMutableArray * _calendarURIs;
    NSString * _carddavUID;
    NSMutableArray * _cropRects;
    NSData * _data;
    NSMutableArray * _dateComponents;
    CNVCardDateComponentsParser * _dateComponentsParser;
    unsigned long long  _defaultEncoding;
    NSMutableArray * _emails;
    unsigned long long  _encoding;
    NSMutableDictionary * _extensions;
    bool  _fullNameHasZeroLength;
    NSString * _grouping;
    bool  _hasImportErrors;
    NSData * _imageData;
    NSString * _imageGroup;
    NSString * _imageReference;
    NSMutableArray * _instantMessagingAddresses;
    NSArray * _itemParameters;
    CNVCardLexer * _lexer;
    CNVCardMutableNameComponents * _nameComponents;
    NSMutableString * _notes;
    CNVCardReadingOptions * _options;
    CNVCardSelectorMap * _parameterSelectorMap;
    CNVCardSelectorMap * _parsingSelectorMap;
    NSMutableArray * _phones;
    bool  _quotedPrintable;
    NSMutableArray * _relatedNames;
    <CNVCardParsedResultBuilder> * _resultBuilder;
    NSMutableArray * _socialProfiles;
    NSString * _uid;
    NSMutableArray * _unknowns;
    NSMutableArray * _urls;
}

@property (nonatomic, copy) NSData *imageData;
@property (nonatomic, readonly) CNVCardReadingOptions *options;
@property (nonatomic, readonly) <CNVCardParsedResultBuilder> *resultBuilder;

+ (unsigned long long)countOfCardsInData:(id)arg1;
+ (unsigned long long)inferredStringEncodingFromData:(id)arg1;
+ (id)newParameterSelectorMap;
+ (id)newParsingSelectorMap;
+ (id)parseData:(id)arg1 options:(id)arg2 resultFactory:(id)arg3;
+ (id)parseData:(id)arg1 resultFactory:(id)arg2;
+ (bool)parseFirstResultInData:(id)arg1 resultBuilder:(id)arg2;

- (void).cxx_destruct;
- (bool)advancePastSemicolon;
- (bool)atEOF;
- (void)cleanUpCardState;
- (long long)currentPosition;
- (id)fallbackLabelForProperty:(id)arg1;
- (id)firstCustomLabelForProperty:(id)arg1 types:(id)arg2;
- (id)firstParameterWithName:(id)arg1;
- (id)firstValueForKey:(id)arg1 inExtension:(id)arg2;
- (id)firstValueForKey:(id)arg1 inExtensionGroup:(id)arg2;
- (id)firstValueForParameterWithName:(id)arg1;
- (id)genericLabelForProperty:(id)arg1;
- (SEL)handlerSelectorForParameterName:(id)arg1;
- (bool)hasImportErrors;
- (id)imageData;
- (id)initWithData:(id)arg1;
- (id)initWithData:(id)arg1 options:(id)arg2;
- (id)makeLineWithLabel:(id)arg1 value:(id)arg2;
- (id)makeLineWithValue:(id)arg1 forProperty:(id)arg2;
- (id)nextBase64Data;
- (id)nextParameterInCurrentLine;
- (id)nextResultWithFactory:(id)arg1 progressLength:(long long*)arg2;
- (id)options;
- (id)parameterValuesForName:(id)arg1;
- (void)parameter_BASE64:(id)arg1;
- (void)parameter_CHARSET:(id)arg1;
- (void)parameter_ENCODING:(id)arg1;
- (void)parameter_QUOTED_PRINTABLE:(id)arg1;
- (id)parseArrayValue;
- (id)parseBase64Data;
- (bool)parseExtension:(id)arg1;
- (bool)parseInstantMessageValueWithService:(id)arg1;
- (bool)parseLine;
- (bool)parseNextResultUsingResultBuilder:(id)arg1;
- (id)parseParameterValues;
- (id)parseParameters;
- (id)parseRemainingLine;
- (id)parseStringValue;
- (id)parseUnknownValueStartingAtPosition:(unsigned long long)arg1;
- (bool)parseValueUsingSelector:(SEL)arg1;
- (bool)parse_ADD;
- (bool)parse_ADR;
- (bool)parse_BDAY;
- (bool)parse_CALURI;
- (bool)parse_EMAIL;
- (bool)parse_FN;
- (bool)parse_IMPP;
- (bool)parse_N;
- (bool)parse_NICKNAME;
- (bool)parse_NOTE;
- (bool)parse_ORG;
- (bool)parse_PHOTO;
- (bool)parse_PRODID;
- (bool)parse_REV;
- (bool)parse_TEL;
- (bool)parse_TITLE;
- (bool)parse_UID;
- (bool)parse_URL;
- (bool)parse_VERSION;
- (bool)parse_X_ABADR;
- (bool)parse_X_ABDATE;
- (bool)parse_X_ABLABEL;
- (bool)parse_X_ABORDER;
- (bool)parse_X_ABPHOTO;
- (bool)parse_X_ABRELATEDNAMES;
- (bool)parse_X_ABSHOWAS;
- (bool)parse_X_ABUID;
- (bool)parse_X_ACTIVITY_ALERT;
- (bool)parse_X_ADDRESSBOOKSERVER_PHONEME_DATA;
- (bool)parse_X_AIM;
- (bool)parse_X_AIM_ID;
- (bool)parse_X_ALTBDAY;
- (bool)parse_X_APPLE_LIKENESS_SERVICE_IDENTIFIER;
- (bool)parse_X_APPLE_LIKENESS_SOURCE;
- (bool)parse_X_APPLE_SUBADMINISTRATIVEAREA;
- (bool)parse_X_APPLE_SUBLOCALITY;
- (bool)parse_X_GOOGLE_ID;
- (bool)parse_X_GOOGLE_TALK;
- (bool)parse_X_GTALK;
- (bool)parse_X_ICQ;
- (bool)parse_X_ICQ_ID;
- (bool)parse_X_JABBER;
- (bool)parse_X_JABBER_ID;
- (bool)parse_X_MAIDENNAME;
- (bool)parse_X_MSN;
- (bool)parse_X_MSN_ID;
- (bool)parse_X_PHONETIC_FIRST_NAME;
- (bool)parse_X_PHONETIC_LAST_NAME;
- (bool)parse_X_PHONETIC_MIDDLE_NAME;
- (bool)parse_X_PHONETIC_ORG;
- (bool)parse_X_PRONUNCIATION_FIRST_NAME;
- (bool)parse_X_PRONUNCIATION_LAST_NAME;
- (bool)parse_X_QQ;
- (bool)parse_X_QQ_ID;
- (bool)parse_X_SKYPE;
- (bool)parse_X_SKYPE_ID;
- (bool)parse_X_SKYPE_USERNAME;
- (bool)parse_X_SOCIALPROFILE;
- (bool)parse_X_YAHOO;
- (bool)parse_X_YAHOO_ID;
- (SEL)parsingSelectorForTag:(id)arg1;
- (id)phoneLabel;
- (id)pool_nextResultWithFactory:(id)arg1 progressLength:(long long*)arg2;
- (void)processExtensionValues;
- (void)processNameValues;
- (void)reportMultiValueLines:(id)arg1 forProperty:(id)arg2;
- (void)reportValue:(id)arg1 forProperty:(id)arg2;
- (void)reportValues;
- (id)resultBuilder;
- (id)resultsWithFactory:(id)arg1;
- (void)setImageData:(id)arg1;
- (id)typeParameters;
- (id)validCountryCodes;
- (bool)valueIsEmpty:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

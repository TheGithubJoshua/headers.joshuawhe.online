<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNVCardLexer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/vCard.framework/CNVCardLexer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/vCard.framework/vCard ()
 */

@interface CNVCardLexer : NSObject {
    NSArray * _activeTokenSets;
    char * _bytes;
    unsigned long long  _cursor;
    NSMutableData * _data;
    long long  _errorCount;
    unsigned long long  _length;
    unsigned long long  _peekedPoint;
    bool  _unicode;
}

- (void).cxx_destruct;
- (void)_applyNextStringInEncoding:(unsigned long long)arg1 quotedPrintable:(bool)arg2 stopTokens:(int)arg3 trim:(bool)arg4 maximumValueLength:(unsigned long long)arg5 intoString:(id)arg6;
- (bool)advancePastEOL;
- (bool)advancePastEOLSingle;
- (bool)advancePastEOLUnicode;
- (bool)advanceToEOL;
- (bool)advanceToEOLSingle;
- (bool)advanceToEOLUnicode;
- (void)advanceToPeekPoint;
- (long long)advanceToSingleByteString;
- (long long)advanceToString;
- (bool)advanceToToken:(int)arg1 throughTypes:(long long)arg2;
- (long long)advanceToUnicodeString;
- (bool)advancedPastToken:(int)arg1;
- (void)appendDataInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toData:(id)arg2;
- (void)appendNextEscapedCharacterToData:(id)arg1;
- (void)appendNextQuotedPrintableDataToData:(id)arg1;
- (bool)atEOF;
- (unsigned short)charAtPosition:(unsigned long long)arg1 withOffset:(long long)arg2;
- (id)clipAtGraphemeClusters:(id)arg1 maximumValueLength:(unsigned long long)arg2 addEllipsisIfClipped:(bool)arg3;
- (unsigned long long)cursor;
- (id)dataWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })emptyRangeStartingAtCursor;
- (long long)errorCount;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })expandRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 untilNextByteIs:(id)arg2;
- (id)initWithData:(id)arg1;
- (id)nextArraySeperatedByToken:(int)arg1 stoppingAt:(int)arg2 inEncoding:(unsigned long long)arg3 maximumValueLength:(unsigned long long)arg4;
- (id)nextBase64Data;
- (id)nextBase64Line:(bool*)arg1;
- (id)nextEscapedCharacter;
- (id)nextQuotedPrintableData;
- (id)nextQuotedStringValueInEncoding:(unsigned long long)arg1;
- (id)nextSingleByteBase64Line:(bool*)arg1;
- (id)nextSingleByteStringInEncoding:(unsigned long long)arg1 quotedPrintable:(bool)arg2 stopTokens:(int)arg3 trim:(bool)arg4 maximumValueLength:(unsigned long long)arg5;
- (id)nextStringInEncoding:(unsigned long long)arg1 quotedPrintable:(bool)arg2 stopTokens:(int)arg3 trim:(bool)arg4 maximumValueLength:(unsigned long long)arg5;
- (int)nextTokenPeek:(bool)arg1;
- (int)nextTokenPeek:(bool)arg1 length:(long long)arg2;
- (int)nextTokenPeekSingle:(bool)arg1 length:(long long)arg2;
- (int)nextTokenPeekUnicode:(bool)arg1 length:(long long)arg2;
- (id)nextUnicodeBase64Line:(bool*)arg1;
- (id)nextUnicodeStringStopTokens:(int)arg1 quotedPrintable:(bool)arg2 trim:(bool)arg3 maximumValueLength:(unsigned long long)arg4;
- (int)peekAtNextToken;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeWithLength:(unsigned long long)arg1 lTrim:(unsigned long long)arg2 rTrim:(unsigned long long)arg3;
- (int)readNextToken;
- (void)skipToStopTokens:(int)arg1;
- (id)stringByRoundingData:(id)arg1 toNextWholeCharacterUsingEncoding:(unsigned long long)arg2 prefixLength:(unsigned long long)arg3 suffixLength:(unsigned long long)arg4 maximumValueLength:(unsigned long long)arg5;
- (id)stringFromData:(id)arg1 encoding:(unsigned long long)arg2 prefixLength:(unsigned long long)arg3 suffixLength:(unsigned long long)arg4;
- (id)stringFromSubData:(id)arg1 encoding:(unsigned long long)arg2;
- (id)stringWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 encoding:(unsigned long long)arg2;
- (int)tokenAtCursor;
- (int)tokenAtCursorIgnoringLineFolding;
- (id)tokenSetForLength:(long long)arg1;
- (id)trimData:(id)arg1 withPrefixLength:(unsigned long long)arg2 suffixLength:(unsigned long long)arg3;
- (void)unicodeSkipToStopTokens:(int)arg1;
- (id)unicodeStringByRoundingData:(id)arg1 toNextWholeCharacterUsingEncoding:(unsigned long long)arg2 prefixLength:(unsigned long long)arg3 suffixLength:(unsigned long long)arg4 maximumValueLength:(unsigned long long)arg5;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MapsSuggestionsTracker.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MapsSuggestions.framework/MapsSuggestionsTracker.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MapsSuggestions.framework/MapsSuggestions (1)
 */

@interface MapsSuggestionsTracker : NSObject <MapsSuggestionsObject> {
    GEOAutomobileOptions * _automobileOptions;
    CLLocation * _currentLocation;
    MapsSuggestionsCanKicker * _currentLocationWiper;
    struct NSMutableDictionary { Class x1; } * _distanceTitleFormatters;
    MapsSuggestionsDonater * _donater;
    MapsSuggestionsETARequester * _etaRequester;
    struct NSMutableDictionary { Class x1; } * _etaTitleFormatters;
    GEOLocationShifter * _locationShifter;
    MapsSuggestionsManager * _manager;
    int  _mapType;
    MapsSuggestionsNetworkRequester * _networkRequester;
    NSMutableDictionary * _previousETAs;
    NSObject<OS_dispatch_queue> * _queue;
    double  _refreshDeferTime;
    double  _refreshInterval;
    NSObject<OS_dispatch_source> * _refreshTimer;
    MapsSuggestionsETARequirements * _requirements;
    bool  _shouldBeRunning;
    MapsSuggestionsMutableWeakEntries * _trackedEntries;
    int  _transportType;
}

@property (nonatomic, retain) GEOAutomobileOptions *automobileOptions;
@property (retain) CLLocation *currentLocation;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) int mapType;
@property (nonatomic, retain) MapsSuggestionsNetworkRequester *networkRequester;
@property (copy) MapsSuggestionsETARequirements *requirements;
@property (readonly) Class superclass;
@property (nonatomic, retain) MapsSuggestionsMutableWeakEntries *trackedEntries;
@property (nonatomic, readonly) NSString *uniqueName;

+ (bool)_isLocationShiftRequiredForLocation:(id)arg1;

- (void).cxx_destruct;
- (id)_bestValidOfflineETAForEntry:(id)arg1 destinationKey:(id)arg2;
- (void)_decorateEntry:(id)arg1 eta:(id)arg2;
- (id)_distanceTitleFormatterForType:(long long)arg1;
- (id)_etaTitleFormatterForType:(long long)arg1;
- (bool)_hasTitleFormatterForType:(long long)arg1;
- (bool)_isMatchingTransportType:(int)arg1;
- (bool)_isUnusableETA:(id)arg1;
- (void)_prepareShiftForLocation:(id)arg1 withCompletionHandler:(id /* block */)arg2 withShiftRequestBlock:(id /* block */)arg3;
- (void)_prunePreviousETAs;
- (void)_refresh;
- (void)_rememberETA:(id)arg1 forEntry:(id)arg2;
- (void)_requestDistances;
- (void)_requestETAs;
- (void)_resetAllTitleFormatting;
- (void)_scheduleRefresh;
- (void)_scheduleRefreshIfCurrentLocationIsMuchBetterThanLocation:(id)arg1;
- (void)_shiftLocation:(id)arg1 withCompletionHandler:(id /* block */)arg2 callbackQueue:(id)arg3;
- (void)_unschedule;
- (id)automobileOptions;
- (id)currentLocation;
- (void)dealloc;
- (id)initWithManager:(id)arg1 requirements:(id)arg2;
- (id)location;
- (int)mapType;
- (id)networkRequester;
- (id)requirements;
- (void)resetAllTitleFormatting;
- (void)scheduleRefresh;
- (void)setAutomobileOptions:(id)arg1;
- (void)setCurrentLocation:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setMapType:(int)arg1;
- (void)setNetworkRequester:(id)arg1;
- (void)setRequirements:(id)arg1;
- (void)setTitleFormatter:(id)arg1 forType:(long long)arg2;
- (void)setTrackedEntries:(id)arg1;
- (void)trackSuggestionEntries:(struct NSArray { Class x1; }*)arg1 transportType:(int)arg2;
- (id)trackedEntries;
- (struct NSString { Class x1; }*)uniqueName;
- (void)unschedule;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MapsSuggestionsEntry.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MapsSuggestions.framework/MapsSuggestionsEntry.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MapsSuggestions.framework/MapsSuggestions (1)
 */

@interface MapsSuggestionsEntry : NSObject <MapsSuggestionsObject, NSCopying, NSSecureCoding> {
    bool  _deleted;
    NSDate * _expires;
    struct GEOMapItemStorage { Class x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; } * _geoMapItem;
    NSData * _iconData;
    struct NSString { Class x1; } * _originatingSourceName;
    NSMutableDictionary * _sourceSpecificInfo;
    NSString * _subtitle;
    NSString * _subtitleWhenLocked;
    NSString * _title;
    NSString * _titleWhenLocked;
    long long  _type;
    NSMutableSet * _typeHistory;
    NSString * _undecoratedSubtitle;
    NSString * _undecoratedSubtitleWhenLocked;
    NSString * _undecoratedTitle;
    NSString * _undecoratedTitleWhenLocked;
    double  _weight;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) bool deleted;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSDate *expires;
@property (nonatomic, retain) GEOMapItemStorage *geoMapItem;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSData *iconData;
@property (nonatomic, retain) NSString *originatingSourceName;
@property (nonatomic, retain) NSString *subtitle;
@property (nonatomic, retain) NSString *subtitleWhenLocked;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSString *title;
@property (nonatomic, retain) NSString *titleWhenLocked;
@property (nonatomic, readonly) long long type;
@property (nonatomic, retain) NSString *undecoratedSubtitle;
@property (nonatomic, retain) NSString *undecoratedSubtitleWhenLocked;
@property (nonatomic, retain) NSString *undecoratedTitle;
@property (nonatomic, retain) NSString *undecoratedTitleWhenLocked;
@property (nonatomic, readonly) NSString *uniqueIdentifier;
@property (nonatomic, readonly) NSString *uniqueName;
@property (nonatomic) double weight;

+ (int)defaultDirectionsTransportType;
+ (id)entryFromSerializedBase64String:(id)arg1 hasPrefix:(bool)arg2;
+ (id)entryFromSerializedHexString:(id)arg1 hasPrefix:(bool)arg2;
+ (id)entryFromSerializedString:(id)arg1;
+ (id)entryWithData:(id)arg1;
+ (id)entryWithType:(long long)arg1 title:(id)arg2 subtitle:(id)arg3 weight:(double)arg4 expires:(id)arg5 sourceSpecificInfo:(id)arg6;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)ETAForKey:(id)arg1;
- (id)URLForKey:(id)arg1;
- (id)UUIDForKey:(id)arg1;
- (void)_overrideType:(long long)arg1;
- (void)_setValue:(id)arg1 forKey:(id)arg2 class:(Class)arg3;
- (id)_valueForKey:(id)arg1 class:(Class)arg2;
- (bool)_wasEverOfType:(long long)arg1;
- (bool)_wasEverOneOfTypes:(id)arg1;
- (long long)availableRemovalBehaviors;
- (bool)booleanForKey:(id)arg1;
- (bool)containsKey:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)data;
- (id)dateForKey:(id)arg1;
- (bool)deleted;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)endTime;
- (id)expires;
- (bool)expiresBeforeEntry:(id)arg1;
- (id)fullDescription;
- (struct GEOMapItemStorage { Class x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; }*)geoMapItem;
- (bool)hasEndTime;
- (bool)hasExpired;
- (bool)hasStartAndEndTime;
- (bool)hasStartTime;
- (unsigned long long)hash;
- (id)iconData;
- (id)initWithCoder:(id)arg1;
- (id)initWithType:(long long)arg1 title:(id)arg2;
- (id)initWithType:(long long)arg1 title:(id)arg2 subtitle:(id)arg3 weight:(double)arg4 expires:(id)arg5 geoMapItem:(struct GEOMapItemStorage { Class x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; }*)arg6 sourceSpecificInfo:(id)arg7;
- (id)initWithType:(long long)arg1 title:(id)arg2 subtitle:(id)arg3 weight:(double)arg4 expires:(id)arg5 sourceSpecificInfo:(id)arg6;
- (long long)integerForKey:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToEntry:(id)arg1;
- (struct NSData { Class x1; }*)mapItemHandleData;
- (void)mergeFromSuggestionEntry:(id)arg1 behavior:(unsigned long long)arg2;
- (void)mergeFromSuggestionEntry:(id)arg1 behavior:(unsigned long long)arg2 protectTitles:(bool)arg3 protectTitleDecorations:(bool)arg4 protectMapItem:(bool)arg5 protectWeight:(bool)arg6 protectExpiration:(bool)arg7 protectIcon:(bool)arg8;
- (void)mergeSpecificsFromSuggestionEntry:(id)arg1 behavior:(unsigned long long)arg2;
- (id)numberForKey:(id)arg1;
- (struct NSString { Class x1; }*)originatingSourceName;
- (void)replaceByEntry:(id)arg1;
- (void)resetAvailableRemovalBehavior:(long long)arg1;
- (id)serializedBase64String;
- (id)serializedHexString;
- (void)setAvailableRemovalBehavior:(long long)arg1;
- (void)setBoolean:(bool)arg1 forKey:(id)arg2;
- (void)setDate:(id)arg1 forKey:(id)arg2;
- (void)setDeleted:(bool)arg1;
- (void)setETA:(id)arg1 forKey:(id)arg2;
- (void)setExpires:(id)arg1;
- (void)setGeoMapItem:(struct GEOMapItemStorage { Class x1; id x2; id x3; id x4; id x5; id x6; id x7; id x8; id x9; id x10; }*)arg1;
- (void)setIconData:(id)arg1;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setMapItemHandleData:(struct NSData { Class x1; }*)arg1;
- (void)setNumber:(id)arg1 forKey:(id)arg2;
- (void)setOriginatingSourceName:(struct NSString { Class x1; }*)arg1;
- (void)setSourceSpecificInfo:(id)arg1;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)setStringArray:(struct NSArray { Class x1; }*)arg1 forKey:(id)arg2;
- (void)setSubtitle:(id)arg1;
- (void)setSubtitleWhenLocked:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleWhenLocked:(id)arg1;
- (void)setURL:(id)arg1 forKey:(id)arg2;
- (void)setUUID:(id)arg1 forKey:(id)arg2;
- (void)setUndecoratedSubtitle:(id)arg1;
- (void)setUndecoratedSubtitleWhenLocked:(id)arg1;
- (void)setUndecoratedTitle:(id)arg1;
- (void)setUndecoratedTitleWhenLocked:(id)arg1;
- (void)setWeight:(double)arg1;
- (id)shortDescription;
- (id)sourceSpecificInfo;
- (id)startTime;
- (bool)startsBeforeEntry:(id)arg1;
- (struct NSArray { Class x1; }*)stringArrayForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)subtitle;
- (id)subtitleWhenLocked;
- (id)title;
- (id)titleWhenLocked;
- (long long)type;
- (id)undecoratedSubtitle;
- (id)undecoratedSubtitleWhenLocked;
- (id)undecoratedTitle;
- (id)undecoratedTitleWhenLocked;
- (id)uniqueIdentifier;
- (struct NSString { Class x1; }*)uniqueName;
- (bool)wasEverOfType:(long long)arg1;
- (bool)wasEverOneOfTypes:(id)arg1;
- (double)weight;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

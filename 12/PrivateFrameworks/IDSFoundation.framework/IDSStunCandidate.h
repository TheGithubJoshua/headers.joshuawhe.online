<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>IDSStunCandidate.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/IDSFoundation.framework/IDSStunCandidate.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation (1000)
 */

@interface IDSStunCandidate : NSObject {
    bool  _active;
    struct sockaddr_storage { 
        unsigned char ss_len; 
        unsigned char ss_family; 
        BOOL __ss_pad1[6]; 
        long long __ss_align; 
        BOOL __ss_pad2[112]; 
    }  _address;
    double  _extIPDetectionStartTime;
    struct sockaddr_storage { 
        unsigned char ss_len; 
        unsigned char ss_family; 
        BOOL __ss_pad1[6]; 
        long long __ss_align; 
        BOOL __ss_pad2[112]; 
    }  _external;
    int  _index;
    unsigned int  _mtu;
    struct { 
        int length; 
        unsigned char data[12]; 
    }  _prefix;
    unsigned long long  _priority;
    unsigned long long  _radioAccessTechnology;
    long long  _transport;
    unsigned long long  _type;
}

@property (nonatomic) bool active;
@property (nonatomic, readonly) const struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*address;
@property (nonatomic) double extIPDetectionStartTime;
@property (nonatomic) struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*external;
@property (nonatomic, readonly) int index;
@property (nonatomic) unsigned int mtu;
@property (nonatomic) struct { int x1; unsigned char x2[12]; }*prefix;
@property (nonatomic, readonly) unsigned long long priority;
@property (nonatomic) unsigned long long radioAccessTechnology;
@property (nonatomic, readonly) long long transport;
@property (nonatomic, readonly) unsigned long long type;

+ (id)candidateWithType:(unsigned long long)arg1 transport:(long long)arg2 radioAccessTechnology:(unsigned long long)arg3 mtu:(unsigned int)arg4 index:(int)arg5 address:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg6 external:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg7;

- (bool)active;
- (const struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)address;
- (void)dealloc;
- (id)description;
- (double)extIPDetectionStartTime;
- (struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)external;
- (bool)hasNATIPv4Address;
- (bool)hasNATIPv4External;
- (int)index;
- (id)initWithType:(unsigned long long)arg1 transport:(long long)arg2 radioAccessTechnology:(unsigned long long)arg3 mtu:(unsigned int)arg4 index:(int)arg5 address:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg6 external:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg7;
- (bool)isCellularStunCandidate;
- (bool)isCompatibleWithStunCandidate:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isLinkLocalStunCandidate;
- (bool)isRelayStunCandidate;
- (bool)isServerReflexiveStunCandidate;
- (unsigned int)mtu;
- (struct { int x1; unsigned char x2[12]; }*)prefix;
- (unsigned long long)priority;
- (unsigned long long)radioAccessTechnology;
- (void)setActive:(bool)arg1;
- (void)setExtIPDetectionStartTime:(double)arg1;
- (void)setExternal:(struct sockaddr { unsigned char x1; unsigned char x2; BOOL x3[14]; }*)arg1;
- (void)setMtu:(unsigned int)arg1;
- (void)setPrefix:(struct { int x1; unsigned char x2[12]; }*)arg1;
- (void)setRadioAccessTechnology:(unsigned long long)arg1;
- (long long)transport;
- (unsigned long long)type;
- (void)updateTransport:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

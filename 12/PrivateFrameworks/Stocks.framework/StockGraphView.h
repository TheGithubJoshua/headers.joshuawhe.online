<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>StockGraphView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Stocks.framework/StockGraphView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Stocks.framework/Stocks ()
 */

@interface StockGraphView : UIView <GraphRenderOperationDelegate> {
    StockChartData * _chartData;
    UIView<StockGraphViewContainer> * _chartViewDelegate;
    unsigned int  _dataCount;
    unsigned int  _dataSize;
    StockChartDisplayMode * _displayMode;
    NSArray * _dottedLinePositions;
    NSArray * _dottedLinePositionsForStyleOnly;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _graphInsets;
    bool  _isRendered;
    NSMutableArray * _linePointCounts;
    LineGraphView * _lineView;
    unsigned long long  _maxVolume;
    struct CGPoint { double x1; double x2; } * _points;
    GraphRenderOperation * _renderOperation;
    int  _valueCount;
    int  _valueIndex;
    struct CGPoint { double x1; double x2; } * _values;
    double  _volumeBarWidth;
    struct { double x1; unsigned long long x2; } * _volumeBars;
    unsigned int  _volumeCount;
    unsigned int  _volumeSize;
    VolumeGraphView * _volumeView;
}

@property (nonatomic) UIView<StockGraphViewContainer> *chartViewDelegate;
@property (nonatomic, retain) StockChartDisplayMode *displayMode;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } graphInsets;
@property (nonatomic, readonly) bool isRendered;
@property (nonatomic, readonly) bool isRendering;

- (void).cxx_destruct;
- (void)_finishCurrentLine;
- (void)_layoutSubviews;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_lineViewFrameForBoundsSize:(struct CGSize { double x1; double x2; })arg1;
- (unsigned long long)_normalizedAccumulatedVolumeInDataRange:(struct CGPoint { double x1; double x2; })arg1;
- (float)_priceAtTime:(double)arg1 dataPosition:(double*)arg2;
- (void)_processGraphDataForWidth:(double)arg1;
- (double)_timeAtPosition:(double)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_trueGraphPointsRegion;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_volumeViewFrameForBoundsSize:(struct CGSize { double x1; double x2; })arg1;
- (void)cancelRenderOperation;
- (id)chartViewDelegate;
- (void)clearData;
- (void)clearPaths;
- (void)dealloc;
- (id)displayMode;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })graphInsets;
- (void)graphRenderOperationDidFinish:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isRendered;
- (bool)isRendering;
- (void)loadStockChartData:(id)arg1;
- (struct { double x1; double x2; unsigned long long x3; })plottedPointNearestToPoint:(struct CGPoint { double x1; double x2; }*)arg1;
- (void)readyForDisplayFromChartData;
- (void)recomputePathsAndRenderIfNeededForSize:(struct CGSize { double x1; double x2; })arg1;
- (void)resizeSelectedLineClipViewWithLeftX:(double)arg1 rightX:(double)arg2;
- (void)resizeSelectedVolumeClipViewWithLeftX:(double)arg1 rightX:(double)arg2;
- (struct CGPoint { double x1; double x2; })rightmostPlottedPoint;
- (void)setChartViewDelegate:(id)arg1;
- (void)setDisplayMode:(id)arg1;
- (void)setDottedLinePositionsWithLabelInfo:(id)arg1;
- (void)setEvenlySpacedDottedLinePositionsWithCount:(unsigned long long)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setGraphInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setShowingSelectedLine:(bool)arg1;
- (void)setShowingSelectedVolumeRegion:(bool)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })volumeBarRectNearestToPoint:(struct CGPoint { double x1; double x2; })arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

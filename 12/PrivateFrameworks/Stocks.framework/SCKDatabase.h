<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SCKDatabase.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Stocks.framework/SCKDatabase.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Stocks.framework/Stocks ()
 */

@interface SCKDatabase : NSObject <SCKDatabaseStoreCoordinatorObserver> {
    NSObject<OS_dispatch_queue> * _callbackQueue;
    SCKAsyncSerialQueue * _ckSyncQueue;
    <SCKContainerProxying> * _container;
    NSArray * _mergeHandlers;
    NSMutableDictionary * _observersByZoneName;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _observersLock;
    SCKDatabaseSchema * _schema;
    SCKStartupQueue * _startupQueue;
    long long  _status;
    <SCKDatabaseStoreCoordinator> * _storeCoordinator;
    NSMutableDictionary * _zoneSnapshotsByZoneName;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, retain) SCKAsyncSerialQueue *ckSyncQueue;
@property (nonatomic, retain) <SCKContainerProxying> *container;
@property (nonatomic, retain) NSArray *mergeHandlers;
@property (nonatomic, retain) NSMutableDictionary *observersByZoneName;
@property (nonatomic) struct os_unfair_lock_s { unsigned int x1; } observersLock;
@property (nonatomic, retain) SCKDatabaseSchema *schema;
@property (nonatomic, retain) SCKStartupQueue *startupQueue;
@property long long status;
@property (nonatomic, retain) <SCKDatabaseStoreCoordinator> *storeCoordinator;
@property (nonatomic, retain) NSMutableDictionary *zoneSnapshotsByZoneName;

- (void).cxx_destruct;
- (void)_createZoneInContainerWithSchema:(id)arg1 completion:(id /* block */)arg2;
- (void)_deleteAndRecreateAllZonesWithCompletion:(id /* block */)arg1;
- (id)_emptyZonesNeedingFirstSync;
- (void)_enqueueStartupSequenceWithFeatures:(long long)arg1;
- (void)_fetchDatabaseAndZoneChangesWithCompletion:(id /* block */)arg1;
- (void)_fetchDatabaseChangesWithCompletion:(id /* block */)arg1;
- (void)_fetchZoneChangesForZones:(id)arg1 completion:(id /* block */)arg2;
- (void)_recoverFromIdentityLossWithCompletion:(id /* block */)arg1;
- (void)_reloadSnapshotOfZone:(id)arg1 fromStore:(id)arg2;
- (void)_runCKOperation:(id)arg1;
- (id)_sanitizeErrorForClients:(id)arg1;
- (void)_saveZoneToContainer:(id)arg1 allowRecoveryAttempt:(bool)arg2 completion:(id /* block */)arg3;
- (void)_saveZonesToContainer:(id)arg1 allowRecoveryAttempt:(bool)arg2 completion:(id /* block */)arg3;
- (void)_squashZoneForMerge:(id)arg1 zoneStore:(id)arg2;
- (id)_zoneWithSchema:(id)arg1 zoneStore:(id)arg2;
- (id)_zonesNeedingFetch;
- (id)_zonesNeedingSave;
- (void)addObserver:(id)arg1 forZone:(id)arg2;
- (id)callbackQueue;
- (void)checkSyncingEnabledWithCompletion:(id /* block */)arg1;
- (id)ckSyncQueue;
- (id)container;
- (void)handleRemoteNotification:(id)arg1 completion:(id /* block */)arg2;
- (id)initWithSchema:(id)arg1 store:(id)arg2 features:(long long)arg3 containerProxy:(id)arg4;
- (id)initWithSchema:(id)arg1 store:(id)arg2 features:(long long)arg3 mergeHandlers:(id)arg4 containerProxy:(id)arg5;
- (id)initWithSchema:(id)arg1 store:(id)arg2 migrationPlan:(id)arg3 containerProxy:(id)arg4;
- (id)initWithSchema:(id)arg1 store:(id)arg2 migrationPlan:(id)arg3 features:(long long)arg4 containerProxy:(id)arg5;
- (id)mergeHandlers;
- (void)modifyContentsOfZone:(id)arg1 withCommand:(id)arg2;
- (id)observersByZoneName;
- (struct os_unfair_lock_s { unsigned int x1; })observersLock;
- (void)pollForChangesWithCondition:(id)arg1 completion:(id /* block */)arg2;
- (void)readContentsOfZone:(id)arg1 withBlock:(id /* block */)arg2;
- (void)removeObserver:(id)arg1 forZone:(id)arg2;
- (void)savePendingChangesToServerWithCompletion:(id /* block */)arg1;
- (id)schema;
- (void)setCallbackQueue:(id)arg1;
- (void)setCkSyncQueue:(id)arg1;
- (void)setContainer:(id)arg1;
- (void)setMergeHandlers:(id)arg1;
- (void)setObserversByZoneName:(id)arg1;
- (void)setObserversLock:(struct os_unfair_lock_s { unsigned int x1; })arg1;
- (void)setSchema:(id)arg1;
- (void)setStartupQueue:(id)arg1;
- (void)setStatus:(long long)arg1;
- (void)setStoreCoordinator:(id)arg1;
- (void)setZoneSnapshotsByZoneName:(id)arg1;
- (id)startupQueue;
- (long long)status;
- (id)storeCoordinator;
- (void)storeCoordinatorDiscoveredExternalChanges:(id)arg1;
- (bool)t_flushChangesWithTimeout:(double)arg1;
- (id)zoneSnapshotsByZoneName;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

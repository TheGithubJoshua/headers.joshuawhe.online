<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>StockChartData.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Stocks.framework/StockChartData.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Stocks.framework/Stocks ()
 */

@interface StockChartData : NSObject {
    long long  _chartInterval;
    NSDictionary * _dataSeriesDict;
    double  _expirationTime;
    bool  _hasVolume;
    NSMutableDictionary * _imageSetCache;
    NSArray * _interestingIndexes;
    bool  _isUnavailable;
    NSMutableDictionary * _labelPlacementCache;
    NSDate * _marketCloseDate;
    NSDate * _marketOpenDate;
    NSTimeZone * _marketTimeZone;
    struct { double x1; double x2; unsigned long long x3; } * _maxValue;
    struct { double x1; double x2; unsigned long long x3; } * _minValue;
    float  _previousClosePrice;
    Stock * _stock;
    unsigned int  _stockValueCount;
    struct { double x1; double x2; unsigned long long x3; } * _stockValues;
    NSMutableDictionary * _xAxisLabelInfoCache;
    int  _yAxisFractionDigits;
    NSMutableDictionary * _yAxisLabelInfoCache;
}

@property (nonatomic) long long chartInterval;
@property (nonatomic, retain) NSDictionary *dataSeriesDict;
@property (nonatomic) double expirationTime;
@property (nonatomic) bool hasVolume;
@property (nonatomic, retain) NSArray *interestingIndexes;
@property (nonatomic) bool isUnavailable;
@property (nonatomic, retain) NSDate *marketCloseDate;
@property (nonatomic, retain) NSDate *marketOpenDate;
@property (nonatomic, retain) NSTimeZone *marketTimeZone;
@property (nonatomic) struct { double x1; double x2; unsigned long long x3; }*maxValue;
@property (nonatomic) struct { double x1; double x2; unsigned long long x3; }*minValue;
@property (nonatomic) float previousClosePrice;
@property (nonatomic) Stock *stock;
@property (readonly) unsigned int stockValueCount;
@property (readonly) struct { double x1; double x2; unsigned long long x3; }*stockValues;
@property (nonatomic) int yAxisFractionDigits;

- (void).cxx_destruct;
- (struct { double x1; double x2; unsigned long long x3; }*)allocateStockValuesWithCount:(unsigned int)arg1;
- (long long)chartInterval;
- (void)clearAllImageSets;
- (id)dataSeriesDict;
- (void)dealloc;
- (id)description;
- (double)expirationTime;
- (bool)hasVolume;
- (id)imageSetForDisplayMode:(id)arg1;
- (id)initWithStock:(id)arg1 interval:(long long)arg2;
- (id)interestingIndexes;
- (bool)isUnavailable;
- (long long)labelPlacementForDisplayMode:(id)arg1;
- (id)marketCloseDate;
- (id)marketOpenDate;
- (id)marketTimeZone;
- (struct { double x1; double x2; unsigned long long x3; }*)maxValue;
- (struct { double x1; double x2; unsigned long long x3; }*)minValue;
- (float)previousClosePrice;
- (void)setChartInterval:(long long)arg1;
- (void)setDataSeriesDict:(id)arg1;
- (void)setExpirationTime:(double)arg1;
- (void)setHasVolume:(bool)arg1;
- (void)setImageSet:(id)arg1 forDisplayMode:(id)arg2;
- (void)setInterestingIndexes:(id)arg1;
- (void)setIsUnavailable:(bool)arg1;
- (void)setLabelPlacement:(long long)arg1 forDisplayMode:(id)arg2;
- (void)setMarketCloseDate:(id)arg1;
- (void)setMarketOpenDate:(id)arg1;
- (void)setMarketTimeZone:(id)arg1;
- (void)setMaxValue:(struct { double x1; double x2; unsigned long long x3; }*)arg1;
- (void)setMinValue:(struct { double x1; double x2; unsigned long long x3; }*)arg1;
- (void)setPreviousClosePrice:(float)arg1;
- (void)setStock:(id)arg1;
- (void)setXAxisLabelInfoArray:(id)arg1 forDisplayMode:(id)arg2;
- (void)setYAxisFractionDigits:(int)arg1;
- (void)setYAxisLabelInfoArray:(id)arg1 forDisplayMode:(id)arg2;
- (id)stock;
- (unsigned int)stockValueCount;
- (struct { double x1; double x2; unsigned long long x3; }*)stockValues;
- (id)xAxisLabelInfoArrayForMode:(id)arg1;
- (int)yAxisFractionDigits;
- (id)yAxisLabelInfoArrayForMode:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

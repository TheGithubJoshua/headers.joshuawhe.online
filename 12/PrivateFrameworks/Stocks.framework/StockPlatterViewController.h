<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>StockPlatterViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/Stocks.framework/StockPlatterViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/Stocks.framework/Stocks ()
 */

@interface StockPlatterViewController : UIViewController <StockChartViewDelegate, UITableViewDataSource, UITableViewDelegate> {
    UIButton * _attributionButton;
    long long  _chartInterval;
    ChartUpdater * _chartUpdater;
    StockChartView * _chartView;
    UILabel * _exchangeStatusLabel;
    StocksLayout * _layout;
    NetPreferences * _netPreferences;
    long long  _rowDataType;
    UIView * _statusBarView;
    Stock * _stock;
    StockFetcher * _stockFetcher;
    StockManager * _stockManager;
    NSString * _stockTicker;
    StockUpdateManager * _stockUpdateManager;
    UITableView * _stocksTableView;
    StocksStyle * _style;
}

@property (nonatomic, retain) UIButton *attributionButton;
@property (nonatomic) long long chartInterval;
@property (nonatomic, retain) ChartUpdater *chartUpdater;
@property (nonatomic, retain) StockChartView *chartView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UILabel *exchangeStatusLabel;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) StocksLayout *layout;
@property (nonatomic, retain) NetPreferences *netPreferences;
@property (nonatomic) long long rowDataType;
@property (nonatomic, retain) UIView *statusBarView;
@property (nonatomic, retain) Stock *stock;
@property (nonatomic, retain) StockFetcher *stockFetcher;
@property (nonatomic, retain) StockManager *stockManager;
@property (nonatomic, retain) NSString *stockTicker;
@property (nonatomic, retain) StockUpdateManager *stockUpdateManager;
@property (nonatomic, retain) UITableView *stocksTableView;
@property (nonatomic, retain) StocksStyle *style;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_attributionButtonPressed:(id)arg1;
- (void)_cleanup;
- (void)_setupStockWithTicker:(id)arg1;
- (void)_updateExchangeData;
- (id)attributionButton;
- (long long)chartInterval;
- (id)chartUpdater;
- (id)chartView;
- (void)dealloc;
- (id)exchangeStatusLabel;
- (id)initWithStockTicker:(id)arg1;
- (id)layout;
- (id)netPreferences;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (struct CGSize { double x1; double x2; })preferredContentSize;
- (long long)rowDataType;
- (void)setAttributionButton:(id)arg1;
- (void)setChartInterval:(long long)arg1;
- (void)setChartUpdater:(id)arg1;
- (void)setChartView:(id)arg1;
- (void)setExchangeStatusLabel:(id)arg1;
- (void)setLayout:(id)arg1;
- (void)setNetPreferences:(id)arg1;
- (void)setRowDataType:(long long)arg1;
- (void)setStatusBarView:(id)arg1;
- (void)setStock:(id)arg1;
- (void)setStockFetcher:(id)arg1;
- (void)setStockManager:(id)arg1;
- (void)setStockTicker:(id)arg1;
- (void)setStockUpdateManager:(id)arg1;
- (void)setStocksTableView:(id)arg1;
- (void)setStyle:(id)arg1;
- (id)statusBarView;
- (id)stock;
- (void)stockChartView:(id)arg1 chartIntervalDidChange:(long long)arg2;
- (bool)stockChartViewIsCurrentChartView:(id)arg1;
- (void)stockChartViewNeedsLoadingStatusUpdated:(id)arg1;
- (id)stockFetcher;
- (id)stockManager;
- (id)stockTicker;
- (id)stockUpdateManager;
- (id)stocksTableView;
- (id)style;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)updateChartForInterval:(long long)arg1 completion:(id /* block */)arg2;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CLKDevice.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ClockKit.framework/CLKDevice.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ClockKit.framework/ClockKit (1)
 */

@interface CLKDevice : NSObject {
    unsigned long long  _collectionType;
    bool  _isBridgeActive;
    bool  _isExplorer;
    bool  _isLuxo;
    bool  _limitedToPreGlory;
    unsigned long long  _materialType;
    NRDevice * _nrDevice;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _screenBounds;
    double  _screenCornerRadius;
    double  _screenScale;
    unsigned long long  _sizeClass;
}

@property (nonatomic, readonly) bool canCustomize;
@property (nonatomic) unsigned long long collectionType;
@property (nonatomic) bool isBridgeActive;
@property (nonatomic, readonly) bool isBridgeActive;
@property (nonatomic, readonly) bool isEcgPhoneComplicationEnabled;
@property (nonatomic) bool isExplorer;
@property (nonatomic, readonly) bool isLocked;
@property (nonatomic) bool isLuxo;
@property (nonatomic, readonly) bool isPaired;
@property (nonatomic, readonly) bool isRadioPhoneComplicationEnabled;
@property (nonatomic, readonly) bool limitedToPreGlory;
@property (nonatomic) unsigned long long materialType;
@property (nonatomic, retain) NRDevice *nrDevice;
@property (nonatomic, readonly) NSUUID *nrDeviceUUID;
@property (nonatomic, readonly) unsigned int nrDeviceVersion;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } screenBounds;
@property (nonatomic) double screenCornerRadius;
@property (nonatomic) double screenScale;
@property (nonatomic) unsigned long long sizeClass;
@property (nonatomic, readonly) bool unlockedSinceBoot;

// Image: /System/Library/PrivateFrameworks/ClockKit.framework/ClockKit

+ (void)_deviceDidBecomeActive;
+ (void)_resetCurrentDevice;
+ (id)currentDevice;
+ (id)deviceForNRDevice:(id)arg1;
+ (id)deviceForNRDevice:(id)arg1 forced:(bool)arg2;
+ (id)deviceForNRDeviceUUID:(id)arg1;
+ (void)initialize;
+ (id)nrDeviceForNRDeviceUUID:(id)arg1;
+ (void)setCurrentDevice:(id)arg1;

- (void).cxx_destruct;
- (void)_loadDeviceInfo;
- (unsigned long long)collectionType;
- (id)initWithNRDevice:(id)arg1;
- (bool)isBridgeActive;
- (bool)isEqual:(id)arg1;
- (bool)isExplorer;
- (bool)isLocked;
- (bool)isLuxo;
- (bool)limitedToPreGlory;
- (unsigned long long)materialType;
- (id)nrDevice;
- (id)nrDeviceUUID;
- (unsigned int)nrDeviceVersion;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })screenBounds;
- (double)screenCornerRadius;
- (double)screenScale;
- (void)setCollectionType:(unsigned long long)arg1;
- (void)setIsBridgeActive:(bool)arg1;
- (void)setIsExplorer:(bool)arg1;
- (void)setIsLuxo:(bool)arg1;
- (void)setMaterialType:(unsigned long long)arg1;
- (void)setNrDevice:(id)arg1;
- (void)setScreenBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScreenCornerRadius:(double)arg1;
- (void)setScreenScale:(double)arg1;
- (void)setSizeClass:(unsigned long long)arg1;
- (unsigned long long)sizeClass;
- (bool)unlockedSinceBoot;

// Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion

+ (void)setBridgeActiveNRDevice:(id)arg1;

- (bool)canCustomize;
- (bool)isEcgPhoneComplicationEnabled;
- (bool)isPaired;
- (bool)isRadioPhoneComplicationEnabled;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

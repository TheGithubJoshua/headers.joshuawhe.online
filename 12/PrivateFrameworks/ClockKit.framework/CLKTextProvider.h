<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CLKTextProvider.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ClockKit.framework/CLKTextProvider.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ClockKit.framework/ClockKit (1)
 */

@interface CLKTextProvider : NSObject <NSCopying, NSSecureCoding> {
    struct NSNumber { Class x1; } * _30fpsTimerToken;
    NSMutableDictionary * _cachesByKey;
    CLKTextProviderCache * _defaultCache;
    bool  _finalized;
    bool  _italicized;
    struct NSNumber { Class x1; } * _minuteTimerToken;
    unsigned long long  _nextUpdateToken;
    bool  _paused;
    NSMutableArray * _recentCacheKeys;
    struct NSNumber { Class x1; } * _secondTimerToken;
    long long  _shrinkTextPreference;
    long long  _timeTravelUpdateFrequency;
    UIColor * _tintColor;
    NSMutableDictionary * _updateHandlersByToken;
    bool  _useMonospacedNumbersForTimeTravel;
}

@property (nonatomic) bool italicized;
@property (nonatomic) bool paused;
@property (nonatomic) long long shrinkTextPreference;
@property (nonatomic) long long timeTravelUpdateFrequency;
@property (nonatomic, retain) UIColor *tintColor;
@property (nonatomic) bool useMonospacedNumbersForTimeTravel;

+ (id)localizableTextProviderWithStringsFileFormatKey:(id)arg1 textProviders:(id)arg2;
+ (id)localizableTextProviderWithStringsFileTextKey:(id)arg1;
+ (id)localizableTextProviderWithStringsFileTextKey:(id)arg1 shortTextKey:(id)arg2;
+ (bool)supportsSecureCoding;
+ (id)textProviderWithFormat:(id)arg1;
+ (id)textProviderWithFormat:(id)arg1 arguments:(char *)arg2;
+ (id)textProviderWithJSONObjectRepresentation:(id)arg1;

- (void).cxx_destruct;
- (id)JSONObjectRepresentation;
- (id)_cacheForKey:(id)arg1;
- (void)_commonInit;
- (id)_defaultCache;
- (id)_description;
- (void)_endSession;
- (id)_initWithJSONObjectRepresentation:(id)arg1;
- (id)_italicize:(id)arg1;
- (void)_localeChanged;
- (id)_localizedTextProviderWithBundle:(id)arg1 forLocalization:(id)arg2;
- (void)_maybeStartOrStopUpdates;
- (void)_pruneCacheKeysIfNecessary;
- (id)_sessionAttributedTextForIndex:(unsigned long long)arg1 withStyle:(id)arg2;
- (id)_sessionCacheKey;
- (void)_startSessionWithDate:(id)arg1;
- (id)_timeFormatByRemovingDesignatorOfTimeFormat:(id)arg1;
- (id)_timeFormatByRemovingWhitespaceAroundDesignatorOfTimeFormat:(id)arg1 andRemovingDesignator:(bool)arg2 designatorExists:(bool*)arg3;
- (id)_timeFormatByRemovingWhitespaceAroundDesignatorOfTimeFormat:(id)arg1 designatorExists:(bool*)arg2;
- (void)_update;
- (long long)_updateFrequency;
- (void)_validate;
- (id)attributedString;
- (id)attributedTextAndSize:(struct CGSize { double x1; double x2; }*)arg1 forMaxWidth:(double)arg2 withStyle:(id)arg3 now:(id)arg4;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (id)finalizedCopy;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)italicized;
- (id)localizedTextProviderWithBundle:(id)arg1 forLocalization:(id)arg2;
- (struct CGSize { double x1; double x2; })minimumSizeWithStyle:(id)arg1 now:(id)arg2;
- (bool)paused;
- (id)sessionAttributedTextForIndex:(unsigned long long)arg1 withStyle:(id)arg2;
- (void)setItalicized:(bool)arg1;
- (void)setPaused:(bool)arg1;
- (void)setShrinkTextPreference:(long long)arg1;
- (void)setTimeTravelUpdateFrequency:(long long)arg1;
- (void)setTintColor:(id)arg1;
- (void)setUseMonospacedNumbersForTimeTravel:(bool)arg1;
- (long long)shrinkTextPreference;
- (struct NSNumber { Class x1; }*)startUpdatesWithHandler:(id /* block */)arg1;
- (void)stopUpdatesForToken:(struct NSNumber { Class x1; }*)arg1;
- (long long)timeTravelUpdateFrequency;
- (id)tintColor;
- (bool)useMonospacedNumbersForTimeTravel;
- (void)validate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HKDateCache.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthUI.framework/HKDateCache.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthUI.framework/HealthUI ()
 */

@interface HKDateCache : NSObject {
    NSCalendar * _calendar;
    NSDate * _currentDate;
    NSDate * _endOfDayMidnight;
    NSDate * _endOfRollingMonthMidnight;
    NSDate * _endOfRollingWeekMidnight;
    NSDate * _endOfRollingYear;
    NSDate * _endOfTomorrowMidnight;
    NSDate * _endOfYesterdayMidnight;
    NSHashTable * _observers;
    NSDate * _oneMinuteBeforeEndOfDayMidnight;
    NSDate * _oneSecondBeforeEndOfDayMidnight;
    NSDate * _startOfDayMidnight;
    NSDate * _startOfRollingMonthMidnight;
    NSDate * _startOfRollingWeekMidnight;
    NSDate * _startOfRollingYear;
    NSDate * _startOfTomorrowMidnight;
    NSDate * _startOfYesterdayMidnight;
    NSSet * _weekendDays;
}

@property (nonatomic, readonly) NSCalendar *calendar;
@property (nonatomic, readonly) NSDate *endOfDayMidnight;
@property (nonatomic, readonly) NSDate *endOfRollingMonthMidnight;
@property (nonatomic, readonly) NSDate *endOfRollingWeekMidnight;
@property (nonatomic, readonly) NSDate *endOfRollingYearMidnight;
@property (nonatomic, readonly) NSDate *endOfTomorrowMidnight;
@property (nonatomic, readonly) NSDate *endOfYesterdayMidnight;
@property (nonatomic, readonly) NSDate *oneMinuteBeforeEndOfDayMidnight;
@property (nonatomic, readonly) NSDate *oneSecondBeforeEndOfDayMidnight;
@property (nonatomic, readonly) NSDate *startOfDayMidnight;
@property (nonatomic, readonly) NSDate *startOfRollingMonthMidnight;
@property (nonatomic, readonly) NSDate *startOfRollingWeekMidnight;
@property (nonatomic, readonly) NSDate *startOfRollingYearMidnight;
@property (nonatomic, readonly) NSDate *startOfTomorrowMidnight;
@property (nonatomic, readonly) NSDate *startOfYesterdayMidnight;

- (void).cxx_destruct;
- (id)_currentDate;
- (void)_flushCacheAndNotifyObservers:(id)arg1;
- (void)_notifyObserversDidUpdateOnNotification:(id)arg1;
- (void)_setCurrentDate:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)calendar;
- (void)dealloc;
- (id)endOfDayMidnight;
- (id)endOfRollingDay:(id /* block */)arg1;
- (id)endOfRollingMonth:(id /* block */)arg1;
- (id)endOfRollingMonthMidnight;
- (id)endOfRollingWeek:(id /* block */)arg1;
- (id)endOfRollingWeekMidnight;
- (id)endOfRollingYear:(id /* block */)arg1;
- (id)endOfRollingYearMidnight;
- (id)endOfTomorrowMidnight;
- (id)endOfYesterdayMidnight;
- (void)flushCache;
- (id)init;
- (id)initWithCalendar:(id)arg1;
- (bool)isDateInThisCalendarMonth:(id)arg1;
- (bool)isDateInThisCalendarYear:(id)arg1;
- (bool)isDateInToday:(id)arg1;
- (bool)isDateInTomorrow:(id)arg1;
- (bool)isDateInYesterday:(id)arg1;
- (bool)isDateWithinLastRollingMonth:(id)arg1;
- (bool)isDateWithinLastRollingYear:(id)arg1;
- (bool)isDayOfWeekNumberOnWeekend:(id)arg1;
- (id)oneMinuteBeforeEndOfDayMidnight;
- (id)oneSecondBeforeEndOfDayMidnight;
- (void)removeObserver:(id)arg1;
- (id)startOfDayMidnight;
- (id)startOfRollingDay:(id /* block */)arg1;
- (id)startOfRollingMonth:(id /* block */)arg1;
- (id)startOfRollingMonthMidnight;
- (id)startOfRollingWeek:(id /* block */)arg1;
- (id)startOfRollingWeekMidnight;
- (id)startOfRollingYear:(id /* block */)arg1;
- (id)startOfRollingYearMidnight;
- (id)startOfTomorrowMidnight;
- (id)startOfYesterdayMidnight;
- (id)weekendDays;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

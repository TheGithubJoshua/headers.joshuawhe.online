<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HKSourceAuthorizationController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthUI.framework/HKSourceAuthorizationController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthUI.framework/HealthUI ()
 */

@interface HKSourceAuthorizationController : NSObject {
    <HKSourceAuthorizationControllerDelegate> * _delegate;
    HKHealthStore * _healthStore;
    bool  _isUpdatingAllTypes;
    NSArray * _orderedTypesForReading;
    NSArray * _orderedTypesForSharing;
    NSDictionary * _requestedDocumentAuths;
    NSSet * _requestedTypesForReading;
    NSSet * _requestedTypesForSharing;
    HKSource * _source;
    NSMutableSet * _typesEnabledForReading;
    NSMutableSet * _typesEnabledForSharing;
}

@property (nonatomic, readonly) bool anyTypeRequested;
@property (nonatomic) <HKSourceAuthorizationControllerDelegate> *delegate;
@property (nonatomic, readonly) HKHealthStore *healthStore;
@property (nonatomic) bool isUpdatingAllTypes;
@property (nonatomic, retain) NSArray *orderedTypesForReading;
@property (nonatomic, retain) NSArray *orderedTypesForSharing;
@property (nonatomic, retain) NSDictionary *requestedDocumentAuths;
@property (nonatomic, retain) NSSet *requestedTypesForReading;
@property (nonatomic, retain) NSSet *requestedTypesForSharing;
@property (nonatomic, readonly) HKSource *source;
@property (nonatomic, retain) NSMutableSet *typesEnabledForReading;
@property (nonatomic, retain) NSMutableSet *typesEnabledForSharing;

- (void).cxx_destruct;
- (long long)_authorizationStatusWithType:(id)arg1;
- (id)_enabledSubTypesForType:(id)arg1 inSection:(long long)arg2;
- (id)_enabledTypesInSection:(long long)arg1;
- (bool)_parentTypeDisabledForType:(id)arg1 inSection:(long long)arg2;
- (void)_reloadDocumentAuthorizationRecords;
- (void)_reloadTypeAuthorizationRecords;
- (void)_setAuthorizationStatuses:(id)arg1;
- (id)_sortedTypes:(id)arg1;
- (void)_updateAuthorizationStatusWithTypes:(id)arg1;
- (bool)allTypesEnabled;
- (bool)anyTypeEnabled;
- (bool)anyTypeRequested;
- (void)commitAuthorizationStatuses;
- (void)commitObjectAuthorizationStatuses:(id)arg1;
- (unsigned long long)countOfTypesInSection:(long long)arg1;
- (id)delegate;
- (id)healthStore;
- (id)initWithHealthStore:(id)arg1 source:(id)arg2 typesForSharing:(id)arg3 typesForReading:(id)arg4;
- (bool)isRequestingDocumentAuthorization;
- (bool)isTypeEnabled:(id)arg1 inSection:(long long)arg2;
- (bool)isUpdatingAllTypes;
- (id)objectAuthorizationStatusesForDocuments;
- (id)orderedTypesForReading;
- (id)orderedTypesForSharing;
- (void)reload;
- (id)requestedDocumentAuths;
- (id)requestedTypesForReading;
- (id)requestedTypesForSharing;
- (void)resetObjectAuthorizationStatuses;
- (void)setDelegate:(id)arg1;
- (void)setEnabled:(bool)arg1 forAllTypesInSection:(long long)arg2 commit:(bool)arg3;
- (void)setEnabled:(bool)arg1 forType:(id)arg2 inSection:(long long)arg3 commit:(bool)arg4;
- (void)setIsUpdatingAllTypes:(bool)arg1;
- (void)setOrderedTypesForReading:(id)arg1;
- (void)setOrderedTypesForSharing:(id)arg1;
- (void)setRequestedDocumentAuths:(id)arg1;
- (void)setRequestedTypesForReading:(id)arg1;
- (void)setRequestedTypesForSharing:(id)arg1;
- (void)setTypesEnabledForReading:(id)arg1;
- (void)setTypesEnabledForSharing:(id)arg1;
- (id)source;
- (id)typesEnabledForReading;
- (id)typesEnabledForSharing;
- (id)typesInSection:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

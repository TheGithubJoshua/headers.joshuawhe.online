<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HKClinicalSourceAuthorizationController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthUI.framework/HKClinicalSourceAuthorizationController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthUI.framework/HealthUI ()
 */

@interface HKClinicalSourceAuthorizationController : NSObject {
    id /* block */  __unitTesting_reminderRegistryCompletion;
    bool  _anyDeterminedTypeAllowsReading;
    long long  _authorizationModeForSource;
    NSDate * _displayReadAuthorizationAnchorDate;
    NSError * _fetchError;
    HKHealthRecordsStore * _healthRecordsStore;
    HKHealthStore * _healthStore;
    NSArray * _orderedTypesForReading;
    HKSource * _source;
    NSMutableSet * _typesEnabledForReading;
    NSSet * _typesForReading;
    NSSet * _typesRequestedForReading;
}

@property (setter=_unitTesting_setReminderRegistryCompletion:, nonatomic, copy) id /* block */ _unitTesting_reminderRegistryCompletion;
@property (nonatomic) bool anyDeterminedTypeAllowsReading;
@property (nonatomic, readonly) bool anyTypeRequested;
@property (nonatomic) long long authorizationModeForSource;
@property (nonatomic, copy) NSDate *displayReadAuthorizationAnchorDate;
@property (nonatomic, copy) NSError *fetchError;
@property (nonatomic, readonly) HKHealthRecordsStore *healthRecordsStore;
@property (nonatomic, readonly) HKHealthStore *healthStore;
@property (nonatomic, readonly, copy) NSArray *orderedTypesForReading;
@property (nonatomic, readonly, copy) HKSource *source;
@property (nonatomic, readonly) NSMutableSet *typesEnabledForReading;
@property (nonatomic, copy) NSSet *typesForReading;
@property (nonatomic, readonly, copy) NSSet *typesRequestedForReading;

- (void).cxx_destruct;
- (id)_authorizationModesWithMode:(long long)arg1 types:(id)arg2;
- (long long)_authorizationStatusWithType:(id)arg1;
- (id)_authorizationStatusesWithTypes:(id)arg1;
- (void)_commitModeConfirmationAlertRegistrationShouldDisplay:(bool)arg1;
- (id)_fetchAllClinicalAuthorizationRecordsWithError:(id*)arg1;
- (id)_orderTypes:(id)arg1;
- (void)_setAuthorizationStatuses:(id)arg1 modes:(id)arg2 shouldUpdateAnchor:(bool)arg3;
- (bool)_shouldUpdateDisplayReadAuthorizationAnchorDateWhenCommittingWithMode:(long long)arg1;
- (id /* block */)_unitTesting_reminderRegistryCompletion;
- (void)_unitTesting_setReminderRegistryCompletion:(id /* block */)arg1;
- (void)_updateDisplayReadAuthorizationAnchorDateIfNeededForCommittingModes:(id)arg1;
- (void)_updateReminderRegistrationIfNeededForCommittingModes:(id)arg1 anyTypeEnabled:(bool)arg2;
- (bool)allTypesEnabled;
- (bool)anyDeterminedTypeAllowsReading;
- (bool)anyTypeEnabled;
- (bool)anyTypeRequested;
- (long long)authorizationModeForSource;
- (void)commitAllTypesAndUpdateAuthorizationAnchorWithMode:(long long)arg1;
- (id)displayReadAuthorizationAnchorDate;
- (id)fetchError;
- (id)healthRecordsStore;
- (id)healthStore;
- (id)initWithHealthStore:(id)arg1 healthRecordsStore:(id)arg2 source:(id)arg3 typesRequestedForReading:(id)arg4;
- (bool)isTypeEnabled:(id)arg1;
- (id)orderedTypesForReading;
- (void)reload;
- (void)setAnyDeterminedTypeAllowsReading:(bool)arg1;
- (void)setAuthorizationModeForSource:(long long)arg1;
- (void)setDisplayReadAuthorizationAnchorDate:(id)arg1;
- (void)setEnabled:(bool)arg1 forType:(id)arg2 commit:(bool)arg3;
- (void)setEnabledForAllTypes:(bool)arg1;
- (void)setFetchError:(id)arg1;
- (void)setTypesForReading:(id)arg1;
- (id)source;
- (id)typesEnabledForReading;
- (id)typesForReading;
- (id)typesRequestedForReading;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

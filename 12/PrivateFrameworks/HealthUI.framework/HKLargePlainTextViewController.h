<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HKLargePlainTextViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthUI.framework/HKLargePlainTextViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthUI.framework/HealthUI ()
 */

@interface HKLargePlainTextViewController : HKViewController <HKIncrementalSearchBarDelegate> {
    double  _currentKeyboardHeight;
    NSMutableArray * _currentRanges;
    _IncrementalSearchOperation * _currentSearch;
    long long  _currentSearchItem;
    UIColor * _currentSelectionBackground;
    NSData * _data;
    NSString * _dataAsString;
    HKIncrementalSearchBar * _incrementalSearchBar;
    UIColor * _normalTextViewBackground;
    UIColor * _otherSelectionBackground;
    NSOperationQueue * _searchQueue;
    UIColor * _selectedTextViewBackground;
    UITextView * _textView;
}

@property (nonatomic) double currentKeyboardHeight;
@property (nonatomic, retain) NSMutableArray *currentRanges;
@property (retain) _IncrementalSearchOperation *currentSearch;
@property long long currentSearchItem;
@property (nonatomic, readonly) UIColor *currentSelectionBackground;
@property (readonly) NSData *data;
@property (nonatomic, readonly) NSString *dataAsString;
@property (nonatomic, readonly) HKIncrementalSearchBar *incrementalSearchBar;
@property (nonatomic, readonly) UIColor *normalTextViewBackground;
@property (nonatomic, readonly) UIColor *otherSelectionBackground;
@property (nonatomic, readonly) NSOperationQueue *searchQueue;
@property (nonatomic, readonly) UIColor *selectedTextViewBackground;
@property (nonatomic, readonly) UITextView *textView;

- (void).cxx_destruct;
- (id)_selectionAttributes:(bool)arg1;
- (id)_standardPlainTextFont;
- (void)_updateCurrentSearchItem:(unsigned long long)arg1 hitsChanged:(bool)arg2 resetSearch:(bool)arg3;
- (bool)_updateMatchDisplayString:(unsigned long long)arg1 numMatches:(unsigned long long)arg2;
- (void)addSearchResults:(struct IncrementalSearchResultsDefn { unsigned long long x1; struct _NSRange { unsigned long long x_2_1_1; unsigned long long x_2_1_2; } x2[64]; })arg1;
- (void)cancelCurrentSearch;
- (double)currentKeyboardHeight;
- (id)currentRanges;
- (id)currentSearch;
- (long long)currentSearchItem;
- (id)currentSelectionBackground;
- (id)data;
- (id)dataAsString;
- (void)endSearchResults;
- (void)finishSearchResults;
- (id)incrementalSearchBar;
- (void)incrementalSearchOperation:(id)arg1;
- (id)initWithData:(id)arg1;
- (void)loadView;
- (id)normalTextViewBackground;
- (id)otherSelectionBackground;
- (void)resetCurrentSearchItem;
- (void)resetSearchResults;
- (void)searchBarChangeSearch:(id)arg1 searchString:(id)arg2;
- (void)searchBarDoneAction:(id)arg1;
- (void)searchBarDownAction:(id)arg1;
- (void)searchBarUpAction:(id)arg1;
- (id)searchBodyWithAttributes;
- (id)searchQueue;
- (id)selectedTextViewBackground;
- (void)setCurrentKeyboardHeight:(double)arg1;
- (void)setCurrentRanges:(id)arg1;
- (void)setCurrentSearch:(id)arg1;
- (void)setCurrentSearchItem:(long long)arg1;
- (void)startIncrementalSearch;
- (unsigned long long)supportedInterfaceOrientations;
- (id)textView;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MCDBrowsableContentTableViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MusicCarDisplayUI.framework/MCDBrowsableContentTableViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MusicCarDisplayUI.framework/MusicCarDisplayUI (1)
 */

@interface MCDBrowsableContentTableViewController : UIViewController <MCDErrorViewDelegate, MCDPCContainerDelegate, UIGestureRecognizerDelegate, UITableViewDataSource, UITableViewDelegate> {
    UIView * _MCD_tableView;
    UIAlertController * _alertController;
    MCDPCContainer * _container;
    long long  _count;
    bool  _currentlyPlayingApp;
    _UIFilteredDataSource * _dataSource;
    MPWeakTimer * _delayTimer;
    bool  _didFinishInitialLoad;
    bool  _didFinishInitialViewAppear;
    bool  _didPushToNowPlayingAtLaunch;
    AVExternalDevice * _externalDevice;
    bool  _hasCarScreen;
    bool  _hasNoBrowsableContent;
    bool  _hasTabbedBrowsing;
    bool  _limited;
    MPWeakTimer * _loadingTimer;
    MCDNowPlayingButton * _nowPlayingButton;
    UIView * _placeholderView;
    bool  _pushToNowPlaying;
    NSIndexPath * _reselectIndexPath;
    NSIndexPath * _selectedIndexPath;
    NSIndexPath * _selectedNextIndexPath;
    NSObject<OS_dispatch_queue> * _serialQueue;
    UITableView * _tableView;
    bool  _visible;
}

@property (nonatomic, retain) UIAlertController *alertController;
@property (nonatomic, retain) MCDPCContainer *container;
@property (nonatomic) bool currentlyPlayingApp;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didFinishInitialLoad;
@property (nonatomic) bool didFinishInitialViewAppear;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MPWeakTimer *loadingTimer;
@property (nonatomic, retain) UIView *placeholderView;
@property (nonatomic) bool pushToNowPlaying;
@property (nonatomic, retain) NSIndexPath *selectedIndexPath;
@property (readonly) Class superclass;
@property (getter=isVisible, nonatomic) bool visible;

- (void).cxx_destruct;
- (void)_appRegisteredForContent:(id)arg1;
- (void)_clearLoadingActivity;
- (void)_clearTableViewSelectionAnimated:(bool)arg1;
- (void)_configureCell:(id)arg1 forIndexPath:(id)arg2;
- (void)_displayErrorAlertController:(id)arg1;
- (void)_displayLoadingActivity;
- (void)_limitedUIChanged:(id)arg1;
- (void)_nowPlayingButtonTapped:(id)arg1;
- (void)_nowPlayingDidChange:(id)arg1;
- (void)_pushToNowPlaying:(bool)arg1;
- (void)_replacePlaceholderViewWithView:(id)arg1;
- (bool)_shouldLimitLists;
- (void)_showLoadingScreen;
- (void)_showTimeoutScreen;
- (void)_updateNowPlayingButtonVisibility;
- (id)alertController;
- (id)container;
- (void)container:(id)arg1 didInvalidateIndicies:(id)arg2;
- (void)containerDidChangeCount:(id)arg1;
- (id)contentScrollView;
- (bool)currentlyPlayingApp;
- (void)dealloc;
- (id)description;
- (bool)didFinishInitialLoad;
- (bool)didFinishInitialViewAppear;
- (void)errorViewDidTapButton:(id)arg1;
- (id)initWithContainer:(id)arg1;
- (id)initWithContainer:(id)arg1 tabbedBrowsing:(bool)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)isVisible;
- (id)loadingTimer;
- (id)placeholderView;
- (id)preferredFocusEnvironments;
- (bool)pushToNowPlaying;
- (void)reloadTable;
- (void)reloadWithCompletion:(id /* block */)arg1;
- (id)selectedIndexPath;
- (void)setAlertController:(id)arg1;
- (void)setContainer:(id)arg1;
- (void)setCurrentlyPlayingApp:(bool)arg1;
- (void)setDidFinishInitialLoad:(bool)arg1;
- (void)setDidFinishInitialViewAppear:(bool)arg1;
- (void)setLoadingTimer:(id)arg1;
- (void)setPlaceholderView:(id)arg1;
- (void)setPushToNowPlaying:(bool)arg1;
- (void)setSelectedIndexPath:(id)arg1;
- (void)setVisible:(bool)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didFocusRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTKVictoryAnalogBackgroundView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoTimeKitCompanion.framework/NTKVictoryAnalogBackgroundView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion (1)
 */

@interface NTKVictoryAnalogBackgroundView : UIView {
    NSArray * _activeDigitIndices;
    NSArray * _bigNumberLayers;
    bool  _canonicalDigitStatesByStyle;
    unsigned long long  _color;
    <NTKVictoryAnalogBackgroundViewDelegate> * _delegate;
    CLKDevice * _device;
    UIImage * _dotImage;
    NSMutableDictionary * _largeNumberImages;
    NTKVictoryAnalogFakeComplicationButton * _logoButton;
    CALayer * _logoLayer;
    struct CGPoint { 
        double x; 
        double y; 
    }  _logoPositionBig;
    struct CGPoint { 
        double x; 
        double y; 
    }  _logoPositionNoDigits;
    struct CGPoint { 
        double x; 
        double y; 
    }  _logoPositionRing;
    NSMutableDictionary * _regularNumberImages;
    bool  _ringLayerIsDigit;
    NSArray * _ringLayers;
    unsigned long long  _style;
    NSArray * _transitionDigitIndices;
    NSDictionary * _transitionDigitTargetStates;
    unsigned long long  _transitionFromStyle;
    NSArray * _transitionStaticDigitIndices;
    CAMediaTimingFunction * _transitionTimingFunction;
    unsigned long long  _transitionToStyle;
}

@property (nonatomic) unsigned long long color;
@property (nonatomic) <NTKVictoryAnalogBackgroundViewDelegate> *delegate;
@property (nonatomic) unsigned long long style;

+ (id)_disabledLayerActions;

- (void).cxx_destruct;
- (void)_applyColor:(unsigned long long)arg1 forStyle:(unsigned long long)arg2;
- (void)_applyTransitionFraction:(double)arg1 fromPalette:(id)arg2 toPalette:(id)arg3 style:(unsigned long long)arg4;
- (id)_bigNumberInitialTransforms;
- (void)_clearTransitionStateForStyle:(unsigned long long)arg1;
- (id)_createAndAddLayersWithCount:(unsigned long long)arg1;
- (void)_createBigNumberLayersIfNeeded;
- (void)_createRingLayersIfNeeded;
- (id)_dotImage;
- (double)_elementScaleForTransitionProgress:(double)arg1 initialScale:(double)arg2 middleScale:(double)arg3 finalScale:(double)arg4;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })_intermediateTransformForBigNumberAtIndex:(unsigned long long)arg1 fraction:(double)arg2;
- (id)_largeNumberImageForNumber:(unsigned long long)arg1;
- (struct CGColor { }*)_layerTransitionColorFromColor:(id)arg1 toColor:(id)arg2 amount:(double)arg3;
- (id)_logoImage;
- (void)_logoTapped;
- (id)_regularNumberImageForNumber:(unsigned long long)arg1;
- (struct CGPoint { double x1; double x2; })_ringDigitOffsetAtIndex:(unsigned long long)arg1;
- (void)_setRingLayerAtIndex:(unsigned long long)arg1 isDigit:(bool)arg2;
- (double)_transitionProgressForDigitAtIndex:(unsigned long long)arg1 overallProgress:(double)arg2 delayPerDigit:(double)arg3 digitTransitionLength:(double)arg4;
- (void)applyTransitionFraction:(double)arg1 fromColor:(unsigned long long)arg2 toColor:(unsigned long long)arg3;
- (void)applyTransitionFraction:(double)arg1 fromStyle:(unsigned long long)arg2 toStyle:(unsigned long long)arg3;
- (unsigned long long)color;
- (id)delegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forDevice:(id)arg2;
- (void)layoutSubviews;
- (void)setColor:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setInTimeTravel:(bool)arg1 animated:(bool)arg2;
- (void)setStyle:(unsigned long long)arg1;
- (unsigned long long)style;
- (void)willBeginEditing;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTKCurvedColoringLabel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoTimeKitCompanion.framework/NTKCurvedColoringLabel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion (1)
 */

@interface NTKCurvedColoringLabel : NTKColoringLabel {
    NSAttributedString * _attributedStringWithoutColorModification;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedBounds;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _cachedGlyphsBoundingRect;
    double  _centerAngle;
    double  _circleRadius;
    CLKFont * _font;
    bool  _hasMonospacedNumbers;
    double  _imagePadding;
    unsigned long long  _imagePlacement;
    UIView * _imageView;
    bool  _interior;
    NSLayoutManager * _layoutManager;
    double  _maxAngularWidth;
    UIColor * _textColor;
    NSTextContainer * _textContainer;
    NSTextStorage * _textStorage;
    double  _viewAlpha;
}

@property (nonatomic) double centerAngle;
@property (nonatomic) double circleRadius;
@property (nonatomic) double imagePadding;
@property (nonatomic) unsigned long long imagePlacement;
@property (nonatomic) UIView *imageView;
@property (nonatomic) bool interior;
@property (nonatomic) double maxAngularWidth;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } textBoundingRect;

- (void).cxx_destruct;
- (double)_distance;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_drawableCharacterRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg1;
- (void)_enumerateTransforms:(bool)arg1 callback:(id /* block */)arg2;
- (void)_enumerateTransformsForDrawableCharacters:(id /* block */)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_glyphsBoundingRect;
- (bool)_hasImage;
- (struct __CTLine { }*)_newLineFromDrawableTextStorage;
- (struct CGPoint { double x1; double x2; })_offsetOfBoundingRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2;
- (void)_transformForImage:(id /* block */)arg1;
- (void)_updateColor;
- (void)_updateMaxSize;
- (void)_updateTracking;
- (double)alpha;
- (id)attributedText;
- (double)centerAngle;
- (double)circleRadius;
- (id)color;
- (void)dealloc;
- (void)drawTextInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)font;
- (void)getTextCenter:(struct CGPoint { double x1; double x2; }*)arg1 startAngle:(double*)arg2 endAngle:(double*)arg3;
- (double)imagePadding;
- (unsigned long long)imagePlacement;
- (id)imageView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)interior;
- (void)invalidateCachedSize;
- (void)layoutSubviews;
- (double)maxAngularWidth;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)setAlpha:(double)arg1;
- (void)setAttributedText:(id)arg1;
- (void)setCenterAngle:(double)arg1;
- (void)setCircleRadius:(double)arg1;
- (void)setColor:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setImagePadding:(double)arg1;
- (void)setImagePlacement:(unsigned long long)arg1;
- (void)setImageView:(id)arg1;
- (void)setImageView:(id)arg1 placement:(unsigned long long)arg2 padding:(double)arg3;
- (void)setInterior:(bool)arg1;
- (void)setMaxAngularWidth:(double)arg1;
- (void)setMaxWidth:(double)arg1;
- (void)setNumberOfLines:(long long)arg1;
- (void)setText:(id)arg1;
- (void)setTextProviderFont:(id)arg1;
- (void)setTracking:(double)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)text;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })textBoundingRect;
- (id)textProviderFont;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

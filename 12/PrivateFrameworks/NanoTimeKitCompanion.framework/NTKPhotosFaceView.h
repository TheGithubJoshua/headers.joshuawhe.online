<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTKPhotosFaceView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoTimeKitCompanion.framework/NTKPhotosFaceView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion (1)
 */

@interface NTKPhotosFaceView : NTKBasePhotosFaceView <NTKPhotosReaderDelegate> {
    unsigned long long  _currentAnalysisOperationID;
    unsigned long long  _currentContent;
    unsigned long long  _deviceSizeClass;
    id /* block */  _enqueuePreloadedPhotoCompletion;
    _NTKPhotoIndexGenerator * _generator;
    unsigned int  _inPhotoTransition;
    unsigned int  _isAnalysisOperationInProgress;
    unsigned int  _isContentLoaded;
    unsigned int  _isPreloadingNextPhotoOnSleep;
    unsigned int  _isTimetravelScrubbing;
    unsigned long long  _numberOfPhotos;
    UIView * _photoTransitionCornerView;
    UIView * _photoTransitionSnapshotView;
    unsigned long long  _preloadGeneration;
    NSMutableArray * _preloaded;
    NTKCachedPhoto * _presentedPhoto;
    unsigned long long  _queuedTransitionCount;
    NTKPhotosReader * _reader;
    UITapGestureRecognizer * _singleTapGesture;
    NSMutableArray * _toload;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NTKCachedPhoto *presentedPhoto;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_analysisCacheKeyFor:(id)arg1;
- (id)_analysisForAlignment:(unsigned long long)arg1;
- (void)_animationFinished:(bool)arg1;
- (void)_animationStart;
- (void)_applyFrozen;
- (void)_applyOption:(id)arg1 forCustomEditMode:(long long)arg2 slot:(id)arg3;
- (double)_backgroundImageAlphaForEditMode:(long long)arg1;
- (id)_cachedAnalysisForKey:(id)arg1;
- (bool)_canOperationProceed:(unsigned long long)arg1;
- (void)_cleanupAfterEditing;
- (void)_clearPreloaded;
- (void)_configureForEditMode:(long long)arg1;
- (id)_createAndCachePhotoAnalysisForKey:(id)arg1 dateAlignment:(unsigned long long)arg2 image:(id)arg3;
- (id)_dequeueToLoadIfMatchingGeneration:(unsigned long long)arg1;
- (void)_displayCachedPhoto:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)_endScrubbingAnimated:(bool)arg1 withCompletion:(id /* block */)arg2;
- (bool)_enqueuePreloadedPhoto:(id)arg1 ifMatchingGeneration:(unsigned long long)arg2;
- (void)_finalizeForSnapshotting:(id /* block */)arg1;
- (void)_handleSingleTap:(id)arg1;
- (void)_loadSnapshotContentViews;
- (void)_nextPhotoAnimated:(bool)arg1 method:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (void)_nextPhotoReadyAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (void)_operationIsDone;
- (bool)_preloadNextPhoto;
- (bool)_shouldAnimationContinue:(bool)arg1;
- (void)_startBackgroundRefill;
- (void)_startScrubbingAnimated:(bool)arg1 withCompletion:(id /* block */)arg2;
- (double)_timeLabelAlphaForEditMode:(long long)arg1;
- (void)_unloadSnapshotContentViews;
- (void)_updateContents:(bool)arg1;
- (void)_updateDateAttributesAnimated:(bool)arg1;
- (void)_updateForResourceDirectoryChange:(id)arg1;
- (void)_updateImageToBlur;
- (void)_updateReader:(bool)arg1;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)initWithFaceStyle:(long long)arg1 forDevice:(id)arg2 clientIdentifier:(id)arg3;
- (id)presentedPhoto;
- (void)readerDidChange:(id)arg1;
- (void)setPresentedPhoto:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

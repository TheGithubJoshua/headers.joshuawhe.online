<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTKAlbumPhotoFaceView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoTimeKitCompanion.framework/NTKAlbumPhotoFaceView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion (1)
 */

@interface NTKAlbumPhotoFaceView : NTKBasePhotoFaceView <NTKSafeLocketReaderDelegate> {
    NTKAlbumAtom * _canonicalPhotoAtom;
    NTKAlbumAtom * _currentAtom;
    NTKDelayedBlock * _delayedIrisBlock;
    unsigned int  _inPhotoTransition;
    unsigned int  _isContentLoaded;
    unsigned int  _isPreloadingNextPhotoOnSleep;
    unsigned int  _isTimetravelScrubbing;
    unsigned long long  _nextPhotoGeneration;
    unsigned long long  _numberOfPhotos;
    UIView * _photoTransitionCornerView;
    UIView * _photoTransitionSnapshotView;
    unsigned long long  _preloadGeneration;
    NSMutableArray * _preloaded;
    long long  _prevDataMode;
    unsigned long long  _queuedTransitionCount;
    NTKSafeLocketReader * _reader;
    UITapGestureRecognizer * _singleTapGesture;
    NSArray * _switcherSnapshotViews;
}

@property (nonatomic, retain) NTKAlbumAtom *currentAtom;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long numberOfPhotos;
@property (nonatomic, retain) UIView *photoTransitionCornerView;
@property (nonatomic, retain) UIView *photoTransitionSnapshotView;
@property (nonatomic) unsigned long long preloadGeneration;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_analyzeAtom:(id)arg1;
- (void)_animationFinished:(bool)arg1;
- (void)_applyBreathingFraction:(double)arg1 forCustomEditMode:(long long)arg2 slot:(id)arg3;
- (void)_applyDataMode;
- (void)_applyFrozen;
- (void)_applyShowsCanonicalContent;
- (void)_cleanupAfterEditing;
- (void)_clearPreloaded;
- (void)_createSwitcherSnapshotViewsIfNeeded;
- (void)_destroySwitcherSnapshotViews;
- (void)_displayAtom:(id)arg1 animated:(bool)arg2 withAnalysis:(id)arg3 completion:(id /* block */)arg4;
- (void)_endScrubbingAnimated:(bool)arg1 withCompletion:(id /* block */)arg2;
- (bool)_enqueueAtom:(id)arg1 ifMatchingGeneration:(unsigned long long)arg2;
- (void)_handleOrdinaryScreenWake;
- (void)_handleSingleTap:(id)arg1;
- (void)_handleWristRaiseScreenWake;
- (void)_hideEmptyAlbum;
- (void)_hideSwitcherSnapshotViews;
- (void)_layoutPosterAndSnapshotsForSwitcher:(bool)arg1;
- (id)_loadAtomAtIndex:(unsigned long long)arg1;
- (void)_loadIris;
- (void)_loadSnapshotContentViews;
- (void)_locketDidChange;
- (void)_locketDidChangeAsync:(id)arg1;
- (unsigned long long)_nextIndex:(bool)arg1;
- (void)_nextPhotoAnimated:(bool)arg1 random:(bool)arg2;
- (void)_nextPhotoAnimated:(bool)arg1 random:(bool)arg2 loadSynchronous:(bool)arg3 completion:(id /* block */)arg4;
- (bool)_preloadNextPhoto;
- (void)_prepareForEditing;
- (void)_setAtom:(id)arg1 animated:(bool)arg2;
- (bool)_shouldAnimationContinue:(bool)arg1;
- (void)_showEmptyAlbum;
- (void)_startBackgroundRefillFromIndex:(unsigned long long)arg1;
- (void)_startScrubbingAnimated:(bool)arg1 withCompletion:(id /* block */)arg2;
- (void)_unloadSnapshotContentViews;
- (void)_updateForResourceDirectoryChange:(id)arg1;
- (id)currentAtom;
- (void)dealloc;
- (void)firstUnlockDidOccur;
- (void)layoutSubviews;
- (unsigned long long)numberOfPhotos;
- (id)photoTransitionCornerView;
- (id)photoTransitionSnapshotView;
- (unsigned long long)preloadGeneration;
- (void)setCurrentAtom:(id)arg1;
- (void)setNumberOfPhotos:(unsigned long long)arg1;
- (void)setPhotoTransitionCornerView:(id)arg1;
- (void)setPhotoTransitionSnapshotView:(id)arg1;
- (void)setPreloadGeneration:(unsigned long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

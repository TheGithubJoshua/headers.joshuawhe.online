<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTKPrideSplinesQuad.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoTimeKitCompanion.framework/NTKPrideSplinesQuad.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion (1)
 */

@interface NTKPrideSplinesQuad : NTKPrideMetalQuad {
    float  _amplitudeMultiplier;
    bool  _controlPointsNeedUpdate;
    unsigned short  _currentBufferIndex;
    float  _fadeMultiplier;
    bool  _forceRenderOnce;
    NSObject<OS_dispatch_semaphore> * _forceRenderSemaphore;
    bool  _forceRenderSticky;
    struct CGSize { 
        double width; 
        double height; 
    }  _frameBufferSize;
    NSObject<OS_dispatch_queue> * _highPriorityQueue;
    int  _mtlComputeBufferWidth;
    <MTLBuffer> * _mtlComputeInputBuffer;
    <MTLTexture> * _mtlComputeInputTexture;
    <MTLTexture> * _mtlComputeOutputTexture;
    int  _mtlSamplePositionBufferWidth;
    <MTLTexture> * _mtlSamplePositionTexture;
    <MTLBuffer> * _mtlSplinesBuffers;
    <MTLTexture> * _mtlVignetteTex;
    bool  _paused;
    void _size;
    bool  _snapshotting;
    bool  _startWavesAtNextRender;
    NTKPrideTouchCrownHandler * _touchCrownHandler;
}

@property (nonatomic) float amplitudeMultiplier;
@property (readonly) <MTLBuffer> *currentComputeBuffer;
@property (readonly) int currentComputeBufferWidth;
@property (readonly) <MTLBuffer> *currentSplinesBuffer;
@property (nonatomic) float fadeMultiplier;
@property (readonly) NSObject<OS_dispatch_queue> *highPriorityQueue;
@property (readonly) NTKPrideTouchCrownHandler *touchCrownHandler;

- (void).cxx_destruct;
- (id)_generateInterpolationPositions;
- (float)amplitudeMultiplier;
- (float)ampltiudeForControlPoint:(int)arg1 ofSpline:(int)arg2;
- (void)clearWaves;
- (float)combinedAmplitudeForControlPointAtPosition:(void *)arg1 currentTime:(void *)arg2 waveSpeed:(void *)arg3; // needs 3 arg types, found 2: float, float
- (float)computeAmplitudeForControlPoint:(int)arg1 inSpline:(int)arg2 atTime:(double)arg3;
- (id)computeShaderFromLibrary:(id)arg1;
- (void)computeWithEncoder:(id)arg1 pipelineState:(id)arg2;
- (id)currentComputeBuffer;
- (int)currentComputeBufferWidth;
- (id)currentSplinesBuffer;
- (void)dealloc;
- (float)fadeMultiplier;
- (bool)forceRender;
- (void)forceRenderOnce;
- (bool)forceRenderWithCompletion:(id /* block */)arg1;
- (id)fragmentShaderFromLibrary:(id)arg1;
- (void)generateControlPointsForSpline:(int)arg1;
- (id)generateVignetteTextureData;
- (id /* block */)getNTKPrideSplineDefinitionFiller;
- (float)globalAmplitudeForTime:(double)arg1;
- (void)handleSingleTap:(id)arg1;
- (id)highPriorityQueue;
- (id)initWithDevice:(id)arg1 touchCrownHandler:(id)arg2;
- (float)interpolationStepSizeForSpline:(int)arg1;
- (void)loadMetalTexturesAndBuffersWithDevice:(id)arg1;
- (int)maxVertsPerSpline;
- (struct { }*)noiseConfiguration;
- (void)noiseSamplePositionForControlPoint:(int)arg1 inSpline:(int)arg2;
- (int)numControlPointsPerSpline;
- (int)numSplines;
- (int)numVertsForSpline:(int)arg1;
- (bool)postSemaphoreComputeForTime:(double)arg1;
- (bool)preSemaphoreComputeForTime:(double)arg1;
- (void)renderWithEncoder:(id)arg1;
- (void)setAmplitude:(float)arg1 forControlPoint:(int)arg2 ofSpline:(int)arg3;
- (void)setAmplitudeMultiplier:(float)arg1;
- (void)setControlPointsNeedUpdate;
- (void)setFadeMultiplier:(float)arg1;
- (void)setIgnoresStrumAndTap:(bool)arg1;
- (void)setNoise:(void *)arg1 forControlPoint:(void *)arg2 inSpline:(void *)arg3; // needs 3 arg types, found 2: int, int
- (void)setPreviousCrownIndex:(int)arg1;
- (bool)shouldForceRender;
- (id)snapshot;
- (id)snapshotWithScale:(double)arg1;
- (id)snapshotWithSize:(struct CGSize { double x1; double x2; })arg1 scale:(double)arg2;
- (void)startWavesAtNextRender;
- (void)startWavesAtTime:(double)arg1;
- (void)strumToOffset:(double)arg1 withVelocity:(double)arg2;
- (id)touchCrownHandler;
- (float)vignetteAmount;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NTKModuleView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NanoTimeKitCompanion.framework/NTKModuleView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion (1)
 */

@interface NTKModuleView : UIControl <NTKContainerViewLayoutDelegate, NTKControl> {
    NTKFaceColorScheme * _colorScheme;
    double  _contentHeight;
    double  _contentHeightOffset;
    NTKContainerView * _contentView;
    CLKDevice * _device;
    UIColor * _foregroundColor;
    double  _highlightAlpha;
    UIColor * _highlightBackgroundColor;
    double  _highlightCornerRadius;
    UIView * _highlightView;
    UIColor * _overrideColor;
    UIColor * _secondaryForegroundColor;
}

@property (nonatomic, retain) NTKFaceColorScheme *colorScheme;
@property (nonatomic) double contentHeight;
@property (nonatomic) double contentHeightOffset;
@property (nonatomic, readonly) UIView *contentView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CLKDevice *device;
@property (nonatomic, retain) UIColor *foregroundColor;
@property (readonly) unsigned long long hash;
@property (nonatomic) double highlightAlpha;
@property (nonatomic, retain) UIColor *highlightBackgroundColor;
@property (nonatomic) double highlightCornerRadius;
@property (nonatomic, retain) UIColor *overrideColor;
@property (nonatomic, retain) UIColor *secondaryForegroundColor;
@property (readonly) Class superclass;

+ (double)_defaultCornerRadiusForDevice:(id)arg1;
+ (double)cornerRadiusForComplicationFamily:(long long)arg1 forDevice:(id)arg2;

- (void).cxx_destruct;
- (void)_enumerateForegroundColoringViewsWithBlock:(id /* block */)arg1;
- (void)_enumerateSecondaryForegroundColoringViewsWithBlock:(id /* block */)arg1;
- (void)_layoutContentView;
- (void)_updateColors;
- (void)applyColorScheme:(id)arg1;
- (void)applyFaceColor:(unsigned long long)arg1 units:(unsigned long long)arg2;
- (void)applyTransitionFraction:(double)arg1 fromFaceColor:(unsigned long long)arg2 toFaceColor:(unsigned long long)arg3 units:(unsigned long long)arg4 brightenedUnits:(unsigned long long)arg5;
- (id)colorScheme;
- (double)contentHeight;
- (double)contentHeightOffset;
- (id)contentView;
- (id)device;
- (id)foregroundColor;
- (double)highlightAlpha;
- (id)highlightBackgroundColor;
- (double)highlightCornerRadius;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutContainerView:(id)arg1;
- (void)layoutSubviews;
- (void)naturalHorizontalLayoutForViewsAndSpacing:(id)arg1 columnAlignmentSpacing:(bool)arg2;
- (id)overrideColor;
- (id)secondaryForegroundColor;
- (void)setColorScheme:(id)arg1;
- (void)setContentHeight:(double)arg1;
- (void)setContentHeightOffset:(double)arg1;
- (void)setDevice:(id)arg1;
- (void)setForegroundColor:(id)arg1;
- (void)setHighlightAlpha:(double)arg1;
- (void)setHighlightBackgroundColor:(id)arg1;
- (void)setHighlightCornerRadius:(double)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setOverrideColor:(id)arg1;
- (void)setSecondaryForegroundColor:(id)arg1;
- (bool)shouldCancelTouchesInScrollview;
- (id)viewsAndSpacingArrayForSpace:(double)arg1 view:(id)arg2;
- (id)viewsAndSpacingArrayForSpace:(double)arg1 view:(id)arg2 space:(double)arg3 view:(id)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

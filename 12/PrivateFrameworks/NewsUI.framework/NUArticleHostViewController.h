<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NUArticleHostViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsUI.framework/NUArticleHostViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsUI.framework/NewsUI (2166)
 */

@interface NUArticleHostViewController : UIViewController <NUBarCompressible, NULoadingDelegate, NUPageable, SXAnalyticsReporting> {
    <NUAnalyticsReporting> * _analyticsReporting;
    FCArticle * _article;
    <NUArticleViewControllerFactory> * _articleViewControllerFactory;
    FCObservable * _articleViewStyler;
    UIViewController * _contentTypeViewController;
    <NUErrorMessageFactory> * _errorMessageFactory;
    FCIssue * _issue;
    <NULoadingDelegate> * _loadingDelegate;
    UIView<NULoadingViewProviding> * _loadingView;
    NFMultiDelegate * _multiLoadingDelegate;
    NSString * _pageIdentifier;
    <NUSettings> * _settings;
}

@property (nonatomic, readonly) <NUAnalyticsReporting> *analyticsReporting;
@property (nonatomic, readonly) FCArticle *article;
@property (nonatomic, readonly) <NUArticleViewControllerFactory> *articleViewControllerFactory;
@property (nonatomic, readonly) FCObservable *articleViewStyler;
@property (nonatomic, retain) UIViewController *contentTypeViewController;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) <NUErrorMessageFactory> *errorMessageFactory;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) FCIssue *issue;
@property (nonatomic) <NULoadingDelegate> *loadingDelegate;
@property (nonatomic, readonly) NSHashTable *loadingListeners;
@property (nonatomic, retain) UIView<NULoadingViewProviding> *loadingView;
@property (nonatomic, readonly) NFMultiDelegate *multiLoadingDelegate;
@property (nonatomic, readonly, copy) NSString *pageIdentifier;
@property (nonatomic, readonly) UIScrollView *scrollView;
@property (nonatomic, readonly, copy) <NUSettings> *settings;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)analyticsReporting;
- (id)article;
- (id)articleViewControllerFactory;
- (id)articleViewStyler;
- (id)contentTypeViewController;
- (id)errorMessageFactory;
- (id)initWithArticle:(id)arg1 articleViewControllerFactory:(id)arg2 settings:(id)arg3 errorMessageFactory:(id)arg4;
- (id)initWithArticle:(id)arg1 articleViewControllerFactory:(id)arg2 settings:(id)arg3 errorMessageFactory:(id)arg4 analyticsReporting:(id)arg5;
- (id)initWithArticle:(id)arg1 issue:(id)arg2 articleViewControllerFactory:(id)arg3 settings:(id)arg4 errorMessageFactory:(id)arg5 analyticsReporting:(id)arg6;
- (id)issue;
- (void)loadArticleAndEmbedArticleViewController;
- (id)loadingDelegate;
- (void)loadingDidFinishWithError:(id)arg1;
- (void)loadingDidStart;
- (void)loadingDidUpdateProgress:(double)arg1;
- (id)loadingListeners;
- (id)loadingView;
- (void)loadingWillStart;
- (id)multiLoadingDelegate;
- (id)pageIdentifier;
- (void)reportEvent:(id)arg1;
- (id)scrollView;
- (void)setContentTypeViewController:(id)arg1;
- (void)setLoadingDelegate:(id)arg1;
- (void)setLoadingView:(id)arg1;
- (id)settings;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

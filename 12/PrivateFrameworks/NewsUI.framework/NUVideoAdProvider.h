<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NUVideoAdProvider.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsUI.framework/NUVideoAdProvider.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsUI.framework/NewsUI (2166)
 */

@interface NUVideoAdProvider : NSObject <ADBannerViewInternalDelegate, NUAdContextProvider, SVVideo, SVVideoAdProviding> {
    NSURL * _URL;
    <NUAdProvider> * _adProvider;
    <SXVASTAnalyticsEventInfoFactory> * _analyticsEventInfoFactory;
    bool  _appeared;
    NUAdBannerView * _bannerView;
    <NUAdContextProvider> * _contextProviderForVideoAfter;
    <NUAdContextProvider> * _contextProviderForVideoBefore;
    NSArray * _contextProviders;
    <NUVideoAdEventTracker> * _eventTracker;
    NSString * _identifier;
    <SVVideoMetadata> * _metadata;
    <SVModalPresentationViewControllerProviding> * _modalPresentationViewControllerProvider;
    <NUVideoPlaybackCounter> * _playbackCounter;
    SVKeyValueObserver * _playbackStartedObserver;
    unsigned long long  _skipThreshold;
    SXVideoAdStateManager * _stateManager;
    <SVVisibilityMonitoring> * _videoPlayerVisibilityMonitor;
}

@property (nonatomic, copy) NSURL *URL;
@property (nonatomic, readonly) <NUAdProvider> *adProvider;
@property (nonatomic, readonly) bool allowsCallToActionBar;
@property (nonatomic, readonly) <SXVASTAnalyticsEventInfoFactory> *analyticsEventInfoFactory;
@property (nonatomic) bool appeared;
@property (nonatomic, retain) NUAdBannerView *bannerView;
@property (nonatomic, retain) <NUAdContextProvider> *contextProviderForVideoAfter;
@property (nonatomic, retain) <NUAdContextProvider> *contextProviderForVideoBefore;
@property (nonatomic, copy) NSArray *contextProviders;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <NUVideoAdEventTracker> *eventTracker;
@property (nonatomic, readonly) bool hasAction;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, retain) <SVVideoMetadata> *metadata;
@property (nonatomic, readonly) <SVModalPresentationViewControllerProviding> *modalPresentationViewControllerProvider;
@property (nonatomic, readonly) <NUVideoPlaybackCounter> *playbackCounter;
@property (nonatomic, retain) SVKeyValueObserver *playbackStartedObserver;
@property (nonatomic) unsigned long long skipThreshold;
@property (nonatomic, readonly) SXVideoAdStateManager *stateManager;
@property (readonly) Class superclass;
@property (nonatomic, readonly) double threshold;
@property (nonatomic, readonly) <SVVisibilityMonitoring> *videoPlayerVisibilityMonitor;
@property (nonatomic, readonly) unsigned long long videoType;

- (void).cxx_destruct;
- (id)URL;
- (id)adContextValueForKeyPath:(id)arg1;
- (id)adProvider;
- (bool)allowsCallToActionBar;
- (id)analyticsEventInfoFactory;
- (bool)appeared;
- (id)bannerView;
- (id)contextProviderForVideoAfter;
- (id)contextProviderForVideoBefore;
- (id)contextProviders;
- (id)contextProvidersForKeyPath:(id)arg1;
- (void)didAppear;
- (void)didDisappear;
- (id)eventTracker;
- (bool)hasAction;
- (id)identifier;
- (void)impressionQuartilePassed:(unsigned long long)arg1;
- (void)impressionThresholdPassed:(double)arg1;
- (id)initWithContextProviders:(id)arg1 adProvider:(id)arg2 contextProviderForVideoBefore:(id)arg3 contextProviderForVideoAfter:(id)arg4 eventTracker:(id)arg5 videoPlayerVisibilityMonitor:(id)arg6 analyticsEventInfoFactory:(id)arg7 playbackCounter:(id)arg8 modalPresentationViewControllerProvider:(id)arg9;
- (id /* block */)loadWithCompletionBlock:(id /* block */)arg1;
- (id)metadata;
- (id)metadataForCurrentState;
- (id)modalPresentationViewControllerProvider;
- (void)muteStateChanged:(bool)arg1;
- (id)playbackCounter;
- (void)playbackFailedWithError:(id)arg1;
- (void)playbackFinished;
- (void)playbackInitiated;
- (void)playbackPaused;
- (void)playbackResumed;
- (void)playbackStarted;
- (id)playbackStartedObserver;
- (void)presentAction;
- (void)presentPrivacyStatement;
- (void)setAppeared:(bool)arg1;
- (void)setBannerView:(id)arg1;
- (void)setContextProviderForVideoAfter:(id)arg1;
- (void)setContextProviderForVideoBefore:(id)arg1;
- (void)setContextProviders:(id)arg1;
- (void)setEventTracker:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setPlaybackStartedObserver:(id)arg1;
- (void)setSkipThreshold:(unsigned long long)arg1;
- (void)setURL:(id)arg1;
- (unsigned long long)skipThreshold;
- (void)skipped;
- (id)stateManager;
- (void)tappedAdvance;
- (void)tappedToToggleControls;
- (double)threshold;
- (id)videoPlayerVisibilityMonitor;
- (unsigned long long)videoType;
- (id)viewControllerForStoryboardPresentationFromBannerView:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

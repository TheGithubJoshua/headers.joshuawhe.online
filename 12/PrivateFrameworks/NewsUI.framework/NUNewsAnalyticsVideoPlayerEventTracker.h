<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NUNewsAnalyticsVideoPlayerEventTracker.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/NewsUI.framework/NUNewsAnalyticsVideoPlayerEventTracker.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/NewsUI.framework/NewsUI (2166)
 */

@interface NUNewsAnalyticsVideoPlayerEventTracker : NSObject <NSSNewsAnalyticsArticleViewingSessionTracker, NUVideoPlayerEventTracker> {
    NTPBEvent * _articleHostViewExposureEvent;
    NUNewsAnalyticsVideoPlayerEventTrackerConfiguration * _configuration;
    <NUVideoItem> * _currentVideo;
    int  _currentVideoPlayMethod;
    NSSNewsAnalyticsEventAnnotator * _eventAnnotator;
    <NSSNewsAnalyticsPBEventStreamObserver> * _observer;
    bool  _playbackFinishedForLastVideo;
    <NSSNewsAnalyticsSessionManager> * _sessionManager;
    NSOrderedSet * _videoItems;
    bool  _videoPlayerIsVisible;
}

@property (nonatomic, retain) NTPBEvent *articleHostViewExposureEvent;
@property (nonatomic, readonly, copy) NUNewsAnalyticsVideoPlayerEventTrackerConfiguration *configuration;
@property (nonatomic, copy) <NUVideoItem> *currentVideo;
@property (nonatomic) int currentVideoPlayMethod;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSSNewsAnalyticsEventAnnotator *eventAnnotator;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <NSSNewsAnalyticsPBEventStreamObserver> *observer;
@property (nonatomic) bool playbackFinishedForLastVideo;
@property (nonatomic, readonly) <NSSNewsAnalyticsSessionManager> *sessionManager;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSOrderedSet *videoItems;
@property (getter=isVideoPlayerVisible, nonatomic) bool videoPlayerIsVisible;

- (void).cxx_destruct;
- (id)_adEngagementEventWithType:(int)arg1 configuredWithMetadata:(id)arg2;
- (id)_adImpressionEventConfiguredWithMetadata:(id)arg1;
- (id)_articleViewingSessionIDForVideoItem:(id)arg1;
- (void)_createArticleHostViewExposureEventConfiguredForVideoItem:(id)arg1 withArticlePresentationReason:(int)arg2;
- (id)_currentArticleID;
- (id)_currentArticleViewingSessionID;
- (id)_eventForEventObject:(id)arg1;
- (id)_eventObjectWithAdEngagementEvent:(id)arg1;
- (id)_eventObjectWithAdImpressionEvent:(id)arg1;
- (id)_eventObjectWithLinkTapEvent:(id)arg1;
- (id)_eventObjectWithMediaEngageEvent:(id)arg1;
- (void)_finishAndSubmitArticleHostViewExposureEvent;
- (id)_linkTapEventWithLinkType:(int)arg1 forVideoItem:(id)arg2;
- (id)_mediaEngageCompleteEventConfiguredForVideoItem:(id)arg1;
- (id)_mediaEngageEventWithUserAction:(int)arg1 configuredForVideoItem:(id)arg2;
- (int)_rankInVideoPlaylistOfVideoItem:(id)arg1;
- (void)_submitEvent:(id)arg1;
- (void)_submitEventForEventObject:(id)arg1;
- (id)_widgetEngagementForVideoItem:(id)arg1;
- (id)articleHostViewExposureEvent;
- (id)articleViewingSessionIDForArticleWithID:(id)arg1;
- (id)configuration;
- (id)currentVideo;
- (int)currentVideoPlayMethod;
- (id)eventAnnotator;
- (void)impressionThresholdReachedForVideoAdWithMetadata:(id)arg1;
- (id)initWithConfiguration:(id)arg1 observer:(id)arg2 sessionManager:(id)arg3 userIDProvider:(id)arg4 videoItems:(id)arg5;
- (bool)isVideoPlayerVisible;
- (void)muteStateChanged:(bool)arg1 withVideoItem:(id)arg2 metadata:(id)arg3;
- (id)observer;
- (void)playbackFailedWithVideoItem:(id)arg1 metadata:(id)arg2;
- (bool)playbackFinishedForLastVideo;
- (void)playbackFinishedForVideoAdWithMetadata:(id)arg1;
- (void)playbackFinishedWithVideoItem:(id)arg1 metadata:(id)arg2;
- (void)playbackInitiatedWithVideoItem:(id)arg1 metadata:(id)arg2;
- (void)playbackPausedForVideoAdWithMetadata:(id)arg1;
- (void)playbackPausedWithVideoItem:(id)arg1 metadata:(id)arg2;
- (void)playbackResumedWithVideoItem:(id)arg1 metadata:(id)arg2;
- (void)playbackStartedWithVideoItem:(id)arg1 metadata:(id)arg2;
- (id)sessionManager;
- (void)setArticleHostViewExposureEvent:(id)arg1;
- (void)setCurrentVideo:(id)arg1;
- (void)setCurrentVideoPlayMethod:(int)arg1;
- (void)setPlaybackFinishedForLastVideo:(bool)arg1;
- (void)setVideoPlayerIsVisible:(bool)arg1;
- (void)userEngagedWithAdvanceButtonWithVideoItem:(id)arg1;
- (void)userEngagedWithCallToActionBarWithVideoItem:(id)arg1;
- (void)userEngagedWithCallToActionOfVideoAdWithMetadata:(id)arg1;
- (void)userEngagedWithDiscoverMoreButtonWithVideoItem:(id)arg1;
- (void)userEngagedWithNowPlayingButtonWithVideoItem:(id)arg1;
- (void)userEngagedWithReplayButtonWithVideoItem:(id)arg1;
- (void)userSkippedPlaybackOfVideoAdWithMetadata:(id)arg1;
- (void)videoDidAppearWithVideoItem:(id)arg1;
- (void)videoDidDisappearWithVideoItem:(id)arg1;
- (id)videoItems;
- (void)videoPlayerDidBecomeInvisible;
- (void)videoPlayerDidBecomeVisible;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

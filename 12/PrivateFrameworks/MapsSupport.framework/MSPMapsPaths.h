<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MSPMapsPaths.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MapsSupport.framework/MSPMapsPaths.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MapsSupport.framework/MapsSupport (1)
 */

@interface MSPMapsPaths : NSObject {
    NSString * _bookmarksSettingsPath;
    NSString * _cacheDirectory;
    NSString * _directionsCachePath;
    NSString * _directionsSettingsPath;
    NSString * _failedDirectionsSettingsPath;
    NSString * _failedGeoDirectionsSettingsPath;
    NSString * _failedGeoSearchesSettingsPath;
    NSString * _failedSearchesSettingsPath;
    NSString * _favoritesSyncedMarkerFile;
    NSString * _fuzzyLocationStoragePath;
    NSString * _geoBookmarksSettingsPath;
    NSString * _geoHistorySettingsPath;
    NSString * _groupDirectory;
    NSURL * _groupLibraryURL;
    NSString * _historySettingsPath;
    NSString * _historySyncedMarkerFile;
    id /* block */  _invalidationHandler;
    NSURL * _libraryURL;
    NSString * _mapsDirectory;
    NSString * _nanoDirectory;
    NSString * _nanoHistorySettingsPath;
    NSString * _pinsSettingsPath;
    NSString * _reportAProblemDirectionsRecordingsPath;
    NSString * _reportAProblemNotificationsPath;
    NSString * _reportAProblemSearchRecordingsPath;
    NSString * _transitAppRankerPath;
}

@property (nonatomic, readonly) NSString *bookmarksSettingsPath;
@property (nonatomic, readonly) NSString *cacheDirectory;
@property (nonatomic, readonly) NSString *directionsCachePath;
@property (nonatomic, readonly) NSString *directionsSettingsPath;
@property (nonatomic, readonly) NSString *failedDirectionsSettingsPath;
@property (nonatomic, readonly) NSString *failedGeoDirectionsSettingsPath;
@property (nonatomic, readonly) NSString *failedGeoSearchesSettingsPath;
@property (nonatomic, readonly) NSString *failedSearchesSettingsPath;
@property (nonatomic, readonly) NSString *favoritesSyncedMarkerFile;
@property (nonatomic, readonly) NSString *fuzzyLocationStoragePath;
@property (nonatomic, readonly) NSString *geoBookmarksSettingsPath;
@property (nonatomic, readonly) NSString *geoHistorySettingsPath;
@property (nonatomic, readonly) NSString *groupDirectory;
@property (nonatomic, readonly) NSString *historySettingsPath;
@property (nonatomic, readonly) NSString *historySyncedMarkerFile;
@property (nonatomic, readonly) NSString *homeDirectory;
@property (nonatomic, readonly) NSString *mapsDirectory;
@property (nonatomic, readonly) NSString *nanoDirectory;
@property (nonatomic, readonly) NSString *nanoHistorySettingsPath;
@property (nonatomic, readonly) NSString *pinsSettingsPath;
@property (nonatomic, readonly) NSString *reportAProblemDirectionsRecordingsPath;
@property (nonatomic, readonly) NSString *reportAProblemNotificationsPath;
@property (nonatomic, readonly) NSString *reportAProblemSearchRecordingsPath;
@property (nonatomic, readonly) NSString *transitAppRankerPath;

+ (id)bookmarksSettingsPath;
+ (id)cacheDirectory;
+ (id)currentMapsApplicationContainerURL;
+ (id)currentMapsGroupContainerURL;
+ (id)directionsCachePath;
+ (id)directionsSettingsPath;
+ (id)failedDirectionsSettingsPath;
+ (id)failedGeoDirectionsSettingsPath;
+ (id)failedGeoSearchesSettingsPath;
+ (id)failedSearchesSettingsPath;
+ (id)favoritesSyncedMarkerFile;
+ (id)geoBookmarksSettingsPath;
+ (id)geoHistorySettingsPath;
+ (id)groupDirectory;
+ (id)historySettingsPath;
+ (id)historySyncedMarkerFile;
+ (id)mapsApplicationContainerPaths;
+ (id)mapsApplicationContainerPathsWithInvalidationHandler:(id /* block */)arg1;
+ (id)mapsDirectory;
+ (id)nanoDirectory;
+ (id)nanoHistorySettingsPath;
+ (id)pathsAtLocation:(long long)arg1;
+ (id)pinsSettingsPath;
+ (id)reportAProblemDirectionsRecordingsPath;
+ (id)reportAProblemNotificationsPath;
+ (id)reportAProblemSearchRecordingsPath;
+ (id)transitAppRankerPath;

- (void).cxx_destruct;
- (bool)_deleteSyncedFileAtPath:(id)arg1;
- (void)_invalidate;
- (bool)_shouldSyncMergeAfterCheckingOrCreatingMarkerFileAtPath:(id)arg1;
- (id)bookmarksSettingsPath;
- (id)cacheDirectory;
- (bool)deleteFavoritesSyncedMarkerFile;
- (bool)deleteHistorySyncedMarkerFile;
- (id)directionsCachePath;
- (id)directionsSettingsPath;
- (id)failedDirectionsSettingsPath;
- (id)failedGeoDirectionsSettingsPath;
- (id)failedGeoSearchesSettingsPath;
- (id)failedSearchesSettingsPath;
- (id)favoritesSyncedMarkerFile;
- (id)fuzzyLocationStoragePath;
- (id)geoBookmarksSettingsPath;
- (id)geoHistorySettingsPath;
- (id)groupDirectory;
- (id)historySettingsPath;
- (id)historySyncedMarkerFile;
- (id)homeDirectory;
- (id)initWithLibraryDirectoryURL:(id)arg1 groupLibraryURL:(id)arg2 invalidationHandler:(id /* block */)arg3;
- (id)mapsDirectory;
- (id)nanoDirectory;
- (id)nanoHistorySettingsPath;
- (id)pinsSettingsPath;
- (id)reportAProblemDirectionsRecordingsPath;
- (id)reportAProblemNotificationsPath;
- (id)reportAProblemSearchRecordingsPath;
- (bool)shouldSyncMergeFavoritesAfterCheckingOrCreatingMarkerFile;
- (bool)shouldSyncMergeHistoryAfterCheckingOrCreatingMarkerFile;
- (id)transitAppRankerPath;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

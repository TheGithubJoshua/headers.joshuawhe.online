<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MSPContainer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MapsSupport.framework/MSPContainer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MapsSupport.framework/MapsSupport (1)
 */

@interface MSPContainer : NSObject <MSPContainerPersisterDelegate> {
    NSObject<OS_dispatch_queue> * _accessQueue;
    bool  _coalescedEditsNeedEntireContents;
    NSMutableSet * _coalescedPartialContentIdentifiersToFetch;
    <NSObject><NSCopying> * _contextCoalescingFor;
    NSArray * _currentProcessedContents;
    <MSPContainerStateSnapshot> * _currentStateSnapshot;
    NSCountedSet * _editCoalescingContexts;
    NSMutableArray * _enqueuedCoalescingCompletionBlocks;
    NSMutableArray * _enqueuedCoalescingEditBarrierBlocks;
    bool  _hasScheduledDelayedCommitForCoalescedEdits;
    bool  _isCommittingEnqueuedEdits;
    NSHashTable * _observers;
    MSPContainerPersister * _persister;
    bool  _preventsAssertionsForDuplicateStorageIdentifiers;
    bool  _simulatesClearingDiscardableDataAfterOperations;
}

@property (nonatomic, readonly) bool _preventsAssertionsForDuplicateStorageIdentifiers;
@property (getter=_accessQueue, nonatomic, readonly) NSObject<OS_dispatch_queue> *accessQueue;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) MSPQuerySource *entireContentsQuerySource;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) MSPContainerPersister *persister;
@property (getter=_simulatesClearingDiscardableDataAfterOperations, setter=_setSimulatesClearingDiscardableDataAfterOperations:, nonatomic) bool simulatesClearingDiscardableDataAfterOperations;
@property (readonly) Class superclass;

+ (bool)_deletes:(unsigned long long)arg1 mayRepresentDataLossIfAppliedTo:(unsigned long long)arg2;
+ (void)_disableLogging;
+ (void)_preventAssertionsForDuplicateStorageIdentifiersInContainersCreatedPerfomingBlock:(id /* block */)arg1;
+ (void)clearDiscardableDataFromAllContainers;
+ (void)mutableObjectContentDidUpdate:(id)arg1;

- (void).cxx_destruct;
- (id)_accessQueue;
- (bool)_checkAndAddCoalescedEditForContext:(id)arg1 identifiers:(id)arg2 enqueuedBlock:(id /* block */)arg3 completionQueue:(id)arg4 completion:(id /* block */)arg5;
- (void)_clearObjectCacheIfNeeded;
- (void)_commitEditWithFinalContents:(id)arg1 context:(id)arg2 completion:(id /* block */)arg3;
- (void)_commitPendingCoalescedEditsIfAny;
- (void)_endCoalescingEditsForContext:(id)arg1;
- (void)_forEachObserver:(id /* block */)arg1;
- (id)_objectsWithDuplicateStorageIdentifiersFromArray:(id)arg1;
- (void)_performInitialLoadNotifyingObservers:(bool)arg1 kickOffSynchronously:(bool)arg2 completion:(id /* block */)arg3;
- (bool)_preventsAssertionsForDuplicateStorageIdentifiers;
- (void)_processNewEditedContents:(id)arg1;
- (void)_processNewLoadedContents:(id)arg1;
- (id)_processedContentsForPersisterContents:(id)arg1;
- (void)_setSimulatesClearingDiscardableDataAfterOperations:(bool)arg1;
- (bool)_simulatesClearingDiscardableDataAfterOperations;
- (void)accessContentsUsingConcurrentBlock:(id /* block */)arg1;
- (void)accessStateSnapshotUsingConcurrentBlock:(id /* block */)arg1;
- (void)addObserver:(id)arg1;
- (id)beginCoalescingEditsWithContext:(id)arg1;
- (void)coalesceEditsForContext:(id)arg1 inBlock:(id /* block */)arg2;
- (void)dealloc;
- (void)editByMergingStateSnapshot:(id)arg1 mergeOptions:(id)arg2 context:(id)arg3 completionQueue:(id)arg4 completion:(id /* block */)arg5;
- (void)editContentsUsingBarrierBlock:(id /* block */)arg1 completionQueue:(id)arg2 completion:(id /* block */)arg3;
- (void)editContentsUsingBarrierBlock:(id /* block */)arg1 context:(id)arg2 completionQueue:(id)arg3 completion:(id /* block */)arg4;
- (void)editObjectsWithIdentifiers:(id)arg1 usingBarrierBlock:(id /* block */)arg2 completionQueue:(id)arg3 completion:(id /* block */)arg4;
- (void)editObjectsWithIdentifiers:(id)arg1 usingBarrierBlock:(id /* block */)arg2 context:(id)arg3 completionQueue:(id)arg4 completion:(id /* block */)arg5;
- (id)entireContentsQuerySource;
- (void)eraseFromStorageTypes:(unsigned long long)arg1 withCompletionQueue:(id)arg2 completion:(id /* block */)arg3;
- (void)eraseWithCompletionQueue:(id)arg1 completion:(id /* block */)arg2;
- (id)init;
- (id)initWithPersister:(id)arg1;
- (id)persister;
- (void)persisterContentsDidChangeExternally:(id)arg1;
- (void)removeObserver:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

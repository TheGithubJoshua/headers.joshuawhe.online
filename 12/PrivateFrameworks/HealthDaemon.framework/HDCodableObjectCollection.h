<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDCodableObjectCollection.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDCodableObjectCollection.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDCodableObjectCollection : PBCodable <NSCopying> {
    NSMutableArray * _activityCaches;
    NSMutableArray * _binarySamples;
    NSMutableArray * _categorySamples;
    NSMutableArray * _cdaDocumentSamples;
    NSMutableArray * _correlations;
    NSMutableArray * _deletedSamples;
    NSMutableArray * _fitnessFriendAchievements;
    NSMutableArray * _fitnessFriendActivitySnapshots;
    NSMutableArray * _fitnessFriendWorkouts;
    HDCodableGeneratedObjectCollection * _generatedObjectCollection;
    NSMutableArray * _locationSeries;
    NSMutableArray * _medicalRecords;
    HDCodableProvenance * _provenance;
    NSMutableArray * _quantitySamples;
    HDCodableSource * _source;
    NSString * _sourceBundleIdentifier;
    NSMutableArray * _workouts;
}

@property (nonatomic, retain) NSMutableArray *activityCaches;
@property (nonatomic, retain) NSMutableArray *binarySamples;
@property (nonatomic, retain) NSMutableArray *categorySamples;
@property (nonatomic, retain) NSMutableArray *cdaDocumentSamples;
@property (nonatomic, retain) NSMutableArray *correlations;
@property (nonatomic, retain) NSMutableArray *deletedSamples;
@property (nonatomic, retain) NSMutableArray *fitnessFriendAchievements;
@property (nonatomic, retain) NSMutableArray *fitnessFriendActivitySnapshots;
@property (nonatomic, retain) NSMutableArray *fitnessFriendWorkouts;
@property (nonatomic, retain) HDCodableGeneratedObjectCollection *generatedObjectCollection;
@property (nonatomic, readonly) bool hasGeneratedObjectCollection;
@property (nonatomic, readonly) bool hasProvenance;
@property (nonatomic, readonly) bool hasSource;
@property (nonatomic, readonly) bool hasSourceBundleIdentifier;
@property (nonatomic, retain) NSMutableArray *locationSeries;
@property (nonatomic, retain) NSMutableArray *medicalRecords;
@property (nonatomic, retain) HDCodableProvenance *provenance;
@property (nonatomic, retain) NSMutableArray *quantitySamples;
@property (nonatomic, retain) HDCodableSource *source;
@property (nonatomic, retain) NSString *sourceBundleIdentifier;
@property (nonatomic, retain) NSMutableArray *workouts;

+ (Class)activityCachesType;
+ (Class)binarySamplesType;
+ (Class)categorySamplesType;
+ (Class)cdaDocumentSamplesType;
+ (Class)correlationsType;
+ (Class)deletedSamplesType;
+ (Class)fitnessFriendAchievementsType;
+ (Class)fitnessFriendActivitySnapshotsType;
+ (Class)fitnessFriendWorkoutsType;
+ (Class)locationSeriesType;
+ (Class)medicalRecordsType;
+ (Class)quantitySamplesType;
+ (Class)workoutsType;

- (void).cxx_destruct;
- (id)activityCaches;
- (id)activityCachesAtIndex:(unsigned long long)arg1;
- (unsigned long long)activityCachesCount;
- (void)addAccountOwner:(id)arg1;
- (void)addActivityCaches:(id)arg1;
- (void)addAllergyRecord:(id)arg1;
- (void)addBinarySamples:(id)arg1;
- (void)addCategorySamples:(id)arg1;
- (void)addCdaDocumentSamples:(id)arg1;
- (void)addClinicalRecord:(id)arg1;
- (void)addConditionRecord:(id)arg1;
- (void)addCorrelations:(id)arg1;
- (void)addDeletedSamples:(id)arg1;
- (void)addDiagnosticTestReport:(id)arg1;
- (void)addDiagnosticTestResult:(id)arg1;
- (void)addFitnessFriendAchievements:(id)arg1;
- (void)addFitnessFriendActivitySnapshots:(id)arg1;
- (void)addFitnessFriendWorkouts:(id)arg1;
- (void)addLocationSeries:(id)arg1;
- (void)addMedicalRecords:(id)arg1;
- (void)addMedicationDispenseRecord:(id)arg1;
- (void)addMedicationOrder:(id)arg1;
- (void)addMedicationRecord:(id)arg1;
- (void)addProcedureRecord:(id)arg1;
- (void)addQuantitySamples:(id)arg1;
- (void)addUnknownRecord:(id)arg1;
- (void)addVaccinationRecord:(id)arg1;
- (void)addWorkouts:(id)arg1;
- (id)binarySamples;
- (id)binarySamplesAtIndex:(unsigned long long)arg1;
- (unsigned long long)binarySamplesCount;
- (id)categorySamples;
- (id)categorySamplesAtIndex:(unsigned long long)arg1;
- (unsigned long long)categorySamplesCount;
- (id)cdaDocumentSamples;
- (id)cdaDocumentSamplesAtIndex:(unsigned long long)arg1;
- (unsigned long long)cdaDocumentSamplesCount;
- (void)clearActivityCaches;
- (void)clearBinarySamples;
- (void)clearCategorySamples;
- (void)clearCdaDocumentSamples;
- (void)clearCorrelations;
- (void)clearDeletedSamples;
- (void)clearFitnessFriendAchievements;
- (void)clearFitnessFriendActivitySnapshots;
- (void)clearFitnessFriendWorkouts;
- (void)clearLocationSeries;
- (void)clearMedicalRecords;
- (void)clearQuantitySamples;
- (void)clearWorkouts;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)correlations;
- (id)correlationsAtIndex:(unsigned long long)arg1;
- (unsigned long long)correlationsCount;
- (unsigned long long)count;
- (id)decodedObjects;
- (id)deletedSamples;
- (id)deletedSamplesAtIndex:(unsigned long long)arg1;
- (unsigned long long)deletedSamplesCount;
- (id)description;
- (id)dictionaryRepresentation;
- (id)fitnessFriendAchievements;
- (id)fitnessFriendAchievementsAtIndex:(unsigned long long)arg1;
- (unsigned long long)fitnessFriendAchievementsCount;
- (id)fitnessFriendActivitySnapshots;
- (id)fitnessFriendActivitySnapshotsAtIndex:(unsigned long long)arg1;
- (unsigned long long)fitnessFriendActivitySnapshotsCount;
- (id)fitnessFriendWorkouts;
- (id)fitnessFriendWorkoutsAtIndex:(unsigned long long)arg1;
- (unsigned long long)fitnessFriendWorkoutsCount;
- (id)generatedObjectCollection;
- (bool)hasGeneratedObjectCollection;
- (bool)hasProvenance;
- (bool)hasSource;
- (bool)hasSourceBundleIdentifier;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)locationSeries;
- (id)locationSeriesAtIndex:(unsigned long long)arg1;
- (unsigned long long)locationSeriesCount;
- (id)medicalRecords;
- (id)medicalRecordsAtIndex:(unsigned long long)arg1;
- (unsigned long long)medicalRecordsCount;
- (void)mergeFrom:(id)arg1;
- (id)provenance;
- (id)quantitySamples;
- (id)quantitySamplesAtIndex:(unsigned long long)arg1;
- (unsigned long long)quantitySamplesCount;
- (bool)readFrom:(id)arg1;
- (void)setActivityCaches:(id)arg1;
- (void)setBinarySamples:(id)arg1;
- (void)setCategorySamples:(id)arg1;
- (void)setCdaDocumentSamples:(id)arg1;
- (void)setCorrelations:(id)arg1;
- (void)setDeletedSamples:(id)arg1;
- (void)setFitnessFriendAchievements:(id)arg1;
- (void)setFitnessFriendActivitySnapshots:(id)arg1;
- (void)setFitnessFriendWorkouts:(id)arg1;
- (void)setGeneratedObjectCollection:(id)arg1;
- (void)setLocationSeries:(id)arg1;
- (void)setMedicalRecords:(id)arg1;
- (void)setProvenance:(id)arg1;
- (void)setQuantitySamples:(id)arg1;
- (void)setSource:(id)arg1;
- (void)setSourceBundleIdentifier:(id)arg1;
- (void)setWorkouts:(id)arg1;
- (id)source;
- (id)sourceBundleIdentifier;
- (bool)unitTest_isEquivalentToObjectCollection:(id)arg1;
- (id)workouts;
- (id)workoutsAtIndex:(unsigned long long)arg1;
- (unsigned long long)workoutsCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDCloudSyncStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDCloudSyncStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDCloudSyncStore : NSObject <HDSyncStore, NSCopying> {
    bool  _canPush;
    NSString * _containerIdentifier;
    NSString * _ownerIdentifier;
    HDProfile * _profile;
    NSString * _sharingIdentifier;
    HDSharingPredicate * _sharingPredicate;
    NSUUID * _storeIdentifier;
    long long  _syncEpoch;
    long long  _syncProvenance;
    CKRecordZoneID * _zoneID;
}

@property (nonatomic, readonly) bool canPush;
@property (nonatomic, readonly, copy) NSString *containerIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *ownerIdentifier;
@property (nonatomic, readonly) HDProfile *profile;
@property (readonly) int protocolVersion;
@property (nonatomic, readonly, copy) NSString *sharingIdentifier;
@property (nonatomic, readonly) HDSharingPredicate *sharingPredicate;
@property (nonatomic, readonly, copy) NSUUID *storeIdentifier;
@property (readonly) Class superclass;
@property (readonly) long long syncStoreType;
@property (nonatomic, retain) CKRecordZoneID *zoneID;

+ (void)samplesDeletedInProfile:(id)arg1 byUser:(bool)arg2;
+ (id)syncStoreForProfile:(id)arg1 storeIdentifier:(id)arg2 syncCircleName:(id)arg3 ownerIdentifier:(id)arg4 containerIdentifier:(id)arg5 error:(id*)arg6;
+ (id)syncStoreForProfile:(id)arg1 storeIdentifier:(id)arg2 syncCircleName:(id)arg3 ownerIdentifier:(id)arg4 containerIdentifier:(id)arg5 sharingIdentifier:(id)arg6 predicate:(id)arg7 error:(id*)arg8;

- (void).cxx_destruct;
- (id)_excludedSyncEntities;
- (bool)canPush;
- (bool)canRecieveSyncObjectsForEntityClass:(Class)arg1;
- (bool)clearAllSyncAnchorsWithError:(id*)arg1;
- (id)containerIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)databaseIdentifier;
- (id)description;
- (bool)enforceSyncEntityOrdering;
- (long long)expectedSequenceNumberForSyncEntityClass:(Class)arg1;
- (id)getPersistedAnchorMapWithError:(id*)arg1;
- (id)initWithProfile:(id)arg1 storeIdentifier:(id)arg2 syncCircleName:(id)arg3 ownerIdentifier:(id)arg4 containerIdentifier:(id)arg5 sharingIdentifier:(id)arg6 predicate:(id)arg7 error:(id*)arg8;
- (id)orderedSyncEntities;
- (id)ownerIdentifier;
- (bool)persistState:(id)arg1 error:(id*)arg2;
- (id)persistedStateWithError:(id*)arg1;
- (id)profile;
- (int)protocolVersion;
- (id)receivedSyncAnchorMapWithError:(id*)arg1;
- (bool)replacePersistedAnchorMap:(id)arg1 error:(id*)arg2;
- (bool)resetReceivedSyncAnchorMapWithError:(id*)arg1;
- (void)setExpectedSequenceNumber:(long long)arg1 forSyncEntityClass:(Class)arg2;
- (void)setZoneID:(id)arg1;
- (id)sharingIdentifier;
- (id)sharingPredicate;
- (bool)shouldContinueAfterAnchorValidationError:(id)arg1;
- (bool)shouldEnforceSequenceOrdering;
- (id)storeIdentifier;
- (bool)supportsSpeculativeChangesForSyncEntityClass:(Class)arg1;
- (id)syncEntityDependenciesForSyncEntity:(Class)arg1;
- (long long)syncEpoch;
- (long long)syncProvenance;
- (id)syncStoreDefaultSourceBundleIdentifier;
- (id)syncStoreForEpoch:(long long)arg1;
- (id)syncStoreIdentifier;
- (long long)syncStoreType;
- (id)zoneID;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

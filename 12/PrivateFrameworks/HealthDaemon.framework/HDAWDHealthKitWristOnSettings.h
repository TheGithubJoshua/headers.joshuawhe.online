<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDAWDHealthKitWristOnSettings.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDAWDHealthKitWristOnSettings.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDAWDHealthKitWristOnSettings : PBCodable <NSCopying> {
    HDAWDHealthKitAchievementStatistics * _achievementStatistics;
    long long  _daysSinceFirstCalorieGoal;
    bool  _enableAchievements;
    bool  _enableGoalCompletions;
    bool  _enableStandReminders;
    bool  _enableWeeklySummary;
    long long  _eventBusyTime;
    HDAWDHealthKitConcurrentCalendarItem * _firstCalendarItemOfDay;
    struct { 
        unsigned int daysSinceFirstCalorieGoal : 1; 
        unsigned int eventBusyTime : 1; 
        unsigned int numberOfEvents : 1; 
        unsigned int progressUpdateFrequency : 1; 
        unsigned int timeZoneOffset : 1; 
        unsigned int timestamp : 1; 
        unsigned int enableAchievements : 1; 
        unsigned int enableGoalCompletions : 1; 
        unsigned int enableStandReminders : 1; 
        unsigned int enableWeeklySummary : 1; 
        unsigned int wellnessComplicationOnWatchFace : 1; 
    }  _has;
    long long  _numberOfEvents;
    long long  _progressUpdateFrequency;
    long long  _timeZoneOffset;
    unsigned long long  _timestamp;
    HDAWDHealthKitUserCharacteristics * _userCharacteristics;
    bool  _wellnessComplicationOnWatchFace;
}

@property (nonatomic, retain) HDAWDHealthKitAchievementStatistics *achievementStatistics;
@property (nonatomic) long long daysSinceFirstCalorieGoal;
@property (nonatomic) bool enableAchievements;
@property (nonatomic) bool enableGoalCompletions;
@property (nonatomic) bool enableStandReminders;
@property (nonatomic) bool enableWeeklySummary;
@property (nonatomic) long long eventBusyTime;
@property (nonatomic, retain) HDAWDHealthKitConcurrentCalendarItem *firstCalendarItemOfDay;
@property (nonatomic, readonly) bool hasAchievementStatistics;
@property (nonatomic) bool hasDaysSinceFirstCalorieGoal;
@property (nonatomic) bool hasEnableAchievements;
@property (nonatomic) bool hasEnableGoalCompletions;
@property (nonatomic) bool hasEnableStandReminders;
@property (nonatomic) bool hasEnableWeeklySummary;
@property (nonatomic) bool hasEventBusyTime;
@property (nonatomic, readonly) bool hasFirstCalendarItemOfDay;
@property (nonatomic) bool hasNumberOfEvents;
@property (nonatomic) bool hasProgressUpdateFrequency;
@property (nonatomic) bool hasTimeZoneOffset;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic, readonly) bool hasUserCharacteristics;
@property (nonatomic) bool hasWellnessComplicationOnWatchFace;
@property (nonatomic) long long numberOfEvents;
@property (nonatomic) long long progressUpdateFrequency;
@property (nonatomic) long long timeZoneOffset;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic, retain) HDAWDHealthKitUserCharacteristics *userCharacteristics;
@property (nonatomic) bool wellnessComplicationOnWatchFace;

- (void).cxx_destruct;
- (id)achievementStatistics;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)daysSinceFirstCalorieGoal;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)enableAchievements;
- (bool)enableGoalCompletions;
- (bool)enableStandReminders;
- (bool)enableWeeklySummary;
- (long long)eventBusyTime;
- (id)firstCalendarItemOfDay;
- (bool)hasAchievementStatistics;
- (bool)hasDaysSinceFirstCalorieGoal;
- (bool)hasEnableAchievements;
- (bool)hasEnableGoalCompletions;
- (bool)hasEnableStandReminders;
- (bool)hasEnableWeeklySummary;
- (bool)hasEventBusyTime;
- (bool)hasFirstCalendarItemOfDay;
- (bool)hasNumberOfEvents;
- (bool)hasProgressUpdateFrequency;
- (bool)hasTimeZoneOffset;
- (bool)hasTimestamp;
- (bool)hasUserCharacteristics;
- (bool)hasWellnessComplicationOnWatchFace;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (long long)numberOfEvents;
- (long long)progressUpdateFrequency;
- (bool)readFrom:(id)arg1;
- (void)setAchievementStatistics:(id)arg1;
- (void)setDaysSinceFirstCalorieGoal:(long long)arg1;
- (void)setEnableAchievements:(bool)arg1;
- (void)setEnableGoalCompletions:(bool)arg1;
- (void)setEnableStandReminders:(bool)arg1;
- (void)setEnableWeeklySummary:(bool)arg1;
- (void)setEventBusyTime:(long long)arg1;
- (void)setFirstCalendarItemOfDay:(id)arg1;
- (void)setHasDaysSinceFirstCalorieGoal:(bool)arg1;
- (void)setHasEnableAchievements:(bool)arg1;
- (void)setHasEnableGoalCompletions:(bool)arg1;
- (void)setHasEnableStandReminders:(bool)arg1;
- (void)setHasEnableWeeklySummary:(bool)arg1;
- (void)setHasEventBusyTime:(bool)arg1;
- (void)setHasNumberOfEvents:(bool)arg1;
- (void)setHasProgressUpdateFrequency:(bool)arg1;
- (void)setHasTimeZoneOffset:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasWellnessComplicationOnWatchFace:(bool)arg1;
- (void)setNumberOfEvents:(long long)arg1;
- (void)setProgressUpdateFrequency:(long long)arg1;
- (void)setTimeZoneOffset:(long long)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setUserCharacteristics:(id)arg1;
- (void)setWellnessComplicationOnWatchFace:(bool)arg1;
- (long long)timeZoneOffset;
- (unsigned long long)timestamp;
- (id)userCharacteristics;
- (bool)wellnessComplicationOnWatchFace;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

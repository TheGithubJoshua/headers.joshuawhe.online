<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDCodableWorkout.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDCodableWorkout.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDCodableWorkout : PBCodable <HDDecoding, NSCopying> {
    double  _duration;
    NSMutableArray * _events;
    double  _goal;
    long long  _goalType;
    struct { 
        unsigned int duration : 1; 
        unsigned int goal : 1; 
        unsigned int goalType : 1; 
        unsigned int totalBasalEnergyBurnedInCanonicalUnit : 1; 
        unsigned int totalDistanceInCanonicalUnit : 1; 
        unsigned int totalEnergyBurnedInCanonicalUnit : 1; 
        unsigned int totalFlightsClimbedInCanonicalUnit : 1; 
        unsigned int totalSwimmingStrokeCountInCanonicalUnit : 1; 
        unsigned int type : 1; 
    }  _has;
    HDCodableSample * _sample;
    double  _totalBasalEnergyBurnedInCanonicalUnit;
    double  _totalDistanceInCanonicalUnit;
    double  _totalEnergyBurnedInCanonicalUnit;
    double  _totalFlightsClimbedInCanonicalUnit;
    double  _totalSwimmingStrokeCountInCanonicalUnit;
    long long  _type;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double duration;
@property (nonatomic, retain) NSMutableArray *events;
@property (nonatomic) double goal;
@property (nonatomic) long long goalType;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasGoal;
@property (nonatomic) bool hasGoalType;
@property (nonatomic, readonly) bool hasSample;
@property (nonatomic) bool hasTotalBasalEnergyBurnedInCanonicalUnit;
@property (nonatomic) bool hasTotalDistanceInCanonicalUnit;
@property (nonatomic) bool hasTotalEnergyBurnedInCanonicalUnit;
@property (nonatomic) bool hasTotalFlightsClimbedInCanonicalUnit;
@property (nonatomic) bool hasTotalSwimmingStrokeCountInCanonicalUnit;
@property (nonatomic) bool hasType;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HDCodableSample *sample;
@property (readonly) Class superclass;
@property (nonatomic) double totalBasalEnergyBurnedInCanonicalUnit;
@property (nonatomic) double totalDistanceInCanonicalUnit;
@property (nonatomic) double totalEnergyBurnedInCanonicalUnit;
@property (nonatomic) double totalFlightsClimbedInCanonicalUnit;
@property (nonatomic) double totalSwimmingStrokeCountInCanonicalUnit;
@property (nonatomic) long long type;

+ (Class)eventsType;

- (void).cxx_destruct;
- (void)addEvents:(id)arg1;
- (bool)applyToObject:(id)arg1;
- (void)clearEvents;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)decodedGoal;
- (unsigned long long)decodedGoalType;
- (id)decodedTotalBasalEnergyBurned;
- (id)decodedTotalDistance;
- (id)decodedTotalEnergyBurned;
- (id)decodedTotalFlightsClimbed;
- (id)decodedTotalSwimmingStrokeCount;
- (id)decodedWorkoutEvents;
- (id)description;
- (id)dictionaryRepresentation;
- (double)duration;
- (id)events;
- (id)eventsAtIndex:(unsigned long long)arg1;
- (unsigned long long)eventsCount;
- (double)goal;
- (long long)goalType;
- (bool)hasDuration;
- (bool)hasGoal;
- (bool)hasGoalType;
- (bool)hasSample;
- (bool)hasTotalBasalEnergyBurnedInCanonicalUnit;
- (bool)hasTotalDistanceInCanonicalUnit;
- (bool)hasTotalEnergyBurnedInCanonicalUnit;
- (bool)hasTotalFlightsClimbedInCanonicalUnit;
- (bool)hasTotalSwimmingStrokeCountInCanonicalUnit;
- (bool)hasType;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (id)sample;
- (void)setDuration:(double)arg1;
- (void)setEvents:(id)arg1;
- (void)setGoal:(double)arg1;
- (void)setGoalType:(long long)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasGoal:(bool)arg1;
- (void)setHasGoalType:(bool)arg1;
- (void)setHasTotalBasalEnergyBurnedInCanonicalUnit:(bool)arg1;
- (void)setHasTotalDistanceInCanonicalUnit:(bool)arg1;
- (void)setHasTotalEnergyBurnedInCanonicalUnit:(bool)arg1;
- (void)setHasTotalFlightsClimbedInCanonicalUnit:(bool)arg1;
- (void)setHasTotalSwimmingStrokeCountInCanonicalUnit:(bool)arg1;
- (void)setHasType:(bool)arg1;
- (void)setSample:(id)arg1;
- (void)setTotalBasalEnergyBurnedInCanonicalUnit:(double)arg1;
- (void)setTotalDistanceInCanonicalUnit:(double)arg1;
- (void)setTotalEnergyBurnedInCanonicalUnit:(double)arg1;
- (void)setTotalFlightsClimbedInCanonicalUnit:(double)arg1;
- (void)setTotalSwimmingStrokeCountInCanonicalUnit:(double)arg1;
- (void)setType:(long long)arg1;
- (double)totalBasalEnergyBurnedInCanonicalUnit;
- (double)totalDistanceInCanonicalUnit;
- (double)totalEnergyBurnedInCanonicalUnit;
- (double)totalFlightsClimbedInCanonicalUnit;
- (double)totalSwimmingStrokeCountInCanonicalUnit;
- (long long)type;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDAWDHealthKitWorkoutCondenserEvent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDAWDHealthKitWorkoutCondenserEvent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDAWDHealthKitWorkoutCondenserEvent : PBCodable <NSCopying> {
    long long  _batchSize;
    long long  _condensedWorkouts;
    long long  _createdSeries;
    long long  _deletedSamples;
    unsigned long long  _duration;
    unsigned long long  _errorCode;
    NSString * _errorDomain;
    struct { 
        unsigned int batchSize : 1; 
        unsigned int condensedWorkouts : 1; 
        unsigned int createdSeries : 1; 
        unsigned int deletedSamples : 1; 
        unsigned int duration : 1; 
        unsigned int errorCode : 1; 
        unsigned int processedWorkouts : 1; 
        unsigned int timestamp : 1; 
        unsigned int underlyingErrorCode : 1; 
        unsigned int workoutsToCondense : 1; 
        unsigned int workoutsToRecondense : 1; 
        unsigned int reason : 1; 
        unsigned int hasWatchSource : 1; 
        unsigned int success : 1; 
    }  _has;
    bool  _hasWatchSource;
    long long  _processedWorkouts;
    int  _reason;
    bool  _success;
    unsigned long long  _timestamp;
    unsigned long long  _underlyingErrorCode;
    NSString * _underlyingErrorDomain;
    long long  _workoutsToCondense;
    long long  _workoutsToRecondense;
}

@property (nonatomic) long long batchSize;
@property (nonatomic) long long condensedWorkouts;
@property (nonatomic) long long createdSeries;
@property (nonatomic) long long deletedSamples;
@property (nonatomic) unsigned long long duration;
@property (nonatomic) unsigned long long errorCode;
@property (nonatomic, retain) NSString *errorDomain;
@property (nonatomic) bool hasBatchSize;
@property (nonatomic) bool hasCondensedWorkouts;
@property (nonatomic) bool hasCreatedSeries;
@property (nonatomic) bool hasDeletedSamples;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasErrorCode;
@property (nonatomic, readonly) bool hasErrorDomain;
@property (nonatomic) bool hasHasWatchSource;
@property (nonatomic) bool hasProcessedWorkouts;
@property (nonatomic) bool hasReason;
@property (nonatomic) bool hasSuccess;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasUnderlyingErrorCode;
@property (nonatomic, readonly) bool hasUnderlyingErrorDomain;
@property (nonatomic) bool hasWatchSource;
@property (nonatomic) bool hasWorkoutsToCondense;
@property (nonatomic) bool hasWorkoutsToRecondense;
@property (nonatomic) long long processedWorkouts;
@property (nonatomic) int reason;
@property (nonatomic) bool success;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned long long underlyingErrorCode;
@property (nonatomic, retain) NSString *underlyingErrorDomain;
@property (nonatomic) long long workoutsToCondense;
@property (nonatomic) long long workoutsToRecondense;

- (void).cxx_destruct;
- (int)StringAsReason:(id)arg1;
- (long long)batchSize;
- (long long)condensedWorkouts;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)createdSeries;
- (long long)deletedSamples;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned long long)duration;
- (unsigned long long)errorCode;
- (id)errorDomain;
- (bool)hasBatchSize;
- (bool)hasCondensedWorkouts;
- (bool)hasCreatedSeries;
- (bool)hasDeletedSamples;
- (bool)hasDuration;
- (bool)hasErrorCode;
- (bool)hasErrorDomain;
- (bool)hasHasWatchSource;
- (bool)hasProcessedWorkouts;
- (bool)hasReason;
- (bool)hasSuccess;
- (bool)hasTimestamp;
- (bool)hasUnderlyingErrorCode;
- (bool)hasUnderlyingErrorDomain;
- (bool)hasWatchSource;
- (bool)hasWorkoutsToCondense;
- (bool)hasWorkoutsToRecondense;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (long long)processedWorkouts;
- (bool)readFrom:(id)arg1;
- (int)reason;
- (id)reasonAsString:(int)arg1;
- (void)setBatchSize:(long long)arg1;
- (void)setCondensedWorkouts:(long long)arg1;
- (void)setCreatedSeries:(long long)arg1;
- (void)setDeletedSamples:(long long)arg1;
- (void)setDuration:(unsigned long long)arg1;
- (void)setErrorCode:(unsigned long long)arg1;
- (void)setErrorDomain:(id)arg1;
- (void)setHasBatchSize:(bool)arg1;
- (void)setHasCondensedWorkouts:(bool)arg1;
- (void)setHasCreatedSeries:(bool)arg1;
- (void)setHasDeletedSamples:(bool)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasErrorCode:(bool)arg1;
- (void)setHasHasWatchSource:(bool)arg1;
- (void)setHasProcessedWorkouts:(bool)arg1;
- (void)setHasReason:(bool)arg1;
- (void)setHasSuccess:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasUnderlyingErrorCode:(bool)arg1;
- (void)setHasWatchSource:(bool)arg1;
- (void)setHasWorkoutsToCondense:(bool)arg1;
- (void)setHasWorkoutsToRecondense:(bool)arg1;
- (void)setProcessedWorkouts:(long long)arg1;
- (void)setReason:(int)arg1;
- (void)setSuccess:(bool)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setUnderlyingErrorCode:(unsigned long long)arg1;
- (void)setUnderlyingErrorDomain:(id)arg1;
- (void)setWorkoutsToCondense:(long long)arg1;
- (void)setWorkoutsToRecondense:(long long)arg1;
- (bool)success;
- (unsigned long long)timestamp;
- (unsigned long long)underlyingErrorCode;
- (id)underlyingErrorDomain;
- (long long)workoutsToCondense;
- (long long)workoutsToRecondense;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDQuantitySampleSeriesDataEnumerator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDQuantitySampleSeriesDataEnumerator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDQuantitySampleSeriesDataEnumerator : NSObject {
    long long  _HFDKey;
    NSUUID * _UUID;
    unsigned long long  _bufferSize;
    long long  _count;
    struct deque<std::__1::tuple<double, double>, std::__1::allocator<std::__1::tuple<double, double> > > { 
        struct __split_buffer<std::__1::tuple<double, double> *, std::__1::allocator<std::__1::tuple<double, double> *> > { 
            struct tuple<double, double> {} **__first_; 
            struct tuple<double, double> {} **__begin_; 
            struct tuple<double, double> {} **__end_; 
            struct __compressed_pair<std::__1::tuple<double, double> **, std::__1::allocator<std::__1::tuple<double, double> *> > { 
                struct tuple<double, double> {} **__value_; 
            } __end_cap_; 
        } __map_; 
        unsigned long long __start_; 
        struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::tuple<double, double> > > { 
            unsigned long long __value_; 
        } __size_; 
    }  _data;
    long long  _dataTypeCode;
    NSError * _fatalError;
    bool  _hasFetchedAllData;
    bool  _hasFetchedData;
    long long  _index;
    double  _lastDatumTime;
    double  _lastFetchedDatumTime;
    double  _nextStartTime;
    struct ObjectIdentifier { 
        long long objectType; 
        unsigned long long identifier; 
    }  _objectIdentifier;
    long long  _persistentID;
    long long  _sourceID;
    double  _startTime;
    HDDatabaseTransaction * _transaction;
}

@property (nonatomic, readonly) long long HFDKey;
@property (nonatomic, readonly, copy) NSUUID *UUID;
@property (nonatomic, readonly) long long count;
@property (nonatomic, readonly) long long dataTypeCode;
@property (nonatomic, readonly) bool done;
@property (nonatomic, readonly) long long persistentID;
@property (nonatomic, readonly) long long sourceID;
@property (nonatomic, readonly) double startTime;

- (id).cxx_construct;
- (void).cxx_destruct;
- (long long)HFDKey;
- (id)UUID;
- (bool)_addToBufferTimestamp:(double)arg1 value:(double)arg2;
- (bool)_fillValueBufferWithError:(id*)arg1;
- (double)_firstDatumTime;
- (long long)compare:(id)arg1;
- (long long)count;
- (long long)dataTypeCode;
- (id)description;
- (bool)done;
- (bool)enumerateDataToTime:(double)arg1 error:(id*)arg2 handler:(id /* block */)arg3;
- (id)initWithTransaction:(id)arg1 persistentID:(long long)arg2 dataTypeCode:(long long)arg3 UUID:(id)arg4 startTime:(double)arg5 count:(long long)arg6 sourceID:(long long)arg7 HFDKey:(long long)arg8 bufferSize:(unsigned long long)arg9;
- (double)nextDatumTime;
- (long long)persistentID;
- (long long)sourceID;
- (double)startTime;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

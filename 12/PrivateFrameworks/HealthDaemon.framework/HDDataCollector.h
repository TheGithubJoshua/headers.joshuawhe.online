<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDDataCollector.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDDataCollector.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDDataCollector : NSObject <HDHealthDataCollector> {
    double  _collectionInterval;
    HDDeviceEntity * _deviceEntity;
    bool  _disabled;
    long long  _failureRetryCount;
    HKObjectType * _observedType;
    HDPrimaryProfile * _primaryProfile;
    HDProfile * _profile;
    NSObject<OS_dispatch_queue> * _queue;
    HDSourceEntity * _sourceEntity;
    long long  _state;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property bool disabled;
@property (readonly) unsigned long long hash;
@property (readonly) HDSourceEntity *sourceEntity;
@property (readonly) Class superclass;

+ (id)_lastReceivedSensorDatumForProfile:(id)arg1;
+ (bool)_primaryContextExistsForDomain:(id)arg1 profile:(id)arg2;
+ (id)_retrieveContextForKey:(id)arg1 domain:(id)arg2 profile:(id)arg3;
+ (id)_sensorDatumFromContext:(id)arg1;
+ (double)defaultCollectionInterval;
+ (id)domain;
+ (id)observedType;
+ (id)secondaryContextClasses;
+ (Class)sensorDatumClass;

- (void).cxx_destruct;
- (id)_contextFromDictionary:(id)arg1;
- (id)_contextFromSensorDatum:(id)arg1;
- (id)_dictionaryFromContext:(id)arg1;
- (void)_performAsync:(id /* block */)arg1;
- (void)_performSync:(id /* block */)arg1;
- (bool)_persistContext:(id)arg1 forKey:(id)arg2;
- (bool)_persistPrimaryContext:(id)arg1;
- (bool)_persistSecondaryContext:(id)arg1;
- (void)_queue_beginStreaming;
- (void)_queue_beginStreamingIfNecessary;
- (id)_queue_deviceEntity;
- (bool)_queue_disabled;
- (void)_queue_incrementFailureRetryCounter;
- (void)_queue_receivedData;
- (void)_queue_resetFailureRetryCounter;
- (void)_queue_retryFromFailure;
- (bool)_queue_shouldRetryFromFailure;
- (bool)_queue_streaming;
- (void)_queue_transitionToFailure;
- (void)_queue_transitionToIdle;
- (void)_queue_transitionToStreaming;
- (void)_queue_updateCollectionInterval:(double)arg1;
- (id)_retrieveContextForKey:(id)arg1;
- (id)_retrievePrimaryContext;
- (id)_retrieveSecondaryContext;
- (id)_sensorDatumFromContext:(id)arg1;
- (double)collectionInterval;
- (void)collectionStartedForType:(id)arg1 collectionInterval:(double)arg2;
- (void)collectionStoppedForType:(id)arg1;
- (id)dataCollectorDiagnosticDescription;
- (id)deviceEntity;
- (bool)disabled;
- (id)initWithPrimaryProfile:(id)arg1;
- (id)initWithProfile:(id)arg1;
- (void)setCollectionInterval:(double)arg1;
- (void)setDisabled:(bool)arg1;
- (id)sourceEntity;
- (void)stopPerformingUpdatesWithErrorEncountered:(bool)arg1;
- (void)updateCollectionInterval:(double)arg1 forType:(id)arg2;
- (void)updateHistoricalData;
- (void)updateHistoricalDataForcedUpdate:(bool)arg1 completion:(id /* block */)arg2;
- (void)updateHistoricalDataWithCompletion:(id /* block */)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDListByTypeStatisticsBuilder_DEPRECATED.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDListByTypeStatisticsBuilder_DEPRECATED.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDListByTypeStatisticsBuilder_DEPRECATED : HDStatisticsBuilder_DEPRECATED {
    NSDateInterval * _baseInterval;
    NSMutableDictionary * _calculatorByTypes;
    NSCalendar * _calendar;
    NSMutableDictionary * _dataSourcesByType;
    NSMutableDictionary * _datesByDataType;
    NSNumber * _lastAnchor;
    NSMutableArray * _lastUpdatedDataTypes;
    NSMutableDictionary * _quantitiesByDataType;
    NSMutableDictionary * _quantityCalculatorsByType;
    id /* block */  _shouldStopProcessing;
    NSDateInterval * _sleepInterval;
    NSMutableDictionary * _sourceOrderProvidersByType;
    NSMutableDictionary * _statisticsByTypes;
    NSMutableDictionary * _summariesByTypes;
}

@property (nonatomic, retain) NSNumber *lastAnchor;
@property (nonatomic, copy) id /* block */ shouldStopProcessing;

- (void).cxx_destruct;
- (bool)_addSleepSample:(id)arg1;
- (bool)_addWorkoutSample:(id)arg1;
- (id)_calculatedQuantityForDataTypeCode:(id)arg1;
- (id)_calculatedSummariesForDayWithDatabase:(id)arg1 error:(id*)arg2;
- (id)_calculatedValuesForDatabase:(id)arg1 error:(id*)arg2;
- (id)_dataSourceForQuantityType:(id)arg1;
- (id)_dateIntervalForType:(long long)arg1;
- (bool)_enumerateSamplesOfType:(long long)arg1 interval:(id)arg2 database:(id)arg3 handler:(id /* block */)arg4;
- (bool)_enumerateSamplesWithDatabase:(id)arg1 handler:(id /* block */)arg2;
- (id)_latestAnchorFromDatabase:(id)arg1 withError:(id*)arg2;
- (bool)_queryForSleepSamplesWithDatabase:(id)arg1 error:(id*)arg2;
- (bool)_queryForWorkoutSamplesWithDatabase:(id)arg1 error:(id*)arg2;
- (bool)_setIfLatestDate:(id)arg1 forObjectType:(id)arg2;
- (bool)_setIfLatestTimestamp:(double)arg1 forObjectType:(id)arg2;
- (id)_sleepQueryResultBuilder;
- (id)_sourceOrderProviderForQuantityType:(id)arg1;
- (bool)_updateNonQuantityValuesWithAddedSamples:(id)arg1 typeCode:(long long)arg2;
- (void)_updateStatisticsForAllCalculators;
- (void)_updateStatisticsForDataType:(id)arg1;
- (void)_updateSummaryTypeFromSample:(id)arg1;
- (bool)_updateWithQuantitySamples:(id)arg1 typeCode:(long long)arg2;
- (bool)addBinarySamplesForType:(long long)arg1 startTime:(double)arg2 endTime:(double)arg3 sourceId:(long long)arg4;
- (bool)addCategorySamplesForType:(long long)arg1 value:(double)arg2 startTime:(double)arg3 endTime:(double)arg4 sourceId:(long long)arg5 enforceLatest:(bool)arg6;
- (bool)addQuantitySamplesForType:(long long)arg1 value:(double)arg2 bucketStartTime:(double)arg3 bucketEndTime:(double)arg4 startTime:(double)arg5 endTime:(double)arg6 sourceId:(long long)arg7 enforceLatest:(bool)arg8;
- (id)calculatedQuantitiesByDataType;
- (id)collectionCalculatorForType:(id)arg1 from:(double)arg2 to:(double)arg3;
- (id)discreteCollectionCalculatorForType:(id)arg1;
- (id)initWithProfile:(id)arg1 baseInterval:(id)arg2 sleepInterval:(id)arg3 calendar:(id)arg4;
- (id)lastAnchor;
- (unsigned long long)mergeStrategyForType:(id)arg1;
- (void)setLastAnchor:(id)arg1;
- (void)setShouldStopProcessing:(id /* block */)arg1;
- (id /* block */)shouldStopProcessing;
- (id)summariesForDayWithError:(id*)arg1;
- (id)timeIntervalCalculatorForType:(id)arg1;
- (void)updateValuesWithAddedSamples:(id)arg1 typeCode:(long long)arg2 anchor:(id)arg3;
- (id)updatedSummaries;
- (bool)wasUpdated;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

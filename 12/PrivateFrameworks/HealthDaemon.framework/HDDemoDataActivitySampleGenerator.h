<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDDemoDataActivitySampleGenerator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDDemoDataActivitySampleGenerator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDDemoDataActivitySampleGenerator : HDDemoDataBaseSampleGenerator {
    HDDemoDataGeneratorWorkoutConfiguration * _currentWorkoutConfiguration;
    HKActivityCache * _lastActivityCache;
    double  _lastUVExposure;
    double  _lastUVIndexPeak;
    double  _lastUVIndexPeakTime;
    double  _nextActiveCaloriesSampleTime;
    double  _nextAppleStandHourSampleTime;
    double  _nextExerciseMinuteTime;
    double  _nextFallSampleTime;
    double  _nextFlightsClimbedSampleTime;
    double  _nextHeartRateRecoveryStartTime;
    double  _nextHeartRateRecoveryStopTime;
    double  _nextRestingCaloriesSampleTime;
    double  _nextStepsSampleTime;
    double  _nextUVIndexSampleTime;
    HDProfile * _profile;
    HDDataOriginProvenance * _provenance;
    _HDDemoDataActivityWorkoutState * _workoutState;
}

@property (nonatomic, retain) HDDemoDataGeneratorWorkoutConfiguration *currentWorkoutConfiguration;
@property (nonatomic, retain) HKActivityCache *lastActivityCache;
@property (nonatomic) double lastUVExposure;
@property (nonatomic) double lastUVIndexPeak;
@property (nonatomic) double lastUVIndexPeakTime;
@property (nonatomic) double nextActiveCaloriesSampleTime;
@property (nonatomic) double nextAppleStandHourSampleTime;
@property (nonatomic) double nextExerciseMinuteTime;
@property (nonatomic) double nextFallSampleTime;
@property (nonatomic) double nextFlightsClimbedSampleTime;
@property (nonatomic) double nextHeartRateRecoveryStartTime;
@property (nonatomic) double nextHeartRateRecoveryStopTime;
@property (nonatomic) double nextRestingCaloriesSampleTime;
@property (nonatomic) double nextStepsSampleTime;
@property (nonatomic) double nextUVIndexSampleTime;
@property (nonatomic) HDProfile *profile;
@property (nonatomic, retain) HDDataOriginProvenance *provenance;
@property (nonatomic, retain) _HDDemoDataActivityWorkoutState *workoutState;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_computeCyclingDistanceWithStepCount:(id)arg1 demoPerson:(id)arg2;
- (double)_computeExerciseCaloriesForDemoPerson:(id)arg1 duration:(double)arg2 activity:(long long)arg3 weight:(double)arg4;
- (double)_computeExerciseTimeFromCurrentTime:(double)arg1 mean:(double)arg2 stdDev:(double)arg3;
- (id)_computeFlightsClimbedForDemoPerson:(id)arg1 atTime:(double)arg2;
- (double)_computePercentCooledForDemoPerson:(id)arg1 atTime:(double)arg2;
- (id)_computeSwimmingStrokesFromDistance:(id)arg1 demoPerson:(id)arg2;
- (double)_computeUVIndexForDemoPerson:(id)arg1 atTime:(double)arg2;
- (id)_computeWalkingRunningDistanceWithStepCount:(id)arg1 demoPerson:(id)arg2;
- (void)_generateEllipticalWorkoutDataWithObjectCollection:(id)arg1 demoPerson:(id)arg2;
- (void)_generateHIITWorkoutDataWithObjectCollection:(id)arg1 demoPerson:(id)arg2;
- (void)_generateHikingWorkoutDataWithObjectCollection:(id)arg1 demoPerson:(id)arg2;
- (void)_generateRunningWorkoutDataWithObjectCollection:(id)arg1 demoPerson:(id)arg2;
- (void)_generateSwimmingSegmentDataWithStartDate:(id)arg1 segmentTime:(double)arg2 segmentDistance:(double)arg3 numLaps:(long long)arg4 strokeStyle:(long long)arg5 objectCollection:(id)arg6 demoPerson:(id)arg7;
- (void)_generateSwimmingWorkoutDataWithObjectCollection:(id)arg1 demoPerson:(id)arg2;
- (void)_generateWalkingWorkoutDataWithObjectCollection:(id)arg1 demoPerson:(id)arg2;
- (void)_generateWorkoutDataWithHeartRates:(id)arg1 recoveryHeartRates:(id)arg2 objectCollection:(id)arg3 demoPerson:(id)arg4;
- (void)_generateYogaWorkoutDataWithObjectCollection:(id)arg1 demoPerson:(id)arg2;
- (bool)_isDemoPersonCoolingDown:(id)arg1 atTime:(double)arg2;
- (bool)_isDemoPersonInWorkoutRecovery:(id)arg1 atTime:(double)arg2;
- (bool)_isDemoPersonSedentary:(id)arg1 atTime:(double)arg2;
- (bool)_isDemoPersonWalking:(id)arg1 atTime:(double)arg2 samplePeriod:(double)arg3;
- (long long)_pickActivityForTime:(double)arg1;
- (id)_sumQuantity:(id)arg1 withQuantity:(id)arg2;
- (void)_updateWorkoutStateWithActiveEnergyBurned:(id)arg1 distanceWalking:(id)arg2 distanceCycling:(id)arg3 currentTime:(double)arg4 date:(id)arg5 objectCollection:(id)arg6 demoPerson:(id)arg7;
- (id)activeCaloriesForDemoPerson:(id)arg1 atTime:(double)arg2;
- (id)appleStandHourForDemoPerson:(id)arg1 atTime:(double)arg2 activeCalories:(id)arg3 exerciseMinutes:(id)arg4;
- (id)currentWorkoutConfiguration;
- (void)encodeWithCoder:(id)arg1;
- (id)exerciseMinutesForDemoPerson:(id)arg1 atTime:(double)arg2;
- (id)fallsForDemoPerson:(id)arg1 atTime:(double)arg2;
- (id)flightsClimbedForDemoPerson:(id)arg1 atTime:(double)arg2;
- (void)generateSamplesForDemoPerson:(id)arg1 atTime:(double)arg2 sampleDate:(id)arg3 objectCollection:(id)arg4;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)lastActivityCache;
- (double)lastUVExposure;
- (double)lastUVIndexPeak;
- (double)lastUVIndexPeakTime;
- (double)nextActiveCaloriesSampleTime;
- (double)nextAppleStandHourSampleTime;
- (double)nextExerciseMinuteTime;
- (double)nextFallSampleTime;
- (double)nextFlightsClimbedSampleTime;
- (double)nextHeartRateRecoveryStartTime;
- (double)nextHeartRateRecoveryStopTime;
- (double)nextRestingCaloriesSampleTime;
- (double)nextStepsSampleTime;
- (double)nextUVIndexSampleTime;
- (id)profile;
- (id)provenance;
- (id)restingCaloriesForDemoPerson:(id)arg1 atTime:(double)arg2;
- (void)setCurrentWorkoutConfiguration:(id)arg1;
- (void)setLastActivityCache:(id)arg1;
- (void)setLastUVExposure:(double)arg1;
- (void)setLastUVIndexPeak:(double)arg1;
- (void)setLastUVIndexPeakTime:(double)arg1;
- (void)setNextActiveCaloriesSampleTime:(double)arg1;
- (void)setNextAppleStandHourSampleTime:(double)arg1;
- (void)setNextExerciseMinuteTime:(double)arg1;
- (void)setNextFallSampleTime:(double)arg1;
- (void)setNextFlightsClimbedSampleTime:(double)arg1;
- (void)setNextHeartRateRecoveryStartTime:(double)arg1;
- (void)setNextHeartRateRecoveryStopTime:(double)arg1;
- (void)setNextRestingCaloriesSampleTime:(double)arg1;
- (void)setNextStepsSampleTime:(double)arg1;
- (void)setNextUVIndexSampleTime:(double)arg1;
- (void)setProfile:(id)arg1;
- (void)setProfile:(id)arg1 provenance:(id)arg2;
- (void)setProvenance:(id)arg1;
- (void)setWorkoutState:(id)arg1;
- (void)setupWithDemoDataGenerator:(id)arg1;
- (id)stepsForDemoPerson:(id)arg1 atTime:(double)arg2;
- (id)uvIndexForDemoPerson:(id)arg1 atTime:(double)arg2;
- (id)workoutState;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

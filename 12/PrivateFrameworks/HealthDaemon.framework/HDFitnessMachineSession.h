<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDFitnessMachineSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDFitnessMachineSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDFitnessMachineSession : NSObject {
    unsigned long long  _connectionState;
    bool  _dataTransferPermitted;
    _HKFitnessMachine * _fitnessMachine;
    NSUUID * _fitnessMachineSessionUUID;
    HKHealthService * _healthService;
    unsigned long long  _healthServiceSessionIdentifier;
    HDEnhancedFTMSData * _initialEnhancedFTMSData;
    HDFitnessMachineDataCharacteristicBase * _initialMachineData;
    HDFitnessMachineStatus * _initialMachineStatus;
    NSDate * _machineStartDate;
    unsigned long long  _machineState;
    NSDate * _machineStateUpdateDate;
    NSData * _nfcSessionIDData;
    NSArray * _oobDataArray;
    HDHealthServiceOOBInfo * _oobInfo;
    long long  _serviceStatus;
    bool  _waitingOnActivityType;
    bool  _waitingOnBluetoothConnection;
    bool  _waitingOnInitialMachineData;
    bool  _waitingOnInitialMachineStatus;
    bool  _waitingOnMFA;
}

@property (nonatomic) unsigned long long connectionState;
@property (nonatomic, readonly) bool dataTransferPermitted;
@property (nonatomic, readonly) bool dataTransferRequirementsComplete;
@property (nonatomic, retain) _HKFitnessMachine *fitnessMachine;
@property (nonatomic, readonly) NSUUID *fitnessMachineSessionUUID;
@property (nonatomic, retain) HKHealthService *healthService;
@property (nonatomic) unsigned long long healthServiceSessionIdentifier;
@property (nonatomic, retain) HDEnhancedFTMSData *initialEnhancedFTMSData;
@property (nonatomic, retain) HDFitnessMachineDataCharacteristicBase *initialMachineData;
@property (nonatomic, retain) HDFitnessMachineStatus *initialMachineStatus;
@property (nonatomic, retain) NSDate *machineStartDate;
@property (nonatomic) unsigned long long machineState;
@property (nonatomic, retain) NSDate *machineStateUpdateDate;
@property (nonatomic, readonly) NSArray *nfcConnectionHandoverData;
@property (nonatomic, readonly) NSString *nfcSessionID;
@property (nonatomic, readonly) NSData *nfcSessionIDData;
@property (nonatomic, retain) NSArray *oobDataArray;
@property (nonatomic, retain) HDHealthServiceOOBInfo *oobInfo;
@property (nonatomic, readonly) HDFitnessMachineSessionRecoveryConfiguration *recoveryConfiguration;
@property (nonatomic) long long serviceStatus;
@property (nonatomic, readonly) bool waitingOnActivityType;
@property (nonatomic, readonly) bool waitingOnBluetoothConnection;
@property (nonatomic) bool waitingOnInitialMachineData;
@property (nonatomic) bool waitingOnInitialMachineStatus;
@property (nonatomic, readonly) bool waitingOnMFA;

+ (id)serviceFromRecoveryConfiguration:(id)arg1;

- (void).cxx_destruct;
- (id)_initWithFitnessMachineSessionUUID:(id)arg1;
- (id)_oobDataArrayWithRandomValue:(id)arg1 confirmationValue:(id)arg2 sessionID:(id)arg3 btAddress:(id)arg4;
- (unsigned long long)connectionState;
- (bool)dataTransferPermitted;
- (bool)dataTransferRequirementsComplete;
- (id)fitnessMachine;
- (id)fitnessMachineSessionUUID;
- (id)healthService;
- (unsigned long long)healthServiceSessionIdentifier;
- (id)init;
- (id)initWithNFCSessionIDData:(id)arg1;
- (id)initWithRecoveryConfiguration:(id)arg1;
- (id)initialEnhancedFTMSData;
- (id)initialMachineData;
- (id)initialMachineStatus;
- (id)machineStartDate;
- (unsigned long long)machineState;
- (id)machineStateUpdateDate;
- (void)markActivityTypeProvided;
- (void)markBluetoothConnectionComplete;
- (void)markDataTransferPermitted;
- (void)markMFAAuthenticated;
- (id)nfcConnectionHandoverData;
- (id)nfcSessionID;
- (id)nfcSessionIDData;
- (id)oobDataArray;
- (id)oobInfo;
- (id)recoveryConfiguration;
- (long long)serviceStatus;
- (void)setConnectionState:(unsigned long long)arg1;
- (void)setFitnessMachine:(id)arg1;
- (void)setFitnessMachineName:(id)arg1 type:(unsigned long long)arg2 identifier:(id)arg3;
- (void)setHealthService:(id)arg1;
- (void)setHealthServiceSessionIdentifier:(unsigned long long)arg1;
- (void)setInitialEnhancedFTMSData:(id)arg1;
- (void)setInitialMachineData:(id)arg1;
- (void)setInitialMachineStatus:(id)arg1;
- (void)setMachineStartDate:(id)arg1;
- (void)setMachineState:(unsigned long long)arg1;
- (void)setMachineStateUpdateDate:(id)arg1;
- (void)setOobDataArray:(id)arg1;
- (void)setOobInfo:(id)arg1;
- (void)setServiceStatus:(long long)arg1;
- (void)setWaitingOnInitialMachineData:(bool)arg1;
- (void)setWaitingOnInitialMachineStatus:(bool)arg1;
- (bool)waitingOnActivityType;
- (bool)waitingOnBluetoothConnection;
- (bool)waitingOnInitialMachineData;
- (bool)waitingOnInitialMachineStatus;
- (bool)waitingOnMFA;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

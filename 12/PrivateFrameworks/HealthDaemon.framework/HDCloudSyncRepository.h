<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDCloudSyncRepository.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDCloudSyncRepository.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDCloudSyncRepository : NSObject {
    NSSet * _allCKContainers;
    NSMutableArray * _ownerIdentifierFetchCompletionBlocks;
    NSDictionary * _ownerIdentifiersByContainerIdentifier;
    CKContainer * _primaryCKContainer;
    HDProfile * _profile;
    long long  _pullOperationFailureCount;
    NSObject<OS_dispatch_queue> * _queue;
    unsigned long long  _repositorySettings;
    NSArray * _secondaryCKContainers;
}

@property (nonatomic, readonly) NSSet *allCKContainers;
@property (nonatomic, readonly, copy) NSSet *allOwnerIdentifiers;
@property (nonatomic, readonly, copy) NSDictionary *ownerIdentifiersByContainerIdentifier;
@property (nonatomic, readonly) CKContainer *primaryCKContainer;
@property (nonatomic, readonly) HDProfile *profile;
@property (nonatomic) unsigned long long repositorySettings;
@property (nonatomic, readonly) NSArray *secondaryCKContainers;

- (void).cxx_destruct;
- (id)_cloudSyncContainerDescriptionFromFetchOperationResult:(id)arg1 configuration:(id)arg2;
- (void)_disableCloudSyncWithCompletion:(id /* block */)arg1;
- (id)_fetchDescriptionWithOptions:(unsigned long long)arg1 reason:(long long)arg2 identifier:(id)arg3 taskTree:(id)arg4 resultHandler:(id /* block */)arg5;
- (id)_lastSuccessfulPullKey;
- (id)_operationGroupForReason:(long long)arg1 options:(unsigned long long)arg2;
- (long long)_pendingProgressCountForPullOperationsGivenOptions:(unsigned long long)arg1;
- (long long)_pendingProgressCountForPushOperationGivenOptions:(unsigned long long)arg1 maxPullOperationCount:(long long)arg2;
- (void)_queue_fetchOwnerIdentifierForContainer:(id)arg1 results:(id)arg2 taskTree:(id)arg3;
- (void)_queue_fetchOwnerIdentifiersWithCompletion:(id /* block */)arg1;
- (void)_recordSuccessfulPull;
- (id)_startPullOperationForPullZone:(id)arg1 configuration:(id)arg2 fetchOperationResult:(id)arg3 taskTree:(id)arg4;
- (void)_updateProgress:(id)arg1 isPrimaryContainer:(bool)arg2 forOperationComponent:(unsigned long long)arg3;
- (id)allCKContainers;
- (id)allOwnerIdentifiers;
- (id)containerForContainerIdentifier:(id)arg1;
- (id)description;
- (id)disableAndDeleteAllSyncDataWithTaskTree:(id)arg1 identifier:(id)arg2;
- (void)disableSyncLocallyWithTaskTree:(id)arg1;
- (id)fetchDescriptionWithOptions:(unsigned long long)arg1 reason:(long long)arg2 identifier:(id)arg3 taskTree:(id)arg4 resultHandler:(id /* block */)arg5;
- (void)fetchSyncStatusWithTaskTree:(id)arg1 resultsHandler:(id /* block */)arg2;
- (id)initAsSecondaryWithProfile:(id)arg1 syncContainer:(id)arg2;
- (id)initWithProfile:(id)arg1 primaryCKContainer:(id)arg2 secondaryCKContainers:(id)arg3;
- (id)initWithProfile:(id)arg1 syncContainer:(id)arg2;
- (id)ownerIdentifiersByContainerIdentifier;
- (id)primaryCKContainer;
- (id)profile;
- (unsigned long long)repositorySettings;
- (void)resetContainer:(id)arg1 withOptions:(unsigned long long)arg2 reason:(long long)arg3 progress:(id)arg4 syncIdentifier:(id)arg5 taskTree:(id)arg6;
- (id)resetWithOptions:(unsigned long long)arg1 reason:(long long)arg2 identifier:(id)arg3 taskTree:(id)arg4;
- (id)secondaryCKContainers;
- (void)setRepositorySettings:(unsigned long long)arg1;
- (id)syncWithOptions:(unsigned long long)arg1 reason:(long long)arg2 identifier:(id)arg3 accessibilityAssertion:(id)arg4 taskTree:(id)arg5;
- (id)syncWithOptions:(unsigned long long)arg1 reason:(long long)arg2 identifier:(id)arg3 completion:(id /* block */)arg4;
- (id)syncWithOptions:(unsigned long long)arg1 reason:(long long)arg2 identifier:(id)arg3 taskTree:(id)arg4;
- (void)unitTest_fetchOwnerIdentifiersWithCompletion:(id /* block */)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

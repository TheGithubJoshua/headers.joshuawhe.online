<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDAuthorizationServer.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDAuthorizationServer.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDAuthorizationServer : NSObject {
    HDClientAuthorizationOracle * _authorizationOracle;
    NSMutableArray * _authorizationRequestIdentifiers;
    HDXPCClient * _client;
    int  _invalidated;
    HDProfile * _profile;
    NSObject<OS_dispatch_queue> * _queue;
    NSUUID * _transactionSessionIdentifier;
}

@property (nonatomic, retain) NSMutableArray *authorizationRequestIdentifiers;
@property (readonly) HDXPCClient *client;
@property (nonatomic) int invalidated;
@property (nonatomic) HDProfile *profile;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSUUID *transactionSessionIdentifier;

- (void).cxx_destruct;
- (id)_authorizationStatusForTypes:(id)arg1 error:(id*)arg2;
- (void)_invalidate;
- (void)_performIfAuthorizedForTypes:(id)arg1 sharing:(bool)arg2 onQueue:(id)arg3 usingBlock:(id /* block */)arg4 errorHandler:(id /* block */)arg5;
- (void)_queue_beginAuthorizationRequestDelegateTransactionWithSessionIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (void)_queue_enqueueAuthorizationRequestForBundleIdentifier:(id)arg1 writeTypes:(id)arg2 readTypes:(id)arg3 authorizationNeededHandler:(id /* block */)arg4 requestCompletionHandler:(id /* block */)arg5;
- (void)_setAuthorizationStatusesEntitled:(id)arg1 authorizationModes:(id)arg2 forBundleIdentifier:(id)arg3 options:(unsigned long long)arg4 completion:(id /* block */)arg5;
- (id)allAuthorizationRecordsForBundleIdentifier:(id)arg1 error:(id*)arg2;
- (id)allAuthorizationRecordsForType:(id)arg1 error:(id*)arg2;
- (id)allDocumentAuthorizationRecordsForType:(id)arg1 bundleIdentifier:(id)arg2 error:(id*)arg3;
- (id)allObjectAuthorizationsForSampleWithUUID:(id)arg1 error:(id*)arg2;
- (id)allSourcesRequestingTypes:(id)arg1 error:(id*)arg2;
- (id)authorizationRequestIdentifiers;
- (id)authorizationStatusForType:(id)arg1 error:(id*)arg2;
- (void)beginAuthorizationRequestDelegateTransactionWithRequestRecord:(id)arg1 completion:(id /* block */)arg2;
- (void)beginAuthorizationRequestDelegateTransactionWithSessionIdentifier:(id)arg1 completion:(id /* block */)arg2;
- (id)client;
- (void)endAuthorizationRequestDelegateTransactionWithSessionIdentifier:(id)arg1 error:(id)arg2;
- (void)enqueueAuthorizationRequestToWriteTypes:(id)arg1 readTypes:(id)arg2 authorizationNeededHandler:(id /* block */)arg3 requestCompletionHandler:(id /* block */)arg4;
- (void)enqueueObjectAuthorizationRequestForSamples:(id)arg1 promptIfNeeded:(bool)arg2 authorizationNeededHandler:(id /* block */)arg3 completion:(id /* block */)arg4;
- (void)handleAuthorizationRequestsForBundleIdentifier:(id)arg1 promptHandler:(id /* block */)arg2 requestCompletionHandler:(id /* block */)arg3;
- (void)handleAuthorizationRequestsWithPromptHandler:(id /* block */)arg1 requestCompletionHandler:(id /* block */)arg2;
- (void)handleObjectAuthorizationRequestsWithPromptHandler:(id /* block */)arg1 completion:(id /* block */)arg2;
- (id)initWithClient:(id)arg1 profile:(id)arg2 queue:(id)arg3;
- (void)invalidate;
- (int)invalidated;
- (bool)isAuthorizationStatusDeterminedForTypes:(id)arg1 error:(id*)arg2;
- (void)performIfAuthorizedToDeleteObjectsWithTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(id /* block */)arg3 errorHandler:(id /* block */)arg4;
- (void)performIfAuthorizedToReadTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(id /* block */)arg3 errorHandler:(id /* block */)arg4;
- (void)performIfAuthorizedToSaveObjectsWithTypes:(id)arg1 onQueue:(id)arg2 usingBlock:(id /* block */)arg3 errorHandler:(id /* block */)arg4;
- (id)profile;
- (id)queue;
- (id)readAuthorizationStatusForType:(id)arg1 error:(id*)arg2;
- (id)readAuthorizationWithTypes:(id)arg1 error:(id*)arg2;
- (void)requestAuthorizationForBundleIdentifier:(id)arg1 writeTypes:(id)arg2 readTypes:(id)arg3 completion:(id /* block */)arg4;
- (bool)resetAuthorizationStatusForBundleIdentifier:(id)arg1 error:(id*)arg2;
- (bool)resetAuthorizationStatusesForObjects:(id)arg1 error:(id*)arg2;
- (void)setAuthorizationRequestIdentifiers:(id)arg1;
- (void)setAuthorizationStatuses:(id)arg1 authorizationModes:(id)arg2 forBundleIdentifier:(id)arg3 options:(unsigned long long)arg4 completion:(id /* block */)arg5;
- (void)setInvalidated:(int)arg1;
- (void)setProfile:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setTransactionSessionIdentifier:(id)arg1;
- (id)transactionSessionIdentifier;
- (void)updateDefaultAuthorizationStatusesWithCompletion:(id /* block */)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

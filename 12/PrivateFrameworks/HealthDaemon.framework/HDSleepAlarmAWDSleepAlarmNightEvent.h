<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDSleepAlarmAWDSleepAlarmNightEvent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDSleepAlarmAWDSleepAlarmNightEvent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDSleepAlarmAWDSleepAlarmNightEvent : PBCodable <NSCopying> {
    long long  _bedtimeHour;
    long long  _bedtimeMinute;
    long long  _bedtimeToCorrectedBedtimeMinutes;
    long long  _bedtimeToFirstSleepInterruptionMinutes;
    long long  _bedtimeToStartOfLongestSleepIntervalMinutes;
    long long  _correctedBedtimeToThirdPartySleepOnsetMinutes;
    struct { 
        unsigned int bedtimeHour : 1; 
        unsigned int bedtimeMinute : 1; 
        unsigned int bedtimeToCorrectedBedtimeMinutes : 1; 
        unsigned int bedtimeToFirstSleepInterruptionMinutes : 1; 
        unsigned int bedtimeToStartOfLongestSleepIntervalMinutes : 1; 
        unsigned int correctedBedtimeToThirdPartySleepOnsetMinutes : 1; 
        unsigned int percentOfDesiredSleep : 1; 
        unsigned int timestamp : 1; 
        unsigned int wakeupTimeToThirdPartyWakeupTimeMinutes : 1; 
        unsigned int wakeupIsOnWeekday : 1; 
    }  _has;
    long long  _percentOfDesiredSleep;
    NSString * _thirdPartyBundleIdentifier;
    NSString * _thirdPartyDeviceManufacturer;
    NSString * _thirdPartyDeviceModel;
    unsigned long long  _timestamp;
    bool  _wakeupIsOnWeekday;
    long long  _wakeupTimeToThirdPartyWakeupTimeMinutes;
}

@property (nonatomic) long long bedtimeHour;
@property (nonatomic) long long bedtimeMinute;
@property (nonatomic) long long bedtimeToCorrectedBedtimeMinutes;
@property (nonatomic) long long bedtimeToFirstSleepInterruptionMinutes;
@property (nonatomic) long long bedtimeToStartOfLongestSleepIntervalMinutes;
@property (nonatomic) long long correctedBedtimeToThirdPartySleepOnsetMinutes;
@property (nonatomic) bool hasBedtimeHour;
@property (nonatomic) bool hasBedtimeMinute;
@property (nonatomic) bool hasBedtimeToCorrectedBedtimeMinutes;
@property (nonatomic) bool hasBedtimeToFirstSleepInterruptionMinutes;
@property (nonatomic) bool hasBedtimeToStartOfLongestSleepIntervalMinutes;
@property (nonatomic) bool hasCorrectedBedtimeToThirdPartySleepOnsetMinutes;
@property (nonatomic) bool hasPercentOfDesiredSleep;
@property (nonatomic, readonly) bool hasThirdPartyBundleIdentifier;
@property (nonatomic, readonly) bool hasThirdPartyDeviceManufacturer;
@property (nonatomic, readonly) bool hasThirdPartyDeviceModel;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasWakeupIsOnWeekday;
@property (nonatomic) bool hasWakeupTimeToThirdPartyWakeupTimeMinutes;
@property (nonatomic) long long percentOfDesiredSleep;
@property (nonatomic, retain) NSString *thirdPartyBundleIdentifier;
@property (nonatomic, retain) NSString *thirdPartyDeviceManufacturer;
@property (nonatomic, retain) NSString *thirdPartyDeviceModel;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) bool wakeupIsOnWeekday;
@property (nonatomic) long long wakeupTimeToThirdPartyWakeupTimeMinutes;

- (void).cxx_destruct;
- (long long)bedtimeHour;
- (long long)bedtimeMinute;
- (long long)bedtimeToCorrectedBedtimeMinutes;
- (long long)bedtimeToFirstSleepInterruptionMinutes;
- (long long)bedtimeToStartOfLongestSleepIntervalMinutes;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (long long)correctedBedtimeToThirdPartySleepOnsetMinutes;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasBedtimeHour;
- (bool)hasBedtimeMinute;
- (bool)hasBedtimeToCorrectedBedtimeMinutes;
- (bool)hasBedtimeToFirstSleepInterruptionMinutes;
- (bool)hasBedtimeToStartOfLongestSleepIntervalMinutes;
- (bool)hasCorrectedBedtimeToThirdPartySleepOnsetMinutes;
- (bool)hasPercentOfDesiredSleep;
- (bool)hasThirdPartyBundleIdentifier;
- (bool)hasThirdPartyDeviceManufacturer;
- (bool)hasThirdPartyDeviceModel;
- (bool)hasTimestamp;
- (bool)hasWakeupIsOnWeekday;
- (bool)hasWakeupTimeToThirdPartyWakeupTimeMinutes;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (long long)percentOfDesiredSleep;
- (bool)readFrom:(id)arg1;
- (void)setBedtimeHour:(long long)arg1;
- (void)setBedtimeMinute:(long long)arg1;
- (void)setBedtimeToCorrectedBedtimeMinutes:(long long)arg1;
- (void)setBedtimeToFirstSleepInterruptionMinutes:(long long)arg1;
- (void)setBedtimeToStartOfLongestSleepIntervalMinutes:(long long)arg1;
- (void)setCorrectedBedtimeToThirdPartySleepOnsetMinutes:(long long)arg1;
- (void)setHasBedtimeHour:(bool)arg1;
- (void)setHasBedtimeMinute:(bool)arg1;
- (void)setHasBedtimeToCorrectedBedtimeMinutes:(bool)arg1;
- (void)setHasBedtimeToFirstSleepInterruptionMinutes:(bool)arg1;
- (void)setHasBedtimeToStartOfLongestSleepIntervalMinutes:(bool)arg1;
- (void)setHasCorrectedBedtimeToThirdPartySleepOnsetMinutes:(bool)arg1;
- (void)setHasPercentOfDesiredSleep:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasWakeupIsOnWeekday:(bool)arg1;
- (void)setHasWakeupTimeToThirdPartyWakeupTimeMinutes:(bool)arg1;
- (void)setPercentOfDesiredSleep:(long long)arg1;
- (void)setThirdPartyBundleIdentifier:(id)arg1;
- (void)setThirdPartyDeviceManufacturer:(id)arg1;
- (void)setThirdPartyDeviceModel:(id)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setWakeupIsOnWeekday:(bool)arg1;
- (void)setWakeupTimeToThirdPartyWakeupTimeMinutes:(long long)arg1;
- (id)thirdPartyBundleIdentifier;
- (id)thirdPartyDeviceManufacturer;
- (id)thirdPartyDeviceModel;
- (unsigned long long)timestamp;
- (bool)wakeupIsOnWeekday;
- (long long)wakeupTimeToThirdPartyWakeupTimeMinutes;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

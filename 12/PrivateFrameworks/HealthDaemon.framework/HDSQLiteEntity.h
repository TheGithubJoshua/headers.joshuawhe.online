<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDSQLiteEntity.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDSQLiteEntity.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDSQLiteEntity : NSObject <HDSQLiteEntity> {
    long long  _persistentID;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) long long persistentID;
@property (readonly) Class superclass;

+ (id)_copyDeleteSQLWithTableName:(id)arg1 columnName:(id)arg2;
+ (void)_enumerateColumnDefinitionsWithBlock:(id /* block */)arg1;
+ (void)_enumerateColumnNamesWithBlock:(id /* block */)arg1;
+ (id)_generateDisambiguatedDatabaseTableName;
+ (id)additionalPredicateForEnumeration;
+ (id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 predicate:(id)arg3 database:(id)arg4 error:(id*)arg5;
+ (id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4 error:(id*)arg5;
+ (id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 database:(id)arg5 error:(id*)arg6;
+ (id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4 error:(id*)arg5;
+ (id)allDatabaseColumnNames;
+ (id)anyInDatabase:(id)arg1 predicate:(id)arg2 error:(id*)arg3;
+ (id)checkConstraints;
+ (const struct { id x1; id x2; unsigned char x3; }*)columnDefinitionsWithCount:(unsigned long long*)arg1;
+ (id)columnsDefinition;
+ (id)countDistinctForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4;
+ (id)countValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4;
+ (id)databaseName;
+ (id)databaseTable;
+ (bool)deleteEntitiesInDatabase:(id)arg1 predicate:(id)arg2 error:(id*)arg3;
+ (id)deleteStatementWithProperty:(id)arg1 database:(id)arg2;
+ (id)disambiguatedDatabaseTable;
+ (id)disambiguatedSQLForProperty:(id)arg1;
+ (id)distinctProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4;
+ (Class)entityClassForEnumeration;
+ (Class)entityForProperty:(id)arg1;
+ (id)entityWithPersistentID:(id)arg1;
+ (void)enumerateColumnsWithBlock:(id /* block */)arg1;
+ (bool)enumerateEntitiesInDatabase:(id)arg1 predicate:(id)arg2 error:(id*)arg3 enumerationHandler:(id /* block */)arg4;
+ (bool)enumerateQueryResultsFromColumns:(id)arg1 properties:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 orderingProperties:(id)arg5 limit:(long long)arg6 database:(id)arg7 error:(id*)arg8 enumerationHandler:(id /* block */)arg9;
+ (id)firstInDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4 error:(id*)arg5;
+ (id)foreignKeys;
+ (id)indices;
+ (id)insertOrReplaceEntity:(bool)arg1 database:(id)arg2 properties:(id)arg3 error:(id*)arg4 bindingHandler:(id /* block */)arg5;
+ (id)insertSQLForProperties:(id)arg1 shouldReplace:(bool)arg2;
+ (bool)isTemporary;
+ (id)joinClausesForProperty:(id)arg1;
+ (id)maxPersistentIDWithPredicate:(id)arg1 database:(id)arg2 error:(id*)arg3;
+ (id)maxValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4;
+ (id)privateSubEntities;
+ (id)propertyValueForAnyInDatabase:(id)arg1 property:(id)arg2 predicate:(id)arg3 error:(id*)arg4;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 limit:(unsigned long long)arg3 orderingProperties:(id)arg4 orderingDirections:(id)arg5 groupBy:(id)arg6;
+ (id)tableAliases;
+ (bool)updateProperties:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4 bindingHandler:(id /* block */)arg5;
+ (id)updateSQLForProperties:(id)arg1 predicate:(id)arg2;
+ (id)updateSQLForPropertiesOnEntity:(id)arg1;

- (id)UUIDForProperty:(id)arg1 database:(id)arg2;
- (bool)_deleteRowFromTable:(id)arg1 usingColumn:(id)arg2 database:(id)arg3;
- (bool)booleanForProperty:(id)arg1 database:(id)arg2;
- (id)dateForProperty:(id)arg1 database:(id)arg2;
- (bool)deleteFromDatabase:(id)arg1 error:(id*)arg2;
- (id)description;
- (bool)existsInDatabase:(id)arg1;
- (bool)getValuesForProperties:(id)arg1 database:(id)arg2 error:(id*)arg3 handler:(id /* block */)arg4;
- (bool)getValuesForProperties:(id)arg1 database:(id)arg2 handler:(id /* block */)arg3;
- (id)initWithPersistentID:(long long)arg1;
- (id)numberForProperty:(id)arg1 database:(id)arg2;
- (long long)persistentID;
- (id)stringForProperty:(id)arg1 database:(id)arg2;
- (bool)updateProperties:(id)arg1 database:(id)arg2 error:(id*)arg3 bindingHandler:(id /* block */)arg4;
- (id)valueForProperty:(id)arg1 database:(id)arg2;
- (void)willDeleteFromDatabase:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

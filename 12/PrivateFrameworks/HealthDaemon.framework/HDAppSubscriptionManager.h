<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDAppSubscriptionManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDAppSubscriptionManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDAppSubscriptionManager : NSObject <HDDatabaseProtectedDataObserver> {
    HDAppAssertionManager * _appAssertionManager;
    int  _backgroundAppRefreshNotifyToken;
    HDBackgroundTaskScheduler * _backgroundTaskScheduler;
    NSObject<OS_dispatch_queue> * _launchQueue;
    NSMutableDictionary * _launchTimerLaunchTimes;
    NSObject<OS_dispatch_queue> * _launchTimerQueue;
    NSMutableDictionary * _launchTimers;
    NSMutableSet * _pendingFirstLaunchBundleIdentifiers;
    NSMutableDictionary * _pendingTypeCodesToAnchors;
    HDProfile * _profile;
    bool  _shouldScheduleLaunches;
}

@property (nonatomic, retain) HDAppAssertionManager *appAssertionManager;
@property (nonatomic) int backgroundAppRefreshNotifyToken;
@property (nonatomic, retain) HDBackgroundTaskScheduler *backgroundTaskScheduler;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *launchQueue;
@property (nonatomic, retain) NSMutableDictionary *launchTimerLaunchTimes;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *launchTimerQueue;
@property (nonatomic, retain) NSMutableDictionary *launchTimers;
@property (nonatomic, retain) NSMutableSet *pendingFirstLaunchBundleIdentifiers;
@property (nonatomic, retain) NSMutableDictionary *pendingTypeCodesToAnchors;
@property (nonatomic) HDProfile *profile;
@property (nonatomic) bool shouldScheduleLaunches;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_activityNameForSubscription:(id)arg1 anchor:(id)arg2;
- (id)_appSubscriptionsForDataTypeCode:(long long)arg1 lastAppLaunchTimes:(id)arg2 error:(id*)arg3;
- (void)_applicationsInstalled:(id)arg1;
- (void)_launchTimerFired:(id)arg1 code:(id)arg2 anchor:(id)arg3;
- (void)_queue_ackForBundleID:(id)arg1 dataCode:(long long)arg2 anchor:(id)arg3 ackTime:(id)arg4;
- (void)_queue_launchSubscription:(id)arg1 anchor:(id)arg2;
- (void)_queue_scheduleLaunchForSubscription:(id)arg1 anchor:(id)arg2;
- (void)_queue_scheduleLaunches:(long long)arg1 anchor:(id)arg2;
- (void)_queue_subscribeForBundleID:(id)arg1 dataCode:(long long)arg2 frequencyInSeconds:(unsigned long long)arg3;
- (id)_queue_subscriptionForActivityName:(id)arg1 anchor:(id*)arg2;
- (void)_queue_updateBundleID:(id)arg1 dataCode:(long long)arg2 launchTime:(id)arg3;
- (void)_removeBundleID:(id)arg1;
- (void)_removeLaunchForSubscription:(id)arg1 anchor:(id)arg2;
- (void)_removeSubscriptionForBundleID:(id)arg1 dataCode:(long long)arg2 anchor:(id)arg3;
- (bool)_shouldDoAFirstLaunchForBundleIdentifier:(id)arg1;
- (void)ackForBundleID:(id)arg1 dataCode:(long long)arg2 anchor:(id)arg3 ackTime:(id)arg4;
- (id)appAssertionManager;
- (bool)areSubscriptionsSupportedForDataTypeCode:(long long)arg1;
- (int)backgroundAppRefreshNotifyToken;
- (id)backgroundTaskScheduler;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(bool)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithProfile:(id)arg1;
- (id)launchQueue;
- (id)launchTimerLaunchTimes;
- (id)launchTimerQueue;
- (id)launchTimers;
- (id)pendingFirstLaunchBundleIdentifiers;
- (id)pendingTypeCodesToAnchors;
- (id)profile;
- (void)removeBundleID:(id)arg1;
- (void)removeSubscriptionForBundleID:(id)arg1 dataCode:(long long)arg2;
- (void)setAnchor:(id)arg1 forDataCode:(long long)arg2;
- (void)setAppAssertionManager:(id)arg1;
- (void)setBackgroundAppRefreshNotifyToken:(int)arg1;
- (void)setBackgroundTaskScheduler:(id)arg1;
- (void)setLaunchQueue:(id)arg1;
- (void)setLaunchTimerLaunchTimes:(id)arg1;
- (void)setLaunchTimerQueue:(id)arg1;
- (void)setLaunchTimers:(id)arg1;
- (void)setPendingFirstLaunchBundleIdentifiers:(id)arg1;
- (void)setPendingTypeCodesToAnchors:(id)arg1;
- (void)setProfile:(id)arg1;
- (void)setShouldScheduleLaunches:(bool)arg1;
- (bool)shouldScheduleLaunches;
- (void)subscribeForBundleID:(id)arg1 dataCode:(long long)arg2 frequencyInSeconds:(unsigned long long)arg3;
- (void)unitTesting_synchronizeWithQueue;
- (void)updateBundleID:(id)arg1 dataCode:(long long)arg2 launchTime:(id)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

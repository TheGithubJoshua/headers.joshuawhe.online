<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDCodableNanoSyncChange.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDCodableNanoSyncChange.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDCodableNanoSyncChange : PBCodable <HDNanoSyncDescription, HDSyncChange, NSCopying> {
    bool  _complete;
    long long  _endAnchor;
    HDCodableEntityIdentifier * _entityIdentifier;
    struct { 
        unsigned int endAnchor : 1; 
        unsigned int sequence : 1; 
        unsigned int startAnchor : 1; 
        unsigned int objectType : 1; 
        unsigned int complete : 1; 
        unsigned int speculative : 1; 
    }  _has;
    NSMutableArray * _objectDatas;
    int  _objectType;
    NSMutableArray * _requiredAnchors;
    long long  _sequence;
    bool  _speculative;
    long long  _startAnchor;
}

@property (nonatomic) bool complete;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool done;
@property (nonatomic) long long endAnchor;
@property (nonatomic, retain) HDCodableEntityIdentifier *entityIdentifier;
@property (nonatomic) bool hasComplete;
@property (nonatomic) bool hasEndAnchor;
@property (nonatomic, readonly) bool hasEntityIdentifier;
@property (nonatomic) bool hasObjectType;
@property (nonatomic) bool hasSequence;
@property (nonatomic) bool hasSpeculative;
@property (nonatomic) bool hasStartAnchor;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableArray *objectDatas;
@property (nonatomic) int objectType;
@property (nonatomic, retain) NSMutableArray *requiredAnchors;
@property (nonatomic) long long sequence;
@property (nonatomic, readonly) NSNumber *sequenceNumber;
@property (getter=isSpeculative, nonatomic, readonly) bool speculative;
@property (nonatomic) bool speculative;
@property (nonatomic) long long startAnchor;
@property (readonly) Class superclass;
@property (nonatomic, readonly) struct HDSyncAnchorRange { long long x1; long long x2; } syncAnchorRange;

+ (id)changeWithNanoSyncEntityClass:(Class)arg1;
+ (Class)objectDataType;
+ (Class)requiredAnchorsType;

- (void).cxx_destruct;
- (int)StringAsObjectType:(id)arg1;
- (void)addObjectData:(id)arg1;
- (void)addRequiredAnchors:(id)arg1;
- (void)clearObjectDatas;
- (void)clearRequiredAnchors;
- (bool)complete;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)decodedObjectsForProfile:(id)arg1 error:(id*)arg2;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)done;
- (long long)endAnchor;
- (id)entityIdentifier;
- (bool)hasComplete;
- (bool)hasEndAnchor;
- (bool)hasEntityIdentifier;
- (bool)hasObjectType;
- (bool)hasSequence;
- (bool)hasSpeculative;
- (bool)hasStartAnchor;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isSpeculative;
- (void)mergeFrom:(id)arg1;
- (id)nanoSyncDescription;
- (id)objectDataAtIndex:(unsigned long long)arg1;
- (id)objectDatas;
- (unsigned long long)objectDatasCount;
- (int)objectType;
- (id)objectTypeAsString:(int)arg1;
- (bool)readFrom:(id)arg1;
- (id)requiredAnchorMapWithProfile:(id)arg1 error:(id*)arg2;
- (id)requiredAnchors;
- (id)requiredAnchorsAtIndex:(unsigned long long)arg1;
- (unsigned long long)requiredAnchorsCount;
- (long long)sequence;
- (id)sequenceNumber;
- (void)setComplete:(bool)arg1;
- (void)setEndAnchor:(long long)arg1;
- (void)setEntityIdentifier:(id)arg1;
- (void)setHasComplete:(bool)arg1;
- (void)setHasEndAnchor:(bool)arg1;
- (void)setHasObjectType:(bool)arg1;
- (void)setHasSequence:(bool)arg1;
- (void)setHasSpeculative:(bool)arg1;
- (void)setHasStartAnchor:(bool)arg1;
- (void)setObjectDatas:(id)arg1;
- (void)setObjectType:(int)arg1;
- (void)setObjects:(id)arg1 syncAnchorRange:(struct HDSyncAnchorRange { long long x1; long long x2; })arg2 requiredAnchorMap:(id)arg3;
- (void)setRequiredAnchors:(id)arg1;
- (void)setSequence:(long long)arg1;
- (void)setSequenceNumber:(long long)arg1 done:(bool)arg2;
- (void)setSpeculative:(bool)arg1;
- (void)setStartAnchor:(long long)arg1;
- (bool)speculative;
- (id)speculativeCopy;
- (long long)startAnchor;
- (struct HDSyncAnchorRange { long long x1; long long x2; })syncAnchorRange;
- (Class)syncEntityClassForProfile:(id)arg1;
- (id)syncEntityIdentifier;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDAWDHealthKitIngestionLatencyEvent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDAWDHealthKitIngestionLatencyEvent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDAWDHealthKitIngestionLatencyEvent : PBCodable <NSCopying> {
    long long  _endDate;
    struct { 
        unsigned int endDate : 1; 
        unsigned int indexInSession : 1; 
        unsigned int maxDelayUs : 1; 
        unsigned int meanDelayUs : 1; 
        unsigned int minDelayUs : 1; 
        unsigned int sampleCount : 1; 
        unsigned int startDate : 1; 
        unsigned int stdDelayUs : 1; 
        unsigned int timestamp : 1; 
        unsigned int typeIdentifier : 1; 
        unsigned int inSession : 1; 
    }  _has;
    bool  _inSession;
    long long  _indexInSession;
    long long  _maxDelayUs;
    long long  _meanDelayUs;
    long long  _minDelayUs;
    long long  _sampleCount;
    long long  _startDate;
    long long  _stdDelayUs;
    unsigned long long  _timestamp;
    long long  _typeIdentifier;
}

@property (nonatomic) long long endDate;
@property (nonatomic) bool hasEndDate;
@property (nonatomic) bool hasInSession;
@property (nonatomic) bool hasIndexInSession;
@property (nonatomic) bool hasMaxDelayUs;
@property (nonatomic) bool hasMeanDelayUs;
@property (nonatomic) bool hasMinDelayUs;
@property (nonatomic) bool hasSampleCount;
@property (nonatomic) bool hasStartDate;
@property (nonatomic) bool hasStdDelayUs;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasTypeIdentifier;
@property (nonatomic) bool inSession;
@property (nonatomic) long long indexInSession;
@property (nonatomic) long long maxDelayUs;
@property (nonatomic) long long meanDelayUs;
@property (nonatomic) long long minDelayUs;
@property (nonatomic) long long sampleCount;
@property (nonatomic) long long startDate;
@property (nonatomic) long long stdDelayUs;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) long long typeIdentifier;

- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (long long)endDate;
- (bool)hasEndDate;
- (bool)hasInSession;
- (bool)hasIndexInSession;
- (bool)hasMaxDelayUs;
- (bool)hasMeanDelayUs;
- (bool)hasMinDelayUs;
- (bool)hasSampleCount;
- (bool)hasStartDate;
- (bool)hasStdDelayUs;
- (bool)hasTimestamp;
- (bool)hasTypeIdentifier;
- (unsigned long long)hash;
- (bool)inSession;
- (long long)indexInSession;
- (bool)isEqual:(id)arg1;
- (long long)maxDelayUs;
- (long long)meanDelayUs;
- (void)mergeFrom:(id)arg1;
- (long long)minDelayUs;
- (bool)readFrom:(id)arg1;
- (long long)sampleCount;
- (void)setEndDate:(long long)arg1;
- (void)setHasEndDate:(bool)arg1;
- (void)setHasInSession:(bool)arg1;
- (void)setHasIndexInSession:(bool)arg1;
- (void)setHasMaxDelayUs:(bool)arg1;
- (void)setHasMeanDelayUs:(bool)arg1;
- (void)setHasMinDelayUs:(bool)arg1;
- (void)setHasSampleCount:(bool)arg1;
- (void)setHasStartDate:(bool)arg1;
- (void)setHasStdDelayUs:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasTypeIdentifier:(bool)arg1;
- (void)setInSession:(bool)arg1;
- (void)setIndexInSession:(long long)arg1;
- (void)setMaxDelayUs:(long long)arg1;
- (void)setMeanDelayUs:(long long)arg1;
- (void)setMinDelayUs:(long long)arg1;
- (void)setSampleCount:(long long)arg1;
- (void)setStartDate:(long long)arg1;
- (void)setStdDelayUs:(long long)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setTypeIdentifier:(long long)arg1;
- (long long)startDate;
- (long long)stdDelayUs;
- (unsigned long long)timestamp;
- (long long)typeIdentifier;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

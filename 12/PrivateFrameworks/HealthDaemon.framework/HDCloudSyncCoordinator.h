<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HDCloudSyncCoordinator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HealthDaemon.framework/HDCloudSyncCoordinator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon (1)
 */

@interface HDCloudSyncCoordinator : NSObject <HDDiagnosticObject, HDHealthDaemonReadyObserver, HDPeriodicActivityDelegate> {
    ACAccountStore * _accountStore;
    HDAsynchronousTaskTree * _activeTaskGroup;
    NSProgress * _activeTaskProgress;
    HDDaemon * _daemon;
    bool  _hasiCloudAccount;
    NSString * _latestSyncEndLog;
    NSString * _latestSyncStartLog;
    NSMutableArray * _pendingTaskGroups;
    NSMutableArray * _pendingTasksProgress;
    HDPeriodicActivity * _periodicActivity;
    NSMutableArray * _progressCompletionBlocks;
    NSObject<OS_dispatch_queue> * _queue;
    bool  _queue_hasUpdatedCachedLastSuccessfulSyncDates;
    NSDate * _queue_lastSuccessfulPullDate;
    NSDate * _queue_lastSuccessfulPushDate;
    bool  _queue_syncInProgress;
    NSMutableDictionary * _waitForSyncObservations;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_canPerformCloudSyncWithError:(id*)arg1;
- (void)_checkiCloudAccountStatus;
- (void)_considerMigratingHealthAccountDataclassState;
- (id)_fetchDescriptionForProfile:(id)arg1 options:(unsigned long long)arg2 reason:(long long)arg3 taskTree:(id)arg4 resultHandler:(id /* block */)arg5;
- (id)_lastLongTimeWithoutSuccessfulCloudSyncReportDateKeyWithError:(id*)arg1;
- (void)_mergeCloudSyncJournalsForProfile:(id)arg1 progress:(id)arg2 taskTree:(id)arg3;
- (void)_mergeCloudSyncJournalsWithTaskTree:(id)arg1 progress:(id)arg2;
- (void)_persistPeriodicSyncError:(id)arg1;
- (void)_prepareAllProfilesForSyncWithCompletion:(id /* block */)arg1;
- (void)_queue_addCloudSyncProgressCompletion:(id /* block */)arg1;
- (void)_queue_checkLastSyncDate;
- (long long)_queue_cloudSyncWaitStatusWithError:(id*)arg1;
- (id)_queue_disableAndDeleteCloudSyncDataWithCompletion:(id /* block */)arg1;
- (id)_queue_fetchCloudDescriptionWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (void)_queue_finishCloudSyncTaskProgressWithResult:(long long)arg1 error:(id)arg2;
- (id)_queue_getPersistedAccountInfo;
- (bool)_queue_hasTooManyPendingTaskGroupsWithError:(id*)arg1;
- (id)_queue_resetAllProfilesWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (bool)_queue_setWaitTimeoutDateIfNecessaryWithError:(id*)arg1;
- (void)_queue_startNextTaskGroup;
- (id)_queue_syncAllProfilesWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (void)_queue_triggerSyncForiCloudLogin;
- (id)_queue_waitOnHealthCloudSyncWithUUID:(id)arg1 startHandler:(id /* block */)arg2 completion:(id /* block */)arg3;
- (void)_resetPersistedPeriodicSyncErrors;
- (id)_resetProfile:(id)arg1 options:(unsigned long long)arg2 reason:(long long)arg3 taskTree:(id)arg4;
- (void)_respondToACAccountStoreDidChange;
- (void)_setHealthAccountDataclassEnabled:(bool)arg1 completion:(id /* block */)arg2;
- (void)_setupPeriodicActivity;
- (bool)_shouldPerformLastSyncDateCheckInternalSetting;
- (id)_syncProfile:(id)arg1 options:(unsigned long long)arg2 reason:(long long)arg3 taskTree:(id)arg4;
- (bool)_unitTest_shouldSyncProfile:(id)arg1;
- (void)_updateAggdKeysForPeriodicSyncError:(id)arg1;
- (void)_updateCachedLastSyncDatesWithCompletion:(id /* block */)arg1;
- (bool)createShareWithRecipient:(id)arg1 sampleTypes:(id)arg2 maxSampleAge:(id)arg3 profile:(id)arg4 error:(id*)arg5;
- (void)daemonReady:(id)arg1;
- (id)diagnosticDescription;
- (id)disableAndDeleteAllSyncDataWithCompletion:(id /* block */)arg1;
- (void)disableSyncLocallyWithCompletion:(id /* block */)arg1;
- (id)fetchCloudDescriptionWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (id)fetchCloudSyncProgressWithCompletion:(id /* block */)arg1;
- (void)fetchSyncStatusWithCompletion:(id /* block */)arg1;
- (id)initWithDaemon:(id)arg1;
- (void)performPeriodicActivity:(id)arg1 completion:(id /* block */)arg2;
- (void)periodicActivity:(id)arg1 configureXPCActivityCriteria:(id)arg2;
- (id)resetAllProfilesWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (id)syncAllProfilesWithOptions:(unsigned long long)arg1 reason:(long long)arg2 completion:(id /* block */)arg3;
- (void)unitTest_performPeriodicSyncWithCompletion:(id /* block */)arg1;
- (id)waitOnHealthCloudSyncWithUUID:(id)arg1 startHandler:(id /* block */)arg2 completion:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

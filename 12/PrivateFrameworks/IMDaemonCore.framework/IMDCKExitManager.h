<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>IMDCKExitManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/IMDaemonCore.framework/IMDCKExitManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore (1000)
 */

@interface IMDCKExitManager : IMDCKAbstractSyncController {
    NSObject<OS_dispatch_queue> * _ckQueue;
    IMDCKDatabaseManager * _databaseManager;
    NSError * _errorFetchingExitDate;
    CKOperationConfiguration * _exitConfigurtation;
    NSDate * _exitRecordDate;
    CKRecordID * _exitRecordID;
    bool  _fetchedExitDateOnLaunch;
    IMDRecordZoneManager * _recordZoneManager;
    NSNumber * _saltZoneCreatedOverride;
    NSNumber * _subscriptionCreatedOverride;
}

@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *ckQueue;
@property (nonatomic, retain) IMDCKDatabaseManager *databaseManager;
@property (nonatomic, retain) NSError *errorFetchingExitDate;
@property (nonatomic, retain) CKOperationConfiguration *exitConfigurtation;
@property (nonatomic, retain) NSDate *exitRecordDate;
@property (nonatomic, retain) CKRecordID *exitRecordID;
@property (nonatomic) bool fetchedExitDateOnLaunch;
@property (nonatomic, retain) IMDRecordZoneManager *recordZoneManager;
@property (nonatomic, retain) NSNumber *saltZoneCreatedOverride;
@property (nonatomic, retain) NSNumber *subscriptionCreatedOverride;

+ (id)sharedInstance;

- (bool)_analyticZoneCreated;
- (bool)_canSubmitCloudKitAnalytic;
- (bool)_canSubmitCloudKitMetric;
- (void)_evalToggleiCloudSettingsSwitch;
- (void)_fetchExitRecordDateWithCompletion:(id /* block */)arg1;
- (id)_modifiedOpGroupName:(id)arg1 useManatee:(bool)arg2;
- (bool)_saltZoneCreated;
- (void)_scheduleMetricOperation:(id)arg1 useManate:(bool)arg2;
- (void)_scheduleOperation:(id)arg1;
- (void)_setUpSubscription;
- (id)_sharedCKUtilities;
- (void)_submitCloudKitMetricWithOperationGroupName:(id)arg1 record:(id)arg2 useManatee:(bool)arg3 ignoreZoneNotFoundError:(bool)arg4 completion:(id /* block */)arg5;
- (bool)_subscriptionCreated;
- (id)analyticZoneRecordID;
- (id)ckQueue;
- (id)databaseManager;
- (void)dealloc;
- (void)deleteExitRecordWithCompletion:(id /* block */)arg1;
- (id)errorFetchingExitDate;
- (id)exitConfigurtation;
- (id)exitRecordDate;
- (void)exitRecordDateWithCompletion:(id /* block */)arg1;
- (id)exitRecordID;
- (bool)fetchedExitDateOnLaunch;
- (void)handleNotificationForSubscriptionID:(id)arg1;
- (id)init;
- (id)initRecordZoneManager:(id)arg1 databaseManager:(id)arg2;
- (id)recordZoneManager;
- (id)saltZoneCreatedOverride;
- (void)sendCloudKitZoneFetchRequestToNoteFeatureIsOn;
- (void)setDatabaseManager:(id)arg1;
- (void)setErrorFetchingExitDate:(id)arg1;
- (void)setExitConfigurtation:(id)arg1;
- (void)setExitRecordDate:(id)arg1;
- (void)setExitRecordID:(id)arg1;
- (void)setFetchedExitDateOnLaunch:(bool)arg1;
- (void)setRecordZoneManager:(id)arg1;
- (void)setSaltZoneCreatedOverride:(id)arg1;
- (void)setSubscriptionCreatedOverride:(id)arg1;
- (void)submitCloudKitAnalyticWithDictionary:(id)arg1 operationGroupName:(id)arg2 useManatee:(bool)arg3 completion:(id /* block */)arg4;
- (void)submitCloudKitAnalyticWithOperationGroupName:(id)arg1 useManatee:(bool)arg2 analyticDictionary:(id)arg3;
- (void)submitCloudKitMetricWithData:(id)arg1 operationGroupName:(id)arg2 useManatee:(bool)arg3 completion:(id /* block */)arg4;
- (void)submitCloudKitMetricWithOperationGroupName:(id)arg1 useManatee:(bool)arg2;
- (id)subscriptionCreatedOverride;
- (id)syncCompleteRecordID;
- (void)writeExitRecordWithDate:(id)arg1 completion:(id /* block */)arg2;
- (void)writeInitialSyncCompletedRecordIfNeeded;
- (void)writeSyncCompletedRecordWithDate:(id)arg1 useManatee:(bool)arg2 completion:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

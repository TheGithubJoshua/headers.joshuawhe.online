<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ICRadioGetTracksRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iTunesCloud.framework/ICRadioGetTracksRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud (1)
 */

@interface ICRadioGetTracksRequest : NSObject <NSCopying> {
    NSDictionary * _additionalRequestParameters;
    bool  _allowsExplicitContent;
    NSNumber * _delegatedPrivateListeningEnabled;
    ICRadioContentReference * _nowPlayingContentReference;
    NSArray * _playActivityEvents;
    ICRadioPlaybackHistory * _playbackContext;
    bool  _preservingCurrentlyPlayingItem;
    NSNumber * _privateListeningEnabled;
    long long  _reasonType;
    ICStoreRequestContext * _requestContext;
    ICRadioContentReference * _seedContentReference;
    bool  _shouldResponseContainStationMetadata;
    NSString * _stationHash;
    long long  _stationID;
    NSString * _stationStringID;
    NSURL * _stationURL;
}

@property (nonatomic, copy) NSDictionary *additionalRequestParameters;
@property (nonatomic) bool allowsExplicitContent;
@property (getter=isDelegatedPrivateListeningEnabled, nonatomic, copy) NSNumber *delegatedPrivateListeningEnabled;
@property (nonatomic, copy) ICRadioContentReference *nowPlayingContentReference;
@property (nonatomic, copy) NSArray *playActivityEvents;
@property (nonatomic, copy) ICRadioPlaybackHistory *playbackContext;
@property (getter=isPreservingCurrentlyPlayingItem, nonatomic) bool preservingCurrentlyPlayingItem;
@property (getter=isPrivateListeningEnabled, nonatomic, copy) NSNumber *privateListeningEnabled;
@property (nonatomic) long long reasonType;
@property (nonatomic, copy) ICStoreRequestContext *requestContext;
@property (nonatomic, copy) ICRadioContentReference *seedContentReference;
@property (nonatomic) bool shouldResponseContainStationMetadata;
@property (nonatomic, copy) NSString *stationHash;
@property (nonatomic) long long stationID;
@property (nonatomic, copy) NSString *stationStringID;
@property (nonatomic, copy) NSURL *stationURL;

- (void).cxx_destruct;
- (id)additionalRequestParameters;
- (bool)allowsExplicitContent;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)init;
- (id)isDelegatedPrivateListeningEnabled;
- (bool)isPreservingCurrentlyPlayingItem;
- (id)isPrivateListeningEnabled;
- (id)nowPlayingContentReference;
- (void)performWithResponseHandler:(id /* block */)arg1;
- (id)playActivityEvents;
- (id)playbackContext;
- (long long)reasonType;
- (id)requestContext;
- (id)seedContentReference;
- (void)setAdditionalRequestParameters:(id)arg1;
- (void)setAllowsExplicitContent:(bool)arg1;
- (void)setDelegatedPrivateListeningEnabled:(id)arg1;
- (void)setNowPlayingContentReference:(id)arg1;
- (void)setPlayActivityEvents:(id)arg1;
- (void)setPlaybackContext:(id)arg1;
- (void)setPreservingCurrentlyPlayingItem:(bool)arg1;
- (void)setPrivateListeningEnabled:(id)arg1;
- (void)setReasonType:(long long)arg1;
- (void)setRequestContext:(id)arg1;
- (void)setSeedContentReference:(id)arg1;
- (void)setShouldResponseContainStationMetadata:(bool)arg1;
- (void)setStationHash:(id)arg1;
- (void)setStationID:(long long)arg1;
- (void)setStationStringID:(id)arg1;
- (void)setStationURL:(id)arg1;
- (bool)shouldResponseContainStationMetadata;
- (id)stationHash;
- (long long)stationID;
- (id)stationStringID;
- (id)stationURL;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ICEnvironmentMonitor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/iTunesCloud.framework/ICEnvironmentMonitor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud (1)
 */

@interface ICEnvironmentMonitor : NSObject <NWNetworkOfInterestManagerDelegate> {
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSObject<OS_dispatch_queue> * _calloutQueue;
    long long  _cellularLinkQuality;
    bool  _currentNetworkLinkHighQuality;
    bool  _isCharging;
    bool  _isRemoteServerLikelyReachable;
    bool  _isWiFiActive;
    long long  _lastKnownNetworkType;
    NWPathEvaluator * _networkPathEvaluator;
    long long  _networkType;
    NSMutableSet * _networksOfInterest;
    NWNetworkOfInterestManager * _noiManager;
    NSMapTable * _observers;
    unsigned int  _powerNotificationRef;
    void * _symptomPresentationFeedDyLibHandle;
    NSString * _telephonyOperatorName;
    NSString * _telephonyRegistrationStatus;
    struct __CTServerConnection { } * _telephonyServerConnectionRef;
    NSString * _telephonyStatusIndicator;
    bool  _wifiAssociated;
}

@property (getter=isCharging, nonatomic, readonly) bool charging;
@property (getter=isCurrentNetworkLinkHighQuality, nonatomic, readonly) bool currentNetworkLinkHighQuality;
@property (nonatomic, readonly) long long lastKnownNetworkType;
@property (nonatomic, readonly) long long networkType;
@property (getter=isRemoteServerLikelyReachable, nonatomic, readonly) bool remoteServerLikelyReachable;
@property (nonatomic, readonly, copy) NSString *telephonyOperatorName;
@property (nonatomic, readonly, copy) NSString *telephonyRegistrationStatus;
@property (nonatomic, readonly, copy) NSString *telephonyStatusIndicator;
@property (getter=isWiFiActive, nonatomic, readonly) bool wiFiActive;
@property (getter=isWiFiAssociated, nonatomic, readonly) bool wifiAssociated;

+ (id)sharedMonitor;

- (void).cxx_destruct;
- (long long)_currentCellularLinkQuality;
- (long long)_currentNetworkType;
- (void)_handleApplicationDidEnterForegroundNotification:(id)arg1;
- (void)_handleCTServerConnectionNotification:(id)arg1 userInfo:(id)arg2;
- (bool)_isWiFiAssociated;
- (long long)_networkTypeFromTelephonyStatusIndicator:(id)arg1;
- (void)_onQueue_updateNetworkReachabilityAndNotifyObservers:(bool)arg1;
- (void)_onQueue_updateTelephonyStateAndNotifyObservers:(bool)arg1;
- (void)_updatePowerStateWithService:(unsigned int)arg1 shouldNotifyObservers:(bool)arg2;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (void)didStartTrackingNOI:(id)arg1;
- (void)didStopTrackingAllNOIs:(id)arg1;
- (void)didStopTrackingNOI:(id)arg1;
- (id)init;
- (bool)isCharging;
- (bool)isCurrentNetworkLinkHighQuality;
- (bool)isRemoteServerLikelyReachable;
- (bool)isWiFiActive;
- (bool)isWiFiAssociated;
- (long long)lastKnownNetworkType;
- (long long)networkType;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)removeObserver:(id)arg1;
- (id)telephonyOperatorName;
- (id)telephonyRegistrationStatus;
- (id)telephonyStatusIndicator;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

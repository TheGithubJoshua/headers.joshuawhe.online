<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MediaControlsStandaloneEndpointController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MediaControls.framework/MediaControlsStandaloneEndpointController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls (1)
 */

@interface MediaControlsStandaloneEndpointController : MediaControlsEndpointController <MPAVRoutingControllerDelegate, MediaControlsEndpointControllerConnectionDelegate, MediaControlsEndpointObserverDelegate> {
    NSString * _activeEndpointUID;
    MPCFuture * _deferredPlayerPathFuture;
    id  _deferredPlayerPathInvalidationToken;
    MSVPersistentTimer * _deferredPlayerPathTimer;
    MPMRAVEndpointObserverWrapper * _endpointObserver;
    bool  _isDeferred;
    long long  _routeType;
    NSString * _routeUID;
    MPAVRoutingController * _routingController;
}

@property (nonatomic, retain) NSString *activeEndpointUID;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) MPCFuture *deferredPlayerPathFuture;
@property (nonatomic, retain) id deferredPlayerPathInvalidationToken;
@property (nonatomic, retain) MSVPersistentTimer *deferredPlayerPathTimer;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) MPMRAVEndpointObserverWrapper *endpointObserver;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isDeferred;
@property (nonatomic) long long routeType;
@property (nonatomic, retain) NSString *routeUID;
@property (nonatomic, readonly) MPAVRoutingController *routingController;
@property (readonly) Class superclass;

+ (double)mediaRecentlyPlayedTimeout;

- (void).cxx_destruct;
- (void)_activeSystemRouteDidChangeNotification:(id)arg1;
- (void)_activeSystemRouteDidChangeWithChangeType:(long long)arg1;
- (void)_fetchActiveSystemRoute:(id /* block */)arg1;
- (void)_maybeRestoreDeferredPlayerPath;
- (void)_maybeUpdateActiveSystemRoute;
- (void)_resetDeferredPlayerPath;
- (void)_restoreDeferredPlayerPath;
- (void)_updateActiveSystemRoute;
- (id)activeEndpointUID;
- (void)beginObserving;
- (bool)controller:(id)arg1 shouldRetryFailedRequestWithError:(id)arg2;
- (void)dealloc;
- (id)deferredPlayerPathFuture;
- (id)deferredPlayerPathInvalidationToken;
- (id)deferredPlayerPathTimer;
- (void)endObserving;
- (void)endpointController:(id)arg1 willAttemptToConnectToRoute:(id)arg2;
- (id)endpointObserver;
- (id)initWithActiveRouteType:(long long)arg1;
- (id)initWithEndpoint:(id)arg1;
- (id)initWithRouteUID:(id)arg1;
- (bool)isDeferred;
- (id)proxyDelegate;
- (id)routeForEndpoint:(void*)arg1;
- (long long)routeType;
- (id)routeUID;
- (id)routingController;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)setActiveEndpointUID:(id)arg1;
- (void)setDeferredPlayerPathFuture:(id)arg1;
- (void)setDeferredPlayerPathInvalidationToken:(id)arg1;
- (void)setDeferredPlayerPathTimer:(id)arg1;
- (void)setDeviceUnlocked:(bool)arg1;
- (void)setEndpointObserver:(id)arg1;
- (void)setIsDeferred:(bool)arg1;
- (void)setOnScreen:(bool)arg1;
- (void)setRouteType:(long long)arg1;
- (void)setRouteUID:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MediaControlsEndpointsViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MediaControls.framework/MediaControlsEndpointsViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MediaControls.framework/MediaControls (1)
 */

@interface MediaControlsEndpointsViewController : MediaControlsCollectionViewController <CCUIContentModuleContentViewController, MRPlatterViewControllerDelegate, MediaControlsCollectionViewDataSource, MediaControlsCollectionViewDelegate, MediaControlsEndpointsManagerDelegate> {
    MPMediaControlsConfiguration * _configuration;
    bool  _didRetrieveActiveSystemRouteOnce;
    bool  _dismissing;
    MediaControlsEndpointsManager * _endpointsManager;
    AVExternalPlaybackMonitor * _externalPlaybackMonitor;
    id /* block */  _homeGestureDismissalAllowedBlock;
    long long  _lastSelectedModeForActivePlatterViewController;
    bool  _onScreen;
    MPAVOutputDeviceRoutingDataSource * _outputDeviceRoutingDataSource;
    bool  _prewarming;
    NSString * _routingContextUID;
    id /* block */  _routingCornerViewTappedBlock;
    MPAVRoutingViewController * _routingViewController;
    MPAVEndpointRoute * _selectedRoute;
    bool  _shouldPresentUsingViewService;
    bool  _shouldReselectActiveSystemRoute;
    bool  _shouldTransitionToVisibleWhenReady;
}

@property (nonatomic, retain) MPMediaControlsConfiguration *configuration;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDismissing, nonatomic) bool dismissing;
@property (nonatomic, retain) MediaControlsEndpointsManager *endpointsManager;
@property (nonatomic, retain) AVExternalPlaybackMonitor *externalPlaybackMonitor;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id /* block */ homeGestureDismissalAllowedBlock;
@property (getter=isOnScreen, nonatomic) bool onScreen;
@property (nonatomic, readonly) double preferredExpandedContentHeight;
@property (nonatomic, readonly) double preferredExpandedContentWidth;
@property (nonatomic, readonly) bool providesOwnPlatter;
@property (nonatomic, copy) NSString *routingContextUID;
@property (nonatomic, copy) id /* block */ routingCornerViewTappedBlock;
@property (nonatomic, retain) MPAVRoutingViewController *routingViewController;
@property (nonatomic, retain) MPAVEndpointRoute *selectedRoute;
@property (nonatomic) bool shouldPresentUsingViewService;
@property (readonly) Class superclass;

+ (bool)_shouldTransitionEarlyOnSystemRoute;

- (void).cxx_destruct;
- (void)_assignRouteViewControllerToSelectedPanelViewController;
- (bool)_isReadyForAppearanceTransition;
- (bool)_isSelectedRouteInRoutes;
- (void)_routeDidChangeNotification:(id)arg1;
- (void)_selectActiveSystemRouteIfNeeded;
- (void)_setSelectedRoute:(id)arg1 isUserSelected:(bool)arg2;
- (void)_setupEndpointsManager;
- (void)_setupRoutingViewController;
- (void)_supportedModesForSelectedRoute:(unsigned long long*)arg1 selectedMode:(long long*)arg2;
- (void)_transitionToVisible:(bool)arg1;
- (void)_transitionToVisibleIfNeeded;
- (void)_updateDiscoveryMode;
- (void)_updateEndpointRouteForOutputDeviceDataSource:(id)arg1;
- (void)_updateModesForSelectedPlatterViewController;
- (void)_updateSupportedModesForSelectedPlatterViewController;
- (bool)canDismissPresentedContent;
- (id)configuration;
- (void)dealloc;
- (long long)defaultSelectedItemIndexForCollectionViewController:(id)arg1;
- (void)didSelectEndpoint:(id)arg1;
- (void)dismissPlatterViewController:(id)arg1 completion:(id /* block */)arg2;
- (void)dismissPresentedContentAnimated:(bool)arg1 completion:(id /* block */)arg2;
- (id)endpointsManager;
- (void)endpointsManager:(id)arg1 activeSystemRouteDidChange:(id)arg2;
- (void)endpointsManager:(id)arg1 defersRoutesReplacement:(id /* block */)arg2;
- (id)externalPlaybackMonitor;
- (id /* block */)homeGestureDismissalAllowedBlock;
- (void)homeObserverDidUpdateKnownUIDs:(id)arg1;
- (id)init;
- (bool)isDismissing;
- (bool)isOnScreen;
- (bool)mediaControlsCollectionViewController:(id)arg1 canSelectItemAtIndex:(long long)arg2;
- (void)mediaControlsCollectionViewController:(id)arg1 didDisplayViewController:(id)arg2 forItemAtIndex:(long long)arg3;
- (void)mediaControlsCollectionViewController:(id)arg1 didEndDisplayingViewController:(id)arg2 forItemAtIndex:(long long)arg3;
- (void)mediaControlsCollectionViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2 withReason:(long long)arg3;
- (id)mediaControlsCollectionViewController:(id)arg1 viewControllerForItemAtIndex:(long long)arg2;
- (void)mediaControlsCollectionViewController:(id)arg1 willDisplayViewController:(id)arg2 forItemAtIndex:(long long)arg3;
- (void)mediaControlsCollectionViewController:(id)arg1 willSelectItemAtIndex:(long long)arg2 withReason:(long long)arg3;
- (long long)numberOfItemsInCollectionViewController:(id)arg1;
- (void)platterViewController:(id)arg1 didPickRoute:(id)arg2;
- (void)platterViewController:(id)arg1 didToggleRoutingPicker:(bool)arg2;
- (void)platterViewController:(id)arg1 homeGestureDismisalAllowedDidChange:(bool)arg2;
- (id)platterViewController:(id)arg1 presentingViewForPresentedViewController:(id)arg2;
- (void)platterViewController:(id)arg1 willToggleRoutingPicker:(bool)arg2;
- (double)preferredExpandedContentHeight;
- (double)preferredExpandedContentWidth;
- (double)preferredItemHeight;
- (double)preferredItemHeightGivenWidth:(double)arg1;
- (bool)providesOwnPlatter;
- (void)reloadData;
- (id)routingContextUID;
- (id /* block */)routingCornerViewTappedBlock;
- (id)routingViewController;
- (id)selectedRoute;
- (void)setConfiguration:(id)arg1;
- (void)setDismissing:(bool)arg1;
- (void)setDisplayMode:(long long)arg1;
- (void)setEndpointsManager:(id)arg1;
- (void)setExternalPlaybackMonitor:(id)arg1;
- (void)setHomeGestureDismissalAllowedBlock:(id /* block */)arg1;
- (void)setOnScreen:(bool)arg1;
- (void)setRoutingContextUID:(id)arg1;
- (void)setRoutingCornerViewTappedBlock:(id /* block */)arg1;
- (void)setRoutingViewController:(id)arg1;
- (void)setSelectedRoute:(id)arg1;
- (void)setShouldPresentUsingViewService:(bool)arg1;
- (bool)shouldPresentUsingViewService;
- (bool)shouldPresentUsingViewServicePlatterViewController:(id)arg1;
- (void)startPrewarming;
- (void)stopPrewarming;
- (void)updateContentInsets;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

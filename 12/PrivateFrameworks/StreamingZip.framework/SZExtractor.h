<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SZExtractor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StreamingZip.framework/SZExtractor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip (1)
 */

@interface SZExtractor : NSObject <NSCopying, SZExtractor> {
    NSError * _error;
    NSString * _extractionPath;
    bool  _hasHadPostSetupMethodsCalled;
    StreamingUnzipper * _inProcessUnzipper;
    SZExtractorInternalDelegate * _internalExtractorDelegate;
    bool  _isLocalExtractor;
    unsigned long long  _lastResumptionOffset;
    bool  _needsPreparation;
    NSDictionary * _options;
    NSObject<OS_dispatch_queue> * _serialQueue;
    NSXPCConnection * _unzipServiceConnection;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SZExtractorDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool doesConsumeExtractedData;
@property (nonatomic, retain) NSError *error;
@property (nonatomic, copy) NSString *extractionPath;
@property (nonatomic) <SZExtractorDelegate> *extractorDelegate;
@property (nonatomic) bool hasHadPostSetupMethodsCalled;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) StreamingUnzipper *inProcessUnzipper;
@property (nonatomic, readonly) SZExtractorInternalDelegate *internalExtractorDelegate;
@property (nonatomic, readonly) bool isLocalExtractor;
@property (nonatomic) unsigned long long lastResumptionOffset;
@property (nonatomic) bool needsPreparation;
@property (nonatomic, readonly, copy) NSDictionary *options;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *serialQueue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSXPCConnection *unzipServiceConnection;

// Image: /System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip

+ (void)enableDebugLogging;
+ (id)knownSZExtractorImplementations;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_invalidateObject;
- (bool)_isValidObject;
- (void)_prepareForLocalExtraction:(id /* block */)arg1;
- (void)_prepareForRemoteExtraction:(id /* block */)arg1;
- (void)_setUpWithPath:(id)arg1 options:(id)arg2;
- (bool)_synchronouslyPrepareForExtractionAtOffset:(unsigned long long*)arg1;
- (bool)consumeExtractedDataIfNeeded;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)delegate;
- (id)description;
- (bool)doesConsumeExtractedData;
- (void)encodeWithCoder:(id)arg1;
- (id)error;
- (id)extractionPath;
- (id)extractorDelegate;
- (void)finishStreamWithCompletionBlock:(id /* block */)arg1;
- (bool)hasHadPostSetupMethodsCalled;
- (unsigned long long)hash;
- (id)inProcessUnzipper;
- (id)initForLocalExtractionWithPath:(id)arg1 options:(id)arg2 resumptionOffset:(unsigned long long*)arg3;
- (id)initForRemoteExtractionWithPath:(id)arg1 options:(id)arg2 resumptionOffset:(unsigned long long*)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithOptions:(id)arg1;
- (id)initWithPath:(id)arg1 md5Hashes:(id)arg2 hashedChunkSize:(unsigned long long)arg3 resumptionOffset:(unsigned long long*)arg4;
- (id)initWithPath:(id)arg1 options:(id)arg2;
- (id)initWithPath:(id)arg1 options:(id)arg2 resumptionOffset:(unsigned long long*)arg3;
- (id)initWithPath:(id)arg1 resumptionOffset:(unsigned long long*)arg2;
- (id)internalExtractorDelegate;
- (bool)isEqual:(id)arg1;
- (bool)isLocalExtractor;
- (unsigned long long)lastResumptionOffset;
- (bool)needsPreparation;
- (id)options;
- (void)prepareForExtraction:(id /* block */)arg1;
- (void)prepareForExtractionToPath:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)serialQueue;
- (void)setActiveExtractorDelegateMethods:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setError:(id)arg1;
- (void)setExtractionPath:(id)arg1;
- (void)setExtractorDelegate:(id)arg1;
- (void)setHasHadPostSetupMethodsCalled:(bool)arg1;
- (void)setLastResumptionOffset:(unsigned long long)arg1;
- (void)setNeedsPreparation:(bool)arg1;
- (void)supplyBytes:(id)arg1 withCompletionBlock:(id /* block */)arg2;
- (void)suspendStreamWithCompletionBlock:(id /* block */)arg1;
- (void)terminateStreamWithError:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)unzipServiceConnection;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon

+ (id)optionsForArchiveURL:(id)arg1 digest:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

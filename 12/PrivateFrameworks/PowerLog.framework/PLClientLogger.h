<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PLClientLogger.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PowerLog.framework/PLClientLogger.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PowerLog.framework/PowerLog (1)
 */

@interface PLClientLogger : NSObject {
    NSObject<OS_dispatch_queue> * _adaptivePermissionWorkQueue;
    bool  _batchDropMessages;
    NSObject<OS_dispatch_queue> * _batchFlushQueue;
    int  _batchedDropMessageCount;
    NSMutableArray * _batchedTaskCache;
    bool  _batchedTimerInFlight;
    NSSet * _batchingClientWhitelist;
    bool  _clientDebug;
    bool  _forceBatching;
    NSMutableDictionary * _pendingTaskCache;
    NSMutableDictionary * _permissionCache;
    NSString * _processName;
    bool  _talkToPowerlogHelper;
    NSObject<OS_dispatch_queue> * _workQueue;
    NSObject<OS_xpc_object> * _xpcConnection;
    NSObject<OS_xpc_object> * _xpcConnectionHelper;
    NSObject<OS_dispatch_queue> * _xpcConnectionHelperQueue;
    NSObject<OS_dispatch_queue> * _xpcConnectionQueue;
}

@property (retain) NSObject<OS_dispatch_queue> *adaptivePermissionWorkQueue;
@property bool batchDropMessages;
@property (retain) NSObject<OS_dispatch_queue> *batchFlushQueue;
@property int batchedDropMessageCount;
@property (retain) NSMutableArray *batchedTaskCache;
@property bool batchedTimerInFlight;
@property (readonly) NSSet *batchingClientWhitelist;
@property bool clientDebug;
@property bool forceBatching;
@property (retain) NSMutableDictionary *pendingTaskCache;
@property (retain) NSMutableDictionary *permissionCache;
@property (retain) NSString *processName;
@property bool talkToPowerlogHelper;
@property (retain) NSObject<OS_dispatch_queue> *workQueue;
@property (nonatomic, retain) NSObject<OS_xpc_object> *xpcConnection;
@property (nonatomic, retain) NSObject<OS_xpc_object> *xpcConnectionHelper;
@property (retain) NSObject<OS_dispatch_queue> *xpcConnectionHelperQueue;
@property (retain) NSObject<OS_dispatch_queue> *xpcConnectionQueue;

+ (bool)allowMessageOnDevice;
+ (id)sharedInstance;

- (void).cxx_destruct;
- (id)adaptivePermissionWorkQueue;
- (void)addToBatchedTaskCacheForType:(id)arg1 forClientID:(short)arg2 forKey:(id)arg3 withPayload:(id)arg4;
- (void)addToPendingTaskCacheForType:(id)arg1 forClientID:(short)arg2 forKey:(id)arg3 withPayload:(id)arg4;
- (bool)batchDropMessages;
- (id)batchFlushQueue;
- (int)batchSizeForClientID:(short)arg1;
- (void)batchTasksCacheFlush;
- (int)batchedDropMessageCount;
- (id)batchedTaskCache;
- (bool)batchedTimerInFlight;
- (id)batchingClientWhitelist;
- (short)blockedPermissionForClientID:(short)arg1 withKey:(id)arg2 withType:(id)arg3 withTimeout:(unsigned long long)arg4;
- (id)buildMessageForClientID:(short)arg1 withKey:(id)arg2 withPayload:(id)arg3;
- (short)cachedPermissionForClientID:(short)arg1 withKey:(id)arg2 withType:(id)arg3;
- (bool)clientDebug;
- (bool)forceBatching;
- (id)getWorkQueueForClientID:(short)arg1;
- (id)init;
- (void)logForClientID:(short)arg1 withKey:(id)arg2 withPayload:(id)arg3;
- (void)logStateCaches;
- (id)pendingTaskCache;
- (id)pendingTasksForType:(id)arg1 forClientID:(short)arg2 forKey:(id)arg3;
- (id)permissionCache;
- (void)permissionForClientID:(short)arg1 withKey:(id)arg2 withType:(id)arg3 completion:(id /* block */)arg4;
- (void)powerlogStateChanged;
- (id)processName;
- (id)queryForClientID:(short)arg1 withKey:(id)arg2 withPayload:(id)arg3;
- (void)setAdaptivePermissionWorkQueue:(id)arg1;
- (void)setBatchDropMessages:(bool)arg1;
- (void)setBatchFlushQueue:(id)arg1;
- (void)setBatchedDropMessageCount:(int)arg1;
- (void)setBatchedTaskCache:(id)arg1;
- (void)setBatchedTimerInFlight:(bool)arg1;
- (void)setCachePermission:(short)arg1 ForClientID:(short)arg2 withKey:(id)arg3 withType:(id)arg4;
- (void)setClientDebug:(bool)arg1;
- (void)setForceBatching:(bool)arg1;
- (void)setPendingTaskCache:(id)arg1;
- (void)setPermissionCache:(id)arg1;
- (void)setProcessName:(id)arg1;
- (void)setTalkToPowerlogHelper:(bool)arg1;
- (void)setWorkQueue:(id)arg1;
- (void)setXpcConnection:(id)arg1;
- (void)setXpcConnectionHelper:(id)arg1;
- (void)setXpcConnectionHelperQueue:(id)arg1;
- (void)setXpcConnectionQueue:(id)arg1;
- (bool)talkToPowerlogHelper;
- (id)workQueue;
- (id)xpcConnection;
- (id)xpcConnectionHelper;
- (id)xpcConnectionHelperQueue;
- (id)xpcConnectionQueue;
- (id)xpcConnectionWithClientID:(short)arg1 withKey:(id)arg2 withPayload:(id)arg3;
- (void)xpcSendMessage:(id)arg1 withClientID:(short)arg2 withKey:(id)arg3 withPayload:(id)arg4;
- (void)xpcSendMessageWithRateLimitingforClient:(short)arg1 withKey:(id)arg2 withPayload:(id)arg3;
- (id)xpcSendMessageWithReply:(id)arg1 withClientID:(short)arg2 withKey:(id)arg3 withPayload:(id)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

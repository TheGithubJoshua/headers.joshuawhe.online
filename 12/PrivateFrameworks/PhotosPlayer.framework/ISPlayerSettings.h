<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ISPlayerSettings.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/PhotosPlayer.framework/ISPlayerSettings.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/PhotosPlayer.framework/PhotosPlayer (3462.8.190)
 */

@interface ISPlayerSettings : ISSettings {
    bool  _allowFrameBlending;
    bool  _allowPlayerReuse;
    bool  _allowVideoPreRoll;
    bool  _audioEnabled;
    double  _audioRampDuration;
    bool  _crossfadeEnabled;
    bool  _easingEnabled;
    double  _forceScrubMaximumInteractiveRate;
    double  _forceScrubMaximumPressure;
    double  _forceScrubMinRateChange;
    double  _forceScrubMinimumPressure;
    double  _forceScrubMinimumRate;
    double  _forceScrubRewindFactor;
    double  _forceTouchTimeoutInterval;
    double  _forceTouchTimeoutMinimumProgress;
    bool  _longExposureVitality;
    bool  _loopingEnabled;
    double  _minimumColorAdjustedPhotoTransitionDuration;
    double  _minimumPhotoTransitionDuration;
    double  _photoTransitionAdjustment;
    bool  _playDuringHint;
    bool  _playIsSticky;
    bool  _prerollBeforePlaying;
    bool  _scaleDuringPlayback;
    bool  _showStateOverlay;
    long long  _startBehavior;
    bool  _useDedicatedQueues;
    double  _vitalityEaseDuration;
    float  _vitalityEaseMinRate;
}

@property (nonatomic) bool allowFrameBlending;
@property (nonatomic) bool allowPlayerReuse;
@property (nonatomic) bool allowVideoPreRoll;
@property (nonatomic) bool audioEnabled;
@property (nonatomic) double audioRampDuration;
@property (nonatomic) bool crossfadeEnabled;
@property (nonatomic) bool easingEnabled;
@property (nonatomic) double forceScrubMaximumInteractiveRate;
@property (nonatomic) double forceScrubMaximumPressure;
@property (nonatomic) double forceScrubMinRateChange;
@property (nonatomic) double forceScrubMinimumPressure;
@property (nonatomic) double forceScrubMinimumRate;
@property (nonatomic) double forceScrubRewindFactor;
@property (nonatomic) double forceTouchTimeoutInterval;
@property (nonatomic) double forceTouchTimeoutMinimumProgress;
@property (nonatomic) bool longExposureVitality;
@property (nonatomic) bool loopingEnabled;
@property (nonatomic) double minimumColorAdjustedPhotoTransitionDuration;
@property (nonatomic) double minimumPhotoTransitionDuration;
@property (nonatomic) double photoTransitionAdjustment;
@property (nonatomic) bool playDuringHint;
@property (nonatomic) bool playIsSticky;
@property (nonatomic) bool prerollBeforePlaying;
@property (nonatomic) bool scaleDuringPlayback;
@property (nonatomic) bool showStateOverlay;
@property (nonatomic) long long startBehavior;
@property (nonatomic) bool useDedicatedQueues;
@property (nonatomic) double vitalityEaseDuration;
@property (nonatomic) float vitalityEaseMinRate;

+ (id)settingsControllerModule;
+ (id)sharedInstance;

- (bool)allowFrameBlending;
- (bool)allowPlayerReuse;
- (bool)allowVideoPreRoll;
- (bool)audioEnabled;
- (double)audioRampDuration;
- (bool)crossfadeEnabled;
- (bool)easingEnabled;
- (double)forceScrubMaximumInteractiveRate;
- (double)forceScrubMaximumPressure;
- (double)forceScrubMinRateChange;
- (double)forceScrubMinimumPressure;
- (double)forceScrubMinimumRate;
- (double)forceScrubRewindFactor;
- (double)forceTouchTimeoutInterval;
- (double)forceTouchTimeoutMinimumProgress;
- (bool)longExposureVitality;
- (bool)loopingEnabled;
- (double)minimumColorAdjustedPhotoTransitionDuration;
- (double)minimumPhotoTransitionDuration;
- (double)photoTransitionAdjustment;
- (bool)playDuringHint;
- (bool)playIsSticky;
- (bool)prerollBeforePlaying;
- (bool)scaleDuringPlayback;
- (void)setAllowFrameBlending:(bool)arg1;
- (void)setAllowPlayerReuse:(bool)arg1;
- (void)setAllowVideoPreRoll:(bool)arg1;
- (void)setAudioEnabled:(bool)arg1;
- (void)setAudioRampDuration:(double)arg1;
- (void)setCrossfadeEnabled:(bool)arg1;
- (void)setDefaultValues;
- (void)setEasingEnabled:(bool)arg1;
- (void)setForceScrubMaximumInteractiveRate:(double)arg1;
- (void)setForceScrubMaximumPressure:(double)arg1;
- (void)setForceScrubMinRateChange:(double)arg1;
- (void)setForceScrubMinimumPressure:(double)arg1;
- (void)setForceScrubMinimumRate:(double)arg1;
- (void)setForceScrubRewindFactor:(double)arg1;
- (void)setForceTouchTimeoutInterval:(double)arg1;
- (void)setForceTouchTimeoutMinimumProgress:(double)arg1;
- (void)setLongExposureVitality:(bool)arg1;
- (void)setLoopingEnabled:(bool)arg1;
- (void)setMinimumColorAdjustedPhotoTransitionDuration:(double)arg1;
- (void)setMinimumPhotoTransitionDuration:(double)arg1;
- (void)setPhotoTransitionAdjustment:(double)arg1;
- (void)setPlayDuringHint:(bool)arg1;
- (void)setPlayIsSticky:(bool)arg1;
- (void)setPrerollBeforePlaying:(bool)arg1;
- (void)setScaleDuringPlayback:(bool)arg1;
- (void)setShowStateOverlay:(bool)arg1;
- (void)setStartBehavior:(long long)arg1;
- (void)setUseDedicatedQueues:(bool)arg1;
- (void)setVitalityEaseDuration:(double)arg1;
- (void)setVitalityEaseMinRate:(float)arg1;
- (bool)showStateOverlay;
- (long long)startBehavior;
- (bool)useDedicatedQueues;
- (double)vitalityEaseDuration;
- (float)vitalityEaseMinRate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

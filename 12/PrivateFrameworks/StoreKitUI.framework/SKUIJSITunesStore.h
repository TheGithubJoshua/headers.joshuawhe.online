<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SKUIJSITunesStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreKitUI.framework/SKUIJSITunesStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI (1)
 */

@interface SKUIJSITunesStore : IKJSITunesStore <SKUIItemStateCenterObserver, SKUIJSITunesStore> {
    SKUIClientContext * _clientContext;
    bool  _isAppPreview;
}

@property (nonatomic) long long applicationIconBadgeNumber;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSString *hostApp;
@property (nonatomic, readonly) bool isAppPreview;
@property (nonatomic, readonly) SKUIJSAppleAccount *primaryAppleAccount;
@property (nonatomic, readonly) SKUIJSRestrictions *restrictions;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_displayWifiConnectionRequiredAlert;
- (void)_finishPurchaseForOptions:(id)arg1 purchaseResponse:(id)arg2;
- (void)_finishSoftwarePurchaseForOptions:(id)arg1 purchaseResponse:(id)arg2;
- (id)_millisecondsFromTimeInterval:(double)arg1;
- (void)_purchaseRequestDidSucceedNotification:(id)arg1;
- (id)_rentalInfoFromMediaItems:(id)arg1;
- (long long)applicationIconBadgeNumber;
- (void)approveInPerson:(id)arg1 :(id)arg2;
- (bool)areVideosCloudPurchasesEnabled;
- (void)attemptLocalAskToBuyApproval:(id)arg1;
- (void)buy:(id)arg1;
- (void)clearToggleStateItems;
- (void)dealloc;
- (id)documentSizeForNavigationDocument:(id)arg1;
- (void)download:(id)arg1;
- (void)downloadExistsFor:(id)arg1 :(id)arg2;
- (void)exit:(id)arg1;
- (void)fetchMSOProviderStatus:(id)arg1;
- (void)fetchTemplates:(id)arg1 :(id)arg2;
- (void)findApps:(id)arg1 :(id)arg2 :(id)arg3;
- (void)findLibraryItems:(id)arg1 :(id)arg2 :(id)arg3;
- (void)findOwnedItems:(id)arg1 :(id)arg2;
- (void)findToggleStateForItem:(id)arg1 :(id)arg2;
- (void)getAdminStatus:(id)arg1 :(id)arg2;
- (void)getBookSample:(id)arg1;
- (void)getProfilePermissions:(id)arg1 :(id)arg2;
- (void)headsUp:(id)arg1 :(id)arg2;
- (id)hostApp;
- (id)initWithAppContext:(id)arg1 clientContext:(id)arg2;
- (bool)isAppPreview;
- (void)isInstalledApp:(id)arg1 :(id)arg2;
- (void)isRemovedSystemApp:(id)arg1 :(id)arg2;
- (void)itemStateCenterMediaLibrariesDidChange:(id)arg1;
- (void)launchICloudFamilySettings;
- (void)loadGratisContent:(id)arg1;
- (void)loadRental:(id)arg1 :(id)arg2;
- (void)loadRentals:(id)arg1;
- (void)log:(id)arg1;
- (id)primaryAppleAccount;
- (void)resetStateForActiveDocument;
- (bool)resourceExists:(id)arg1;
- (void)restoreRemovedSystemApp:(id)arg1 :(id)arg2;
- (id)restrictions;
- (bool)sendAppPreviewStateChanged:(bool)arg1;
- (void)sendApplicationDidEnterBackground;
- (void)sendApplicationWillEnterForeground;
- (void)sendApplicationWindowSizeDidUpdate:(struct CGSize { double x1; double x2; })arg1;
- (void)sendOnNavigationStackWillPop:(bool)arg1;
- (void)sendOnPageResponseWithDocument:(id)arg1 data:(id)arg2 URLResponse:(id)arg3 performanceMetrics:(id)arg4;
- (bool)sendOnShowPageEventType:(id)arg1 data:(id)arg2;
- (bool)sendOnXEventWithDictionary:(id)arg1;
- (void)setApplicationIconBadgeNumber:(long long)arg1;
- (void)setPreviewOverlay:(id)arg1 :(id)arg2;
- (void)updateToggleStateForItem:(id)arg1 toggled:(bool)arg2 :(id)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

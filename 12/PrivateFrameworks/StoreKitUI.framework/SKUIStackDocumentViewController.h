<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SKUIStackDocumentViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreKitUI.framework/SKUIStackDocumentViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI (1)
 */

@interface SKUIStackDocumentViewController : SKUIViewController <SKUICollectionViewPullToRefreshDelegate, SKUIDocumentViewController, SKUIIndexBarControlControllerDataSource, SKUIIndexBarControlControllerDelegate, SKUIIndexBarEntryListControllerDelegate, SKUIModalSourceViewProvider, SKUIResourceLoaderDelegate, SKUIStorePageSectionsDelegate, SKUIViewControllerTesting> {
    IKAppDocument * _document;
    NSArray * _entryListControllers;
    bool  _hasResetState;
    SKUIIndexBarControlController * _indexBarControlController;
    long long  _lastNeedsMoreCount;
    long long  _layoutStyle;
    SKUIResourceLoader * _resourceLoader;
    SKUIStorePageSectionsViewController * _sectionsViewController;
    SKUIStackTemplateElement * _templateElement;
    NSMapTable * _viewElementToEntryListController;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SKUIStorePageSectionsViewController *sectionsViewController;
@property (readonly) Class superclass;

+ (bool)_shouldForwardViewWillTransitionToSize;

- (void).cxx_destruct;
- (id)_colorScheme;
- (void)_configureIndexBarControl:(id)arg1;
- (long long)_globalIndexFromIndexPath:(id)arg1;
- (id)_indexBarControlController;
- (id)_indexBarViewElement;
- (id)_indexPathFromGlobalIndex:(long long)arg1;
- (long long)_maxGlobalIndex;
- (id)_pageComponentsWithViewElements:(id)arg1;
- (id)_pageSplitsDescription;
- (long long)_pinningTransitionStyle;
- (id)_pullToRefreshElement;
- (void)_resetState;
- (void)_resetStateForDocumentNotification:(id)arg1;
- (id)_resourceLoader;
- (bool)_shouldShowIndexBar;
- (bool)_tryToScrollToSectionAtIndexPath:(id)arg1;
- (void)_updateEntryListControllersWithReload:(bool)arg1;
- (void)_updateIndexBarVisibility;
- (void)dealloc;
- (void)documentDidUpdate:(id)arg1;
- (void)documentDidUpdate:(id)arg1 withTemplate:(id)arg2;
- (void)documentMediaQueriesDidUpdate:(id)arg1;
- (void)getModalSourceViewForElementIdentifier:(id)arg1 completionBlock:(id /* block */)arg2;
- (id)impressionableViewElements;
- (void)indexBarControlController:(id)arg1 didSelectEntryDescriptorAtIndexPath:(id)arg2;
- (id)indexBarControlController:(id)arg1 entryDescriptorAtIndexPath:(id)arg2;
- (long long)indexBarControlController:(id)arg1 numberOfEntryDescriptorsInSection:(long long)arg2;
- (void)indexBarControlControllerDidSelectBeyondBottom:(id)arg1;
- (void)indexBarControlControllerDidSelectBeyondTop:(id)arg1;
- (void)indexBarEntryListControllerDidInvalidate:(id)arg1;
- (id)initWithTemplateElement:(id)arg1 layoutStyle:(long long)arg2;
- (void)loadView;
- (long long)numberOfSectionsInIndexBarControlController:(id)arg1;
- (bool)performTestWithName:(id)arg1 options:(id)arg2;
- (void)refresh:(id)arg1 refreshControl:(id)arg2;
- (void)resourceLoader:(id)arg1 didLoadAllForReason:(long long)arg2;
- (void)resourceLoaderDidBeginLoading:(id)arg1;
- (id)sectionsViewController;
- (void)sectionsViewController:(id)arg1 willScrollToOffset:(struct CGPoint { double x1; double x2; })arg2 visibleRange:(struct SKUIIndexPathRange { long long x1; long long x2; long long x3; long long x4; })arg3;
- (void)setPreferredContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)skui_viewWillAppear:(bool)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

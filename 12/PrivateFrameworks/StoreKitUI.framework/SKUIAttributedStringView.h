<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SKUIAttributedStringView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreKitUI.framework/SKUIAttributedStringView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI (1)
 */

@interface SKUIAttributedStringView : UIView <SKUIReusableView> {
    long long  _badgePlacement;
    double  _calculatedTopInset;
    bool  _containsLinks;
    long long  _firstLineTopInset;
    SKUIAttributedStringLayout * _layout;
    NSLayoutManager * _layoutManager;
    <SKUILinkHandler> * _linkDelegate;
    NSArray * _requiredBadges;
    long long  _stringTreatment;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _textBounds;
    UIColor * _textColor;
    bool  _textColorFollowsTintColor;
    NSTextContainer * _textContainer;
    NSTextStorage * _textStorage;
    bool  _touchInside;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _trackingRange;
    bool  _trackingTouch;
    UIColor * _treatmentColor;
}

@property (nonatomic) long long badgePlacement;
@property (nonatomic, readonly) double baselineOffset;
@property (nonatomic) bool containsLinks;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double firstBaselineOffset;
@property (nonatomic) long long firstLineTopInset;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) SKUIAttributedStringLayout *layout;
@property (nonatomic) <SKUILinkHandler> *linkDelegate;
@property (nonatomic, copy) NSArray *requiredBadges;
@property (nonatomic) long long stringTreatment;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic) bool textColorFollowsTintColor;
@property (nonatomic, retain) UIColor *treatmentColor;
@property (nonatomic, readonly) bool usesTallCharacterSet;

+ (struct CGSize { double x1; double x2; })sizeWithLayout:(id)arg1 treatment:(long long)arg2;

- (void).cxx_destruct;
- (void)_reloadTopInset;
- (void)_setTouchInside:(bool)arg1;
- (void)_setTrackingTouch:(bool)arg1;
- (void)_setupTapLocatorContainer;
- (bool)_touchInsideLinkText:(struct CGPoint { double x1; double x2; })arg1 linkTextRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (long long)badgePlacement;
- (double)baselineOffset;
- (bool)containsLinks;
- (id)description;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)firstBaselineOffset;
- (long long)firstLineTopInset;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)layout;
- (id)linkDelegate;
- (id)requiredBadges;
- (void)setBadgePlacement:(long long)arg1;
- (void)setContainsLinks:(bool)arg1;
- (void)setFirstLineTopInset:(long long)arg1;
- (void)setLayout:(id)arg1;
- (void)setLinkDelegate:(id)arg1;
- (void)setRequiredBadges:(id)arg1;
- (void)setStringTreatment:(long long)arg1;
- (void)setTextColor:(id)arg1;
- (void)setTextColorFollowsTintColor:(bool)arg1;
- (void)setTreatmentColor:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (long long)stringTreatment;
- (id)textColor;
- (bool)textColorFollowsTintColor;
- (void)tintColorDidChange;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (id)treatmentColor;
- (bool)usesTallCharacterSet;
- (void)viewWasRecycled;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

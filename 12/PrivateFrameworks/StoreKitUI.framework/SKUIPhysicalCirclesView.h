<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SKUIPhysicalCirclesView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/StoreKitUI.framework/SKUIPhysicalCirclesView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI (1)
 */

@interface SKUIPhysicalCirclesView : UIView <PKPhysicsContactDelegate> {
    NSMutableArray * _circleBodies;
    NSObject<OS_dispatch_source> * _circleLoadStepTimer;
    struct SKUIPhysicalCircleConstants { 
        double circleDensity; 
        double circleLinearDamping; 
        double circleMaximumDiameter; 
        double circleMinimumDiameter; 
        double springMaximumFrequency; 
        double springMinimumFrequency; 
        double springDamping; 
        double translationForceMultiplier; 
    }  _constants;
    <SKUIPhysicalCirclesDataSource> * _dataSource;
    <SKUIPhysicalCirclesDelegate> * _delegate;
    CADisplayLink * _displayLink;
    PKPhysicsBody * _groundBody;
    long long  _longPressCircleIndex;
    UILongPressGestureRecognizer * _longPressRecognizer;
    double  _maximumFrequencyDistance;
    double  _minimumFrequencyDistance;
    UIPanGestureRecognizer * _panRecognizer;
    void * _physicsKitFramework;
    PKPhysicsWorld * _physicsWorld;
    NSMutableArray * _repellors;
    UITapGestureRecognizer * _tapRecognizer;
}

@property (nonatomic) struct SKUIPhysicalCircleConstants { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; } constants;
@property (nonatomic) <SKUIPhysicalCirclesDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SKUIPhysicalCirclesDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_addNextMissingSpringJoint;
- (void)_addSpringForCircleBody:(id)arg1;
- (void)_calculateFrequencyScaling;
- (void)_cancelStepTimers;
- (id)_circleBodyWithView:(id)arg1;
- (long long)_circleIndexForPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_displayLinkTick:(id)arg1;
- (struct CGPoint { double x1; double x2; })_initialPositionForCircleIndex:(long long)arg1 view:(id)arg2;
- (void)_loadCirclesWithStartIndex:(long long)arg1 totalCount:(long long)arg2;
- (void)_longPressAction:(id)arg1;
- (void)_panGestureAction:(id)arg1;
- (void)_reloadDidFinish;
- (void)_removeCircleBodies:(id)arg1;
- (void)_startFluctuationForCircleView:(id)arg1;
- (void)_stopFluctuationForCircleView:(id)arg1;
- (void)_tapGestureAction:(id)arg1;
- (void)addCirclesWithCount:(long long)arg1;
- (id)addRepellorWithCenter:(struct CGPoint { double x1; double x2; })arg1 radius:(double)arg2 bufferSize:(double)arg3;
- (id)circleViewAtIndex:(long long)arg1;
- (struct SKUIPhysicalCircleConstants { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; })constants;
- (id)dataSource;
- (void)dealloc;
- (id)delegate;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)reloadData;
- (void)removeAllCirclesAnimated:(bool)arg1 completionBlock:(id /* block */)arg2;
- (void)removeAllRepellors;
- (void)removeCircleAtIndex:(long long)arg1 animated:(bool)arg2 completionBlock:(id /* block */)arg3;
- (void)removeCirclesInIndexSet:(id)arg1 animated:(bool)arg2 completionBlock:(id /* block */)arg3;
- (void)removeCirclesInIndexSet:(id)arg1 byAnimatingToPoint:(struct CGPoint { double x1; double x2; })arg2 delay:(double)arg3 completionBlock:(id /* block */)arg4;
- (void)removeRepellor:(id)arg1;
- (void)setConstants:(struct SKUIPhysicalCircleConstants { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; })arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setSize:(struct CGSize { double x1; double x2; })arg1 forCircleAtIndex:(long long)arg2;
- (void)startPhysics;
- (void)stopPhysics;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

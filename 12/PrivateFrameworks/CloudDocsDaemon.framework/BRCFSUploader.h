<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BRCFSUploader.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudDocsDaemon.framework/BRCFSUploader.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon (575.504)
 */

@interface BRCFSUploader : BRCFSTransferScheduler <BRCModule> {
    NSMutableSet * _boostedDocIDs;
    BRCFairScheduler * _fairScheduler;
    br_pacer * _globalQuotaStateUpdatePacer;
    bool  _isDefaultOwnerOutOfQuota;
    bool  _prepareReachedMax;
    br_pacer * _quotaPacer;
    BRCDeadlineSource * _retryQueueSource;
    NSMutableDictionary * _stampForDocID;
    NSObject<OS_dispatch_queue> * _thumbnailQueue;
    NSMutableDictionary * _thumbnailsOperations;
    BRCDeadlineScheduler * _uploadsDeadlineScheduler;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isCancelled;
@property (nonatomic) bool isDefaultOwnerOutOfQuota;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSDictionary *thumbnailsOperationsByID;
@property (nonatomic, readonly) BRCDeadlineScheduler *uploadsDeadlineScheduler;

- (void).cxx_destruct;
- (id)_buildItemTooLargeErrorIfNeeded:(id)arg1 syncContext:(id)arg2;
- (void)_cancelJobs:(id)arg1 state:(int)arg2;
- (void)_cancelJobsMatching:(id)arg1;
- (void)_computeRecordForJobID:(id)arg1 item:(id)arg2 syncContext:(id)arg3;
- (id)_documentItemForJobID:(id)arg1 operationID:(id)arg2;
- (id)_documentItemForJobID:(id)arg1 stageID:(id)arg2;
- (void)_doneFetchingThumbnailForJobID:(id)arg1;
- (id)_duplicatePackage:(id)arg1 stageID:(id)arg2 stageName:(id)arg3 error:(id*)arg4;
- (bool)_finishPackageUploadWithRecord:(id)arg1 item:(id)arg2 stageID:(id)arg3 error:(id*)arg4;
- (void)_finishedUploadingItem:(id)arg1 record:(id)arg2 jobID:(id)arg3 stageID:(id)arg4 syncContext:(id)arg5 error:(id)arg6;
- (void)_globalQuotaStateUpdateForDefaultOwner;
- (void)_handleFileModifiedError:(id)arg1 forItem:(id)arg2;
- (unsigned long long)_minBatchSize;
- (void)_rescheduleJobsOutOfQuotaForDefaultOwnerWithAvailableSize:(long long)arg1;
- (void)_scheduleQuotaFetchForDefaultOwner;
- (void)_scheduleRetries;
- (void)_setQuotaAvailableForDefaultOwner:(unsigned long long)arg1;
- (void)_startFetchThumbnail:(id)arg1 jobID:(id)arg2;
- (id)_thumbnailOperationForItemRowID:(id)arg1;
- (unsigned long long)_thumbnailOperationsMax;
- (void)_transferStreamOfSyncContext:(id)arg1 didBecomeReadyWithMaxRecordsCount:(unsigned long long)arg2 sizeHint:(unsigned long long)arg3 priority:(long long)arg4;
- (void)_updateJobID:(id)arg1 setStageID:(id)arg2 operationID:(id)arg3;
- (bool)_updatePackageRecord:(id)arg1 item:(id)arg2 stageID:(id)arg3 error:(id*)arg4;
- (void)_updateRecord:(id)arg1 item:(id)arg2 syncContext:(id)arg3 thumbnailOperation:(id)arg4 stageID:(id)arg5;
- (void)_updateRecord:(id)arg1 jobID:(id)arg2 syncContext:(id)arg3 thumbnailOperation:(id)arg4 stageID:(id)arg5;
- (void)_willAttemptJobID:(id)arg1 throttle:(id)arg2 operationID:(id)arg3;
- (void)addAliasItem:(id)arg1 toUploadingItem:(id)arg2;
- (void)boostDocID:(id)arg1 item:(id)arg2;
- (bool)canScheduleMoreJobs;
- (void)cancel;
- (void)cancelAndCleanupItemUpload:(id)arg1;
- (void)close;
- (void)deleteJobsForZone:(id)arg1;
- (void)deleteJobsMatching:(id)arg1;
- (void)deleteUploadingJobForItem:(id)arg1;
- (id)descriptionForItem:(id)arg1 context:(id)arg2;
- (id)descriptionForJobID:(id)arg1 context:(id)arg2;
- (void)finishedSyncingUpItem:(id)arg1 withOutOfQuotaError:(id)arg2;
- (bool)hasItemsOverQuotaForOwner:(id)arg1;
- (bool)hasItemsOverQuotaInZone:(id)arg1;
- (id)initWithAccountSession:(id)arg1;
- (bool)isDefaultOwnerOutOfQuota;
- (bool)isUploadingItem:(id)arg1;
- (void)ownerDidReceiveOutOfQuotaError:(id)arg1;
- (void)performFirstSchedulingAfterStartupInDB:(id)arg1;
- (id)quotaAvailableForOwner:(id)arg1;
- (void)removeBoostedDocID:(id)arg1;
- (void)rescheduleJobsPendingInitialSyncInZone:(id)arg1;
- (void)resume;
- (void)schedule;
- (void)scheduleQuotaFetchIfNeededForOwner:(id)arg1;
- (void)scheduleQuotaStateUpdateForOwner:(id)arg1;
- (void)setIsDefaultOwnerOutOfQuota:(bool)arg1;
- (void)setIsDefaultOwnerOutOfQuota:(bool)arg1 forceSignalContainers:(bool)arg2;
- (void)setState:(int)arg1 forItem:(id)arg2;
- (void)setState:(int)arg1 forJobID:(id)arg2 zone:(id)arg3;
- (void)setState:(int)arg1 forUploadJobID:(id)arg2 zone:(id)arg3;
- (void)suspend;
- (id)thumbnailsOperationsByID;
- (void)transferStreamOfSyncContext:(id)arg1 didBecomeReadyWithMaxRecordsCount:(unsigned long long)arg2 sizeHint:(unsigned long long)arg3 priority:(long long)arg4 completionBlock:(id /* block */)arg5;
- (void)uploadItem:(id)arg1;
- (id)uploadsDeadlineScheduler;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

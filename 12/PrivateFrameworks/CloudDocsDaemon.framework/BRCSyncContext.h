<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BRCSyncContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudDocsDaemon.framework/BRCSyncContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon (575.504)
 */

@interface BRCSyncContext : NSObject {
    BRCThrottleBase * _applyThrottle;
    CKContainer * _ckContainer;
    NSString * _contextIdentifier;
    NSDate * _dateWhenLastForegroundClientLeft;
    BRCTransferStream * _downloadStream;
    BRCThrottleBase * _downloadThrottle;
    NSMutableSet * _foregroundClients;
    unsigned long long  _foregroundState;
    NSObject<OS_dispatch_queue> * _foregroundStateQueue;
    bool  _isCancelled;
    bool  _isShared;
    NSString * _lastForegroundClientDescription;
    int  _notifyTokenForFramework;
    BRCThrottleBase * _perItemSyncUpThrottle;
    BRCThrottleBase * _readerThrottle;
    BRCAccountSession * _session;
    NSString * _sourceAppIdentifier;
    NSObject<OS_dispatch_source> * _timerForForcedForegroundPeriod;
    NSObject<OS_dispatch_source> * _timerForGraceForegroundPeriod;
    BRCThrottleBase * _uploadFileModifiedThrottle;
    BRCTransferStream * _uploadStream;
    BRCThrottleBase * _uploadThrottle;
}

@property (nonatomic, readonly) BRCThrottleBase *applyThrottle;
@property (nonatomic, readonly) CKContainer *ckContainer;
@property (nonatomic, readonly) CKContainerID *ckContainerID;
@property (nonatomic, readonly) NSString *contextIdentifier;
@property (nonatomic, readonly) BRCUserDefaults *defaults;
@property (nonatomic, readonly) BRCTransferStream *downloadStream;
@property (nonatomic, readonly) BRCThrottleBase *downloadThrottle;
@property (nonatomic, readonly) bool isShared;
@property (nonatomic, readonly) BRCThrottleBase *perItemSyncUpThrottle;
@property (nonatomic, readonly) BRCThrottleBase *readerThrottle;
@property (nonatomic, readonly) BRCAccountSession *session;
@property (nonatomic, readonly) BRCThrottleBase *uploadFileModifiedThrottle;
@property (nonatomic, readonly) BRCTransferStream *uploadStream;
@property (nonatomic, readonly) BRCThrottleBase *uploadThrottle;

+ (id)_contextIdentifierForMangledID:(id)arg1 metadata:(bool)arg2;
+ (id)_sourceAppIdentifierForMangledID:(id)arg1;
+ (id)contextIdentifierForMangledID:(id)arg1;
+ (id)transferContextForServerZone:(id)arg1 appLibrary:(id)arg2;

- (void).cxx_destruct;
- (void)_armForegroundGraceTimerForClientDescription:(id)arg1;
- (id)_database;
- (void)_notifyContainerBeingNowForeground;
- (void)_notifyFrameworkContainersMonitorWithState:(bool)arg1;
- (void)addForegroundClient:(id)arg1;
- (void)addOperation:(id)arg1;
- (void)addOperation:(id)arg1 allowsCellularAccess:(id)arg2;
- (void)addOperation:(id)arg1 allowsCellularAccess:(id)arg2 nonDiscretionary:(id)arg3;
- (void)addOperation:(id)arg1 nonDiscretionary:(bool)arg2;
- (bool)allowsCellularAccess;
- (id)applyThrottle;
- (void)cancel;
- (id)ckContainer;
- (id)ckContainerID;
- (void)close;
- (id)contextIdentifier;
- (void)dealloc;
- (id)defaults;
- (id)description;
- (void)didReceiveHandoffRequest;
- (id)downloadStream;
- (id)downloadThrottle;
- (void)dumpToContext:(id)arg1;
- (void)forceContainerForegroundForDuration:(double)arg1;
- (id)foregroundClients;
- (id)initWithSession:(id)arg1 contextIdentifier:(id)arg2 sourceAppIdentifier:(id)arg3 isShared:(bool)arg4;
- (bool)isForeground;
- (bool)isShared;
- (void)notifyDuetFromAccessByBundleID:(id)arg1;
- (id)perItemSyncUpThrottle;
- (id)readerThrottle;
- (void)removeForegroundClient:(id)arg1;
- (void)resume;
- (id)session;
- (void)setupIfNeeded;
- (id)uploadFileModifiedThrottle;
- (id)uploadStream;
- (id)uploadThrottle;
- (void)waitForAllOperations;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

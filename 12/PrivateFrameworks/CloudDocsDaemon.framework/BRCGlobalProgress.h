<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BRCGlobalProgress.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudDocsDaemon.framework/BRCGlobalProgress.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon (575.504)
 */

@interface BRCGlobalProgress : NSObject <BRCReachabilityDelegate> {
    NSMutableSet * _appLibrariesNotLive;
    _BRCDownloadInfo * _downloads;
    BRCProgress * _globalProgress;
    bool  _lazyInitDone;
    bool  _networkReachable;
    NSObject<OS_dispatch_source> * _operationTimer;
    unsigned int  _operationTimerSuspendCount;
    NSObject<OS_dispatch_queue> * _queue;
    BRCAccountSession * _session;
    bool  _showExtendedInfo;
    br_pacer * _updatePacer;
    _BRCUploadInfo * _uploads;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) BRCAccountSession *session;
@property (readonly) Class superclass;

+ (id)_keyPathsToObserve;

- (void).cxx_destruct;
- (void)_cancelDownloadForDocumentID:(id)arg1;
- (void)_cancelDownloadForDocumentID:(id)arg1 destroyIfLast:(bool)arg2 willRetryTransfer:(bool)arg3;
- (void)_cancelUploadForDocumentID:(id)arg1 inState:(unsigned int)arg2;
- (void)_cancelUploadForDocumentID:(id)arg1 inState:(unsigned int)arg2 willRetryTransfer:(bool)arg3;
- (void)_cancelUploadForDocumentID:(id)arg1 inState:(unsigned int)arg2 willRetryTransfer:(bool)arg3 pendingQuota:(bool)arg4;
- (void)_createDownloadMetadataWithCompletedUnitCount:(long long)arg1 totalUnitCount:(long long)arg2;
- (void)_createNewGlobalProgressInGroup:(id)arg1 completedUnitCount:(long long)arg2 totalUnitCount:(long long)arg3;
- (void)_createNewIndeterminateGlobalProgress;
- (void)_createUploadMetadataWithCompletedUnitCount:(long long)arg1 totalUnitCount:(long long)arg2;
- (void)_deleteDocument:(id)arg1 reason:(BOOL)arg2;
- (void)_destroyDownloadWithReason:(BOOL)arg1;
- (void)_destroyProgressInGroup:(id)arg1 reason:(BOOL)arg2;
- (void)_destroyUploadWithReason:(BOOL)arg1;
- (void)_resumeProgressForAnotherOperationIfNeeded;
- (void)_startObservingProgress:(id)arg1;
- (void)_stopObservingProgress:(id)arg1;
- (id)_t_globalProgressInfo;
- (void)_updateAppLibraryID:(id)arg1;
- (void)_updateDocument:(id)arg1;
- (void)_updateGlobalProgress;
- (void)addProgress:(id)arg1 forDocument:(id)arg2 inGroup:(BOOL)arg3;
- (void)clearOutOfQuotaState;
- (void)dealloc;
- (void)didDeleteDocument:(id)arg1;
- (void)didUpdateClientZone:(id)arg1;
- (void)didUpdateDocument:(id)arg1;
- (void)dumpDictionary:(id)arg1 withMaxCount:(unsigned long long)arg2 toContext:(id)arg3;
- (void)dumpToContext:(id)arg1;
- (id)initWithSession:(id)arg1;
- (void)networkReachabilityChanged:(bool)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)resumeProgressForZones:(id)arg1;
- (id)session;
- (void)stopPublishingProgress;
- (void)updateDownloadThrottleForDocument:(id)arg1 toState:(int)arg2;
- (void)updateUploadThrottleForDocument:(id)arg1 toState:(int)arg2;
- (void)willScheduleDocumentForDownload:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

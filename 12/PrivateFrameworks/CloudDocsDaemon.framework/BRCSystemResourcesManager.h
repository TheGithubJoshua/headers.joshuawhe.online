<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BRCSystemResourcesManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudDocsDaemon.framework/BRCSystemResourcesManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon (575.504)
 */

@interface BRCSystemResourcesManager : NSObject <BRReachabilityObserver> {
    NSHashTable * _appListObservers;
    bool  _connectedToPowerSource;
    NSDate * _connectedToPowerSourceCheckedDate;
    bool  _invalidated;
    NSMutableDictionary * _lowDiskDict;
    NSMutableSet * _lowDiskSet;
    NSObject<OS_dispatch_source> * _lowDiskSource;
    NSObject<OS_dispatch_source> * _lowDiskTimer;
    NSHashTable * _lowMemoryObservers;
    br_pacer * _memoryNotificationCoalescePacer;
    NSObject<OS_dispatch_source> * _memoryNotificationEventSource;
    NSObject<OS_dispatch_queue> * _notificationQueue;
    bool  _powerLevelOK;
    NSObject<OS_dispatch_source> * _powerLevelOKTimer;
    int  _powerNotifyToken;
    NSHashTable * _powerObservers;
    NSMapTable * _processObservers;
    unsigned int  _reachabilityFlags;
    NSObject<OS_dispatch_source> * _reachabilityFlagsTimer;
    BRReachabilityMonitor * _reachabilityMonitor;
    NSHashTable * _reachabilityObservers;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) bool isNetworkReachable;
@property (readonly) bool isPowerOK;
@property (readonly) unsigned int reachabilityFlags;
@property (readonly) Class superclass;

+ (id)manager;

- (void).cxx_destruct;
- (void)__resetReachability;
- (id)_createMonitoringObjectForProcessID:(int)arg1 observer:(id)arg2;
- (void)_didReceiveMemoryWarning;
- (void)_initAppListObservers;
- (void)_initLowDiskManager;
- (void)_initLowMemory;
- (void)_initPowerManager;
- (void)_initProcessObservers;
- (void)_initReachability;
- (void)_initXPCFSEvents;
- (void)_invalidateAppListObservers;
- (void)_invalidateLowDiskManager;
- (void)_invalidateLowMemory;
- (void)_invalidatePowerManager;
- (void)_invalidateProcessMonitorObject:(id)arg1;
- (void)_invalidateProcessObservers;
- (void)_invalidateReachability;
- (void)_processLowDiskNotification:(bool)arg1;
- (void)_resetLowDiskManager;
- (void)_resetPowerManager;
- (void)_resetReachability;
- (void)_setPowerLevel:(bool)arg1;
- (void)_setPowerLevelWithCoalescing:(bool)arg1;
- (void)_setReachabilityFlags:(unsigned int)arg1;
- (void)_setReachabilityFlagsWithCoalescing:(unsigned int)arg1;
- (void)addAppListObserver:(id)arg1;
- (void)addLowDiskObserver:(id)arg1 forDevice:(int)arg2;
- (void)addLowMemoryObserver:(id)arg1;
- (void)addPowerObserver:(id)arg1;
- (void)addProcessMonitor:(id)arg1 forProcessID:(int)arg2;
- (void)addReachabilityObserver:(id)arg1;
- (void)close;
- (bool)connectedToPowerSource;
- (void)dealloc;
- (bool)hasEnoughSpaceForDevice:(int)arg1;
- (id)init;
- (bool)isNetworkReachable;
- (bool)isPowerOK;
- (unsigned int)reachabilityFlags;
- (void)reachabilityMonitor:(id)arg1 didChangeReachabilityFlagsTo:(unsigned int)arg2;
- (void)reachabilityMonitor:(id)arg1 didChangeReachabilityStatusTo:(bool)arg2;
- (void)removeAppListObserver:(id)arg1;
- (void)removeLowDiskObserver:(id)arg1 forDevice:(int)arg2;
- (void)removeLowMemoryObserver:(id)arg1;
- (void)removePowerObserver:(id)arg1;
- (void)removeProcessMonitor:(id)arg1;
- (void)removeReachabilityObserver:(id)arg1;
- (void)reset;
- (void)resume;
- (void)suspend;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

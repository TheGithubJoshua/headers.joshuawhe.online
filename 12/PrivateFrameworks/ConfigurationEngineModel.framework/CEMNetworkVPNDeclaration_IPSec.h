<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CEMNetworkVPNDeclaration_IPSec.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ConfigurationEngineModel.framework/CEMNetworkVPNDeclaration_IPSec.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel (25.9)
 */

@interface CEMNetworkVPNDeclaration_IPSec : CEMPayloadBase {
    NSString * _payloadAuthenticationMethod;
    NSNumber * _payloadDisconnectOnIdle;
    NSNumber * _payloadDisconnectOnIdleTimer;
    NSString * _payloadLocalIdentifier;
    NSString * _payloadLocalIdentifierType;
    NSNumber * _payloadOnDemandEnabled;
    NSArray * _payloadOnDemandMatchDomainsAlways;
    NSArray * _payloadOnDemandMatchDomainsNever;
    NSArray * _payloadOnDemandMatchDomainsOnRetry;
    NSArray * _payloadOnDemandRules;
    NSString * _payloadPayloadCertificateUUID;
    NSNumber * _payloadPromptForVPNPIN;
    NSString * _payloadRemoteAddress;
    NSData * _payloadSharedSecret;
    NSNumber * _payloadXAuthEnabled;
    NSString * _payloadXAuthName;
    NSString * _payloadXAuthPassword;
    NSString * _payloadXAuthPasswordEncryption;
}

@property (nonatomic, copy) NSString *payloadAuthenticationMethod;
@property (nonatomic, copy) NSNumber *payloadDisconnectOnIdle;
@property (nonatomic, copy) NSNumber *payloadDisconnectOnIdleTimer;
@property (nonatomic, copy) NSString *payloadLocalIdentifier;
@property (nonatomic, copy) NSString *payloadLocalIdentifierType;
@property (nonatomic, copy) NSNumber *payloadOnDemandEnabled;
@property (nonatomic, copy) NSArray *payloadOnDemandMatchDomainsAlways;
@property (nonatomic, copy) NSArray *payloadOnDemandMatchDomainsNever;
@property (nonatomic, copy) NSArray *payloadOnDemandMatchDomainsOnRetry;
@property (nonatomic, copy) NSArray *payloadOnDemandRules;
@property (nonatomic, copy) NSString *payloadPayloadCertificateUUID;
@property (nonatomic, copy) NSNumber *payloadPromptForVPNPIN;
@property (nonatomic, copy) NSString *payloadRemoteAddress;
@property (nonatomic, copy) NSData *payloadSharedSecret;
@property (nonatomic, copy) NSNumber *payloadXAuthEnabled;
@property (nonatomic, copy) NSString *payloadXAuthName;
@property (nonatomic, copy) NSString *payloadXAuthPassword;
@property (nonatomic, copy) NSString *payloadXAuthPasswordEncryption;

+ (id)allowedPayloadKeys;
+ (id)buildRequiredOnly;
+ (id)buildWithRemoteAddress:(id)arg1 withAuthenticationMethod:(id)arg2 withXAuthName:(id)arg3 withXAuthPassword:(id)arg4 withXAuthEnabled:(id)arg5 withXAuthPasswordEncryption:(id)arg6 withLocalIdentifier:(id)arg7 withLocalIdentifierType:(id)arg8 withSharedSecret:(id)arg9 withPayloadCertificateUUID:(id)arg10 withPromptForVPNPIN:(id)arg11 withOnDemandEnabled:(id)arg12 withOnDemandMatchDomainsAlways:(id)arg13 withOnDemandMatchDomainsNever:(id)arg14 withOnDemandMatchDomainsOnRetry:(id)arg15 withOnDemandRules:(id)arg16 withDisconnectOnIdle:(id)arg17 withDisconnectOnIdleTimer:(id)arg18;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)loadPayload:(id)arg1 error:(id*)arg2;
- (id)payloadAuthenticationMethod;
- (id)payloadDisconnectOnIdle;
- (id)payloadDisconnectOnIdleTimer;
- (id)payloadLocalIdentifier;
- (id)payloadLocalIdentifierType;
- (id)payloadOnDemandEnabled;
- (id)payloadOnDemandMatchDomainsAlways;
- (id)payloadOnDemandMatchDomainsNever;
- (id)payloadOnDemandMatchDomainsOnRetry;
- (id)payloadOnDemandRules;
- (id)payloadPayloadCertificateUUID;
- (id)payloadPromptForVPNPIN;
- (id)payloadRemoteAddress;
- (id)payloadSharedSecret;
- (id)payloadXAuthEnabled;
- (id)payloadXAuthName;
- (id)payloadXAuthPassword;
- (id)payloadXAuthPasswordEncryption;
- (id)serializePayloadWithAssetProviders:(id)arg1;
- (void)setPayloadAuthenticationMethod:(id)arg1;
- (void)setPayloadDisconnectOnIdle:(id)arg1;
- (void)setPayloadDisconnectOnIdleTimer:(id)arg1;
- (void)setPayloadLocalIdentifier:(id)arg1;
- (void)setPayloadLocalIdentifierType:(id)arg1;
- (void)setPayloadOnDemandEnabled:(id)arg1;
- (void)setPayloadOnDemandMatchDomainsAlways:(id)arg1;
- (void)setPayloadOnDemandMatchDomainsNever:(id)arg1;
- (void)setPayloadOnDemandMatchDomainsOnRetry:(id)arg1;
- (void)setPayloadOnDemandRules:(id)arg1;
- (void)setPayloadPayloadCertificateUUID:(id)arg1;
- (void)setPayloadPromptForVPNPIN:(id)arg1;
- (void)setPayloadRemoteAddress:(id)arg1;
- (void)setPayloadSharedSecret:(id)arg1;
- (void)setPayloadXAuthEnabled:(id)arg1;
- (void)setPayloadXAuthName:(id)arg1;
- (void)setPayloadXAuthPassword:(id)arg1;
- (void)setPayloadXAuthPasswordEncryption:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

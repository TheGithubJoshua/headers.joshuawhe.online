<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CEMNetworkContentCachingDeclaration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ConfigurationEngineModel.framework/CEMNetworkContentCachingDeclaration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel (25.9)
 */

@interface CEMNetworkContentCachingDeclaration : CEMConfigurationBase <CEMRegisteredTypeProtocol> {
    NSNumber * _payloadAllowPersonalCaching;
    NSNumber * _payloadAllowSharedCaching;
    NSNumber * _payloadAutoActivation;
    NSNumber * _payloadCacheLimit;
    NSString * _payloadDataPath;
    NSNumber * _payloadDenyActivation;
    NSNumber * _payloadDenyTetheredCaching;
    NSArray * _payloadListenRanges;
    NSNumber * _payloadListenRangesOnly;
    NSNumber * _payloadListenWithPeersAndParents;
    NSNumber * _payloadLocalSubnetsOnly;
    NSNumber * _payloadLogClientIdentity;
    NSString * _payloadParentSelectionPolicy;
    NSArray * _payloadParents;
    NSArray * _payloadPeerFilterRanges;
    NSArray * _payloadPeerListenRanges;
    NSNumber * _payloadPeerLocalSubnetsOnly;
    NSNumber * _payloadPort;
    NSArray * _payloadPublicRanges;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSNumber *payloadAllowPersonalCaching;
@property (nonatomic, copy) NSNumber *payloadAllowSharedCaching;
@property (nonatomic, copy) NSNumber *payloadAutoActivation;
@property (nonatomic, copy) NSNumber *payloadCacheLimit;
@property (nonatomic, copy) NSString *payloadDataPath;
@property (nonatomic, copy) NSNumber *payloadDenyActivation;
@property (nonatomic, copy) NSNumber *payloadDenyTetheredCaching;
@property (nonatomic, copy) NSArray *payloadListenRanges;
@property (nonatomic, copy) NSNumber *payloadListenRangesOnly;
@property (nonatomic, copy) NSNumber *payloadListenWithPeersAndParents;
@property (nonatomic, copy) NSNumber *payloadLocalSubnetsOnly;
@property (nonatomic, copy) NSNumber *payloadLogClientIdentity;
@property (nonatomic, copy) NSString *payloadParentSelectionPolicy;
@property (nonatomic, copy) NSArray *payloadParents;
@property (nonatomic, copy) NSArray *payloadPeerFilterRanges;
@property (nonatomic, copy) NSArray *payloadPeerListenRanges;
@property (nonatomic, copy) NSNumber *payloadPeerLocalSubnetsOnly;
@property (nonatomic, copy) NSNumber *payloadPort;
@property (nonatomic, copy) NSArray *payloadPublicRanges;
@property (readonly) Class superclass;

+ (id)allowedPayloadKeys;
+ (id)buildRequiredOnlyWithIdentifier:(id)arg1;
+ (id)buildWithIdentifier:(id)arg1 withAllowPersonalCaching:(id)arg2 withAllowSharedCaching:(id)arg3 withAutoActivation:(id)arg4 withCacheLimit:(id)arg5 withDataPath:(id)arg6 withDenyActivation:(id)arg7 withDenyTetheredCaching:(id)arg8 withListenRanges:(id)arg9 withListenRangesOnly:(id)arg10 withListenWithPeersAndParents:(id)arg11 withLocalSubnetsOnly:(id)arg12 withLogClientIdentity:(id)arg13 withParents:(id)arg14 withParentSelectionPolicy:(id)arg15 withPeerFilterRanges:(id)arg16 withPeerListenRanges:(id)arg17 withPeerLocalSubnetsOnly:(id)arg18 withPort:(id)arg19 withPublicRanges:(id)arg20;
+ (id)profileType;
+ (id)registeredClassName;
+ (id)registeredIdentifier;
+ (id)restrictionPayloadKeys;

- (void).cxx_destruct;
- (int)activationLevel;
- (id)assetReferences;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)loadPayload:(id)arg1 error:(id*)arg2;
- (bool)multipleAllowed;
- (bool)mustBeSupervised;
- (id)payloadAllowPersonalCaching;
- (id)payloadAllowSharedCaching;
- (id)payloadAutoActivation;
- (id)payloadCacheLimit;
- (id)payloadDataPath;
- (id)payloadDenyActivation;
- (id)payloadDenyTetheredCaching;
- (id)payloadListenRanges;
- (id)payloadListenRangesOnly;
- (id)payloadListenWithPeersAndParents;
- (id)payloadLocalSubnetsOnly;
- (id)payloadLogClientIdentity;
- (id)payloadParentSelectionPolicy;
- (id)payloadParents;
- (id)payloadPeerFilterRanges;
- (id)payloadPeerListenRanges;
- (id)payloadPeerLocalSubnetsOnly;
- (id)payloadPort;
- (id)payloadPublicRanges;
- (id)serializePayloadWithAssetProviders:(id)arg1;
- (void)setPayloadAllowPersonalCaching:(id)arg1;
- (void)setPayloadAllowSharedCaching:(id)arg1;
- (void)setPayloadAutoActivation:(id)arg1;
- (void)setPayloadCacheLimit:(id)arg1;
- (void)setPayloadDataPath:(id)arg1;
- (void)setPayloadDenyActivation:(id)arg1;
- (void)setPayloadDenyTetheredCaching:(id)arg1;
- (void)setPayloadListenRanges:(id)arg1;
- (void)setPayloadListenRangesOnly:(id)arg1;
- (void)setPayloadListenWithPeersAndParents:(id)arg1;
- (void)setPayloadLocalSubnetsOnly:(id)arg1;
- (void)setPayloadLogClientIdentity:(id)arg1;
- (void)setPayloadParentSelectionPolicy:(id)arg1;
- (void)setPayloadParents:(id)arg1;
- (void)setPayloadPeerFilterRanges:(id)arg1;
- (void)setPayloadPeerListenRanges:(id)arg1;
- (void)setPayloadPeerLocalSubnetsOnly:(id)arg1;
- (void)setPayloadPort:(id)arg1;
- (void)setPayloadPublicRanges:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

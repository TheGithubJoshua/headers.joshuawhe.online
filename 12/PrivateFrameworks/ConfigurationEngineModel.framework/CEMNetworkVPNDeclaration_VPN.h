<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CEMNetworkVPNDeclaration_VPN.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ConfigurationEngineModel.framework/CEMNetworkVPNDeclaration_VPN.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ConfigurationEngineModel.framework/ConfigurationEngineModel (25.9)
 */

@interface CEMNetworkVPNDeclaration_VPN : CEMPayloadBase {
    NSString * _payloadAuthName;
    NSString * _payloadAuthPassword;
    NSString * _payloadAuthenticationMethod;
    NSNumber * _payloadDisconnectOnIdle;
    NSNumber * _payloadDisconnectOnIdleTimer;
    NSNumber * _payloadOnDemandEnabled;
    NSArray * _payloadOnDemandMatchDomainsAlways;
    NSArray * _payloadOnDemandMatchDomainsNever;
    NSArray * _payloadOnDemandMatchDomainsOnRetry;
    NSArray * _payloadOnDemandRules;
    NSString * _payloadPassword;
    NSString * _payloadPayloadCertificateUUID;
    NSString * _payloadProviderBundleIdentifier;
    NSString * _payloadRemoteAddress;
}

@property (nonatomic, copy) NSString *payloadAuthName;
@property (nonatomic, copy) NSString *payloadAuthPassword;
@property (nonatomic, copy) NSString *payloadAuthenticationMethod;
@property (nonatomic, copy) NSNumber *payloadDisconnectOnIdle;
@property (nonatomic, copy) NSNumber *payloadDisconnectOnIdleTimer;
@property (nonatomic, copy) NSNumber *payloadOnDemandEnabled;
@property (nonatomic, copy) NSArray *payloadOnDemandMatchDomainsAlways;
@property (nonatomic, copy) NSArray *payloadOnDemandMatchDomainsNever;
@property (nonatomic, copy) NSArray *payloadOnDemandMatchDomainsOnRetry;
@property (nonatomic, copy) NSArray *payloadOnDemandRules;
@property (nonatomic, copy) NSString *payloadPassword;
@property (nonatomic, copy) NSString *payloadPayloadCertificateUUID;
@property (nonatomic, copy) NSString *payloadProviderBundleIdentifier;
@property (nonatomic, copy) NSString *payloadRemoteAddress;

+ (id)allowedPayloadKeys;
+ (id)buildRequiredOnly;
+ (id)buildWithAuthName:(id)arg1 withAuthPassword:(id)arg2 withAuthenticationMethod:(id)arg3 withPayloadCertificateUUID:(id)arg4 withOnDemandEnabled:(id)arg5 withOnDemandMatchDomainsAlways:(id)arg6 withOnDemandMatchDomainsNever:(id)arg7 withOnDemandMatchDomainsOnRetry:(id)arg8 withOnDemandRules:(id)arg9 withDisconnectOnIdle:(id)arg10 withDisconnectOnIdleTimer:(id)arg11 withRemoteAddress:(id)arg12 withPassword:(id)arg13 withProviderBundleIdentifier:(id)arg14;

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)loadPayload:(id)arg1 error:(id*)arg2;
- (id)payloadAuthName;
- (id)payloadAuthPassword;
- (id)payloadAuthenticationMethod;
- (id)payloadDisconnectOnIdle;
- (id)payloadDisconnectOnIdleTimer;
- (id)payloadOnDemandEnabled;
- (id)payloadOnDemandMatchDomainsAlways;
- (id)payloadOnDemandMatchDomainsNever;
- (id)payloadOnDemandMatchDomainsOnRetry;
- (id)payloadOnDemandRules;
- (id)payloadPassword;
- (id)payloadPayloadCertificateUUID;
- (id)payloadProviderBundleIdentifier;
- (id)payloadRemoteAddress;
- (id)serializePayloadWithAssetProviders:(id)arg1;
- (void)setPayloadAuthName:(id)arg1;
- (void)setPayloadAuthPassword:(id)arg1;
- (void)setPayloadAuthenticationMethod:(id)arg1;
- (void)setPayloadDisconnectOnIdle:(id)arg1;
- (void)setPayloadDisconnectOnIdleTimer:(id)arg1;
- (void)setPayloadOnDemandEnabled:(id)arg1;
- (void)setPayloadOnDemandMatchDomainsAlways:(id)arg1;
- (void)setPayloadOnDemandMatchDomainsNever:(id)arg1;
- (void)setPayloadOnDemandMatchDomainsOnRetry:(id)arg1;
- (void)setPayloadOnDemandRules:(id)arg1;
- (void)setPayloadPassword:(id)arg1;
- (void)setPayloadPayloadCertificateUUID:(id)arg1;
- (void)setPayloadProviderBundleIdentifier:(id)arg1;
- (void)setPayloadRemoteAddress:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

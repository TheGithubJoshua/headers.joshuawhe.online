<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TPFavoritesEntryCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TelephonyUI.framework/TPFavoritesEntryCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI (1.0)
 */

@interface TPFavoritesEntryCell : UICollectionViewCell {
    NSString * _actionType;
    UIView * _avatarContentView;
    NSLayoutConstraint * _avatarContentViewHeightLayoutConstraint;
    NSLayoutConstraint * _avatarContentViewWidthLayoutConstraint;
    CNAvatarViewController * _avatarViewController;
    UILabel * _contactNameLabel;
    NSLayoutConstraint * _contactNameLabelBaselineLayoutConstraint;
    bool  _contentViewLayoutConstraintsLoaded;
    bool  _contentViewLoaded;
    UIVisualEffectView * _primaryVisualEffectView;
    UIVisualEffectView * _secondaryVisualEffectView;
    UIImage * _transportImage;
    UIImageView * _transportImageView;
    UILabel * _transportNameLabel;
    NSLayoutConstraint * _transportNameLabelBaselineLayoutConstraint;
    NSLayoutConstraint * _transportNameLabelLeadingLayoutConstraint;
    UIView * _transportView;
}

@property (nonatomic, copy) NSString *actionType;
@property (nonatomic, readonly) UIView *avatarContentView;
@property (nonatomic, retain) NSLayoutConstraint *avatarContentViewHeightLayoutConstraint;
@property (nonatomic, readonly) double avatarContentViewHeightLayoutConstraintConstant;
@property (nonatomic, retain) NSLayoutConstraint *avatarContentViewWidthLayoutConstraint;
@property (nonatomic, readonly) double avatarContentViewWidthLayoutConstraintConstant;
@property (nonatomic, retain) CNAvatarViewController *avatarViewController;
@property (nonatomic, retain) UILabel *contactNameLabel;
@property (nonatomic, retain) NSLayoutConstraint *contactNameLabelBaselineLayoutConstraint;
@property (nonatomic, readonly) double contactNameLabelBaselineLayoutConstraintConstant;
@property (getter=isContentViewLayoutConstraintsLoaded, nonatomic) bool contentViewLayoutConstraintsLoaded;
@property (getter=isContentViewLoaded, nonatomic) bool contentViewLoaded;
@property (nonatomic, retain) UIVisualEffectView *primaryVisualEffectView;
@property (nonatomic, retain) UIVisualEffectView *secondaryVisualEffectView;
@property (nonatomic, retain) UIImage *transportImage;
@property (nonatomic, retain) UIImageView *transportImageView;
@property (nonatomic, retain) UILabel *transportNameLabel;
@property (nonatomic, retain) NSLayoutConstraint *transportNameLabelBaselineLayoutConstraint;
@property (nonatomic, readonly) double transportNameLabelBaselineLayoutConstraintConstant;
@property (nonatomic, retain) NSLayoutConstraint *transportNameLabelLeadingLayoutConstraint;
@property (nonatomic, readonly) double transportNameLabelLeadingLayoutConstraintConstant;
@property (nonatomic, retain) UIView *transportView;

+ (id)imageForActionType:(id)arg1;
+ (bool)requiresConstraintBasedLayout;
+ (id)reuseIdentifier;

- (void).cxx_destruct;
- (id)actionType;
- (id)avatarContentView;
- (id)avatarContentViewHeightLayoutConstraint;
- (double)avatarContentViewHeightLayoutConstraintConstant;
- (id)avatarContentViewWidthLayoutConstraint;
- (double)avatarContentViewWidthLayoutConstraintConstant;
- (id)avatarViewController;
- (void)commonInit;
- (id)contactNameLabel;
- (id)contactNameLabelBaselineLayoutConstraint;
- (double)contactNameLabelBaselineLayoutConstraintConstant;
- (void)dealloc;
- (void)handleContentSizeCategoryDidChangeNotification:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isContentViewLayoutConstraintsLoaded;
- (bool)isContentViewLoaded;
- (void)loadContentView;
- (void)loadContentViewLayoutConstraints;
- (id)primaryVisualEffectView;
- (id)secondaryVisualEffectView;
- (void)setActionType:(id)arg1;
- (void)setAvatarContentViewHeightLayoutConstraint:(id)arg1;
- (void)setAvatarContentViewWidthLayoutConstraint:(id)arg1;
- (void)setAvatarViewController:(id)arg1;
- (void)setContactNameLabel:(id)arg1;
- (void)setContactNameLabelBaselineLayoutConstraint:(id)arg1;
- (void)setContentViewLayoutConstraintsLoaded:(bool)arg1;
- (void)setContentViewLoaded:(bool)arg1;
- (void)setPrimaryVisualEffectView:(id)arg1;
- (void)setSecondaryVisualEffectView:(id)arg1;
- (void)setTransportImage:(id)arg1;
- (void)setTransportImageView:(id)arg1;
- (void)setTransportNameLabel:(id)arg1;
- (void)setTransportNameLabelBaselineLayoutConstraint:(id)arg1;
- (void)setTransportNameLabelLeadingLayoutConstraint:(id)arg1;
- (void)setTransportView:(id)arg1;
- (id)transportImage;
- (id)transportImageView;
- (id)transportNameLabel;
- (id)transportNameLabelBaselineLayoutConstraint;
- (double)transportNameLabelBaselineLayoutConstraintConstant;
- (id)transportNameLabelLeadingLayoutConstraint;
- (double)transportNameLabelLeadingLayoutConstraintConstant;
- (id)transportView;
- (void)updateConstraints;
- (void)updateConstraintsConstants;
- (void)updateFonts;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

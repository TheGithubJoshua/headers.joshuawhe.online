<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FMFLocation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/FMF.framework/FMFLocation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/FMF.framework/FMF (1)
 */

@interface FMFLocation : NSObject <FMAnnotation, NSCopying, NSSecureCoding> {
    double  _TTL;
    NSString * _age;
    struct CLLocationCoordinate2D { 
        double latitude; 
        double longitude; 
    }  _coordinate;
    double  _distance;
    NSString * _distanceDescription;
    double  _distanceFromUser;
    FMFHandle * _handle;
    double  _horizontalAccuracy;
    bool  _isBorderEnabled;
    NSString * _label;
    UIImage * _largeAnnotationIcon;
    UIImage * _largeOverlayIcon;
    bool  _locatingInProgress;
    CLLocation * _location;
    NSString * _longAddress;
    double  _maxLocatingInterval;
    FMAccuracyOverlay * _overlay;
    FMFPlacemark * _placemark;
    NSString * _shortAddressString;
    UIImage * _smallAnnotationIcon;
    UIImage * _smallOverlayIcon;
    NSDate * _timestamp;
    UIColor * _tintColor;
}

@property (nonatomic) double TTL;
@property (nonatomic, retain) NSString *age;
@property (nonatomic) struct CLLocationCoordinate2D { double x1; double x2; } coordinate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double distance;
@property (nonatomic, retain) NSString *distanceDescription;
@property (nonatomic) double distanceFromUser;
@property (nonatomic, retain) FMFHandle *handle;
@property (readonly) unsigned long long hash;
@property (nonatomic) double horizontalAccuracy;
@property (nonatomic) bool isBorderEnabled;
@property (nonatomic, retain) NSString *label;
@property (nonatomic, retain) UIImage *largeAnnotationIcon;
@property (nonatomic, retain) UIImage *largeOverlayIcon;
@property (getter=isLocatingInProgress, nonatomic) bool locatingInProgress;
@property (nonatomic, retain) CLLocation *location;
@property (nonatomic, copy) NSString *longAddress;
@property (nonatomic) double maxLocatingInterval;
@property (nonatomic, retain) FMAccuracyOverlay *overlay;
@property (nonatomic, retain) FMFPlacemark *placemark;
@property (nonatomic, readonly, copy) NSString *shortAddress;
@property (nonatomic, copy) NSString *shortAddressString;
@property (nonatomic, retain) UIImage *smallAnnotationIcon;
@property (nonatomic, retain) UIImage *smallOverlayIcon;
@property (nonatomic, readonly, copy) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSDate *timestamp;
@property (nonatomic, retain) UIColor *tintColor;
@property (nonatomic, readonly, copy) NSString *title;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (double)TTL;
- (void)_updateLocation:(id)arg1;
- (id)age;
- (id)agingItemTimestamp;
- (bool)conformsToProtocol:(id)arg1;
- (struct CLLocationCoordinate2D { double x1; double x2; })coordinate;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (double)distance;
- (id)distanceDescription;
- (double)distanceFromUser;
- (long long)distanceThenNameCompare:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)handle;
- (bool)hasKnownLocation;
- (unsigned long long)hash;
- (double)horizontalAccuracy;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1 forHandle:(id)arg2 maxLocatingInterval:(double)arg3 TTL:(double)arg4;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2;
- (bool)isBorderEnabled;
- (bool)isEqual:(id)arg1;
- (bool)isLocatingInProgress;
- (bool)isThisDevice;
- (bool)isValid;
- (id)label;
- (id)largeAnnotationIcon;
- (id)largeOverlayIcon;
- (id)location;
- (id)locationAge;
- (id)locationShortAddressWithAge;
- (id)locationShortAddressWithAgeIncludeLocating;
- (id)longAddress;
- (double)maxLocatingInterval;
- (id)overlay;
- (id)placemark;
- (void)resetLocateInProgress:(id)arg1;
- (void)resetLocateInProgressTimer;
- (void)setAge:(id)arg1;
- (void)setCoordinate:(struct CLLocationCoordinate2D { double x1; double x2; })arg1;
- (void)setDistance:(double)arg1;
- (void)setDistanceDescription:(id)arg1;
- (void)setDistanceFromUser:(double)arg1;
- (void)setHandle:(id)arg1;
- (void)setHorizontalAccuracy:(double)arg1;
- (void)setIsBorderEnabled:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setLargeAnnotationIcon:(id)arg1;
- (void)setLargeOverlayIcon:(id)arg1;
- (void)setLocatingInProgress:(bool)arg1;
- (void)setLocation:(id)arg1;
- (void)setLongAddress:(id)arg1;
- (void)setMaxLocatingInterval:(double)arg1;
- (void)setOverlay:(id)arg1;
- (void)setPlacemark:(id)arg1;
- (void)setShortAddressString:(id)arg1;
- (void)setSmallAnnotationIcon:(id)arg1;
- (void)setSmallOverlayIcon:(id)arg1;
- (void)setTTL:(double)arg1;
- (void)setTimestamp:(id)arg1;
- (void)setTintColor:(id)arg1;
- (id)shortAddress;
- (id)shortAddressString;
- (id)smallAnnotationIcon;
- (id)smallOverlayIcon;
- (id)subtitle;
- (id)timestamp;
- (id)tintColor;
- (id)title;
- (void)updateHandle:(id)arg1;
- (void)updateLocation:(id)arg1;
- (void)updateLocationForCache:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

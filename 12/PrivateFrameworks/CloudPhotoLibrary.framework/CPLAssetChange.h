<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CPLAssetChange.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudPhotoLibrary.framework/CPLAssetChange.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary (3462.1.170)
 */

@interface CPLAssetChange : CPLItemChange {
    NSDate * _addedDate;
    CPLAdjustments * _adjustments;
    NSDate * _assetDate;
    unsigned long long  _assetHDRType;
    unsigned long long  _assetSubtype;
    unsigned long long  _burstFlags;
    NSString * _burstIdentifier;
    NSString * _caption;
    NSString * _collectionIdentifier;
    NSString * _collectionName;
    long long  _customRenderedValue;
    long long  _duration;
    NSString * _extendedDescription;
    NSString * _facesAdjustmentsFingerprint;
    NSData * _facesData;
    long long  _facesVersion;
    bool  _favorite;
    bool  _hidden;
    NSArray * _keywords;
    NSDate * _lastSharedDate;
    CLLocation * _location;
    NSString * _masterIdentifier;
    NSString * _mediaGroupIdentifier;
    NSString * _momentIdentifier;
    NSString * _momentName;
    long long  _orientation;
    unsigned long long  _originalChoice;
    NSArray * _people;
    CPLPlaceAnnotation * _placeAnnotation;
    long long  _playCount;
    NSDictionary * _resourcePerResourceType;
    NSArray * _resources;
    long long  _shareCount;
    NSString * _timeZoneName;
    NSNumber * _timeZoneOffset;
    long long  _videoComplementDurationTimescale;
    long long  _videoComplementDurationValue;
    long long  _videoComplementImageDisplayTimescale;
    long long  _videoComplementImageDisplayValue;
    unsigned long long  _videoComplementVisibilityState;
    long long  _viewCount;
}

@property (nonatomic, copy) NSDate *addedDate;
@property (nonatomic, retain) CPLAdjustments *adjustments;
@property (nonatomic, copy) NSDate *assetDate;
@property (nonatomic) unsigned long long assetHDRType;
@property (nonatomic) unsigned long long assetSubtype;
@property (nonatomic) unsigned long long burstFlags;
@property (nonatomic, copy) NSString *burstIdentifier;
@property (nonatomic, copy) NSString *caption;
@property (nonatomic, copy) NSString *collectionIdentifier;
@property (nonatomic, copy) NSString *collectionName;
@property (nonatomic) long long customRenderedValue;
@property (nonatomic) long long duration;
@property (nonatomic, copy) NSString *extendedDescription;
@property (nonatomic, copy) CPLFaceAnalysisReference *faces;
@property (nonatomic, copy) NSString *facesAdjustmentsFingerprint;
@property (nonatomic, copy) NSData *facesData;
@property (nonatomic) long long facesVersion;
@property (getter=isFavorite, nonatomic) bool favorite;
@property (getter=isHidden, nonatomic) bool hidden;
@property (nonatomic, copy) NSArray *keywords;
@property (nonatomic, copy) NSDate *lastSharedDate;
@property (nonatomic, retain) CLLocation *location;
@property (nonatomic, copy) NSString *masterIdentifier;
@property (nonatomic, copy) NSString *mediaGroupIdentifier;
@property (nonatomic, copy) NSString *momentIdentifier;
@property (nonatomic, copy) NSString *momentName;
@property (nonatomic) long long orientation;
@property (nonatomic) unsigned long long originalChoice;
@property (nonatomic, copy) NSArray *people;
@property (nonatomic, retain) CPLPlaceAnnotation *placeAnnotation;
@property (nonatomic) long long playCount;
@property (nonatomic, copy) NSArray *resources;
@property (nonatomic) long long shareCount;
@property (nonatomic, copy) NSString *timeZoneName;
@property (nonatomic, copy) NSNumber *timeZoneOffset;
@property (nonatomic) long long videoComplementDurationTimescale;
@property (nonatomic) long long videoComplementDurationValue;
@property (nonatomic) long long videoComplementImageDisplayTimescale;
@property (nonatomic) long long videoComplementImageDisplayValue;
@property (nonatomic) unsigned long long videoComplementVisibilityState;
@property (nonatomic) long long viewCount;

+ (id /* block */)copyPropertyBlockForDirection:(unsigned long long)arg1;
+ (bool)cplShouldIgnorePropertyForCoding:(id)arg1;
+ (bool)cplShouldIgnorePropertyForEquality:(id)arg1;
+ (id /* block */)equalityBlockForDirection:(unsigned long long)arg1;
+ (bool)serverSupportsVision;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (bool)_canLowerQuota;
- (id)addedDate;
- (id)adjustments;
- (id)allRelatedScopedIdentifiers;
- (id)assetDate;
- (unsigned long long)assetHDRType;
- (unsigned long long)assetSubtype;
- (unsigned long long)burstFlags;
- (id)burstIdentifier;
- (id)caption;
- (id /* block */)checkDefaultValueBlockForPropertyWithSelector:(SEL)arg1;
- (id)collectionIdentifier;
- (id)collectionName;
- (id)compactedChangeWithRelatedChanges:(id)arg1 isOnlyChange:(bool)arg2 fullRecord:(id)arg3 usingClientCache:(id)arg4;
- (void)copyDerivativesFromRecordIfPossible:(id)arg1;
- (long long)customRenderedValue;
- (long long)dequeueOrder;
- (long long)duration;
- (id)extendedDescription;
- (id)faces;
- (id)facesAdjustmentsFingerprint;
- (id)facesData;
- (long long)facesVersion;
- (unsigned long long)fullChangeTypeForFullRecord;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isFavorite;
- (bool)isHidden;
- (id)keywords;
- (id)lastSharedDate;
- (id)location;
- (id)masterIdentifier;
- (id)masterScopedIdentifier;
- (id)mediaGroupIdentifier;
- (id)momentIdentifier;
- (id)momentName;
- (long long)orientation;
- (unsigned long long)originalChoice;
- (id)people;
- (id)placeAnnotation;
- (long long)playCount;
- (id)propertiesDescription;
- (id)propertiesForChangeType:(unsigned long long)arg1;
- (id)relatedIdentifier;
- (id)resourceForType:(unsigned long long)arg1;
- (id)resources;
- (id)scopeIdentifiersForQuarantine;
- (id)scopedIdentifiersForMapping;
- (void)setAddedDate:(id)arg1;
- (void)setAdjustments:(id)arg1;
- (void)setAssetDate:(id)arg1;
- (void)setAssetHDRType:(unsigned long long)arg1;
- (void)setAssetSubtype:(unsigned long long)arg1;
- (void)setBurstFlags:(unsigned long long)arg1;
- (void)setBurstIdentifier:(id)arg1;
- (void)setCaption:(id)arg1;
- (void)setCollectionIdentifier:(id)arg1;
- (void)setCollectionName:(id)arg1;
- (void)setCustomRenderedValue:(long long)arg1;
- (void)setDuration:(long long)arg1;
- (void)setExtendedDescription:(id)arg1;
- (void)setFaces:(id)arg1;
- (void)setFacesAdjustmentsFingerprint:(id)arg1;
- (void)setFacesData:(id)arg1;
- (void)setFacesVersion:(long long)arg1;
- (void)setFavorite:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setKeywords:(id)arg1;
- (void)setLastSharedDate:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setMasterIdentifier:(id)arg1;
- (void)setMasterScopedIdentifier:(id)arg1;
- (void)setMediaGroupIdentifier:(id)arg1;
- (void)setMomentIdentifier:(id)arg1;
- (void)setMomentName:(id)arg1;
- (void)setOrientation:(long long)arg1;
- (void)setOriginalChoice:(unsigned long long)arg1;
- (void)setPeople:(id)arg1;
- (void)setPlaceAnnotation:(id)arg1;
- (void)setPlayCount:(long long)arg1;
- (void)setRelatedIdentifier:(id)arg1;
- (void)setResources:(id)arg1;
- (void)setShareCount:(long long)arg1;
- (void)setTimeZoneName:(id)arg1;
- (void)setTimeZoneOffset:(id)arg1;
- (void)setVideoComplementDurationTimescale:(long long)arg1;
- (void)setVideoComplementDurationValue:(long long)arg1;
- (void)setVideoComplementImageDisplayTimescale:(long long)arg1;
- (void)setVideoComplementImageDisplayValue:(long long)arg1;
- (void)setVideoComplementVisibilityState:(unsigned long long)arg1;
- (void)setViewCount:(long long)arg1;
- (long long)shareCount;
- (bool)supportsDeletion;
- (bool)supportsResources;
- (id)timeZoneName;
- (id)timeZoneOffset;
- (id)translateToClientChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (id)translateToCloudChangeUsingIDMapping:(id)arg1 error:(id*)arg2;
- (bool)validateChangeWithError:(id*)arg1;
- (bool)validateFullRecord;
- (bool)validateRecordForTracker:(id)arg1;
- (long long)videoComplementDurationTimescale;
- (long long)videoComplementDurationValue;
- (long long)videoComplementImageDisplayTimescale;
- (long long)videoComplementImageDisplayValue;
- (unsigned long long)videoComplementVisibilityState;
- (long long)viewCount;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

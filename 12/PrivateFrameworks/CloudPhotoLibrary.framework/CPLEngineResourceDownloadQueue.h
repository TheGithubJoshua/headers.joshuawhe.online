<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CPLEngineResourceDownloadQueue.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudPhotoLibrary.framework/CPLEngineResourceDownloadQueue.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary (3462.1.170)
 */

@interface CPLEngineResourceDownloadQueue : CPLEngineStorage <CPLAbstractObject> {
    NSObject<OS_dispatch_queue> * _downloadLock;
    CPLActiveDownloadQueue * _highPriorityQueue;
    unsigned long long  _inflightTransferTasksCount;
    NSDate * _lastTransferTaskBurstDate;
    unsigned long long  _lastTransferTasksBurstCount;
    CPLActiveDownloadQueue * _lowPriorityQueue;
    bool  _shouldRequestABackgroundDownloadSyncPhase;
    CPLActiveDownloadQueue * _thumbnailHighPriorityQueue;
    unsigned long long  _transferTasksBurstCount;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) CPLPlatformObject *platformObject;
@property (readonly) Class superclass;

+ (bool)shouldRetryDownloadOnError:(id)arg1;

- (void).cxx_destruct;
- (id)_activeQueueForTransferTask:(id)arg1;
- (bool)_canScheduleBackgroundDownloads;
- (void)_dequeueTransferTaskInActiveQueue:(id)arg1;
- (void)_dispatchTransportTasksIfNecessary;
- (id)_downloadTaskForLocalResource:(id)arg1 clientBundleID:(id)arg2 highPriority:(bool)arg3 proposedTaskIdentifier:(id)arg4 didStartHandler:(id /* block */)arg5 progressHandler:(id /* block */)arg6 completionHandler:(id /* block */)arg7;
- (void)_enqueueTransferTaskInActiveQueue:(id)arg1;
- (id)_failedTaskWithCompletionHandler:(id /* block */)arg1 error:(id)arg2 resource:(id)arg3 highPriority:(bool)arg4;
- (bool)_launchTransportTaskForQueue:(id)arg1 highPriority:(bool)arg2;
- (id)_queuesStatus;
- (id)_realDownloadTaskForLocalResource:(id)arg1 cloudResource:(id)arg2 didStartHandler:(id /* block */)arg3 progressHandler:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (void)_requestBackgroundDownloads;
- (id)_resourceStorageCopyTaskForResource:(id)arg1 cloudResource:(id)arg2 didStartHandler:(id /* block */)arg3 progressHandler:(id /* block */)arg4 completionHandler:(id /* block */)arg5;
- (void)_scheduleBackgroundDownloadsIfNecessary;
- (bool)_shouldTryLowPriorityDownloadWithError:(id*)arg1;
- (unsigned long long)_transportTaskCount;
- (void)_unscheduleBackgroundDownloads;
- (void)barrier;
- (id)cloudResourceForLocalResource:(id*)arg1 shouldNotTrustCaches:(bool*)arg2 transportScope:(id*)arg3 error:(id*)arg4;
- (unsigned long long)countOfQueuedDownloadTasks;
- (bool)deleteRecordsForScopeIndex:(long long)arg1 maxCount:(long long)arg2 deletedCount:(long long*)arg3 error:(id*)arg4;
- (id)dequeueNextBackgroundDownloadTasksForResourceType:(unsigned long long)arg1 maximumSize:(unsigned long long)arg2 maximumCount:(unsigned long long)arg3 error:(id*)arg4;
- (id)downloadTaskForLocalResource:(id)arg1 clientBundleID:(id)arg2 highPriority:(bool)arg3 proposedTaskIdentifier:(id)arg4 didStartHandler:(id /* block */)arg5 progressHandler:(id /* block */)arg6 completionHandler:(id /* block */)arg7;
- (bool)enqueueBackgroundDownloadTaskForResource:(id)arg1 downloading:(bool)arg2 error:(id*)arg3;
- (id)enumeratorForDownloadedResources;
- (bool)hasActiveOrQueuedBackgroundDownloadOperations;
- (id)initWithEngineStore:(id)arg1 name:(id)arg2;
- (bool)markBackgroundDownloadTaskForResourceAsSuceeded:(id)arg1 error:(id*)arg2;
- (bool)reenqueueBackgroundDownloadTaskForResource:(id)arg1 bumpRetryCount:(bool)arg2 didDiscard:(bool*)arg3 error:(id*)arg4;
- (bool)removeAllBackgroundDownloadTasksForItemWithScopedIdentifier:(id)arg1 error:(id*)arg2;
- (bool)removeBackgroundDownloadTaskForResource:(id)arg1 error:(id*)arg2;
- (bool)resetDequeuedBackgroundDownloadTasksWithError:(id*)arg1;
- (unsigned long long)scopeType;
- (id)status;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CPLResource.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudPhotoLibrary.framework/CPLResource.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary (3462.1.170)
 */

@interface CPLResource : NSObject <NSCopying, NSSecureCoding> {
    unsigned long long  _backgroundDownloadTaskIdentifier;
    bool  _canGenerateDerivative;
    CPLResourceIdentity * _identity;
    CPLScopedIdentifier * _itemScopedIdentifier;
    unsigned long long  _resourceType;
    unsigned long long  _sourceResourceType;
}

@property (nonatomic) bool canGenerateDerivative;
@property (nonatomic, retain) CPLResourceIdentity *identity;
@property (nonatomic, copy) NSString *itemIdentifier;
@property (nonatomic, copy) CPLScopedIdentifier *itemScopedIdentifier;
@property (nonatomic) unsigned long long resourceType;
@property (nonatomic) unsigned long long sourceResourceType;

// Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary

+ (unsigned long long)countOfResourceTypes;
+ (bool)cplShouldGenerateDerivatives;
+ (bool)cplShouldIgnorePropertyForCoding:(id)arg1;
+ (bool)cplShouldIgnorePropertyForEquality:(id)arg1;
+ (float)derivativeGenerationThreshold;
+ (id)descriptionForResourceType:(unsigned long long)arg1;
+ (void)enumerateResourceTypesWithBlock:(id /* block */)arg1;
+ (bool)hasPriorityBoostForResourceType:(unsigned long long)arg1;
+ (unsigned long long)maxPixelSizeForResourceType:(unsigned long long)arg1;
+ (id)normalizedResourcesFromResources:(id)arg1 resourcePerResourceType:(id*)arg2;
+ (unsigned long long)resourceTypeFromShortDecription:(id)arg1;
+ (id)shortDescriptionForResourceType:(unsigned long long)arg1;
+ (bool)shouldIgnoreResourceTypeOnUpload:(unsigned long long)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (unsigned long long)_backgroundDownloadTaskIdentifier;
- (void)_setBackgroundDownloadTaskIdentifier:(unsigned long long)arg1;
- (id)bestFileNameForResource;
- (bool)canGenerateDerivative;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)estimatedResourceSize;
- (unsigned long long)hash;
- (id)identity;
- (id)initWithCPLArchiver:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithResourceIdentity:(id)arg1 itemIdentifier:(id)arg2;
- (id)initWithResourceIdentity:(id)arg1 itemIdentifier:(id)arg2 resourceType:(unsigned long long)arg3;
- (id)initWithResourceIdentity:(id)arg1 itemScopedIdentifier:(id)arg2 resourceType:(unsigned long long)arg3;
- (bool)isEqual:(id)arg1;
- (bool)isTrackedForUpload;
- (id)itemIdentifier;
- (id)itemScopedIdentifier;
- (unsigned long long)resourceType;
- (void)setCanGenerateDerivative:(bool)arg1;
- (void)setIdentity:(id)arg1;
- (void)setItemIdentifier:(id)arg1;
- (void)setItemScopedIdentifier:(id)arg1;
- (void)setResourceType:(unsigned long long)arg1;
- (void)setSourceResourceType:(unsigned long long)arg1;
- (bool)shouldApplyDataProtection;
- (bool)shouldCopy;
- (unsigned long long)sourceResourceType;

// Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices

+ (id)imageDerivativeTypes;
+ (id)videoDerivativeTypes;

- (bool)deleteAfterUpload;
- (void)setDeleteAfterUpload:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

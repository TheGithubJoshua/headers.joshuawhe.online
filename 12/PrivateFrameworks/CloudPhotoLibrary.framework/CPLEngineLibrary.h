<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CPLEngineLibrary.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudPhotoLibrary.framework/CPLEngineLibrary.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary (3462.1.170)
 */

@interface CPLEngineLibrary : NSObject <CPLAbstractObject, CPLStatusDelegate> {
    NSHashTable * _attachedObjects;
    NSDate * _cachedLastQuarantineCountReportDate;
    NSURL * _clientLibraryBaseURL;
    bool  _closed;
    NSObject<OS_dispatch_queue> * _closingQueue;
    NSURL * _cloudLibraryResourceStorageURL;
    NSURL * _cloudLibraryStateStorageURL;
    NSArray * _components;
    CPLConfiguration * _configuration;
    NSString * _currentClosingComponentName;
    CPLEngineFeedbackManager * _feedback;
    NSString * _libraryIdentifier;
    bool  _libraryIsCorrupted;
    unsigned long long  _libraryOptions;
    NSError * _openingError;
    <CPLEngineLibraryOwner> * _owner;
    CPLPlatformObject * _platformObject;
    NSObject<OS_dispatch_queue> * _queue;
    CPLEngineScheduler * _scheduler;
    CPLStatus * _status;
    CPLEngineStore * _store;
    CPLEngineSyncManager * _syncManager;
    CPLEngineSystemMonitor * _systemMonitor;
    unsigned long long  _totalAssetCount;
    bool  _totalAssetCountHasBeenCalculated;
    CPLEngineTransport * _transport;
}

@property (nonatomic, readonly, copy) NSURL *clientLibraryBaseURL;
@property (nonatomic, readonly, copy) NSURL *cloudLibraryResourceStorageURL;
@property (nonatomic, readonly, copy) NSURL *cloudLibraryStateStorageURL;
@property (nonatomic, readonly) CPLConfiguration *configuration;
@property (readonly) NSString *currentClosingComponentName;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSDate *exitDeleteTime;
@property (nonatomic, readonly) CPLEngineFeedbackManager *feedback;
@property (nonatomic) bool hasChangesToProcess;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool iCloudLibraryClientVersionTooOld;
@property (nonatomic) bool iCloudLibraryExists;
@property (nonatomic) bool iCloudLibraryHasBeenWiped;
@property (nonatomic, readonly) NSDate *initialSyncDate;
@property (nonatomic) bool isExceedingQuota;
@property (nonatomic, readonly, copy) NSString *libraryIdentifier;
@property (nonatomic, readonly) bool libraryIsCorrupted;
@property (nonatomic, readonly) unsigned long long libraryOptions;
@property (nonatomic) <CPLEngineLibraryOwner> *owner;
@property (nonatomic, readonly) CPLPlatformObject *platformObject;
@property (nonatomic, readonly) CPLEngineScheduler *scheduler;
@property (nonatomic, readonly) CPLEngineStore *store;
@property (readonly) Class superclass;
@property (nonatomic, readonly) CPLEngineSyncManager *syncManager;
@property (nonatomic, readonly) CPLEngineSystemMonitor *systemMonitor;
@property (nonatomic, readonly) CPLEngineTransport *transport;

+ (id)platformImplementationProtocol;

- (void).cxx_destruct;
- (void)_closeNextComponent:(id)arg1 deactivate:(bool)arg2 lastError:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)_fillStatus:(id)arg1 forComponents:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_fillStatusArray:(id)arg1 forComponents:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)_openNextComponent:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_performBlockWithLibrary:(bool)arg1 enumerateAttachedObjects:(id /* block */)arg2;
- (void)_reportQuarantineCountIfNecessaryWithLastReportDate:(id)arg1;
- (void)_setCurrentClosingComponentName:(id)arg1;
- (void)_updateTotalAssetCountWithAssetCounts:(id)arg1;
- (void)attachObject:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)clientLibraryBaseURL;
- (void)closeAndDeactivate:(bool)arg1 completionHandler:(id /* block */)arg2;
- (id)cloudLibraryResourceStorageURL;
- (id)cloudLibraryStateStorageURL;
- (id)componentName;
- (id)configuration;
- (id)corruptionInfo;
- (id)currentClosingComponentName;
- (id)description;
- (void)detachObject:(id)arg1 withCompletionHandler:(id /* block */)arg2;
- (id)exitDeleteTime;
- (id)feedback;
- (void)forceFetchAccountFlags;
- (void)getListOfComponentsWithCompletionHandler:(id /* block */)arg1;
- (void)getStatusArrayForComponents:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)getStatusForComponents:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)hasAccountFlagsData;
- (bool)hasAssetCountOnServer;
- (bool)hasChangesToProcess;
- (bool)iCloudLibraryClientVersionTooOld;
- (bool)iCloudLibraryExists;
- (bool)iCloudLibraryHasBeenWiped;
- (id)initWithClientLibraryBaseURL:(id)arg1 cloudLibraryStateStorageURL:(id)arg2 cloudLibraryResourceStorageURL:(id)arg3 libraryIdentifier:(id)arg4 options:(unsigned long long)arg5;
- (id)initialSyncDate;
- (bool)isExceedingQuota;
- (id)libraryIdentifier;
- (bool)libraryIsCorrupted;
- (unsigned long long)libraryOptions;
- (void)notifyAttachedObjectsHasStatusChanges;
- (void)notifyAttachedObjectsPullQueueIsFull;
- (void)notifyAttachedObjectsResourceDidDowloadInBackground:(id)arg1;
- (void)notifyAttachedObjectsResourceDidFailBackgroundDownloadOfResource:(id)arg1;
- (void)notifyAttachedObjectsSizeOfResourcesToUploadDidChangeToSize:(unsigned long long)arg1 sizeOfOriginalResourcesToUpload:(unsigned long long)arg2 numberOfImages:(unsigned long long)arg3 numberOfVideos:(unsigned long long)arg4 numberOfOtherItems:(unsigned long long)arg5;
- (void)notifyAttachedObjectsUploadTask:(id)arg1 didFinishWithError:(id)arg2;
- (void)notifyAttachedObjectsUploadTask:(id)arg1 didProgress:(float)arg2;
- (void)notifyAttachedObjectsUploadTaskDidStart:(id)arg1;
- (void)openWithCompletionHandler:(id /* block */)arg1;
- (id)owner;
- (id)platformObject;
- (void)reportLibraryCorrupted;
- (void)reportQuarantineCountIfNecessary;
- (void)reportRadar:(unsigned long long)arg1;
- (void)reportUnsuccessfulSync;
- (void)requestAttachedLibrary;
- (id)scheduler;
- (void)setConnectedToNetwork:(bool)arg1;
- (void)setExitDeleteTime:(id)arg1;
- (void)setHasCellularBudget:(bool)arg1 hasBatteryBudget:(bool)arg2 isBudgetValid:(bool)arg3;
- (void)setHasChangesToProcess:(bool)arg1;
- (void)setICloudLibraryClientVersionTooOld:(bool)arg1;
- (void)setICloudLibraryExists:(bool)arg1;
- (void)setICloudLibraryHasBeenWiped:(bool)arg1;
- (void)setIsExceedingQuota:(bool)arg1;
- (void)setOwner:(id)arg1;
- (void)startSyncSession;
- (void)statusDidChange:(id)arg1;
- (id)store;
- (id)syncManager;
- (id)systemMonitor;
- (unsigned long long)totalAssetCountOnServer;
- (id)transport;
- (void)updateAccountFlagsData:(id)arg1;
- (void)updateAssetCountsFromServer:(id)arg1;
- (void)updateDisabledFeatures:(id)arg1;
- (void)updateInitialSyncDate:(id)arg1;
- (void)updateLastSuccessfullSyncDate:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

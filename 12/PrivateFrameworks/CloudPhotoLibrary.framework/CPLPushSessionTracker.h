<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CPLPushSessionTracker.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CloudPhotoLibrary.framework/CPLPushSessionTracker.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/CloudPhotoLibrary (3462.1.170)
 */

@interface CPLPushSessionTracker : NSObject {
    NSMutableArray * _addedRecords;
    bool  _applyHasBeenSuccessful;
    NSMutableArray * _changesWithResourceChanges;
    bool  _checkScopeIdentifier;
    NSMutableArray * _deletedRecordScopedIdentifiers;
    bool  _diffHasBeenSuccessful;
    CPLChangeBatch * _diffedBatch;
    bool  _diffedBatchCanLowerQuota;
    bool  _expandHasBeenSuccessful;
    CPLChangeBatch * _expandedBatch;
    NSMutableDictionary * _fullRecords;
    unsigned long long  _ignoredRecordCount;
    CPLChangeBatch * _incomingBatch;
    NSMutableDictionary * _incomingBatchRecordPerScopedIdentifiers;
    NSMutableSet * _invalidScopeIdentifiers;
    NSDate * _now;
    CPLPushChangeTasks * _pushChangeTasks;
    NSMutableDictionary * _resourcesToUpload;
    CPLEngineScopeStorage * _scopes;
    CPLEngineStore * _store;
    NSMutableDictionary * _storedClientRecords;
    NSMutableDictionary * _storedCloudRecords;
    NSMutableSet * _unquarantinedRecordScopedIdentifiers;
    NSMutableArray * _updatedRecords;
    NSMutableSet * _validScopeIdentifiers;
}

@property (nonatomic, readonly) NSArray *addedRecords;
@property (nonatomic, readonly) bool applyHasBeenSuccessful;
@property (nonatomic, readonly) NSArray *deletedRecordScopedIdentifiers;
@property (nonatomic, readonly) bool diffHasBeenSuccessful;
@property (nonatomic, readonly) CPLChangeBatch *diffedBatch;
@property (nonatomic, readonly) bool diffedBatchCanLowerQuota;
@property (nonatomic, readonly) bool expandHasBeenSuccessful;
@property (nonatomic, readonly) CPLChangeBatch *expandedBatch;
@property (nonatomic, readonly) bool hasPushChangeTasks;
@property (nonatomic, readonly) unsigned long long ignoredRecordCount;
@property (nonatomic, readonly) CPLChangeBatch *incomingBatch;
@property (nonatomic, copy) NSDate *now;
@property (nonatomic, readonly) CPLPushChangeTasks *pushChangeTasks;
@property (nonatomic, readonly) NSDictionary *resourcesToUpload;
@property (nonatomic, readonly) CPLEngineStore *store;
@property (nonatomic, readonly) NSSet *unquarantinedRecordScopedIdentifiers;
@property (nonatomic, readonly) NSArray *updatedRecords;

- (void).cxx_destruct;
- (id)_resourceIdentitiesFromChange:(id)arg1;
- (id)addedRecords;
- (bool)applyChangesToClientCacheWithError:(id*)arg1;
- (bool)applyHasBeenSuccessful;
- (bool)checkScopeIdentifier:(id)arg1;
- (bool)computeDiff;
- (bool)computeExpandedBatchWithError:(id*)arg1;
- (id)deletedRecordIdentifiers;
- (id)deletedRecordScopedIdentifiers;
- (bool)diffHasBeenSuccessful;
- (id)diffedBatch;
- (bool)diffedBatchCanLowerQuota;
- (void)enumerateDiffWithBlock:(id /* block */)arg1;
- (bool)expandHasBeenSuccessful;
- (id)expandedBatch;
- (bool)hasClientRecordWithLocalScopedIdentifier:(id)arg1;
- (bool)hasCloudRecordWithLocalScopedIdentifier:(id)arg1;
- (bool)hasPushChangeTasks;
- (unsigned long long)ignoredRecordCount;
- (id)incomingBatch;
- (id)initWithIncomingBatch:(id)arg1 store:(id)arg2 error:(id*)arg3;
- (bool)knowsClientRecordWithScopedIdentifier:(id)arg1;
- (id)now;
- (id)pushChangeTasks;
- (id)resourceIdentitiesForRecordWithLocalScopedIdentifier:(id)arg1;
- (id)resourcesToUpload;
- (void)setNow:(id)arg1;
- (bool)shouldCancelSyncSessionTryingToUploadChange:(id)arg1;
- (id)store;
- (id)storedClientRecordWithLocalScopedIdentifier:(id)arg1;
- (id)storedCloudRecordWithLocalScopedIdentifier:(id)arg1;
- (id)unquarantinedRecordScopedIdentifiers;
- (id)updatedRecords;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

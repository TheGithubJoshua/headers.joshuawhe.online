<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUQuickControlColorView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUQuickControlColorView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUQuickControlColorView : UIView <HUQuickControlColorPaletteViewInteractionDelegate, HUQuickControlColorPickerViewInteractionDelegate, HUQuickControlInteractiveView> {
    unsigned long long  _activeMode;
    double  _circleRadius;
    HFColorPalette * _colorPalette;
    HUColorPaletteView * _colorPaletteView;
    HUQuickControlSegmentedControl * _colorPickerModeSegmentedControl;
    HUColorPickerView * _colorPickerView;
    <HUQuickControlColorViewInteractionDelegate> * _interactionDelegate;
    HUQuickControlColorViewProfile * _profile;
    HFColorPaletteColor * _selectedColor;
    bool  _showPickerModeControl;
    HUQuickControlCircleButton * _switchButton;
    NSLayoutConstraint * _switchButtonHeightConstraint;
    NSLayoutConstraint * _switchButtonWidthConstraint;
}

@property (nonatomic) unsigned long long activeMode;
@property (nonatomic, readonly) UIView<HUQuickControlInteractiveView> *activeView;
@property (nonatomic) double circleRadius;
@property (nonatomic, retain) HFColorPalette *colorPalette;
@property (nonatomic, retain) HUColorPaletteView *colorPaletteView;
@property (nonatomic, retain) HUQuickControlSegmentedControl *colorPickerModeSegmentedControl;
@property (nonatomic, retain) HUColorPickerView *colorPickerView;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) <HUQuickControlColorViewInteractionDelegate> *interactionDelegate;
@property (nonatomic, copy) HUQuickControlColorViewProfile *profile;
@property (nonatomic, retain) id secondaryValue;
@property (nonatomic, retain) HFColorPaletteColor *selectedColor;
@property (getter=isSelectedColorInPalette, nonatomic, readonly) bool selectedColorInPalette;
@property (nonatomic) bool showPickerModeControl;
@property (readonly) Class superclass;
@property (nonatomic, retain) HUQuickControlCircleButton *switchButton;
@property (nonatomic, retain) NSLayoutConstraint *switchButtonHeightConstraint;
@property (nonatomic, retain) NSLayoutConstraint *switchButtonWidthConstraint;
@property (getter=isUserInteractionActive, nonatomic, readonly) bool userInteractionActive;
@property (nonatomic, retain) id value;

- (void).cxx_destruct;
- (id)_allControlViews;
- (void)_configureConstraints;
- (void)_createColorPickerModeSegmentedControlIfNecessary;
- (double)_switchButtonFontSize;
- (void)_switchButtonTapped:(id)arg1;
- (void)_updateColorPickerModeSwitchView;
- (void)_updateSwitchButtonColor;
- (void)_updateSwitchButtonText;
- (unsigned long long)activeMode;
- (id)activeView;
- (void)beginUserInteractionWithFirstTouchGestureRecognizer:(id)arg1;
- (double)circleRadius;
- (id)colorPalette;
- (id)colorPaletteView;
- (id)colorPickerModeSegmentedControl;
- (id)colorPickerView;
- (void)controlView:(id)arg1 colorPaletteDidChange:(id)arg2;
- (void)controlView:(id)arg1 colorPickerModeDidChange:(unsigned long long)arg2;
- (void)controlView:(id)arg1 interactionStateDidChange:(bool)arg2 forFirstTouch:(bool)arg3;
- (void)controlView:(id)arg1 valueDidChange:(id)arg2;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithProfile:(id)arg1;
- (id)initWithProfile:(id)arg1 colorPalette:(id)arg2;
- (id)interactionDelegate;
- (id)intrinsicSizeDescriptorForControlSize:(unsigned long long)arg1;
- (bool)isSelectedColorInPalette;
- (bool)isUserInteractionActive;
- (void)layoutSubviews;
- (id)profile;
- (id)selectedColor;
- (void)setActiveMode:(unsigned long long)arg1;
- (void)setCircleRadius:(double)arg1;
- (void)setColorPalette:(id)arg1;
- (void)setColorPaletteView:(id)arg1;
- (void)setColorPickerModeSegmentedControl:(id)arg1;
- (void)setColorPickerView:(id)arg1;
- (void)setInteractionDelegate:(id)arg1;
- (void)setProfile:(id)arg1;
- (void)setSelectedColor:(id)arg1;
- (void)setShowPickerModeControl:(bool)arg1;
- (void)setSwitchButton:(id)arg1;
- (void)setSwitchButtonHeightConstraint:(id)arg1;
- (void)setSwitchButtonWidthConstraint:(id)arg1;
- (void)setValue:(id)arg1;
- (bool)showPickerModeControl;
- (id)switchButton;
- (id)switchButtonHeightConstraint;
- (id)switchButtonWidthConstraint;
- (void)traitCollectionDidChange:(id)arg1;
- (id)value;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

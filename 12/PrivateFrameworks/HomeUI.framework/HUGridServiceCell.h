<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUGridServiceCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUGridServiceCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUGridServiceCell : HUGridCell <HUAccessoryViewCellProtocol> {
    UIView * _accessoryView;
    UIActivityIndicatorView * _activityIndicator;
    UILabel * _coloredDescriptionLabel;
    UIVisualEffectView * _descriptionLabelEffectView;
    HUVisualEffectContainerView * _exclamationView;
    bool  _hasUpdatedUISinceLastReuse;
    HUIconView * _iconView;
    UIView * _overrideAccessoryView;
    HFItem * _serviceItem;
    HUGridServiceCellTextView * _serviceTextView;
    bool  _shouldColorDescription;
    bool  _shouldShowLoadingState;
    bool  _shouldShowRoomName;
    <NACancelable> * _showProgressIndicatorAfterDelayToken;
    <NACancelable> * _showUpdatingStateAfterDelayToken;
    bool  _showingProgressIndicator;
    bool  _showingUpdatingState;
}

@property (nonatomic, retain) UIView *accessoryView;
@property (nonatomic, retain) UIActivityIndicatorView *activityIndicator;
@property (nonatomic, retain) UILabel *coloredDescriptionLabel;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIVisualEffectView *descriptionLabelEffectView;
@property (nonatomic) bool disableContinuousIconAnimation;
@property (nonatomic, retain) HUVisualEffectContainerView *exclamationView;
@property (nonatomic) bool hasUpdatedUISinceLastReuse;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HUIconView *iconView;
@property (nonatomic, retain) HUGridServiceCellLayoutOptions *layoutOptions;
@property (nonatomic, retain) UIView *overrideAccessoryView;
@property (nonatomic, retain) HFItem *serviceItem;
@property (nonatomic, retain) HUGridServiceCellTextView *serviceTextView;
@property (nonatomic) bool shouldColorDescription;
@property (nonatomic) bool shouldShowLoadingState;
@property (nonatomic) bool shouldShowRoomName;
@property (nonatomic) bool showProgressIndicatorAfterDelay;
@property (nonatomic, retain) <NACancelable> *showProgressIndicatorAfterDelayToken;
@property (nonatomic) bool showUpdatingStateAfterDelay;
@property (nonatomic, retain) <NACancelable> *showUpdatingStateAfterDelayToken;
@property (nonatomic) bool showingProgressIndicator;
@property (nonatomic) bool showingUpdatingState;
@property (readonly) Class superclass;

+ (id)_iconTintColor;
+ (Class)layoutOptionsClass;

- (void).cxx_destruct;
- (void)_createExclamationViewIfNecessary;
- (id)_descriptionTextAttributesWithColor:(id)arg1;
- (void)_setupServiceCell;
- (id)_textConfiguration;
- (void)_updateAccessoryView;
- (void)_updateExclamationViewColor;
- (void)_updateIconAnimated:(bool)arg1;
- (void)_updateSecondaryContentDisplayStyle;
- (void)_updateText;
- (id)accessoryView;
- (id)activityIndicator;
- (id)coloredDescriptionLabel;
- (id)descriptionLabelEffectView;
- (bool)disableContinuousIconAnimation;
- (void)displayStyleDidChange;
- (id)exclamationView;
- (bool)hasUpdatedUISinceLastReuse;
- (id)iconView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)item;
- (void)layoutOptionsDidChange;
- (void)layoutSubviews;
- (id)overrideAccessoryView;
- (void)prepareForReuse;
- (id)serviceItem;
- (id)serviceTextView;
- (void)setAccessoryView:(id)arg1;
- (void)setActivityIndicator:(id)arg1;
- (void)setColoredDescriptionLabel:(id)arg1;
- (void)setDescriptionLabelEffectView:(id)arg1;
- (void)setDisableContinuousIconAnimation:(bool)arg1;
- (void)setExclamationView:(id)arg1;
- (void)setHasUpdatedUISinceLastReuse:(bool)arg1;
- (void)setIconView:(id)arg1;
- (void)setItem:(id)arg1;
- (void)setOverrideAccessoryView:(id)arg1;
- (void)setServiceItem:(id)arg1;
- (void)setServiceTextView:(id)arg1;
- (void)setShouldColorDescription:(bool)arg1;
- (void)setShouldShowLoadingState:(bool)arg1;
- (void)setShouldShowRoomName:(bool)arg1;
- (void)setShowProgressIndicatorAfterDelay:(bool)arg1;
- (void)setShowProgressIndicatorAfterDelayToken:(id)arg1;
- (void)setShowUpdatingStateAfterDelay:(bool)arg1;
- (void)setShowUpdatingStateAfterDelayToken:(id)arg1;
- (void)setShowingProgressIndicator:(bool)arg1;
- (void)setShowingUpdatingState:(bool)arg1;
- (bool)shouldColorDescription;
- (bool)shouldShowLoadingState;
- (bool)shouldShowRoomName;
- (bool)showProgressIndicatorAfterDelay;
- (id)showProgressIndicatorAfterDelayToken;
- (bool)showUpdatingStateAfterDelay;
- (id)showUpdatingStateAfterDelayToken;
- (bool)showingProgressIndicator;
- (bool)showingUpdatingState;
- (void)updateUIWithAnimation:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

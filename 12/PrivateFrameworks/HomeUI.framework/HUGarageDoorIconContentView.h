<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUGarageDoorIconContentView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUGarageDoorIconContentView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUGarageDoorIconContentView : HUPrimaryStateIconContentView {
    HUGarageDoorStateTransition * _activeTransition;
    UIVisualEffectView * _bottomPanelHingeView;
    HUShapeLayerView * _bottomPanelViewWithHandle;
    HUShapeLayerView * _bottomPanelViewWithoutHandle;
    HUVisualEffectContainerView * _buildingContainerView;
    HUShapeLayerView * _buildingView;
    UIVisualEffectView * _carContainerView;
    HUShapeLayerView * _carView;
    bool  _clipBottomPanelShapesToBounds;
    UIView * _doorContainerView;
    UIView * _doorHingeView;
    UIView * _doorView;
    UIVisualEffectView * _middlePanelHingeView;
    HUShapeLayerView * _middlePanelView;
    bool  _open;
    UIVisualEffectView * _topPanelHingeView;
    HUShapeLayerView * _topPanelView;
}

@property (nonatomic, retain) HUGarageDoorStateTransition *activeTransition;
@property (nonatomic, retain) UIVisualEffectView *bottomPanelHingeView;
@property (nonatomic, retain) HUShapeLayerView *bottomPanelViewWithHandle;
@property (nonatomic, retain) HUShapeLayerView *bottomPanelViewWithoutHandle;
@property (nonatomic, retain) HUVisualEffectContainerView *buildingContainerView;
@property (nonatomic, retain) HUShapeLayerView *buildingView;
@property (nonatomic, retain) UIVisualEffectView *carContainerView;
@property (nonatomic, retain) HUShapeLayerView *carView;
@property (nonatomic) bool clipBottomPanelShapesToBounds;
@property (nonatomic, retain) UIView *doorContainerView;
@property (nonatomic, retain) UIView *doorHingeView;
@property (nonatomic, retain) UIView *doorView;
@property (nonatomic, retain) UIVisualEffectView *middlePanelHingeView;
@property (nonatomic, retain) HUShapeLayerView *middlePanelView;
@property (getter=isOpen, nonatomic) bool open;
@property (nonatomic, retain) UIVisualEffectView *topPanelHingeView;
@property (nonatomic, retain) HUShapeLayerView *topPanelView;

+ (id)_pathForBottomDoorPanelWithHandleForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (id)_pathForMiddleDoorPanelWithHandleForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (double)_referenceHeightForPanelAtPosition:(unsigned long long)arg1 open:(bool)arg2;
+ (double)_referenceOriginYForPanelAtPosition:(unsigned long long)arg1 open:(bool)arg2;
+ (double)_scaleFactorForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 referenceSize:(struct CGSize { double x1; double x2; })arg2;
+ (id)buildingPathForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (id)carPathForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
+ (id)pathForPanelAtPosition:(unsigned long long)arg1 bounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 showHandle:(bool)arg3;

- (void).cxx_destruct;
- (id)_createPanelViewForPosition:(unsigned long long)arg1 showHandle:(bool)arg2;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })_doorHingeSublayerTransformForOpenState:(bool)arg1;
- (void)_enumeratePanelViewsWithBlock:(id /* block */)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForPanelAtPosition:(unsigned long long)arg1 open:(bool)arg2 relativeToHinge:(bool)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForPanelHingeAtPosition:(unsigned long long)arg1 open:(bool)arg2;
- (struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })_panelHingeSublayerTransformWithOpenState:(bool)arg1;
- (id)_panelViewsForPosition:(unsigned long long)arg1;
- (double)_referenceScaleFactor;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })_referenceScaleTransform;
- (void)_updateCarLayoutForOpenState:(bool)arg1;
- (void)_updateLayoutForOpenState:(bool)arg1 animated:(bool)arg2;
- (void)_updatePanelLayoutForOpenState:(bool)arg1;
- (id)activeTransition;
- (id)bottomPanelHingeView;
- (id)bottomPanelViewWithHandle;
- (id)bottomPanelViewWithoutHandle;
- (id)buildingContainerView;
- (id)buildingView;
- (id)carContainerView;
- (id)carView;
- (bool)clipBottomPanelShapesToBounds;
- (id)doorContainerView;
- (id)doorHingeView;
- (id)doorView;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isOpen;
- (void)layoutSubviews;
- (id)managedVisualEffectViews;
- (id)middlePanelHingeView;
- (id)middlePanelView;
- (id)panelHingeViews;
- (void)setActiveTransition:(id)arg1;
- (void)setBottomPanelHingeView:(id)arg1;
- (void)setBottomPanelViewWithHandle:(id)arg1;
- (void)setBottomPanelViewWithoutHandle:(id)arg1;
- (void)setBuildingContainerView:(id)arg1;
- (void)setBuildingView:(id)arg1;
- (void)setCarContainerView:(id)arg1;
- (void)setCarView:(id)arg1;
- (void)setClipBottomPanelShapesToBounds:(bool)arg1;
- (void)setDoorContainerView:(id)arg1;
- (void)setDoorHingeView:(id)arg1;
- (void)setDoorView:(id)arg1;
- (void)setMiddlePanelHingeView:(id)arg1;
- (void)setMiddlePanelView:(id)arg1;
- (void)setOpen:(bool)arg1;
- (void)setTopPanelHingeView:(id)arg1;
- (void)setTopPanelView:(id)arg1;
- (id)topPanelHingeView;
- (id)topPanelView;
- (void)updateColorsForDisplayStyle:(unsigned long long)arg1;
- (void)updateIconFromState:(long long)arg1 toState:(long long)arg2 animated:(bool)arg3;
- (bool)wantsManagedVibrancyEffect;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

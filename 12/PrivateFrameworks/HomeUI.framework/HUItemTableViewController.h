<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUItemTableViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUItemTableViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUItemTableViewController : HUTableViewController <HFExecutionEnvironmentObserver, HFItemManagerDelegate, HUItemManagerContainer, HUItemPresentationContainer, HUPreloadableViewController> {
    unsigned long long  _appearState;
    bool  _automaticallyUpdatesViewControllerTitle;
    <NACancelable> * _deferredVisibilityUpdate;
    NSMutableArray * _foregroundUpdateFutures;
    HUGridLayoutOptions * _gridLayoutOptions;
    bool  _hasFinishedInitialLoad;
    bool  _hasForcedLoadingVisibleCells;
    NSMutableSet * _internalItemModuleControllers;
    HFItemManager * _itemManager;
    HUItemTableViewScrollDestination * _pendingScrollDestination;
    NSMutableSet * _registeredCellClasses;
    NSMapTable * _textFieldToCellMap;
    bool  _viewHasAppeared;
    bool  _visibilityUpdatesEnabled;
    bool  _wantsPreferredContentSize;
}

@property (nonatomic) unsigned long long appearState;
@property (nonatomic) bool automaticallyUpdatesViewControllerTitle;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) <NACancelable> *deferredVisibilityUpdate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableArray *foregroundUpdateFutures;
@property (nonatomic, retain) HUGridLayoutOptions *gridLayoutOptions;
@property (nonatomic) bool hasFinishedInitialLoad;
@property (nonatomic) bool hasForcedLoadingVisibleCells;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HFItem *hu_presentedItem;
@property (nonatomic, readonly) NSMutableSet *internalItemModuleControllers;
@property (nonatomic, retain) HFItemManager *itemManager;
@property (nonatomic, retain) HUItemTableViewScrollDestination *pendingScrollDestination;
@property (nonatomic, readonly) NSMutableSet *registeredCellClasses;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSMapTable *textFieldToCellMap;
@property (nonatomic) bool viewHasAppeared;
@property (nonatomic) bool visibilityUpdatesEnabled;
@property (nonatomic) bool wantsPreferredContentSize;

+ (bool)adoptsDefaultGridLayoutMargins;
+ (unsigned long long)updateMode;

- (void).cxx_destruct;
- (void)_dispatchUpdateForCell:(id)arg1 item:(id)arg2 indexPath:(id)arg3 animated:(bool)arg4;
- (id)_itemForTextField:(id)arg1;
- (void)_performCommonUpdateForCell:(id)arg1 item:(id)arg2 indexPath:(id)arg3 animated:(bool)arg4;
- (long long)_rowAnimationForOperationType:(unsigned long long)arg1 item:(id)arg2;
- (void)_scrollToDestination:(id)arg1;
- (bool)_shouldHideFooterForSection:(long long)arg1;
- (bool)_shouldHideHeaderForSection:(long long)arg1;
- (void)_updateLayoutMarginsForCells:(id)arg1;
- (void)_updateTableHeaderAndFooter;
- (void)_updateTitle;
- (id)_visibleCellForItem:(id)arg1;
- (bool)alwaysUseDeltaTableViewUpdatesAfterViewHasAppeared;
- (unsigned long long)appearState;
- (unsigned long long)automaticDisablingReasonsForItem:(id)arg1;
- (bool)automaticallyUpdatesViewControllerTitle;
- (id)buildItemModuleControllerForModule:(id)arg1;
- (bool)bypassInitialItemUpdateReload;
- (Class)cellClassForItem:(id)arg1 indexPath:(id)arg2;
- (id)childViewControllersToPreload;
- (id)currentTextForTextField:(id)arg1 item:(id)arg2;
- (id)defaultTextForTextField:(id)arg1 item:(id)arg2;
- (id)deferredVisibilityUpdate;
- (void)executionEnvironmentRunningStateDidChange:(id)arg1;
- (id)foregroundUpdateFutures;
- (id)gridLayoutOptions;
- (bool)hasFinishedInitialLoad;
- (bool)hasForcedLoadingVisibleCells;
- (void)highlightItemAnimated:(id)arg1;
- (void)highlightItemAnimated:(id)arg1 duration:(double)arg2;
- (id)hu_preloadContent;
- (id)hu_presentedItem;
- (id)initWithItemManager:(id)arg1 tableViewStyle:(long long)arg2;
- (id)initWithStyle:(long long)arg1;
- (id)internalItemModuleControllers;
- (id)itemManager;
- (void)itemManager:(id)arg1 didChangeOverallLoadingState:(unsigned long long)arg2;
- (void)itemManager:(id)arg1 didChangeSourceItem:(id)arg2;
- (void)itemManager:(id)arg1 didInsertItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemManager:(id)arg1 didInsertSections:(id)arg2;
- (void)itemManager:(id)arg1 didMoveItem:(id)arg2 fromIndexPath:(id)arg3 toIndexPath:(id)arg4;
- (void)itemManager:(id)arg1 didMoveSection:(long long)arg2 toSection:(long long)arg3;
- (void)itemManager:(id)arg1 didRemoveItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemManager:(id)arg1 didRemoveSections:(id)arg2;
- (void)itemManager:(id)arg1 didUpdateItemModules:(id)arg2;
- (void)itemManager:(id)arg1 didUpdateResultsForItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemManager:(id)arg1 didUpdateResultsForSourceItem:(id)arg2;
- (id)itemManager:(id)arg1 futureToUpdateItems:(id)arg2 itemUpdateOptions:(id)arg3;
- (void)itemManager:(id)arg1 performUpdateRequest:(id)arg2;
- (id)itemModuleControllers;
- (id)itemTableFooterMessage;
- (id)itemTableFooterView;
- (id)itemTableHeaderMessage;
- (id)itemTableHeaderView;
- (id)moduleController:(id)arg1 dismissViewControllerForRequest:(id)arg2;
- (id)moduleController:(id)arg1 presentViewControllerForRequest:(id)arg2;
- (id)moduleControllerForItem:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)pendingScrollDestination;
- (id)placeholderTextForTextField:(id)arg1 item:(id)arg2;
- (void)recursivelyDisableItemUpdates:(bool)arg1 withReason:(id)arg2;
- (id)registeredCellClasses;
- (void)scrollToItem:(id)arg1 animated:(bool)arg2;
- (void)setAppearState:(unsigned long long)arg1;
- (void)setAutomaticallyUpdatesViewControllerTitle:(bool)arg1;
- (void)setDeferredVisibilityUpdate:(id)arg1;
- (void)setForegroundUpdateFutures:(id)arg1;
- (void)setGridLayoutOptions:(id)arg1;
- (void)setHasFinishedInitialLoad:(bool)arg1;
- (void)setHasForcedLoadingVisibleCells:(bool)arg1;
- (void)setItemManager:(id)arg1;
- (void)setPendingScrollDestination:(id)arg1;
- (void)setViewHasAppeared:(bool)arg1;
- (void)setVisibilityUpdatesEnabled:(bool)arg1;
- (void)setWantsPreferredContentSize:(bool)arg1;
- (void)setupCell:(id)arg1 forItem:(id)arg2 indexPath:(id)arg3;
- (bool)shouldHideFooterBelowSection:(long long)arg1;
- (bool)shouldHideHeaderAboveSection:(long long)arg1;
- (bool)shouldHideSeparatorsForCell:(id)arg1 indexPath:(id)arg2;
- (bool)shouldManageTextFieldForItem:(id)arg1;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)textDidChange:(id)arg1 forTextField:(id)arg2 item:(id)arg3;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1 item:(id)arg2;
- (void)textFieldDidChange:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1 item:(id)arg2;
- (id)textFieldForVisibleItem:(id)arg1;
- (bool)textFieldShouldClear:(id)arg1;
- (bool)textFieldShouldReturn:(id)arg1;
- (id)textFieldToCellMap;
- (void)updateCell:(id)arg1 forItem:(id)arg2 indexPath:(id)arg3 animated:(bool)arg4;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (bool)viewHasAppeared;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)visibilityUpdatesEnabled;
- (bool)wantsPreferredContentSize;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUCameraStreamContentViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUCameraStreamContentViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUCameraStreamContentViewController : UIViewController <HFItemManagerDelegate, PGPictureInPictureViewController> {
    HFCameraAudioManager * _cameraAudioManager;
    HUCameraView * _cameraView;
    struct UIOffset { 
        double horizontal; 
        double vertical; 
    }  _defaultCameraBadgeOffset;
    bool  _displayInterrupted;
    unsigned long long  _displayMode;
    HFItemManager * _itemManager;
    bool  _showActivityIndicatorWhenLoading;
    bool  _streaming;
    unsigned long long  _viewAppearanceState;
    unsigned long long  _visibilityState;
}

@property (nonatomic, retain) HFCameraAudioManager *cameraAudioManager;
@property (nonatomic) struct UIOffset { double x1; double x2; } cameraBadgeOffset;
@property (nonatomic, readonly) UIView *cameraOverlaySnapshot;
@property (nonatomic, readonly) HUCameraView *cameraView;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } cameraViewFrame;
@property (nonatomic, readonly) UIView *cameraViewSnapshot;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) struct UIOffset { double x1; double x2; } defaultCameraBadgeOffset;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } derivedCameraViewFrame;
@property (readonly, copy) NSString *description;
@property (getter=isDisplayInterrupted, nonatomic) bool displayInterrupted;
@property (nonatomic) unsigned long long displayMode;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) HFItemManager *itemManager;
@property (nonatomic, readonly) bool shouldShowAlternateActionButtonImage;
@property (nonatomic, readonly) bool shouldShowLoadingIndicator;
@property (nonatomic) bool showActivityIndicatorWhenLoading;
@property (getter=isStreaming, nonatomic) bool streaming;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long viewAppearanceState;
@property (nonatomic) unsigned long long visibilityState;

- (void).cxx_destruct;
- (id)_cameraItem;
- (id)_cameraManager;
- (bool)_isStreaming;
- (id)_preferredCameraSource;
- (unsigned long long)_streamState;
- (void)_updateCameraViewsIncludingOverlayContent:(bool)arg1;
- (void)_updateDigitalZoomState;
- (void)_updateIdleTimer;
- (void)_updatePreferredContentSize;
- (void)_updateStreamingState;
- (void)actionButtonTapped;
- (id)cameraAudioManager;
- (struct UIOffset { double x1; double x2; })cameraBadgeOffset;
- (id)cameraOverlaySnapshot;
- (id)cameraView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })cameraViewFrame;
- (id)cameraViewSnapshot;
- (void)dealloc;
- (struct UIOffset { double x1; double x2; })defaultCameraBadgeOffset;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })derivedCameraViewFrame;
- (void)didAnimatePictureInPictureStart;
- (void)didAnimatePictureInPictureStop;
- (unsigned long long)displayMode;
- (id)initWithCameraItem:(id)arg1;
- (bool)isDisplayInterrupted;
- (bool)isStreaming;
- (id)itemManager;
- (void)itemManager:(id)arg1 didUpdateResultsForSourceItem:(id)arg2;
- (void)setCameraAudioManager:(id)arg1;
- (void)setCameraBadgeOffset:(struct UIOffset { double x1; double x2; })arg1;
- (void)setDefaultCameraBadgeOffset:(struct UIOffset { double x1; double x2; })arg1;
- (void)setDisplayInterrupted:(bool)arg1;
- (void)setDisplayMode:(unsigned long long)arg1;
- (void)setItemManager:(id)arg1;
- (void)setShowActivityIndicatorWhenLoading:(bool)arg1;
- (void)setStreaming:(bool)arg1;
- (void)setViewAppearanceState:(unsigned long long)arg1;
- (void)setVisibilityState:(unsigned long long)arg1;
- (bool)shouldShowAlternateActionButtonImage;
- (bool)showActivityIndicatorWhenLoading;
- (unsigned long long)viewAppearanceState;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (unsigned long long)visibilityState;
- (void)willAnimatePictureInPictureStart;
- (void)willAnimatePictureInPictureStop;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUGridCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUGridCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUGridCell : UICollectionViewCell <HUGridCellProtocol> {
    bool  _cellContentsHidden;
    UIVisualEffect * _contentEffect;
    HUGridCellBackgroundView * _gridBackgroundView;
    UIVisualEffectView * _gridForegroundView;
    HFItem * _item;
    HUGridCellLayoutOptions * _layoutOptions;
    long long  _primaryState;
    bool  _rearranging;
    double  _secondaryContentDimmingFactor;
    UIVisualEffect * _secondaryContentEffect;
}

@property (nonatomic, readonly) unsigned long long backgroundState;
@property (getter=areCellContentsHidden, nonatomic) bool cellContentsHidden;
@property (nonatomic, retain) UIVisualEffect *contentEffect;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) HUGridCellBackgroundView *gridBackgroundView;
@property (nonatomic, readonly) UIView *gridForegroundContentView;
@property (nonatomic, retain) UIVisualEffectView *gridForegroundView;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) unsigned long long iconDisplayStyle;
@property (nonatomic, retain) HFItem *item;
@property (nonatomic, retain) HUGridCellLayoutOptions *layoutOptions;
@property (nonatomic) long long primaryState;
@property (getter=isRearranging, nonatomic) bool rearranging;
@property (nonatomic) <HUResizableCellDelegate> *resizingDelegate;
@property (nonatomic) double secondaryContentDimmingFactor;
@property (nonatomic, retain) UIVisualEffect *secondaryContentEffect;
@property (readonly) Class superclass;

+ (id)_jitterPositionAnimation;
+ (id)_jitterTransformAnimationWithAspectRatio:(double)arg1;
+ (Class)layoutOptionsClass;

- (void).cxx_destruct;
- (void)_setupCommonCellAppearance;
- (void)_updateForegroundStyle;
- (void)_updateTintColorSettingsForSubviewsOfView:(id)arg1 desiredDisplayStyle:(unsigned long long)arg2;
- (void)applyLayoutAttributes:(id)arg1;
- (bool)areCellContentsHidden;
- (unsigned long long)backgroundState;
- (id)contentEffect;
- (void)displayStyleDidChange;
- (id)gridBackgroundView;
- (id)gridForegroundContentView;
- (id)gridForegroundView;
- (unsigned long long)iconDisplayStyle;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isRearranging;
- (id)item;
- (id)layoutOptions;
- (void)layoutOptionsDidChange;
- (void)layoutSubviews;
- (id)preferredLayoutAttributesFittingAttributes:(id)arg1;
- (void)prepareForReuse;
- (long long)primaryState;
- (double)secondaryContentDimmingFactor;
- (id)secondaryContentEffect;
- (void)setCellContentsHidden:(bool)arg1;
- (void)setContentEffect:(id)arg1;
- (void)setGridBackgroundView:(id)arg1;
- (void)setGridForegroundView:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setItem:(id)arg1;
- (void)setLayoutOptions:(id)arg1;
- (void)setPrimaryState:(long long)arg1;
- (void)setRearranging:(bool)arg1;
- (void)setSecondaryContentDimmingFactor:(double)arg1;
- (void)setSecondaryContentEffect:(id)arg1;
- (void)updateUIWithAnimation:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUIconCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUIconCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUIconCell : UITableViewCell <HUCellProtocol, HUDisableableCellProtocol> {
    UIView * _containerView;
    HUIconCellContentMetrics * _contentMetrics;
    bool  _disabled;
    NSArray * _dynamicConstraints;
    bool  _hideIcon;
    double  _iconAlpha;
    unsigned long long  _iconDisplayStyle;
    UIColor * _iconForegroundColor;
    bool  _iconForegroundColorFollowsTintColor;
    NSArray * _iconSpacingConstraints;
    UILayoutGuide * _iconSpacingLayoutGuide;
    bool  _iconTintColorFollowsDisabledState;
    HUIconView * _iconView;
    HFItem * _item;
    NSArray * _staticConstraints;
}

@property (nonatomic, retain) UIView *containerView;
@property (nonatomic, retain) HUIconCellContentMetrics *contentMetrics;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UILabel *detailTextLabel;
@property (nonatomic) bool disableContinuousIconAnimation;
@property (getter=isDisabled, nonatomic) bool disabled;
@property (nonatomic, retain) NSArray *dynamicConstraints;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hideIcon;
@property (nonatomic) double iconAlpha;
@property (nonatomic) unsigned long long iconDisplayStyle;
@property (nonatomic, retain) UIColor *iconForegroundColor;
@property (nonatomic) bool iconForegroundColorFollowsTintColor;
@property (nonatomic, retain) NSArray *iconSpacingConstraints;
@property (nonatomic, retain) UILayoutGuide *iconSpacingLayoutGuide;
@property (nonatomic) bool iconTintColorFollowsDisabledState;
@property (nonatomic, retain) HUIconView *iconView;
@property (nonatomic, retain) HFItem *item;
@property (nonatomic) <HUResizableCellDelegate> *resizingDelegate;
@property (nonatomic, retain) NSArray *staticConstraints;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UILabel *textLabel;

+ (bool)requiresConstraintBasedLayout;

- (void).cxx_destruct;
- (void)_createIconView;
- (void)_invalidateDynamicConstraints;
- (void)_updateIcon;
- (id)_verticalConstraintsForContentSubview:(id)arg1;
- (id)containerView;
- (id)contentMetrics;
- (bool)disableContinuousIconAnimation;
- (id)dynamicConstraints;
- (bool)hideIcon;
- (double)iconAlpha;
- (unsigned long long)iconDisplayStyle;
- (id)iconForegroundColor;
- (bool)iconForegroundColorFollowsTintColor;
- (id)iconSpacingConstraints;
- (id)iconSpacingLayoutGuide;
- (bool)iconTintColorFollowsDisabledState;
- (id)iconView;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (bool)isDisabled;
- (id)item;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (void)setContainerView:(id)arg1;
- (void)setContentMetrics:(id)arg1;
- (void)setDisableContinuousIconAnimation:(bool)arg1;
- (void)setDisabled:(bool)arg1;
- (void)setDynamicConstraints:(id)arg1;
- (void)setHideIcon:(bool)arg1;
- (void)setIconAlpha:(double)arg1;
- (void)setIconDisplayStyle:(unsigned long long)arg1;
- (void)setIconForegroundColor:(id)arg1;
- (void)setIconForegroundColorFollowsTintColor:(bool)arg1;
- (void)setIconSpacingConstraints:(id)arg1;
- (void)setIconSpacingLayoutGuide:(id)arg1;
- (void)setIconTintColorFollowsDisabledState:(bool)arg1;
- (void)setIconView:(id)arg1;
- (void)setItem:(id)arg1;
- (void)setStaticConstraints:(id)arg1;
- (id)staticConstraints;
- (void)updateConstraints;
- (void)updateUIWithAnimation:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

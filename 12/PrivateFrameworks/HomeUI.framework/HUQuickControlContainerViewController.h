<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUQuickControlContainerViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUQuickControlContainerViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUQuickControlContainerViewController : UIViewController <HUItemPresentationContainer, HUPresentationDelegate, HUPresentationDelegateHost, HUQuickControlContainerViewDelegate, HUQuickControlContentHosting, HUQuickControlViewControllerCoordinatorDelegate, HUViewControllerCustomDissmissing> {
    HUQuickControlViewController * _activeControlViewController;
    HUQuickControlContainerView * _controlContainerView;
    <HUQuickControlContainerViewControllerDelegate> * _delegate;
    <HUOpenURLHandling> * _detailViewURLHandler;
    UITapGestureRecognizer * _dismissGestureRecognizer;
    HMHome * _home;
    HFItem<NSCopying> * _item;
    HUAnimationApplier * _presentationApplier;
    unsigned long long  _presentationState;
    bool  _presentedDetailView;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _sourceRect;
    HUQuickControlViewControllerCoordinator * _viewControllerCoordinator;
    <HUPresentationDelegate> * presentationDelegate;
}

@property (nonatomic, retain) HUQuickControlViewController *activeControlViewController;
@property (nonatomic, retain) HUQuickControlContainerView *controlContainerView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <HUQuickControlContainerViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) <HUOpenURLHandling> *detailViewURLHandler;
@property (nonatomic, retain) UITapGestureRecognizer *dismissGestureRecognizer;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HMHome *home;
@property (nonatomic, readonly) HFItem *hu_presentedItem;
@property (nonatomic, readonly) HFItem<NSCopying> *item;
@property (nonatomic, retain) HUAnimationApplier *presentationApplier;
@property (nonatomic) <HUPresentationDelegate> *presentationDelegate;
@property (nonatomic) unsigned long long presentationState;
@property (nonatomic) bool presentedDetailView;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } sourceRect;
@property (readonly) Class superclass;
@property (nonatomic, retain) HUQuickControlViewControllerCoordinator *viewControllerCoordinator;

+ (id)_blurAnimationSettingsForPresenting:(bool)arg1;
+ (id)_controlAlphaAnimationSettingsForPresenting:(bool)arg1;
+ (id)_controlScaleAnimationSettingsForPresenting:(bool)arg1;
+ (id)_detailChromeAnimationSettingsForPresenting:(bool)arg1;
+ (id)_easeOutTimingFunction;
+ (id)_sourceViewTransitionAnimationSettingsForPresenting:(bool)arg1;
+ (id)_statusBarHidingAnimationSettingsForPresenting:(bool)arg1;

- (void).cxx_destruct;
- (void)_backButtonPressed:(id)arg1;
- (void)_controlDidDismiss;
- (void)_createControlContainerViewWithSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_dismissDetailsViewControllerAnimated:(bool)arg1 dismissControl:(bool)arg2;
- (void)_handleDismissGesture:(id)arg1;
- (void)_performTransitionToPresentationState:(unsigned long long)arg1 animated:(bool)arg2 initialProgress:(double)arg3 completion:(id /* block */)arg4;
- (id)_prepareDetailViewController;
- (id)_presentControlOfType:(unsigned long long)arg1 animated:(bool)arg2;
- (void)_settingsButtonPressed:(id)arg1;
- (void)_updateActiveControlViewController;
- (void)_updateAlternateControlButtonVisibility;
- (void)_updateControlStatusText;
- (void)_updateIconDescriptorAnimated:(bool)arg1;
- (void)_updateReachabilityStateForActiveControl;
- (void)_updateUserInteractionEnabledForActiveControl;
- (id)activeControlViewController;
- (void)alternateControlButtonPressedInContainerView:(id)arg1;
- (void)beginReceivingTouchesWithGestureRecognizer:(id)arg1;
- (id)controlContainerView;
- (void)controllerCoordinator:(id)arg1 didUpdateIconDescriptor:(id)arg2 showOffState:(bool)arg3;
- (void)controllerCoordinator:(id)arg1 didUpdateReachability:(bool)arg2;
- (void)controllerCoordinator:(id)arg1 didUpdateStatusWithPrimaryText:(id)arg2 secondaryText:(id)arg3;
- (id)delegate;
- (id)detailViewURLHandler;
- (void)detailsButtonPressedInContainerView:(id)arg1;
- (id)dismissControlAnimated:(bool)arg1;
- (id)dismissGestureRecognizer;
- (id)finishPresentation:(id)arg1 animated:(bool)arg2;
- (void)hideAuxiliaryViewForQuickControlContent:(id)arg1;
- (id)home;
- (id)hu_prepareForDismissalAnimated:(bool)arg1;
- (id)hu_presentedItem;
- (id)initWithItem:(id)arg1 controlItems:(id)arg2 home:(id)arg3;
- (bool)isControlDismissedOrDismissing;
- (bool)isControlPresentedOrPresenting;
- (id)item;
- (id)presentAlternateActionViewControllerAnimated:(bool)arg1;
- (void)presentControlFromSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 animated:(bool)arg2;
- (id)presentDetailViewControllerAnimated:(bool)arg1;
- (id)presentationApplier;
- (id)presentationDelegate;
- (unsigned long long)presentationState;
- (bool)presentedDetailView;
- (void)quickControlContent:(id)arg1 requestDismissalOfType:(unsigned long long)arg2;
- (void)quickControlContent:(id)arg1 showAuxiliaryView:(id)arg2;
- (void)quickControlContentDidUpdateDesiredVisbilityState:(id)arg1;
- (void)setActiveControlViewController:(id)arg1;
- (void)setControlContainerView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDetailViewURLHandler:(id)arg1;
- (void)setDismissGestureRecognizer:(id)arg1;
- (void)setPresentationApplier:(id)arg1;
- (void)setPresentationDelegate:(id)arg1;
- (void)setPresentationState:(unsigned long long)arg1;
- (void)setPresentedDetailView:(bool)arg1;
- (void)setSourceRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setViewControllerCoordinator:(id)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })sourceRect;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })sourceViewTransformForPresentationProgress:(double)arg1;
- (id)viewControllerCoordinator;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

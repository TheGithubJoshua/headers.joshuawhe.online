<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HUItemCollectionViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/HomeUI.framework/HUItemCollectionViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI (1)
 */

@interface HUItemCollectionViewController : HUCollectionViewController <HFExecutionEnvironmentObserver, HFItemManagerDelegate, HUItemManagerContainer, HUItemPresentationContainer, HUPreloadableViewController> {
    NSHashTable * _childViewControllersAtViewWillAppearTime;
    NSHashTable * _childViewControllersAtViewWillDisappearTime;
    <NACancelable> * _deferredVisibilityUpdate;
    NSMutableArray * _foregroundUpdateFutures;
    bool  _hasFinishedInitialLoad;
    HFItemManager * _itemManager;
    NSMutableSet * _registeredCellClasses;
    bool  _visibilityUpdatesEnabled;
    bool  _wantsPreferredContentSize;
}

@property (nonatomic, retain) NSHashTable *childViewControllersAtViewWillAppearTime;
@property (nonatomic, retain) NSHashTable *childViewControllersAtViewWillDisappearTime;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) <NACancelable> *deferredVisibilityUpdate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSMutableArray *foregroundUpdateFutures;
@property (nonatomic) bool hasFinishedInitialLoad;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) HFItem *hu_presentedItem;
@property (nonatomic, retain) HFItemManager *itemManager;
@property (nonatomic, readonly) NSMutableSet *registeredCellClasses;
@property (readonly) Class superclass;
@property (nonatomic) bool visibilityUpdatesEnabled;
@property (nonatomic) bool wantsPreferredContentSize;

+ (unsigned long long)updateMode;

- (void).cxx_destruct;
- (void)_updateTitle;
- (bool)automaticallyUpdatesViewControllerTitle;
- (Class)cellClassForItem:(id)arg1 indexPath:(id)arg2;
- (id)childViewControllersAtViewWillAppearTime;
- (id)childViewControllersAtViewWillDisappearTime;
- (id)childViewControllersToPreload;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)configureCell:(id)arg1 forItem:(id)arg2;
- (id)deferredVisibilityUpdate;
- (void)executionEnvironmentRunningStateDidChange:(id)arg1;
- (id)foregroundUpdateFutures;
- (bool)hasFinishedInitialLoad;
- (id)hu_preloadContent;
- (id)hu_presentedItem;
- (id)initWithItemManager:(id)arg1 collectionViewLayout:(id)arg2;
- (bool)isLayoutDependentOnItemState;
- (id)itemManager;
- (void)itemManager:(id)arg1 didChangeOverallLoadingState:(unsigned long long)arg2;
- (void)itemManager:(id)arg1 didChangeSourceItem:(id)arg2;
- (void)itemManager:(id)arg1 didInsertItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemManager:(id)arg1 didInsertSections:(id)arg2;
- (void)itemManager:(id)arg1 didMoveItem:(id)arg2 fromIndexPath:(id)arg3 toIndexPath:(id)arg4;
- (void)itemManager:(id)arg1 didMoveSection:(long long)arg2 toSection:(long long)arg3;
- (void)itemManager:(id)arg1 didRemoveItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemManager:(id)arg1 didRemoveSections:(id)arg2;
- (void)itemManager:(id)arg1 didUpdateResultsForItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemManager:(id)arg1 didUpdateResultsForSourceItem:(id)arg2;
- (id)itemManager:(id)arg1 futureToUpdateItems:(id)arg2 itemUpdateOptions:(id)arg3;
- (void)itemManager:(id)arg1 performUpdateRequest:(id)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)performBatchCollectionViewUpdatesForUpdateRequest:(id)arg1 reloadOnly:(bool)arg2;
- (struct CGSize { double x1; double x2; })preferredContentSizeForCollectionViewContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)recursivelyDisableItemUpdates:(bool)arg1 withReason:(id)arg2;
- (id)registeredCellClasses;
- (void)setChildViewControllersAtViewWillAppearTime:(id)arg1;
- (void)setChildViewControllersAtViewWillDisappearTime:(id)arg1;
- (void)setDeferredVisibilityUpdate:(id)arg1;
- (void)setForegroundUpdateFutures:(id)arg1;
- (void)setHasFinishedInitialLoad:(bool)arg1;
- (void)setItemManager:(id)arg1;
- (void)setVisibilityUpdatesEnabled:(bool)arg1;
- (void)setWantsPreferredContentSize:(bool)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (bool)visibilityUpdatesEnabled;
- (bool)wantsPreferredContentSize;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

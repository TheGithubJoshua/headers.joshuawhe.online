<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MSASAssetDownloader.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreMediaStream.framework/MSASAssetDownloader.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreMediaStream.framework/CoreMediaStream (520.1)
 */

@interface MSASAssetDownloader : MSASAssetTransferer {
    NSMutableDictionary * _assetToItemInFlightMap;
    NSString * _currentFocusAlbumGUID;
    NSString * _currentFocusAssetCollectionGUID;
    bool  _didEncounterNetworkConditionError;
    NSString * _downloadBatchPerfGUID;
    NSMutableArray * _finishedAssets;
    bool  _isDownloadingThumbnails;
    bool  _isWaitingForFirstDownloadEvent;
    NSMutableArray * _itemsInFlight;
    NSString * _objectGUID;
    int  _state;
}

@property (nonatomic, retain) NSMutableDictionary *assetToItemInFlightMap;
@property (nonatomic, retain) NSString *currentFocusAlbumGUID;
@property (nonatomic, retain) NSString *currentFocusAssetCollectionGUID;
@property (nonatomic) <MSASAssetDownloaderDelegate> *delegate;
@property (nonatomic) bool didEncounterNetworkConditionError;
@property (nonatomic, retain) NSString *downloadBatchPerfGUID;
@property (nonatomic, retain) NSMutableArray *finishedAssets;
@property (nonatomic) bool isDownloadingThumbnails;
@property (nonatomic) bool isWaitingForFirstDownloadEvent;
@property (nonatomic, retain) NSMutableArray *itemsInFlight;
@property (nonatomic, retain) NSString *objectGUID;
@property (nonatomic) int state;

- (void).cxx_destruct;
- (void)MMCSEngine:(id)arg1 didCreateRequestorContext:(id)arg2 forAssets:(id)arg3;
- (void)MMCSEngine:(id)arg1 didFinishGettingAsset:(id)arg2 path:(id)arg3 error:(id)arg4;
- (void)MMCSEngine:(id)arg1 didFinishPuttingAsset:(id)arg2 error:(id)arg3;
- (void)MMCSEngine:(id)arg1 didMakeGetProgress:(float)arg2 state:(int)arg3 onAsset:(id)arg4;
- (void)MMCSEngine:(id)arg1 didMakePutProgress:(float)arg2 state:(int)arg3 onAsset:(id)arg4;
- (id)_orphanedAssetError;
- (id)_pathForPersonID:(id)arg1;
- (void)_workQueueDidFinishWithItem:(id)arg1 error:(id)arg2;
- (void)_workQueueGoIdle;
- (void)_workQueueStopTrackingItem:(id)arg1;
- (id)assetToItemInFlightMap;
- (id)currentFocusAlbumGUID;
- (id)currentFocusAssetCollectionGUID;
- (bool)didEncounterNetworkConditionError;
- (void)didEnqueueAsset:(id)arg1 forAlbumGUID:(id)arg2;
- (void)didFinishGettingAllAssets;
- (void)didFinishPuttingAllAssets;
- (id)downloadBatchPerfGUID;
- (id)finishedAssets;
- (bool)isDownloadingThumbnails;
- (bool)isWaitingForFirstDownloadEvent;
- (id)itemsInFlight;
- (id)objectGUID;
- (void)registerAssets:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)setAssetToItemInFlightMap:(id)arg1;
- (void)setCurrentFocusAlbumGUID:(id)arg1;
- (void)setCurrentFocusAssetCollectionGUID:(id)arg1;
- (void)setDidEncounterNetworkConditionError:(bool)arg1;
- (void)setDownloadBatchPerfGUID:(id)arg1;
- (void)setFinishedAssets:(id)arg1;
- (void)setIsDownloadingThumbnails:(bool)arg1;
- (void)setIsWaitingForFirstDownloadEvent:(bool)arg1;
- (void)setItemsInFlight:(id)arg1;
- (void)setObjectGUID:(id)arg1;
- (void)setState:(int)arg1;
- (int)state;
- (void)unregisterAssets:(id)arg1;
- (void)workQueueCancel;
- (void)workQueueDownloadNextBatch;
- (id)workQueueObjectGUID;
- (void)workQueueRegisterAssets:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)workQueueRetryOutstandingActivities;
- (void)workQueueShutDownCompletionBlock:(id /* block */)arg1;
- (void)workQueueStop;
- (void)workQueueUnregisterAssets:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

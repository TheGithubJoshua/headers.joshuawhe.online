<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TKSmartCardSlotEngine.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CryptoTokenKit.framework/TKSmartCardSlotEngine.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CryptoTokenKit.framework/CryptoTokenKit (1)
 */

@interface TKSmartCardSlotEngine : NSObject <NSXPCListenerDelegate, TKProtocolSmartCardSlot> {
    bool  _apduSentSinceLastReset;
    TKSmartCardATR * _atr;
    NSHashTable * _clients;
    <TKSmartCardSlotDelegate> * _delegate;
    NSArray * _forProcesses;
    bool  _idlePowerDownPending;
    unsigned long long  _lastId;
    NSXPCListener * _listener;
    NSObject<OS_os_log> * _log;
    long long  _maxInputLength;
    long long  _maxOutputLength;
    NSString * _name;
    TKPowerMonitor * _powerMonitor;
    NSMutableArray * _powerRequests;
    long long  _powerState;
    long long  _previousState;
    unsigned long long  _protocol;
    NSObject<OS_dispatch_queue> * _queue;
    NSXPCConnection * _registrationConnection;
    NSMapTable * _reservations;
    bool  _securePINChangeSupported;
    bool  _securePINVerificationSupported;
    TKSmartCardSessionEngine * _session;
    NSMutableArray * _sessionRequests;
    long long  _state;
}

@property bool apduSentSinceLastReset;
@property (readonly, copy) NSString *debugDescription;
@property <TKSmartCardSlotDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (retain) NSArray *forProcesses;
@property (readonly) unsigned long long hash;
@property long long maxInputLength;
@property long long maxOutputLength;
@property (readonly) NSString *name;
@property (retain) NSObject<OS_dispatch_queue> *queue;
@property bool securePINChangeSupported;
@property bool securePINVerificationSupported;
@property TKSmartCardSessionEngine *session;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_findReservation:(id)arg1 connection:(id)arg2;
- (id)_getReservationId;
- (void)_setupWithName:(id)arg1 delegate:(id)arg2 firstPass:(bool)arg3 reply:(id /* block */)arg4;
- (bool)apduSentSinceLastReset;
- (void)cardPresent:(bool)arg1;
- (void)changeStateTo:(long long)arg1 powerState:(long long)arg2;
- (void)connectCardSessionWithParameters:(id)arg1 reply:(id /* block */)arg2;
- (void)dealloc;
- (id)delegate;
- (id)dictionaryForState:(long long)arg1;
- (id)forProcesses;
- (void)getAttrib:(unsigned int)arg1 reply:(id /* block */)arg2;
- (id)init;
- (void)leaveSession:(id)arg1 reply:(id /* block */)arg2;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)logWithBytes:(id)arg1 handler:(id /* block */)arg2;
- (long long)maxInputLength;
- (long long)maxOutputLength;
- (id)name;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)powerDownWithEject:(bool)arg1 reply:(id /* block */)arg2;
- (void)powerRequestFinished;
- (id)queue;
- (void)reserveProtocols:(id)arg1 reservationId:(id)arg2 exclusive:(bool)arg3 reply:(id /* block */)arg4;
- (void)resetWithReply:(id /* block */)arg1;
- (void)runUserInteraction:(id)arg1 reply:(id /* block */)arg2;
- (void)scheduleIdlePowerDown;
- (void)schedulePowerRequest:(id /* block */)arg1;
- (bool)securePINChangeSupported;
- (bool)securePINVerificationSupported;
- (void)sendControl:(id)arg1 data:(id)arg2 expectedLength:(unsigned int)arg3 reply:(id /* block */)arg4;
- (id)session;
- (void)sessionWithParameters:(id)arg1 reply:(id /* block */)arg2;
- (void)setApduSentSinceLastReset:(bool)arg1;
- (void)setAttrib:(unsigned int)arg1 data:(id)arg2 reply:(id /* block */)arg3;
- (void)setDelegate:(id)arg1;
- (void)setForProcesses:(id)arg1;
- (void)setMaxInputLength:(long long)arg1;
- (void)setMaxOutputLength:(long long)arg1;
- (void)setProtocol:(unsigned long long)arg1 reply:(id /* block */)arg2;
- (void)setQueue:(id)arg1;
- (void)setSecurePINChangeSupported:(bool)arg1;
- (void)setSecurePINVerificationSupported:(bool)arg1;
- (void)setSession:(id)arg1;
- (void)setupSlotWithReply:(id /* block */)arg1;
- (void)setupWithName:(id)arg1 delegate:(id)arg2 reply:(id /* block */)arg3;
- (void)terminate;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

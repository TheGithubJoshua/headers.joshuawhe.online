<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TKTokenSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CryptoTokenKit.framework/TKTokenSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CryptoTokenKit.framework/CryptoTokenKit (1)
 */

@interface TKTokenSession : NSObject {
    LAContext * _LAContext;
    NSNumber * _callerPID;
    NSObject<OS_xpc_object> * _clientConnection;
    <TKTokenSessionDelegate> * _delegate;
    NSObject<OS_xpc_object> * _event;
    id  _inputParameter2;
    NSDictionary * _parameters;
    NSObject<OS_dispatch_queue> * _sessionQueue;
    TKToken * _token;
}

@property (retain) LAContext *LAContext;
@property (retain) NSNumber *callerPID;
@property (readonly) NSObject<OS_xpc_object> *clientConnection;
@property <TKTokenSessionDelegate> *delegate;
@property (readonly) id inputParameter2;
@property (nonatomic, readonly) NSString *name;
@property (retain) NSDictionary *parameters;
@property (readonly) <TKTokenSessionPrivateDelegate> *privateDelegate;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *sessionQueue;
@property (readonly) TKToken *token;

- (void).cxx_destruct;
- (id)LAContext;
- (void)assignClientConnection:(id)arg1;
- (void)beginAuthForOperation:(long long)arg1 constraint:(id)arg2 reply:(id /* block */)arg3;
- (bool)beginRequest:(long long)arg1 error:(id*)arg2;
- (id)callerPID;
- (void)checkOperation:(long long)arg1 usingKey:(id)arg2 algorithm:(id)arg3 reply:(id /* block */)arg4;
- (id)clientConnection;
- (void)completeReply:(id)arg1 objectID:(id)arg2 attributes:(id)arg3 error:(id)arg4 completionHandler:(id /* block */)arg5;
- (void)controlWithAttributes:(id)arg1 reply:(id /* block */)arg2;
- (void)createObjectWithAttributes:(id)arg1 reply:(id /* block */)arg2;
- (void)decryptData:(id)arg1 usingKey:(id)arg2 algorithm:(id)arg3 reply:(id /* block */)arg4;
- (id)delegate;
- (void)deleteObject:(id)arg1 reply:(id /* block */)arg2;
- (void)endRequest;
- (void)evaluateAuthOperation:(id)arg1 auditToken:(struct { unsigned int x1[8]; })arg2 retry:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)evaluateAuthOperation:(id)arg1 reply:(id /* block */)arg2;
- (void)finalizeAuthOperation:(id)arg1 evaluatedAuthOperation:(id)arg2 auditToken:(struct { unsigned int x1[8]; })arg3 reply:(id /* block */)arg4;
- (void)getAccessControlOfObject:(id)arg1 reply:(id /* block */)arg2;
- (void)getDataOfObject:(id)arg1 reply:(id /* block */)arg2;
- (void)getPublicKeyDataOfObject:(id)arg1 reply:(id /* block */)arg2;
- (bool)handleControlEvent:(id)arg1 reply:(id)arg2 attributes:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)handleCopyIdentitiesEvent:(id)arg1 reply:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)handleCopyItemsEvent:(id)arg1 reply:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)handleCreateObjectEvent:(id)arg1 reply:(id)arg2 attributes:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)handleDeleteObjectEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)handleEvaluateAccessControlEvent:(id)arg1 auditToken:(struct { unsigned int x1[8]; })arg2 reply:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)handleGetObjectAccessControlEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)handleGetPublicKeyEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)handleOperation:(long long)arg1 auditToken:(struct { unsigned int x1[8]; })arg2 event:(id)arg3 reply:(id)arg4 completionHandler:(id /* block */)arg5;
- (bool)handlePerformOperationEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)handleReadDataEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)handleUpdateObjectEvent:(id)arg1 reply:(id)arg2 objectID:(id)arg3 attributes:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)initWithToken:(id)arg1;
- (id)inputParameter2;
- (id)name;
- (id)parameters;
- (void)performKeyExchangeWithPublicKey:(id)arg1 usingKey:(id)arg2 algorithm:(id)arg3 parameters:(id)arg4 reply:(id /* block */)arg5;
- (id)privateDelegate;
- (id)sessionQueue;
- (void)setCallerPID:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLAContext:(id)arg1;
- (void)setParameters:(id)arg1;
- (void)signData:(id)arg1 usingKey:(id)arg2 algorithm:(id)arg3 reply:(id /* block */)arg4;
- (void)terminate;
- (id)token;
- (void)updateObject:(id)arg1 attributes:(id)arg2 reply:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

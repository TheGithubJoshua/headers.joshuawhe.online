<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RCSSavedRecordingService.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceMemos.framework/RCSSavedRecordingService.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos (1.0)
 */

@interface RCSSavedRecordingService : NSObject <RCSSavedRecordingServiceClientProtocol, RCSSavedRecordingServiceProtocol> {
    NSObject<OS_dispatch_queue> * _completionQueue;
    NSSet * _compositionAVURLsBeingExported;
    int  _compositionAVURLsBeingExportedDistributedNotificationToken;
    NSSet * _compositionAVURLsBeingModified;
    int  _compositionAVURLsBeingModifiedDistributedNotificationToken;
    NSMutableDictionary * _pendingServiceCompletionHandlers;
    NSObject<OS_dispatch_queue> * _serialQueue;
    <RCSSavedRecordingServiceProtocol> * _serviceProxy;
    <RCSSavedRecordingServiceProtocol> * _synchronousServiceProxy;
    NSXPCConnection * _xpcConnection;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *completionQueue;
@property (nonatomic, retain) NSSet *compositionAVURLsBeingExported;
@property (nonatomic, retain) NSSet *compositionAVURLsBeingModified;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isDatabaseAvailable;
@property (readonly) Class superclass;

+ (id)changeToken;
+ (bool)isRunningInSavedRecordingDaemon;
+ (void)setChangeToken:(id)arg1;
+ (id)sharedService;

- (void).cxx_destruct;
- (oneway void)__fetchAllAccessTokens:(id /* block */)arg1;
- (oneway void)_fetchAllAccessTokens:(id /* block */)arg1;
- (void)_handleCompositionAVURLsBeingExportedDidChange;
- (void)_handleCompositionAVURLsBeingModifiedDidChange;
- (struct NSNumber { Class x1; }*)_onQueueAddPendingServiceMessageReplyBlockInvalidationHandler:(id /* block */)arg1;
- (void)_onQueueCloseServiceConnection;
- (void)_onQueueInvalidatePendingCompletionHandlerWithToken:(id)arg1 withError:(id)arg2;
- (void)_onQueueInvalidatePendingCompletionHandlersWithError:(id)arg1;
- (void)_onQueueRemovePendingServiceMessageReplyBlockInvalidationHandlerForToken:(struct NSNumber { Class x1; }*)arg1;
- (void)_sendServiceMessage:(SEL)arg1 accessRequestReplyBlock:(id /* block */)arg2 messagingBlock:(id /* block */)arg3;
- (void)_sendServiceMessage:(SEL)arg1 connectionFailureReplyInfo:(id)arg2 infoAndErrorReplyHandler:(id /* block */)arg3 messagingBlock:(id /* block */)arg4;
- (void)_sendServiceMessage:(SEL)arg1 connectionFailureReplyInfo:(id)arg2 infoAndErrorReplyHandler:(id /* block */)arg3 withServiceProxy:(id)arg4 messagingBlock:(id /* block */)arg5;
- (void)_sendServiceMessage:(SEL)arg1 importRequestReplyBlock:(id /* block */)arg2 messagingBlock:(id /* block */)arg3;
- (void)_sendServiceMessage:(SEL)arg1 withBasicReplyBlock:(id /* block */)arg2 messagingBlock:(id /* block */)arg3;
- (void)_sendServiceMessage:(SEL)arg1 withBasicReplyBlock:(id /* block */)arg2 withServiceProxy:(id)arg3 messagingBlock:(id /* block */)arg4;
- (void)_sendSynchronousServiceMessage:(SEL)arg1 accessRequestReplyBlock:(id /* block */)arg2 messagingBlock:(id /* block */)arg3;
- (void)_sendSynchronousServiceMessage:(SEL)arg1 connectionFailureReplyInfo:(id)arg2 infoAndErrorReplyHandler:(id /* block */)arg3 messagingBlock:(id /* block */)arg4;
- (void)_sendSynchronousServiceMessage:(SEL)arg1 withBasicReplyBlock:(id /* block */)arg2 messagingBlock:(id /* block */)arg3;
- (void)checkRecordingAvailability:(id /* block */)arg1;
- (oneway void)clearAndReloadSearchMetadataWithCompletionBlock:(id /* block */)arg1;
- (void)closeAudioFile:(id)arg1;
- (oneway void)closeAudioFile:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)closeServiceConnection;
- (id)completionQueue;
- (id)compositionAVURLsBeingExported;
- (id)compositionAVURLsBeingModified;
- (void)dealloc;
- (oneway void)disableCloudRecordingsSaveLocalCopies:(bool)arg1 withCompletionBlock:(id /* block */)arg2;
- (oneway void)disableOrphanHandlingWithCompletionBlock:(id /* block */)arg1;
- (oneway void)disableOrphanedFragmentCleanupForCompositionAVURL:(id)arg1 completionBlock:(id /* block */)arg2;
- (oneway void)enableCloudRecordingsWithCompletionBlock:(id /* block */)arg1;
- (oneway void)enableOrphanHandlingWithCompletionBlock:(id /* block */)arg1;
- (oneway void)enableOrphanedFragmentCleanupForCompositionAVURL:(id)arg1;
- (oneway void)endAccessSessionWithToken:(id)arg1 completionBlock:(id /* block */)arg2;
- (oneway void)exportRecordingsToCloud:(id /* block */)arg1;
- (oneway void)expungeRecordingsFromCloud:(id /* block */)arg1;
- (oneway void)fetchCompositionAVURLsBeingExported:(id /* block */)arg1;
- (oneway void)fetchCompositionAVURLsBeingModified:(id /* block */)arg1;
- (oneway void)importRecordingWithSourceAudioURL:(id)arg1 name:(id)arg2 date:(id)arg3 importCompletionBlock:(id /* block */)arg4;
- (oneway void)importRecordingsFromCloud:(id /* block */)arg1;
- (id)init;
- (bool)isDatabaseAvailable;
- (oneway void)openAudioFile:(id)arg1 settings:(id)arg2 accessRequestHandler:(id /* block */)arg3;
- (id)openAudioFile:(id)arg1 settings:(id)arg2 error:(id*)arg3;
- (void)openServiceConnection;
- (oneway void)performDatabaseMigrationWithCompletionBlock:(id /* block */)arg1;
- (oneway void)prepareToCaptureToCompositionAVURL:(id)arg1 accessRequestHandler:(id /* block */)arg2;
- (oneway void)prepareToExportCompositionAVURL:(id)arg1 cacheWaveform:(bool)arg2 accessRequestHandler:(id /* block */)arg3;
- (oneway void)prepareToPreviewCompositionAVURL:(id)arg1 accessRequestHandler:(id /* block */)arg2;
- (oneway void)prepareToTrimCompositionAVURL:(id)arg1 accessRequestHandler:(id /* block */)arg2;
- (oneway void)reloadExistingSearchMetadataWithCompletionBlock:(id /* block */)arg1;
- (oneway void)removeAllUserDataWithCompletion:(id /* block */)arg1;
- (id)serviceProxy;
- (void)setCompletionQueue:(id)arg1;
- (void)setCompositionAVURLsBeingExported:(id)arg1;
- (void)setCompositionAVURLsBeingModified:(id)arg1;
- (id)synchronousServiceProxy;
- (oneway void)updateSearchMetadataWithRecordingURIsToInsert:(id)arg1 recordingURIsToUpdate:(id)arg2 recordingURIsToDelete:(id)arg3 completionBlock:(id /* block */)arg4;
- (oneway void)writeAudioFile:(id)arg1 buffer:(id)arg2 completionBlock:(id /* block */)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

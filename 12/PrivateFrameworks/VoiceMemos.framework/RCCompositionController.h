<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RCCompositionController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceMemos.framework/RCCompositionController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos (1.0)
 */

@interface RCCompositionController : NSObject <UIActivityItemSource> {
    NSMutableDictionary * _accessTokensByName;
    RCCaptureSession * _activeCaptureSession;
    RCComposition * _composition;
    NSMutableArray * _finalizeCompletionBlocks;
    bool  _hasLoggedUsageStatisticRecordingEvent;
    bool  _hasStartedRecording;
    RCSSavedRecordingService * _sharedService;
    _RCCompositionUndoItem * _trimCancelUndoItem;
    NSMutableArray * _undoableCompositionItemStack;
    unsigned long long  _usageHistoryMask;
}

@property (nonatomic, readonly) RCCaptureSession *activeCaptureSession;
@property (nonatomic, retain) RCComposition *composition;
@property (nonatomic, readonly) unsigned long long countOfUndoableCompositions;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isTopUndoableCompositionFromCapture;
@property (nonatomic, readonly) NSString *savedRecordingUUID;
@property (readonly) Class superclass;

+ (id)compositionControllerForComposedAVURL:(id)arg1;
+ (id)compositionControllerForSavedRecording:(id)arg1;

- (void).cxx_destruct;
- (id)_activitySourceRecording;
- (id)_compositionByReplacingDecomposedFragments:(id)arg1;
- (void)_eaccess_repairDecomposedFragmentMetadataIfNecessaryAndSave:(bool)arg1;
- (void)_eaccess_saveCompositionAfterAppendingInProgressCaptureDataSource:(id)arg1;
- (void)_eaccess_saveCompositionAfterCommitingFinalizedCaptureDataSource:(id)arg1;
- (void)_eaccess_saveCompositionAndRecordingDuration:(bool)arg1;
- (void)_endAccessSessionWithToken:(id)arg1 forKey:(id)arg2 completionBlock:(id /* block */)arg3;
- (void)_endAccessSessions:(id /* block */)arg1;
- (void)_finalizeComposedAssetWithCompletionHandler:(id /* block */)arg1;
- (id)_nextCaptureWaveformDataSourceWithDestinationTimeRange:(struct { double x1; double x2; })arg1 isOverdub:(bool)arg2;
- (void)_setEditingFlag:(bool)arg1;
- (id)activeCaptureSession;
- (void)activeRecordingSessionWillFinish;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize { double x1; double x2; })arg3;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (void)beginAccessSessionToExportWithCompletionBlock:(id /* block */)arg1;
- (void)beginAccessSessionToPlayTimeRange:(struct { double x1; double x2; })arg1 readyToPlayBlock:(id /* block */)arg2;
- (void)beginAccessSessionToTrimAsCopy:(bool)arg1 assetReadyBlock:(id /* block */)arg2;
- (void)beginRecordingWithInputDevice:(id)arg1 captureInsertionRange:(struct { double x1; double x2; })arg2 isUndoable:(bool)arg3 isOverdub:(bool)arg4 sessionPreparedBlock:(id /* block */)arg5 sessionFinishedBlock:(id /* block */)arg6;
- (id)composition;
- (bool)compositionIsShareable;
- (unsigned long long)countOfUndoableCompositions;
- (void)dealloc;
- (void)deleteCompositionFromFileSystem;
- (void)deleteCompositionFromFileSystemAndDatabase;
- (void)endAccessSessionsWithCompletionBlock:(id /* block */)arg1;
- (void)endEditingWithCompletionBlock:(id /* block */)arg1;
- (void)endPreviewAccessSession;
- (void)endTrimAccessSessionWithCompletionBlock:(id /* block */)arg1;
- (void)finalizingComposedAssetWithCompletionBlock:(id /* block */)arg1;
- (id)init;
- (id)initWithComposition:(id)arg1;
- (bool)isCaptureSessionActive;
- (bool)isTopUndoableCompositionFromCapture;
- (void)performCompositionRedoWithRedoItem:(id)arg1 completionBlock:(id /* block */)arg2;
- (void)performCompositionUndoWithCompletionBlock:(id /* block */)arg1;
- (void)performTrimModeCancelWithCompletionBlock:(id /* block */)arg1;
- (void)prepareToBeginEditingWithCompletionBlock:(id /* block */)arg1;
- (void)rcs_composeToFinalDestinationAndDeleteDecomposedFragments:(bool)arg1 composeWaveform:(bool)arg2 canGenerateWaveformByProcessingAVURL:(bool)arg3 completionBlock:(id /* block */)arg4;
- (void)rcs_repairDecomposedFragmentMetadataIfNecessary;
- (void)reloadComposition;
- (void)sanitizeWithCompletionBlock:(id /* block */)arg1;
- (id)savedRecordingUUID;
- (void)setComposition:(id)arg1;
- (void)trimDidSave;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

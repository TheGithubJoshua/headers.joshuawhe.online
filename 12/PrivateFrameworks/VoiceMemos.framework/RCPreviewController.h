<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RCPreviewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceMemos.framework/RCPreviewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos (1.0)
 */

@interface RCPreviewController : NSObject <RCAVPlayerDelegate> {
    RCAVPlayer * _AVPlayer;
    AVPlayerItem * _AVPlayerItem;
    double  _AVPlayerItemCachedDuration;
    RCAVState * _AVState;
    NSString * _activePlaybackContextName;
    RCAudioSessionRoutingAssertion * _activePreviewRouteAssertion;
    double  _currentRateTarget;
    double  _currentTimeDelegateUpdateRate;
    double  _currentTimeTarget;
    bool  _didJumpTime;
    bool  _isPreparingForPreview;
    NSURL * _lastPlayedAssetReferenceURL;
    NSString * _lastRouteKeyForRouteUsageLog;
    bool  _logNextRouteUsageStatisticForced;
    NSMutableDictionary * _monitoredDispatchSourcesByURL;
    RCAudioSessionRoutingAssertion * _preparingToPreviewRouteAssertion;
    NSUUID * _preparingToPreviewRouteAssertionSessionUUID;
    bool  _resetUseVoiceMemoSettingsValue;
    bool  _useVoiceMemoSettings;
    bool  _voiceMemoSettingEnabledNeedsReset;
    NSHashTable * _weakObservers;
}

@property (nonatomic, readonly) RCAVPlayer *AVPlayer;
@property (nonatomic, retain) AVPlayerItem *AVPlayerItem;
@property (nonatomic, retain) RCAVState *AVState;
@property (nonatomic) double currentTime;
@property (nonatomic) double currentTimeDelegateUpdateRate;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didJumpTime;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct { double x1; double x2; } playableTimeRange;
@property (nonatomic, readonly) float rate;
@property (readonly) Class superclass;
@property (nonatomic) bool useVoiceMemoSettings;

- (void).cxx_destruct;
- (id)AVPlayer;
- (id)AVPlayerItem;
- (id)AVState;
- (id)_AVPlayerIfActive;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_audioRouteControllerPickedRouteDidChangeNotification:(id)arg1;
- (void)_audioRouteControllerWillDeactivateAudioSessionNotification:(id)arg1;
- (void)_beginActivePreviewRouteAssertion;
- (void)_beginPreparingToPreviewRouteAssertion;
- (void)_endActivePreviewRouteAssertion;
- (void)_handleDidStopPlaybackWithError:(id)arg1;
- (void)_handleUnderlyingAssetDisappeared;
- (bool)_monitorUnderlyingAssetPathInPlayerItem:(id)arg1 assetDisappearedBlock:(id /* block */)arg2;
- (void)_performWithObserversBlock:(id /* block */)arg1;
- (void)_playbackUsageStatisticsIncrementPlaybackIfNecessary;
- (void)_playbackUsageStatisticsPrepareForPlaybackContextName:(id)arg1;
- (void)_playbackUsageStatisticsPrepareForStartingNewPlayback;
- (void)_playerCurrentRateDidChangeToRate:(float)arg1 hadPlaybackItem:(bool)arg2;
- (void)_postDelegateCurrentTimeUpdate;
- (void)_postDelegateDidBeginPlaybackWithRate:(float)arg1;
- (void)_postDelegateJumpTimeUpdate;
- (void)_readyToPlay_playPlayer:(id)arg1;
- (id)_recreateAVPlayer;
- (void)_setPreparingToPlay:(bool)arg1 notifyObservers:(bool)arg2;
- (void)_stopMonitoringUnderylingAssetPath;
- (void)addObserver:(id)arg1;
- (void)beginScrubbing;
- (double)currentTime;
- (double)currentTimeDelegateUpdateRate;
- (void)dealloc;
- (bool)didJumpTime;
- (void)endScrubbing;
- (void)handlePreviewEnded;
- (id)init;
- (void)pause;
- (void)playWithTimeRange:(struct { double x1; double x2; })arg1 startTime:(double)arg2 playbackContextName:(id)arg3;
- (struct { double x1; double x2; })playableTimeRange;
- (void)playerCurrentItemDidBecomeReadyToPlay:(id)arg1;
- (void)playerCurrentRateDidChange:(id)arg1;
- (void)playerCurrentTimeDidChange:(id)arg1;
- (void)playerDidBecomeInvalid:(id)arg1;
- (float)rate;
- (void)removeObserver:(id)arg1;
- (void)sendCurrentTimeUpdates;
- (void)setAVPlayerItem:(id)arg1;
- (void)setAVState:(id)arg1;
- (void)setCurrentTime:(double)arg1;
- (void)setCurrentTimeDelegateUpdateRate:(double)arg1;
- (void)setDidJumpTime:(bool)arg1;
- (void)setPlayableTimeRange:(struct { double x1; double x2; })arg1;
- (void)setRate:(float)arg1;
- (void)setUseVoiceMemoSettings:(bool)arg1;
- (void)stop;
- (bool)useVoiceMemoSettings;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RCWaveformDataSource.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VoiceMemos.framework/RCWaveformDataSource.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos (1.0)
 */

@interface RCWaveformDataSource : NSObject <RCWaveformGeneratorSegmentOutputObserver> {
    RCMutableWaveform * _accumulatorWaveform;
    double  _durationPerWaveformSlice;
    NSURL * _generatedWaveformOutputURL;
    bool  _hasSavedGeneratedWaveform;
    bool  _hasStartedLoading;
    RCMutableWaveform * _liveRecordingMergingWaveform;
    NSObject<OS_dispatch_queue> * _queue;
    RCWaveformGenerator * _waveformGenerator;
    NSHashTable * _weakObservers;
}

@property (nonatomic, readonly) RCWaveform *accumulatorWaveform;
@property (nonatomic, readonly) double averagePowerLevelsRate;
@property (nonatomic, readonly) bool canceled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double duration;
@property (nonatomic) double durationPerWaveformSlice;
@property (nonatomic, readonly) bool finished;
@property (nonatomic, readonly) NSURL *generatedWaveformOutputURL;
@property bool hasSavedGeneratedWaveform;
@property (nonatomic, readonly) bool hasStartedLoading;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) RCWaveform *liveRecordingMergingWaveform;
@property (nonatomic, readonly) float loadingProgress;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;
@property (nonatomic, readonly) struct { double x1; double x2; } timeRangeToHighlight;
@property (nonatomic, readonly) RCWaveformGenerator *waveformGenerator;
@property (nonatomic, readonly) NSHashTable *weakObservers;

- (void).cxx_destruct;
- (void)_performObserversBlock:(id /* block */)arg1;
- (void)_performOnObserversBlock:(id /* block */)arg1;
- (id)accumulatorWaveform;
- (void)addObserver:(id)arg1;
- (double)averagePowerLevelsRate;
- (void)beginLoading;
- (bool)canceled;
- (void)dealloc;
- (double)duration;
- (double)durationPerWaveformSlice;
- (void)finishLoadingWithCompletionTimeout:(unsigned long long)arg1 completionBlock:(id /* block */)arg2;
- (bool)finished;
- (id)generatedWaveformOutputURL;
- (bool)hasSavedGeneratedWaveform;
- (bool)hasStartedLoading;
- (id)initWithWaveformGenerator:(id)arg1 generatedWaveformOutputURL:(id)arg2;
- (id)liveRecordingMergingWaveform;
- (float)loadingProgress;
- (void)mergeGeneratedWaveformIfNecessary;
- (id)queue;
- (void)removeObserver:(id)arg1;
- (void)saveGeneratedWaveformIfNecessary;
- (id)saveableWaveform;
- (id)segmentsInCompositionByConvertingFromActiveLoadingFragment:(id)arg1;
- (void)setDurationPerWaveformSlice:(double)arg1;
- (void)setHasSavedGeneratedWaveform:(bool)arg1;
- (bool)setPaused:(bool)arg1;
- (bool)shouldMergeLiveWaveform;
- (id)synchronouslyApproximateWaveformSegmentsByReadingCurrentFileAheadTimeRange:(struct { double x1; double x2; })arg1;
- (struct { double x1; double x2; })timeRangeToHighlight;
- (void)updateAccumulatorWaveformSegmentsWithBlock:(id /* block */)arg1;
- (bool)waitUntilFinished;
- (id)waveformGenerator;
- (void)waveformGenerator:(id)arg1 didLoadWaveformSegment:(id)arg2;
- (void)waveformGeneratorDidFinishLoading:(id)arg1 error:(id)arg2;
- (void)waveformGeneratorWillBeginLoading:(id)arg1;
- (id)waveformSegmentsInTimeRange:(struct { double x1; double x2; })arg1;
- (id)weakObservers;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

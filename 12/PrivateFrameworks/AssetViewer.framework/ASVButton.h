<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ASVButton.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/AssetViewer.framework/ASVButton.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/AssetViewer.framework/AssetViewer (1)
 */

@interface ASVButton : UIControl {
    UIColor * _black35PercentColor;
    UIColor * _black70PercentColor;
    UIColor * _blue100PercentColor;
    UIColor * _blue50PercentColor;
    ASVBlurredBackgroundView * _blurredBackgroundView;
    UIFont * _boldFont;
    ASVWrappedButton * _button;
    long long  _buttonStyle;
    long long  _controlStyle;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _largeImageInsets;
    UIFont * _regularFont;
    long long  _textStyle;
    UIColor * _white100PercentColor;
    UIColor * _white35PercentColor;
    UIColor * _white70PercentColor;
}

@property (nonatomic, retain) UIColor *black35PercentColor;
@property (nonatomic, retain) UIColor *black70PercentColor;
@property (nonatomic, retain) UIColor *blue100PercentColor;
@property (nonatomic, retain) UIColor *blue50PercentColor;
@property (nonatomic, retain) ASVBlurredBackgroundView *blurredBackgroundView;
@property (nonatomic, retain) UIFont *boldFont;
@property (nonatomic, retain) ASVWrappedButton *button;
@property (nonatomic) long long buttonStyle;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentEdgeInsets;
@property (nonatomic) long long controlStyle;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } largeImageInsets;
@property (nonatomic, retain) UIFont *regularFont;
@property (nonatomic) long long textStyle;
@property (nonatomic, retain) UIColor *white100PercentColor;
@property (nonatomic, retain) UIColor *white35PercentColor;
@property (nonatomic, retain) UIColor *white70PercentColor;

- (void).cxx_destruct;
- (id)_colorDarkenedIfNeededForColor:(id)arg1;
- (void)_didUpdateContentSizeCategory:(id)arg1;
- (void)_didUpdateDarkenColorsSetting:(id)arg1;
- (void)_updateTitleStyleForButton:(id)arg1 withControlStyle:(long long)arg2;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (id)black35PercentColor;
- (id)black70PercentColor;
- (id)blue100PercentColor;
- (id)blue50PercentColor;
- (id)blurredBackgroundView;
- (id)boldFont;
- (id)button;
- (long long)buttonStyle;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentEdgeInsets;
- (long long)controlStyle;
- (id)initWithButton:(id)arg1 buttonStyle:(long long)arg2 textStyle:(long long)arg3 controlStyle:(long long)arg4 largeImageInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg5;
- (id)initWithImage:(id)arg1 buttonStyle:(long long)arg2 textStyle:(long long)arg3 controlStyle:(long long)arg4;
- (id)initWithImage:(id)arg1 buttonStyle:(long long)arg2 textStyle:(long long)arg3 controlStyle:(long long)arg4 largeImageInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg5;
- (id)initWithTitle:(id)arg1 buttonStyle:(long long)arg2 textStyle:(long long)arg3 controlStyle:(long long)arg4;
- (id)initWithTitle:(id)arg1 buttonStyle:(long long)arg2 textStyle:(long long)arg3 controlStyle:(long long)arg4 adjustsFontForContentSizeCategory:(bool)arg5;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })largeImageInsets;
- (id)regularFont;
- (void)setBlack35PercentColor:(id)arg1;
- (void)setBlack70PercentColor:(id)arg1;
- (void)setBlue100PercentColor:(id)arg1;
- (void)setBlue50PercentColor:(id)arg1;
- (void)setBlurredBackgroundView:(id)arg1;
- (void)setBoldFont:(id)arg1;
- (void)setButton:(id)arg1;
- (void)setButtonStyle:(long long)arg1;
- (void)setContentEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setControlStyle:(long long)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setLargeImageInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setRegularFont:(id)arg1;
- (void)setSelected:(bool)arg1;
- (void)setTextStyle:(long long)arg1;
- (void)setWhite100PercentColor:(id)arg1;
- (void)setWhite35PercentColor:(id)arg1;
- (void)setWhite70PercentColor:(id)arg1;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (long long)textStyle;
- (id)white100PercentColor;
- (id)white35PercentColor;
- (id)white70PercentColor;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

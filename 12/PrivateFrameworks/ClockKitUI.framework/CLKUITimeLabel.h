<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CLKUITimeLabel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ClockKitUI.framework/CLKUITimeLabel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ClockKitUI.framework/ClockKitUI (1)
 */

@interface CLKUITimeLabel : UIView <CLKTimeFormatterDelegate, CLKTimeFormatterObserver, CLKUILabel> {
    CLKDevice * _device;
    id /* block */  _didResizeHandler;
    double  _fadeEnd;
    double  _fadeStart;
    <_CLKUITimeLabelManager> * _fromLabelManager;
    CLKUITimeLabelStyle * _fromStyle;
    <_CLKUITimeLabelManager> * _labelManager;
    double  _maxWidth;
    unsigned long long  _options;
    bool  _paused;
    bool  _showSeconds;
    bool  _showsDesignator;
    CLKUITimeLabelStyle * _style;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _styleTransitionEndFrame;
    double  _styleTransitionFraction;
    bool  _styleTransitioning;
    CLKTimeFormatter * _timeFormatter;
    NSString * _timeText;
}

@property (nonatomic, readonly) double _lastLineBaseline;
@property (nonatomic, copy) NSAttributedString *attributedText;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) CLKDevice *device;
@property (nonatomic, copy) id /* block */ didResizeHandler;
@property (nonatomic, retain) UIFont *font;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } intrinsicSize;
@property (nonatomic) double maxWidth;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } opticalInsets;
@property (nonatomic, readonly) unsigned long long options;
@property (nonatomic) bool paused;
@property (nonatomic) bool showSeconds;
@property (nonatomic) bool showsDesignator;
@property (nonatomic, copy) CLKUITimeLabelStyle *style;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *text;
@property (nonatomic) long long textAlignment;
@property (nonatomic, retain) UIColor *textColor;
@property (nonatomic, readonly) CLKTimeFormatter *timeFormatter;

+ (id)labelWithOptions:(unsigned long long)arg1;
+ (id)labelWithOptions:(unsigned long long)arg1 forDevice:(id)arg2;

- (void).cxx_destruct;
- (void)_cancelAnimation;
- (void)_enumerateUnderlyingLabelsWithBlock:(id /* block */)arg1;
- (void)_fadeTransitionLabels;
- (double)_lastLineBaseline;
- (id)_newLabelManager;
- (id)_newUnderlyingLabel:(bool)arg1;
- (void)_resizeIfNecessary;
- (void)_scaleTransitionLabels;
- (id)attributedText;
- (void)cleanupAfterStyleTransition;
- (id)device;
- (void)didMoveToWindow;
- (id /* block */)didResizeHandler;
- (id)font;
- (id)identifyingInfoForTimeFormatter:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 forDevice:(id)arg2;
- (id)initWithTimeLabelOptions:(unsigned long long)arg1;
- (id)initWithTimeLabelOptions:(unsigned long long)arg1 forDevice:(id)arg2;
- (struct CGSize { double x1; double x2; })intrinsicSize;
- (void)layoutSubviews;
- (double)maxWidth;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })opticalInsets;
- (unsigned long long)options;
- (bool)paused;
- (void)prepareToTransitionToStyle:(id)arg1;
- (void)setAttributedText:(id)arg1;
- (void)setBlinkingPaused:(bool)arg1;
- (void)setDidResizeHandler:(id /* block */)arg1;
- (void)setFont:(id)arg1;
- (void)setHidden:(bool)arg1;
- (void)setMaxWidth:(double)arg1;
- (void)setOverrideDate:(id)arg1 duration:(double)arg2;
- (void)setPaused:(bool)arg1;
- (void)setShowSeconds:(bool)arg1;
- (void)setShowsDesignator:(bool)arg1;
- (void)setStyle:(id)arg1;
- (void)setStyleTransitionFraction:(double)arg1;
- (void)setText:(id)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setTextColor:(id)arg1;
- (void)setThreeDigitFont:(id)arg1 fourDigitFont:(id)arg2 designatorFont:(id)arg3;
- (void)setTimeFont:(id)arg1 designatorFont:(id)arg2;
- (void)setTimeOffset:(double)arg1;
- (bool)showSeconds;
- (bool)showsDesignator;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)sizeToFit;
- (id)style;
- (struct CGSize { double x1; double x2; })styleTransitionCurrentSize;
- (struct CGSize { double x1; double x2; })styleTransitionEndSize;
- (id)text;
- (long long)textAlignment;
- (id)textColor;
- (id)timeFormatter;
- (void)timeFormatterTextDidChange:(id)arg1;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

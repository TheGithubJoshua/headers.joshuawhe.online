<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CLKUIAtlasBacking.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ClockKitUI.framework/CLKUIAtlasBacking.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ClockKitUI.framework/ClockKitUI (1)
 */

@interface CLKUIAtlasBacking : NSObject {
    NSData * _data;
    CLKUIMmapFile * _mmapFile;
    struct CLKUIAtlasBackingStructure { 
        void *bytes; 
        unsigned int length; 
        unsigned int width; 
        unsigned int height; 
        unsigned int planes; 
        unsigned int planeLength; 
        unsigned int bytesPerPixel; 
        unsigned int mipCount; 
        unsigned char format; 
        unsigned char filter; 
        unsigned char wrap; 
        bool mipmaps; 
    }  _structure;
    NSString * _uuid;
}

@property (nonatomic, readonly) const void*bytes;
@property (nonatomic, readonly) unsigned long long bytesPerPixel;
@property (nonatomic) unsigned char filter;
@property (nonatomic, readonly) unsigned char format;
@property (nonatomic, readonly) unsigned long long height;
@property (nonatomic, readonly) unsigned long long length;
@property (nonatomic, readonly) unsigned long long mipCount;
@property (nonatomic, readonly) bool mipmaps;
@property (nonatomic, readonly) unsigned long long planeLength;
@property (nonatomic, readonly) unsigned long long planes;
@property (nonatomic, readonly) struct CLKUIAtlasBackingStructure { void *x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned char x9; unsigned char x10; unsigned char x11; bool x12; } structure;
@property (nonatomic, readonly) NSString *uuid;
@property (nonatomic, readonly) unsigned long long width;
@property (nonatomic) unsigned char wrap;

+ (id)atlasBackingWithArt:(id)arg1 uuid:(id)arg2;
+ (id)atlasBackingWithBytes:(const void*)arg1 length:(unsigned long long)arg2 mmapFile:(id)arg3 uuid:(id)arg4;
+ (id)atlasBackingWithImage:(id)arg1 uuid:(id)arg2;
+ (id)atlasBackingWithImage:(id)arg1 uuid:(id)arg2 mipmap:(bool)arg3;

- (void).cxx_destruct;
- (const void*)bytes;
- (unsigned long long)bytesPerPixel;
- (unsigned char)filter;
- (unsigned char)format;
- (unsigned long long)height;
- (id)initWithUuid:(id)arg1 structure:(struct CLKUIAtlasBackingStructure { void *x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned char x9; unsigned char x10; unsigned char x11; bool x12; })arg2 data:(id)arg3;
- (id)initWithUuid:(id)arg1 structure:(struct CLKUIAtlasBackingStructure { void *x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned char x9; unsigned char x10; unsigned char x11; bool x12; })arg2 mmapFile:(id)arg3;
- (unsigned long long)length;
- (unsigned long long)mipCount;
- (bool)mipmaps;
- (unsigned long long)planeLength;
- (unsigned long long)planes;
- (void)setFilter:(unsigned char)arg1;
- (void)setWrap:(unsigned char)arg1;
- (struct CLKUIAtlasBackingStructure { void *x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned char x9; unsigned char x10; unsigned char x11; bool x12; })structure;
- (id)uuid;
- (unsigned long long)width;
- (unsigned char)wrap;
- (bool)writeToFile:(id)arg1 error:(id*)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

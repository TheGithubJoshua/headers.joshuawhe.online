<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCPFaceShapeModel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideoProcessing.framework/VCPFaceShapeModel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideoProcessing.framework/VideoProcessing (699.60)
 */

@interface VCPFaceShapeModel : NSObject {
    float  _LM2D;
    float  _LM3D;
    float * _asyncBlendshapes;
    float  _asyncExtMat;
    float  _asyncLm2d;
    float * _asyncLmBlendshapes;
    float  _asyncWeights;
    float * _blendShapeDelta;
    bool * _boundaryLandmarkValidity;
    int * _boundaryLmIndices;
    bool  _boundaryLmUpdated;
    int * _boundaryVertices;
    int  _chCount;
    bool  _chPtSelected;
    struct { 
        float x; 
        float y; 
        int index; 
    }  _chPts;
    float * _cur2D;
    float * _curBlendshapes;
    float * _curCoeff;
    float * _curExprWeights;
    float * _curMesh;
    int  _detectionModeCounterShapeModel;
    float  _eulerAngle;
    float * _exprWeightDiagMatrix;
    float  _extrinsicMatrix;
    bool  _identityInit;
    float  _intrinsicMatrix;
    float * _lm3dBlendshapeComponents;
    float * _lm3dBlendshapes;
    float * _lm3dMeanBlendshapes;
    int * _lmCoord;
    float * _lmWeight;
    /* Warning: Unrecognized filer type: '' using 'void*' */ void** _meshVertices;
    int  _numBoundaryLms;
    int  _numBoundaryVertices;
    int  _numFrmsSinceLastShapeUpdate;
    int  _numInternalLms;
    int  _numVertices;
    VCPPnPSolver * _poseSolver;
    float * _prevExprWeights;
    int  _processingMode;
    float  _rotMatrix;
    bool  _shapeUpdateInProgress;
    VCPFaceTensorModel * _tensorModel;
    float  _trans;
    float * _transformedCoeff;
    NSObject<OS_dispatch_queue> * _updateShapeQueue;
    unsigned long long  _vertexCount;
}

@property int detectionModeCounterShapeModel;
@property bool identityInit;
@property (readonly) /* Warning: Unrecognized filer type: '' using 'void*' */ void**meshVertices;
@property int processingMode;
@property (readonly) unsigned long long vertexCount;

- (void).cxx_destruct;
- (id)blendShapes;
- (void)calculateBlendshapeWeights:(float*)arg1 prevWeights:(float*)arg2 lmBlendshapes:(float*)arg3 maxIter:(int)arg4;
- (void)calculateIdentityCoefficients:(float*)arg1 extrinsicMatrix:(float*)arg2 pts2D:(float*)arg3 exprWeights:(float*)arg4 lm3DMeanBlendshapes:(float*)arg5 lm3DComponents:(float*)arg6 maxIter:(int)arg7;
- (void)calculatePosePnpSolver:(int)arg1;
- (void)dealloc;
- (int)detectionModeCounterShapeModel;
- (bool)fitOneImage:(float*)arg1;
- (void)getEulerAngle:(float*)arg1;
- (void)getInternal3dLandmarksCoordinates:(const float*)arg1 lm3dPos:(float*)arg2;
- (void)getOneInternalLandmarkCoordinates:(const float*)arg1 lmCoord:(const int*)arg2 lmWeight:(const float*)arg3 lm3dPos:(float*)arg4;
- (struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x1[4]; })getPose;
- (struct matrix<double, 6, 1, dlib::memory_manager_stateless_kernel_1<char>, dlib::row_major_layout> { struct layout<double, 6, 1, dlib::memory_manager_stateless_kernel_1<char>, 1> { double x_1_1_1[6]; } x1; })getPoseParam;
- (bool)identityInit;
- (id)initWithMode:(int)arg1;
- (/* Warning: Unrecognized filer type: '1' using 'void*' */ void**)meshVertices;
- (void)moveBoundaryLandmarks:(const float*)arg1 output:(float*)arg2 isInput:(bool)arg3;
- (bool)optimizeProjectionMatrix:(int)arg1 tracking:(bool)arg2 firstPass:(bool)arg3;
- (int)processingMode;
- (void)project3Dto2D:(float*)arg1 intrinsinc:(float*)arg2 extrinsic:(float*)arg3 numVert:(int)arg4 out2dpts:(float*)arg5;
- (void)projectAndUpdateBoundary;
- (void)reestimateProjectionMatrixPnP;
- (void)resetIdentityAndExpressions;
- (int)setCameraIntrinsics:(float)arg1 uc:(float)arg2 vc:(float)arg3;
- (void)setDetectionModeCounterShapeModel:(int)arg1;
- (void)setIdentityInit:(bool)arg1;
- (void)setProcessingMode:(int)arg1;
- (int)setupModel:(int)arg1;
- (bool)trackFaceMesh:(float*)arg1;
- (void)updateBoundary3dLandmarkBlendshapes:(const float*)arg1 numBlendshapes:(int)arg2 pts2D:(const float*)arg3 lm2D:(const float*)arg4 lmBlendshapes:(float*)arg5;
- (void)updateBoundaryLandmarkCoordinates:(const float*)arg1 pts2D:(const float*)arg2 lm2D:(const float*)arg3 lm3dPos:(float*)arg4;
- (void)updateBoundaryLmForShapeOptimization;
- (void)updateFocalLengthInPixels:(float)arg1;
- (void)updateIdentityShape:(float*)arg1;
- (void)updateIntrinsic:(float)arg1 vc:(float)arg2;
- (void)updateMeshAndLm3dAfterExpressionChange;
- (void)updateMeshVertices;
- (void)updateShapeCoeff:(float*)arg1 extrinsicMatrix:(float*)arg2 pts2D:(float*)arg3 exprWeights:(float*)arg4 outputblendshapes:(float*)arg5;
- (unsigned long long)vertexCount;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

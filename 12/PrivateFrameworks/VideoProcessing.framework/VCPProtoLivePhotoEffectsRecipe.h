<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VCPProtoLivePhotoEffectsRecipe.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/VideoProcessing.framework/VCPProtoLivePhotoEffectsRecipe.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/VideoProcessing.framework/VideoProcessing (699.60)
 */

@interface VCPProtoLivePhotoEffectsRecipe : PBCodable <NSCopying, VCPProtoResultLegacyConversionProtocol> {
    VCPProtoLivePhotoVariationParams * _autoloop;
    VCPProtoLivePhotoVariationParams * _bounce;
    int  _cropRectHeight;
    int  _cropRectWidth;
    int  _cropRectX;
    int  _cropRectY;
    long long  _epoch;
    int  _flags;
    NSMutableArray * _frameInstructions;
    struct { 
        unsigned int epoch : 1; 
        unsigned int flags : 1; 
    }  _has;
    VCPProtoLivePhotoVariationParams * _longexposure;
    int  _minVersion;
    long long  _outputFrameDurValue;
    VCPProtoLivePhotoVariationParams * _stabilize;
    int  _stabilizeResult;
    int  _timeScale;
    int  _version;
}

@property (nonatomic, retain) VCPProtoLivePhotoVariationParams *autoloop;
@property (nonatomic, retain) VCPProtoLivePhotoVariationParams *bounce;
@property (nonatomic) int cropRectHeight;
@property (nonatomic) int cropRectWidth;
@property (nonatomic) int cropRectX;
@property (nonatomic) int cropRectY;
@property (nonatomic) long long epoch;
@property (nonatomic) int flags;
@property (nonatomic, retain) NSMutableArray *frameInstructions;
@property (nonatomic) bool hasEpoch;
@property (nonatomic) bool hasFlags;
@property (nonatomic, retain) VCPProtoLivePhotoVariationParams *longexposure;
@property (nonatomic) int minVersion;
@property (nonatomic) long long outputFrameDurValue;
@property (nonatomic, retain) VCPProtoLivePhotoVariationParams *stabilize;
@property (nonatomic) int stabilizeResult;
@property (nonatomic) int timeScale;
@property (nonatomic) int version;

+ (Class)frameInstructionsType;
+ (id)resultFromLegacyDictionary:(id)arg1;

- (void).cxx_destruct;
- (void)addFrameInstructions:(id)arg1;
- (id)autoloop;
- (id)bounce;
- (void)clearFrameInstructions;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)cropRectHeight;
- (int)cropRectWidth;
- (int)cropRectX;
- (int)cropRectY;
- (id)description;
- (id)dictionaryRepresentation;
- (long long)epoch;
- (id)exportToLegacyDictionary;
- (id)exportToLegacyDictionaryFromFrameInstruction:(id)arg1 withTimeParam:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (id)exportToLegacyDictionaryFromParam:(id)arg1 withLoopFlavor:(id)arg2;
- (int)flags;
- (id)frameInstructions;
- (id)frameInstructionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)frameInstructionsCount;
- (bool)hasEpoch;
- (bool)hasFlags;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)longexposure;
- (void)mergeFrom:(id)arg1;
- (int)minVersion;
- (long long)outputFrameDurValue;
- (bool)readFrom:(id)arg1;
- (void)setAutoloop:(id)arg1;
- (void)setBounce:(id)arg1;
- (void)setCropRectHeight:(int)arg1;
- (void)setCropRectWidth:(int)arg1;
- (void)setCropRectX:(int)arg1;
- (void)setCropRectY:(int)arg1;
- (void)setEpoch:(long long)arg1;
- (void)setFlags:(int)arg1;
- (void)setFrameInstructions:(id)arg1;
- (void)setHasEpoch:(bool)arg1;
- (void)setHasFlags:(bool)arg1;
- (void)setLongexposure:(id)arg1;
- (void)setMinVersion:(int)arg1;
- (void)setOutputFrameDurValue:(long long)arg1;
- (void)setStabilize:(id)arg1;
- (void)setStabilizeResult:(int)arg1;
- (void)setTimeScale:(int)arg1;
- (void)setVersion:(int)arg1;
- (id)stabilize;
- (int)stabilizeResult;
- (int)timeScale;
- (int)version;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ASCompetitionScoreViewConfiguration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ActivitySharing.framework/ASCompetitionScoreViewConfiguration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing (1)
 */

@interface ASCompetitionScoreViewConfiguration : NSObject {
    long long  _achievementThumbnailAlignment;
    long long  _achievementThumbnailQuality;
    struct CGSize { 
        double width; 
        double height; 
    }  _achievementThumbnailSize;
    double  _achievementThumbnailTopMargin;
    long long  _alignment;
    double  _bottomMargin;
    long long  _division;
    double  _headerBaselineOffset;
    UIFont * _headerFont;
    double  _minimumMiddleMargin;
    double  _nameBaselineOffset;
    UIFont * _nameFont;
    double  _opponentScoreViewWidth;
    double  _primaryScoreBaselineOffset;
    UIFont * _primaryScoreFont;
    long long  _primaryScoreSource;
    UIFont * _primaryScoreUnitFont;
    double  _secondaryScoreBaselineOffset;
    UIFont * _secondaryScoreFont;
    bool  _showsAchievementThumbnail;
    bool  _showsNames;
    bool  _showsPrimaryScoreUnits;
    bool  _showsScoreTypeHeader;
    bool  _showsTodaySecondaryScore;
    double  _sideMargin;
    bool  _uppercaseNames;
    bool  _wantsScaledBaselineAlignment;
    bool  _zeroPadPrimaryScore;
}

@property (nonatomic) long long achievementThumbnailAlignment;
@property (nonatomic) long long achievementThumbnailQuality;
@property (nonatomic) struct CGSize { double x1; double x2; } achievementThumbnailSize;
@property (nonatomic) double achievementThumbnailTopMargin;
@property (nonatomic) long long alignment;
@property (nonatomic) double bottomMargin;
@property (nonatomic) long long division;
@property (nonatomic) double headerBaselineOffset;
@property (nonatomic, retain) UIFont *headerFont;
@property (nonatomic) double minimumMiddleMargin;
@property (nonatomic) double nameBaselineOffset;
@property (nonatomic, retain) UIFont *nameFont;
@property (nonatomic) double opponentScoreViewWidth;
@property (nonatomic) double primaryScoreBaselineOffset;
@property (nonatomic, retain) UIFont *primaryScoreFont;
@property (nonatomic) long long primaryScoreSource;
@property (nonatomic, retain) UIFont *primaryScoreUnitFont;
@property (nonatomic) double secondaryScoreBaselineOffset;
@property (nonatomic, retain) UIFont *secondaryScoreFont;
@property (nonatomic) bool showsAchievementThumbnail;
@property (nonatomic) bool showsNames;
@property (nonatomic) bool showsPrimaryScoreUnits;
@property (nonatomic) bool showsScoreTypeHeader;
@property (nonatomic) bool showsTodaySecondaryScore;
@property (nonatomic) double sideMargin;
@property (nonatomic) bool uppercaseNames;
@property (nonatomic) bool wantsScaledBaselineAlignment;
@property (nonatomic) bool zeroPadPrimaryScore;

+ (id)companionFriendListConfiguration;
+ (id)companionTotalScoreFriendDetailConfiguration;
+ (id)companionTotalWinsFriendDetailConfiguration;
+ (id)companionTotalWinsStandaloneFriendDetailConfiguration;
+ (id)gizmoTodayScoreConfiguration;
+ (id)gizmoTotalScoreConfiguration;
+ (id)gizmoTotalScoreFriendDetailConfiguration;
+ (id)gizmoTotalWinsConfiguration;
+ (id)gizmoTotalWinsStandaloneConfiguration;

- (void).cxx_destruct;
- (long long)achievementThumbnailAlignment;
- (long long)achievementThumbnailQuality;
- (struct CGSize { double x1; double x2; })achievementThumbnailSize;
- (double)achievementThumbnailTopMargin;
- (long long)alignment;
- (double)bottomMargin;
- (long long)division;
- (double)headerBaselineOffset;
- (id)headerFont;
- (double)minimumMiddleMargin;
- (double)nameBaselineOffset;
- (id)nameFont;
- (double)opponentScoreViewWidth;
- (double)primaryScoreBaselineOffset;
- (id)primaryScoreFont;
- (long long)primaryScoreSource;
- (id)primaryScoreUnitFont;
- (double)secondaryScoreBaselineOffset;
- (id)secondaryScoreFont;
- (void)setAchievementThumbnailAlignment:(long long)arg1;
- (void)setAchievementThumbnailQuality:(long long)arg1;
- (void)setAchievementThumbnailSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setAchievementThumbnailTopMargin:(double)arg1;
- (void)setAlignment:(long long)arg1;
- (void)setBottomMargin:(double)arg1;
- (void)setDivision:(long long)arg1;
- (void)setHeaderBaselineOffset:(double)arg1;
- (void)setHeaderFont:(id)arg1;
- (void)setMinimumMiddleMargin:(double)arg1;
- (void)setNameBaselineOffset:(double)arg1;
- (void)setNameFont:(id)arg1;
- (void)setOpponentScoreViewWidth:(double)arg1;
- (void)setPrimaryScoreBaselineOffset:(double)arg1;
- (void)setPrimaryScoreFont:(id)arg1;
- (void)setPrimaryScoreSource:(long long)arg1;
- (void)setPrimaryScoreUnitFont:(id)arg1;
- (void)setSecondaryScoreBaselineOffset:(double)arg1;
- (void)setSecondaryScoreFont:(id)arg1;
- (void)setShowsAchievementThumbnail:(bool)arg1;
- (void)setShowsNames:(bool)arg1;
- (void)setShowsPrimaryScoreUnits:(bool)arg1;
- (void)setShowsScoreTypeHeader:(bool)arg1;
- (void)setShowsTodaySecondaryScore:(bool)arg1;
- (void)setSideMargin:(double)arg1;
- (void)setUppercaseNames:(bool)arg1;
- (void)setWantsScaledBaselineAlignment:(bool)arg1;
- (void)setZeroPadPrimaryScore:(bool)arg1;
- (bool)showsAchievementThumbnail;
- (bool)showsNames;
- (bool)showsPrimaryScoreUnits;
- (bool)showsScoreTypeHeader;
- (bool)showsTodaySecondaryScore;
- (double)sideMargin;
- (bool)uppercaseNames;
- (bool)wantsScaledBaselineAlignment;
- (bool)zeroPadPrimaryScore;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

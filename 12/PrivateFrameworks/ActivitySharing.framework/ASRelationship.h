<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ASRelationship.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ActivitySharing.framework/ASRelationship.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing (1)
 */

@interface ASRelationship : NSObject <ASCloudKitCodable, NSCopying> {
    NSUUID * _UUID;
    NSSet * _addresses;
    NSString * _cloudKitAddress;
    NSDate * _dateActivityDataInitiallyBecameVisible;
    NSDate * _dateForLatestDataHidden;
    NSDate * _dateForLatestIgnoredCompetitionRequest;
    NSDate * _dateForLatestIncomingCompetitionRequest;
    NSDate * _dateForLatestOutgoingCompetitionRequest;
    NSDate * _dateForLatestOutgoingInviteRequest;
    NSDate * _dateForLatestRelationshipStart;
    bool  _hasCompletedCompetition;
    bool  _hasIgnoredCompetitionRequest;
    bool  _hasIncomingCompetitionRequest;
    bool  _hasIncomingInviteRequest;
    bool  _hasOutgoingCompetitionRequest;
    bool  _hasOutgoingInviteRequest;
    NSString * _incomingHandshakeToken;
    bool  _isAwaitingCompetitionResponse;
    bool  _isAwaitingInviteResponse;
    bool  _isCompetitionActive;
    bool  _isFriendshipActive;
    bool  _isHidingActivityData;
    bool  _isMuteEnabled;
    NSString * _outgoingHandshakeToken;
    NSString * _preferredReachableAddress;
    NSString * _preferredReachableService;
    NSArray * _relationshipEvents;
    CKRecordID * _relationshipShareID;
    CKRecordID * _remoteActivityDataShareID;
    CKRecordID * _remoteRelationshipShareID;
    bool  _sentInviteResponse;
    unsigned int  _supportedPhoneFeatures;
    unsigned int  _supportedWatchFeatures;
    CKRecord * _systemFieldsOnlyRecord;
    long long  _version;
}

@property (nonatomic, copy) NSUUID *UUID;
@property (nonatomic, retain) NSSet *addresses;
@property (nonatomic, retain) NSString *cloudKitAddress;
@property (nonatomic, readonly) ASCodableCloudKitRelationship *codableRelationship;
@property (nonatomic, readonly) unsigned long long currentRelationshipEventAnchor;
@property (nonatomic, retain) NSDate *dateActivityDataInitiallyBecameVisible;
@property (nonatomic, retain) NSDate *dateForLatestDataHidden;
@property (nonatomic, retain) NSDate *dateForLatestIgnoredCompetitionRequest;
@property (nonatomic, retain) NSDate *dateForLatestIncomingCompetitionRequest;
@property (nonatomic, retain) NSDate *dateForLatestOutgoingCompetitionRequest;
@property (nonatomic, retain) NSDate *dateForLatestOutgoingInviteRequest;
@property (nonatomic, retain) NSDate *dateForLatestRelationshipStart;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasCompletedCompetition;
@property (nonatomic) bool hasIgnoredCompetitionRequest;
@property (nonatomic) bool hasIncomingCompetitionRequest;
@property (nonatomic) bool hasIncomingInviteRequest;
@property (nonatomic) bool hasOutgoingCompetitionRequest;
@property (nonatomic) bool hasOutgoingInviteRequest;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *incomingHandshakeToken;
@property (nonatomic, readonly) bool isActivityDataVisible;
@property (nonatomic) bool isAwaitingCompetitionResponse;
@property (nonatomic) bool isAwaitingInviteResponse;
@property (nonatomic) bool isCompetitionActive;
@property (nonatomic) bool isFriendshipActive;
@property (nonatomic, readonly) bool isHidingActivityData;
@property (nonatomic) bool isMuteEnabled;
@property (nonatomic, retain) NSString *outgoingHandshakeToken;
@property (nonatomic, retain) NSString *preferredReachableAddress;
@property (nonatomic, retain) NSString *preferredReachableService;
@property (nonatomic, copy) NSArray *relationshipEvents;
@property (nonatomic, retain) CKRecordID *relationshipShareID;
@property (nonatomic, retain) CKRecordID *remoteActivityDataShareID;
@property (nonatomic, retain) CKRecordID *remoteRelationshipShareID;
@property (nonatomic) bool sentInviteResponse;
@property (readonly) Class superclass;
@property (nonatomic) unsigned int supportedPhoneFeatures;
@property (nonatomic) unsigned int supportedWatchFeatures;
@property (nonatomic, retain) CKRecord *systemFieldsOnlyRecord;
@property (nonatomic, readonly) NSDate *timestampForMostRecentRelationshipEvent;
@property (nonatomic) long long version;

+ (void)_relationshipWithRecord:(id)arg1 relationshipEventRecords:(id)arg2 completion:(id /* block */)arg3;
+ (id)relationshipWithCodableRelationship:(id)arg1 version:(long long)arg2;
+ (id)relationshipWithCodableRelationshipContainer:(id)arg1;
+ (id)relationshipsWithRelationshipAndEventRecords:(id)arg1;

- (void).cxx_destruct;
- (id)UUID;
- (void)_clearRelationshipState;
- (unsigned long long)_nextAnchor;
- (void)_setRelationshipEvents:(id)arg1;
- (void)_updateCurrentRelationshipState;
- (void)_updateDateActivityDataBecameVisibleWithDate:(id)arg1;
- (void)_updateDateFriendshipBeganWithDate:(id)arg1;
- (id)addresses;
- (id)cloudKitAddress;
- (id)codableRelationship;
- (id)codableRelationshipContainerIncludingCloudKitFields:(bool)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)currentRelationshipEventAnchor;
- (id)dateActivityDataInitiallyBecameVisible;
- (id)dateForLatestDataHidden;
- (id)dateForLatestIgnoredCompetitionRequest;
- (id)dateForLatestIncomingCompetitionRequest;
- (id)dateForLatestOutgoingCompetitionRequest;
- (id)dateForLatestOutgoingInviteRequest;
- (id)dateForLatestRelationshipStart;
- (id)description;
- (bool)hasCompletedCompetition;
- (bool)hasIgnoredCompetitionRequest;
- (bool)hasIncomingCompetitionRequest;
- (bool)hasIncomingInviteRequest;
- (bool)hasOutgoingCompetitionRequest;
- (bool)hasOutgoingInviteRequest;
- (id)incomingHandshakeToken;
- (id)init;
- (void)insertEventWithType:(unsigned short)arg1;
- (void)insertEvents:(id)arg1;
- (bool)isActivityDataVisible;
- (bool)isAwaitingCompetitionResponse;
- (bool)isAwaitingInviteResponse;
- (bool)isCompetitionActive;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToRelationship:(id)arg1;
- (bool)isFriendshipActive;
- (bool)isHidingActivityData;
- (bool)isMuteEnabled;
- (id)outgoingHandshakeToken;
- (id)preferredReachableAddress;
- (id)preferredReachableService;
- (id)recordWithZoneID:(id)arg1;
- (id)relationshipEvents;
- (id)relationshipShareID;
- (id)relationshipSnapshotForDate:(id)arg1;
- (id)remoteActivityDataShareID;
- (id)remoteRelationshipShareID;
- (bool)sentInviteResponse;
- (void)setAddresses:(id)arg1;
- (void)setCloudKitAddress:(id)arg1;
- (void)setDateActivityDataInitiallyBecameVisible:(id)arg1;
- (void)setDateForLatestDataHidden:(id)arg1;
- (void)setDateForLatestIgnoredCompetitionRequest:(id)arg1;
- (void)setDateForLatestIncomingCompetitionRequest:(id)arg1;
- (void)setDateForLatestOutgoingCompetitionRequest:(id)arg1;
- (void)setDateForLatestOutgoingInviteRequest:(id)arg1;
- (void)setDateForLatestRelationshipStart:(id)arg1;
- (void)setHasCompletedCompetition:(bool)arg1;
- (void)setHasIgnoredCompetitionRequest:(bool)arg1;
- (void)setHasIncomingCompetitionRequest:(bool)arg1;
- (void)setHasIncomingInviteRequest:(bool)arg1;
- (void)setHasOutgoingCompetitionRequest:(bool)arg1;
- (void)setHasOutgoingInviteRequest:(bool)arg1;
- (void)setIncomingHandshakeToken:(id)arg1;
- (void)setIsAwaitingCompetitionResponse:(bool)arg1;
- (void)setIsAwaitingInviteResponse:(bool)arg1;
- (void)setIsCompetitionActive:(bool)arg1;
- (void)setIsFriendshipActive:(bool)arg1;
- (void)setIsMuteEnabled:(bool)arg1;
- (void)setOutgoingHandshakeToken:(id)arg1;
- (void)setPreferredReachableAddress:(id)arg1;
- (void)setPreferredReachableService:(id)arg1;
- (void)setRelationshipEvents:(id)arg1;
- (void)setRelationshipShareID:(id)arg1;
- (void)setRemoteActivityDataShareID:(id)arg1;
- (void)setRemoteRelationshipShareID:(id)arg1;
- (void)setSentInviteResponse:(bool)arg1;
- (void)setSupportedPhoneFeatures:(unsigned int)arg1;
- (void)setSupportedWatchFeatures:(unsigned int)arg1;
- (void)setSystemFieldsOnlyRecord:(id)arg1;
- (void)setUUID:(id)arg1;
- (void)setVersion:(long long)arg1;
- (unsigned int)supportedPhoneFeatures;
- (unsigned int)supportedWatchFeatures;
- (bool)supportsCompetitions;
- (id)systemFieldsOnlyRecord;
- (id)timestampForMostRecentRelationshipEvent;
- (void)traverseRelationshipHistoryStartingAtEventWithAnchor:(unsigned long long)arg1 block:(id /* block */)arg2;
- (long long)version;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

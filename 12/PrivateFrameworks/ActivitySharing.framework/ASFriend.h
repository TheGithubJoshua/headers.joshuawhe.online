<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ASFriend.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ActivitySharing.framework/ASFriend.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ActivitySharing.framework/ActivitySharing (1)
 */

@interface ASFriend : NSObject <NSCopying> {
    NSArray * _competitions;
    ASContact * _contact;
    NSNumber * _currentCacheIndex;
    NSDictionary * _friendAchievements;
    NSDictionary * _friendWorkouts;
    NSDictionary * _snapshots;
}

@property (nonatomic, readonly) NSUUID *UUID;
@property (nonatomic, readonly) bool canSeeMyActivityData;
@property (nonatomic, readonly) ASCompetition *competitionPendingAcceptance;
@property (nonatomic, retain) NSArray *competitions;
@property (nonatomic, readonly) NSArray *completedCompetitions;
@property (nonatomic, retain) ASContact *contact;
@property (nonatomic, readonly) NSNumber *currentCacheIndex;
@property (nonatomic, readonly) ASCompetition *currentCompetition;
@property (nonatomic, readonly) NSDateComponents *currentDateComponents;
@property (nonatomic, readonly) ASCompetition *currentOrMostRecentCompetition;
@property (nonatomic, readonly) _HKFitnessFriendActivitySnapshot *currentSnapshot;
@property (nonatomic, readonly) _HKFitnessFriendActivitySnapshot *currentSnapshotWithGoalsCarriedForward;
@property (nonatomic, readonly) NSDate *dateActivityDataInitiallyBecameVisibleToMe;
@property (nonatomic, readonly) NSDate *dateForLatestDataHidden;
@property (nonatomic, readonly) NSDate *dateForLatestDataHiddenFromMe;
@property (nonatomic, readonly) NSDate *dateForLatestIncomingCompetitionRequest;
@property (nonatomic, readonly) NSDate *dateForLatestOutgoingCompetitionRequest;
@property (nonatomic, readonly) NSDate *dateForLatestOutgoingInviteRequest;
@property (nonatomic, readonly) NSDate *dateForLatestRelationshipStart;
@property (nonatomic, readonly) NSString *displayName;
@property (nonatomic, readonly) NSDate *earliestCompetitionVictoryOrPotentialVictoryDate;
@property (nonatomic, retain) NSDictionary *friendAchievements;
@property (nonatomic, retain) NSDictionary *friendWorkouts;
@property (nonatomic, readonly) NSString *fullName;
@property (nonatomic, readonly) bool hasCompetitionHistory;
@property (nonatomic, readonly) bool hasCompetitionRequestFromMe;
@property (nonatomic, readonly) bool hasCompletedCompetition;
@property (nonatomic, readonly) bool hasCompletedFirstDayOfCurrentCompetition;
@property (nonatomic, readonly) bool hasInviteRequestFromMe;
@property (nonatomic, readonly) bool hasPendingCompetitionRequestFromMe;
@property (nonatomic, readonly) bool ignoredCompetitionRequestFromMe;
@property (nonatomic, readonly) bool inviteRequestToMeWasAccepted;
@property (nonatomic, readonly) bool isActivityDataCurrentlyVisibleToMe;
@property (nonatomic, readonly) bool isAwaitingCompetitionResponseFromMe;
@property (nonatomic, readonly) bool isAwaitingInviteResponseFromMe;
@property (nonatomic, readonly) bool isCompetitionActive;
@property (nonatomic, readonly) bool isCurrentlyHidingActivityDataFromMe;
@property (nonatomic, readonly) bool isEligibleToReceiveCompetitionRequest;
@property (nonatomic, readonly) bool isFriendshipCurrentlyActive;
@property (nonatomic, readonly) bool isMuted;
@property (nonatomic, readonly) bool isMyActivityDataCurrentlyHidden;
@property (getter=isMe, nonatomic, readonly) bool me;
@property (nonatomic, readonly) _HKFitnessFriendActivitySnapshot *mostRecentSnapshot;
@property (nonatomic, readonly) ASCompetition *mostRecentlyCompletedCompetition;
@property (nonatomic, readonly) unsigned long long numberOfCompetitionWinsAgainstMe;
@property (nonatomic, readonly) unsigned long long numberOfCompetitionWinsByMe;
@property (nonatomic, readonly) bool sentInviteRequestToMe;
@property (nonatomic, retain) NSDictionary *snapshots;
@property (nonatomic, readonly) bool supportsCompetitions;
@property (nonatomic, readonly) NSTimeZone *timeZone;

+ (id)friendWithCodableFriend:(id)arg1;

- (void).cxx_destruct;
- (id)UUID;
- (id)_competitionStartMessage:(id)arg1 replacingNameAndDatePlaceholdersForCompetitionStartDate:(id)arg2;
- (struct _HKFitnessFriendActivitySnapshot { Class x1; }*)_emptySnapshotWithGoalsCarriedForwardForSnapshotIndex:(long long)arg1;
- (id)as_competitionAcceptConfirmationMessageForCompetition:(id)arg1;
- (id)as_competitionAcceptConfirmationTitle;
- (id)as_competitionAcceptErrorMessage;
- (id)as_competitionAcceptedNotificationMessageForCompetition:(id)arg1;
- (id)as_competitionAcceptedNotificationTitle;
- (id)as_competitionLearnMoreDetailAction;
- (id)as_competitionLearnMoreDetailMessage;
- (id)as_competitionLearnMoreFullDescription;
- (id)as_competitionLearnMoreIntroduction;
- (id)as_competitionLearnMorePopupAction;
- (id)as_competitionLearnMoreReceivedNotificationMessageWithWheelchairUse:(long long)arg1;
- (id)as_competitionLearnMoreSendConfirmationMessageWithWheelchairUse:(long long)arg1;
- (id)as_competitionLearnMoreTitle;
- (id)as_competitionReceivedHidingAcceptAction;
- (id)as_competitionReceivedHidingWarningMessage;
- (id)as_competitionReceivedNotificationAcceptAction;
- (id)as_competitionReceivedNotificationMessage;
- (id)as_competitionReceivedNotificationTitle;
- (id)as_competitionRequestDurationRemainingString;
- (id)as_competitionSendConfirmationMessage;
- (id)as_competitionSendConfirmationSendAction;
- (id)as_competitionSendConfirmationTitle;
- (id)as_competitionSendErrorMessage;
- (id)as_competitionStageString;
- (id)as_competitionStatusBreadcrumbString;
- (id)as_detailedSharingDurationString;
- (id)as_friendListNameStringWithDotPrefix:(id)arg1 keyColor:(id)arg2;
- (id)as_invitedDurationString;
- (id)as_myCompetitionScoreStringWithContext:(id)arg1 color:(id)arg2;
- (id)as_opponentCompetitionScoreStringWithContext:(id)arg1 color:(id)arg2;
- (id)as_simpleHiddenFromString;
- (id)as_simpleSharingDurationString;
- (bool)canSeeMyActivityData;
- (id)codableFriendIncludingCloudKitFields:(bool)arg1;
- (id)competitionPendingAcceptance;
- (id)competitions;
- (id)completedCompetitions;
- (id)contact;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)currentCacheIndex;
- (id)currentCompetition;
- (id)currentDateComponents;
- (id)currentOrMostRecentCompetition;
- (struct _HKFitnessFriendActivitySnapshot { Class x1; }*)currentSnapshot;
- (struct _HKFitnessFriendActivitySnapshot { Class x1; }*)currentSnapshotWithGoalsCarriedForward;
- (id)dateActivityDataInitiallyBecameVisibleToMe;
- (id)dateForLatestDataHidden;
- (id)dateForLatestDataHiddenFromMe;
- (id)dateForLatestIncomingCompetitionRequest;
- (id)dateForLatestOutgoingCompetitionRequest;
- (id)dateForLatestOutgoingInviteRequest;
- (id)dateForLatestRelationshipStart;
- (id)description;
- (id)displayName;
- (id)earliestCompetitionVictoryOrPotentialVictoryDate;
- (id)friendAchievements;
- (id)friendWorkouts;
- (id)fullName;
- (bool)hasCompetitionHistory;
- (bool)hasCompetitionRequestFromMe;
- (bool)hasCompletedCompetition;
- (bool)hasCompletedFirstDayOfCurrentCompetition;
- (bool)hasInviteRequestFromMe;
- (bool)hasPendingCompetitionRequestFromMe;
- (bool)ignoredCompetitionRequestFromMe;
- (id)initWithActivitySnapshots:(id)arg1 friendAchievements:(id)arg2 friendWorkouts:(id)arg3 contact:(id)arg4 competitions:(id)arg5;
- (bool)inviteRequestToMeWasAccepted;
- (bool)isActivityDataCurrentlyVisibleToMe;
- (bool)isActivityDataVisibleToMeForDate:(id)arg1;
- (bool)isAwaitingCompetitionResponseFromMe;
- (bool)isAwaitingInviteResponseFromMe;
- (bool)isCompetitionActive;
- (bool)isCurrentlyHidingActivityDataFromMe;
- (bool)isEligibleToReceiveCompetitionRequest;
- (bool)isFriendshipCurrentlyActive;
- (bool)isHidingActivityDataFromMeForDate:(id)arg1;
- (bool)isMe;
- (bool)isMuted;
- (bool)isMyActivityDataCurrentlyHidden;
- (struct _HKFitnessFriendActivitySnapshot { Class x1; }*)mostRecentSnapshot;
- (id)mostRecentlyCompletedCompetition;
- (unsigned long long)numberOfCompetitionWinsAgainstMe;
- (unsigned long long)numberOfCompetitionWinsByMe;
- (bool)sentInviteRequestToMe;
- (void)setCompetitions:(id)arg1;
- (void)setContact:(id)arg1;
- (void)setFriendAchievements:(id)arg1;
- (void)setFriendWorkouts:(id)arg1;
- (void)setSnapshots:(id)arg1;
- (struct _HKFitnessFriendActivitySnapshot { Class x1; }*)snapshotWithGoalsCarriedForwardForSnapshotIndex:(id)arg1;
- (id)snapshots;
- (bool)supportsCompetitions;
- (id)timeZone;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>BCCloudDataManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/BookDataStore.framework/BCCloudDataManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/BookDataStore.framework/BookDataStore (4053)
 */

@interface BCCloudDataManager : NSObject <BDSCloudKitSupportSignOutDissociate> {
    BCCloudKitController * _cloudKitController;
    NSString * _entityName;
    Class  _immutableClass;
    NSManagedObjectContext * _moc;
    Class  _mutableClass;
    NSString * _notificationName;
    <BCCloudDataPrivacyDelegate> * _privacyDelegate;
    bool  _signalDataChangedTransaction;
    BCCloudDataSyncManager * _syncManager;
}

@property (nonatomic) BCCloudKitController *cloudKitController;
@property (nonatomic, copy) NSString *entityName;
@property Class immutableClass;
@property (nonatomic) NSManagedObjectContext *moc;
@property Class mutableClass;
@property (nonatomic, copy) NSString *notificationName;
@property (nonatomic) <BCCloudDataPrivacyDelegate> *privacyDelegate;
@property (nonatomic) bool signalDataChangedTransaction;
@property (nonatomic) BCCloudDataSyncManager *syncManager;

- (void).cxx_destruct;
- (void)_logError:(id)arg1;
- (void)cloudDataWithPredicate:(id)arg1 sortDescriptors:(id)arg2 completion:(id /* block */)arg3;
- (void)cloudDatasWithPredicate:(id)arg1 completion:(id /* block */)arg2;
- (id)cloudKitController;
- (void)currentCloudSyncVersions:(id /* block */)arg1;
- (void)deleteCloudDataForPredicate:(id)arg1 completion:(id /* block */)arg2;
- (void)dissociateCloudDataFromSyncWithCompletion:(id /* block */)arg1;
- (id)entityName;
- (void)failedRecordIDs:(id)arg1 completion:(id /* block */)arg2;
- (void)fetchCloudDataIncludingDeleted:(bool)arg1 completion:(id /* block */)arg2;
- (void)getChangesSince:(id)arg1 forEntityClass:(Class)arg2 completion:(id /* block */)arg3;
- (Class)immutableClass;
- (id)initWithMOC:(id)arg1 entityName:(id)arg2 notificationName:(id)arg3 immutableClass:(Class)arg4 mutableClass:(Class)arg5 syncManager:(id)arg6 cloudKitController:(id)arg7;
- (id)moc;
- (id)mq_cloudSyncVersions;
- (void)mq_incrementCloudVersion;
- (id)mq_sanitizeError:(id)arg1;
- (void)mq_signalTransactions;
- (Class)mutableClass;
- (id)notificationName;
- (id)privacyDelegate;
- (void)removeCloudDataForPredicate:(id)arg1 completion:(id /* block */)arg2;
- (void)resolveConflictsForRecords:(id)arg1 completion:(id /* block */)arg2;
- (void)resolveConflictsForRecords:(id)arg1 withResolvers:(id)arg2 completion:(id /* block */)arg3;
- (void)resolvedCloudDataForCloudData:(id)arg1 predicate:(id)arg2 completion:(id /* block */)arg3;
- (void)resolvedCloudDataForCloudData:(id)arg1 withResolvers:(id)arg2 predicate:(id)arg3 completion:(id /* block */)arg4;
- (void)setCloudData:(id)arg1 predicate:(id)arg2 completion:(id /* block */)arg3;
- (void)setCloudData:(id)arg1 predicate:(id)arg2 propertyIDKey:(id)arg3 completion:(id /* block */)arg4;
- (void)setCloudKitController:(id)arg1;
- (void)setEntityName:(id)arg1;
- (void)setImmutableClass:(Class)arg1;
- (void)setMoc:(id)arg1;
- (void)setMutableClass:(Class)arg1;
- (void)setNotificationName:(id)arg1;
- (void)setPrivacyDelegate:(id)arg1;
- (void)setSignalDataChangedTransaction:(bool)arg1;
- (void)setSyncManager:(id)arg1;
- (bool)signalDataChangedTransaction;
- (void)startSyncToCKWithCompletion:(id /* block */)arg1;
- (id)syncManager;
- (void)updateSyncGenerationFromCloudData:(id)arg1 predicate:(id)arg2 propertyIDKey:(id)arg3 completion:(id /* block */)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

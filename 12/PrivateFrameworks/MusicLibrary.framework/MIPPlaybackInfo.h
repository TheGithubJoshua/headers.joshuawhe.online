<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MIPPlaybackInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MusicLibrary.framework/MIPPlaybackInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary (18)
 */

@interface MIPPlaybackInfo : PBCodable <NSCopying> {
    int  _beatsPerMinute;
    int  _bitRate;
    int  _codecSubType;
    int  _codecType;
    int  _dataKind;
    NSString * _dataUrl;
    long long  _durationInSamples;
    NSString * _eqPreset;
    long long  _gaplessEncodingDrainCode;
    long long  _gaplessFrameResyncCode;
    long long  _gaplessHeuristicCode;
    long long  _gaplessHeuristicDelayCode;
    struct { 
        unsigned int durationInSamples : 1; 
        unsigned int gaplessEncodingDrainCode : 1; 
        unsigned int gaplessFrameResyncCode : 1; 
        unsigned int gaplessHeuristicCode : 1; 
        unsigned int gaplessHeuristicDelayCode : 1; 
        unsigned int startTime : 1; 
        unsigned int stopTime : 1; 
        unsigned int volumeNormalizationEnergy : 1; 
        unsigned int beatsPerMinute : 1; 
        unsigned int bitRate : 1; 
        unsigned int codecSubType : 1; 
        unsigned int codecType : 1; 
        unsigned int dataKind : 1; 
        unsigned int progressionDirection : 1; 
        unsigned int relativeVolume : 1; 
        unsigned int sampleRate : 1; 
    }  _has;
    NSString * _playbackFormat;
    int  _progressionDirection;
    int  _relativeVolume;
    int  _sampleRate;
    long long  _startTime;
    long long  _stopTime;
    long long  _volumeNormalizationEnergy;
}

@property (nonatomic) int beatsPerMinute;
@property (nonatomic) int bitRate;
@property (nonatomic) int codecSubType;
@property (nonatomic) int codecType;
@property (nonatomic) int dataKind;
@property (nonatomic, retain) NSString *dataUrl;
@property (nonatomic) long long durationInSamples;
@property (nonatomic, retain) NSString *eqPreset;
@property (nonatomic) long long gaplessEncodingDrainCode;
@property (nonatomic) long long gaplessFrameResyncCode;
@property (nonatomic) long long gaplessHeuristicCode;
@property (nonatomic) long long gaplessHeuristicDelayCode;
@property (nonatomic) bool hasBeatsPerMinute;
@property (nonatomic) bool hasBitRate;
@property (nonatomic) bool hasCodecSubType;
@property (nonatomic) bool hasCodecType;
@property (nonatomic) bool hasDataKind;
@property (nonatomic, readonly) bool hasDataUrl;
@property (nonatomic) bool hasDurationInSamples;
@property (nonatomic, readonly) bool hasEqPreset;
@property (nonatomic) bool hasGaplessEncodingDrainCode;
@property (nonatomic) bool hasGaplessFrameResyncCode;
@property (nonatomic) bool hasGaplessHeuristicCode;
@property (nonatomic) bool hasGaplessHeuristicDelayCode;
@property (nonatomic, readonly) bool hasPlaybackFormat;
@property (nonatomic) bool hasProgressionDirection;
@property (nonatomic) bool hasRelativeVolume;
@property (nonatomic) bool hasSampleRate;
@property (nonatomic) bool hasStartTime;
@property (nonatomic) bool hasStopTime;
@property (nonatomic) bool hasVolumeNormalizationEnergy;
@property (nonatomic, retain) NSString *playbackFormat;
@property (nonatomic) int progressionDirection;
@property (nonatomic) int relativeVolume;
@property (nonatomic) int sampleRate;
@property (nonatomic) long long startTime;
@property (nonatomic) long long stopTime;
@property (nonatomic) long long volumeNormalizationEnergy;

- (void).cxx_destruct;
- (int)beatsPerMinute;
- (int)bitRate;
- (int)codecSubType;
- (int)codecType;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)dataKind;
- (id)dataUrl;
- (id)description;
- (id)dictionaryRepresentation;
- (long long)durationInSamples;
- (id)eqPreset;
- (long long)gaplessEncodingDrainCode;
- (long long)gaplessFrameResyncCode;
- (long long)gaplessHeuristicCode;
- (long long)gaplessHeuristicDelayCode;
- (bool)hasBeatsPerMinute;
- (bool)hasBitRate;
- (bool)hasCodecSubType;
- (bool)hasCodecType;
- (bool)hasDataKind;
- (bool)hasDataUrl;
- (bool)hasDurationInSamples;
- (bool)hasEqPreset;
- (bool)hasGaplessEncodingDrainCode;
- (bool)hasGaplessFrameResyncCode;
- (bool)hasGaplessHeuristicCode;
- (bool)hasGaplessHeuristicDelayCode;
- (bool)hasPlaybackFormat;
- (bool)hasProgressionDirection;
- (bool)hasRelativeVolume;
- (bool)hasSampleRate;
- (bool)hasStartTime;
- (bool)hasStopTime;
- (bool)hasVolumeNormalizationEnergy;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (id)playbackFormat;
- (int)progressionDirection;
- (bool)readFrom:(id)arg1;
- (int)relativeVolume;
- (int)sampleRate;
- (void)setBeatsPerMinute:(int)arg1;
- (void)setBitRate:(int)arg1;
- (void)setCodecSubType:(int)arg1;
- (void)setCodecType:(int)arg1;
- (void)setDataKind:(int)arg1;
- (void)setDataUrl:(id)arg1;
- (void)setDurationInSamples:(long long)arg1;
- (void)setEqPreset:(id)arg1;
- (void)setGaplessEncodingDrainCode:(long long)arg1;
- (void)setGaplessFrameResyncCode:(long long)arg1;
- (void)setGaplessHeuristicCode:(long long)arg1;
- (void)setGaplessHeuristicDelayCode:(long long)arg1;
- (void)setHasBeatsPerMinute:(bool)arg1;
- (void)setHasBitRate:(bool)arg1;
- (void)setHasCodecSubType:(bool)arg1;
- (void)setHasCodecType:(bool)arg1;
- (void)setHasDataKind:(bool)arg1;
- (void)setHasDurationInSamples:(bool)arg1;
- (void)setHasGaplessEncodingDrainCode:(bool)arg1;
- (void)setHasGaplessFrameResyncCode:(bool)arg1;
- (void)setHasGaplessHeuristicCode:(bool)arg1;
- (void)setHasGaplessHeuristicDelayCode:(bool)arg1;
- (void)setHasProgressionDirection:(bool)arg1;
- (void)setHasRelativeVolume:(bool)arg1;
- (void)setHasSampleRate:(bool)arg1;
- (void)setHasStartTime:(bool)arg1;
- (void)setHasStopTime:(bool)arg1;
- (void)setHasVolumeNormalizationEnergy:(bool)arg1;
- (void)setPlaybackFormat:(id)arg1;
- (void)setProgressionDirection:(int)arg1;
- (void)setRelativeVolume:(int)arg1;
- (void)setSampleRate:(int)arg1;
- (void)setStartTime:(long long)arg1;
- (void)setStopTime:(long long)arg1;
- (void)setVolumeNormalizationEnergy:(long long)arg1;
- (long long)startTime;
- (long long)stopTime;
- (long long)volumeNormalizationEnergy;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MIPSong.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/MusicLibrary.framework/MIPSong.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary (18)
 */

@interface MIPSong : PBCodable <NSCopying> {
    MIPAlbum * _album;
    MIPArtist * _artist;
    int  _audioFormat;
    MIPArtist * _composer;
    int  _discNumber;
    bool  _excludeFromShuffle;
    long long  _geniusId;
    MIPGenre * _genre;
    struct { 
        unsigned int geniusId : 1; 
        unsigned int audioFormat : 1; 
        unsigned int discNumber : 1; 
        unsigned int lyricsChecksum : 1; 
        unsigned int trackNumber : 1; 
        unsigned int userRating : 1; 
        unsigned int excludeFromShuffle : 1; 
        unsigned int hasVideo : 1; 
    }  _has;
    bool  _hasVideo;
    NSString * _lyrics;
    int  _lyricsChecksum;
    MIPPlaybackInfo * _playbackInfo;
    int  _trackNumber;
    int  _userRating;
}

@property (nonatomic, retain) MIPAlbum *album;
@property (nonatomic, retain) MIPArtist *artist;
@property (nonatomic) int audioFormat;
@property (nonatomic, retain) MIPArtist *composer;
@property (nonatomic) int discNumber;
@property (nonatomic) bool excludeFromShuffle;
@property (nonatomic) long long geniusId;
@property (nonatomic, retain) MIPGenre *genre;
@property (nonatomic, readonly) bool hasAlbum;
@property (nonatomic, readonly) bool hasArtist;
@property (nonatomic) bool hasAudioFormat;
@property (nonatomic, readonly) bool hasComposer;
@property (nonatomic) bool hasDiscNumber;
@property (nonatomic) bool hasExcludeFromShuffle;
@property (nonatomic) bool hasGeniusId;
@property (nonatomic, readonly) bool hasGenre;
@property (nonatomic) bool hasHasVideo;
@property (nonatomic, readonly) bool hasLyrics;
@property (nonatomic) bool hasLyricsChecksum;
@property (nonatomic, readonly) bool hasPlaybackInfo;
@property (nonatomic) bool hasTrackNumber;
@property (nonatomic) bool hasUserRating;
@property (nonatomic) bool hasVideo;
@property (nonatomic, retain) NSString *lyrics;
@property (nonatomic) int lyricsChecksum;
@property (nonatomic, retain) MIPPlaybackInfo *playbackInfo;
@property (nonatomic) int trackNumber;
@property (nonatomic) int userRating;

- (void).cxx_destruct;
- (id)album;
- (id)artist;
- (int)audioFormat;
- (id)composer;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (int)discNumber;
- (bool)excludeFromShuffle;
- (long long)geniusId;
- (id)genre;
- (bool)hasAlbum;
- (bool)hasArtist;
- (bool)hasAudioFormat;
- (bool)hasComposer;
- (bool)hasDiscNumber;
- (bool)hasExcludeFromShuffle;
- (bool)hasGeniusId;
- (bool)hasGenre;
- (bool)hasHasVideo;
- (bool)hasLyrics;
- (bool)hasLyricsChecksum;
- (bool)hasPlaybackInfo;
- (bool)hasTrackNumber;
- (bool)hasUserRating;
- (bool)hasVideo;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)lyrics;
- (int)lyricsChecksum;
- (void)mergeFrom:(id)arg1;
- (id)playbackInfo;
- (bool)readFrom:(id)arg1;
- (void)setAlbum:(id)arg1;
- (void)setArtist:(id)arg1;
- (void)setAudioFormat:(int)arg1;
- (void)setComposer:(id)arg1;
- (void)setDiscNumber:(int)arg1;
- (void)setExcludeFromShuffle:(bool)arg1;
- (void)setGeniusId:(long long)arg1;
- (void)setGenre:(id)arg1;
- (void)setHasAudioFormat:(bool)arg1;
- (void)setHasDiscNumber:(bool)arg1;
- (void)setHasExcludeFromShuffle:(bool)arg1;
- (void)setHasGeniusId:(bool)arg1;
- (void)setHasHasVideo:(bool)arg1;
- (void)setHasLyricsChecksum:(bool)arg1;
- (void)setHasTrackNumber:(bool)arg1;
- (void)setHasUserRating:(bool)arg1;
- (void)setHasVideo:(bool)arg1;
- (void)setLyrics:(id)arg1;
- (void)setLyricsChecksum:(int)arg1;
- (void)setPlaybackInfo:(id)arg1;
- (void)setTrackNumber:(int)arg1;
- (void)setUserRating:(int)arg1;
- (int)trackNumber;
- (int)userRating;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SGSimpleTimeRange.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CoreSuggestions.framework/SGSimpleTimeRange.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions (680.125)
 */

@interface SGSimpleTimeRange : NSObject <NSCopying, NSSecureCoding> {
    struct SGUnixTimestamp_ { 
        double secondsFromUnixEpoch; 
    }  _end;
    NSTimeZone * _endTimeZone;
    long long  _endUTCOffsetSeconds;
    bool  _floating;
    struct SGUnixTimestamp_ { 
        double secondsFromUnixEpoch; 
    }  _start;
    NSTimeZone * _startTimeZone;
    long long  _startUTCOffsetSeconds;
}

@property (nonatomic, readonly) struct SGUnixTimestamp_ { double x1; } end;
@property (nonatomic, readonly) NSDate *endDate;
@property (nonatomic, readonly) NSTimeZone *endTimeZone;
@property (nonatomic, readonly) long long endUTCOffsetSeconds;
@property (getter=isFloating, nonatomic, readonly) bool floating;
@property (nonatomic, readonly) struct SGUnixTimestamp_ { double x1; } start;
@property (nonatomic, readonly) NSDate *startDate;
@property (nonatomic, readonly) NSTimeZone *startTimeZone;
@property (nonatomic, readonly) long long startUTCOffsetSeconds;

+ (id)dateFromGregorianComponents:(id)arg1;
+ (id)floatingRangeWithLocalStart:(struct SGUnixTimestamp_ { double x1; })arg1 end:(struct SGUnixTimestamp_ { double x1; })arg2;
+ (id)floatingRangeWithLocalStartDate:(id)arg1 endDate:(id)arg2;
+ (id)floatingRangeWithUTCStart:(struct SGUnixTimestamp_ { double x1; })arg1 end:(struct SGUnixTimestamp_ { double x1; })arg2;
+ (id)floatingRangeWithUTCStartDate:(id)arg1 endDate:(id)arg2;
+ (struct SGUnixTimestamp_ { double x1; })fromFloatingTime:(struct SGUnixTimestamp_ { double x1; })arg1;
+ (bool)hasYearMonthDayComponents:(id)arg1;
+ (bool)isAllDayComponents:(id)arg1;
+ (id)rangeWithGregorianStartComponents:(id)arg1 endComponents:(id)arg2;
+ (id)rangeWithStart:(struct SGUnixTimestamp_ { double x1; })arg1 duration:(double)arg2 timeZone:(id)arg3;
+ (id)rangeWithStart:(struct SGUnixTimestamp_ { double x1; })arg1 end:(struct SGUnixTimestamp_ { double x1; })arg2 timeZone:(id)arg3;
+ (id)rangeWithStart:(struct SGUnixTimestamp_ { double x1; })arg1 startTimeZone:(id)arg2 end:(struct SGUnixTimestamp_ { double x1; })arg3 endTimeZone:(id)arg4;
+ (id)rangeWithStartDate:(id)arg1 startTimeZone:(id)arg2 endDate:(id)arg3 endTimeZone:(id)arg4;
+ (bool)supportsSecureCoding;
+ (struct SGUnixTimestamp_ { double x1; })toFloatingTime:(struct SGUnixTimestamp_ { double x1; })arg1;
+ (struct SGUnixTimestamp_ { double x1; })toFloatingTime:(struct SGUnixTimestamp_ { double x1; })arg1 withDSTAmbiguityPreferences:(id)arg2;
+ (id)utcRangeWithStart:(struct SGUnixTimestamp_ { double x1; })arg1 duration:(double)arg2;
+ (id)utcRangeWithStart:(struct SGUnixTimestamp_ { double x1; })arg1 end:(struct SGUnixTimestamp_ { double x1; })arg2;

- (void).cxx_destruct;
- (id)_componentsForDate:(id)arg1 timeZone:(id)arg2;
- (id)absoluteRange;
- (void)applyToEKEvent:(id)arg1 isAllDay:(bool)arg2 isFloating:(bool)arg3;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct SGUnixTimestamp_ { double x1; })end;
- (id)endDate;
- (id)endDateComponents;
- (id)endTimeZone;
- (long long)endUTCOffsetSeconds;
- (unsigned long long)hash;
- (id)initUTCFloatingWithStart:(struct SGUnixTimestamp_ { double x1; })arg1 end:(struct SGUnixTimestamp_ { double x1; })arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithStart:(struct SGUnixTimestamp_ { double x1; })arg1 startUTCOffsetSeconds:(long long)arg2 end:(struct SGUnixTimestamp_ { double x1; })arg3 endUTCOffsetSeconds:(long long)arg4;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToSimpleTimeRange:(id)arg1;
- (bool)isFloating;
- (bool)isValidAllDayRange;
- (id)stableStringRepresentation;
- (struct SGUnixTimestamp_ { double x1; })start;
- (id)startDate;
- (id)startDateComponents;
- (id)startTimeZone;
- (long long)startUTCOffsetSeconds;
- (bool)startedMoreThan24HoursAgo;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CRKCardSectionViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/CardKit.framework/CRKCardSectionViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/CardKit.framework/CardKit (1)
 */

@interface CRKCardSectionViewController : UIViewController <CRKCardSectionViewControllingDelegate, CRKEventResponding, CRKFeedbackDelegate, SFFeedbackListener> {
    INUIRemoteViewController * __remoteViewController;
    <CRCardSection> * _cardSection;
    <CRKCardSectionViewControllerDataSource> * _dataSource;
    <CRKCardSectionViewControllerDelegate> * _delegate;
    NSArray * _extraCommands;
    bool  _loading;
    CRKOverlayButton * _overlayButton;
    CRKCardSectionViewConfiguration * _viewConfiguration;
}

@property (nonatomic, readonly) INUIRemoteViewController *_remoteViewController;
@property (nonatomic, retain) <CRCardSection> *cardSection;
@property (nonatomic) <CRKCardSectionViewControllerDataSource> *dataSource;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CRKCardSectionViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=_extraCommands, setter=_setExtraCommands:, nonatomic, retain) NSArray *extraCommands;
@property (readonly) unsigned long long hash;
@property (getter=isLoading, nonatomic) bool loading;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIView<CRKCardSectionView> *view;
@property (nonatomic, retain) CRKCardSectionViewConfiguration *viewConfiguration;

+ (void)_registerWithCardKit;
+ (id)cardSectionClasses;
+ (id)cardSectionViewControllerForCardSection:(id)arg1;
+ (id)cardSectionViewControllerForCardSection:(id)arg1 dataSource:(id)arg2;
+ (id)cardSectionViewControllerForViewConfiguration:(id)arg1;
+ (void)registerCardSectionViewController;

- (void).cxx_destruct;
- (id)_backingCardSection;
- (void)_buttonOverlayTouchWasCanceled:(id)arg1;
- (void)_buttonOverlayWasTouchedDown:(id)arg1;
- (void)_buttonOverlayWasTouchedUpInside:(id)arg1;
- (void)_buttonOverlayWasTouchedUpOutside:(id)arg1;
- (void)_cancelTouchesIfNecessary;
- (void)_cardSectionTapped;
- (bool)_checkIfCardSectionIsNull:(id)arg1;
- (id)_commands;
- (id)_destinationPunchout;
- (bool)_expectsSearchUIView;
- (id)_extraCommands;
- (void)_finishLoadingViewIfNecessary;
- (id)_generateCardSectionViewAppearanceFeedback;
- (bool)_hasCorrespondingSearchUIView;
- (id)_initWithCardSection:(id)arg1;
- (id)_initWithCardSection:(id)arg1 dataSource:(id)arg2;
- (bool)_isIndicatingActivity;
- (bool)_isLoadedWithIntentsUIView;
- (void)_loadCardSectionView;
- (void)_performAllCommands;
- (void)_performCommand:(id)arg1;
- (id)_preferredPunchoutCommand;
- (id)_remoteViewController;
- (void)_resumeTouchesIfNecessary;
- (void)_setExtraCommands:(id)arg1;
- (void)_setViewExternally:(id)arg1;
- (void)_setupCardSectionButtons;
- (bool)_shouldHideButtonOverlay;
- (bool)_shouldRenderButtonOverlay;
- (void)cardEventDidOccur:(unsigned long long)arg1 withIdentifier:(id)arg2 userInfo:(id)arg3;
- (id)cardSection;
- (void)cardSectionViewDidAppearForCardSection:(id)arg1 withAppearanceFeedback:(id)arg2;
- (void)cardSectionViewDidDisappearForCardSection:(id)arg1 withDisappearanceFeedback:(id)arg2;
- (void)cardSectionViewDidInvalidateSize:(id)arg1;
- (void)cardSectionViewDidInvalidateSize:(id)arg1 animate:(bool)arg2;
- (void)cardSectionViewDidInvalidateSizeForCardSection:(id)arg1;
- (void)cardSectionViewDidSelectPreferredPunchoutIndex:(long long)arg1;
- (void)cardSectionViewWillAppearForCardSection:(id)arg1 withAppearanceFeedback:(id)arg2;
- (void)cardViewDidAppearForCard:(id)arg1 withAppearanceFeedback:(id)arg2;
- (void)cardViewDidDisappearForCard:(id)arg1 withDisappearanceFeedback:(id)arg2;
- (void)cardViewWillAppearForCard:(id)arg1 withAppearanceFeedback:(id)arg2;
- (void)controllerForCard:(id)arg1 didReceiveAsyncCard:(id)arg2 withAsyncCardReceiptFeedback:(id)arg3;
- (void)controllerForCard:(id)arg1 didRequestAsyncCard:(id)arg2 withAsyncCardRequestFeedback:(id)arg3;
- (id)dataSource;
- (id)delegate;
- (void)didEngageCardSection:(id)arg1;
- (bool)isLoading;
- (void)loadView;
- (bool)performCommand:(id)arg1 forViewController:(id)arg2;
- (void)presentViewController:(id)arg1;
- (void)setCardSection:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLoading:(bool)arg1;
- (void)setViewConfiguration:(id)arg1;
- (bool)shouldHandleEngagement:(id)arg1 forCardSection:(id)arg2;
- (void)userDidEngageCardSection:(id)arg1 withEngagementFeedback:(id)arg2;
- (id)viewConfiguration;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)willDismissViewController:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

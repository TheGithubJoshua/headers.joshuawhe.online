<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TIPreferencesController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/TextInput.framework/TIPreferencesController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/TextInput.framework/TextInput (1.0)
 */

@interface TIPreferencesController : NSObject <TIPreferencesControllerActions> {
    NSMutableDictionary * _cachedMCRestrictedValue;
    NSMutableDictionary * _configuredDomains;
    NSMutableDictionary * _configuredPreferences;
    bool  _ignoreNextSyncNotification;
    bool  _inhibitGlobalNotification;
    double  _lastSynchronizePreferencesTime;
    NSTimer * _synchronizePreferencesTimer;
    bool  isInternalInstall;
}

@property (nonatomic) bool automaticMinimizationEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoreNextSyncNotification;
@property (nonatomic) bool inhibitGlobalNotification;
@property (nonatomic, copy) NSArray *inputModeSelectionSequence;
@property (nonatomic) bool isInternalInstall;
@property (nonatomic) struct CGPoint { double x1; double x2; } keyboardPosition;
@property (nonatomic) bool keyboardShownByTouch;
@property (nonatomic) bool predictionEnabled;
@property (readonly) Class superclass;

+ (void)registerPreferredLanguagesForInputModes:(id)arg1 replacingInputModes:(id)arg2;
+ (id)sharedPreferencesController;

- (void).cxx_destruct;
- (int)MCValueForManagedPreferenceKey:(id)arg1;
- (void)_configureDomain:(id)arg1 notification:(id)arg2;
- (void)_configureDomains;
- (void)_configureKey:(id)arg1 domain:(id)arg2 defaultValue:(id)arg3;
- (void)_configurePreferences;
- (bool)_isOneTimeAction:(id)arg1;
- (void)_pushValue:(id)arg1 toPreference:(id)arg2 domain:(id)arg3;
- (bool)allEnabledInputModesAreValid;
- (bool)automaticMinimizationEnabled;
- (bool)boolForKey:(int)arg1;
- (bool)boolForPreferenceKey:(id)arg1;
- (void)clearSynchronizePreferencesTimer;
- (void)dealloc;
- (void)didSeeHardwareKeyboard:(id)arg1;
- (void)didTriggerOneTimeAction:(id)arg1;
- (void)didUnseeHardwareKeyboard:(id)arg1;
- (bool)ignoreNextSyncNotification;
- (bool)inhibitGlobalNotification;
- (id)init;
- (id)inputModeSelectionSequence;
- (bool)isInternalInstall;
- (bool)isKeyLockedDown:(int)arg1;
- (bool)isPreferenceKeyLockedDown:(id)arg1;
- (struct CGPoint { double x1; double x2; })keyboardPosition;
- (bool)keyboardShownByTouch;
- (void)managedKeyboardSettingDidChange:(id)arg1;
- (bool)oneTimeActionCompleted:(id)arg1;
- (void)performWithWriteability:(bool)arg1 operations:(id /* block */)arg2;
- (bool)predictionEnabled;
- (void)preferencesChangedCallback:(id)arg1;
- (void)setAutomaticMinimizationEnabled:(bool)arg1;
- (void)setIgnoreNextSyncNotification:(bool)arg1;
- (void)setInhibitGlobalNotification:(bool)arg1;
- (void)setInputModeSelectionSequence:(id)arg1;
- (void)setIsInternalInstall:(bool)arg1;
- (void)setKeyboardPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setKeyboardShownByTouch:(bool)arg1;
- (void)setPredictionEnabled:(bool)arg1;
- (void)setValue:(id)arg1 forKey:(int)arg2;
- (void)setValue:(id)arg1 forManagedPreferenceKey:(id)arg2;
- (void)setValue:(id)arg1 forPreferenceKey:(id)arg2;
- (void)synchronizeDomainIfNeedsGet:(id)arg1;
- (void)synchronizePreferences;
- (void)touchSynchronizePreferencesTimer;
- (void)updateDidPerformFirstReachableKeyboardInteraction;
- (void)updateEnabledDictationLanguages:(id)arg1;
- (void)updateInputModes:(id)arg1;
- (void)updateKeyboardHandBias:(id)arg1;
- (void)updateKeyboardIsFloating:(bool)arg1;
- (void)updateKeyboardIsSplit:(bool)arg1 locked:(bool)arg2;
- (void)updateLastUsedDictationLanguages:(id)arg1;
- (void)updateLastUsedInputMode:(id)arg1;
- (void)updateLastUsedKeyboards:(id)arg1;
- (void)updateLastUsedLayout:(id)arg1;
- (id)valueForKey:(int)arg1;
- (id)valueForPreferenceKey:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

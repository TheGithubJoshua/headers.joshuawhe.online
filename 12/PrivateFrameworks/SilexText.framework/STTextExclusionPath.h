<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>STTextExclusionPath.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SilexText.framework/STTextExclusionPath.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SilexText.framework/SilexText (1)
 */

@interface STTextExclusionPath : NSObject {
    struct CGPoint { 
        double x; 
        double y; 
    }  _actualPosition;
    struct CGPoint { 
        double x; 
        double y; 
    }  _anchorPoint;
    id /* block */  _completionBlock;
    NSString * _componentIdentifier;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _exclusionRect;
    bool  _fullBleed;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _insets;
    int  _lineVerticalAlignment;
    id /* block */  _minYBlock;
    double  _padding;
    struct CGPoint { 
        double x; 
        double y; 
    }  _position;
    struct _NSRange { 
        unsigned long long location; 
        unsigned long long length; 
    }  _range;
    id /* block */  _startBlock;
    int  _type;
    double  _verticalAlignmentFactor;
    STTextExclusionPathWrapper * _wrapper;
}

@property (nonatomic) struct CGPoint { double x1; double x2; } actualPosition;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } anchorPoint;
@property (nonatomic, copy) id /* block */ completionBlock;
@property (nonatomic, retain) NSString *componentIdentifier;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } exclusionRect;
@property (nonatomic) bool fullBleed;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } insets;
@property (nonatomic) int lineVerticalAlignment;
@property (nonatomic, copy) id /* block */ minYBlock;
@property (nonatomic) double padding;
@property (nonatomic, readonly) UIBezierPath *path;
@property (nonatomic, readonly) struct CGPoint { double x1; double x2; } position;
@property (nonatomic) struct _NSRange { unsigned long long x1; unsigned long long x2; } range;
@property (nonatomic, copy) id /* block */ startBlock;
@property (nonatomic, readonly) int type;
@property (nonatomic) double verticalAlignmentFactor;
@property (nonatomic, readonly) <TSDWrappable> *wrappable;
@property (nonatomic, readonly) STTextExclusionPathWrapper *wrapper;

- (void).cxx_destruct;
- (struct CGPoint { double x1; double x2; })actualPosition;
- (void)adjustYPositionWithCurrentPosition:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGPoint { double x1; double x2; })anchorPoint;
- (void)callCompletionBlock;
- (void)callStartBlock;
- (id /* block */)completionBlock;
- (id)componentIdentifier;
- (id)description;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })exclusionRect;
- (bool)fullBleed;
- (id)initWithTextRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 position:(struct CGPoint { double x1; double x2; })arg2 rect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 withInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg4;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })insets;
- (int)lineVerticalAlignment;
- (id /* block */)minYBlock;
- (double)padding;
- (id)path;
- (struct CGPoint { double x1; double x2; })position;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })range;
- (void)setActualPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setCompletionBlock:(id /* block */)arg1;
- (void)setComponentIdentifier:(id)arg1;
- (void)setExclusionRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setFullBleed:(bool)arg1;
- (void)setLineVerticalAlignment:(int)arg1;
- (void)setMinYBlock:(id /* block */)arg1;
- (void)setPadding:(double)arg1;
- (void)setRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)setStartBlock:(id /* block */)arg1;
- (void)setVerticalAlignmentFactor:(double)arg1;
- (id /* block */)startBlock;
- (int)type;
- (double)verticalAlignmentFactor;
- (id)wrappable;
- (id)wrapper;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

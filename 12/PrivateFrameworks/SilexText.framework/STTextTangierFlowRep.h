<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>STTextTangierFlowRep.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/SilexText.framework/STTextTangierFlowRep.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/SilexText.framework/SilexText (1)
 */

@interface STTextTangierFlowRep : TSWPRep <STAXCustomRotorItemProvider, STTextTangierRepAccessibilityElement> {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _frameInCanvas;
    STAXCustomRotor * _headingsRotor;
    STTextTangierInteractiveCanvasController * _icc;
    STAXCustomRotor * _linkRotor;
    <STTextTangierRepAccessibilityDataSource> * accessibilityDataSource;
}

@property (nonatomic) <STTextTangierRepAccessibilityDataSource> *accessibilityDataSource;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frameInCanvas;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) STAXCustomRotor *headingsRotor;
@property (nonatomic) STTextTangierInteractiveCanvasController *icc;
@property (nonatomic, retain) STAXCustomRotor *linkRotor;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })_accessibilitySelectedTextRange;
- (void)_accessibilitySetSelectedTextRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (id)accessibilityDataSource;
- (id)accessibilityNextTextNavigationElement;
- (id)accessibilityPreviousTextNavigationElement;
- (bool)accessibilitySupportsTextSelection;
- (unsigned long long)accessibilityTraits;
- (unsigned long long)charIndexForPointWithPinning:(struct CGPoint { double x1; double x2; })arg1 isTail:(bool)arg2 selectionType:(int)arg3;
- (void)dealloc;
- (bool)forceTiling;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameInCanvas;
- (id)headingsRotor;
- (id)hitRep:(struct CGPoint { double x1; double x2; })arg1 withGesture:(id)arg2 passingTest:(id /* block */)arg3;
- (id)icc;
- (id)interactiveCanvasController;
- (id)itemsForCustomRotor:(id)arg1;
- (id)linkRotor;
- (id)orderedSiblings;
- (bool)p_doesRep:(id)arg1 containCharIndex:(unsigned long long)arg2 isStart:(bool)arg3;
- (bool)preventClipToColumn;
- (id)repForCharIndex:(unsigned long long)arg1 isStart:(bool)arg2;
- (void)setAccessibilityDataSource:(id)arg1;
- (void)setFrameInCanvas:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setHeadingsRotor:(id)arg1;
- (void)setIcc:(id)arg1;
- (void)setLinkRotor:(id)arg1;
- (bool)shouldBeginEditingWithGesture:(id)arg1;
- (id)siblings;
- (id)storage;
- (id)supportedCustomRotors;
- (id)sxaxNameForEditRotorAction:(id)arg1;
- (id)sxaxSupportedEditRotorActions;
- (bool)updateFromVisualPosition;
- (Class)wpEditorClass;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

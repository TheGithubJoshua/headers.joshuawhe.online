<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PMLTrainingStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/PrivateFrameworks/ProactiveML.framework/PMLTrainingStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/PrivateFrameworks/ProactiveML.framework/ProactiveML (126.37)
 */

@interface PMLTrainingStore : NSObject {
    bool  _allowSkipSchema;
    _PASSqliteDatabase * _db;
    NSString * _dbPath;
    id  _lockStateNotificationToken;
}

+ (id)getSchema:(unsigned long long*)arg1;
+ (id)inMemoryStoreForTesting;

- (void).cxx_destruct;
- (void)_loadSessionsForModel:(id)arg1 positiveRowId:(unsigned long long)arg2 negativeRowId:(unsigned long long)arg3 excludeItemIdsUsedWithin:(double)arg4 limit:(unsigned long long)arg5 onlyAppleInternal:(bool)arg6 positiveLabel:(unsigned long long)arg7 skew:(double)arg8 ignoreIfSingular:(bool)arg9 block:(id /* block */)arg10;
- (void)_loadSessionsForModel:(id)arg1 privacyBudgetRefreshPeriod:(double)arg2 labelAndStartRows:(id)arg3 batchSize:(unsigned long long)arg4 supportPerLabel:(unsigned long long)arg5 block:(id /* block */)arg6;
- (void)_loadSessionsFromLabelAndTuples:(id)arg1 model:(id)arg2 numberOfRows:(unsigned long long)arg3 numberOfColumns:(unsigned long long)arg4 lastUsedMax:(double)arg5 block:(id /* block */)arg6;
- (void)_loadSessionsFromTupleDescriptors:(id)arg1 model:(id)arg2 onlyAppleInternal:(bool)arg3 positiveLabel:(unsigned long long)arg4 ignoreIfSingular:(bool)arg5 numberOfRows:(unsigned long long)arg6 numberOfColumns:(unsigned long long)arg7 lastUsedMax:(double)arg8 block:(id /* block */)arg9;
- (long long)_migrate;
- (long long)_migrateTo:(id)arg1;
- (long long)_openDbIfUnlocked;
- (void)_registerUnlockHandler;
- (bool)_runQueries:(id)arg1 andUpdateVersionTo:(unsigned long long)arg2 inTransactionOnDb:(id)arg3;
- (unsigned long long)_sessionDescriptorIdFor:(id)arg1;
- (bool)_truncateDbIfCorrupted;
- (void)_unregisterUnlockHandler;
- (id)allStoredPlanIds;
- (void)closeDbForTesting;
- (bool)createSnapshot:(id)arg1;
- (id)dbForTesting;
- (void)dealloc;
- (void)deleteAllTrainingLogs;
- (void)deleteReceivedPlan:(struct NSString { Class x1; }*)arg1;
- (void)deleteSessionsWithBundleId:(id)arg1;
- (void)deleteSessionsWithBundleId:(id)arg1 domainId:(id)arg2;
- (void)deleteSessionsWithBundleId:(id)arg1 itemId:(id)arg2;
- (void)enumerateReceivedPlansUsingBlock:(id /* block */)arg1;
- (void)enumerateSessionDescriptorsUsingBlock:(id /* block */)arg1;
- (id)getSchema:(unsigned long long*)arg1;
- (id)init;
- (id)initWithPath:(id)arg1;
- (id)initWithPath:(id)arg1 allowSkipSchema:(bool)arg2;
- (bool)isDbOpen;
- (void)limitLabeledSessionsWithSessionDescriptor:(id)arg1 label:(long long)arg2 limit:(unsigned long long)arg3;
- (void)limitSessionsForEachLabelWithSessionDescriptor:(id)arg1 totalSessionLimit:(unsigned long long)arg2;
- (id)loadRecentTrainingLogForPlan:(struct NSString { Class x1; }*)arg1;
- (void)loadSessionsForModel:(id)arg1 excludeItemIdsUsedWithin:(double)arg2 limit:(unsigned long long)arg3 onlyAppleInternal:(bool)arg4 block:(id /* block */)arg5;
- (void)loadSessionsForModel:(id)arg1 excludeItemIdsUsedWithin:(double)arg2 limit:(unsigned long long)arg3 onlyAppleInternal:(bool)arg4 positiveLabel:(unsigned long long)arg5 skew:(double)arg6 ignoreIfSingular:(bool)arg7 block:(id /* block */)arg8;
- (void)loadSessionsForModel:(id)arg1 excludeItemIdsUsedWithin:(double)arg2 withSkew:(double)arg3 andLimit:(int)arg4 block:(id /* block */)arg5;
- (void)loadSessionsForModel:(id)arg1 privacyBudgetRefreshPeriod:(double)arg2 labels:(id)arg3 batchSize:(unsigned long long)arg4 supportPerLabel:(unsigned long long)arg5 block:(id /* block */)arg6;
- (void)loadSessionsForModel:(id)arg1 since:(double)arg2 limit:(unsigned long long)arg3 onlyAppleInternal:(bool)arg4 block:(id /* block */)arg5;
- (void)loadSessionsForModel:(id)arg1 since:(double)arg2 limit:(unsigned long long)arg3 onlyAppleInternal:(bool)arg4 positiveLabel:(unsigned long long)arg5 skew:(double)arg6 ignoreIfSingular:(bool)arg7 block:(id /* block */)arg8;
- (unsigned long long)numberOfRowsInTable:(id)arg1;
- (id)sessionDimensionsForModel:(id)arg1 startingRowId:(unsigned long long)arg2 onlyAppleInternal:(bool)arg3 labelFilter:(id)arg4;
- (id)sessionStats;
- (id)sessionStatsForSessionDescriptor:(id)arg1;
- (void)storeLogEntryForPlan:(struct NSString { Class x1; }*)arg1 model:(id)arg2 serverIteration:(unsigned long long)arg3 timestamp:(double)arg4;
- (void)storeReceivedPlan:(id)arg1 planId:(id)arg2;
- (void)storeSession:(id)arg1 label:(long long)arg2 model:(id)arg3;
- (void)storeSession:(id)arg1 label:(long long)arg2 model:(id)arg3 bundleId:(id)arg4 domainId:(id)arg5 itemIds:(id)arg6 isAppleInternal:(bool)arg7;
- (void)storeSession:(id)arg1 source:(id)arg2 label:(long long)arg3 model:(id)arg4;
- (void)storeSession:(id)arg1 source:(id)arg2 label:(long long)arg3 model:(id)arg4 bundleId:(id)arg5 domainId:(id)arg6 itemIds:(id)arg7 isAppleInternal:(bool)arg8;
- (void)updateSessionsAndLabelForModel:(id)arg1 block:(id /* block */)arg2;
- (void)vacuumDb;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

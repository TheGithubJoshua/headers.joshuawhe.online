<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PVPersistenceDelegate.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/protocols/PVPersistenceDelegate.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
 */

@protocol PVPersistenceDelegate <NSObject>

@required

- (NSMutableArray *)allAlgorithmicFaceGroups:(id*)arg1;
- (NSArray *)allPersons:(id*)arg1;
- (NSString *)associateFace:(PVFace *)arg1 withFaceCrop:(PVFaceCrop *)arg2 error:(id*)arg3;
- (void)buildPersonsWithFaceClusterer:(void *)arg1 keyFaceUpdateBlock:(void *)arg2 canceler:(void *)arg3 context:(void *)arg4; // needs 4 arg types, found 9: <PVFaceClusteringProtocol> *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, NSArray *, void*, PVCanceler *, PVContext *
- (bool)cleanupGroupedFacesWithClusterSequenceNumberSetToZeroWithCanceler:(PVCanceler *)arg1 error:(id*)arg2;
- (bool)cleanupUngroupedFacesWithNonZeroClusterSequenceNumbersWithCanceler:(PVCanceler *)arg1 error:(id*)arg2;
- (bool)clearDirtyStateOnFaceCrops:(NSArray *)arg1 error:(id*)arg2;
- (NSNumber *)clusterSequenceNumberForFaceGroupWithLocalIdentifier:(NSString *)arg1;
- (unsigned long long)countOfAlgorithmicFaceGroups;
- (unsigned long long)countOfClusteredFaces;
- (unsigned long long)countOfClusteredFacesWithClusterSequenceNumbersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (unsigned long long)countOfClusteringEligibleFaces;
- (unsigned long long)countOfFaces;
- (unsigned long long)countOfUnclusteredClusteringEligibleFaces;
- (bool)deleteEmptyGroupsAndReturnError:(id*)arg1;
- (NSArray *)deterministicallyOrderedFaceIdentifiersWithLocalIdentifiers:(NSArray *)arg1 faceprintVersion:(unsigned int)arg2;
- (NSArray *)dirtyFaceCropsWithLimit:(unsigned long long)arg1;
- (unsigned int)faceAlgorithmUmbrellaVersion;
- (PVFace *)faceAssociatedWithFaceCrop:(PVFaceCrop *)arg1;
- (NSSet *)faceLocalIdentifiersInFaceGroupWithLocalIdentifier:(NSString *)arg1 error:(id*)arg2;
- (NSDictionary *)faceprintsByFaceLocalIdentifiers:(NSArray *)arg1 version:(unsigned int)arg2 error:(id*)arg3;
- (NSSet *)facesAlgorithmicallyGroupedWithFacesWithClusterSequenceNumbers:(NSSet *)arg1 includeSingletons:(bool)arg2 error:(id*)arg3;
- (NSArray *)facesForClusteringWithLocalIdentifiers:(NSArray *)arg1 faceprintVersion:(unsigned int)arg2 excludeClustered:(bool)arg3;
- (NSSet *)facesForFaceLocalIdentifiers:(NSArray *)arg1 error:(id*)arg2;
- (NSArray *)facesForPersonWithLocalIdentifier:(NSString *)arg1 error:(id*)arg2;
- (NSArray *)facesFromAsset:(PHAsset *)arg1;
- (NSMutableArray *)groupedClusterSequenceNumbersOfFacesInFaceGroupsOfMinimumSize:(unsigned long long)arg1 error:(id*)arg2;
- (bool)hasDirtyFaceCrops;
- (NSSet *)invalidFaceClusterSequenceNumbersInClusterSequenceNumbers:(NSSet *)arg1 canceler:(PVCanceler *)arg2 error:(id*)arg3;
- (NSSet *)keyFacesFromAlgorithmicGroupsContainingFacesWithClusterSequenceNumbers:(NSSet *)arg1 includeSingletons:(bool)arg2 error:(id*)arg3;
- (NSSet *)localIdentifiersOfFacesAlgorithmicallyGroupedWithFacesWithLocalIdentifiers:(NSSet *)arg1 error:(id*)arg2;
- (NSSet *)localIdentifiersOfKeyFacesFromAlgorithmicGroupsContainingFacesWithLocalIdentifiers:(NSSet *)arg1 error:(id*)arg2;
- (void)logPVDebugMessage:(NSString *)arg1;
- (void)logPVErrorMessage:(NSString *)arg1;
- (void)logPVInfoMessage:(NSString *)arg1;
- (void)logPVWarningMessage:(NSString *)arg1;
- (bool)needsPersonBuilding;
- (bool)persistChangesToAlgorithmicFaceGroups:(void *)arg1 faceCSNByLocalIdentifierForNewlyClusteredFaces:(void *)arg2 faceCSNsOfUnclusteredFaces:(void *)arg3 localIdentifiersOfUnclusteredFaces:(void *)arg4 persistenceCompletionBlock:(void *)arg5 canceler:(void *)arg6 error:(void *)arg7; // needs 7 arg types, found 11: NSDictionary *, NSDictionary *, NSMutableSet *, NSMutableSet *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, void*, PVCanceler *, id*
- (bool)persistFaces:(NSArray *)arg1 deleteFaces:(NSArray *)arg2 forAsset:(PHAsset *)arg3 persistedFaces:(id*)arg4 error:(id*)arg5;
- (bool)persistGeneratedFaceCrops:(NSArray *)arg1 error:(id*)arg2;
- (PVPerson *)personWithFaceLocalIdentifier:(NSString *)arg1 error:(id*)arg2;
- (NSSet *)personsForLocalIdentifiers:(NSSet *)arg1 error:(id*)arg2;
- (bool)recordNeedToPersonBuildOnFaceGroupContainingFace:(PVFace *)arg1 error:(id*)arg2;
- (NSSet *)rejectedFaceClusterSequenceNumbersForPersonWithLocalIdentifier:(NSString *)arg1 error:(id*)arg2;
- (NSSet *)rejectedFaceGroupLocalIdentifiersForPersonWithLocalIdentifier:(NSString *)arg1 error:(id*)arg2;
- (NSSet *)rejectedFaceLocalIdentifiersForPersonWithLocalIdentifier:(NSString *)arg1 error:(id*)arg2;
- (NSSet *)rejectedFacesForPersonWithLocalIdentifier:(NSString *)arg1 error:(id*)arg2;
- (NSSet *)rejectedUnverifiedPersonLocalIdentifiersForPersonWithLocalIdentifier:(NSString *)arg1 error:(id*)arg2;
- (bool)removeAlgorithmicallyGroupedFacesWithLocalIdentifiers:(NSArray *)arg1 error:(id*)arg2;
- (bool)resetClusterSequenceNumberOfFacesWithLocalIdentifiers:(NSArray *)arg1 error:(id*)arg2;
- (bool)resetLibraryClustersWithCanceler:(PVCanceler *)arg1 error:(id*)arg2;
- (unsigned int)sceneAlgorithmUmbrellaVersion;
- (void)setFaceAlgorithmUmbrellaVersion:(unsigned int)arg1;
- (bool)setKeyFaceOfAlgorithmicFaceGroupToFaceWithClusterSequenceNumbers:(NSArray *)arg1 error:(id*)arg2;
- (void)setSceneAlgorithmUmbrellaVersion:(unsigned int)arg1;
- (NSString *)suggestedPersonLocalIdentifierForPersonLocalIdentifier:(NSString *)arg1 faceClusterer:(id <PVFaceClusteringProtocol>)arg2 canceler:(PVCanceler *)arg3 context:(PVContext *)arg4 error:(id*)arg5;
- (NSSet *)unclusteredClusteringEligibleFaceLocalIdentifiers:(id*)arg1;
- (bool)ungroupFaceClusterSequenceNumbers:(NSArray *)arg1 batchSizeForUnclusteringFaces:(unsigned long long)arg2 canceler:(PVCanceler *)arg3 error:(id*)arg4;
- (NSSet *)unverifiedVisibleFacesFromFaceGroupContainingFacesWithClusterSequenceNumbers:(NSArray *)arg1 withFaceprintVersion:(unsigned int)arg2;
- (bool)updateFaceprint:(PVFaceprint *)arg1 ofPersistedFace:(PVFace *)arg2 error:(id*)arg3;
- (bool)updateKeyFacesOfPersonsWithLocalIdentifiers:(NSArray *)arg1 forceUpdate:(bool)arg2 canceler:(PVCanceler *)arg3 error:(id*)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

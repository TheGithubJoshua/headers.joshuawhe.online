<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVTUILogger.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/protocols/AVTUILogger.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
 */

@protocol AVTUILogger <NSObject>

@required

- (void)checkingAccountInfo:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)checkingIn:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)copyingStorageAside:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)deletingRecords:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)duplicatingRecords:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)exportingRecords:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)fetchingRecords:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)importingRecords:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)logAVTViewCancelingRenderingAvatar:(NSString *)arg1;
- (void)logAVTViewDidRenderAvatar:(NSString *)arg1 currentAvatar:(NSString *)arg2;
- (void)logAVTViewDidRenderCurrentAvatar:(NSString *)arg1;
- (void)logAVTViewSetAvatar:(NSString *)arg1;
- (void)logAccountInfo:(NSString *)arg1 status:(long long)arg2 deviceToDeviceEncryption:(bool)arg3;
- (void)logAvatarPreloadBeginForIdentifier:(NSString *)arg1;
- (void)logAvatarPreloadEnd;
- (void)logAvatarsDaemonClientChecksIn:(int)arg1;
- (void)logAvatarsDaemonClientConnectionInterrupted;
- (void)logAvatarsDaemonClientConnectionInvalidated;
- (void)logAvatarsDaemonReceivesIncomingConnection;
- (void)logBackendVersionMismatch:(NSString *)arg1 actual:(NSString *)arg2;
- (void)logCancelTransition:(NSString *)arg1;
- (void)logCancelingPreLoadingTask:(NSString *)arg1;
- (void)logCarouselAddsTransitionToCoordinator:(NSString *)arg1;
- (void)logCarouselCellStartUsingLiveView:(NSString *)arg1 associatedTransition:(NSString *)arg2;
- (void)logCarouselCellStopUsingLiveView:(NSString *)arg1 associatedTransition:(NSString *)arg2;
- (void)logCarouselChangesCenterItemTo:(NSString *)arg1;
- (void)logCarouselChangingToMultiMode;
- (void)logCarouselChangingToSingleMode;
- (void)logCarouselDelegateDidFocusRecord:(NSString *)arg1;
- (void)logCarouselDelegateDidUpdateRecord:(NSString *)arg1;
- (void)logCarouselDelegateNearnessFactorDidChange:(double)arg1 towardRecord:(bool)arg2 editable:(bool)arg3;
- (void)logCarouselDelegateWillEndFocusRecord:(NSString *)arg1;
- (void)logCarouselEndsDraggingWithVelocity:(double)arg1 willSwitchIndexPathInsteadOfScrollBack:(bool)arg2 forHighVelocity:(bool)arg3;
- (void)logCarouselErrorGettingFrameForElementAtIndex:(unsigned long long)arg1;
- (void)logCarouselSnapshotForIndex:(unsigned long long)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (void)logCarouselStopsFocusingOnCenterItem:(NSString *)arg1 withCell:(NSString *)arg2;
- (void)logCarouselTransitionCenterItem:(NSString *)arg1 withCell:(NSString *)arg2;
- (void)logChangesRequireExport;
- (void)logChangesRequireThumbnailUpdate;
- (void)logCheckingIfMigrationNeeded;
- (void)logCoalesceableEventOccured:(NSString *)arg1;
- (void)logCouldntFindRecordIdentifierForChangeType:(long long)arg1 managedObjectID:(NSString *)arg2;
- (void)logCreatingBackendDBAtPath:(NSString *)arg1;
- (void)logCreatingBackendFolderAtPath:(NSString *)arg1;
- (void)logCreatingImageStoreForPath:(NSString *)arg1;
- (void)logCreatingStore:(NSString *)arg1;
- (void)logCurrentHistoryTokenFileDoesntExist:(NSString *)arg1;
- (void)logDebug:(NSString *)arg1;
- (void)logDeduplicateRecordWithIdentifier:(NSString *)arg1 toNewRecordWithIdentifier:(NSString *)arg2;
- (void)logDeletingImagesWithIdentifierPrefix:(NSString *)arg1;
- (void)logDeletingRecordWithIdentifier:(NSString *)arg1;
- (void)logDidFinishEditingWithError:(NSString *)arg1;
- (void)logDidFinishEditingWithSuccess;
- (void)logDidResetZoneWithSuccess:(bool)arg1 error:(NSString *)arg2;
- (void)logDiscoveredDuplicates:(NSString *)arg1 count:(unsigned long long)arg2;
- (void)logDispatchingRemoteChangeWithTransactionCount:(unsigned long long)arg1;
- (void)logDonePreLoadingPreset:(NSString *)arg1 task:(NSString *)arg2;
- (void)logDonePreLoadingThumbnailForPreLoadingTask:(NSString *)arg1;
- (void)logDroppingUnsupportedAvatarRecord:(NSString *)arg1;
- (void)logDuplicatingRecordWithIdentifier:(NSString *)arg1;
- (void)logErrorAddingPersistentStore:(NSString *)arg1;
- (void)logErrorCopyingStorageAside:(NSString *)arg1;
- (void)logErrorCreatingBackendContent:(NSString *)arg1;
- (void)logErrorDeletingMigratedContent:(NSString *)arg1;
- (void)logErrorDeletingSomeThumbnail:(NSString *)arg1;
- (void)logErrorDeletingThumbnailsForIdentifier:(NSString *)arg1 error:(NSString *)arg2;
- (void)logErrorDuplicatingThumbnailsForIdentifier:(NSString *)arg1 error:(NSString *)arg2;
- (void)logErrorFetchingChangeHistory:(NSString *)arg1;
- (void)logErrorFetchingRecords:(NSString *)arg1;
- (void)logErrorGettingAccountInfo:(NSString *)arg1;
- (void)logErrorGettingAvatarsDaemonClientProxy:(NSString *)arg1;
- (void)logErrorGettingChangedRecordsContentForIdentifiers:(NSString *)arg1 error:(NSString *)arg2;
- (void)logErrorLoadingTemplates:(NSString *)arg1;
- (void)logErrorMergingCopiedAsideContent:(NSString *)arg1;
- (void)logErrorMigratingBackupInclusionStatus:(NSString *)arg1;
- (void)logErrorMitigatingDuplicates:(NSString *)arg1;
- (void)logErrorPinningContextToCurrentQueryGenerationToken:(NSString *)arg1;
- (void)logErrorProcessingChangeTransactionsToUpdateThumbnails:(NSString *)arg1;
- (void)logErrorReadingCurrentHistoryToken:(NSString *)arg1;
- (void)logErrorRemovingStoreFolder:(NSString *)arg1;
- (void)logErrorSavingChangeToken:(NSString *)arg1 location:(NSString *)arg2;
- (void)logErrorSettingUpStore:(NSString *)arg1;
- (void)logErrorSettingUserDirSuffix;
- (void)logErrorStartingServer:(NSString *)arg1;
- (void)logErrorTearingDownCoreDataStack:(NSString *)arg1;
- (void)logErrorUpdatingBackupInclusionStatus:(NSString *)arg1;
- (void)logErrorUpdatingRecordsForMigration:(NSString *)arg1;
- (void)logErrorUpdatingVersion:(NSString *)arg1;
- (void)logErrorWhileMigratingBackend:(NSString *)arg1;
- (void)logExportRequestResult:(bool)arg1 error:(NSString *)arg2;
- (void)logFetchedRecords:(unsigned long long)arg1 criteria:(long long)arg2;
- (void)logFileSystemError:(NSString *)arg1;
- (void)logFoundExistingRecordDuringMigration;
- (void)logFoundRecordIdentifier:(NSString *)arg1 changeType:(long long)arg2 managedObjectID:(NSString *)arg3;
- (void)logGeneratingImageError:(NSString *)arg1;
- (void)logGeneratingImageForRecord:(NSString *)arg1 scope:(NSString *)arg2 type:(long long)arg3;
- (void)logImageStoreBeginSavingImageForPath:(NSString *)arg1;
- (void)logImageStoreCacheHitForItemDescription:(NSString *)arg1 sizeCost:(unsigned long long)arg2;
- (void)logImageStoreCacheMiss:(NSString *)arg1;
- (void)logImageStoreDoneSavingImageForPath:(NSString *)arg1;
- (void)logImageStoreSavingError:(NSString *)arg1 code:(long long)arg2;
- (void)logImportRequestResult:(bool)arg1 error:(NSString *)arg2;
- (void)logInMemoryCacheEvictsResource:(NSString *)arg1;
- (void)logInMemoryCacheHitForResource:(NSString *)arg1;
- (void)logInMemoryCacheStorageForResource:(NSString *)arg1;
- (void)logInspectingChangesForExportAfterToken:(NSString *)arg1;
- (void)logLookingUpPreLoadedPreset:(NSString *)arg1 task:(NSString *)arg2;
- (void)logMaintenanceCompleted;
- (void)logMigratingSource:(NSString *)arg1;
- (void)logMigrationXPCActivityFinished;
- (void)logMirroringRequestErrorWithCode:(long long)arg1 description:(NSString *)arg2;
- (void)logMissingResetSyncReasonKey;
- (void)logMissingTombstonedIdentifier;
- (void)logNoAvatarPreset:(NSString *)arg1;
- (void)logNoProxyToAvatarsDaemon;
- (void)logNotImportingOnLaunchWithRemainingTime:(double)arg1;
- (void)logNotificationDoesntContainChangeHistoryToken;
- (void)logParsingMetadataDefinitions;
- (void)logParsingMetadataDefinitionsError:(NSString *)arg1;
- (void)logPerformTransition:(NSString *)arg1;
- (void)logPostingChangeNotificationForIdentifiers:(NSArray *)arg1;
- (void)logPreLoadingNeededForIndex:(unsigned long long)arg1 section:(unsigned long long)arg2;
- (void)logPreLoadingPreset:(NSString *)arg1 task:(NSString *)arg2;
- (void)logPushConnectionReceivedPublicToken:(NSString *)arg1;
- (void)logPushConnectionReceivedToken:(NSString *)arg1 topic:(NSString *)arg2 identifier:(NSString *)arg3;
- (void)logPushNotificationReceivedForTopic:(NSString *)arg1 payload:(NSString *)arg2;
- (void)logReadingBackendAtPath:(NSString *)arg1;
- (void)logReadingError:(NSString *)arg1;
- (void)logReceivedRemoteChange:(NSString *)arg1;
- (void)logRecordNotFoundInPuppetStore:(NSString *)arg1;
- (void)logRecordNotFoundInRecordStore:(NSString *)arg1;
- (void)logRenderingConfiguration:(NSString *)arg1;
- (void)logRenderingModelColor:(NSString *)arg1;
- (void)logRenderingModelPreset:(NSString *)arg1;
- (void)logRenderingRecord:(NSString *)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (void)logRequestingPreLoadingTask:(NSString *)arg1 forIndex:(unsigned long long)arg2 section:(unsigned long long)arg3;
- (void)logRequestingThumbnailForIndex:(unsigned long long)arg1 section:(NSString *)arg2;
- (void)logResetSyncReason:(unsigned long long)arg1;
- (void)logSavingBackend;
- (void)logSavingError:(NSString *)arg1;
- (void)logSchedulingImport;
- (void)logSchedulingUpdateThumbnails;
- (void)logSetupHandlerCompletedForTransition:(NSString *)arg1 state:(long long)arg2 finished:(bool)arg3;
- (void)logSetupSchedulingExport;
- (void)logSetupSchedulingImport;
- (void)logSetupSchedulingMigrationCheck;
- (void)logSingleModeCantSnapshotForLackOfWindow;
- (void)logSingleModeControllerStartUsingLiveView:(NSString *)arg1;
- (void)logSingleModeControllerStopUsingLiveView:(NSString *)arg1;
- (void)logSnapshotReturnedImage:(NSString *)arg1;
- (void)logStartObservingRemoteChangeNotificationFrom:(NSString *)arg1;
- (void)logStartObservingResetSync;
- (void)logStartTransition:(NSString *)arg1 state:(long long)arg2;
- (void)logStartingPreLoadingTask:(NSString *)arg1;
- (void)logStartingServer;
- (void)logSyncEnabled;
- (void)logTearingDownCoreDataStack:(NSString *)arg1;
- (void)logThrottlingAVTView;
- (void)logToLivePoseTransitionBegins:(NSString *)arg1;
- (void)logToLivePoseTransitionEnds:(NSString *)arg1;
- (void)logTooManyAvatars:(unsigned long long)arg1 limit:(unsigned long long)arg2;
- (void)logTrackerProcessingChanges:(NSString *)arg1 count:(unsigned long long)arg2 from:(NSString *)arg3;
- (void)logTransactionHasChangesButNoToken;
- (void)logTransition:(NSString *)arg1 state:(unsigned long long)arg2 reachedStage:(unsigned long long)arg3;
- (void)logUnableToCreatePushConnection:(NSString *)arg1;
- (void)logUnableToReadRemoteRecord:(NSString *)arg1;
- (void)logUnthrottlingAVTView;
- (void)logUpdatingBackupExclusionStatus:(bool)arg1;
- (void)logUpdatingLiveAvatarWithConfiguration:(NSString *)arg1;
- (void)logUpdatingThumbnails;
- (void)logUsageTrackingBigDifferencesClusterCount:(unsigned long long)arg1;
- (void)logUsageTrackingRecordCount:(unsigned long long)arg1;
- (void)logUsageTrackingSmallDifferencesClusterCount:(unsigned long long)arg1;
- (void)logWillResetZone;
- (void)migratingPersistedContent:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)performingMigrationXPCActivity:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)postingAvatarStoreChangeNotification:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)processingDidResetSyncNotification:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)processingRemoteChangeNotification:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)processingWillResetSyncNotification:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)restoringStorage:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)runningMaintenance:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)savingChangeTrackerToken:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)savingRecords:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)settingUpStore:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*
- (void)updatingThumbnailsForRemoteChanges:(void *)arg1; // needs 1 arg types, found 10: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, id /* block */, void*, void, id /* block */, void*, void*

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_CPFeedbackPayload.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/protocols/_CPFeedbackPayload.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
 */

@protocol _CPFeedbackPayload <NSObject>

@required

- (_CPCacheHitFeedback *)cacheHitFeedback;
- (_CPCardSectionEngagementFeedback *)cardSectionEngagementFeedback;
- (_CPCardSectionFeedback *)cardSectionFeedback;
- (_CPCardViewAppearFeedback *)cardViewAppearFeedback;
- (_CPCardViewDisappearFeedback *)cardViewDisappearFeedback;
- (_CPCBAEngagementFeedback *)cbaEngagementFeedback;
- (_CPClearInputFeedback *)clearInputFeedback;
- (_CPClientTimingFeedback *)clientTimingFeedback;
- (_CPConnectionInvalidatedFeedback *)connectionInvalidatedFeedback;
- (_CPCustomFeedback *)customFeedback;
- (_CPDidGoToSearchFeedback *)didGoToSearchFeedback;
- (_CPDidGoToSiteFeedback *)didGoToSiteFeedback;
- (_CPEndLocalSearchFeedback *)endLocalSearchFeedback;
- (_CPEndNetworkSearchFeedback *)endNetworkSearchFeedback;
- (_CPEndSearchFeedback *)endSearchFeedback;
- (_CPErrorFeedback *)errorFeedback;
- (_CPFeedback *)feedback;
- (id)initWithDictionary:(NSDictionary *)arg1;
- (id)initWithJSON:(NSData *)arg1;
- (NSData *)jsonData;
- (_CPLateSectionsAppendedFeedback *)lateSectionsAppendedFeedback;
- (_CPLookupHintRelevancyFeedback *)lookupHintRelevancyFeedback;
- (_CPMapsCardSectionEngagementFeedback *)mapsCardSectionEngagementFeedback;
- (unsigned long long)queryId;
- (_CPRankingFeedback *)rankingFeedback;
- (_CPResultEngagementFeedback *)resultEngagementFeedback;
- (_CPResultFeedback *)resultFeedback;
- (_CPResultGradingFeedback *)resultGradingFeedback;
- (_CPResultRankingFeedback *)resultRankingFeedback;
- (_CPResultsReceivedAfterTimeoutFeedback *)resultsReceivedAfterTimeoutFeedback;
- (_CPSearchViewAppearFeedback *)searchViewAppearFeedback;
- (_CPSearchViewDisappearFeedback *)searchViewDisappearFeedback;
- (_CPSectionEngagementFeedback *)sectionEngagementFeedback;
- (_CPSectionRankingFeedback *)sectionRankingFeedback;
- (_CPSessionEndFeedback *)sessionEndFeedback;
- (_CPSessionMissingResultsFeedback *)sessionMissingResultsFeedback;
- (_CPSessionMissingSuggestionsFeedback *)sessionMissingSuggestionsFeedback;
- (void)setCacheHitFeedback:(_CPCacheHitFeedback *)arg1;
- (void)setCardSectionEngagementFeedback:(_CPCardSectionEngagementFeedback *)arg1;
- (void)setCardSectionFeedback:(_CPCardSectionFeedback *)arg1;
- (void)setCardViewAppearFeedback:(_CPCardViewAppearFeedback *)arg1;
- (void)setCardViewDisappearFeedback:(_CPCardViewDisappearFeedback *)arg1;
- (void)setCbaEngagementFeedback:(_CPCBAEngagementFeedback *)arg1;
- (void)setClearInputFeedback:(_CPClearInputFeedback *)arg1;
- (void)setClientTimingFeedback:(_CPClientTimingFeedback *)arg1;
- (void)setConnectionInvalidatedFeedback:(_CPConnectionInvalidatedFeedback *)arg1;
- (void)setCustomFeedback:(_CPCustomFeedback *)arg1;
- (void)setDidGoToSearchFeedback:(_CPDidGoToSearchFeedback *)arg1;
- (void)setDidGoToSiteFeedback:(_CPDidGoToSiteFeedback *)arg1;
- (void)setEndLocalSearchFeedback:(_CPEndLocalSearchFeedback *)arg1;
- (void)setEndNetworkSearchFeedback:(_CPEndNetworkSearchFeedback *)arg1;
- (void)setEndSearchFeedback:(_CPEndSearchFeedback *)arg1;
- (void)setErrorFeedback:(_CPErrorFeedback *)arg1;
- (void)setFeedback:(_CPFeedback *)arg1;
- (void)setLateSectionsAppendedFeedback:(_CPLateSectionsAppendedFeedback *)arg1;
- (void)setLookupHintRelevancyFeedback:(_CPLookupHintRelevancyFeedback *)arg1;
- (void)setMapsCardSectionEngagementFeedback:(_CPMapsCardSectionEngagementFeedback *)arg1;
- (void)setQueryId:(unsigned long long)arg1;
- (void)setRankingFeedback:(_CPRankingFeedback *)arg1;
- (void)setResultEngagementFeedback:(_CPResultEngagementFeedback *)arg1;
- (void)setResultFeedback:(_CPResultFeedback *)arg1;
- (void)setResultGradingFeedback:(_CPResultGradingFeedback *)arg1;
- (void)setResultRankingFeedback:(_CPResultRankingFeedback *)arg1;
- (void)setResultsReceivedAfterTimeoutFeedback:(_CPResultsReceivedAfterTimeoutFeedback *)arg1;
- (void)setSearchViewAppearFeedback:(_CPSearchViewAppearFeedback *)arg1;
- (void)setSearchViewDisappearFeedback:(_CPSearchViewDisappearFeedback *)arg1;
- (void)setSectionEngagementFeedback:(_CPSectionEngagementFeedback *)arg1;
- (void)setSectionRankingFeedback:(_CPSectionRankingFeedback *)arg1;
- (void)setSessionEndFeedback:(_CPSessionEndFeedback *)arg1;
- (void)setSessionMissingResultsFeedback:(_CPSessionMissingResultsFeedback *)arg1;
- (void)setSessionMissingSuggestionsFeedback:(_CPSessionMissingSuggestionsFeedback *)arg1;
- (void)setSkipSearchFeedback:(_CPSkipSearchFeedback *)arg1;
- (void)setStartLocalSearchFeedback:(_CPStartLocalSearchFeedback *)arg1;
- (void)setStartNetworkSearchFeedback:(_CPStartNetworkSearchFeedback *)arg1;
- (void)setStartSearchFeedback:(_CPStartSearchFeedback *)arg1;
- (void)setStoreCardSectionEngagementFeedback:(_CPStoreCardSectionEngagementFeedback *)arg1;
- (void)setSuggestionEngagementFeedback:(_CPSuggestionEngagementFeedback *)arg1;
- (void)setVisibleResultsFeedback:(_CPVisibleResultsFeedback *)arg1;
- (void)setVisibleSectionHeaderFeedback:(_CPVisibleSectionHeaderFeedback *)arg1;
- (void)setVisibleSuggestionsFeedback:(_CPVisibleSuggestionsFeedback *)arg1;
- (_CPSkipSearchFeedback *)skipSearchFeedback;
- (_CPStartLocalSearchFeedback *)startLocalSearchFeedback;
- (_CPStartNetworkSearchFeedback *)startNetworkSearchFeedback;
- (_CPStartSearchFeedback *)startSearchFeedback;
- (_CPStoreCardSectionEngagementFeedback *)storeCardSectionEngagementFeedback;
- (_CPSuggestionEngagementFeedback *)suggestionEngagementFeedback;
- (_CPVisibleResultsFeedback *)visibleResultsFeedback;
- (_CPVisibleSectionHeaderFeedback *)visibleSectionHeaderFeedback;
- (_CPVisibleSuggestionsFeedback *)visibleSuggestionsFeedback;
- (unsigned long long)whichContained_Feedback;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

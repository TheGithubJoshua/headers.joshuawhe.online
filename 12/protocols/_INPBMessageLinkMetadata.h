<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_INPBMessageLinkMetadata.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/protocols/_INPBMessageLinkMetadata.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
 */

@protocol _INPBMessageLinkMetadata <NSObject>

@required

- (int)StringAsLinkMediaType:(NSString *)arg1;
- (void)addIconURL:(NSString *)arg1;
- (void)addImageURL:(NSString *)arg1;
- (NSString *)albumArtist;
- (NSString *)albumName;
- (NSString *)artistGenre;
- (NSString *)artistName;
- (NSString *)audioBookAuthor;
- (NSString *)audioBookName;
- (NSString *)audioBookNarrator;
- (NSString *)bookAuthor;
- (NSString *)bookName;
- (void)clearIconURLs;
- (void)clearImageURLs;
- (NSString *)creator;
- (bool)hasAlbumArtist;
- (bool)hasAlbumName;
- (bool)hasArtistGenre;
- (bool)hasArtistName;
- (bool)hasAudioBookAuthor;
- (bool)hasAudioBookName;
- (bool)hasAudioBookNarrator;
- (bool)hasBookAuthor;
- (bool)hasBookName;
- (bool)hasCreator;
- (bool)hasITunesStoreFrontIdentifier;
- (bool)hasITunesStoreIdentifier;
- (bool)hasItemType;
- (bool)hasLinkMediaType;
- (bool)hasMovieGenre;
- (bool)hasMovieName;
- (bool)hasMusicVideoArtist;
- (bool)hasMusicVideoName;
- (bool)hasOriginalURL;
- (bool)hasPlaylistCurator;
- (bool)hasPlaylistName;
- (bool)hasPodcastArtist;
- (bool)hasPodcastEpisodeArtist;
- (bool)hasPodcastEpisodeName;
- (bool)hasPodcastEpisodePodcastName;
- (bool)hasPodcastEpisodeReleaseDate;
- (bool)hasPodcastName;
- (bool)hasRadioCurator;
- (bool)hasRadioName;
- (bool)hasSiteName;
- (bool)hasSoftwareGenre;
- (bool)hasSoftwareName;
- (bool)hasSoftwarePlatform;
- (bool)hasSongAlbum;
- (bool)hasSongArtist;
- (bool)hasSongTitle;
- (bool)hasSummary;
- (bool)hasTitle;
- (bool)hasTvEpisodeEpisodeName;
- (bool)hasTvEpisodeGenre;
- (bool)hasTvEpisodeSeasonName;
- (bool)hasTvSeasonGenre;
- (bool)hasTvSeasonName;
- (NSString *)iTunesStoreFrontIdentifier;
- (NSString *)iTunesStoreIdentifier;
- (NSString *)iconURLAtIndex:(unsigned long long)arg1;
- (NSArray *)iconURLs;
- (unsigned long long)iconURLsCount;
- (NSString *)imageURLAtIndex:(unsigned long long)arg1;
- (NSArray *)imageURLs;
- (unsigned long long)imageURLsCount;
- (NSString *)itemType;
- (int)linkMediaType;
- (NSString *)linkMediaTypeAsString:(int)arg1;
- (NSString *)movieGenre;
- (NSString *)movieName;
- (NSString *)musicVideoArtist;
- (NSString *)musicVideoName;
- (NSString *)originalURL;
- (NSString *)playlistCurator;
- (NSString *)playlistName;
- (NSString *)podcastArtist;
- (NSString *)podcastEpisodeArtist;
- (NSString *)podcastEpisodeName;
- (NSString *)podcastEpisodePodcastName;
- (_INPBDateTime *)podcastEpisodeReleaseDate;
- (NSString *)podcastName;
- (NSString *)radioCurator;
- (NSString *)radioName;
- (void)setAlbumArtist:(NSString *)arg1;
- (void)setAlbumName:(NSString *)arg1;
- (void)setArtistGenre:(NSString *)arg1;
- (void)setArtistName:(NSString *)arg1;
- (void)setAudioBookAuthor:(NSString *)arg1;
- (void)setAudioBookName:(NSString *)arg1;
- (void)setAudioBookNarrator:(NSString *)arg1;
- (void)setBookAuthor:(NSString *)arg1;
- (void)setBookName:(NSString *)arg1;
- (void)setCreator:(NSString *)arg1;
- (void)setHasLinkMediaType:(bool)arg1;
- (void)setITunesStoreFrontIdentifier:(NSString *)arg1;
- (void)setITunesStoreIdentifier:(NSString *)arg1;
- (void)setIconURLs:(NSArray *)arg1;
- (void)setImageURLs:(NSArray *)arg1;
- (void)setItemType:(NSString *)arg1;
- (void)setLinkMediaType:(int)arg1;
- (void)setMovieGenre:(NSString *)arg1;
- (void)setMovieName:(NSString *)arg1;
- (void)setMusicVideoArtist:(NSString *)arg1;
- (void)setMusicVideoName:(NSString *)arg1;
- (void)setOriginalURL:(NSString *)arg1;
- (void)setPlaylistCurator:(NSString *)arg1;
- (void)setPlaylistName:(NSString *)arg1;
- (void)setPodcastArtist:(NSString *)arg1;
- (void)setPodcastEpisodeArtist:(NSString *)arg1;
- (void)setPodcastEpisodeName:(NSString *)arg1;
- (void)setPodcastEpisodePodcastName:(NSString *)arg1;
- (void)setPodcastEpisodeReleaseDate:(_INPBDateTime *)arg1;
- (void)setPodcastName:(NSString *)arg1;
- (void)setRadioCurator:(NSString *)arg1;
- (void)setRadioName:(NSString *)arg1;
- (void)setSiteName:(NSString *)arg1;
- (void)setSoftwareGenre:(NSString *)arg1;
- (void)setSoftwareName:(NSString *)arg1;
- (void)setSoftwarePlatform:(NSString *)arg1;
- (void)setSongAlbum:(NSString *)arg1;
- (void)setSongArtist:(NSString *)arg1;
- (void)setSongTitle:(NSString *)arg1;
- (void)setSummary:(NSString *)arg1;
- (void)setTitle:(NSString *)arg1;
- (void)setTvEpisodeEpisodeName:(NSString *)arg1;
- (void)setTvEpisodeGenre:(NSString *)arg1;
- (void)setTvEpisodeSeasonName:(NSString *)arg1;
- (void)setTvSeasonGenre:(NSString *)arg1;
- (void)setTvSeasonName:(NSString *)arg1;
- (NSString *)siteName;
- (NSString *)softwareGenre;
- (NSString *)softwareName;
- (NSString *)softwarePlatform;
- (NSString *)songAlbum;
- (NSString *)songArtist;
- (NSString *)songTitle;
- (NSString *)summary;
- (NSString *)title;
- (NSString *)tvEpisodeEpisodeName;
- (NSString *)tvEpisodeGenre;
- (NSString *)tvEpisodeSeasonName;
- (NSString *)tvSeasonGenre;
- (NSString *)tvSeasonName;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MSASStateMachineDelegate.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/protocols/MSASStateMachineDelegate.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
 */

@protocol MSASStateMachineDelegate

@required

- (MSASStateMachine *)MSASCounterpartInstance;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAccessControlChangesForAlbumGUIDS:(NSArray *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAlbumChanges:(NSArray *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAlbumSyncedState:(NSDictionary *)arg2 forAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAssetCollectionChanges:(NSArray *)arg2 forAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindAssetCollectionSyncedState:(NSDictionary *)arg2 forAssetCollectionGUID:(NSString *)arg3 inAlbum:(MSASAlbum *)arg4 assetCollectionStateCtag:(NSString *)arg5 info:(NSDictionary *)arg6;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindChangesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindCommentChanges:(NSArray *)arg2 inAssetCollectionWithGUID:(NSString *)arg3 inAlbumWithGUID:(NSString *)arg4 info:(NSDictionary *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindNewURLString:(NSString *)arg2 forAlbumWithGUID:(NSString *)arg3 info:(NSDictionary *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindSyncedKeyValueChangesForAlbumGUIDS:(NSArray *)arg2 albumChanges:(NSArray *)arg3 accessControlChangesForAlbumGUIDS:(NSArray *)arg4 info:(NSDictionary *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFindSyncedKeyValueChangesForAlbumGUIDS:(NSArray *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishAddingAssetCollection:(MSASAssetCollection *)arg2 toAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishAddingComment:(MSASComment *)arg2 toAssetCollection:(MSASAssetCollection *)arg3 inAlbum:(MSASAlbum *)arg4 info:(NSDictionary *)arg5 error:(NSError *)arg6;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishAddingSharingRelationships:(NSArray *)arg2 toOwnedAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForAlbumSyncedStateChangesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4 newAlbumStateCtag:(NSString *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForChangesInfo:(NSDictionary *)arg2 error:(NSError *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForCommentChangesInAssetCollectionWithGUID:(NSString *)arg2 largestCommentID:(int)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForUpdatesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCheckingForUpdatesInAlbums:(NSArray *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishCreatingAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishDeletingAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishDeletingAssetCollection:(MSASAssetCollection *)arg2 inAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishDeletingComment:(MSASComment *)arg2 inAssetCollection:(MSASAssetCollection *)arg3 inAlbum:(MSASAlbum *)arg4 info:(NSDictionary *)arg5 error:(NSError *)arg6;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishEnqueueingAssetsForDownload:(NSArray *)arg2 inAlbumWithGUID:(NSString *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishGettingAccessControls:(NSArray *)arg2 forAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishMarkingAsSpamInvitationForAlbum:(MSASAlbum *)arg2 invitationGUID:(NSString *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishMarkingAsSpamInvitationForToken:(NSString *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishRemovingSharingRelationship:(MSASSharingRelationship *)arg2 fromOwnedAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishRetrievingAsset:(MSAsset *)arg2 inAlbum:(MSASAlbum *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishSendingInvitationByPhone:(NSString *)arg2 toOwnedAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishSettingSyncedStateForAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4 newAlbumStateCtag:(NSString *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishSettingSyncedStateForAssetCollection:(MSASAssetCollection *)arg2 inAlbum:(MSASAlbum *)arg3 assetStateCtag:(NSString *)arg4 info:(NSDictionary *)arg5 error:(NSError *)arg6;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishSubscribingToAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishUnsubscribingFromAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishUpdatingAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3 error:(NSError *)arg4;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFinishUpdatingAssetCollections:(NSArray *)arg2 inAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didFireScheduledEvent:(id)arg2 forAssetCollectionGUID:(NSString *)arg3 albumGUID:(NSString *)arg4 info:(NSDictionary *)arg5;
- (bool)MSASStateMachine:(MSASStateMachine *)arg1 didQueryIsAssetCollectionWithGUIDInModel:(NSString *)arg2;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 didRequestAssetsForAddingAssetCollections:(NSArray *)arg2 inAlbum:(MSASAlbum *)arg3 specifications:(NSArray *)arg4 info:(NSDictionary *)arg5;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 willCheckForAlbumSyncedStateChangesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 willCheckForUpdatesInAlbum:(MSASAlbum *)arg2 info:(NSDictionary *)arg3;
- (void)MSASStateMachine:(MSASStateMachine *)arg1 willUpdateAssetCollections:(NSArray *)arg2 inAlbum:(MSASAlbum *)arg3 info:(NSDictionary *)arg4;
- (void)MSASStateMachineDidFindGlobalResetSync:(MSASStateMachine *)arg1 info:(NSDictionary *)arg2;
- (NSString *)MSASStateMachineDidRequestAlbumStateCtagForAlbumWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (NSString *)MSASStateMachineDidRequestAlbumURLStringForAlbumWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (MSASAlbum *)MSASStateMachineDidRequestAlbumWithGUID:(NSString *)arg1;
- (NSString *)MSASStateMachineDidRequestAssetCollectionStateCtagForAssetCollectionWithGUID:(NSString *)arg1 info:(NSDictionary *)arg2;
- (void)MSASStateMachineDidStart:(MSASStateMachine *)arg1;
- (void)MSASStateMachineDidUpdateServerCommunicationBackoffDate:(MSASStateMachine *)arg1;
- (void)setMSASCounterpartInstance:(MSASStateMachine *)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

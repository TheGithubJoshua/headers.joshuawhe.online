<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>TVPPlayback.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/protocols/TVPPlayback.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
 */

@protocol TVPPlayback <NSObject>

@required

- (id)addBoundaryTimeObserverForDates:(void *)arg1 withHandler:(void *)arg2; // needs 2 arg types, found 7: NSArray *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, bool, void*
- (id)addBoundaryTimeObserverForTimes:(void *)arg1 withHandler:(void *)arg2; // needs 2 arg types, found 7: NSArray *, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, bool, void*
- (id)addElapsedTimeObserver:(void *)arg1; // needs 1 arg types, found 9: id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, double, NSDate *, double, bool, void*
- (<TVPASyncPlaybackDelegate> *)asyncDelegate;
- (NSArray *)audioOptions;
- (TVPTimeRange *)bufferedTimeRange;
- (void)changeMediaInDirection:(long long)arg1;
- (void)changeMediaInDirection:(long long)arg1 reason:(NSString *)arg2;
- (NSArray *)chapterCollections;
- (void)continueLoadingCurrentItem;
- (TVPChapter *)currentChapter;
- (TVPChapterCollection *)currentChapterCollection;
- (TVPInterstitial *)currentInterstitial;
- (NSObject<TVPMediaItem> *)currentMediaItem;
- (bool)currentMediaItemHasDates;
- (bool)currentMediaItemHasVideoContent;
- (bool)currentMediaItemInitialLoadingComplete;
- (bool)currentMediaItemIsStreaming;
- (bool)currentMediaItemPreparedForLoading;
- (struct CGSize { double x1; double x2; })currentMediaItemPresentationSize;
- (bool)currentMediaItemSupportsScrubbingUsingPlayer;
- (<TVPPlaybackDelegate> *)delegate;
- (double)duration;
- (double)elapsedTime;
- (long long)errorBehavior;
- (double)forwardPlaybackEndTime;
- (id)init;
- (id)initWithName:(NSString *)arg1;
- (bool)interactive;
- (void)invalidate;
- (bool)isLive;
- (bool)limitReadAhead;
- (double)maximumBitRate;
- (long long)mediaItemEndAction;
- (bool)muted;
- (NSString *)name;
- (void)pause;
- (void)pauseIgnoringDelegate:(bool)arg1;
- (void)pauseWithVolumeRampDuration:(double)arg1;
- (void)play;
- (void)playIgnoringDelegate:(bool)arg1;
- (NSDate *)playbackDate;
- (TVPPlaylist *)playlist;
- (bool)preventsSleepDuringVideoPlayback;
- (double)rate;
- (double)rateUsedForPlayback;
- (void)removeBoundaryTimeObserverWithToken:(id)arg1;
- (void)removeElapsedTimeObserverWithToken:(id)arg1;
- (double)reversePlaybackEndTime;
- (void)scanWithRate:(double)arg1;
- (TVPDateRange *)seekableDateRange;
- (TVPTimeRange *)seekableTimeRange;
- (TVPAudioOption *)selectedAudioOption;
- (TVPSubtitleOption *)selectedSubtitleOption;
- (void)setAsyncDelegate:(id <TVPASyncPlaybackDelegate>)arg1;
- (void)setCurrentChapterCollection:(TVPChapterCollection *)arg1;
- (void)setCurrentMediaItem:(NSObject<TVPMediaItem> *)arg1;
- (void)setDelegate:(id <TVPPlaybackDelegate>)arg1;
- (void)setElapsedTime:(double)arg1;
- (void)setElapsedTime:(double)arg1 precise:(bool)arg2;
- (void)setElapsedTime:(double)arg1 seekPrecision:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2;
- (void)setElapsedTime:(double)arg1 seekPrecision:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg2 ignoreDelegate:(bool)arg3;
- (void)setErrorBehavior:(long long)arg1;
- (void)setInteractive:(bool)arg1;
- (void)setLimitReadAhead:(bool)arg1;
- (void)setMaximumBitRate:(double)arg1;
- (void)setMediaItemEndAction:(long long)arg1;
- (void)setMuted:(bool)arg1;
- (void)setPlaybackDate:(NSDate *)arg1;
- (void)setPlaylist:(TVPPlaylist *)arg1;
- (void)setPreventsSleepDuringVideoPlayback:(bool)arg1;
- (void)setRateUsedForPlayback:(double)arg1;
- (void)setSelectedAudioOption:(TVPAudioOption *)arg1;
- (void)setSelectedSubtitleOption:(TVPSubtitleOption *)arg1;
- (void)setSelectedSubtitleOption:(TVPSubtitleOption *)arg1 setGlobalPreference:(bool)arg2;
- (void)setUpdatesMediaRemoteInfoAutomatically:(bool)arg1;
- (void)setVolume:(float)arg1;
- (void)setWaitsAfterPreparingMediaItems:(bool)arg1;
- (void)skipToNextChapterInDirection:(long long)arg1;
- (TVPPlaybackState *)state;
- (void)stop;
- (void)stopWithVolumeRampDuration:(double)arg1;
- (NSArray *)subtitleOptions;
- (void)togglePlayPause;
- (void)updateSubtitleOptions;
- (bool)updatesMediaRemoteInfoAutomatically;
- (float)volume;
- (bool)waitsAfterPreparingMediaItems;

@optional

- (void)changeToMediaAtIndex:(unsigned long long)arg1 reason:(NSString *)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUPhotosGridTransitioningLayout.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/protocols/PUPhotosGridTransitioningLayout.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
 */

@protocol PUPhotosGridTransitioningLayout <PUPhotosGridTransitioningLayoutBasic>

@required

- (void)adjustEffectiveContentOriginForTransitionEndContentOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)enumerateRealSectionsForVisualSection:(void *)arg1 usingBlock:(void *)arg2; // needs 2 arg types, found 8: long long, id /* block */, /* Warning: Unrecognized filer type: '<' using 'void*' */ void*, void, id /* block */, unsigned long long, bool*, void*
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForItemAtGridCoordinates:(struct PUGridCoordinates { long long x1; long long x2; })arg1 inTransitionSection:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForItemAtGridCoordinates:(struct PUGridCoordinates { long long x1; long long x2; })arg1 inVisualSection:(long long)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frameForSectionHeaderAtVisualSection:(long long)arg1;
- (struct PUGridCoordinates { long long x1; long long x2; })gridCoordinatesInTransitionSectionForItemAtIndexPath:(NSIndexPath *)arg1;
- (struct PUGridCoordinates { long long x1; long long x2; })gridCoordinatesInVisualSectionForItemAtIndexPath:(NSIndexPath *)arg1;
- (bool)hasItemAtGridCoordinates:(struct PUGridCoordinates { long long x1; long long x2; })arg1 inTransitionSection:(long long)arg2;
- (struct CGSize { double x1; double x2; })interItemSpacing;
- (NSIndexPath *)itemIndexPathAtCenterOfRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (NSIndexPath *)itemIndexPathAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (NSIndexPath *)itemIndexPathClosestToPoint:(struct CGPoint { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })itemSize;
- (long long)itemsPerRow;
- (NSIndexPath *)mainRealIndexPathAtGridCoordinates:(struct PUGridCoordinates { long long x1; long long x2; })arg1 inTransitionSection:(long long)arg2;
- (long long)mainRealSectionForVisualSection:(long long)arg1;
- (NSIndexPath *)maxItemIndexPathAbovePoint:(struct CGPoint { double x1; double x2; })arg1;
- (NSIndexPath *)maxItemIndexPathLeftOfPoint:(struct CGPoint { double x1; double x2; })arg1;
- (long long)numberOfContiguousRowsInTransitionSection:(long long)arg1;
- (long long)numberOfRowsInVisualSection:(long long)arg1;
- (long long)numberOfVisualItemsInVisualSection:(long long)arg1;
- (long long)numberOfVisualSections;
- (void)setInterItemSpacing:(struct CGSize { double x1; double x2; })arg1;
- (void)setItemSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setTransitionAnchorShiftsColumns:(bool)arg1;
- (void)setTransitionEffectiveContentOrigin:(struct CGPoint { double x1; double x2; })arg1;
- (void)setTransitionExplicitAnchorItemIndexPath:(NSIndexPath *)arg1;
- (void)setTransitionIsAnimated:(bool)arg1;
- (struct CGPoint { double x1; double x2; })targetContentOffsetForTransitionFromGridLayout:(UICollectionViewLayout<PUPhotosGridTransitioningLayout> *)arg1;
- (struct PUGridCoordinates { long long x1; long long x2; })targetTransitionGridCoordsForGridCoords:(struct PUGridCoordinates { long long x1; long long x2; })arg1 atVisualSection:(long long)arg2 outTransitionSection:(long long*)arg3;
- (NSIndexPath *)targetTransitionRealIndexPathForIndexPath:(NSIndexPath *)arg1;
- (struct CGSize { double x1; double x2; })transitionActualContentSize;
- (long long)transitionAnchorColumnOffset;
- (NSIndexPath *)transitionAnchorIndexPathForTransitionSection:(long long)arg1;
- (bool)transitionAnchorShiftsColumns;
- (struct CGPoint { double x1; double x2; })transitionEffectiveContentOrigin;
- (NSIndexPath *)transitionExplicitAnchorItemIndexPath;
- (NSIndexPath *)transitionFirstVisibleRowVisualPath;
- (bool)transitionIsAnimated;
- (NSIndexPath *)transitionLastVisibleRowVisualPath;
- (NSIndexSet *)transitionSectionsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 toOrFromGridLayout:(UICollectionViewLayout<PUPhotosGridTransitioningLayout> *)arg2;
- (struct PUGridCoordinates { long long x1; long long x2; })visualGridCoordsForTransitionGridCoords:(struct PUGridCoordinates { long long x1; long long x2; })arg1 atTransitionSection:(long long)arg2 outVisualSection:(long long*)arg3;
- (long long)visualSectionForRealSection:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>INPerson.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Intents.framework/INPerson.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Intents.framework/Intents (1)
 */

@interface INPerson : NSObject <INCacheableContainer, INImageProxyInjecting, INKeyImageProducing, INPersonExport, INSpeakable, NSCopying, NSMutableCopying, NSSecureCoding, REDonatedActionIdentifierProviding> {
    NSArray * _aliases;
    NSArray * _alternatives;
    NSString * _contactIdentifier;
    NSString * _customIdentifier;
    NSString * _displayName;
    INImage * _image;
    bool  _isMe;
    NSPersonNameComponents * _nameComponents;
    INPersonHandle * _personHandle;
    NSString * _relationship;
    NSString * _sourceAppBundleIdentifier;
    long long  _suggestionType;
    NSString * _userInput;
}

@property (readonly) INImage *_keyImage;
@property (nonatomic, readonly, copy) NSArray *aliases;
@property (nonatomic, copy) NSArray *aliases;
@property (nonatomic, readonly, copy) NSArray *alternativeSiriMatches;
@property (nonatomic, readonly) NSArray *alternativeSpeakableMatches;
@property (nonatomic, copy) NSArray *alternatives;
@property (nonatomic, copy) NSString *contactIdentifier;
@property (nonatomic, copy) NSString *customIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *displayName;
@property (nonatomic, readonly, copy) NSString *firstName;
@property (nonatomic, readonly, copy) NSString *fullName;
@property (nonatomic, copy) NSString *handle;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, copy) INImage *image;
@property (nonatomic, readonly) bool isMe;
@property (nonatomic) bool isMe;
@property (nonatomic, readonly, copy) NSString *lastName;
@property (nonatomic, copy) NSPersonNameComponents *nameComponents;
@property (nonatomic, copy) INPersonHandle *personHandle;
@property (nonatomic, readonly) NSString *pronunciationHint;
@property (nonatomic, copy) NSString *relationship;
@property (nonatomic, readonly, copy) NSArray *siriMatches;
@property (nonatomic, readonly) NSString *spokenPhrase;
@property (nonatomic, readonly) long long suggestionType;
@property (nonatomic) long long suggestionType;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSString *userIdentifier;
@property (nonatomic, readonly, copy) NSString *userName;
@property (nonatomic, readonly, copy) NSString *userURIString;
@property (nonatomic, readonly) NSString *vocabularyIdentifier;

// Image: /System/Library/Frameworks/Intents.framework/Intents

+ (id)expectedCNContactKeys;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_aliases;
- (long long)_compareSubProducerOne:(id)arg1 subProducerTwo:(id)arg2;
- (id)_dictionaryRepresentation;
- (id)_displayName;
- (id)_initWithUserInput:(id)arg1 personHandle:(id)arg2 nameComponents:(id)arg3 displayName:(id)arg4 image:(id)arg5 contactIdentifier:(id)arg6 customIdentifier:(id)arg7 relationship:(id)arg8 aliases:(id)arg9 suggestionType:(long long)arg10 isMe:(bool)arg11 alternatives:(id)arg12 sourceAppBundleIdentifier:(id)arg13;
- (void)_injectProxiesForImages:(id /* block */)arg1 completion:(id /* block */)arg2;
- (id)_intents_cacheableObjects;
- (id)_intents_indexingRepresentation;
- (id)_intents_readableDescriptionForLanguage:(id)arg1;
- (void)_intents_updateContainerWithCache:(id)arg1;
- (id)_keyImage;
- (id)_sourceAppBundleIdentifier;
- (id)_userInput;
- (id)aliases;
- (id)alternativeSiriMatches;
- (id)alternativeSpeakableMatches;
- (id)alternatives;
- (id)contactIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)customIdentifier;
- (id)description;
- (id)descriptionAtIndent:(unsigned long long)arg1;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (id)firstName;
- (id)fullName;
- (id)handle;
- (unsigned long long)hash;
- (id)identifier;
- (id)image;
- (id)initWithCoder:(id)arg1;
- (id)initWithContact:(id)arg1;
- (id)initWithHandle:(id)arg1 displayName:(id)arg2 contactIdentifier:(id)arg3;
- (id)initWithHandle:(id)arg1 nameComponents:(id)arg2 contactIdentifier:(id)arg3;
- (id)initWithHandle:(id)arg1 nameComponents:(id)arg2 displayName:(id)arg3 image:(id)arg4 contactIdentifier:(id)arg5;
- (id)initWithPersonHandle:(id)arg1 nameComponents:(id)arg2 displayName:(id)arg3 image:(id)arg4 contactIdentifier:(id)arg5 customIdentifier:(id)arg6;
- (id)initWithPersonHandle:(id)arg1 nameComponents:(id)arg2 displayName:(id)arg3 image:(id)arg4 contactIdentifier:(id)arg5 customIdentifier:(id)arg6 aliases:(id)arg7 suggestionType:(long long)arg8;
- (id)initWithPersonHandle:(id)arg1 nameComponents:(id)arg2 displayName:(id)arg3 image:(id)arg4 contactIdentifier:(id)arg5 customIdentifier:(id)arg6 isMe:(bool)arg7;
- (bool)isEqual:(id)arg1;
- (bool)isMe;
- (id)lastName;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)nameComponents;
- (id)personHandle;
- (id)pronunciationHint;
- (id)relationship;
- (void)setAliases:(id)arg1;
- (void)setAlternatives:(id)arg1;
- (void)setContactIdentifier:(id)arg1;
- (void)setCustomIdentifier:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setHandle:(id)arg1;
- (void)setImage:(id)arg1;
- (void)setIsMe:(bool)arg1;
- (void)setNameComponents:(id)arg1;
- (void)setPersonHandle:(id)arg1;
- (void)setRelationship:(id)arg1;
- (void)setSuggestionType:(long long)arg1;
- (id)siriMatches;
- (id)spokenPhrase;
- (id)spokenPhrases;
- (long long)suggestionType;
- (id)userIdentifier;
- (id)userName;
- (id)userURIString;
- (id)vocabularyIdentifier;

// Image: /System/Library/PrivateFrameworks/AssistantCardServiceSupport.framework/AssistantCardServiceSupport

- (id)acs_formattedPersonName;

// Image: /System/Library/PrivateFrameworks/IMAssistantCore.framework/IMAssistantCore

- (id)__im_assistant_allContactIdentifiers;
- (id)__im_assistant_displayNameForContact:(id)arg1 displayFormattedHandle:(id)arg2 normalizedHandle:(id)arg3;
- (id)__im_assistant_imCoreBundle;
- (id)__im_assistant_initAnonymousRecipientWithIMHandle:(id)arg1;
- (id)__im_assistant_initForContactResolutionResultWithContact:(id)arg1 type:(long long)arg2 label:(id)arg3;
- (id)__im_assistant_initWithContact:(id)arg1 displayFormattedHandle:(id)arg2 normalizedHandle:(id)arg3 type:(long long)arg4 label:(id)arg5;
- (id)__im_assistant_initWithContact:(id)arg1 imHandle:(id)arg2;
- (id)__im_assistant_initWithContact:(id)arg1 imHandle:(id)arg2 type:(long long)arg3 label:(id)arg4;
- (id)__im_assistant_initWithContact:(id)arg1 unformattedPersonHandle:(id)arg2 account:(id)arg3;

// Image: /System/Library/PrivateFrameworks/RelevanceEngine.framework/RelevanceEngine

- (unsigned long long)re_actionIdentifierHashValue;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

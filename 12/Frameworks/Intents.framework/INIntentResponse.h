<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>INIntentResponse.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Intents.framework/INIntentResponse.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Intents.framework/Intents (1)
 */

@interface INIntentResponse : NSObject <INCacheableContainer, INFileURLEnumerable, INGenericIntentResponse, INImageProxyInjecting, INIntentResponseExport, INIntentSlotComposing, INKeyImageProducing, INRuntimeObject, NSCopying, NSSecureCoding> {
    bool  __userConfirmationRequired;
    _INPBIntentResponse * _backingStore;
    long long  _code;
    PBCodable * _responseMessagePBRepresentation;
    NSUserActivity * _userActivity;
}

@property (nonatomic, readonly) NSString *_className;
@property (nonatomic, readonly) INIntentResponseDescription *_instanceDescription;
@property (nonatomic, readonly) INIntentResponseCodableCode *_intentResponseCodableCode;
@property (nonatomic, readonly) long long _intentResponseCode;
@property (readonly) long long _intents_toggleState;
@property (readonly) INImage *_keyImage;
@property (setter=_setPayloadResponseTypeName:, nonatomic, retain) NSString *_payloadResponseTypeName;
@property (setter=_setRequiresAuthentication:, nonatomic) bool _requiresAuthentication;
@property (setter=_setRequiresProtectedData:, nonatomic) bool _requiresProtectedData;
@property (setter=_setResponseMessagePBRepresentation:, nonatomic, retain) PBCodable *_responseMessagePBRepresentation;
@property (nonatomic, readonly) bool _shouldForwardIntentToApp;
@property (getter=_isSuccess, nonatomic, readonly) bool _success;
@property (nonatomic, readonly) long long _type;
@property (nonatomic, readonly) bool _userConfirmationRequired;
@property (nonatomic, readonly, copy) _INPBIntentResponse *backingStore;
@property (nonatomic) long long code;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSDictionary *propertiesByName;
@property (nonatomic) bool shouldOpenContainingApplication;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSUserActivity *userActivity;

// Image: /System/Library/Frameworks/Intents.framework/Intents

+ (bool)_appLaunchRequestedFromCode:(long long)arg1;
+ (long long)_codeFromIntentResponseCode:(long long)arg1;
+ (long long)_codeFromType:(int)arg1 errorCode:(int)arg2 appLaunchRequested:(bool)arg3;
+ (int)_errorCodeFromCode:(long long)arg1;
+ (long long)_intentHandlingStatusFromCode:(long long)arg1;
+ (int)_typeFromCode:(long long)arg1;
+ (void)initialize;
+ (bool)resolveInstanceMethod:(SEL)arg1;
+ (id)responseFailure;
+ (id)responseSuccess;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_className;
- (long long)_code;
- (bool)_commonInit;
- (id)_dictionaryRepresentation;
- (void)_enumerateFileURLsWithMutatingBlock:(id /* block */)arg1;
- (id)_impl;
- (id)_inCodable;
- (id)_initWithCode:(long long)arg1 userActivity:(id)arg2;
- (void)_injectProxiesForImages:(id /* block */)arg1 completion:(id /* block */)arg2;
- (id)_instanceDescription;
- (long long)_intentHandlingStatus;
- (id)_intentResponseCodableCode;
- (long long)_intentResponseCode;
- (id)_intents_cacheableObjects;
- (long long)_intents_toggleState;
- (void)_intents_updateContainerWithCache:(id)arg1;
- (bool)_isSuccess;
- (id)_originatingBundleIdentifier;
- (id)_payloadResponseMessageData;
- (id)_payloadResponseTypeName;
- (id)_propertiesByNameForLanguage:(id)arg1;
- (id)_renderedResponseForLanguage:(id)arg1 requiresSiriCompatibility:(bool)arg2;
- (bool)_requiresAuthentication;
- (bool)_requiresProtectedData;
- (id)_responseMessagePBRepresentation;
- (id)_responseTemplateForLanguage:(id)arg1;
- (id)_responseTemplateForLanguage:(id)arg1 requiresSiriCompatibility:(bool)arg2;
- (void)_setCode:(long long)arg1;
- (void)_setPayloadResponseMessageData:(id)arg1;
- (void)_setPayloadResponseTypeName:(id)arg1;
- (void)_setRequiresAuthentication:(bool)arg1;
- (void)_setRequiresProtectedData:(bool)arg1;
- (void)_setResponseMessagePBRepresentation:(id)arg1;
- (bool)_shouldForwardIntentToApp;
- (long long)_type;
- (bool)_userConfirmationRequired;
- (id)backingStore;
- (long long)code;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)descriptionAtIndent:(unsigned long long)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithBackingStore:(id)arg1;
- (id)initWithCode:(long long)arg1 userActivity:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithPropertiesByName:(id)arg1;
- (id)intentSlotDescriptions;
- (id)localizeValueOfSlotDescription:(id)arg1 forLanguage:(id)arg2;
- (id)propertiesByName;
- (id)protoData;
- (void)setCode:(long long)arg1;
- (void)setPropertiesByName:(id)arg1;
- (void)setShouldOpenContainingApplication:(bool)arg1;
- (void)setUserActivity:(id)arg1;
- (bool)setValue:(id)arg1 forProperty:(id)arg2;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (bool)shouldOpenContainingApplication;
- (id)userActivity;
- (id)valueForKey:(id)arg1;
- (id)valueForProperty:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;

// Image: /System/Library/PrivateFrameworks/IntentsCore.framework/IntentsCore

- (long long)_compareSubProducerOne:(id)arg1 subProducerTwo:(id)arg2;
- (id)_keyImage;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

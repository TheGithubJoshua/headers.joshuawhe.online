<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_INPBPayloadUnsupported.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Intents.framework/_INPBPayloadUnsupported.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Intents.framework/Intents (1)
 */

@interface _INPBPayloadUnsupported : PBCodable <NSCopying, NSSecureCoding, _INPBPayloadUnsupported> {
    NSArray * _conflictingParameters;
    int  _createTimerIntentLabelUnsupportedReason;
    struct { 
        unsigned int requestPaymentIntentCurrencyAmountUnsupportedReason : 1; 
        unsigned int sendPaymentIntentCurrencyAmountUnsupportedReason : 1; 
        unsigned int createTimerIntentLabelUnsupportedReason : 1; 
        unsigned int sendPaymentIntentPayeeUnsupportedReason : 1; 
        unsigned int requestPaymentIntentPayerUnsupportedReason : 1; 
        unsigned int reason : 1; 
        unsigned int sendMessageIntentRecipientUnsupportedReason : 1; 
        unsigned int setTimerAttributeIntentTargetTimerUnsupportedReason : 1; 
        unsigned int runWorkflowIntentWorkflowUnsupportedReason : 1; 
    }  _has;
    int  _reason;
    int  _requestPaymentIntentCurrencyAmountUnsupportedReason;
    int  _requestPaymentIntentPayerUnsupportedReason;
    int  _runWorkflowIntentWorkflowUnsupportedReason;
    int  _sendMessageIntentRecipientUnsupportedReason;
    int  _sendPaymentIntentCurrencyAmountUnsupportedReason;
    int  _sendPaymentIntentPayeeUnsupportedReason;
    int  _setTimerAttributeIntentTargetTimerUnsupportedReason;
}

@property (nonatomic, copy) NSArray *conflictingParameters;
@property (nonatomic, readonly) unsigned long long conflictingParametersCount;
@property (nonatomic) int createTimerIntentLabelUnsupportedReason;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool hasCreateTimerIntentLabelUnsupportedReason;
@property (nonatomic) bool hasReason;
@property (nonatomic) bool hasRequestPaymentIntentCurrencyAmountUnsupportedReason;
@property (nonatomic) bool hasRequestPaymentIntentPayerUnsupportedReason;
@property (nonatomic) bool hasRunWorkflowIntentWorkflowUnsupportedReason;
@property (nonatomic) bool hasSendMessageIntentRecipientUnsupportedReason;
@property (nonatomic) bool hasSendPaymentIntentCurrencyAmountUnsupportedReason;
@property (nonatomic) bool hasSendPaymentIntentPayeeUnsupportedReason;
@property (nonatomic) bool hasSetTimerAttributeIntentTargetTimerUnsupportedReason;
@property (readonly) unsigned long long hash;
@property (nonatomic) int reason;
@property (nonatomic) int requestPaymentIntentCurrencyAmountUnsupportedReason;
@property (nonatomic) int requestPaymentIntentPayerUnsupportedReason;
@property (nonatomic) int runWorkflowIntentWorkflowUnsupportedReason;
@property (nonatomic) int sendMessageIntentRecipientUnsupportedReason;
@property (nonatomic) int sendPaymentIntentCurrencyAmountUnsupportedReason;
@property (nonatomic) int sendPaymentIntentPayeeUnsupportedReason;
@property (nonatomic) int setTimerAttributeIntentTargetTimerUnsupportedReason;
@property (readonly) Class superclass;

+ (Class)conflictingParametersType;

- (void).cxx_destruct;
- (int)StringAsCreateTimerIntentLabelUnsupportedReason:(id)arg1;
- (int)StringAsReason:(id)arg1;
- (int)StringAsRequestPaymentIntentCurrencyAmountUnsupportedReason:(id)arg1;
- (int)StringAsRequestPaymentIntentPayerUnsupportedReason:(id)arg1;
- (int)StringAsRunWorkflowIntentWorkflowUnsupportedReason:(id)arg1;
- (int)StringAsSendMessageIntentRecipientUnsupportedReason:(id)arg1;
- (int)StringAsSendPaymentIntentCurrencyAmountUnsupportedReason:(id)arg1;
- (int)StringAsSendPaymentIntentPayeeUnsupportedReason:(id)arg1;
- (int)StringAsSetTimerAttributeIntentTargetTimerUnsupportedReason:(id)arg1;
- (void)addConflictingParameters:(id)arg1;
- (void)clearConflictingParameters;
- (id)conflictingParameters;
- (id)conflictingParametersAtIndex:(unsigned long long)arg1;
- (unsigned long long)conflictingParametersCount;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (int)createTimerIntentLabelUnsupportedReason;
- (id)createTimerIntentLabelUnsupportedReasonAsString:(int)arg1;
- (id)dictionaryRepresentation;
- (bool)hasCreateTimerIntentLabelUnsupportedReason;
- (bool)hasReason;
- (bool)hasRequestPaymentIntentCurrencyAmountUnsupportedReason;
- (bool)hasRequestPaymentIntentPayerUnsupportedReason;
- (bool)hasRunWorkflowIntentWorkflowUnsupportedReason;
- (bool)hasSendMessageIntentRecipientUnsupportedReason;
- (bool)hasSendPaymentIntentCurrencyAmountUnsupportedReason;
- (bool)hasSendPaymentIntentPayeeUnsupportedReason;
- (bool)hasSetTimerAttributeIntentTargetTimerUnsupportedReason;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)readFrom:(id)arg1;
- (int)reason;
- (id)reasonAsString:(int)arg1;
- (int)requestPaymentIntentCurrencyAmountUnsupportedReason;
- (id)requestPaymentIntentCurrencyAmountUnsupportedReasonAsString:(int)arg1;
- (int)requestPaymentIntentPayerUnsupportedReason;
- (id)requestPaymentIntentPayerUnsupportedReasonAsString:(int)arg1;
- (int)runWorkflowIntentWorkflowUnsupportedReason;
- (id)runWorkflowIntentWorkflowUnsupportedReasonAsString:(int)arg1;
- (int)sendMessageIntentRecipientUnsupportedReason;
- (id)sendMessageIntentRecipientUnsupportedReasonAsString:(int)arg1;
- (int)sendPaymentIntentCurrencyAmountUnsupportedReason;
- (id)sendPaymentIntentCurrencyAmountUnsupportedReasonAsString:(int)arg1;
- (int)sendPaymentIntentPayeeUnsupportedReason;
- (id)sendPaymentIntentPayeeUnsupportedReasonAsString:(int)arg1;
- (void)setConflictingParameters:(id)arg1;
- (void)setCreateTimerIntentLabelUnsupportedReason:(int)arg1;
- (void)setHasCreateTimerIntentLabelUnsupportedReason:(bool)arg1;
- (void)setHasReason:(bool)arg1;
- (void)setHasRequestPaymentIntentCurrencyAmountUnsupportedReason:(bool)arg1;
- (void)setHasRequestPaymentIntentPayerUnsupportedReason:(bool)arg1;
- (void)setHasRunWorkflowIntentWorkflowUnsupportedReason:(bool)arg1;
- (void)setHasSendMessageIntentRecipientUnsupportedReason:(bool)arg1;
- (void)setHasSendPaymentIntentCurrencyAmountUnsupportedReason:(bool)arg1;
- (void)setHasSendPaymentIntentPayeeUnsupportedReason:(bool)arg1;
- (void)setHasSetTimerAttributeIntentTargetTimerUnsupportedReason:(bool)arg1;
- (void)setReason:(int)arg1;
- (void)setRequestPaymentIntentCurrencyAmountUnsupportedReason:(int)arg1;
- (void)setRequestPaymentIntentPayerUnsupportedReason:(int)arg1;
- (void)setRunWorkflowIntentWorkflowUnsupportedReason:(int)arg1;
- (void)setSendMessageIntentRecipientUnsupportedReason:(int)arg1;
- (void)setSendPaymentIntentCurrencyAmountUnsupportedReason:(int)arg1;
- (void)setSendPaymentIntentPayeeUnsupportedReason:(int)arg1;
- (void)setSetTimerAttributeIntentTargetTimerUnsupportedReason:(int)arg1;
- (int)setTimerAttributeIntentTargetTimerUnsupportedReason;
- (id)setTimerAttributeIntentTargetTimerUnsupportedReasonAsString:(int)arg1;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

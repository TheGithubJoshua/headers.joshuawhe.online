<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSURLComponents.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSURLComponents.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSURLComponents : NSObject <NSCopying>

@property (readonly, copy) NSURL *URL;
@property (copy) NSString *fragment;
@property (copy) NSString *host;
@property (copy) NSString *password;
@property (copy) NSString *path;
@property (copy) NSString *percentEncodedFragment;
@property (copy) NSString *percentEncodedHost;
@property (copy) NSString *percentEncodedPassword;
@property (copy) NSString *percentEncodedPath;
@property (copy) NSString *percentEncodedQuery;
@property (copy) NSArray *percentEncodedQueryItems;
@property (copy) NSString *percentEncodedUser;
@property (copy) NSNumber *port;
@property (copy) NSString *query;
@property (copy) NSArray *queryItems;
@property (readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeOfFragment;
@property (readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeOfHost;
@property (readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeOfPassword;
@property (readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeOfPath;
@property (readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeOfPort;
@property (readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeOfQuery;
@property (readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeOfScheme;
@property (readonly) struct _NSRange { unsigned long long x1; unsigned long long x2; } rangeOfUser;
@property (copy) NSString *scheme;
@property (readonly, copy) NSString *string;
@property (copy) NSString *user;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)componentsWithString:(id)arg1;
+ (id)componentsWithURL:(id)arg1 resolvingAgainstBaseURL:(bool)arg2;

- (id)URL;
- (id)URLRelativeToURL:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)fragment;
- (id)host;
- (id)init;
- (id)initWithString:(id)arg1;
- (id)initWithURL:(id)arg1 resolvingAgainstBaseURL:(bool)arg2;
- (id)password;
- (id)path;
- (id)percentEncodedFragment;
- (id)percentEncodedHost;
- (id)percentEncodedPassword;
- (id)percentEncodedPath;
- (id)percentEncodedQuery;
- (id)percentEncodedQueryItems;
- (id)percentEncodedUser;
- (id)port;
- (id)query;
- (id)queryItems;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfFragment;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfHost;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfPassword;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfPath;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfPort;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfQuery;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfScheme;
- (struct _NSRange { unsigned long long x1; unsigned long long x2; })rangeOfUser;
- (id)scheme;
- (void)setFragment:(id)arg1;
- (void)setHost:(id)arg1;
- (void)setPassword:(id)arg1;
- (void)setPath:(id)arg1;
- (void)setPercentEncodedFragment:(id)arg1;
- (void)setPercentEncodedHost:(id)arg1;
- (void)setPercentEncodedPassword:(id)arg1;
- (void)setPercentEncodedPath:(id)arg1;
- (void)setPercentEncodedQuery:(id)arg1;
- (void)setPercentEncodedQueryItems:(id)arg1;
- (void)setPercentEncodedUser:(id)arg1;
- (void)setPort:(id)arg1;
- (void)setQuery:(id)arg1;
- (void)setQueryItems:(id)arg1;
- (void)setScheme:(id)arg1;
- (void)setUser:(id)arg1;
- (id)string;
- (id)user;

// Image: /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec

+ (id)parsec_componentsWithString:(id)arg1;
+ (id)parsec_componentsWithURL:(id)arg1 resolvingAgainstBaseURL:(bool)arg2;

- (id)parsec_componentsForEmbeddedAMPURL;
- (id)parsec_normalizedURLStringForDeepLinkIngest;
- (id)parsec_normalizedURLStringForDeepLinkWhitelist;
- (id)parsec_normalizedURLStringForLDAModel;
- (id)parsec_normalizedURLStringForTLDFeatures;
- (id)parsec_normalizedURLStringWithOptions:(unsigned long long)arg1;

// Image: /System/Library/PrivateFrameworks/FamilyCircleUI.framework/FamilyCircleUI

- (id)fa_queryItemsDictionary;
- (id)fa_valueForQueryItem:(id)arg1;

// Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices

- (void)geo_updateQueryItemsWithBlock:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/MetricsKit.framework/MetricsKit

+ (id)queryParameterStringForDictionary:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared

- (bool)ic_boolValueForQueryItemWithKey:(id)arg1;
- (id)ic_queryItemWithKey:(id)arg1;
- (id)ic_stringValueForQueryItemWithKey:(id)arg1;

// Image: /System/Library/PrivateFrameworks/RemoteMediaServices.framework/RemoteMediaServices

- (id)rms_componentsByAddingQueryParameters:(id)arg1;
- (id)rms_componentsByAddingQueryParameters:(id)arg1;

// Image: /System/Library/PrivateFrameworks/Silex.framework/Silex

- (id)queryValueForName:(id)arg1;

// Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities

- (bool)containsQueryItemWithName:(id)arg1;
- (id)firstQueryItemWithName:(id)arg1;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

- (void)tsp_setQueryDictionary:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSMutableIndexSet.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSMutableIndexSet.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSMutableIndexSet : NSIndexSet {
    void * _reserved;
}

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

- (void)_addRangeToArray:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_ensureRangeCapacity:(unsigned long long)arg1;
- (void)_incrementBy:(unsigned long long)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)_insertRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 inArrayAtIndex:(unsigned long long)arg2;
- (void)_mergeOverlappingRangesStartingAtIndex:(unsigned long long)arg1;
- (void)_removeAndDecrementBy:(unsigned long long)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)_removeRangeInArrayAtIndex:(unsigned long long)arg1;
- (void)_replaceRangeInArrayAtIndex:(unsigned long long)arg1 withRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (void)addIndex:(unsigned long long)arg1;
- (void)addIndexes:(id)arg1;
- (void)addIndexes:(const unsigned long long*)arg1 count:(unsigned long long)arg2;
- (void)addIndexesFromIndexSet:(id)arg1;
- (void)addIndexesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (Class)classForCoder;
- (void)removeAllIndexes;
- (void)removeIndex:(unsigned long long)arg1;
- (void)removeIndexes:(id)arg1;
- (void)removeIndexesFromIndexSet:(id)arg1;
- (void)removeIndexesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)removeIndexesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 options:(unsigned long long)arg2 passingTest:(id /* block */)arg3;
- (void)removeIndexesPassingTest:(id /* block */)arg1;
- (void)removeIndexesWithOptions:(unsigned long long)arg1 passingTest:(id /* block */)arg2;
- (void)shiftIndexesStartingAtIndex:(unsigned long long)arg1 by:(long long)arg2;

// Image: /System/Library/PrivateFrameworks/Catalyst.framework/Catalyst

- (void)cat_moveIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)cat_shiftAndAddIndex:(unsigned long long)arg1;
- (void)cat_shiftAndAddIndexesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)cat_shiftAndRemoveIndex:(unsigned long long)arg1;
- (void)cat_shiftAndRemoveIndexesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

- (void)__ck_intersectIndexes:(id)arg1;

// Image: /System/Library/PrivateFrameworks/Memories.framework/Memories

+ (id)indexSetWithIndexesInRCRange:(struct { long long x1; long long x2; })arg1;

- (void)addIndexesInRCRange:(struct { long long x1; long long x2; })arg1;
- (void)closeGapsSmallerThan:(long long)arg1;
- (void)removeBlocksSmallerThan:(long long)arg1;

// Image: /System/Library/PrivateFrameworks/Message.framework/Message

- (void)mf_intersectIndexes:(id)arg1;

// Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport

- (void)tsu_intersectionWithIndexSet:(id)arg1;
- (void)tsu_moveIndexesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toOffset:(unsigned long long)arg2;

// Image: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices

- (void)pl_adjustIndexesForDeletions:(id)arg1;
- (void)pl_adjustIndexesForInsertions:(id)arg1;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

- (void)px_adjustIndexesForDeletedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)px_adjustIndexesForDeletions:(id)arg1;
- (void)px_adjustIndexesForInsertedRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (void)px_adjustIndexesForInsertions:(id)arg1;
- (void)px_adjustIndexesForMoveFromRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;

// Image: /System/Library/PrivateFrameworks/TSUtility.framework/TSUtility

- (void)tsu_intersectionWithIndexSet:(id)arg1;
- (void)tsu_moveIndexesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toOffset:(unsigned long long)arg2;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

- (void)tsu_intersectionWithIndexSet:(id)arg1;
- (void)tsu_moveIndexesInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 toOffset:(unsigned long long)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

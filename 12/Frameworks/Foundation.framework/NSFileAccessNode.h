<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSFileAccessNode.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSFileAccessNode.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSFileAccessNode : NSObject {
    id  _accessClaimOrClaims;
    NSMutableDictionary * _childrenByNormalizedName;
    bool  _isArbitrationBoundary;
    bool  _isFilePackage;
    bool  _isFilePackageIsFigured;
    NSFileAccessNode * _lastRequestedChild;
    NSString * _lastRequestedChildName;
    NSString * _name;
    NSString * _normalizedName;
    NSFileAccessNode * _parent;
    id  _presenterOrPresenters;
    id  _progressPublisherOrPublishers;
    id  _progressSubscriberOrSubscribers;
    NSFileProviderProxy * _provider;
    NSFileAccessNode * _symbolicLinkDestination;
    unsigned long long  _symbolicLinkReferenceCount;
}

- (id)_childrenExcludingExcessNodes:(bool)arg1 excludingReactors:(bool)arg2;
- (void)_forEachRelevantAccessClaimExcludingClaimsFromSuperarbiter:(bool)arg1 performProcedure:(id /* block */)arg2;
- (bool)_mayContainCriticalDebuggingInformationExcludingReactors:(bool)arg1;
- (void)addAccessClaim:(id)arg1;
- (void)addPresenter:(id)arg1;
- (void)addProgressPublisher:(id)arg1;
- (void)addProgressSubscriber:(id)arg1;
- (void)assertDead;
- (void)assertDescendantsLive;
- (void)assertLive;
- (id)biggestFilePackageLocation;
- (id)childForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 ofPath:(id)arg2;
- (void)dealloc;
- (id)descendantAtPath:(id)arg1 componentRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 create:(bool)arg3;
- (id)descendantAtPath:(id)arg1 componentRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 forAddingLeafNode:(id)arg3 create:(bool)arg4;
- (id)descendantForFileURL:(id)arg1;
- (id)description;
- (id)descriptionWithIndenting:(id)arg1 excludingExcessNodes:(bool)arg2 excludingReactors:(bool)arg3;
- (void)forEachAccessClaimOnItemOrContainedItemPerformProcedure:(id /* block */)arg1;
- (void)forEachAccessClaimOnItemPerformProcedure:(id /* block */)arg1;
- (void)forEachDescendantPerformProcedure:(id /* block */)arg1;
- (void)forEachPresenterOfContainedItemPerformProcedure:(id /* block */)arg1;
- (void)forEachPresenterOfContainingFilePackagePerformProcedure:(id /* block */)arg1;
- (void)forEachPresenterOfContainingItemPerformProcedure:(id /* block */)arg1;
- (void)forEachPresenterOfItemOrContainedItemPerformProcedure:(id /* block */)arg1;
- (void)forEachPresenterOfItemOrContainingItemPerformProcedure:(id /* block */)arg1;
- (void)forEachPresenterOfItemPerformProcedure:(id /* block */)arg1;
- (void)forEachProgressPublisherOfItemOrContainedItemPerformProcedure:(id /* block */)arg1;
- (void)forEachProgressPublisherOfItemPerformProcedure:(id /* block */)arg1;
- (void)forEachProgressSubscriberOfItemOrContainingItemPerformProcedure:(id /* block */)arg1;
- (void)forEachProgressSubscriberOfItemPerformProcedure:(id /* block */)arg1;
- (void)forEachProgressThingOfItemOrContainedItemPerformProcedure:(id /* block */)arg1;
- (void)forEachReactorToItemOrContainedItemPerformProcedure:(id /* block */)arg1;
- (void)forEachRelevantAccessClaimForEvaluatingAgainstClaim:(id)arg1 performProcedure:(id /* block */)arg2;
- (void)forEachRelevantAccessClaimPerformProcedure:(id /* block */)arg1;
- (id)initWithParent:(id)arg1 name:(id)arg2 normalizedName:(id)arg3;
- (bool)itemIsFilePackage;
- (bool)itemIsInItemAtLocation:(id)arg1;
- (bool)itemIsItemAtLocation:(id)arg1;
- (bool)itemIsSubarbitrable;
- (id)itemProvider;
- (id)normalizationOfChildName:(id)arg1;
- (id)parent;
- (id)pathExceptPrivate;
- (id)pathFromAncestor:(id)arg1;
- (id)pathToDescendantForFileURL:(id)arg1 componentRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; }*)arg2;
- (void)removeAccessClaim:(id)arg1;
- (void)removeChildForNormalizedName:(id)arg1;
- (void)removePresenter:(id)arg1;
- (void)removeProgressPublisher:(id)arg1;
- (void)removeProgressSubscriber:(id)arg1;
- (void)removeProvider:(id)arg1;
- (void)removeSelfIfUseless;
- (id)sensitiveDescription;
- (id)sensitiveSubarbiterDescription;
- (void)setArbitrationBoundary;
- (void)setChild:(id)arg1 forName:(id)arg2 normalizedName:(id)arg3;
- (void)setParent:(id)arg1 name:(id)arg2;
- (bool)setProvider:(id)arg1;
- (void)setSymbolicLinkDestination:(id)arg1;
- (id)standardizedURL;
- (id)subarbiterDescription;
- (id)url;
- (id)urlOfSubitemAtPath:(id)arg1 plusPath:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSLayoutRect.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSLayoutRect.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSLayoutRect : NSObject <NSCoding, NSCopying> {
    NSLayoutDimension * _heightAnchor;
    NSLayoutXAxisAnchor * _leadingAnchor;
    NSString * _name;
    id  _reserved1;
    NSLayoutYAxisAnchor * _topAnchor;
    NSLayoutDimension * _widthAnchor;
}

@property (readonly, copy) NSLayoutYAxisAnchor *bottomAnchor;
@property (readonly, copy) NSLayoutPoint *centerLayoutPoint;
@property (readonly, copy) NSLayoutXAxisAnchor *centerXAnchor;
@property (readonly, copy) NSLayoutYAxisAnchor *centerYAnchor;
@property (readonly, copy) NSLayoutDimension *heightAnchor;
@property (readonly, copy) NSLayoutXAxisAnchor *leadingAnchor;
@property (readonly, copy) NSLayoutYAxisAnchor *topAnchor;
@property (readonly, copy) NSLayoutXAxisAnchor *trailingAnchor;
@property (readonly, copy) NSLayoutDimension *widthAnchor;

+ (id)layoutRectWithCenterLayoutPoint:(id)arg1 widthAnchor:(id)arg2 heightAnchor:(id)arg3;
+ (id)layoutRectWithCenterXAnchor:(id)arg1 centerYAnchor:(id)arg2 widthAnchor:(id)arg3 heightAnchor:(id)arg4;
+ (id)layoutRectWithLeadingAnchor:(id)arg1 topAnchor:(id)arg2 trailingAnchor:(id)arg3 bottomAnchor:(id)arg4;
+ (id)layoutRectWithLeadingAnchor:(id)arg1 topAnchor:(id)arg2 widthAnchor:(id)arg3 heightAnchor:(id)arg4;

- (id)_equationDescriptionInParent;
- (id)_rectangleBySlicingWithDimension:(id)arg1 plusConstant:(double)arg2 fromEdge:(long long)arg3;
- (id)bottomAnchor;
- (id)centerLayoutPoint;
- (id)centerXAnchor;
- (id)centerYAnchor;
- (id)constraintsContainingWithinLayoutRect:(id)arg1;
- (id)constraintsEqualToLayoutRect:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)debugDescription;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)heightAnchor;
- (id)initWithCoder:(id)arg1;
- (id)initWithLeadingAnchor:(id)arg1 topAnchor:(id)arg2 widthAnchor:(id)arg3 heightAnchor:(id)arg4;
- (id)initWithLeadingAnchor:(id)arg1 topAnchor:(id)arg2 widthAnchor:(id)arg3 heightAnchor:(id)arg4 name:(id)arg5;
- (bool)isEqual:(id)arg1;
- (bool)isEqualToRectangle:(id)arg1;
- (id)layoutRectByInsettingTop:(double)arg1 leading:(double)arg2 bottom:(double)arg3 trailing:(double)arg4;
- (id)layoutRectByInsettingTopWithDimension:(id)arg1 leadingWithDimension:(id)arg2 bottomWithDimension:(id)arg3 trailingWithDimension:(id)arg4;
- (id)layoutRectBySlicingWithDimension:(id)arg1 fromEdge:(long long)arg2;
- (id)layoutRectBySlicingWithDistance:(double)arg1 fromEdge:(long long)arg2;
- (id)layoutRectBySlicingWithProportion:(double)arg1 fromEdge:(long long)arg2;
- (id)layoutRectWithName:(id)arg1;
- (id)leadingAnchor;
- (bool)nsli_isLegalConstraintItem;
- (id)nsli_superitem;
- (id)observableValueInItem:(id)arg1;
- (id)ruleContainingLayoutRect:(id)arg1;
- (id)ruleEqualToLayoutRect:(id)arg1;
- (id)topAnchor;
- (id)trailingAnchor;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })valueInItem:(id)arg1;
- (id)widthAnchor;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

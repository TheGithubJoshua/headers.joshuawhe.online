<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSFileAccessArbiter.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSFileAccessArbiter.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSFileAccessArbiter : NSObject <NSFileAccessArbiterXPCInterface, NSXPCListenerDelegate> {
    NSMutableDictionary * _accessClaimTransactionsByID;
    NSMutableDictionary * _accessClaimsByID;
    NSObject<OS_dispatch_source> * _debugSignalSource;
    bool  _isStopped;
    bool  _isSubarbiter;
    NSXPCListener * _listenerConnection;
    NSObject<OS_dispatch_queue> * _queue;
    NSMutableDictionary * _reactorTransactionsByID;
    NSMutableDictionary * _reactorsByID;
    NSFileAccessNode * _rootNode;
    NSMutableDictionary * _subarbitrationClaimsByID;
    NSXPCConnection * _superarbitrationServer;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) NSXPCConnection *superarbitrationConnection;
@property (readonly) Class superclass;

+ (void)_gainedBirdProvider:(id)arg1;
+ (void)_lostBirdProvider:(id)arg1;
+ (void)_wakeUpBirdWithUID:(unsigned int)arg1 urls:(id)arg2 queue:(id)arg3 thenContinue:(id /* block */)arg4;
+ (void)ensureProvidersIfNecessaryForClaim:(id)arg1 atLocation:(id)arg2 queue:(id)arg3 thenContinue:(id /* block */)arg4;

- (bool)_addPresenter:(id)arg1 ofItemAtURL:(id)arg2 watchingFile:(bool)arg3 withLastEventID:(id)arg4;
- (bool)_addProvider:(id)arg1 ofItemsAtURL:(id)arg2;
- (void)_enumerateSubarbitersUsingBlock:(id /* block */)arg1;
- (void)_grantAccessClaim:(id)arg1;
- (void)_grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2;
- (void)_handleCanceledClient:(id)arg1;
- (void)_registerForDebugInfoRequests;
- (void)_removeReactorForID:(id)arg1;
- (void)_revokeAccessClaimForID:(id)arg1 fromLocal:(bool)arg2;
- (void)_startArbitratingItemsAtURLs:(id)arg1 withSuperarbitrationServer:(id)arg2;
- (void)_willRemoveReactor:(id)arg1;
- (void)_writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (void)addPresenter:(id)arg1 withID:(id)arg2 fileURL:(id)arg3 lastPresentedItemEventIdentifier:(id)arg4 ubiquityAttributes:(id)arg5 options:(unsigned long long)arg6 responses:(unsigned long long)arg7;
- (void)addProvider:(id)arg1 withID:(id)arg2 uniqueID:(id)arg3 forProvidedItemsURL:(id)arg4 options:(unsigned long long)arg5 withServer:(id)arg6 reply:(id /* block */)arg7;
- (oneway void)cancelAccessClaimForID:(id)arg1;
- (void)dealloc;
- (void)getDebugInformationIncludingEverything:(bool)arg1 withString:(id)arg2 fromPid:(int)arg3 thenContinue:(id /* block */)arg4;
- (void)getItemHasPresentersAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)grantAccessClaim:(id)arg1 withReply:(id /* block */)arg2;
- (void)grantSubarbitrationClaim:(id)arg1 withServer:(id)arg2 reply:(id /* block */)arg3;
- (id)initWithQueue:(id)arg1 isSubarbiter:(bool)arg2 listener:(id)arg3;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)performBarrierWithCompletionHandler:(id /* block */)arg1;
- (oneway void)prepareToArbitrateForURLs:(id)arg1;
- (void)provideDebugInfoWithLocalInfo:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)provideSubarbiterDebugInfoIncludingEverything:(bool)arg1 completionHandler:(id /* block */)arg2;
- (oneway void)removePresenterWithID:(id)arg1;
- (oneway void)removeProviderWithID:(id)arg1 uniqueID:(id)arg2;
- (oneway void)revokeAccessClaimForID:(id)arg1;
- (oneway void)revokeSubarbitrationClaimForID:(id)arg1;
- (id)rootNode;
- (void)startArbitratingWithReply:(id /* block */)arg1;
- (void)stopArbitrating;
- (id)superarbitrationConnection;
- (oneway void)tiePresenterForID:(id)arg1 toItemAtURL:(id)arg2;
- (oneway void)writerWithPurposeID:(id)arg1 didChangeItemAtURL:(id)arg2;
- (oneway void)writerWithPurposeID:(id)arg1 didChangeSharingOfItemAtURL:(id)arg2;
- (oneway void)writerWithPurposeID:(id)arg1 didChangeUbiquityAttributes:(id)arg2 ofItemAtURL:(id)arg3;
- (oneway void)writerWithPurposeID:(id)arg1 didChangeUbiquityOfItemAtURL:(id)arg2;
- (oneway void)writerWithPurposeID:(id)arg1 didDisconnectItemAtURL:(id)arg2;
- (oneway void)writerWithPurposeID:(id)arg1 didMakeItemDisappearAtURL:(id)arg2;
- (oneway void)writerWithPurposeID:(id)arg1 didMoveItemAtURL:(id)arg2 toURL:(id)arg3;
- (oneway void)writerWithPurposeID:(id)arg1 didReconnectItemAtURL:(id)arg2;
- (oneway void)writerWithPurposeID:(id)arg1 didVersionChangeOfKind:(id)arg2 toItemAtURL:(id)arg3 withClientID:(id)arg4 name:(id)arg5;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

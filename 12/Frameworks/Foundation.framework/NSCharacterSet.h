<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSCharacterSet.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSCharacterSet.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSCharacterSet : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>

@property (readonly, copy) NSData *bitmapRepresentation;
@property (readonly, copy) NSCharacterSet *invertedSet;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)URLFragmentAllowedCharacterSet;
+ (id)URLHostAllowedCharacterSet;
+ (id)URLPasswordAllowedCharacterSet;
+ (id)URLPathAllowedCharacterSet;
+ (id)URLQueryAllowedCharacterSet;
+ (id)URLUserAllowedCharacterSet;
+ (id)alphanumericCharacterSet;
+ (id)capitalizedLetterCharacterSet;
+ (id)characterSetWithBitmapRepresentation:(id)arg1;
+ (id)characterSetWithCharactersInString:(id)arg1;
+ (id)characterSetWithContentsOfFile:(id)arg1;
+ (id)characterSetWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
+ (id)controlCharacterSet;
+ (id)decimalDigitCharacterSet;
+ (id)decomposableCharacterSet;
+ (id)illegalCharacterSet;
+ (void)initialize;
+ (id)letterCharacterSet;
+ (id)lowercaseLetterCharacterSet;
+ (id)newlineCharacterSet;
+ (id)nonBaseCharacterSet;
+ (id)punctuationCharacterSet;
+ (bool)supportsSecureCoding;
+ (id)symbolCharacterSet;
+ (id)uppercaseLetterCharacterSet;
+ (id)whitespaceAndNewlineCharacterSet;
+ (id)whitespaceCharacterSet;

- (unsigned long long)_cfTypeID;
- (struct __CFCharacterSet { }*)_expandedCFCharacterSet;
- (id)_retainedBitmapRepresentation;
- (id)bitmapRepresentation;
- (bool)characterIsMember:(unsigned short)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)count;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasMemberInPlane:(unsigned char)arg1;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)invertedSet;
- (bool)isEmpty;
- (bool)isEqual:(id)arg1;
- (bool)isMutable;
- (bool)isSupersetOfSet:(id)arg1;
- (bool)longCharacterIsMember:(unsigned int)arg1;
- (void)makeImmutable;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (id)replacementObjectForPortCoder:(id)arg1;

// Image: /System/Library/Frameworks/HealthKit.framework/HealthKit

+ (id)equalCharacterSet;
+ (id)forwardSlashCharacterSet;
+ (id)percentCharacterSet;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

+ (id)textAttachmentCharacterSet;

// Image: /System/Library/PrivateFrameworks/EmojiFoundation.framework/EmojiFoundation

+ (id)_emojiCharacterSet;

// Image: /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation

+ (id)invalidCharactersForFileTransferName;

// Image: /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared

+ (id)safari_lockRelatedEmojiCharacterSet;
+ (id)safari_obscuredPasswordCharacterSets;

// Image: /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore

+ (id)emojiCharacterSet;
+ (id)passwordBulletCharacterSet;
+ (id)whitespaceNewlineAndSpecialCharacterSet;
+ (id)wordBreakCharacterSet;

// Image: /System/Library/PrivateFrameworks/TSReading.framework/TSReading

+ (id)allQuotesCharacterSetExcludingLeft;
+ (id)allQuotesCharacterSetExcludingRight;
+ (id)breakingSpaceCharacterSet;
+ (id)invisibleCharacterSet;
+ (id)lineBreakingCharacterSet;
+ (id)normalQuotesCharacterSet;
+ (id)postSmartSet;
+ (id)preSmartSet;
+ (id)smartDoubleQuotesCharacterSet;
+ (id)smartQuotesCharacterSet;
+ (id)smartSingleQuotesCharacterSet;
+ (id)spaceCharacterSet;

// Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities

+ (id)phoneNumberSeparatorCharacterSet;
+ (id)phoneNumberSeparatorCharacterSet;

// Image: /System/Library/PrivateFrameworks/TextInputCore.framework/TextInputCore

+ (id)pinyinInputCharacterSet;
+ (id)punctuationAndWhitespaceCharacterSet;
+ (id)sentenceDelimiterCharacterSet;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

+ (id)tsce_characterSetRequiringSingleQuotes;
+ (id)tsce_dollarSignCharacterSet;
+ (id)tsce_internationalColonCharacterSet;
+ (id)tsce_internationalWhitespaceAndNewlineCharacterSet;
+ (id)tsce_internationalWhitespaceCharacterSet;
+ (id)tsce_listDelimiterCharacterSet;
+ (id)tsce_periodCharacterSet;
+ (id)tsce_singleQuoteCharacterSet;
+ (id)tswp_allQuotesCharacterSetExcludingLeft;
+ (id)tswp_allQuotesCharacterSetExcludingRight;
+ (id)tswp_breakingSpaceCharacterSet;
+ (id)tswp_characterSetWithCharactersInArray:(const unsigned short*)arg1 length:(unsigned long long)arg2;
+ (id)tswp_curlyQuotesCharacterSet;
+ (id)tswp_invisibleCharacterSet;
+ (id)tswp_lineBreakingCharacterSet;
+ (id)tswp_postSmartSet;
+ (id)tswp_preSmartSet;
+ (id)tswp_sentenceDelimiterCharacterSet;
+ (id)tswp_singleLeftQuoteCharacterSet;
+ (id)tswp_singleRightQuoteCharacterSet;
+ (id)tswp_smartSingleQuotesCharacterSet;
+ (id)tswp_spaceCharacterSet;
+ (id)tswp_variationSelectorCharacterSet;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

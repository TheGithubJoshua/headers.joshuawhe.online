<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSIndexPath.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSIndexPath.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSIndexPath : NSObject <NSCopying, NSSecureCoding> {
    unsigned long long * _indexes;
    unsigned long long  _length;
    void * _reserved;
}

@property (nonatomic, readonly) unsigned long long element;
@property (nonatomic, readonly) long long item;
@property (readonly) unsigned long long length;
@property (getter=pu_isValid, nonatomic, readonly) bool pu_valid;
@property (nonatomic, readonly) long long px_item;
@property (nonatomic, readonly) long long px_kind;
@property (nonatomic, readonly) long long px_section;
@property (nonatomic, readonly) long long row;
@property (nonatomic, readonly) long long section;
@property (nonatomic, readonly) long long tk_row;
@property (nonatomic, readonly) long long tk_section;
@property (nonatomic, readonly) unsigned long long upNextSection;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)indexPath;
+ (id)indexPathWithIndex:(unsigned long long)arg1;
+ (id)indexPathWithIndexes:(const unsigned long long*)arg1 length:(unsigned long long)arg2;
+ (void)initialize;
+ (bool)supportsSecureCoding;

- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)getIndexes:(unsigned long long*)arg1;
- (void)getIndexes:(unsigned long long*)arg1 range:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2;
- (unsigned long long)hash;
- (unsigned long long)indexAtPosition:(unsigned long long)arg1;
- (id)indexPathByAddingIndex:(unsigned long long)arg1;
- (id)indexPathByRemovingLastIndex;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithIndex:(unsigned long long)arg1;
- (id)initWithIndexes:(const unsigned long long*)arg1 length:(unsigned long long)arg2;
- (bool)isEqual:(id)arg1;
- (unsigned long long)length;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

+ (id)indexPathForNavigationListItemIndex:(long long)arg1;

// Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI

+ (id)pu_indexPathForItem:(long long)arg1 inSubSection:(long long)arg2 section:(long long)arg3;
+ (id)pu_indexPathsForItems:(id)arg1 inSection:(long long)arg2;
+ (id)pu_rootIndexPath;

- (id)pu_alteredIndexPathAfterDeletingItemAtIndexPath:(id)arg1;
- (id)pu_alteredIndexPathAfterDeletingItemsAtIndexPaths:(id)arg1;
- (id)pu_alteredIndexPathAfterInsertingItemAtIndexPath:(id)arg1;
- (id)pu_alteredIndexPathAfterInsertingItemsAtIndexPaths:(id)arg1;
- (id)pu_alteredIndexPathAfterMovingItemAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (id)pu_indexPathAfterDeletingItemAtIndexPath:(id)arg1;
- (id)pu_indexPathAfterInsertingItemAtIndexPath:(id)arg1;
- (id)pu_indexPathAfterMovingItemFromIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (id)pu_indexPathAfterReloadingItemAtIndexPath:(id)arg1;
- (id)pu_indexPathByAppendingIndexPath:(id)arg1;
- (id)pu_indexPathByChangingIndexAtPosition:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (bool)pu_isParentOfIndexPath:(id)arg1;
- (bool)pu_isValid;
- (id)pu_shortDescription;

// Image: /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard

+ (id)bs_emptyPath;

- (bool)bs_hasPrefix:(id)arg1;
- (id)bs_indexPathByAddingPrefix:(id)arg1;
- (id)bs_indexPathByRemovingFirstIndex;
- (id)bs_nearestCommonAncestorWithIndexPath:(id)arg1;
- (id)bs_subpathFromPosition:(unsigned long long)arg1;
- (id)bs_subpathWithRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

- (id)__ck_indexPathShiftedForInsertedIndexes:(id)arg1 deletedIndexes:(id)arg2;

// Image: /System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI

- (id)dd_stringValue;

// Image: /System/Library/PrivateFrameworks/GameCenterPrivateUI.framework/GameCenterPrivateUI

- (bool)_gkIsGlobal;

// Image: /System/Library/PrivateFrameworks/NanoTimeKitCompanion.framework/NanoTimeKitCompanion

+ (id)indexPathWithElement:(unsigned long long)arg1 inUpNextSection:(unsigned long long)arg2;

- (unsigned long long)element;
- (unsigned long long)upNextSection;

// Image: /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities

- (void)na_each:(id /* block */)arg1;
- (id)na_indexPathStartingAtPosition:(unsigned long long)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

+ (id)indexPathForItem:(long long)arg1 inSection:(long long)arg2;
+ (id)indexPathForRow:(long long)arg1 inSection:(long long)arg2;

- (long long)item;
- (long long)row;
- (long long)section;

// Image: /System/Library/PrivateFrameworks/PhotosUICore.framework/PhotosUICore

+ (id)px_indexPathForItem:(long long)arg1 inSection:(long long)arg2;
+ (id)px_indexPathForItem:(long long)arg1 inSection:(long long)arg2 withKind:(long long)arg3;
+ (id)px_indexPathsForItems:(id)arg1 inSection:(long long)arg2;

- (id)px_alteredIndexPathAfterDeletingItemAtIndexPath:(id)arg1;
- (id)px_alteredIndexPathAfterDeletingItemsAtIndexPaths:(id)arg1;
- (id)px_alteredIndexPathAfterInsertingItemAtIndexPath:(id)arg1;
- (id)px_alteredIndexPathAfterInsertingItemsAtIndexPaths:(id)arg1;
- (id)px_alteredIndexPathAfterMovingItemAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (id)px_indexPathAfterDeletingItemAtIndexPath:(id)arg1;
- (id)px_indexPathAfterInsertingItemAtIndexPath:(id)arg1;
- (id)px_indexPathByChangingIndexAtPosition:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (long long)px_item;
- (long long)px_kind;
- (long long)px_section;

// Image: /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools

+ (id)pt_indexPathForRow:(long long)arg1 inSection:(long long)arg2;

- (long long)pt_row;
- (long long)pt_section;

// Image: /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore

- (id)indexPathByConcatenatingIndexPath:(id)arg1;
- (id)indexPathByInsertingFirstIndex:(unsigned long long)arg1;
- (id)initWithString:(id)arg1;
- (id)stringValue;

// Image: /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit

- (long long)flattenedIndexForItemInSections:(id)arg1;

// Image: /System/Library/PrivateFrameworks/ToneKit.framework/ToneKit

+ (id)tk_indexPathForRow:(long long)arg1 inSection:(long long)arg2;

- (long long)tk_row;
- (long long)tk_section;

// Image: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore

+ (id)indexPathForItem:(long long)arg1 inSection:(long long)arg2;
+ (id)indexPathForRow:(long long)arg1 inSection:(long long)arg2;

- (long long)item;
- (long long)row;
- (long long)section;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

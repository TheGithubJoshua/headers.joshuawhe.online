<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSFilePresenterProxy.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSFilePresenterProxy.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSFilePresenterProxy : NSFileReactorProxy {
    id  _currentWriterPurposeID;
    bool  _didObserveMovingByWriter;
    bool  _didObserveNonCoordinatedChanges;
    bool  _didObserveVersionChangingByWriter;
    bool  _disconnected;
    unsigned long long  _filePresenterResponses;
    NSFilePresenterXPCMessenger * _forwardedMessenger;
    bool  _inSubarbiter;
    NSSet * _observedUbiquityAttributes;
    NSMutableArray * _previousWriterPurposeIDs;
    NSFileAccessProcessManager * _processManager;
    NSObject<OS_dispatch_queue> * _queue;
    id  _remotePresenter;
    bool  _usesMainThreadDuringRelinquishing;
    NSFileWatcher * _watcher;
    unsigned long long  _writingRelinquishmentCount;
}

@property (readonly) bool disconnected;
@property (nonatomic) unsigned long long filePresenterResponses;
@property bool inSubarbiter;
@property (copy) NSSet *observedUbiquityAttributes;
@property bool usesMainThreadDuringReliquishing;

+ (id)urlWithItemURL:(id)arg1 subitemPath:(id)arg2;

- (id)_clientProxy;
- (void)_settleNonCoordinatedChanges;
- (void)accommodateDeletionWithSubitemPath:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)allowedForURL:(id)arg1;
- (void)dealloc;
- (void)disconnect;
- (bool)disconnected;
- (unsigned long long)filePresenterResponses;
- (void)forwardRelinquishmentForWritingClaim:(bool)arg1 withID:(id)arg2 purposeID:(id)arg3 subitemURL:(id)arg4 options:(unsigned long long)arg5 completionHandler:(id /* block */)arg6;
- (void)forwardUsingProxy:(id)arg1;
- (bool)inSubarbiter;
- (id)initWithClient:(id)arg1 remotePresenter:(id)arg2 reactorID:(id)arg3;
- (void)invalidate;
- (void)localFileWasEvicted;
- (void)observeChangeAtSubitemPath:(id)arg1;
- (void)observeChangeOfUbiquityAttributes:(id)arg1;
- (void)observeDisappearanceAtSubitemPath:(id)arg1;
- (void)observeDisconnectionByWriterWithPurposeID:(id)arg1;
- (void)observeMoveByWriterWithPurposeID:(id)arg1 withPhysicalDestinationURL:(id)arg2;
- (void)observeMoveOfSubitemAtURL:(id)arg1 toURL:(id)arg2 byWriterWithPurposeID:(id)arg3;
- (void)observeNewProvider:(id)arg1;
- (void)observePresenterChange:(bool)arg1 atSubitemURL:(id)arg2;
- (void)observeReconnectionByWriterWithPurposeID:(id)arg1;
- (void)observeSharingChangeAtSubitemPath:(id)arg1 withPhysicalURL:(id)arg2;
- (void)observeUbiquityChangeAtSubitemPath:(id)arg1 withPhysicalURL:(id)arg2;
- (void)observeVersionChangeOfKind:(id)arg1 withClientID:(id)arg2 name:(id)arg3 subitemPath:(id)arg4;
- (id)observedUbiquityAttributes;
- (void)promisedFileWasFulfilled;
- (void)relinquishToReadingClaimWithID:(id)arg1 options:(unsigned long long)arg2 purposeID:(id)arg3 resultHandler:(id /* block */)arg4;
- (void)relinquishToWritingClaimWithID:(id)arg1 options:(unsigned long long)arg2 purposeID:(id)arg3 subitemPath:(id)arg4 resultHandler:(id /* block */)arg5;
- (void)saveChangesWithCompletionHandler:(id /* block */)arg1;
- (void)setFilePresenterResponses:(unsigned long long)arg1;
- (void)setInSubarbiter:(bool)arg1;
- (void)setItemLocation:(id)arg1;
- (void)setObservedUbiquityAttributes:(id)arg1;
- (void)setUsesMainThreadDuringReliquishing:(bool)arg1;
- (bool)shouldSendObservationMessageWithPurposeID:(id)arg1;
- (void)startObservingApplicationStateWithQueue:(id)arg1;
- (void)startWatchingWithQueue:(id)arg1 lastEventID:(id)arg2 unannouncedMoveHandler:(id /* block */)arg3;
- (void)stopObservingApplicationState;
- (bool)usesMainThreadDuringReliquishing;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

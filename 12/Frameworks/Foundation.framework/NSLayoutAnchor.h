<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSLayoutAnchor.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSLayoutAnchor.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSLayoutAnchor : NSObject <NSCoding, NSCopying> {
    long long  _attr;
    id  _cachedReferenceItems;
    NSString * _name;
    id  _referenceItem;
    id  _reserved;
    unsigned int  _reserved3;
    unsigned int  _type;
    NSISVariable * _variable;
}

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (id)_anchorForItem:(id)arg1 attribute:(long long)arg2;
+ (id)anchorNamed:(id)arg1 inItem:(id)arg2;
+ (id)anchorNamed:(id)arg1 inItem:(id)arg2 symbolicAttribute:(long long)arg3;
+ (id)anchorWithItem:(id)arg1 attribute:(long long)arg2;
+ (id)anchorWithName:(id)arg1 forReferenceView:(id)arg2;
+ (id)anchorWithName:(id)arg1 forReferenceView:(id)arg2 symbolicAttribute:(long long)arg3;
+ (id)layoutAnchorWithItem:(id)arg1 attribute:(long long)arg2;
+ (id)layoutAnchorWithName:(id)arg1 forReferenceView:(id)arg2;

- (void)_accumulateReferenceLayoutItemsIntoTable:(id)arg1;
- (long long)_anchorType;
- (id)_anchorVariable;
- (int)_anchorVariableRestriction;
- (id)_constituentAnchors;
- (long long)_constraintAttribute;
- (id)_constraintItem;
- (id)_dependentVariables;
- (id)_equationDescriptionInParent;
- (id)_equationDescriptionLegendEntries;
- (id)_expressionForValueInItem:(id)arg1;
- (id)_expressionInContext:(struct { long long x1; id x2; id x3; })arg1;
- (id)_expressionInDefaultContextWithEngine:(id)arg1;
- (bool)_isReferencedByConstraint:(id)arg1;
- (id)_nearestAncestorLayoutItem;
- (long long)_proxiedAttribute;
- (id)_proxiedItem;
- (id)_referenceItem;
- (id)_referenceView;
- (id)_referencedLayoutItems;
- (id)_referencingConstraints;
- (double)_valueInEngine:(id)arg1;
- (id)_variableName;
- (id)anchorWithName:(id)arg1;
- (id)anchorWithName:(id)arg1 referenceItem:(id)arg2 symbolicAttribute:(long long)arg3;
- (id)constraintEqualToAnchor:(id)arg1;
- (id)constraintEqualToAnchor:(id)arg1 constant:(double)arg2;
- (id)constraintGreaterThanOrEqualToAnchor:(id)arg1;
- (id)constraintGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;
- (id)constraintLessThanOrEqualToAnchor:(id)arg1;
- (id)constraintLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;
- (id)constraintsAffectingLayout;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)equationDescription;
- (bool)hasAmbiguousLayout;
- (unsigned long long)hash;
- (id)init;
- (id)initWithAnchor:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIndependentVariableName:(id)arg1 item:(id)arg2 symbolicAttribute:(long long)arg3;
- (id)initWithItem:(id)arg1 attribute:(long long)arg2;
- (id)initWithName:(id)arg1 referenceItem:(id)arg2 symbolicAttribute:(long long)arg3;
- (bool)isCompatibleWithAnchor:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)item;
- (id)name;
- (bool)nsli_lowerIntoExpression:(id)arg1 withCoefficient:(double)arg2 forConstraint:(id)arg3;
- (id)observableValueInItem:(id)arg1;
- (id)ruleEqualToAnchor:(id)arg1;
- (id)ruleEqualToAnchor:(id)arg1 constant:(double)arg2;
- (id)ruleEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;
- (id)ruleEqualToAnchor:(id)arg1 multiplier:(double)arg2 constant:(double)arg3 priority:(float)arg4 identifier:(id)arg5;
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1;
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1 multiplier:(double)arg2 constant:(double)arg3 priority:(float)arg4 identifier:(id)arg5;
- (id)ruleLessThanOrEqualToAnchor:(id)arg1;
- (id)ruleLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;
- (id)ruleLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;
- (id)ruleLessThanOrEqualToAnchor:(id)arg1 multiplier:(double)arg2 constant:(double)arg3 priority:(float)arg4 identifier:(id)arg5;
- (id)rulesAffectingLayout;
- (bool)validateOtherAttribute:(long long)arg1;
- (double)valueInItem:(id)arg1;

// Image: /System/Library/Frameworks/AVKit.framework/AVKit

- (id)avkit_constraintEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3;
- (id)avkit_constraintEqualToAnchor:(id)arg1 priority:(float)arg2;
- (id)avkit_constraintGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3;
- (id)avkit_constraintGreaterThanOrEqualToAnchor:(id)arg1 priority:(float)arg2;
- (id)avkit_constraintLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3;
- (id)avkit_constraintLessThanOrEqualToAnchor:(id)arg1 priority:(float)arg2;

// Image: /System/Library/PrivateFrameworks/HomeUI.framework/HomeUI

- (id)hu_constraintsLessThanOrEqualToAnchor:(id)arg1 equalityPriority:(float)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSOperationQueue.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Foundation.framework/NSOperationQueue.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Foundation.framework/Foundation (1575.23)
 */

@interface NSOperationQueue : NSObject {
    id  _private;
    void * _reserved;
}

@property long long maxConcurrentOperationCount;
@property (copy) NSString *name;
@property (readonly) unsigned long long operationCount;
@property (readonly, copy) NSArray *operations;
@property long long qualityOfService;
@property (getter=isSuspended) bool suspended;
@property (nonatomic, readonly) bool tsu_isCurrentQueue;
@property NSObject<OS_dispatch_queue> *underlyingQueue;

// Image: /System/Library/Frameworks/Foundation.framework/Foundation

+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)currentQueue;
+ (id)mainQueue;

- (id)__graphDescription;
- (void)_fc_addUncancellableOperationForReactorID:(id)arg1 block:(id /* block */)arg2;
- (void)_fc_addUncancellableOperationWithBlock:(id /* block */)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4;
- (void)addOperation:(id)arg1;
- (void)addOperationWithBlock:(id /* block */)arg1;
- (void)addOperations:(id)arg1 waitUntilFinished:(bool)arg2;
- (void)cancelAllOperations;
- (void)dealloc;
- (id)description;
- (id)init;
- (bool)isSuspended;
- (long long)maxConcurrentOperationCount;
- (id)name;
- (unsigned long long)operationCount;
- (id)operations;
- (bool)overcommitsOperations;
- (long long)qualityOfService;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)setMaxConcurrentOperationCount:(long long)arg1;
- (void)setName:(id)arg1;
- (void)setOvercommitsOperations:(bool)arg1;
- (void)setQualityOfService:(long long)arg1;
- (void)setSuspended:(bool)arg1;
- (void)setUnderlyingQueue:(id)arg1;
- (id)underlyingQueue;
- (void)waitUntilAllOperationsAreFinished;

// Image: /System/Library/Frameworks/iAd.framework/iAd

+ (id)adSessionSharedDelegateQueue;

// Image: /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount

+ (id)aa_operationQueueWithUnderlyingQueue:(id)arg1;

// Image: /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation

- (void)cancelAllOperationsWithError:(id)arg1;

// Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore

+ (id)fc_ckRequestOperationQueue;
+ (id)fc_sharedConcurrentQueue;
+ (id)fc_sharedSerialQueue;

- (void)fc_addAsyncOperationWithBlock:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared

- (bool)containsOperationToDeleteRecordID:(id)arg1;
- (bool)containsOperationToFetchRecordID:(id)arg1;
- (bool)containsOperationToSaveRecordID:(id)arg1;
- (id)existingOperationToDeleteRecordID:(id)arg1;
- (id)existingOperationToFetchRecordID:(id)arg1;
- (id)existingOperationToSaveRecordID:(id)arg1;

// Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport

+ (id)tsu_newSerialOperationQueueWithName:(id)arg1;

- (bool)tsu_isCurrentQueue;
- (void)tsu_performBlock:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/RelevanceEngine.framework/RelevanceEngine

+ (id)re_sharedSerialOperationQueue;

// Image: /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration

- (void)rc_addAsyncOperationWithBlock:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/SpotlightUI.framework/SpotlightUI

- (void)logStateOperationCountGreaterThan:(long long)arg1;

// Image: /System/Library/PrivateFrameworks/WatchListKit.framework/WatchListKit

+ (id)wlkDefaultConcurrentQueue;
+ (id)wlkDefaultQueue;

// Image: /System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud

+ (id)ic_sharedRequestOperationQueueWithQualityOfService:(long long)arg1;

// Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport

+ (id)tsu_newSerialOperationQueueWithName:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

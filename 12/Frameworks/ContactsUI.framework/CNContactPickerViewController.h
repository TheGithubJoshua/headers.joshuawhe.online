<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNContactPickerViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ContactsUI.framework/CNContactPickerViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI (492)
 */

@interface CNContactPickerViewController : UIViewController <CNContactPickerContentDelegate> {
    bool  _allowsCancel;
    bool  _allowsEditing;
    bool  _autocloses;
    NSString * _bannerTitle;
    NSString * _bannerValue;
    long long  _behavior;
    long long  _cardActions;
    bool  _defaultViewControllerVisible;
    <CNContactPickerDelegate> * _delegate;
    NSArray * _displayedPropertyKeys;
    bool  _hidesPromptInLandscape;
    bool  _hidesSearchableSources;
    bool  _ignoreViewWillBePresented;
    long long  _mode;
    bool  _onlyRealContacts;
    NSPredicate * _predicateForEnablingContact;
    NSPredicate * _predicateForSelectionOfContact;
    NSPredicate * _predicateForSelectionOfProperty;
    NSString * _prompt;
    CNContact * _scrollContact;
    UIViewController<CNContactPickerContentViewController> * _viewController;
}

@property (nonatomic) bool allowsCancel;
@property (nonatomic) bool allowsEditing;
@property (nonatomic) bool autocloses;
@property (nonatomic, copy) NSString *bannerTitle;
@property (nonatomic, copy) NSString *bannerValue;
@property (nonatomic) long long behavior;
@property (nonatomic) long long cardActions;
@property (readonly, copy) NSString *debugDescription;
@property (getter=isDefaultViewControllerVisible, readonly) bool defaultViewControllerVisible;
@property (nonatomic) <CNContactPickerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSArray *displayedPropertyKeys;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool hidesPromptInLandscape;
@property (nonatomic) bool hidesSearchableSources;
@property (nonatomic) long long mode;
@property (nonatomic, readonly) UINavigationController *navigationController;
@property (nonatomic) bool onlyRealContacts;
@property (nonatomic, copy) NSPredicate *predicateForEnablingContact;
@property (nonatomic, copy) NSPredicate *predicateForSelectionOfContact;
@property (nonatomic, copy) NSPredicate *predicateForSelectionOfProperty;
@property (nonatomic, copy) NSString *prompt;
@property (nonatomic, retain) CNContact *scrollContact;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIViewController<CNContactPickerContentViewController> *viewController;

- (void).cxx_destruct;
- (void)_checkConsistencyFromOptions:(id)arg1;
- (void)_endDelayingPresentation;
- (bool)_isDelayingPresentation;
- (id)_pickerPresentedViewController;
- (void)_prepareViewController;
- (void)_setViewController:(id)arg1;
- (void)_setupViewController;
- (bool)_shouldBeOutOfProcess;
- (void)_viewWillBePresented;
- (bool)allowsCancel;
- (bool)allowsEditing;
- (bool)autocloses;
- (id)bannerTitle;
- (id)bannerValue;
- (long long)behavior;
- (long long)cardActions;
- (void)closePickerIfNeeded;
- (void)dealloc;
- (id)delegate;
- (id)displayedPropertyKeys;
- (bool)hidesPromptInLandscape;
- (bool)hidesSearchableSources;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)invalidateSelectionAnimated:(bool)arg1;
- (bool)isDefaultViewControllerVisible;
- (long long)mode;
- (id)navigationController;
- (bool)onlyRealContacts;
- (void)pickerDidCancel;
- (void)pickerDidSelectContact:(id)arg1 property:(id)arg2;
- (void)pickerDidSelectContacts:(id)arg1 properties:(id)arg2;
- (void)popToDefaultViewController:(bool)arg1;
- (id)predicateForEnablingContact;
- (id)predicateForSelectionOfContact;
- (id)predicateForSelectionOfProperty;
- (id)prompt;
- (id)scrollContact;
- (void)scrollToClosestContactMatching:(id)arg1;
- (void)setAllowsCancel:(bool)arg1;
- (void)setAllowsEditing:(bool)arg1;
- (void)setAutocloses:(bool)arg1;
- (void)setBannerTitle:(id)arg1;
- (void)setBannerValue:(id)arg1;
- (void)setBehavior:(long long)arg1;
- (void)setCardActions:(long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayedPropertyKeys:(id)arg1;
- (void)setHidesPromptInLandscape:(bool)arg1;
- (void)setHidesSearchableSources:(bool)arg1;
- (void)setMode:(long long)arg1;
- (void)setOnlyRealContacts:(bool)arg1;
- (void)setPredicateForEnablingContact:(id)arg1;
- (void)setPredicateForSelectionOfContact:(id)arg1;
- (void)setPredicateForSelectionOfProperty:(id)arg1;
- (void)setPrompt:(id)arg1;
- (void)setScrollContact:(id)arg1;
- (void)setViewController:(id)arg1;
- (id)viewController;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

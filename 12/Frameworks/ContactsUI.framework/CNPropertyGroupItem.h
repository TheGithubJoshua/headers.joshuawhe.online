<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNPropertyGroupItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ContactsUI.framework/CNPropertyGroupItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI (492)
 */

@interface CNPropertyGroupItem : CNCardGroupItem {
    bool  _allowsEmail;
    bool  _allowsIMessage;
    bool  _allowsPhone;
    bool  _allowsTTY;
    CNContact * _contact;
    CNContactStore * _contactStore;
    <CNPropertyGroupItemDelegate> * _delegate;
    CNUIContactsEnvironment * _environment;
    CNCardPropertyGroup * _group;
    CNLabeledValue * _labeledValue;
    CNLabeledValue * _originalLabeledValue;
    unsigned long long  _policyFlags;
    NSString * _property;
}

@property (nonatomic) bool allowsEmail;
@property (nonatomic) bool allowsIMessage;
@property (nonatomic) bool allowsPhone;
@property (nonatomic) bool allowsTTY;
@property (nonatomic, readonly) bool canRemove;
@property (nonatomic, retain) CNContact *contact;
@property (nonatomic, readonly) CNContactProperty *contactProperty;
@property (nonatomic, readonly) CNContactStore *contactStore;
@property (nonatomic, readonly) NSURL *defaultActionURL;
@property (nonatomic) <CNPropertyGroupItemDelegate> *delegate;
@property (nonatomic, readonly) NSString *displayLabel;
@property (nonatomic, readonly) NSString *displayValue;
@property (nonatomic, readonly) NSString *editingStringValue;
@property (getter=isEmpty, nonatomic, readonly) bool empty;
@property (nonatomic, readonly) CNUIContactsEnvironment *environment;
@property (getter=isFavorite, nonatomic, readonly) bool favorite;
@property (nonatomic, readonly) CNCardPropertyGroup *group;
@property (nonatomic, retain) CNLabeledValue *labeledValue;
@property (nonatomic, readonly) bool modified;
@property (nonatomic, readonly) CNMutableContact *mutableContact;
@property (nonatomic, readonly) id normalizedValue;
@property (nonatomic, retain) CNLabeledValue *originalLabeledValue;
@property (nonatomic, readonly) NSString *placeholderString;
@property (nonatomic) unsigned long long policyFlags;
@property (nonatomic, retain) NSString *property;
@property (getter=isReadonly, nonatomic, readonly) bool readonly;
@property (getter=isSuggested, nonatomic, readonly) bool suggested;
@property (nonatomic, readonly) NSArray *supportedLabels;

+ (Class)classForProperty:(id)arg1;
+ (void)deleteCoreRecentsEntriesMatchingProperty:(id)arg1 recentsManager:(id)arg2;
+ (id)emptyValueForLabel:(id)arg1;
+ (id)newPropertyGroupItemForProperty:(id)arg1;
+ (id)propertyGroupItemWithLabel:(id)arg1 group:(id)arg2 contact:(id)arg3;
+ (id)propertyGroupItemWithLabel:(id)arg1 group:(id)arg2 contact:(id)arg3 environment:(id)arg4;
+ (id)propertyGroupItemWithLabeledValue:(id)arg1 group:(id)arg2 contact:(id)arg3;
+ (id)propertyGroupItemWithLabeledValue:(id)arg1 group:(id)arg2 contact:(id)arg3 environment:(id)arg4;

- (void).cxx_destruct;
- (void)_removeSuggestion;
- (bool)allowsEmail;
- (bool)allowsIMessage;
- (bool)allowsPhone;
- (bool)allowsTTY;
- (int)anyContactLegacyIdentifier;
- (id)bestLabel:(id)arg1;
- (id)bestValue:(id)arg1;
- (bool)canRemove;
- (void)confirmSuggestion;
- (id)contact;
- (id)contactProperty;
- (id)contactStore;
- (id)contactViewCache;
- (id)defaultActionURL;
- (id)delegate;
- (id)description;
- (id)displayLabel;
- (id)displayStringForValue:(id)arg1;
- (id)displayValue;
- (id)editingStringValue;
- (id)environment;
- (id)group;
- (id)init;
- (id)initWithGroup:(id)arg1;
- (id)initWithLabel:(id)arg1 group:(id)arg2 contact:(id)arg3 environment:(id)arg4;
- (id)initWithLabeledValue:(id)arg1 group:(id)arg2 contact:(id)arg3 environment:(id)arg4;
- (bool)isEmpty;
- (bool)isEqual:(id)arg1;
- (bool)isEquivalentToItem:(id)arg1;
- (bool)isEquivalentToItem:(id)arg1 whenEditing:(bool)arg2;
- (bool)isFavorite;
- (bool)isFavoriteOfActionType:(id)arg1 bundleIdentifier:(id)arg2;
- (bool)isReadonly;
- (bool)isSuggested;
- (bool)isValidIdentifier:(id)arg1;
- (bool)isValidValue:(id)arg1;
- (id)labeledValue;
- (int)labeledValueMultiValueIdentifierForChosenSourceContact;
- (void)mergeItem:(id)arg1;
- (bool)modified;
- (id)mutableContact;
- (id)normalizedValue;
- (id)originalLabeledValue;
- (id)placeholderString;
- (unsigned long long)policyFlags;
- (id)property;
- (void)rejectSuggestion;
- (id)replacementForInvalidValue:(id)arg1;
- (void)saveChangesImmediately:(bool)arg1;
- (void)setAllowsEmail:(bool)arg1;
- (void)setAllowsIMessage:(bool)arg1;
- (void)setAllowsPhone:(bool)arg1;
- (void)setAllowsTTY:(bool)arg1;
- (void)setContact:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLabeledValue:(id)arg1;
- (void)setOriginalLabeledValue:(id)arg1;
- (void)setPolicyFlags:(unsigned long long)arg1;
- (void)setProperty:(id)arg1;
- (bool)shouldCreateNewMeContactToSaveChangesTo;
- (id)supportedLabels;
- (void)updateLabeledValueWithLabel:(id)arg1;
- (void)updateLabeledValueWithValue:(id)arg1;
- (id)updateWithLabel:(id)arg1 value:(id)arg2;
- (id)valueForDisplayString:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

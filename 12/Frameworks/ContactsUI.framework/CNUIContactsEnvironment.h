<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNUIContactsEnvironment.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ContactsUI.framework/CNUIContactsEnvironment.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI (492)
 */

@interface CNUIContactsEnvironment : NSObject {
    CNUIAccountsFacade * _accountsFacade;
    <CNUIUserActionDiscoveringEnvironment> * _actionDiscoveringEnvironment;
    CNUIUserActivityManager * _activityManager;
    <CNLSApplicationWorkspace> * _applicationWorkspace;
    <CNUILikenessRendering> * _cachingLikenessRenderer;
    <CNUIPRLikenessResolver> * _cachingLikenessResolver;
    <CNCapabilities> * _capabilities;
    CNContactsEnvironment * _cnEnvironment;
    CNUIExternalComponentsFactory * _componentsFactory;
    CNContactChangesNotifier * _contactChangesNotifier;
    CNContactStore * _contactStore;
    CNUISchedulerProvider * _defaultSchedulerProvider;
    <CNUIDefaultUserActionFetcher> * _defaultUserActionFetcher;
    _DECConsumer * _duetConsumer;
    CNUIFMFFacade * _fmfFacade;
    CNGeminiManager * _geminiManager;
    CNUIIDSAvailabilityProvider * _idsAvailabilityProvider;
    id  _launchCheckinRegistrar;
    CNUIMeContactMonitor * _meMonitor;
    PRPersonaStore * _personaStore;
    <CNUIPlaceholderProviderFactory> * _placeholderProviderFactory;
    CNUICoreRecentsManager * _recentsManager;
}

@property (nonatomic, retain) CNUIAccountsFacade *accountsFacade;
@property (nonatomic, retain) <CNUIUserActionDiscoveringEnvironment> *actionDiscoveringEnvironment;
@property (nonatomic, retain) CNUIUserActivityManager *activityManager;
@property (nonatomic, retain) <CNLSApplicationWorkspace> *applicationWorkspace;
@property (nonatomic, retain) <CNUILikenessRendering> *cachingLikenessRenderer;
@property (nonatomic, retain) <CNUIPRLikenessResolver> *cachingLikenessResolver;
@property (nonatomic, retain) <CNCapabilities> *capabilities;
@property (nonatomic, readonly) CNContactsEnvironment *cnEnvironment;
@property (nonatomic, retain) CNUIExternalComponentsFactory *componentsFactory;
@property (nonatomic, retain) CNContactChangesNotifier *contactChangesNotifier;
@property (nonatomic, retain) CNContactStore *contactStore;
@property (nonatomic, retain) CNUISchedulerProvider *defaultSchedulerProvider;
@property (nonatomic, retain) <CNUIDefaultUserActionFetcher> *defaultUserActionFetcher;
@property (nonatomic, retain) _DECConsumer *duetConsumer;
@property (nonatomic, retain) CNUIFMFFacade *fmfFacade;
@property (nonatomic, retain) CNGeminiManager *geminiManager;
@property (nonatomic, retain) CNUIIDSAvailabilityProvider *idsAvailabilityProvider;
@property (nonatomic, retain) id launchCheckinRegistrar;
@property (nonatomic, retain) CNUIMeContactMonitor *meMonitor;
@property (nonatomic, retain) PRPersonaStore *personaStore;
@property (nonatomic, retain) <CNUIPlaceholderProviderFactory> *placeholderProviderFactory;
@property (nonatomic, retain) CNUICoreRecentsManager *recentsManager;

+ (id)currentEnvironment;
+ (id)makeCurrentEnvironment;

- (void).cxx_destruct;
- (id)accountsFacade;
- (id)actionDiscoveringEnvironment;
- (id)activityManager;
- (id)applicationWorkspace;
- (id)cachingLikenessRenderer;
- (id)cachingLikenessResolver;
- (id)capabilities;
- (id)cnEnvironment;
- (id)componentsFactory;
- (id)contactChangesNotifier;
- (id)contactStore;
- (id)defaultSchedulerProvider;
- (id)defaultUserActionFetcher;
- (id)duetConsumer;
- (id)fmfFacade;
- (id)geminiManager;
- (id)idsAvailabilityProvider;
- (id)init;
- (id)initWithContactsEnvironment:(id)arg1;
- (id)launchCheckinRegistrar;
- (id)meMonitor;
- (id)nts_launchCheckinRegistrar;
- (id)nts_lazyAccountsFacade;
- (id)nts_lazyActionDiscoveringEnvironment;
- (id)nts_lazyActivityManager;
- (id)nts_lazyApplicationWorkspace;
- (id)nts_lazyCachingLikenessRenderer;
- (id)nts_lazyCachingLikenessResolver;
- (id)nts_lazyCapabilities;
- (id)nts_lazyComponentsFactory;
- (id)nts_lazyContactChangesNotifier;
- (id)nts_lazyContactStore;
- (id)nts_lazyDefaultSchedulerProvider;
- (id)nts_lazyDefaultUserActionFetcher;
- (id)nts_lazyDuetConsumer;
- (id)nts_lazyFMFFacade;
- (id)nts_lazyGeminiManager;
- (id)nts_lazyIDSAvailabilityProvider;
- (id)nts_lazyPersonaStore;
- (id)nts_lazyPlaceholderProviderFactory;
- (id)nts_lazyRecentsManager;
- (id)nts_makeActionDiscoveringEnvironment;
- (id)nts_makeCachingLikenessResolver;
- (id)nts_makeContactChangesNotifier;
- (id)nts_makeRecentsManager;
- (id)personaStore;
- (id)placeholderProviderFactory;
- (id)recentsManager;
- (void)setAccountsFacade:(id)arg1;
- (void)setActionDiscoveringEnvironment:(id)arg1;
- (void)setActivityManager:(id)arg1;
- (void)setApplicationWorkspace:(id)arg1;
- (void)setCachingLikenessRenderer:(id)arg1;
- (void)setCachingLikenessResolver:(id)arg1;
- (void)setCapabilities:(id)arg1;
- (void)setComponentsFactory:(id)arg1;
- (void)setContactChangesNotifier:(id)arg1;
- (void)setContactStore:(id)arg1;
- (void)setDefaultSchedulerProvider:(id)arg1;
- (void)setDefaultUserActionFetcher:(id)arg1;
- (void)setDuetConsumer:(id)arg1;
- (void)setFmfFacade:(id)arg1;
- (void)setGeminiManager:(id)arg1;
- (void)setIdsAvailabilityProvider:(id)arg1;
- (void)setLaunchCheckinRegistrar:(id)arg1;
- (void)setMeMonitor:(id)arg1;
- (void)setPersonaStore:(id)arg1;
- (void)setPlaceholderProviderFactory:(id)arg1;
- (void)setRecentsManager:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNContactViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ContactsUI.framework/CNContactViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI (492)
 */

@interface CNContactViewController : UIViewController <CNContactViewHostProtocol> {
    _UIAccessDeniedView * _accessDeniedView;
    long long  _actions;
    CNContact * _additionalContact;
    void * _addressBook;
    bool  _allowsDisplayModePickerActions;
    bool  _allowsEditPhoto;
    NSString * _alternateName;
    CNContact * _contact;
    CNContactFormatter * _contactFormatter;
    UIView * _contactHeaderView;
    UIViewController * _contactHeaderViewController;
    CNContactStore * _contactStore;
    CNContact * _contentContact;
    CNContactContentViewController * _contentViewController;
    <CNContactViewControllerDelegate> * _delegate;
    long long  _displayMode;
    NSArray * _displayedPropertyKeys;
    long long  _editMode;
    NSArray * _extraBarButtonItems;
    NSString * _highlightedPropertyIdentifier;
    bool  _highlightedPropertyImportant;
    NSString * _highlightedPropertyKey;
    bool  _ignoreViewWillBePresented;
    NSString * _message;
    long long  _mode;
    CNContainer * _parentContainer;
    CNGroup * _parentGroup;
    CNPolicy * _policy;
    <CNContactViewControllerPPTDelegate> * _pptDelegate;
    NSArray * _preEditLeftBarButtonItems;
    NSString * _primaryPropertyKey;
    bool  _requiresSetup;
    bool  _shouldShowLinkedContacts;
    bool  _showingMeContact;
    UIViewController<CNContactContentViewController> * _viewController;
}

@property (nonatomic, readonly) _UIAccessDeniedView *accessDeniedView;
@property (nonatomic) long long actions;
@property (nonatomic, retain) CNContact *additionalContact;
@property (nonatomic) bool allowsActions;
@property (nonatomic) bool allowsDisplayModePickerActions;
@property (nonatomic) bool allowsEditPhoto;
@property (nonatomic) bool allowsEditing;
@property (nonatomic, copy) NSString *alternateName;
@property (nonatomic, retain) CNContact *contact;
@property (nonatomic, retain) CNContactFormatter *contactFormatter;
@property (nonatomic, retain) UIView *contactHeaderView;
@property (nonatomic, retain) UIViewController *contactHeaderViewController;
@property (nonatomic, retain) CNContactStore *contactStore;
@property (nonatomic, retain) CNContact *contentContact;
@property (nonatomic, retain) CNContactContentViewController *contentViewController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CNContactViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long displayMode;
@property (nonatomic, copy) NSArray *displayedPropertyKeys;
@property (nonatomic) long long editMode;
@property (nonatomic, retain) NSArray *extraBarButtonItems;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSString *highlightedPropertyIdentifier;
@property (nonatomic) bool highlightedPropertyImportant;
@property (nonatomic, retain) NSString *highlightedPropertyKey;
@property (nonatomic, copy) NSString *message;
@property (nonatomic, readonly) long long mode;
@property (nonatomic, retain) CNContainer *parentContainer;
@property (nonatomic, retain) CNGroup *parentGroup;
@property (nonatomic, readonly) CNPolicy *policy;
@property (nonatomic) <CNContactViewControllerPPTDelegate> *pptDelegate;
@property (nonatomic, retain) NSArray *preEditLeftBarButtonItems;
@property (nonatomic, retain) NSString *primaryPropertyKey;
@property (nonatomic, readonly) <CNContactViewControllerPrivateDelegate> *privateDelegate;
@property (nonatomic) bool requiresSetup;
@property (nonatomic) bool shouldShowLinkedContacts;
@property (nonatomic) bool showingMeContact;
@property (readonly) Class superclass;
@property (nonatomic, retain) UIViewController<CNContactContentViewController> *viewController;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

+ (id)descriptorForRequiredKeys;
+ (id)viewControllerForContact:(id)arg1;
+ (id)viewControllerForNewContact:(id)arg1;
+ (id)viewControllerForUnknownContact:(id)arg1;
+ (id)viewControllerForUpdatingContact:(id)arg1 withPropertiesFromContact:(id)arg2;

- (void).cxx_destruct;
- (id)_contactPresentedViewController;
- (void)_endDelayingPresentation;
- (bool)_isDelayingPresentation;
- (void)_prepareViewController;
- (id)_primaryPropertyStringForContact:(id)arg1;
- (void)_setViewController:(id)arg1;
- (void)_setupViewController;
- (bool)_shouldBeOutOfProcess;
- (void)_viewWillBePresented;
- (id)accessDeniedView;
- (long long)actions;
- (id)additionalContact;
- (bool)allowsActions;
- (bool)allowsDisplayModePickerActions;
- (bool)allowsEditPhoto;
- (bool)allowsEditing;
- (id)alternateName;
- (void)configureNavigationItem:(id)arg1;
- (id)contact;
- (id)contactFormatter;
- (id)contactHeaderView;
- (id)contactHeaderViewController;
- (id)contactStore;
- (id)contentContact;
- (id)contentViewController;
- (void)dealloc;
- (id)delegate;
- (void)didChangePreferredContentSize:(struct CGSize { double x1; double x2; })arg1;
- (void)didCompleteWithContact:(id)arg1;
- (void)didDeleteContact:(id)arg1;
- (void)didMoveToParentViewController:(id)arg1;
- (long long)displayMode;
- (id)displayedPropertyKeys;
- (void)editCancel:(id)arg1;
- (long long)editMode;
- (void)enableCancelKeyboardShortcut;
- (void)enableSaveKeyboardShortcut;
- (id)extraBarButtonItems;
- (void)highlightPropertyWithKey:(id)arg1 identifier:(id)arg2;
- (void)highlightPropertyWithKey:(id)arg1 identifier:(id)arg2 important:(bool)arg3;
- (id)highlightedPropertyIdentifier;
- (bool)highlightedPropertyImportant;
- (id)highlightedPropertyKey;
- (id)initWithMode:(long long)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)isPresentingEditingController:(bool)arg1;
- (void)isPresentingFullscreen:(bool)arg1;
- (void)loadView;
- (id)message;
- (long long)mode;
- (id)navigationItemController;
- (id)parentContainer;
- (id)parentGroup;
- (id)policy;
- (id)pptDelegate;
- (id)preEditLeftBarButtonItems;
- (id)primaryPropertyKey;
- (id)privateDelegate;
- (bool)requiresSetup;
- (void)setActions:(long long)arg1;
- (void)setAdditionalContact:(id)arg1;
- (void)setAllowsActions:(bool)arg1;
- (void)setAllowsDisplayModePickerActions:(bool)arg1;
- (void)setAllowsEditPhoto:(bool)arg1;
- (void)setAllowsEditing:(bool)arg1;
- (void)setAlternateName:(id)arg1;
- (void)setContact:(id)arg1;
- (void)setContact:(id)arg1 additionalContact:(id)arg2 mode:(long long)arg3;
- (void)setContactFormatter:(id)arg1;
- (void)setContactHeaderView:(id)arg1;
- (void)setContactHeaderViewController:(id)arg1;
- (void)setContactStore:(id)arg1;
- (void)setContentContact:(id)arg1;
- (void)setContentViewController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisplayMode:(long long)arg1;
- (void)setDisplayedPropertyKeys:(id)arg1;
- (void)setDoneButtonText:(id)arg1 enabled:(bool)arg2;
- (void)setEditMode:(long long)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setExtraBarButtonItems:(id)arg1;
- (void)setHighlightedPropertyIdentifier:(id)arg1;
- (void)setHighlightedPropertyImportant:(bool)arg1;
- (void)setHighlightedPropertyKey:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)setParentContainer:(id)arg1;
- (void)setParentGroup:(id)arg1;
- (void)setPptDelegate:(id)arg1;
- (void)setPreEditLeftBarButtonItems:(id)arg1;
- (void)setPrimaryPropertyKey:(id)arg1;
- (void)setRequiresSetup:(bool)arg1;
- (void)setShouldShowLinkedContacts:(bool)arg1;
- (void)setShowingMeContact:(bool)arg1;
- (void)setViewController:(id)arg1;
- (bool)shouldAutomaticallyForwardAppearanceMethods;
- (bool)shouldPerformDefaultActionForContact:(id)arg1 propertyKey:(id)arg2 propertyIdentifier:(id)arg3;
- (bool)shouldShowLinkedContacts;
- (bool)showingMeContact;
- (void)toggleEditing:(id)arg1;
- (void)updateEditNavigationItemsAnimated:(bool)arg1 doneButtonEnabled:(bool)arg2 doneButtonText:(id)arg3;
- (void)updateEditing:(bool)arg1 doneButtonEnabled:(bool)arg2 doneButtonText:(id)arg3;
- (id)viewController;
- (void)viewDidAppear;
- (void)viewDidAppear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

+ (id)_mf_viewControllerForUnknownContactWithEmailAddress:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

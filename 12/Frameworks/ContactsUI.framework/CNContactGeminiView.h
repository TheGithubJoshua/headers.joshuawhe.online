<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNContactGeminiView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ContactsUI.framework/CNContactGeminiView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI (492)
 */

@interface CNContactGeminiView : UIView {
    NSDictionary * _ab_textAttributes;
    NSArray * _activatedConstraints;
    bool  _allowsPickerActions;
    UIImageView * _chevronView;
    bool  _didCalculateLayout;
    CNGeminiBadge * _geminiBadge;
    UILabel * _geminiLabel;
    UILayoutGuide * _geminiLabelLayoutGuide;
    CNGeminiResult * _geminiResult;
    bool  _highlighted;
    UIColor * _highlightedColor;
    bool  _isUsingTwoLineLayout;
    UILayoutGuide * _layoutGuide;
    UILabel * _typeLabel;
}

@property (nonatomic, copy) NSDictionary *ab_textAttributes;
@property (nonatomic, retain) NSArray *activatedConstraints;
@property (nonatomic) bool allowsPickerActions;
@property (nonatomic, retain) UIImageView *chevronView;
@property (nonatomic) bool didCalculateLayout;
@property (nonatomic, retain) CNGeminiBadge *geminiBadge;
@property (nonatomic, retain) UILabel *geminiLabel;
@property (nonatomic, retain) UILayoutGuide *geminiLabelLayoutGuide;
@property (nonatomic, retain) CNGeminiResult *geminiResult;
@property (getter=isHighlighted, nonatomic) bool highlighted;
@property (nonatomic, retain) UIColor *highlightedColor;
@property (nonatomic) bool isUsingTwoLineLayout;
@property (nonatomic, retain) UILayoutGuide *layoutGuide;
@property (nonatomic, retain) UILabel *typeLabel;

+ (bool)requiresConstraintBasedLayout;

- (void).cxx_destruct;
- (id)ab_textAttributes;
- (id)activatedConstraints;
- (bool)allowsPickerActions;
- (void)calculateLayoutIfNeeded;
- (id)chevronView;
- (bool)didCalculateLayout;
- (bool)doesLayoutRequireTwoLines;
- (id)geminiBadge;
- (id)geminiLabel;
- (id)geminiLabelLayoutGuide;
- (id)geminiResult;
- (id)highlightedColor;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isHighlighted;
- (bool)isUsingTwoLineLayout;
- (id)layoutGuide;
- (void)layoutSubviews;
- (id)localizedChannelUsageFromGeminiResult:(id)arg1;
- (id)localizedLabelFromGeminiResult:(id)arg1;
- (void)setAb_textAttributes:(id)arg1;
- (void)setActivatedConstraints:(id)arg1;
- (void)setAllowsPickerActions:(bool)arg1;
- (void)setChevronView:(id)arg1;
- (void)setDidCalculateLayout:(bool)arg1;
- (void)setGeminiBadge:(id)arg1;
- (void)setGeminiLabel:(id)arg1;
- (void)setGeminiLabelLayoutGuide:(id)arg1;
- (void)setGeminiResult:(id)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setHighlightedColor:(id)arg1;
- (void)setIsUsingTwoLineLayout:(bool)arg1;
- (void)setLayoutGuide:(id)arg1;
- (void)setNeedsCalculateLayout;
- (void)setTypeLabel:(id)arg1;
- (bool)shouldDisplayBadge;
- (bool)shouldDisplayChevron;
- (id)singleLineLayoutConstraints;
- (struct CGSize { double x1; double x2; })sizeForSingleLineLayoutFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeForTwoLineLayoutFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)twoLineLayoutConstraints;
- (id)typeLabel;
- (void)updateConstraints;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

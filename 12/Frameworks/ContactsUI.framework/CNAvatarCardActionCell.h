<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNAvatarCardActionCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ContactsUI.framework/CNAvatarCardActionCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI (492)
 */

@interface CNAvatarCardActionCell : UITableViewCell {
    CNQuickAction * _action;
    UIImageView * _actionImageView;
    long long  _context;
    CNAvatarCardHighlightView * _defaultHighlightView;
    UIButton * _expandButton;
    NSLayoutConstraint * _expandButtonWidthConstraint;
    bool  _gestureActivated;
    struct CGPoint { 
        double x; 
        double y; 
    }  _initialLocation;
    double  _initialTranslatingViewLeadingConstraintConstant;
    struct CGPoint { 
        double x; 
        double y; 
    }  _lastLocation;
    unsigned long long  _lastScrollDirection;
    double  _lastScrollDirectionTimestamp;
    CNAvatarCardHighlightView * _moreHighlightView;
    NSLayoutConstraint * _moreHighlightViewHiddingConstraint;
    bool  _moreHighlighted;
    UILabel * _moreLabel;
    UIPageControl * _pageControl;
    NSLayoutConstraint * _pageControlLeadingConstraint;
    NSLayoutConstraint * _punchOutLeftConstraint;
    UIView * _separatorView;
    UILabel * _subtitleLabel;
    bool  _swipped;
    UILabel * _titleLabel;
    bool  _transitioning;
    UIView * _translatingView;
    NSLayoutConstraint * _translatingViewLeadingConstraint;
}

@property (nonatomic, retain) CNQuickAction *action;
@property (nonatomic, retain) UIImageView *actionImageView;
@property (nonatomic) long long context;
@property (nonatomic, retain) CNAvatarCardHighlightView *defaultHighlightView;
@property (nonatomic, retain) UIButton *expandButton;
@property (nonatomic, retain) NSLayoutConstraint *expandButtonWidthConstraint;
@property (nonatomic) bool gestureActivated;
@property (nonatomic) double initialTranslatingViewLeadingConstraintConstant;
@property (nonatomic) unsigned long long lastScrollDirection;
@property (nonatomic) double lastScrollDirectionTimestamp;
@property (nonatomic, retain) CNAvatarCardHighlightView *moreHighlightView;
@property (nonatomic, retain) NSLayoutConstraint *moreHighlightViewHiddingConstraint;
@property (nonatomic) bool moreHighlighted;
@property (nonatomic, retain) UILabel *moreLabel;
@property (nonatomic, retain) UIPageControl *pageControl;
@property (nonatomic, retain) NSLayoutConstraint *pageControlLeadingConstraint;
@property (nonatomic, retain) NSLayoutConstraint *punchOutLeftConstraint;
@property (nonatomic, retain) UIView *separatorView;
@property (nonatomic, retain) UILabel *subtitleLabel;
@property (nonatomic) bool swipped;
@property (nonatomic, retain) UILabel *titleLabel;
@property (nonatomic) bool transitioning;
@property (nonatomic, retain) UIView *translatingView;
@property (nonatomic, retain) NSLayoutConstraint *translatingViewLeadingConstraint;

+ (id)cellNibForActions;
+ (id)cellNibForContacts;

- (void).cxx_destruct;
- (void)_updateFonts;
- (void)_updateHighlightAnimated:(bool)arg1;
- (id)action;
- (id)actionImageView;
- (void)awakeFromNib;
- (long long)context;
- (id)defaultHighlightView;
- (id)expandButton;
- (id)expandButtonWidthConstraint;
- (bool)gestureActivated;
- (double)initialTranslatingViewLeadingConstraintConstant;
- (unsigned long long)lastScrollDirection;
- (double)lastScrollDirectionTimestamp;
- (id)moreHighlightView;
- (id)moreHighlightViewHiddingConstraint;
- (bool)moreHighlighted;
- (id)moreLabel;
- (id)pageControl;
- (id)pageControlLeadingConstraint;
- (void)prepareForReuse;
- (id)punchOutLeftConstraint;
- (void)reloadData;
- (id)separatorView;
- (void)setAction:(id)arg1;
- (void)setActionImageView:(id)arg1;
- (void)setContext:(long long)arg1;
- (void)setDefaultHighlightView:(id)arg1;
- (void)setExpandButton:(id)arg1;
- (void)setExpandButtonWidthConstraint:(id)arg1;
- (void)setGestureActivated:(bool)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setHighlighted:(bool)arg1 animated:(bool)arg2;
- (void)setInitialTranslatingViewLeadingConstraintConstant:(double)arg1;
- (void)setLastScrollDirection:(unsigned long long)arg1;
- (void)setLastScrollDirectionTimestamp:(double)arg1;
- (void)setMoreHighlightView:(id)arg1;
- (void)setMoreHighlightViewHiddingConstraint:(id)arg1;
- (void)setMoreHighlighted:(bool)arg1;
- (void)setMoreLabel:(id)arg1;
- (void)setPageControl:(id)arg1;
- (void)setPageControlLeadingConstraint:(id)arg1;
- (void)setPunchOutLeftConstraint:(id)arg1;
- (void)setSeparatorView:(id)arg1;
- (void)setSubtitleLabel:(id)arg1;
- (void)setSwipped:(bool)arg1;
- (void)setTitleLabel:(id)arg1;
- (void)setTransitioning:(bool)arg1;
- (void)setTranslatingView:(id)arg1;
- (void)setTranslatingViewLeadingConstraint:(id)arg1;
- (void)startTrackingWithGestureRecognizer:(id)arg1;
- (void)stopTrackingWithGestureRecognizer:(id)arg1;
- (id)subtitleLabel;
- (bool)swipped;
- (id)titleLabel;
- (void)trackHighlight:(id)arg1;
- (bool)transitioning;
- (id)translatingView;
- (id)translatingViewLeadingConstraint;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

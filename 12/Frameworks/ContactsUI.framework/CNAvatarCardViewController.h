<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNAvatarCardViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ContactsUI.framework/CNAvatarCardViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI (492)
 */

@interface CNAvatarCardViewController : UIViewController <CNAvatarCardActionsViewDelegate, CNCardTransitioning, CNContactActionsControllerDelegate, UIGestureRecognizerDelegate> {
    CNContactActionsController * _actionsController;
    UIView * _actionsListView;
    NSLayoutConstraint * _actionsViewControllerHeightConstraint;
    double  _borderMargin;
    CNAvatarCardController * _cardController;
    <CNAvatarCardViewControllerDelegate> * _delegate;
    UIView * _effectView;
    bool  _hasHeader;
    UIView * _headerContainerView;
    bool  _headerOnTop;
    CNAvatarCardActionsView * _legacyContactActionsView;
    UIView * _sourceView;
    NSArray * _verticalConstraints;
    bool  _visible;
}

@property (nonatomic, copy) NSArray *actionCategories;
@property (nonatomic, readonly) <CNAvatarCardActionListController> *actionListController;
@property (nonatomic, readonly) <CNAvatarCardActionListOrbSupport> *actionListViewController;
@property (nonatomic, retain) CNContactActionsController *actionsController;
@property (nonatomic, retain) UIView *actionsListView;
@property (nonatomic) bool actionsReversed;
@property (nonatomic, retain) NSLayoutConstraint *actionsViewControllerHeightConstraint;
@property (nonatomic) double borderMargin;
@property (nonatomic) bool bypassActionValidation;
@property (nonatomic) CNAvatarCardController *cardController;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CNAvatarCardViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool dismissesBeforePerforming;
@property (nonatomic, retain) UIView *effectView;
@property (nonatomic) bool hasHeader;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) UIView *headerContainerView;
@property (nonatomic) bool headerOnTop;
@property (nonatomic, retain) CNAvatarCardActionsView *legacyContactActionsView;
@property (nonatomic, retain) UIView *sourceView;
@property (readonly) Class superclass;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } transitioningContentFrame;
@property (nonatomic, readonly) UIView *transitioningContentView;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } transitioningFrame;
@property (nonatomic, readonly) UIImage *transitioningImage;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } transitioningImageFrame;
@property bool transitioningImageVisible;
@property (nonatomic, readonly) UIView *transitioningView;
@property (nonatomic, retain) NSArray *verticalConstraints;
@property (getter=isVisible, nonatomic) bool visible;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_photoFrameInView:(id)arg1;
- (void)_updatePreferredSize;
- (id)actionCategories;
- (id)actionListController;
- (id)actionListViewController;
- (id)actionsController;
- (id)actionsListView;
- (bool)actionsReversed;
- (id)actionsView;
- (id)actionsViewControllerHeightConstraint;
- (double)borderMargin;
- (bool)bypassActionValidation;
- (void)cardActionsView:(id)arg1 didShowActions:(id)arg2;
- (id)cardActionsView:(id)arg1 orderedPropertiesForProperties:(id)arg2 category:(id)arg3;
- (id)cardController;
- (void)contactActionsController:(id)arg1 didSelectAction:(id)arg2;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)didAddActionsViewToHierarchy;
- (void)dismissAnimated:(bool)arg1;
- (void)dismissViewControllerForCardActionsView:(id)arg1 animated:(bool)arg2;
- (bool)dismissesBeforePerforming;
- (id)effectView;
- (bool)hasHeader;
- (id)headerContainerView;
- (bool)headerOnTop;
- (id)initWithContacts:(id)arg1;
- (bool)isVisible;
- (id)legacyContactActionsView;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)refreshActions;
- (void)setActionCategories:(id)arg1;
- (void)setActionsController:(id)arg1;
- (void)setActionsListView:(id)arg1;
- (void)setActionsReversed:(bool)arg1;
- (void)setActionsViewControllerHeightConstraint:(id)arg1;
- (void)setBorderMargin:(double)arg1;
- (void)setBypassActionValidation:(bool)arg1;
- (void)setCardController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDismissesBeforePerforming:(bool)arg1;
- (void)setEffectView:(id)arg1;
- (void)setHasHeader:(bool)arg1;
- (void)setHeaderContainerView:(id)arg1;
- (void)setHeaderOnTop:(bool)arg1;
- (void)setLegacyContactActionsView:(id)arg1;
- (void)setSourceView:(id)arg1;
- (void)setTransitioningImageVisible:(bool)arg1;
- (void)setVerticalConstraints:(id)arg1;
- (void)setVisible:(bool)arg1;
- (id)sourceView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })transitioningContentFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })transitioningFrame;
- (id)transitioningImage;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })transitioningImageFrame;
- (bool)transitioningImageVisible;
- (id)transitioningView;
- (void)updateActionsControllerHeightConstraint;
- (void)updateActionsViewBackgroundColor;
- (void)updateViewConstraints;
- (id)verticalConstraints;
- (id)viewControllerForCardActionsView:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (id)viewForTouchContinuation;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)willAddActionsViewToHierarchy;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

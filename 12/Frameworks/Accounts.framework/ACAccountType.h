<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ACAccountType.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Accounts.framework/ACAccountType.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Accounts.framework/Accounts (113)
 */

@interface ACAccountType : NSObject <ACProtobufCoding, NSSecureCoding> {
    NSSet * _accessKeys;
    ACAccountStore * _accountStore;
    NSString * _accountTypeDescription;
    NSString * _credentialProtectionPolicy;
    NSString * _credentialType;
    bool  _encryptAccountProperties;
    NSString * _identifier;
    NSURL * _objectID;
    bool  _obsolete;
    NSString * _owningBundleID;
    NSSet * _supportedDataclasses;
    int  _supportsAuthentication;
    bool  _supportsMultipleAccounts;
    NSSet * _syncableDataclasses;
    int  _visibility;
}

@property (nonatomic, readonly) bool accessGranted;
@property (nonatomic, readonly) NSSet *accessKeys;
@property (nonatomic) ACAccountStore *accountStore;
@property (nonatomic, readonly) NSString *accountTypeDescription;
@property (nonatomic, copy) id credentialProtectionPolicy;
@property (nonatomic, retain) NSString *credentialType;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool encryptAccountProperties;
@property (nonatomic, readonly) NSString *fullDescription;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic, retain) NSURL *objectID;
@property (getter=isObsolete, nonatomic) bool obsolete;
@property (nonatomic, retain) NSString *owningBundleID;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSSet *supportedDataclasses;
@property (nonatomic) int supportsAuthentication;
@property (nonatomic) bool supportsMultipleAccounts;
@property (nonatomic, readonly) NSSet *syncableDataclasses;
@property (nonatomic) int visibility;

+ (id)allIdentifiers;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)_encodeProtobuf;
- (id)_encodeProtobufData;
- (id)_initWithProtobuf:(id)arg1;
- (id)_initWithProtobufData:(id)arg1;
- (bool)accessGranted;
- (id)accessKeys;
- (id)accountStore;
- (id)accountTypeDescription;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)credentialProtectionPolicy;
- (id)credentialType;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (bool)encryptAccountProperties;
- (id)fullDescription;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 description:(id)arg2;
- (id)initWithManagedAccountType:(id)arg1;
- (id)initWithManagedAccountType:(id)arg1 accountStore:(id)arg2;
- (bool)isEqual:(id)arg1;
- (bool)isObsolete;
- (id)objectID;
- (id)owningBundleID;
- (void)setAccountStore:(id)arg1;
- (void)setAccountTypeDescription:(id)arg1;
- (void)setCredentialProtectionPolicy:(id)arg1;
- (void)setCredentialType:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setObjectID:(id)arg1;
- (void)setObsolete:(bool)arg1;
- (void)setOwningBundleID:(id)arg1;
- (void)setSupportsAuthentication:(int)arg1;
- (void)setSupportsMultipleAccounts:(bool)arg1;
- (void)setVisibility:(int)arg1;
- (id)supportedDataclasses;
- (int)supportsAuthentication;
- (bool)supportsMultipleAccounts;
- (id)syncableDataclasses;
- (int)visibility;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

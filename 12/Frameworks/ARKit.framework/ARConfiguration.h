<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ARConfiguration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ARKit.framework/ARConfiguration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ARKit.framework/ARKit (91.5)
 */

@interface ARConfiguration : NSObject <NSCopying> {
    bool  _allowCameraInMultipleForegroundAppLayout;
    bool  _autoFocusEnabled;
    long long  _cameraPosition;
    AVCaptureSession * _captureSession;
    NSArray * _customSensors;
    unsigned long long  _frameDebugOptions;
    unsigned long long  _lightEstimation;
    bool  _mirroredFrameOutput;
    bool  _providesAudioData;
    ARVideoFormat * _videoFormat;
    long long  _worldAlignment;
}

@property (nonatomic) bool allowCameraInMultipleForegroundAppLayout;
@property (getter=isAutoFocusEnabled, nonatomic) bool autoFocusEnabled;
@property (nonatomic) long long cameraPosition;
@property (nonatomic, retain) AVCaptureSession *captureSession;
@property (nonatomic, retain) NSArray *customSensors;
@property (nonatomic, readonly) NSString *deviceModel;
@property (nonatomic) unsigned long long frameDebugOptions;
@property (nonatomic, readonly) ARImageSensorSettings *imageSensorSettings;
@property (nonatomic) unsigned long long lightEstimation;
@property (getter=isLightEstimationEnabled, nonatomic) bool lightEstimationEnabled;
@property (nonatomic) bool mirroredFrameOutput;
@property (nonatomic) bool providesAudioData;
@property (nonatomic, readonly) ARReplaySensor *replaySensor;
@property (nonatomic, retain) ARVideoFormat *videoFormat;
@property (nonatomic) long long worldAlignment;

+ (bool)isSupported;
+ (id)recordingConfigurationWithConfiguration:(id)arg1 recordingTechnique:(id*)arg2;
+ (id)recordingConfigurationWithConfiguration:(id)arg1 recordingTechnique:(id*)arg2 fileURL:(id)arg3;
+ (id)replayConfigurationWithConfiguration:(id)arg1 replaySensor:(id)arg2 replayingResultDataClasses:(id)arg3;
+ (id)supportedVideoFormats;

- (void).cxx_destruct;
- (bool)allowCameraInMultipleForegroundAppLayout;
- (long long)cameraPosition;
- (id)captureSession;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)createTechniquesWithParallelTechniques:(id)arg1 serialTechniques:(id)arg2;
- (id)customSensors;
- (id)description;
- (id)descriptionWithoutBrackets;
- (id)deviceModel;
- (unsigned long long)frameDebugOptions;
- (unsigned long long)hash;
- (id)imageSensorSettings;
- (id)init;
- (id)initPrivate;
- (bool)isAutoFocusEnabled;
- (bool)isEqual:(id)arg1;
- (bool)isLightEstimationEnabled;
- (unsigned long long)lightEstimation;
- (bool)mirroredFrameOutput;
- (bool)providesAudioData;
- (id)renderingTechnique;
- (id)replaySensor;
- (void)setAllowCameraInMultipleForegroundAppLayout:(bool)arg1;
- (void)setAutoFocusEnabled:(bool)arg1;
- (void)setCameraPosition:(long long)arg1;
- (void)setCaptureSession:(id)arg1;
- (void)setCustomSensors:(id)arg1;
- (void)setFrameDebugOptions:(unsigned long long)arg1;
- (void)setLightEstimation:(unsigned long long)arg1;
- (void)setLightEstimationEnabled:(bool)arg1;
- (void)setMirroredFrameOutput:(bool)arg1;
- (void)setProvidesAudioData:(bool)arg1;
- (void)setVideoFormat:(id)arg1;
- (void)setWorldAlignment:(long long)arg1;
- (id)techniques;
- (id)videoFormat;
- (long long)worldAlignment;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

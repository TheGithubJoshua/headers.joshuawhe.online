<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PHImageRequestOptions.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Photos.framework/PHImageRequestOptions.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Photos.framework/Photos (1)
 */

@interface PHImageRequestOptions : NSObject <NSCopying> {
    bool  _allowPlaceholder;
    bool  _allowSecondaryOpportunisticImage;
    double  _aspectRatioHint;
    id /* block */  _cachingCompletedHandler;
    bool  _deliveryFirstResultAsynchronously;
    long long  _deliveryMode;
    double  _demoteFactor;
    double  _downloadUpdateInterval;
    long long  _loadingMode;
    bool  _memoryCachingAllowed;
    bool  _networkAccessAllowed;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _normalizedCropRect;
    id /* block */  _progressHandler;
    long long  _rank;
    int  _requestID;
    long long  _resizeMode;
    NSObject<OS_dispatch_queue> * _resultHandlerQueue;
    bool  _routeToNewImageManager;
    bool  _synchronous;
    long long  _version;
}

@property (nonatomic) bool allowPlaceholder;
@property (nonatomic) bool allowSecondaryOpportunisticImage;
@property (nonatomic) double aspectRatioHint;
@property (nonatomic, copy) id /* block */ cachingCompletedHandler;
@property (nonatomic) bool deliveryFirstResultAsynchronously;
@property (nonatomic) long long deliveryMode;
@property (nonatomic) double demoteFactor;
@property (nonatomic) double downloadUpdateInterval;
@property (nonatomic) long long loadingMode;
@property (getter=isMemoryCachingAllowed, nonatomic) bool memoryCachingAllowed;
@property (getter=isNetworkAccessAllowed, nonatomic) bool networkAccessAllowed;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedCropRect;
@property (nonatomic, copy) id /* block */ progressHandler;
@property (nonatomic) long long rank;
@property (nonatomic) int requestID;
@property (nonatomic) long long resizeMode;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *resultHandlerQueue;
@property (nonatomic) bool routeToNewImageManager;
@property (getter=isSynchronous, nonatomic) bool synchronous;
@property (nonatomic) long long version;

+ (id)defaultOptionsAllowingPlaceholder;

- (void).cxx_destruct;
- (bool)allowPlaceholder;
- (bool)allowSecondaryOpportunisticImage;
- (double)aspectRatioHint;
- (id /* block */)cachingCompletedHandler;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)deliveryFirstResultAsynchronously;
- (long long)deliveryMode;
- (double)demoteFactor;
- (id)description;
- (double)downloadUpdateInterval;
- (id)init;
- (bool)isMemoryCachingAllowed;
- (bool)isNetworkAccessAllowed;
- (bool)isSynchronous;
- (long long)loadingMode;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedCropRect;
- (id /* block */)progressHandler;
- (long long)rank;
- (int)requestID;
- (int)requestIDOrNextIfInvalid;
- (long long)resizeMode;
- (id)resultHandlerQueue;
- (bool)routeToNewImageManager;
- (void)setAllowPlaceholder:(bool)arg1;
- (void)setAllowSecondaryOpportunisticImage:(bool)arg1;
- (void)setAspectRatioHint:(double)arg1;
- (void)setCachingCompletedHandler:(id /* block */)arg1;
- (void)setDeliveryFirstResultAsynchronously:(bool)arg1;
- (void)setDeliveryMode:(long long)arg1;
- (void)setDemoteFactor:(double)arg1;
- (void)setDownloadUpdateInterval:(double)arg1;
- (void)setLoadingMode:(long long)arg1;
- (void)setMemoryCachingAllowed:(bool)arg1;
- (void)setNetworkAccessAllowed:(bool)arg1;
- (void)setNormalizedCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setProgressHandler:(id /* block */)arg1;
- (void)setRank:(long long)arg1;
- (void)setRequestID:(int)arg1;
- (void)setResizeMode:(long long)arg1;
- (void)setResultHandlerQueue:(id)arg1;
- (void)setRouteToNewImageManager:(bool)arg1;
- (void)setSynchronous:(bool)arg1;
- (void)setVersion:(long long)arg1;
- (long long)version;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

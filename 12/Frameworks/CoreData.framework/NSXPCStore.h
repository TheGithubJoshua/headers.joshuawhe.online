<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSXPCStore.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreData.framework/NSXPCStore.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreData.framework/CoreData (866.6)
 */

@interface NSXPCStore : NSIncrementalStore <NSCoreDataKeyedArchivingDelegate, NSSQLModelProvider> {
    NSGenerationalRowCache * _cache;
    NSXPCStoreConnectionManager * _connectionManager;
    NSSQLCore * _core;
    NSString * _fileBackedFuturesDirectory;
    NSDictionary * _metadata;
    NSSQLModel * _model;
    NSXPCStoreNotificationObserver * _observer;
    NSString * _remoteStoreChangedNotificationName;
    NSString * _sanityCheckToken;
    int  _stateLock;
}

@property (readonly, copy) NSString *remoteStoreChangedNotificationName;

+ (bool)_allowCoreDataFutures;
+ (bool)_isOnExtendedTimeout;
+ (id)archiver:(id)arg1 willEncodeObject:(id)arg2;
+ (int)debugDefault;
+ (void)initialize;
+ (id)replacementObjectForXPCConnection:(id)arg1 encoder:(id)arg2 object:(id)arg3;
+ (void)setDebugDefault:(int)arg1;

- (bool)_allowCoreDataFutures;
- (id)_cachedRowForObjectWithID:(id)arg1 generation:(id)arg2;
- (id)_cachedRowForRelationship:(id)arg1 onObjectWithID:(id)arg2 generation:(id)arg3;
- (void)_clearCachedRowForObjectWithID:(id)arg1 generation:(id)arg2;
- (void)_commitChangesForRequestContext:(id)arg1;
- (id)_createAndCacheRowForObjectWithID:(id)arg1 propertyValues:(id)arg2 inContext:(id)arg3 error:(id*)arg4;
- (id)_executeSaveRequestForContext:(id)arg1 error:(id*)arg2;
- (void)_freeQueryGenerationWithIdentifier:(id)arg1;
- (id)_newObjectIDForEntityDescription:(id)arg1 pk:(long long)arg2;
- (Class)_objectIDClass;
- (id)_rawMetadata__;
- (id)_sanityCheckToken;
- (void)_setMetadata:(id)arg1 includeVersioning:(bool)arg2;
- (void)_setSanityCheckToken:(id)arg1;
- (id)_storeInfoForEntityDescription:(id)arg1;
- (id)ancillaryModels;
- (id)ancillarySQLModels;
- (void)cacheContents:(id)arg1 ofRelationship:(id)arg2 onObjectWithID:(id)arg3 generation:(id)arg4;
- (void)cacheContents:(id)arg1 ofRelationship:(id)arg2 onObjectWithID:(id)arg3 withTimestamp:(double)arg4 generation:(id)arg5;
- (void)cacheFetchedRows:(id)arg1 forManagedObjects:(id)arg2 generation:(id)arg3;
- (id)connectionManager;
- (id)currentChangeToken;
- (id)currentQueryGeneration;
- (void)dealloc;
- (void)decodePrefetchArray:(id)arg1 forSources:(id)arg2 context:(id)arg3;
- (void)decodePrefetchResult:(id)arg1 forSources:(id)arg2 context:(id)arg3;
- (id)decodeResults:(id)arg1 forFaultOfObjectWithID:(id)arg2 context:(id)arg3 error:(id*)arg4;
- (id)decodeResults:(id)arg1 forFetch:(id)arg2 context:(id)arg3 error:(id*)arg4;
- (id)decodeValue:(id)arg1 forRelationship:(id)arg2 onSource:(id)arg3 inContext:(id)arg4 error:(id*)arg5;
- (void)disconnect;
- (id)entityForEntityDescription:(id)arg1;
- (id)executeBatchDeleteRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)executeFetchRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)executePersistentHistoryRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)executePullChangesRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)executeRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)executeSaveRequest:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)fileBackedFuturesDirectory;
- (void)freeQueryGenerationWithIdentifier:(id)arg1;
- (id)initWithPersistentStoreCoordinator:(id)arg1 configurationName:(id)arg2 URL:(id)arg3 options:(id)arg4;
- (bool)load:(id*)arg1;
- (bool)loadMetadata:(id*)arg1;
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)arg1 generation:(id)arg2;
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)arg1 generation:(id)arg2;
- (id)metadata;
- (id)model;
- (struct _NSScalarObjectID { Class x1; }*)newForeignKeyID:(long long)arg1 entity:(id)arg2;
- (struct _NSScalarObjectID { Class x1; }*)newObjectIDForEntity:(id)arg1 pk:(long long)arg2;
- (id)newValueForRelationship:(id)arg1 forObjectWithID:(id)arg2 withContext:(id)arg3 error:(id*)arg4;
- (id)newValuesForObjectWithID:(id)arg1 withContext:(id)arg2 error:(id*)arg3;
- (id)objectIDFactoryForEntity:(id)arg1;
- (Class)objectIDFactoryForSQLEntity:(id)arg1;
- (id)obtainPermanentIDsForObjects:(id)arg1 error:(id*)arg2;
- (id)remoteStoreChangedNotificationName;
- (id)reopenQueryGenerationWithIdentifier:(id)arg1 error:(id*)arg2;
- (id)replacementObjectForXPCConnection:(id)arg1 encoder:(id)arg2 object:(id)arg3;
- (id)sendMessage:(id)arg1 fromContext:(id)arg2 interrupts:(unsigned long long*)arg3 error:(id*)arg4;
- (id)serviceName;
- (void)setIdentifier:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setSQLCore:(id)arg1;
- (void)setURL:(id)arg1;
- (void)setupRemoteStoreObserver;
- (id)sqlCore;
- (bool)supportsConcurrentRequestHandling;
- (bool)supportsGenerationalQuerying;
- (id)type;
- (id)unarchiver:(id)arg1 didDecodeObject:(id)arg2;
- (void)willRemoveFromPersistentStoreCoordinator:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

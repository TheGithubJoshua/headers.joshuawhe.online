<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSFetchedResultsController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreData.framework/NSFetchedResultsController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreData.framework/CoreData (866.6)
 */

@interface NSFetchedResultsController : NSObject {
    void * _cache;
    NSString * _cacheName;
    id  _delegate;
    NSFetchRequest * _fetchRequest;
    id  _fetchedObjects;
    struct _fetchResultsControllerFlags { 
        unsigned int _sendObjectChangeNotifications : 1; 
        unsigned int _sendSectionChangeNotifications : 1; 
        unsigned int _sendDidChangeContentNotifications : 1; 
        unsigned int _sendWillChangeContentNotifications : 1; 
        unsigned int _sendSectionIndexTitleForSectionName : 1; 
        unsigned int _changedResultsSinceLastSave : 1; 
        unsigned int _hasMutableFetchedResults : 1; 
        unsigned int _hasBatchedArrayResults : 1; 
        unsigned int _hasSections : 1; 
        unsigned int _usesNonpersistedProperties : 1; 
        unsigned int _includesSubentities : 1; 
        unsigned int _reservedFlags : 21; 
    }  _flags;
    NSManagedObjectContext * _managedObjectContext;
    id  _sectionIndexTitles;
    id  _sectionIndexTitlesSections;
    NSString * _sectionNameKey;
    NSString * _sectionNameKeyPath;
    id  _sections;
    id  _sectionsByName;
    id  _sortKeys;
}

@property (nonatomic, readonly) NSString *cacheName;
@property (nonatomic) <NSFetchedResultsControllerDelegate> *delegate;
@property (nonatomic, readonly) NSFetchRequest *fetchRequest;
@property (nonatomic, readonly) NSArray *fetchedObjects;
@property (nonatomic, readonly) NSManagedObjectContext *managedObjectContext;
@property (nonatomic, readonly, copy) NSDictionary *rc_sectionsByName;
@property (nonatomic, readonly) NSArray *sectionIndexTitles;
@property (nonatomic, readonly) NSString *sectionNameKeyPath;
@property (nonatomic, readonly) NSArray *sections;

// Image: /System/Library/Frameworks/CoreData.framework/CoreData

+ (id)_CoreDataSectionCachesPath;
+ (unsigned long long)_insertIndexForObject:(id)arg1 inArray:(id)arg2 lowIdx:(long long)arg3 highIdx:(long long)arg4 sortDescriptors:(id)arg5;
+ (void)deleteCacheWithName:(id)arg1;
+ (void)initialize;

- (void)_appendAffectedStoreInfoToData:(id)arg1 adjustedOffset:(long long*)arg2;
- (bool)_computeSectionInfo:(id)arg1 error:(id*)arg2;
- (bool)_computeSectionInfoWithGroupBy:(id)arg1 error:(id*)arg2;
- (void)_core_managedObjectContextDidChange:(id)arg1;
- (void)_core_managedObjectContextDidSave:(id)arg1;
- (id)_createNewSectionForObject:(id)arg1;
- (void)_dumpSectionInfo;
- (id)_fetchedObjects;
- (id)_fetchedObjectsArrayOfObjectIDs;
- (bool)_hasFetchedObjects;
- (unsigned long long)_indexOfFetchedID:(id)arg1;
- (id)_indexPathForIndex:(unsigned long long)arg1;
- (void)_insertObjectInFetchedObjects:(id)arg1 atIndex:(unsigned long long)arg2;
- (bool)_keyPathContainsNonPersistedProperties:(id)arg1;
- (void)_lowerMoveOperationsToUpdatesForSection:(id)arg1 withInsertedObjects:(id)arg2 deletedObjects:(id)arg3 updatedObjects:(id)arg4;
- (void)_makeMutableFetchedObjects;
- (void)_managedObjectContextDidChange:(id)arg1;
- (void)_managedObjectContextDidChangeObjectIDs:(id)arg1;
- (void)_managedObjectContextDidSave:(id)arg1;
- (bool)_objectInResults:(id)arg1;
- (void)_preprocessDeletedObjects:(id)arg1 deletesInfo:(id)arg2 sectionsWithDeletes:(id)arg3;
- (void)_preprocessInsertedObjects:(id)arg1 insertsInfo:(id)arg2 newSectionNames:(id)arg3;
- (void)_preprocessUpdatedObjects:(id)arg1 insertsInfo:(id)arg2 deletesInfo:(id)arg3 updatesInfo:(id)arg4 sectionsWithDeletes:(id)arg5 newSectionNames:(id)arg6 treatAsRefreshes:(id)arg7;
- (void)_recursivePerformBlockAndWait:(id /* block */)arg1 withContext:(id)arg2;
- (void)_removeObjectInFetchedObjectsAtIndex:(unsigned long long)arg1;
- (id)_resolveSectionIndexTitleForSectionName:(id)arg1;
- (bool)_restoreCachedSectionInfo;
- (id)_sectionCachePath;
- (id)_sectionNameForObject:(id)arg1;
- (unsigned long long)_sectionNumberForIndex:(unsigned long long)arg1;
- (id)_sections;
- (bool)_updateCachedStoreInfo;
- (bool)_updateFetchedObjectsWithDeleteChange:(id)arg1;
- (bool)_updateFetchedObjectsWithInsertChange:(id)arg1;
- (bool)_updateFetchedObjectsWithInsertedObjects:(id)arg1 deletedObjects:(id)arg2 updatedObjects:(id)arg3;
- (void)_updateSectionOffsetsStartingAtSection:(id)arg1;
- (id)cacheName;
- (void)dealloc;
- (id)delegate;
- (id)fetchRequest;
- (id)fetchedObjects;
- (id)indexPathForObject:(id)arg1;
- (id)initWithFetchRequest:(id)arg1 managedObjectContext:(id)arg2 sectionNameKeyPath:(id)arg3 cacheName:(id)arg4;
- (id)managedObjectContext;
- (id)objectAtIndexPath:(id)arg1;
- (bool)performFetch:(id*)arg1;
- (long long)sectionForSectionIndexTitle:(id)arg1 atIndex:(long long)arg2;
- (id)sectionIndexTitleForSectionName:(id)arg1;
- (id)sectionIndexTitles;
- (id)sectionNameKeyPath;
- (id)sections;
- (void)setDelegate:(id)arg1;

// Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos

- (id)rc_sectionsByName;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSManagedObjectModel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreData.framework/NSManagedObjectModel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreData.framework/CoreData (866.6)
 */

@interface NSManagedObjectModel : NSObject <NSCoding, NSCopying, NSFastEnumeration, NSSecureCoding> {
    id * _additionalPrivateIvars;
    NSMutableDictionary * _configurations;
    id  _dataForOptimization;
    NSMutableDictionary * _entities;
    NSMutableDictionary * _fetchRequestTemplates;
    struct __managedObjectModelFlags { 
        unsigned int _isInUse : 1; 
        unsigned int _isImmutable : 1; 
        unsigned int _isOptimizedForEncoding : 1; 
        unsigned int _hasEntityWithConstraints : 1; 
        unsigned int _skipUserInfoTombstones : 1; 
        unsigned int _reservedEntityDescription : 27; 
    }  _managedObjectModelFlags;
    id * _optimizationHints;
    NSSet * _versionIdentifiers;
}

@property (setter=_setModelsReferenceIDOffset:, nonatomic) long long _modelsReferenceIDOffset;
@property (readonly) NSArray *configurations;
@property (retain) NSArray *entities;
@property (readonly, copy) NSDictionary *entitiesByName;
@property (readonly, copy) NSDictionary *entityVersionHashesByName;
@property (readonly, copy) NSDictionary *fetchRequestTemplatesByName;
@property (nonatomic, readonly) NSString *ic_versionHash;
@property (retain) NSDictionary *localizationDictionary;
@property (copy) NSSet *versionIdentifiers;

// Image: /System/Library/Frameworks/CoreData.framework/CoreData

+ (long long)_debugOptimizedModelLayout;
+ (void)_deepCollectEntitiesInArray:(id)arg1 entity:(id)arg2;
+ (id)_modelPathsFromBundles:(id)arg1;
+ (id)_newModelFromOptimizedEncoding:(id)arg1 error:(id*)arg2;
+ (void)initialize;
+ (id)mergedModelFromBundles:(id)arg1;
+ (id)mergedModelFromBundles:(id)arg1 forStoreMetadata:(id)arg2;
+ (id)modelByMergingModels:(id)arg1;
+ (id)modelByMergingModels:(id)arg1 forStoreMetadata:(id)arg2;
+ (bool)supportsSecureCoding;

- (void)_addEntities:(id)arg1 toConfiguration:(id)arg2;
- (void)_addEntity:(id)arg1;
- (void)_addVersionIdentifiers:(id)arg1;
- (id)_configurationsByName;
- (void)_createCachesAndOptimizeState;
- (id)_entitiesByVersionHash;
- (id)_entityForName:(id)arg1;
- (id)_entityVersionHashesByNameInStyle:(unsigned long long)arg1;
- (void)_finalizeIndexes;
- (void)_flattenProperties;
- (bool)_hasEntityWithUniquenessConstraints;
- (bool)_hasPrecomputedKeyOrder;
- (id)_initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2;
- (id)_initWithEntities:(id)arg1;
- (bool)_isConfiguration:(id)arg1 inStyle:(unsigned long long)arg2 compatibleWithStoreMetadata:(id)arg3;
- (bool)_isOptimizedForEncoding;
- (bool)_isSkippingUserInfoTombstones;
- (id)_localizationPolicy;
- (void)_markTombstones;
- (id)_modelForVersionHashes:(id)arg1;
- (long long)_modelsReferenceIDOffset;
- (id)_optimizedEncoding:(id*)arg1;
- (id)_precomputedKeysForEntity:(id)arg1;
- (void)_removeEntities:(id)arg1 fromConfiguration:(id)arg2;
- (void)_removeEntity:(id)arg1;
- (void)_removeEntityNamed:(id)arg1;
- (void)_restoreValidation;
- (void)_setIsEditable:(bool)arg1;
- (void)_setIsEditable:(bool)arg1 optimizationStyle:(unsigned long long)arg2;
- (void)_setLocalizationPolicy:(id)arg1;
- (void)_setModelsReferenceIDOffset:(long long)arg1;
- (void)_skipUserInfoTombstones:(bool)arg1;
- (id)_sortedEntitiesForConfiguration:(id)arg1;
- (void)_stripForMigration;
- (void)_throwIfNotEditable;
- (id)_versionIdentifiersAsArray;
- (id)configurations;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x1; id *x2; unsigned long long *x3; unsigned long long x4[5]; }*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)entities;
- (id)entitiesByName;
- (id)entitiesForConfiguration:(id)arg1;
- (id)entityVersionHashesByName;
- (id)fetchRequestFromTemplateWithName:(id)arg1 substitutionVariables:(id)arg2;
- (id)fetchRequestTemplateForName:(id)arg1;
- (id)fetchRequestTemplatesByName;
- (unsigned long long)hash;
- (id)immutableCopy;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithContentsOfOptimizedURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 forStoreMetadata:(id)arg2;
- (bool)isConfiguration:(id)arg1 compatibleWithStoreMetadata:(id)arg2;
- (bool)isEditable;
- (bool)isEqual:(id)arg1;
- (id)localizationDictionary;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (void)setEntities:(id)arg1;
- (void)setEntities:(id)arg1 forConfiguration:(id)arg2;
- (void)setFetchRequestTemplate:(id)arg1 forName:(id)arg2;
- (void)setLocalizationDictionary:(id)arg1;
- (void)setVersionIdentifiers:(id)arg1;
- (id)versionHash;
- (id)versionIdentifiers;

// Image: /System/Library/Frameworks/VideoSubscriberAccount.framework/VideoSubscriberAccount

+ (id)vs_developerModeModelForVersion:(long long)arg1;
+ (id)vs_identityProviderEntityForVersion:(long long)arg1;
+ (id)vs_subscriptionModelForVersion:(long long)arg1;

// Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared

- (id)ic_versionHash;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NSStoreMigrationPolicy.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreData.framework/NSStoreMigrationPolicy.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreData.framework/CoreData (866.6)
 */

@interface NSStoreMigrationPolicy : NSObject {
    NSPersistentStoreCoordinator * _coordinator;
    NSString * _destinationConfiguration;
    NSDictionary * _destinationOptions;
    NSString * _destinationType;
    NSURL * _destinationURL;
    NSMappingModel * _mappingModel;
    NSMigrationManager * _migrationManager;
    void * _reserved2;
    void * _reserved3;
    void * _reserved4;
    NSArray * _resourceBundles;
    NSString * _sourceConfiguration;
    NSDictionary * _sourceMetadata;
    NSManagedObjectModel * _sourceModel;
    NSDictionary * _sourceOptions;
    NSURL * _sourceURL;
    long long  _workingWithSkewedSource;
}

+ (id)destinationURLForMigrationSourceURL:(id)arg1 createDocumentReplacementDirectory:(bool)arg2 error:(id*)arg3;
+ (int)migrationDebugLevel;
+ (id)migrationStoreOptionsFromStoreOptions:(id)arg1;
+ (void)setMigrationDebugLevel:(int)arg1;

- (id)_gatherDataAndPerformMigration:(id*)arg1;
- (id)addMigratedStoreToCoordinator:(id)arg1 withType:(id)arg2 configuration:(id)arg3 URL:(id)arg4 options:(id)arg5 error:(id*)arg6;
- (id)createMigrationManagerForSourceModel:(id)arg1 destinationModel:(id)arg2 error:(id*)arg3;
- (void)dealloc;
- (id)destinationConfiguration;
- (id)destinationConfigurationForMigration:(id)arg1 sourceMetadata:(id)arg2 error:(id*)arg3;
- (id)destinationModel;
- (id)destinationOptions;
- (id)destinationOptionsForMigration:(id)arg1 sourceMetadata:(id)arg2 error:(id*)arg3;
- (id)destinationType;
- (id)destinationTypeForMigration:(id)arg1 sourceMetadata:(id)arg2 error:(id*)arg3;
- (id)destinationURL;
- (void)didPerformMigrationWithManager:(id)arg1;
- (id)externalDataReferencesURLForDestination:(id)arg1 forStoreOfType:(id)arg2;
- (void)handleMigrationError:(id)arg1 inManager:(id)arg2;
- (id)mappingModel;
- (id)mappingModelForSourceModel:(id)arg1 destinationModel:(id)arg2 error:(id*)arg3;
- (bool)migrateStoreAtURL:(id)arg1 toURL:(id)arg2 storeType:(id)arg3 options:(id)arg4 withManager:(id)arg5 error:(id*)arg6;
- (id)migrateStoreAtURL:(id)arg1 withManager:(id)arg2 metadata:(id)arg3 options:(id)arg4 error:(id*)arg5;
- (id)migrationManager;
- (id)persistentStoreCoordinator;
- (id)resourceBundles;
- (void)setDestinationConfiguration:(id)arg1;
- (void)setDestinationOptions:(id)arg1;
- (void)setDestinationType:(id)arg1;
- (void)setDestinationURL:(id)arg1;
- (void)setMappingModel:(id)arg1;
- (void)setMigrationManager:(id)arg1;
- (void)setPersistentStoreCoordinator:(id)arg1;
- (void)setPersistentStoreCoordinator:(id)arg1 sourceURL:(id)arg2 configuration:(id)arg3 metadata:(id)arg4 options:(id)arg5;
- (void)setResourceBundles:(id)arg1;
- (void)setSourceConfiguration:(id)arg1;
- (void)setSourceMetadata:(id)arg1;
- (void)setSourceModel:(id)arg1;
- (void)setSourceOptions:(id)arg1;
- (void)setSourceURL:(id)arg1;
- (id)sourceConfiguration;
- (id)sourceMetadata;
- (id)sourceModel;
- (id)sourceModelForStoreAtURL:(id)arg1 metadata:(id)arg2 error:(id*)arg3;
- (id)sourceOptions;
- (id)sourceType;
- (id)sourceURL;
- (void)willPerformMigrationWithManager:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

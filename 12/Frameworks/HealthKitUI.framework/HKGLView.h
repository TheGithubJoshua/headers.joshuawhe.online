<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HKGLView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/HealthKitUI.framework/HKGLView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/HealthKitUI.framework/HealthKitUI (1)
 */

@interface HKGLView : UIView {
    EAGLContext * _context;
    bool  _contextPushed;
    unsigned int  _depthRenderbuffer;
    CADisplayLink * _displayLink;
    bool  _displayLinkPaused;
    int  _drawableDepthFormat;
    int  _drawableHeight;
    int  _drawableWidth;
    double  _lastUpdateTime;
    unsigned int  _latestDrawError;
    unsigned int  _multisampleColorRenderbuffer;
    unsigned int  _multisampleFramebuffer;
    float  _preferredFramesPerSecond;
    unsigned int  _resolveColorRenderbuffer;
    unsigned int  _resolveFramebuffer;
    UIScreen * _screen;
    bool  _shouldBypassApplicationStateChecking;
    bool  _shouldDeleteFramebuffer;
    bool  _synchronizesWithCA;
    bool  _use4XMSAA;
    bool  _viewIsVisible;
    bool  _viewSnapshottingActive;
    bool  _viewWillMoveToWindow;
}

@property (nonatomic) int drawableDepthFormat;
@property (getter=isPaused, nonatomic) bool paused;
@property (nonatomic) float preferredFramesPerSecond;
@property (nonatomic) bool shouldBypassApplicationStateChecking;
@property (nonatomic) bool synchronizesWithCA;
@property (nonatomic, readonly) double timeSinceLastUpdate;
@property (nonatomic) bool use4XMSAA;
@property (nonatomic, readonly) bool viewIsVisible;

+ (void)clearCachedProgramForVertexShader:(id)arg1 fragmentShader:(id)arg2;
+ (Class)layerClass;

- (void).cxx_destruct;
- (bool)_canDrawContent;
- (void)_context_checkAndRepairFramebuffer;
- (bool)_context_createFramebuffer;
- (void)_context_deleteFramebuffer;
- (void)_context_displayAndPresentFramebuffer:(bool)arg1;
- (void)_context_drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_context_generateSnapshot;
- (void)_context_prepareFramebuffer:(bool*)arg1;
- (bool)_context_presentFramebuffer;
- (void)_context_resolveAndDiscardFramebuffer;
- (bool)_controlsOwnScaleFactor;
- (void)_createDisplayLinkForScreen:(id)arg1;
- (void)_deleteFramebuffer;
- (void)_displayLinkFired;
- (void)_invalidateLastUpdateTime;
- (bool)_isLastUpdateTimeValid;
- (void)_pauseByNotification:(id)arg1;
- (void)_resumeByNotification:(id)arg1;
- (bool)_shouldAllowRendering;
- (void)_update;
- (void)_updateGLLayerIsAsynchronous;
- (void)_updateScreenIfChanged;
- (void)_viewSnapshottingDidEnd;
- (void)_viewSnapshottingWillBegin;
- (void)dealloc;
- (void)didMoveToWindow;
- (void)displayLayer:(id)arg1;
- (unsigned int)drawInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 withContext:(id)arg2;
- (int)drawableDepthFormat;
- (id)initWithContext:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 context:(id)arg2;
- (bool)isPaused;
- (void)layoutSubviews;
- (void)loadVertexShader:(id)arg1 fragmentShader:(id)arg2 inBundle:(id)arg3 forProgram:(unsigned int*)arg4 cache:(bool)arg5;
- (void)loadVertexShaderSource:(id)arg1 fragmentShaderSource:(id)arg2 forProgram:(unsigned int*)arg3;
- (void)performWithContext:(id /* block */)arg1;
- (float)preferredFramesPerSecond;
- (void)setContentScaleFactor:(double)arg1;
- (void)setDrawableDepthFormat:(int)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPaused:(bool)arg1;
- (void)setPreferredFramesPerSecond:(float)arg1;
- (void)setShouldBypassApplicationStateChecking:(bool)arg1;
- (void)setSynchronizesWithCA:(bool)arg1;
- (void)setUse4XMSAA:(bool)arg1;
- (bool)shouldBypassApplicationStateChecking;
- (id)snapshot;
- (bool)synchronizesWithCA;
- (double)timeSinceLastUpdate;
- (void)update;
- (bool)use4XMSAA;
- (bool)viewIsVisible;
- (void)willMoveToSuperview:(id)arg1;
- (void)willMoveToWindow:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

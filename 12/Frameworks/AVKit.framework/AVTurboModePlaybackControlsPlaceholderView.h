<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVTurboModePlaybackControlsPlaceholderView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AVKit.framework/AVTurboModePlaybackControlsPlaceholderView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AVKit.framework/AVKit (448.1.20)
 */

@interface AVTurboModePlaybackControlsPlaceholderView : UIView {
    UIViewPropertyAnimator * _animator;
    id  _buttonTapTarget;
    _UIVisualEffectBackdropView * _captureView;
    SEL  _enterFullScreenAction;
    id  _enterFullScreenButtonTarget;
    UIView * _hidableContentView;
    long long  _includedControlType;
    SEL  _playButtonAction;
    long long  _preferredUnobscuredArea;
    AVButton * _prominentPlayButton;
    UIView * _prominentPlayButtonContainer;
    AVStyleSheet * _styleSheet;
    AVVolumeButtonControl * _volumeButton;
    SEL  _volumeButtonAction;
    UIView * _volumeButtonContainer;
    NSString * _volumeButtonMicaPackageStateName;
}

@property (nonatomic, retain) UIViewPropertyAnimator *animator;
@property (nonatomic) id buttonTapTarget;
@property (nonatomic, readonly) _UIVisualEffectBackdropView *captureView;
@property (nonatomic) SEL enterFullScreenAction;
@property (nonatomic) id enterFullScreenButtonTarget;
@property (nonatomic, readonly) UIView *hidableContentView;
@property (nonatomic) long long includedControlType;
@property (nonatomic) SEL playButtonAction;
@property (nonatomic) long long preferredUnobscuredArea;
@property (nonatomic) AVButton *prominentPlayButton;
@property (nonatomic) UIView *prominentPlayButtonContainer;
@property (nonatomic, retain) AVStyleSheet *styleSheet;
@property (nonatomic) AVVolumeButtonControl *volumeButton;
@property (nonatomic) SEL volumeButtonAction;
@property (nonatomic) UIView *volumeButtonContainer;
@property (nonatomic, copy) NSString *volumeButtonMicaPackageStateName;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForIncludedViewType:(long long)arg1;
- (id)_makeProminentPlayButtonAndContainer;
- (id)_makeVolumeButtonAndContainer;
- (void)_updateFramesAndHitRectInsets;
- (id)_viewForIncludedControlType:(long long)arg1;
- (void)addButtonTapTarget:(id)arg1 playButtonAction:(SEL)arg2 volumeButtonAction:(SEL)arg3;
- (void)addEnterFullScreenButtonTarget:(id)arg1 action:(SEL)arg2;
- (id)animator;
- (id)buttonTapTarget;
- (id)captureView;
- (SEL)enterFullScreenAction;
- (id)enterFullScreenButtonTarget;
- (id)hidableContentView;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (long long)includedControlType;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 styleSheet:(id)arg2 captureView:(id)arg3;
- (void)layoutSubviews;
- (SEL)playButtonAction;
- (long long)preferredUnobscuredArea;
- (id)prominentPlayButton;
- (id)prominentPlayButtonContainer;
- (void)setAnimator:(id)arg1;
- (void)setButtonTapTarget:(id)arg1;
- (void)setEnterFullScreenAction:(SEL)arg1;
- (void)setEnterFullScreenButtonTarget:(id)arg1;
- (void)setIncludedControlType:(long long)arg1;
- (void)setPlayButtonAction:(SEL)arg1;
- (void)setPreferredUnobscuredArea:(long long)arg1;
- (void)setProminentPlayButton:(id)arg1;
- (void)setProminentPlayButtonContainer:(id)arg1;
- (void)setStyleSheet:(id)arg1;
- (void)setVolumeButton:(id)arg1;
- (void)setVolumeButtonAction:(SEL)arg1;
- (void)setVolumeButtonContainer:(id)arg1;
- (void)setVolumeButtonMicaPackageStateName:(id)arg1;
- (id)styleSheet;
- (id)volumeButton;
- (SEL)volumeButtonAction;
- (id)volumeButtonContainer;
- (id)volumeButtonMicaPackageStateName;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

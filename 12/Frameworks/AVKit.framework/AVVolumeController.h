<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVVolumeController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AVKit.framework/AVVolumeController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AVKit.framework/AVKit (448.1.20)
 */

@interface AVVolumeController : NSObject {
    float  _EUVolumeLimit;
    bool  _EUVolumeLimitEnabled;
    bool  _EUVolumeLimitOverridden;
    bool  _canOverrideEUVolumeLimit;
    bool  _changingVolume;
    bool  _currentRouteHasVolumeControl;
    bool  _fullyInitialized;
    NSNumber * _maximumTargetVolumeSinceChangingVolumeBegan;
    bool  _prefersSystemVolumeHUDHidden;
    bool  _prefersSystemVolumeHUDHiddenInternal;
    AVSystemController * _sharedSystemController;
    NSNumber * _targetVolumeInternal;
    float  _volume;
    NSString * _volumeCategory;
    bool  _volumeChangesThrottled;
}

@property (nonatomic) float EUVolumeLimit;
@property (getter=isEUVolumeLimitEnabled, nonatomic) bool EUVolumeLimitEnabled;
@property (getter=isEUVolumeLimitOverridden, nonatomic) bool EUVolumeLimitOverridden;
@property (nonatomic) bool canOverrideEUVolumeLimit;
@property (getter=isChangingVolume, nonatomic) bool changingVolume;
@property (nonatomic) bool currentRouteHasVolumeControl;
@property (nonatomic, readonly) float effectiveVolumeLimit;
@property (getter=isFullyInitialized, nonatomic) bool fullyInitialized;
@property (nonatomic, retain) NSNumber *maximumTargetVolumeSinceChangingVolumeBegan;
@property (nonatomic) bool prefersSystemVolumeHUDHidden;
@property (nonatomic) bool prefersSystemVolumeHUDHiddenInternal;
@property (nonatomic, retain) AVSystemController *sharedSystemController;
@property (nonatomic, retain) NSNumber *targetVolumeInternal;
@property (nonatomic) float volume;
@property (nonatomic, readonly) NSString *volumeCategory;
@property (nonatomic) bool volumeChangesThrottled;

+ (id)clientsPreferringVolumeHUDHidden;
+ (id)sharedVolumeController;

- (void).cxx_destruct;
- (float)EUVolumeLimit;
- (void)_applyProposedVolumeIfNeeded;
- (void)_applyProposedVolumeImmediately;
- (void)_handleCurrentRouteHasVolumeControlDidChangeNotification:(id)arg1;
- (void)_handleEUVolumeLimitDidChangeNotification:(id)arg1;
- (void)_handleSystemControllerServerDiedNotification;
- (void)_handleSystemVolumeDidChangeNotification:(id)arg1;
- (void)_observeSystemController;
- (void)_performOnMainThread:(id /* block */)arg1;
- (void)_unobserveSystemController;
- (void)beginChangingVolume;
- (bool)canOverrideEUVolumeLimit;
- (bool)currentRouteHasVolumeControl;
- (void)dealloc;
- (float)effectiveVolumeLimit;
- (void)endChangingVolume;
- (id)init;
- (bool)isChangingVolume;
- (bool)isEUVolumeLimitEnabled;
- (bool)isEUVolumeLimitOverridden;
- (bool)isFullyInitialized;
- (id)maximumTargetVolumeSinceChangingVolumeBegan;
- (bool)prefersSystemVolumeHUDHidden;
- (bool)prefersSystemVolumeHUDHiddenInternal;
- (void)setCanOverrideEUVolumeLimit:(bool)arg1;
- (void)setChangingVolume:(bool)arg1;
- (void)setClientWithIdentifier:(id)arg1 prefersSystemVolumeHUDHidden:(bool)arg2;
- (void)setCurrentRouteHasVolumeControl:(bool)arg1;
- (void)setEUVolumeLimit:(float)arg1;
- (void)setEUVolumeLimitEnabled:(bool)arg1;
- (void)setEUVolumeLimitOverridden:(bool)arg1;
- (void)setFullyInitialized:(bool)arg1;
- (void)setMaximumTargetVolumeSinceChangingVolumeBegan:(id)arg1;
- (void)setPrefersSystemVolumeHUDHidden:(bool)arg1;
- (void)setPrefersSystemVolumeHUDHiddenInternal:(bool)arg1;
- (void)setSharedSystemController:(id)arg1;
- (void)setSystemVolumeHUDEnabled:(bool)arg1;
- (void)setTargetVolume:(float)arg1;
- (void)setTargetVolumeInternal:(id)arg1;
- (void)setVolume:(float)arg1;
- (void)setVolumeChangesThrottled:(bool)arg1;
- (id)sharedSystemController;
- (id)targetVolumeInternal;
- (float)volume;
- (id)volumeCategory;
- (bool)volumeChangesThrottled;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

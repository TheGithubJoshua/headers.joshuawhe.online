<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVPlaybackControlsVisibilityController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AVKit.framework/AVPlaybackControlsVisibilityController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AVKit.framework/AVKit (448.1.20)
 */

@interface AVPlaybackControlsVisibilityController : NSObject {
    double  _animationDuration;
    bool  _canHideItems;
    <AVPlaybackControlsVisibilityControllerDelegate> * _delegate;
    bool  _hidesItemQuicklyWhenPlaybackBegins;
    bool  _isFlashingControlsVisible;
    NSMapTable * _itemsAndItemInfos;
    AVObservationController * _keyValueObservationController;
    bool  _loadingIndicatorWasShownAndVisibilityNotToggledAfterLoadingIndicatorShown;
    long long  _numberOfUserInteractionsBeingTracked;
    bool  _pictureInPictureActive;
    bool  _playbackWasPausedAndVisibilityNotToggledAfterPausing;
    AVPlayerController * _playerController;
    bool  _popoverPresented;
    bool  _prefersItemsShownForVolumeChangeVisible;
    NSTimer * _prefersItemsShownForVolumeChangeVisibleTimer;
    double  _prefersItemsShownForVolumeChangeVisibleTimerInterval;
    double  _prefersItemsVisibleTimerInterval;
    double  _prefersItemsVisibleTimerIntervalForFlashingControls;
    double  _prefersItemsVisibleTimerIntervalForQuicklyHiding;
    bool  _prefersRegularItemsVisible;
    NSTimer * _prefersRegularItemsVisibleTimer;
    bool  _scrubbing;
    bool  _showsItemsWhileWaitingToPlay;
    bool  _statusBarAppearanceNeedsUpdate;
    bool  _transitionInProgress;
    UIViewPropertyAnimator * _visibilityAnimator;
    bool  _visibilityNeedsUpdate;
}

@property double animationDuration;
@property (nonatomic) bool canHideItems;
@property <AVPlaybackControlsVisibilityControllerDelegate> *delegate;
@property double hideItemsQuicklyTimerInterval;
@property double hideItemsTimerInterval;
@property (getter=isPictureInPictureActive, nonatomic) bool pictureInPictureActive;
@property (nonatomic, retain) AVPlayerController *playerController;
@property (getter=isPopoverPresented, nonatomic) bool popoverPresented;
@property (nonatomic, readonly) bool showsItemPreferingStatusBarVisible;
@property (nonatomic) bool showsItemsWhileWaitingToPlay;
@property double volumeChangeHidePlaybackControlTimerInterval;

- (void).cxx_destruct;
- (bool)_hasItemsThatCanBeHidden;
- (bool)_hasItemsThatCanBeShown;
- (void)_hideItemsShownForVolumeChange;
- (void)_hideRegularItems;
- (id)_itemsPassingTest:(id /* block */)arg1;
- (void)_performForEachItem:(id /* block */)arg1;
- (void)_setVisibilityNeedsUpdate;
- (void)_showItemsShownForVolumeChange;
- (void)_showItemsShownForVolumeChangeAndHideAfterDelay;
- (void)_showRegularItems;
- (void)_showRegularItemsAndHideAfterDelay;
- (void)_showRegularItemsAndHideAfterDelayIfPlaying;
- (void)_startControllingVisibilityIfNeeded;
- (void)_startTimerToHideItemsShownForVolumeChange;
- (void)_startTimerToHideRegularItems;
- (void)_startTimerToHideRegularItemsAfterDelay:(double)arg1 ifPlaying:(bool)arg2;
- (void)_startTimerToHideRegularItemsIfPlaying;
- (void)_stopInitiallyHidingItems;
- (void)_stopInitiallyHidingItemsThatAreShownForVolumeChanges;
- (void)_stopTimerToHideItemsShownForVolumeChangeIfPlaying;
- (void)_stopTimerToHideRegularControlsIfPlaying;
- (void)_updateControlItemVisibilityIfNeeded;
- (void)_updateVisibilityWithCompletionHandler:(id /* block */)arg1;
- (bool)_userIsInteractingWithItems;
- (void)activeAudioRouteOrSystemVolumeDidChange;
- (double)animationDuration;
- (void)beginHidingItemsForTransition;
- (void)beginTrackingUserInteraction;
- (bool)canHideItems;
- (void)dealloc;
- (id)delegate;
- (void)endHidingItemsForTransition;
- (void)endHidingItemsForTransitionAndShowImmediately:(bool)arg1;
- (void)endTrackingUserInteraction;
- (void)flashPlaybackControlsWithDuration:(double)arg1;
- (double)hideItemsQuicklyTimerInterval;
- (double)hideItemsTimerInterval;
- (id)init;
- (bool)isHidingItemsForTransition;
- (bool)isPictureInPictureActive;
- (bool)isPopoverPresented;
- (id)playerController;
- (void)setAnimationDuration:(double)arg1;
- (void)setCanHideItems:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHideItemsQuicklyTimerInterval:(double)arg1;
- (void)setHideItemsTimerInterval:(double)arg1;
- (void)setPictureInPictureActive:(bool)arg1;
- (void)setPlayerController:(id)arg1;
- (void)setPopoverPresented:(bool)arg1;
- (void)setShowsItemsWhileWaitingToPlay:(bool)arg1;
- (void)setVolumeChangeHidePlaybackControlTimerInterval:(double)arg1;
- (bool)showsItemPreferingStatusBarVisible;
- (bool)showsItemsWhileWaitingToPlay;
- (void)startControllingVisibilityOfItem:(id)arg1 visibilityBehaviorOptions:(long long)arg2;
- (void)startHidingItemQuicklyWhenPlaybackBegins;
- (void)stopControllingVisibilityOfItem:(id)arg1;
- (void)stopHidingItemQuicklyWhenPlaybackBegins;
- (void)toggleVisibility;
- (double)volumeChangeHidePlaybackControlTimerInterval;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

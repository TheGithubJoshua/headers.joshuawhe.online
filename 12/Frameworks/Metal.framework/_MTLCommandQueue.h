<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_MTLCommandQueue.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Metal.framework/_MTLCommandQueue.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Metal.framework/Metal (161.6.2)
 */

@interface _MTLCommandQueue : NSObject {
    bool  _StatEnabled;
    unsigned long long  _StatLocations;
    unsigned long long  _StatOptions;
    int  _backgroundTrackingPID;
    NSObject<OS_dispatch_semaphore> * _commandBufferSemaphore;
    NSObject<OS_dispatch_queue> * _commandQueueDispatch;
    NSObject<OS_dispatch_source> * _commandQueueEventSource;
    NSObject<OS_dispatch_queue> * _completionQueueDispatch;
    _MTLDevice * _dev;
    bool  _executionEnabled;
    bool  _forceImmediateSubmissionOnCommitThread;
    unsigned long long  _globalTraceObjectID;
    NSString * _label;
    unsigned long long  _labelTraceID;
    unsigned long long  _listIndex;
    unsigned long long  _maxCommandBufferCount;
    unsigned long long  _numCommandBuffers;
    bool  _openGLQueue;
    NSMutableArray * _pendingQueue;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _pendingQueueLock;
    id /* block */  _perfSampleHandlerBlock;
    NSObject<OS_dispatch_semaphore> * _presentScheduledSemaphore;
    bool  _profilingEnabled;
    unsigned long long  _qosClass;
    long long  _qosRelativePriority;
    bool  _skipRender;
    NSObject<OS_dispatch_group> * _submittedGroup;
    NSMutableArray * _submittedQueue;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    }  _submittedQueueLock;
}

@property (getter=isStatEnabled, nonatomic) bool StatEnabled;
@property (getter=getStatLocations, nonatomic) unsigned long long StatLocations;
@property (getter=getStatOptions, nonatomic) unsigned long long StatOptions;
@property int backgroundTrackingPID;
@property bool executionEnabled;
@property (readonly) unsigned long long globalTraceObjectID;
@property (readonly) bool isOpenGLQueue;
@property (copy) NSString *label;
@property (getter=getListIndex, nonatomic) unsigned long long listIndex;
@property (readonly) unsigned long long maxCommandBufferCount;
@property (nonatomic) unsigned long long numCommandBuffers;
@property (getter=isProfilingEnabled) bool profilingEnabled;
@property (readonly) unsigned long long qosClass;
@property (readonly) long long qosRelativePriority;
@property bool skipRender;

- (bool)_submitAvailableCommandBuffers;
- (void)addPerfSampleHandler:(id /* block */)arg1;
- (void)availableCounters;
- (int)backgroundTrackingPID;
- (void)commandBufferDidComplete:(id)arg1 startTime:(unsigned long long)arg2 completionTime:(unsigned long long)arg3 error:(id)arg4;
- (void)commitCommandBuffer:(id)arg1 wake:(bool)arg2;
- (void)completeCommandBuffers:(id*)arg1 count:(unsigned long long)arg2;
- (void)dealloc;
- (id)description;
- (void)enqueueCommandBuffer:(id)arg1;
- (bool)executionEnabled;
- (void)finish;
- (id)formattedDescription:(unsigned long long)arg1;
- (unsigned long long)getAndIncrementNumCommandBuffers;
- (unsigned long long)getListIndex;
- (unsigned long long)getStatLocations;
- (unsigned long long)getStatOptions;
- (unsigned long long)globalTraceObjectID;
- (id)initWithDevice:(id)arg1;
- (id)initWithDevice:(id)arg1 descriptor:(id)arg2;
- (id)initWithDevice:(id)arg1 maxCommandBufferCount:(unsigned long long)arg2;
- (void)insertDebugCaptureBoundary;
- (bool)isOpenGLQueue;
- (bool)isProfilingEnabled;
- (bool)isStatEnabled;
- (id)label;
- (unsigned long long)maxCommandBufferCount;
- (unsigned long long)numCommandBuffers;
- (unsigned long long)qosClass;
- (long long)qosRelativePriority;
- (int)requestCounters:(id)arg1;
- (int)requestCounters:(id)arg1 withIndex:(unsigned long long)arg2;
- (void)setBackgroundTrackingPID:(int)arg1;
- (void)setExecutionEnabled:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setListIndex:(unsigned long long)arg1;
- (void)setNumCommandBuffers:(unsigned long long)arg1;
- (void)setProfilingEnabled:(bool)arg1;
- (void)setSkipRender:(bool)arg1;
- (void)setStatEnabled:(bool)arg1;
- (void)setStatLocations:(unsigned long long)arg1;
- (void)setStatOptions:(unsigned long long)arg1;
- (void)setSubmissionQueue:(id)arg1;
- (bool)skipRender;
- (bool)submitCommandBuffer:(id)arg1;
- (void)submitCommandBuffers:(const id*)arg1 count:(unsigned long long)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

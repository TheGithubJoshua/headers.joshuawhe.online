<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MTLCompiler.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Metal.framework/MTLCompiler.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Metal.framework/Metal (161.6.2)
 */

@interface MTLCompiler : NSObject {
    struct MTLCompilerConnectionManager { int (**x1)(); } * _compilerConnectionManager;
    unsigned long long  _compilerFlags;
    unsigned int  _compilerId;
    NSObject<OS_dispatch_queue> * _compilerQueue;
    _MTLDevice * _device;
    NSString * _pluginPath;
    struct MTLCompilerCache { int (**x1)(); id x2; int x3; int x4; } * _shaderCache;
}

@property (readonly) struct MTLCompilerConnectionManager { int (**x1)(); }*compilerConnectionManager;
@property (readonly) unsigned long long compilerFlags;
@property (readonly) unsigned int compilerId;
@property (readonly) NSObject<OS_dispatch_queue> *compilerQueue;
@property (readonly, copy) NSString *pluginPath;

- (void)compileFunction:(id)arg1 frameworkData:(id)arg2 driverKeyData:(id)arg3 options:(unsigned long long)arg4 pipelineCache:(id)arg5 completionHandler:(id /* block */)arg6;
- (void)compileFunction:(id)arg1 frameworkData:(id)arg2 driverKeyData:(id)arg3 options:(unsigned long long)arg4 pipelineCache:(id)arg5 sync:(bool)arg6 completionHandler:(id /* block */)arg7;
- (void)compileFunction:(id)arg1 serializedData:(id)arg2 stateData:(id)arg3 options:(unsigned long long)arg4 completionHandler:(id /* block */)arg5;
- (void)compileFunction:(id)arg1 serializedPipelineData:(id)arg2 stateData:(id)arg3 linkDataSize:(unsigned long long)arg4 frameworkLinking:(bool)arg5 options:(unsigned int)arg6 sync:(bool)arg7 completionHandler:(id /* block */)arg8;
- (void)compileFunctionInternal:(id)arg1 frameworkData:(id)arg2 driverKeyData:(id)arg3 frameworkLinking:(bool)arg4 linkDataSize:(unsigned long long)arg5 pipelineCache:(id)arg6 options:(unsigned int)arg7 sync:(bool)arg8 completionHandler:(id /* block */)arg9;
- (void)compileRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)compileRequest:(id)arg1 pipelineCache:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)compileRequest:(id)arg1 pipelineCache:(id)arg2 sync:(bool)arg3 completionHandler:(id /* block */)arg4;
- (struct MTLCompilerConnectionManager { int (**x1)(); }*)compilerConnectionManager;
- (unsigned long long)compilerFlags;
- (unsigned int)compilerId;
- (id)compilerQueue;
- (void)dealloc;
- (void*)getShaderCacheKeys;
- (id)initWithTargetData:(id)arg1 cacheUUID:(struct { unsigned char x1[32]; }*)arg2 pluginPath:(id)arg3 device:(id)arg4 compilerFlags:(unsigned long long)arg5;
- (struct { unsigned int x1; unsigned int x2; })libraryCacheStats;
- (struct { unsigned int x1; unsigned int x2; })pipelineCacheStats;
- (id)pluginPath;
- (void)reflectionWithFunction:(id)arg1 options:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (void)reflectionWithFunction:(id)arg1 options:(unsigned long long)arg2 sync:(bool)arg3 completionHandler:(id /* block */)arg4;
- (void)unloadShaderCaches;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

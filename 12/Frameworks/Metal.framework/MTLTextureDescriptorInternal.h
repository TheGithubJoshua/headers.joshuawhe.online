<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MTLTextureDescriptorInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Metal.framework/MTLTextureDescriptorInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Metal.framework/Metal (161.6.2)
 */

@interface MTLTextureDescriptorInternal : MTLTextureDescriptor {
    struct MTLTextureDescriptorPrivate { 
        unsigned long long textureType; 
        unsigned long long pixelFormat; 
        unsigned long long width; 
        unsigned long long height; 
        unsigned long long depth; 
        unsigned long long mipmapLevelCount; 
        unsigned long long sampleCount; 
        unsigned long long arrayLength; 
        bool zeroFill; 
        unsigned long long rotation; 
        bool framebufferOnly; 
        bool isDrawable; 
        unsigned long long swizzle; 
        unsigned long long compressionMode; 
        union { 
            unsigned long long textureUsage; 
            unsigned long long usage; 
        } ; 
        unsigned long long resourceOptions; 
        bool allowGPUOptimizedContents; 
        bool forceResourceIndex; 
        unsigned int resourceIndex; 
        unsigned long long resolvedUsage; 
        unsigned long long cpuCacheMode; 
        unsigned long long storageMode; 
    }  _private;
}

- (bool)allowGPUOptimizedContents;
- (unsigned long long)arrayLength;
- (unsigned long long)compressionMode;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)cpuCacheMode;
- (unsigned long long)depth;
- (id)description;
- (const struct MTLTextureDescriptorPrivate { unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; bool x9; unsigned long long x10; bool x11; bool x12; unsigned long long x13; unsigned long long x14; union { unsigned long long x_15_1_1; unsigned long long x_15_1_2; } x15; unsigned long long x16; bool x17; bool x18; unsigned int x19; unsigned long long x20; unsigned long long x21; unsigned long long x22; }*)descriptorPrivate;
- (bool)forceResourceIndex;
- (id)formattedDescription:(unsigned long long)arg1;
- (bool)framebufferOnly;
- (unsigned long long)getSwizzle;
- (unsigned long long)hash;
- (unsigned long long)height;
- (id)init;
- (bool)isDrawable;
- (bool)isEqual:(id)arg1;
- (unsigned long long)mipmapLevelCount;
- (unsigned long long)pixelFormat;
- (unsigned long long)resourceIndex;
- (unsigned long long)resourceOptions;
- (unsigned long long)rotation;
- (unsigned long long)sampleCount;
- (void)setAllowGPUOptimizedContents:(bool)arg1;
- (void)setArrayLength:(unsigned long long)arg1;
- (void)setCompressionMode:(unsigned long long)arg1;
- (void)setCpuCacheMode:(unsigned long long)arg1;
- (void)setDepth:(unsigned long long)arg1;
- (void)setForceResourceIndex:(bool)arg1;
- (void)setFramebufferOnly:(bool)arg1;
- (void)setHeight:(unsigned long long)arg1;
- (void)setIsDrawable:(bool)arg1;
- (void)setMipmapLevelCount:(unsigned long long)arg1;
- (void)setPixelFormat:(unsigned long long)arg1;
- (void)setResourceIndex:(unsigned long long)arg1;
- (void)setResourceOptions:(unsigned long long)arg1;
- (void)setRotation:(unsigned long long)arg1;
- (void)setSampleCount:(unsigned long long)arg1;
- (void)setStorageMode:(unsigned long long)arg1;
- (void)setSwizzle:(unsigned long long)arg1;
- (void)setSwizzleAlpha:(unsigned long long)arg1;
- (void)setSwizzleBlue:(unsigned long long)arg1;
- (void)setSwizzleGreen:(unsigned long long)arg1;
- (void)setSwizzleRed:(unsigned long long)arg1;
- (void)setTextureType:(unsigned long long)arg1;
- (void)setTextureUsage:(unsigned long long)arg1;
- (void)setUsage:(unsigned long long)arg1;
- (void)setWidth:(unsigned long long)arg1;
- (unsigned long long)storageMode;
- (unsigned long long)swizzleAlpha;
- (unsigned long long)swizzleBlue;
- (unsigned long long)swizzleGreen;
- (unsigned long long)swizzleRed;
- (unsigned long long)textureType;
- (unsigned long long)textureUsage;
- (unsigned long long)usage;
- (bool)validateWithDevice:(id)arg1;
- (unsigned long long)width;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_SFPageLoadErrorController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/SafariServices.framework/_SFPageLoadErrorController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/SafariServices.framework/SafariServices (604.1)
 */

@interface _SFPageLoadErrorController : NSObject <WBSCertificateWarningPageHandler> {
    NSURL * _certificateFailingURL;
    UINavigationController * _certificateNavigationViewController;
    id /* block */  _certificateRecoveryAttempter;
    struct __SecTrust { } * _certificateTrust;
    _WKRemoteObjectInterface * _certificateWarningPageHandlerInterface;
    bool  _certificateWarningPageHandlerInterfaceInvalidated;
    <WBSCertificateWarningPagePresenter> * _certificateWarningPagePresenterProxy;
    NSTimer * _crashCountResetTimer;
    unsigned long long  _crashesSinceLastSuccessfulLoad;
    <_SFPageLoadErrorControllerDelegate> * _delegate;
    <_SFDialogPresenting> * _dialogPresenter;
    NSURLRequest * _failedRequest;
    bool  _reloadAfterResume;
    bool  _reloadingFailedRequest;
    WKWebView * _webView;
}

@property (nonatomic, readonly) unsigned long long crashesSinceLastSuccessfulLoad;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <_SFPageLoadErrorControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) <_SFDialogPresenting> *dialogPresenter;
@property (nonatomic, readonly) NSURLRequest *failedRequest;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool reloadingFailedRequest;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (id)_certificateWarningPagePresenterProxy;
- (void)_clearCertificateWarningPageHandlerInterface;
- (void)_continueAfterCertificateAlertWithURL:(id)arg1 trust:(struct __SecTrust { }*)arg2 recoveryAttempter:(id /* block */)arg3;
- (void)_continueWithoutCredentialsUsingAlertContext:(id)arg1;
- (void)_dismissCertificateViewButtonTapped;
- (id)_genericMessageForError:(id)arg1;
- (bool)_handleCertificateError:(id)arg1 forURL:(id)arg2 isMainFrame:(bool)arg3 recoveryAttempter:(id /* block */)arg4;
- (void)_handleFrameLoadError:(id)arg1 forURL:(id)arg2 recoveryAttempter:(id /* block */)arg3;
- (void)_loadCertificateWarningPageForContext:(id)arg1;
- (void)_reachabilityChanged:(id)arg1;
- (void)_resetCrashCount:(id)arg1;
- (void)_resetCrashCountSoon;
- (void)_setFailedRequest:(id)arg1;
- (void)_setUpCertificateWarningPageHandlerInterface;
- (void)_showRepeatedWebProcessCrashError:(id)arg1 URLString:(id)arg2;
- (id)_specializedMessageForError:(id)arg1 URL:(id)arg2;
- (id)_titleForError:(id)arg1;
- (void)addAlert:(id)arg1;
- (void)addAlertWithTitle:(id)arg1 bodyText:(id)arg2;
- (void)addDialog:(id)arg1;
- (void)addDisallowedFileURLAlert;
- (void)addDisallowedUseOfJavaScriptAlert;
- (void)addDownloadFailedAlertWithDescription:(id)arg1;
- (void)addFormAlertWithTitle:(id)arg1 decisionHandler:(id /* block */)arg2;
- (void)addInvalidProfileAlert;
- (void)addInvalidURLAlert;
- (void)clearCrashCountResetTimer;
- (void)clearFailedRequest;
- (unsigned long long)crashesSinceLastSuccessfulLoad;
- (void)dealloc;
- (id)delegate;
- (id)dialogPresenter;
- (id)failedRequest;
- (void)goBackButtonClicked;
- (void)handleClientCertificateAuthenticationChallenge:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)handleFrameLoadError:(id)arg1;
- (void)handleSubframeCertificateError:(id)arg1;
- (id)initWithWebView:(id)arg1;
- (void)invalidate;
- (void)openClockSettings;
- (void)performAction:(int)arg1 forAlert:(id)arg2;
- (void)reloadAfterError;
- (bool)reloadingFailedRequest;
- (void)scheduleResetCrashCount;
- (void)setDelegate:(id)arg1;
- (void)setDialogPresenter:(id)arg1;
- (void)showCertificateInformation;
- (void)showErrorPageWithTitle:(id)arg1 bodyText:(id)arg2 forError:(id)arg3;
- (void)showErrorPageWithTitle:(id)arg1 bodyText:(id)arg2 learnMoreLink:(id)arg3 forError:(id)arg4;
- (bool)updateCrashesAndShowCrashError:(id)arg1 URLString:(id)arg2;
- (void)visitInsecureWebsite;
- (void)visitInsecureWebsiteWithTemporaryBypass;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

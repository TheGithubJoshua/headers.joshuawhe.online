<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_SFTabStateData.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/SafariServices.framework/_SFTabStateData.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/SafariServices.framework/SafariServices (604.1)
 */

@interface _SFTabStateData : NSObject {
    NSString * _UUIDString;
    bool  _displayingStandaloneImage;
    double  _lastViewedTime;
    long long  _orderIndex;
    long long  _owningBrowserWindowDatabaseID;
    NSString * _owningBrowserWindowUUIDString;
    bool  _privateBrowsing;
    long long  _readerViewTopScrollOffset;
    int  _readingListBookmarkID;
    NSData * _sessionStateData;
    bool  _showingReader;
    bool  _skipSavingSessionState;
    bool  _skipUpdate;
    NSString * _title;
    unsigned long long  _uncompressedSessionStateDataSize;
    NSString * _url;
    NSString * _userVisibleURL;
    bool  _wasOpenedFromLink;
}

@property (nonatomic, retain) NSString *UUIDString;
@property (nonatomic, readonly) NSData *compressedSessionStateData;
@property (nonatomic) bool displayingStandaloneImage;
@property (nonatomic, readonly) bool isSessionStateDataCompressed;
@property (nonatomic) double lastViewedTime;
@property (nonatomic) long long orderIndex;
@property (nonatomic) long long owningBrowserWindowDatabaseID;
@property (nonatomic, copy) NSString *owningBrowserWindowUUIDString;
@property (nonatomic) bool privateBrowsing;
@property (nonatomic) long long readerViewTopScrollOffset;
@property (nonatomic) int readingListBookmarkID;
@property (nonatomic, retain) NSData *sessionStateData;
@property (nonatomic) bool showingReader;
@property (nonatomic) bool skipSavingSessionState;
@property (nonatomic) bool skipUpdate;
@property (nonatomic, retain) NSString *title;
@property (nonatomic) unsigned long long uncompressedSessionStateDataSize;
@property (nonatomic, retain) NSString *url;
@property (nonatomic, retain) NSString *userVisibleURL;
@property (nonatomic) bool wasOpenedFromLink;

+ (id)uncompressedDataWithRawData:(id)arg1 uncompressedSize:(unsigned long long)arg2;

- (void).cxx_destruct;
- (id)UUIDString;
- (void)_uncompressSessionStateDataIfNeeded;
- (id)compressedSessionStateData;
- (bool)displayingStandaloneImage;
- (id)initWithDictionary:(id)arg1;
- (id)initWithSQLiteRow:(id)arg1;
- (bool)isSessionStateDataCompressed;
- (double)lastViewedTime;
- (long long)orderIndex;
- (long long)owningBrowserWindowDatabaseID;
- (id)owningBrowserWindowUUIDString;
- (bool)privateBrowsing;
- (long long)readerViewTopScrollOffset;
- (int)readingListBookmarkID;
- (id)sessionStateData;
- (void)setDisplayingStandaloneImage:(bool)arg1;
- (void)setLastViewedTime:(double)arg1;
- (void)setOrderIndex:(long long)arg1;
- (void)setOwningBrowserWindowDatabaseID:(long long)arg1;
- (void)setOwningBrowserWindowUUIDString:(id)arg1;
- (void)setPrivateBrowsing:(bool)arg1;
- (void)setReaderViewTopScrollOffset:(long long)arg1;
- (void)setReadingListBookmarkID:(int)arg1;
- (void)setSessionStateData:(id)arg1;
- (void)setShowingReader:(bool)arg1;
- (void)setSkipSavingSessionState:(bool)arg1;
- (void)setSkipUpdate:(bool)arg1;
- (void)setTitle:(id)arg1;
- (void)setUUIDString:(id)arg1;
- (void)setUncompressedSessionStateDataSize:(unsigned long long)arg1;
- (void)setUrl:(id)arg1;
- (void)setUserVisibleURL:(id)arg1;
- (void)setWasOpenedFromLink:(bool)arg1;
- (bool)showingReader;
- (bool)skipSavingSessionState;
- (bool)skipUpdate;
- (id)title;
- (id)toDictionary;
- (unsigned long long)uncompressedSessionStateDataSize;
- (id)url;
- (id)userVisibleURL;
- (bool)wasOpenedFromLink;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

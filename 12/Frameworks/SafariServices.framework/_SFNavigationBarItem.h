<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_SFNavigationBarItem.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/SafariServices.framework/_SFNavigationBarItem.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/SafariServices.framework/SafariServices (604.1)
 */

@interface _SFNavigationBarItem : NSObject {
    NSString * _customPlaceholderText;
    bool  _hasFocusedSensitiveFieldOnCurrentPage;
    bool  _lockIconHasEVCertificateTint;
    unsigned long long  _mediaCaptureDeviceIcon;
    _SFNavigationBar * _navigationBar;
    bool  _overrideBarStyleForSecurityWarning;
    _SFFluidProgressView * _progressView;
    bool  _readerButtonSelected;
    bool  _showsLockIcon;
    bool  _showsNotSecureAnnotation;
    bool  _showsReaderAvailabilityText;
    bool  _showsReaderButton;
    bool  _showsSearchIndicator;
    bool  _showsStopReloadButtons;
    unsigned long long  _startIndexOfTextInExpandedText;
    bool  _stopReloadButtonShowsStop;
    NSString * _text;
    bool  _textHasEVCertificateTint;
    NSString * _textWhenExpanded;
}

@property (nonatomic, copy) NSString *customPlaceholderText;
@property (nonatomic) bool hasFocusedSensitiveFieldOnCurrentPage;
@property (nonatomic) bool lockIconHasEVCertificateTint;
@property (nonatomic) unsigned long long mediaCaptureDeviceIcon;
@property (setter=_setNavigationBar:, nonatomic) _SFNavigationBar *navigationBar;
@property (nonatomic) bool overrideBarStyleForSecurityWarning;
@property (nonatomic, retain) _SFFluidProgressView *progressView;
@property (nonatomic) bool readerButtonSelected;
@property (nonatomic) bool showsLockIcon;
@property (nonatomic) bool showsNotSecureAnnotation;
@property (nonatomic, readonly) bool showsReaderAvailabilityText;
@property (nonatomic) bool showsReaderButton;
@property (nonatomic) bool showsSearchIndicator;
@property (nonatomic) bool showsStopReloadButtons;
@property (nonatomic, readonly) unsigned long long startIndexOfTextInExpandedText;
@property (nonatomic) bool stopReloadButtonShowsStop;
@property (nonatomic, readonly) NSString *text;
@property (nonatomic) bool textHasEVCertificateTint;
@property (nonatomic, readonly) NSString *textWhenExpanded;

- (void).cxx_destruct;
- (void)_setNavigationBar:(id)arg1;
- (id)customPlaceholderText;
- (bool)hasFocusedSensitiveFieldOnCurrentPage;
- (id)init;
- (bool)lockIconHasEVCertificateTint;
- (unsigned long long)mediaCaptureDeviceIcon;
- (id)navigationBar;
- (bool)overrideBarStyleForSecurityWarning;
- (id)progressView;
- (bool)readerButtonSelected;
- (void)setCustomPlaceholderText:(id)arg1;
- (void)setHasFocusedSensitiveFieldOnCurrentPage:(bool)arg1;
- (void)setLockIconHasEVCertificateTint:(bool)arg1;
- (void)setMediaCaptureDeviceIcon:(unsigned long long)arg1;
- (void)setOverrideBarStyleForSecurityWarning:(bool)arg1;
- (void)setProgressView:(id)arg1;
- (void)setReaderButtonSelected:(bool)arg1;
- (void)setShowsLockIcon:(bool)arg1;
- (void)setShowsNotSecureAnnotation:(bool)arg1;
- (void)setShowsNotSecureAnnotation:(bool)arg1 hasFocusedSensitiveField:(bool)arg2;
- (void)setShowsReaderButton:(bool)arg1;
- (void)setShowsReaderButton:(bool)arg1 showsAvailabilityText:(bool)arg2;
- (void)setShowsSearchIndicator:(bool)arg1;
- (void)setShowsStopReloadButtons:(bool)arg1;
- (void)setStopReloadButtonShowsStop:(bool)arg1;
- (void)setText:(id)arg1 textWhenExpanded:(id)arg2 startIndex:(unsigned long long)arg3;
- (void)setTextHasEVCertificateTint:(bool)arg1;
- (bool)showsLockIcon;
- (bool)showsNotSecureAnnotation;
- (bool)showsReaderAvailabilityText;
- (bool)showsReaderButton;
- (bool)showsSearchIndicator;
- (bool)showsStopReloadButtons;
- (unsigned long long)startIndexOfTextInExpandedText;
- (bool)stopReloadButtonShowsStop;
- (id)text;
- (bool)textHasEVCertificateTint;
- (id)textWhenExpanded;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

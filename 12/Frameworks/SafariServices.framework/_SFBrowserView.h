<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_SFBrowserView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/SafariServices.framework/_SFBrowserView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/SafariServices.framework/SafariServices (604.1)
 */

@interface _SFBrowserView : UIView {
    double  _bottomBarOffset;
    UIView * _contentContainerView;
    bool  _contentReadyForDisplay;
    _SFCrashBanner * _crashBanner;
    double  _crashBannerOffset;
    WKWebView * _currentWebView;
    <SFBrowserViewDelegate> * _delegate;
    bool  _hasReceivedTouchEvents;
    double  _minimalUITopOffset;
    _SFNavigationBar * _navigationBar;
    unsigned long long  _navigationBarBehavior;
    _SFLinkPreviewHeader * _previewHeader;
    UIView * _scrollToTopView;
    bool  _shouldUseScrollToTopView;
    UIView * _statusBarBackgroundView;
    _SFBrowserToolbar * _toolbar;
    double  _topBarHeight;
}

@property (nonatomic) double bottomBarOffset;
@property (nonatomic, readonly) UIView *contentContainerView;
@property (nonatomic, retain) _SFCrashBanner *crashBanner;
@property (nonatomic) double crashBannerOffset;
@property (nonatomic, readonly) WKWebView *currentWebView;
@property (nonatomic) <SFBrowserViewDelegate> *delegate;
@property (nonatomic, readonly) bool hasReceivedTouchEvents;
@property (nonatomic) double minimalUITopOffset;
@property (nonatomic, retain) _SFNavigationBar *navigationBar;
@property (nonatomic) unsigned long long navigationBarBehavior;
@property (nonatomic, readonly) double navigationBarOffset;
@property (nonatomic, retain) _SFLinkPreviewHeader *previewHeader;
@property (nonatomic, readonly) UIView *scrollToTopView;
@property (nonatomic) bool shouldUseScrollToTopView;
@property (nonatomic, retain) UIView *statusBarBackgroundView;
@property (nonatomic, retain) _SFBrowserToolbar *toolbar;
@property (nonatomic) double topBarHeight;

- (void).cxx_destruct;
- (void)addWebView:(id)arg1;
- (double)bottomBarOffset;
- (id)contentContainerView;
- (id)crashBanner;
- (double)crashBannerOffset;
- (id)currentWebView;
- (id)delegate;
- (bool)hasReceivedTouchEvents;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (double)minimalUITopOffset;
- (id)navigationBar;
- (unsigned long long)navigationBarBehavior;
- (double)navigationBarOffset;
- (id)previewHeader;
- (id)scrollToTopView;
- (void)setBottomBarOffset:(double)arg1;
- (void)setContentReadyForDisplay;
- (void)setCrashBanner:(id)arg1;
- (void)setCrashBannerOffset:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setMinimalUITopOffset:(double)arg1;
- (void)setNavigationBar:(id)arg1;
- (void)setNavigationBarBehavior:(unsigned long long)arg1;
- (void)setPreviewHeader:(id)arg1;
- (void)setShouldUseScrollToTopView:(bool)arg1;
- (void)setStatusBarBackgroundView:(id)arg1;
- (void)setToolbar:(id)arg1;
- (void)setTopBarHeight:(double)arg1;
- (bool)shouldUseScrollToTopView;
- (id)statusBarBackgroundView;
- (id)toolbar;
- (double)topBarHeight;
- (void)updateDismissButtonStyle:(long long)arg1;
- (void)updateNavigationBarTintColor:(id)arg1;
- (void)updatePreviewHeader;
- (void)updateToolbarTintColor:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

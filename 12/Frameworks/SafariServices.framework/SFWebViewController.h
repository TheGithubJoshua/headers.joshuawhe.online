<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SFWebViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/SafariServices.framework/SFWebViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/SafariServices.framework/SafariServices (604.1)
 */

@interface SFWebViewController : UIViewController <SFFormAutoFillControllerDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _SFDialogControllerDelegate, _SFDialogPresenting, _SFDialogViewControllerPresenting, _SFWebViewDelegate, _WKInputDelegate> {
    _SFFormAutoFillController * _autoFillController;
    <SFWebViewControllerDelegate> * _delegate;
    _SFDialogController * _dialogController;
    bool  _didFinishDocumentLoad;
    bool  _didFirstLayout;
    bool  _didFirstVisuallyNonEmptyLayout;
    NSString * _domainWhereUserDeclinedAutomaticStrongPassword;
    bool  _hasFocusedInputFieldOnCurrentPage;
    bool  _loading;
    WBSOneTimeCodeMonitor * _oneTimeCodeMonitor;
    bool  _shouldSuppressDialogsThatBlockWebProcess;
    WKWebViewConfiguration * _webViewConfiguration;
}

@property (nonatomic, readonly) _SFAuthenticationContext *autoFillAuthenticationContext;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <SFWebViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) _SFDialogController *dialogController;
@property (nonatomic, readonly) bool didFirstVisuallyNonEmptyLayout;
@property (nonatomic, readonly) bool hasFocusedInputFieldOnCurrentPage;
@property (readonly) unsigned long long hash;
@property (getter=isLoading, nonatomic) bool loading;
@property (readonly) Class superclass;
@property (nonatomic, readonly) WKWebView *webView;
@property (nonatomic, readonly) WKWebViewConfiguration *webViewConfiguration;

- (void).cxx_destruct;
- (id)_actionsForElement:(id)arg1 defaultActions:(id)arg2 isPreviewing:(bool)arg3;
- (int)_analyticsClient;
- (void)_automaticPasswordInputViewNotification:(id)arg1;
- (void)_beginOneTimeCodeMonitoringIfNecessary;
- (id)_presentingViewControllerForWebView:(id)arg1;
- (void)_userDeclinedAutomaticStrongPasswordForCurrentDomain;
- (void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2;
- (id)_webView:(id)arg1 actionsForElement:(id)arg2 defaultActions:(id)arg3;
- (void)_webView:(id)arg1 commitPreviewedViewController:(id)arg2;
- (void)_webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4 completionHandler:(id /* block */)arg5;
- (long long)_webView:(id)arg1 dataOwnerForDragSession:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDropSession:(id)arg2;
- (long long)_webView:(id)arg1 decidePolicyForFocusedElement:(id)arg2;
- (void)_webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 userInfo:(id)arg3 decisionHandler:(id /* block */)arg4;
- (void)_webView:(id)arg1 didChangeSafeAreaShouldAffectObscuredInsets:(bool)arg2;
- (void)_webView:(id)arg1 didResignInputElementStrongPasswordAppearanceWithUserInfo:(id)arg2;
- (void)_webView:(id)arg1 didStartInputSession:(id)arg2;
- (bool)_webView:(id)arg1 focusRequiresStrongPasswordAssistance:(id)arg2;
- (void)_webView:(id)arg1 insertTextSuggestion:(id)arg2 inInputSession:(id)arg3;
- (void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(long long)arg3;
- (void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2;
- (id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4;
- (void)_webView:(id)arg1 printFrame:(id)arg2;
- (void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2;
- (void)_webView:(id)arg1 requestGeolocationAuthorizationForURL:(id)arg2 frame:(id)arg3 decisionHandler:(id /* block */)arg4;
- (void)_webView:(id)arg1 requestStorageAccessPanelForDomain:(id)arg2 underCurrentDomain:(id)arg3 completionHandler:(id /* block */)arg4;
- (bool)_webView:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;
- (void)_webView:(id)arg1 willPerformClientRedirectToURL:(id)arg2 delay:(double)arg3;
- (void)_webView:(id)arg1 willStartInputSession:(id)arg2;
- (void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(id /* block */)arg4;
- (void)_webViewDidCancelClientRedirect:(id)arg1;
- (void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)_webViewDidEnterFullscreen:(id)arg1;
- (void)_webViewDidExitFullscreen:(id)arg1;
- (void)_webViewWebProcessDidCrash:(id)arg1;
- (id)autoFillAuthenticationContext;
- (void)dealloc;
- (id)delegate;
- (id)dialogController;
- (void)dialogController:(id)arg1 dismissViewController:(id)arg2 withAdditionalAnimations:(id /* block */)arg3;
- (void)dialogController:(id)arg1 presentViewController:(id)arg2 withAdditionalAnimations:(id /* block */)arg3;
- (long long)dialogController:(id)arg1 presentationPolicyForDialog:(id)arg2;
- (void)dialogController:(id)arg1 willPresentDialog:(id)arg2;
- (bool)didFirstVisuallyNonEmptyLayout;
- (bool)formAutoFillControllerCanPrefillForm:(id)arg1;
- (void)formAutoFillControllerDidFocusSensitiveFormField:(id)arg1;
- (bool)formAutoFillControllerDidUserDeclineAutomaticStrongPasswordForCurrentDomain:(id)arg1;
- (void)formAutoFillControllerGetAuthenticationForAutoFill:(id)arg1 completion:(id /* block */)arg2;
- (id)formAutoFillControllerOneTimeCodeMonitor:(id)arg1;
- (bool)formAutoFillControllerShouldDisableStreamlinedLogin:(id)arg1;
- (bool)formAutoFillControllerShouldShowIconsInPasswordPicker:(id)arg1;
- (id)formAutoFillControllerURLForFormAutoFill:(id)arg1;
- (void)formAutoFillControllerUserChoseToUseGeneratedPassword:(id)arg1;
- (bool)hasFocusedInputFieldOnCurrentPage;
- (id)initWithWebViewConfiguration:(id)arg1;
- (bool)isLoading;
- (void)loadView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)presentDialog:(id)arg1 sender:(id)arg2;
- (void)presentViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)setDelegate:(id)arg1;
- (void)setLoading:(bool)arg1;
- (void)sfWebViewDidBecomeFirstResponder:(id)arg1;
- (void)sfWebViewDidChangeSafeAreaInsets:(id)arg1;
- (void)sfWebViewDidEndFormControlInteraction:(id)arg1;
- (id)webView;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(id /* block */)arg4;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)webViewConfiguration;
- (void)webViewDidClose:(id)arg1;
- (void)willActivateWebViewController;
- (void)willBeginUserInitiatedNavigation;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

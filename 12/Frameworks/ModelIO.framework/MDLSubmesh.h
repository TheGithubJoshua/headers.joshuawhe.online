<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MDLSubmesh.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ModelIO.framework/MDLSubmesh.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ModelIO.framework/ModelIO (1)
 */

@interface MDLSubmesh : NSObject <MDLNamed> {
    NSArray * _faceIndexing;
    long long  _geometryType;
    <MDLMeshBuffer> * _indexBuffer;
    unsigned long long  _indexCount;
    unsigned long long  _indexType;
    MDLMaterial * _material;
    NSString * _name;
    MDLSubmeshTopology * _topology;
}

@property (nonatomic, retain) NSArray *faceIndexing;
@property (nonatomic, readonly) long long geometryType;
@property (nonatomic, readonly, retain) <MDLMeshBuffer> *indexBuffer;
@property (nonatomic, readonly) unsigned long long indexCount;
@property (nonatomic, readonly) unsigned long long indexType;
@property (nonatomic, retain) MDLMaterial *material;
@property (nonatomic, copy) NSString *name;
@property (nonatomic, retain) MDLSubmeshTopology *topology;

// Image: /System/Library/Frameworks/ModelIO.framework/ModelIO

- (void).cxx_destruct;
- (struct MDLAABB { })boundingBoxForMesh:(id)arg1;
- (void)debugPrintToFile:(struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; }*)arg1;
- (id)faceIndexing;
- (long long)geometryType;
- (id)indexBuffer;
- (id)indexBufferAsIndexType:(unsigned long long)arg1;
- (unsigned long long)indexCount;
- (unsigned long long)indexType;
- (id)initWithIndexBuffer:(id)arg1 indexCount:(unsigned long long)arg2 indexType:(unsigned long long)arg3 geometryType:(long long)arg4 material:(id)arg5;
- (id)initWithMDLSubmesh:(id)arg1 indexType:(unsigned long long)arg2 geometryType:(long long)arg3;
- (id)initWithName:(id)arg1 indexBuffer:(id)arg2 indexCount:(unsigned long long)arg3 indexType:(unsigned long long)arg4 faceIndexing:(id)arg5 geometryType:(long long)arg6 material:(id)arg7 topology:(id)arg8;
- (id)initWithName:(id)arg1 indexBuffer:(id)arg2 indexCount:(unsigned long long)arg3 indexType:(unsigned long long)arg4 geometryType:(long long)arg5 material:(id)arg6;
- (id)initWithName:(id)arg1 indexBuffer:(id)arg2 indexCount:(unsigned long long)arg3 indexType:(unsigned long long)arg4 geometryType:(long long)arg5 material:(id)arg6 topology:(id)arg7;
- (id)material;
- (id)name;
- (void)setFaceIndexing:(id)arg1;
- (void)setMaterial:(id)arg1;
- (void)setName:(id)arg1;
- (void)setTopology:(id)arg1;
- (id)topology;

// Image: /System/Library/Frameworks/SceneKit.framework/SceneKit

+ (id)newSubmeshWithGeometryData:(id)arg1 indexBufferLength:(unsigned long long)arg2 interleaved:(bool)arg3 channelCount:(unsigned long long)arg4 channelIdx:(unsigned long long)arg5 bytesPerIndex:(unsigned long long)arg6 indexType:(unsigned long long)arg7 geometryType:(long long)arg8 allocator:(id)arg9 indexCount:(unsigned long long)arg10 topology:(id)arg11;
+ (id)newSubmeshWithSCNGeometryElement:(id)arg1 bufferAllocator:(id)arg2;
+ (id)newSubmeshWithSCNGeometryElement:(id)arg1 bufferAllocator:(id)arg2 positionSourceChannel:(unsigned long long)arg3;
+ (id)newSubmeshWithUniquedIndexData:(id)arg1 andSCNGeometryElement:(id)arg2 bufferAllocator:(id)arg3;
+ (id)submeshWithSCNGeometryElement:(id)arg1;
+ (id)submeshWithSCNGeometryElement:(id)arg1 bufferAllocator:(id)arg2;
+ (id)submeshWithSCNGeometryElement:(id)arg1 bufferAllocator:(id)arg2 positionSourceChannel:(unsigned long long)arg3;
+ (id)submeshWithUniquedIndexData:(id)arg1 andSCNGeometryElement:(id)arg2 bufferAllocator:(id)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MDLScene.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ModelIO.framework/MDLScene.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ModelIO.framework/ModelIO (1)
 */

@interface MDLScene : NSObject {
    NSMutableArray * _objects;
    /* Warning: unhandled struct encoding: '{vector<MDLLight *, std::__1::allocator<MDLLight *> >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<MDLLight *__strong *, std::__1::allocator<MDLLight *> >="__value_"^@}}' */ struct vector<MDLLight *, std::__1::allocator<MDLLight *> > { 
        __end_ **__begin_; 
    }  _sceneLights;
    struct mutex { struct _opaque_pthread_mutex_t { long long x_1_1_1; BOOL x_1_1_2[56]; } x1; } * _sceneMutex;
    struct vector<ModelIO::RTRenderable *, std::__1::allocator<ModelIO::RTRenderable *> > { 
        struct RTRenderable {} **__begin_; 
        struct RTRenderable {} **__end_; 
        struct __compressed_pair<ModelIO::RTRenderable **, std::__1::allocator<ModelIO::RTRenderable *> > { 
            struct RTRenderable {} **__value_; 
        } __end_cap_; 
    }  _sceneObjects;
    int  _signature;
}

@property (nonatomic, readonly, retain) NSArray *objects;

- (id).cxx_construct;
- (void).cxx_destruct;
- (int)acquireLockGuard;
- (void)addObject:(id)arg1;
- (bool)castRayFrom:(void *)arg1 withDirection:(void *)arg2 usingCamera:(void *)arg3 result:(void *)arg4; // needs 4 arg types, found 2: struct RTCamera { int (**x1)(); unsigned long long x2; unsigned long long x3; float x4; float x5; int x6; float *x7; id **x8; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_9_1_1[4]; } x9; struct RTRaySegment {} *x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; }*, struct RTIntersectionResult { float x1; struct RTGeometry {} *x2; id x3; }*
- (void)clear;
- (void)dealloc;
- (void)hitTestRayFrom:(void *)arg1 withDirection:(void *)arg2 usingCamera:(void *)arg3; // needs 3 arg types, found 1: id
- (id)init;
- (id)objects;
- (id)raytraceSceneWithCamera:(void *)arg1 reflection:(void *)arg2 irradiance:(void *)arg3 size:(void *)arg4; // needs 4 arg types, found 3: const struct RTCamera { int (**x1)(); unsigned long long x2; unsigned long long x3; float x4; float x5; int x6; float *x7; id **x8; struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_9_1_1[4]; } x9; struct RTRaySegment {} *x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; float x20; }*, id, id
- (void)releaseLockGuard:(int)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

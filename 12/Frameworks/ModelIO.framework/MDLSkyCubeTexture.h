<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MDLSkyCubeTexture.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ModelIO.framework/MDLSkyCubeTexture.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ModelIO.framework/ModelIO (1)
 */

@interface MDLSkyCubeTexture : MDLTexture {
    float  _brightness;
    float  _contrast;
    float  _exposure;
    float  _gamma;
    float  _groundAlbedo;
    struct CGColor { } * _groundColor;
    void _highDynamicRangeCompression;
    float  _highDynamicRangeCompressionLimit;
    float  _horizonElevation;
    float  _saturation;
    struct SkyDescriptor { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; struct Detail {} *x19; unsigned int x20; unsigned int x21; float x22; float x23; float x24; float x25; /* Warning: Unrecognized filer type: '}' using 'void*' */ void**x26; } * _sky;
    float  _sunAzimuth;
    float  _sunElevation;
    float  _turbidity;
    float  _upperAtmosphereScattering;
}

@property (nonatomic) float brightness;
@property (nonatomic) float contrast;
@property (nonatomic) float exposure;
@property (nonatomic) float gamma;
@property (nonatomic) float groundAlbedo;
@property (nonatomic) struct CGColor { }*groundColor;
@property (nonatomic) void highDynamicRangeCompression;
@property (nonatomic) float horizonElevation;
@property (nonatomic) float saturation;
@property (nonatomic) float sunAzimuth;
@property (nonatomic) float sunElevation;
@property (nonatomic) float turbidity;
@property (nonatomic) float upperAtmosphereScattering;

- (float)brightness;
- (float)contrast;
- (void)dealloc;
- (float)exposure;
- (float)gamma;
- (float)groundAlbedo;
- (struct CGColor { }*)groundColor;
- (void)highDynamicRangeCompression;
- (float)horizonElevation;
- (id)initWithName:(void *)arg1 channelEncoding:(void *)arg2 textureDimensions:(void *)arg3 turbidity:(void *)arg4 sunElevation:(void *)arg5 sunAzimuth:(void *)arg6 upperAtmosphereScattering:(void *)arg7 groundAlbedo:(void *)arg8; // needs 8 arg types, found 7: id, long long, float, float, float, float, float
- (id)initWithName:(void *)arg1 channelEncoding:(void *)arg2 textureDimensions:(void *)arg3 turbidity:(void *)arg4 sunElevation:(void *)arg5 upperAtmosphereScattering:(void *)arg6 groundAlbedo:(void *)arg7; // needs 7 arg types, found 6: id, long long, float, float, float, float
- (float)saturation;
- (void)setBrightness:(float)arg1;
- (void)setContrast:(float)arg1;
- (void)setExposure:(float)arg1;
- (void)setGamma:(float)arg1;
- (void)setGroundAlbedo:(float)arg1;
- (void)setGroundColor:(struct CGColor { }*)arg1;
- (void)setHighDynamicRangeCompression;
- (void)setHorizonElevation:(float)arg1;
- (void)setSaturation:(float)arg1;
- (void)setSunAzimuth:(float)arg1;
- (void)setSunElevation:(float)arg1;
- (void)setTurbidity:(float)arg1;
- (void)setUpperAtmosphereScattering:(float)arg1;
- (float)sunAzimuth;
- (float)sunElevation;
- (float)turbidity;
- (void)updateTexture;
- (float)upperAtmosphereScattering;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

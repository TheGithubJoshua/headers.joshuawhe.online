<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WKSwipeTransitionController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/WebKit.framework/WKSwipeTransitionController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/WebKit.framework/WebKit (8607.3.18)
 */

@interface WKSwipeTransitionController : NSObject <_UINavigationInteractiveTransitionBaseDelegate> {
    struct RetainPtr<_UINavigationInteractiveTransitionBase> { 
        void *m_ptr; 
    }  _backTransitionController;
    struct RetainPtr<_UINavigationInteractiveTransitionBase> { 
        void *m_ptr; 
    }  _forwardTransitionController;
    struct ViewGestureController { int (**x1)(); struct WebPageProxy {} *x2; int x3; bool x4; struct Timer<WebKit::ViewGestureController> { int (**x_5_1_1)(); struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop {} *x_2_2_1; } x_5_1_2; struct RetainPtr<__CFRunLoopTimer *> { void *x_3_2_1; } x_5_1_3; struct ViewGestureController {} *x_5_1_4; } x5; struct Color { union { unsigned long long x_1_2_1; struct ExtendedColor {} *x_1_2_2; } x_6_1_1; } x6; struct WeakPtr<WebKit::WebPageProxy> { struct RefPtr<WTF::WeakReference<WebKit::WebPageProxy>, WTF::DumbPtrTraits<WTF::WeakReference<WebKit::WebPageProxy> > > { struct WeakReference<WebKit::WebPageProxy> {} *x_1_2_1; } x_7_1_1; } x7; struct RefPtr<WebKit::WebPageProxy, WTF::DumbPtrTraits<WebKit::WebPageProxy> > { struct WebPageProxy {} *x_8_1_1; } x8; unsigned long long x9; id x10; struct RetainPtr<UIView> { void *x_11_1_1; } x11; struct RetainPtr<UIView> { void *x_12_1_1; } x12; struct RetainPtr<UIView> { void *x_13_1_1; } x13; struct RetainPtr<WKSwipeTransitionController> { void *x_14_1_1; } x14; } * _gestureController;
    struct WeakObjCPtr<UIView> { 
        id m_weakReference; 
    }  _gestureRecognizerView;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (id).cxx_construct;
- (void).cxx_destruct;
- (int)directionForTransition:(id)arg1;
- (id)gestureRecognizerForInteractiveTransition:(id)arg1 WithTarget:(id)arg2 action:(SEL)arg3;
- (id)initWithViewGestureController:(struct ViewGestureController { int (**x1)(); struct WebPageProxy {} *x2; int x3; bool x4; struct Timer<WebKit::ViewGestureController> { int (**x_5_1_1)(); struct Ref<WTF::RunLoop, WTF::DumbPtrTraits<WTF::RunLoop> > { struct RunLoop {} *x_2_2_1; } x_5_1_2; struct RetainPtr<__CFRunLoopTimer *> { void *x_3_2_1; } x_5_1_3; struct ViewGestureController {} *x_5_1_4; } x5; struct Color { union { unsigned long long x_1_2_1; struct ExtendedColor {} *x_1_2_2; } x_6_1_1; } x6; struct WeakPtr<WebKit::WebPageProxy> { struct RefPtr<WTF::WeakReference<WebKit::WebPageProxy>, WTF::DumbPtrTraits<WTF::WeakReference<WebKit::WebPageProxy> > > { struct WeakReference<WebKit::WebPageProxy> {} *x_1_2_1; } x_7_1_1; } x7; struct RefPtr<WebKit::WebPageProxy, WTF::DumbPtrTraits<WebKit::WebPageProxy> > { struct WebPageProxy {} *x_8_1_1; } x8; unsigned long long x9; id x10; struct RetainPtr<UIView> { void *x_11_1_1; } x11; struct RetainPtr<UIView> { void *x_12_1_1; } x12; struct RetainPtr<UIView> { void *x_13_1_1; } x13; struct RetainPtr<WKSwipeTransitionController> { void *x_14_1_1; } x14; }*)arg1 gestureRecognizerView:(id)arg2;
- (bool)interactiveTransition:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3;
- (bool)interactiveTransition:(id)arg1 gestureRecognizer:(id)arg2 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg3;
- (void)invalidate;
- (bool)isNavigationSwipeGestureRecognizer:(id)arg1;
- (bool)shouldBeginInteractiveTransition:(id)arg1;
- (void)startInteractiveTransition:(id)arg1;
- (id)transitionForDirection:(int)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_WKProcessPoolConfiguration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/WebKit.framework/_WKProcessPoolConfiguration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/WebKit.framework/WebKit (8607.3.18)
 */

@interface _WKProcessPoolConfiguration : NSObject <NSCopying, WKObject> {
    struct ObjectStorage<API::ProcessPoolConfiguration> { 
        struct type { 
            unsigned char __lx[256]; 
        } data; 
    }  _processPoolConfiguration;
    unsigned long long  _wirelessContextIdentifier;
}

@property (nonatomic, copy) NSString *CTDataConnectionServiceType;
@property (getter=isJITEnabled, nonatomic) bool JITEnabled;
@property (readonly) struct Object { int (**x1)(); id x2; }*_apiObject;
@property (nonatomic, copy) NSArray *additionalReadAccessAllowedURLs;
@property (nonatomic) bool alwaysKeepAndReuseSwappedProcesses;
@property (nonatomic, copy) NSArray *alwaysRevalidatedURLSchemes;
@property (nonatomic) bool alwaysRunsAtBackgroundPriority;
@property (nonatomic) bool attrStyleEnabled;
@property (nonatomic, copy) NSArray *cachePartitionedURLSchemes;
@property (nonatomic, copy) NSString *customWebContentServiceBundleIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) long long diskCacheSizeOverride;
@property (nonatomic) bool diskCacheSpeculativeValidationEnabled;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool ignoreSynchronousMessagingTimeoutsForTesting;
@property (nonatomic, copy) NSURL *injectedBundleURL;
@property (nonatomic) unsigned long long maximumProcessCount;
@property (nonatomic) bool pageCacheEnabled;
@property (nonatomic) int presentingApplicationPID;
@property (nonatomic) bool prewarmsProcessesAutomatically;
@property (nonatomic) bool processSwapsOnNavigation;
@property (nonatomic) bool processSwapsOnWindowOpenWithOpener;
@property (nonatomic) bool shouldCaptureAudioInUIProcess;
@property (nonatomic) bool shouldTakeUIBackgroundAssertion;
@property (nonatomic, copy) NSString *sourceApplicationBundleIdentifier;
@property (nonatomic, copy) NSString *sourceApplicationSecondaryIdentifier;
@property (readonly) Class superclass;
@property (nonatomic) bool suppressesConnectionTerminationOnSystemChange;
@property (nonatomic) bool usesWebProcessCache;
@property (nonatomic) unsigned long long wirelessContextIdentifier;

- (id)CTDataConnectionServiceType;
- (struct Object { int (**x1)(); id x2; }*)_apiObject;
- (id)additionalReadAccessAllowedURLs;
- (bool)alwaysKeepAndReuseSwappedProcesses;
- (id)alwaysRevalidatedURLSchemes;
- (bool)alwaysRunsAtBackgroundPriority;
- (bool)attrStyleEnabled;
- (id)cachePartitionedURLSchemes;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)customWebContentServiceBundleIdentifier;
- (void)dealloc;
- (id)description;
- (long long)diskCacheSizeOverride;
- (bool)diskCacheSpeculativeValidationEnabled;
- (bool)ignoreSynchronousMessagingTimeoutsForTesting;
- (id)init;
- (id)injectedBundleURL;
- (bool)isJITEnabled;
- (unsigned long long)maximumProcessCount;
- (bool)pageCacheEnabled;
- (int)presentingApplicationPID;
- (bool)prewarmsProcessesAutomatically;
- (bool)processSwapsOnNavigation;
- (bool)processSwapsOnWindowOpenWithOpener;
- (void)setAdditionalReadAccessAllowedURLs:(id)arg1;
- (void)setAlwaysKeepAndReuseSwappedProcesses:(bool)arg1;
- (void)setAlwaysRevalidatedURLSchemes:(id)arg1;
- (void)setAlwaysRunsAtBackgroundPriority:(bool)arg1;
- (void)setAttrStyleEnabled:(bool)arg1;
- (void)setCTDataConnectionServiceType:(id)arg1;
- (void)setCachePartitionedURLSchemes:(id)arg1;
- (void)setCustomWebContentServiceBundleIdentifier:(id)arg1;
- (void)setDiskCacheSizeOverride:(long long)arg1;
- (void)setDiskCacheSpeculativeValidationEnabled:(bool)arg1;
- (void)setIgnoreSynchronousMessagingTimeoutsForTesting:(bool)arg1;
- (void)setInjectedBundleURL:(id)arg1;
- (void)setJITEnabled:(bool)arg1;
- (void)setMaximumProcessCount:(unsigned long long)arg1;
- (void)setPageCacheEnabled:(bool)arg1;
- (void)setPresentingApplicationPID:(int)arg1;
- (void)setPrewarmsProcessesAutomatically:(bool)arg1;
- (void)setProcessSwapsOnNavigation:(bool)arg1;
- (void)setProcessSwapsOnWindowOpenWithOpener:(bool)arg1;
- (void)setShouldCaptureAudioInUIProcess:(bool)arg1;
- (void)setShouldTakeUIBackgroundAssertion:(bool)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setSuppressesConnectionTerminationOnSystemChange:(bool)arg1;
- (void)setUsesWebProcessCache:(bool)arg1;
- (void)setWirelessContextIdentifier:(unsigned long long)arg1;
- (bool)shouldCaptureAudioInUIProcess;
- (bool)shouldTakeUIBackgroundAssertion;
- (id)sourceApplicationBundleIdentifier;
- (id)sourceApplicationSecondaryIdentifier;
- (bool)suppressesConnectionTerminationOnSystemChange;
- (bool)usesWebProcessCache;
- (unsigned long long)wirelessContextIdentifier;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

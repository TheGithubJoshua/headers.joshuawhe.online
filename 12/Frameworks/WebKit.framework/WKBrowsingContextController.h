<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>WKBrowsingContextController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/WebKit.framework/WKBrowsingContextController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/WebKit.framework/WebKit (8607.3.18)
 */

@interface WKBrowsingContextController : NSObject {
    struct WeakObjCPtr<id<WKBrowsingContextHistoryDelegate> > { 
        id m_weakReference; 
    }  _historyDelegate;
    struct WeakObjCPtr<id<WKBrowsingContextLoadDelegate> > { 
        id m_weakReference; 
    }  _loadDelegate;
    struct RefPtr<WebKit::WebPageProxy, WTF::DumbPtrTraits<WebKit::WebPageProxy> > { 
        struct WebPageProxy {} *m_ptr; 
    }  _page;
    struct unique_ptr<WebKit::PageLoadStateObserver, std::__1::default_delete<WebKit::PageLoadStateObserver> > { 
        struct __compressed_pair<WebKit::PageLoadStateObserver *, std::__1::default_delete<WebKit::PageLoadStateObserver> > { 
            struct PageLoadStateObserver {} *__value_; 
        } __ptr_; 
    }  _pageLoadStateObserver;
    struct WeakObjCPtr<id<WKBrowsingContextPolicyDelegate> > { 
        id m_weakReference; 
    }  _policyDelegate;
}

@property (readonly) struct OpaqueWKPage { }*_pageRef;
@property (nonatomic, readonly) _WKRemoteObjectRegistry *_remoteObjectRegistry;
@property (readonly) NSURL *activeURL;
@property (copy) NSString *applicationNameForUserAgent;
@property (readonly) WKBackForwardList *backForwardList;
@property (readonly) bool canGoBack;
@property (readonly) bool canGoForward;
@property (readonly) NSArray *certificateChain;
@property (readonly) NSURL *committedURL;
@property (copy) NSString *customUserAgent;
@property (readonly) double estimatedProgress;
@property double gapBetweenPages;
@property (nonatomic, readonly) WKBrowsingContextHandle *handle;
@property (readonly) bool hasOnlySecureContent;
@property <WKBrowsingContextHistoryDelegate> *historyDelegate;
@property <WKBrowsingContextLoadDelegate> *loadDelegate;
@property (getter=isLoading, readonly) bool loading;
@property (readonly) unsigned long long pageCount;
@property double pageLength;
@property double pageZoom;
@property bool paginationBehavesLikeColumns;
@property bool paginationLineGridEnabled;
@property unsigned long long paginationMode;
@property <WKBrowsingContextPolicyDelegate> *policyDelegate;
@property (nonatomic, readonly) int processIdentifier;
@property (readonly) NSURL *provisionalURL;
@property double textZoom;
@property (readonly) NSString *title;
@property (readonly) NSURL *unreachableURL;

+ (id)_browsingContextControllerForPageRef:(struct OpaqueWKPage { }*)arg1;
+ (id)customSchemes;
+ (void)registerSchemeForCustomProtocol:(id)arg1;
+ (void)unregisterSchemeForCustomProtocol:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_initWithPageRef:(struct OpaqueWKPage { }*)arg1;
- (struct OpaqueWKPage { }*)_pageRef;
- (id)_remoteObjectRegistry;
- (bool)_webProcessIsResponsive;
- (id)activeURL;
- (id)applicationNameForUserAgent;
- (id)backForwardList;
- (bool)canGoBack;
- (bool)canGoForward;
- (id)certificateChain;
- (id)committedURL;
- (id)customUserAgent;
- (void)dealloc;
- (double)estimatedProgress;
- (double)gapBetweenPages;
- (void)goBack;
- (void)goForward;
- (void)goToBackForwardListItem:(id)arg1;
- (id)handle;
- (bool)hasOnlySecureContent;
- (id)historyDelegate;
- (bool)isLoading;
- (void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 userData:(id)arg5;
- (id)loadDelegate;
- (void)loadFileURL:(id)arg1 restrictToFilesWithin:(id)arg2;
- (void)loadFileURL:(id)arg1 restrictToFilesWithin:(id)arg2 userData:(id)arg3;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 userData:(id)arg3;
- (void)loadRequest:(id)arg1;
- (void)loadRequest:(id)arg1 userData:(id)arg2;
- (unsigned long long)pageCount;
- (double)pageLength;
- (double)pageZoom;
- (bool)paginationBehavesLikeColumns;
- (bool)paginationLineGridEnabled;
- (unsigned long long)paginationMode;
- (id)policyDelegate;
- (int)processIdentifier;
- (id)provisionalURL;
- (void)reload;
- (void)reloadFromOrigin;
- (void)setApplicationNameForUserAgent:(id)arg1;
- (void)setCustomUserAgent:(id)arg1;
- (void)setGapBetweenPages:(double)arg1;
- (void)setHistoryDelegate:(id)arg1;
- (void)setLoadDelegate:(id)arg1;
- (void)setPageLength:(double)arg1;
- (void)setPageZoom:(double)arg1;
- (void)setPaginationBehavesLikeColumns:(bool)arg1;
- (void)setPaginationLineGridEnabled:(bool)arg1;
- (void)setPaginationMode:(unsigned long long)arg1;
- (void)setPolicyDelegate:(id)arg1;
- (void)setTextZoom:(double)arg1;
- (void)stopLoading;
- (double)textZoom;
- (id)title;
- (id)unreachableURL;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

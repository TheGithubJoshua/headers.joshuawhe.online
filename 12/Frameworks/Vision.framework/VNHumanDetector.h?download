/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Vision.framework/Vision (2.0.70)
 */

@interface VNHumanDetector : VNDetector {
    struct TemplateObjectDetectorApply { int x1; int x2; int x3; int x4; bool x5; float x6[2]; float x7[2]; float x8; bool x9; bool x10; float x11; float x12; int x13; float x14; struct hog { struct gradient { } x_15_1_1; } x15; struct ChnsFeat { int x_16_1_1; int x_16_1_2; struct hog { struct gradient { } x_3_2_1; } x_16_1_3; struct gradient { } x_16_1_4; } x16; int x17; struct vector<vision::hum::DTreeApply, std::__1::allocator<vision::hum::DTreeApply> > { struct DTreeApply {} *x_18_1_1; struct DTreeApply {} *x_18_1_2; struct __compressed_pair<vision::hum::DTreeApply *, std::__1::allocator<vision::hum::DTreeApply> > { struct DTreeApply {} *x_3_2_1; } x_18_1_3; } x18; struct vector<std::__1::map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > >, std::__1::allocator<std::__1::map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > > > { struct map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > {} *x_19_1_1; struct map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > {} *x_19_1_2; struct __compressed_pair<std::__1::map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > *, std::__1::allocator<std::__1::map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > > > { struct map<int, vision::hum::DTreeNode, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, vision::hum::DTreeNode> > > {} *x_3_2_1; } x_19_1_3; } x19; } * mHumanDetectorAlgorithmImpl_;
}

- (bool)completeInitializationAndReturnError:(id*)arg1;
- (void)dealloc;
- (bool)needsMetalContext;
- (id)processWithOptions:(id)arg1 regionOfInterest:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 warningRecorder:(id)arg3 error:(id*)arg4;

@end

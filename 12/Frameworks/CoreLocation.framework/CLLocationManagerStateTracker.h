<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CLLocationManagerStateTracker.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreLocation.framework/CLLocationManagerStateTracker.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreLocation.framework/CoreLocation (2245.16.14)
 */

@interface CLLocationManagerStateTracker : CLStateTracker {
    void * _identifier;
    bool  _inTransaction;
    struct _CLLocationManagerStateTrackerState { 
        double distanceFilter; 
        double desiredAccuracy; 
        bool updatingLocation; 
        bool requestingLocation; 
        bool requestingRanging; 
        bool updatingRanging; 
        bool updatingHeading; 
        double headingFilter; 
        bool persistentMonitoringEnabled; 
        bool allowsLocationPrompts; 
        bool allowsAlteredAccessoryLocations; 
        bool dynamicAccuracyReductionEnabled; 
        bool previousAuthorizationStatusValid; 
        int previousAuthorizationStatus; 
        long long activityType; 
        int pausesLocationUpdatesAutomatically; 
        bool paused; 
        bool allowsBackgroundLocationUpdates; 
        bool showsBackgroundLocationIndicator; 
        bool allowsMapCorrection; 
        bool batchingLocation; 
        bool updatingVehicleSpeed; 
        bool updatingVehicleHeading; 
        bool matchInfoEnabled; 
        bool courtesyPromptNeeded; 
    }  _state;
}

@property (nonatomic) long long activityType;
@property (nonatomic) bool allowsAlteredAccessoryLocations;
@property (nonatomic) bool allowsBackgroundLocationUpdates;
@property (nonatomic) bool allowsLocationPrompts;
@property (nonatomic) bool allowsMapCorrection;
@property (nonatomic) bool batchingLocation;
@property (nonatomic) bool courtesyPromptNeeded;
@property (nonatomic) double desiredAccuracy;
@property (nonatomic) double distanceFilter;
@property (nonatomic) bool dynamicAccuracyReductionEnabled;
@property (nonatomic) double headingFilter;
@property (nonatomic) bool matchInfoEnabled;
@property (nonatomic) bool paused;
@property (nonatomic) int pausesLocationUpdatesAutomatically;
@property (nonatomic) bool persistentMonitoringEnabled;
@property (nonatomic) int previousAuthorizationStatus;
@property (nonatomic) bool previousAuthorizationStatusValid;
@property (nonatomic) bool requestingLocation;
@property (nonatomic) bool requestingRanging;
@property (nonatomic) bool showsBackgroundLocationIndicator;
@property (nonatomic) bool updatingHeading;
@property (nonatomic) bool updatingLocation;
@property (nonatomic) bool updatingRanging;
@property (nonatomic) bool updatingVehicleHeading;
@property (nonatomic) bool updatingVehicleSpeed;

+ (unsigned long long)trackerStateSize;
+ (const char *)trackerStateTypeName;

- (long long)activityType;
- (bool)allowsAlteredAccessoryLocations;
- (bool)allowsBackgroundLocationUpdates;
- (bool)allowsLocationPrompts;
- (bool)allowsMapCorrection;
- (bool)batchingLocation;
- (bool)courtesyPromptNeeded;
- (void)dealloc;
- (double)desiredAccuracy;
- (double)distanceFilter;
- (bool)dumpState:(void*)arg1 withSize:(unsigned long long)arg2 hints:(struct os_state_hints_s { unsigned int x1; char *x2; unsigned int x3; unsigned int x4; }*)arg3;
- (bool)dynamicAccuracyReductionEnabled;
- (double)headingFilter;
- (void*)identifier;
- (id)initInSilo:(id)arg1 withIdentifier:(void*)arg2;
- (id)initInSilo:(id)arg1 withIdentifier:(void*)arg2 state:(id /* block */)arg3;
- (id)initWithQueue:(id)arg1 identifier:(void*)arg2;
- (id)initWithQueue:(id)arg1 identifier:(void*)arg2 state:(id /* block */)arg3;
- (bool)matchInfoEnabled;
- (bool)paused;
- (int)pausesLocationUpdatesAutomatically;
- (bool)persistentMonitoringEnabled;
- (int)previousAuthorizationStatus;
- (bool)previousAuthorizationStatusValid;
- (bool)requestingLocation;
- (bool)requestingRanging;
- (void)setActivityType:(long long)arg1;
- (void)setAllowsAlteredAccessoryLocations:(bool)arg1;
- (void)setAllowsBackgroundLocationUpdates:(bool)arg1;
- (void)setAllowsLocationPrompts:(bool)arg1;
- (void)setAllowsMapCorrection:(bool)arg1;
- (void)setBatchingLocation:(bool)arg1;
- (void)setCourtesyPromptNeeded:(bool)arg1;
- (void)setDesiredAccuracy:(double)arg1;
- (void)setDistanceFilter:(double)arg1;
- (void)setDynamicAccuracyReductionEnabled:(bool)arg1;
- (void)setHeadingFilter:(double)arg1;
- (void)setMatchInfoEnabled:(bool)arg1;
- (void)setPaused:(bool)arg1;
- (void)setPausesLocationUpdatesAutomatically:(int)arg1;
- (void)setPersistentMonitoringEnabled:(bool)arg1;
- (void)setPreviousAuthorizationStatus:(int)arg1;
- (void)setPreviousAuthorizationStatusValid:(bool)arg1;
- (void)setRequestingLocation:(bool)arg1;
- (void)setRequestingRanging:(bool)arg1;
- (void)setShowsBackgroundLocationIndicator:(bool)arg1;
- (void)setUpdatingHeading:(bool)arg1;
- (void)setUpdatingLocation:(bool)arg1;
- (void)setUpdatingRanging:(bool)arg1;
- (void)setUpdatingVehicleHeading:(bool)arg1;
- (void)setUpdatingVehicleSpeed:(bool)arg1;
- (bool)showsBackgroundLocationIndicator;
- (void)updateState:(id /* block */)arg1;
- (bool)updatingHeading;
- (bool)updatingLocation;
- (bool)updatingRanging;
- (bool)updatingVehicleHeading;
- (bool)updatingVehicleSpeed;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

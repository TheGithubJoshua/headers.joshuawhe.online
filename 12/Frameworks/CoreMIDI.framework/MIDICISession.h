<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MIDICISession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreMIDI.framework/MIDICISession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreMIDI.framework/CoreMIDI (88)
 */

@interface MIDICISession : NSObject {
    unsigned int  _client;
    struct MIDICIDeviceIdentification { 
        unsigned char manufacturer[3]; 
        unsigned char family[2]; 
        unsigned char modelNumber[2]; 
        unsigned char revisionLevel[4]; 
        unsigned char reserved[5]; 
    }  _deviceID;
    struct MIDICIDeviceIdentification { 
        unsigned char manufacturer[3]; 
        unsigned char family[2]; 
        unsigned char modelNumber[2]; 
        unsigned char revisionLevel[4]; 
        unsigned char reserved[5]; 
    }  _deviceIdentification;
    unsigned int  _entity;
    unsigned int  _impl;
    id /* block */  _profileChangedCallback;
    NSMutableArray * _profileStates;
    id /* block */  _propertyChangedCallback;
    id /* block */  _propertyResponseCallback;
    NSArray * _supportedProtocols;
    bool  _supportsProfileCapability;
    bool  _supportsPropertyCapability;
}

@property (nonatomic, readonly) struct MIDICIDeviceIdentification { unsigned char x1[3]; unsigned char x2[2]; unsigned char x3[2]; unsigned char x4[4]; unsigned char x5[5]; } deviceIdentification;
@property (nonatomic, readonly) unsigned int entity;
@property (nonatomic, copy) id /* block */ profileChangedCallback;
@property (nonatomic, copy) id /* block */ propertyChangedCallback;
@property (nonatomic, readonly) bool supportsProfileCapability;
@property (nonatomic, readonly) bool supportsPropertyCapability;

- (void).cxx_destruct;
- (void)addProfileState:(char *)arg1 length:(unsigned int)arg2 channel:(unsigned char)arg3;
- (void)dealloc;
- (struct MIDICIDeviceIdentification { unsigned char x1[3]; unsigned char x2[2]; unsigned char x3[2]; unsigned char x4[4]; unsigned char x5[5]; })deviceIdentification;
- (bool)disableProfile:(id)arg1 onChannel:(unsigned char)arg2 error:(id*)arg3;
- (bool)enableProfile:(id)arg1 onChannel:(unsigned char)arg2 error:(id*)arg3;
- (unsigned int)entity;
- (void)getProperty:(id)arg1 onChannel:(unsigned char)arg2 responseHandler:(id /* block */)arg3;
- (void)handleCINotification:(const struct MIDINotification { int x1; unsigned int x2; }*)arg1 withHandler:(id /* block */)arg2;
- (void)hasProperty:(id)arg1 onChannel:(unsigned char)arg2 responseHandler:(id /* block */)arg3;
- (id)init;
- (id)initWithMIDIEntity:(unsigned int)arg1 dataReadyHandler:(id /* block */)arg2;
- (bool)isEqualTo:(id)arg1;
- (id /* block */)profileChangedCallback;
- (id)profileStateForChannel:(unsigned char)arg1;
- (id /* block */)propertyChangedCallback;
- (void)setProfileChangedCallback:(id /* block */)arg1;
- (void)setProperty:(id)arg1 onChannel:(unsigned char)arg2 responseHandler:(id /* block */)arg3;
- (void)setPropertyChangedCallback:(id /* block */)arg1;
- (bool)supportsProfileCapability;
- (bool)supportsPropertyCapability;
- (bool)toggleProfile:(id)arg1 onChannel:(unsigned char)arg2 enabling:(bool)arg3 error:(id*)arg4;
- (bool)updateProfileStateForChannel:(unsigned char)arg1 withProfile:(id)arg2 enabled:(bool)arg3;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MKTransitLineItemViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MapKit.framework/MKTransitLineItemViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MapKit.framework/MapKit (1.0)
 */

@interface MKTransitLineItemViewController : MKStackingViewController <MKETAProviderDelegate, MKNearestStationViewControllerDelegate, MKPlaceCardActionControllerDelegate, MKPlaceCardEncyclopedicControllerDelegate, MKPlaceCardHeaderViewControllerDelegate, MKPlaceHeaderButtonsViewControllerDelegate, MKStackingViewControllerDelegate, MKTransitLineIncidentsViewControllerDelegate, _MKInfoCardAnalyticsDelegate, _MKInfoCardController> {
    MKPlaceActionManager * _actionManager;
    MKPlaceCardActionsViewController * _actionsViewController;
    MKPlaceCardActionItem * _addToFavoritesItem;
    GEOAutomobileOptions * _automobileOptions;
    MKPlaceHeaderButtonsViewController * _buttonsHeaderController;
    <MKTransitLineItemViewControllerDelegate> * _delegate;
    MKETAProvider * _etaProvider;
    NSNumber * _favorited;
    MKPlaceCardHeaderViewController * _headerViewController;
    NSString * _lastNearestRequestErrorMessage;
    unsigned long long  _lastRequestedNearestID;
    bool  _loading;
    MKInfoCardLoadingView * _loadingView;
    <MKLocationManagerOperation> * _locationOperation;
    MKMapItem * _nearestStation;
    <MKMapServiceTicket> * _nearestStationTicket;
    MKNearestStationViewController * _nearestStationViewController;
    MKPlaceCardActionItem * _removeFromFavoritesItem;
    <UIScrollViewDelegate> * _scrollViewDelegate;
    <GEOTransitLineItem> * _transitLineItem;
    GEOTransitOptions * _transitOptions;
}

@property (nonatomic, retain) MKPlaceCardActionItem *addToFavoritesItem;
@property (nonatomic, retain) GEOAutomobileOptions *automobileOptions;
@property (nonatomic) double contentAlpha;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MKTransitLineItemViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSNumber *favorited;
@property (readonly) unsigned long long hash;
@property (getter=isLoading, nonatomic, readonly) bool loading;
@property (nonatomic, retain) MKPlaceCardActionItem *removeFromFavoritesItem;
@property (nonatomic) <UIScrollViewDelegate> *scrollViewDelegate;
@property (readonly) Class superclass;
@property (nonatomic, readonly) <GEOTransitLineItem> *transitLineItem;
@property (nonatomic, retain) GEOTransitOptions *transitOptions;

+ (double)headerHeightInMinimalMode;

- (void).cxx_destruct;
- (void)_fetchNearestStation;
- (void)_updateViewControllers;
- (id)addToFavoritesItem;
- (id)automobileOptions;
- (double)contentAlpha;
- (id)delegate;
- (id)favorited;
- (void)hideTitle:(bool)arg1;
- (void)infoCardAnalyticsDidSelectAction:(int)arg1 eventValue:(id)arg2 feedbackDelegateSelector:(int)arg3;
- (void)infoCardAnalyticsDidSelectAction:(int)arg1 target:(int)arg2 eventValue:(id)arg3 actionURL:(id)arg4 photoID:(id)arg5 feedbackDelegateSelector:(int)arg6;
- (void)infoCardAnalyticsDidSelectAction:(int)arg1 target:(int)arg2 eventValue:(id)arg3 feedbackDelegateSelector:(int)arg4;
- (void)infoCardTransitAnalyticsDidSelectionAction:(int)arg1 resultIndex:(long long)arg2 targetID:(unsigned long long)arg3 transitSystem:(id)arg4 transitDepartureSequence:(id)arg5 transitCardCategory:(int)arg6 transitIncident:(id)arg7 feedbackDelegateSelector:(int)arg8;
- (id)initWithTransitLineItem:(id)arg1;
- (bool)isLoading;
- (int)mapTypeForETAProvider:(id)arg1;
- (void)nearestStationViewControllerDidSelectStation:(id)arg1;
- (void)placeActionManager:(id)arg1 didSelectShareFromView:(id)arg2;
- (void)placeCardActionControllerDidSelectAddToFavorites:(id)arg1;
- (void)placeCardActionControllerDidSelectRemoveFromFavorites:(id)arg1;
- (void)placeCardActionControllerDidSelectReportAProblem:(id)arg1;
- (void)placeCardEncyclopedicControllerDidSelectShowArticle:(id)arg1;
- (double)placeCardHeaderViewControllerTrailingConstantForTitle:(id)arg1;
- (void)placeHeaderButtonsViewController:(id)arg1 didSelectPrimaryType:(unsigned long long)arg2 withView:(id)arg3;
- (id)removeFromFavoritesItem;
- (void)resetNearestStation;
- (id)scrollViewDelegate;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint { double x1; double x2; })arg2 targetContentOffset:(inout struct CGPoint { double x1; double x2; }*)arg3;
- (void)setAddToFavoritesItem:(id)arg1;
- (void)setAutomobileOptions:(id)arg1;
- (void)setContentAlpha:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFavorited:(id)arg1;
- (void)setLoading:(bool)arg1;
- (void)setRemoveFromFavoritesItem:(id)arg1;
- (void)setScrollViewDelegate:(id)arg1;
- (void)setTransitLineItem:(id)arg1;
- (void)setTransitLineItem:(id)arg1 loading:(bool)arg2;
- (void)setTransitOptions:(id)arg1;
- (double)stackingViewController:(id)arg1 heightForSeparatorBetweenUpperViewController:(id)arg2 andLowerViewController:(id)arg3;
- (void)transitLineIncidentsViewController:(id)arg1 didSelectDetailsForIncidents:(id)arg2;
- (id)transitLineItem;
- (id)transitOptions;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MKPlacePhotosViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MapKit.framework/MKPlacePhotosViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MapKit.framework/MapKit (1.0)
 */

@interface MKPlacePhotosViewController : UIViewController <MKModuleViewControllerProtocol, MKPlaceAttributionCellDelegate, MKPlacePhotosViewDelegate, UIScrollViewDelegate, _MKInfoCardChildViewControllerAnalyticsDelegate> {
    MKPlaceAttributionCell * _attributionCell;
    NSLayoutConstraint * _bottomConstraint;
    UIView * _bottomHairline;
    bool  _canUseFullscreenViewer;
    bool  _canUseGallery;
    MKPlacePhotosView * _currentPhotoViewer;
    NSLayoutConstraint * _heightConstraint;
    bool  _isRTL;
    double  _lastPhotoScrollOffset;
    bool  _loadAppImageCanceledOrFailed;
    MKMapItem * _mapItem;
    unsigned long long  _mode;
    unsigned long long  _originalMode;
    _MKPlaceViewController * _owner;
    UIScrollView * _parentScrollView;
    bool  _photoLoaded;
    bool  _photoScrollViewScrollingLeft;
    bool  _photoScrollViewScrollingRight;
    NSArray * _photoViews;
    NSArray * _photos;
    UIView * _photosContainer;
    UIScrollView * _photosContainerScrollView;
    <MKPlaceCardPhotosControllerDelegate><MKPlaceCardActionControllerDelegate> * _photosControllerDelegate;
    unsigned long long  _photosCount;
    MKPhotoSmallAttributionView * _photosSmallAttributionsView;
    bool  _showsBottomHairline;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) _MKPlaceViewController *owner;
@property (nonatomic) <MKPlaceCardPhotosControllerDelegate><MKPlaceCardActionControllerDelegate> *photosControllerDelegate;
@property (nonatomic) bool showsBottomHairline;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_callPhotoDelegateForPhotoAt:(unsigned long long)arg1;
- (void)_cancelLoadPhotos;
- (void)_catchScrollNotification:(id)arg1;
- (void)_createImageViews;
- (void)_didBecomeActive:(id)arg1;
- (void)_loadPhotos;
- (void)_photoSelected:(id)arg1;
- (void)_photoTappedAtIndex:(unsigned long long)arg1;
- (void)_updateAlphaAttribution;
- (void)_updatePhotoBackgroundColor:(id)arg1;
- (void)_willResignActive:(id)arg1;
- (void)addAttributionCell;
- (id)attributionString;
- (void)dealloc;
- (id)formattedAttributionString;
- (id)infoCardChildPossibleActions;
- (void)infoCardThemeChanged:(id)arg1;
- (id)initWithMapItem:(id)arg1 mode:(unsigned long long)arg2;
- (void)layoutImages;
- (void)openURL;
- (id)owner;
- (id)photosControllerDelegate;
- (void)placePhotoViewerAttributionTappedForPhotoAtIndex:(unsigned long long)arg1 photo:(id)arg2;
- (id)placePhotoViewerViewForPhotoAtIndex:(unsigned long long)arg1;
- (void)placePhotoViewerWillClose:(id)arg1 photo:(id)arg2 onIndex:(unsigned long long)arg3;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setOwner:(id)arg1;
- (void)setPhotosControllerDelegate:(id)arg1;
- (void)setShowsBottomHairline:(bool)arg1;
- (bool)showsBottomHairline;
- (struct CGSize { double x1; double x2; })sizeForIndex:(unsigned long long)arg1;
- (void)updateAttributionCell;
- (void)updateAttributionPositionWithOffset:(double)arg1;
- (void)updateBottomHairlineVisibility;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewLayoutMarginsDidChange;
- (void)viewWillDisappear:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

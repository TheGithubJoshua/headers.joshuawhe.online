<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MKTransitDeparturesCell.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MapKit.framework/MKTransitDeparturesCell.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MapKit.framework/MapKit (1.0)
 */

@interface MKTransitDeparturesCell : MKCustomSeparatorTableViewCell {
    NSArray * _additionalDepartureLabels;
    NSArray * _buttonToDepartureConstraints;
    bool  _centerContent;
    NSDate * _countdownReferenceDate;
    <MKTransitDeparturesCellDelegate> * _delegate;
    _MKUILabel * _departureLabel;
    NSLayoutConstraint * _departureLabelCenteringConstraint;
    UIStackView * _departureStackView;
    NSLayoutConstraint * _departureStackViewToBottomConstraint;
    unsigned long long  _departureStyle;
    NSTimeZone * _departureTimeZone;
    NSArray * _departures;
    bool  _inactive;
    UIButton * _incidentButton;
    bool  _incidentButtonHidden;
    NSLayoutConstraint * _incidentIconHorizontalConstraint;
    UIImageView * _incidentIconImageView;
    NSString * _incidentTitle;
    NSArray * _initialConstraints;
    NSLayoutConstraint * _labelBufferConstraint;
    NSLayoutConstraint * _labelLeadingMarginConstraint;
    NSArray * _labelToDepartureConstraints;
    double  _lineImageCenteringValue;
    NSLayoutConstraint * _lineImageCompressedLeadingConstraint;
    NSLayoutConstraint * _lineImageLeadingConstraint;
    NSLayoutConstraint * _lineImageToContainerTrailingConstraint;
    NSLayoutConstraint * _lineImageToTextGutterConstraint;
    UIImageView * _lineImageView;
    NSLayoutConstraint * _lineImageViewCenteringConstraint;
    NSLayoutConstraint * _lineImageViewCenteringVerticalPaddingConstraint;
    double  _lineImageViewSize;
    NSLayoutConstraint * _lineImageViewToBottomConstraint;
    NSLayoutConstraint * _lineImageViewTopConstraint;
    bool  _needsInitialConstraints;
    bool  _padBottom;
    _MKUILabel * _primaryLabel;
    NSLayoutConstraint * _primaryLabelCenteringConstraint;
    NSLayoutConstraint * _primaryToBottomConstraint;
    NSLayoutConstraint * _primaryToTopConstraint;
    MKThemeMultiPartLabel * _secondaryLabel;
    NSLayoutConstraint * _secondaryStackToBottomConstraint;
    NSLayoutConstraint * _secondaryStackToPrimaryConstraint;
    UIStackView * _secondaryTextStackView;
    bool  _showIncidentIcon;
    bool  _showNoConnectionEmDash;
    _MKUILabel * _tertiaryLabel;
    bool  _useCompressedGutter;
    bool  _useCompressedLeading;
}

@property (nonatomic) bool centerContent;
@property (nonatomic, retain) NSDate *countdownReferenceDate;
@property (nonatomic) <MKTransitDeparturesCellDelegate> *delegate;
@property (nonatomic) unsigned long long departureStyle;
@property (nonatomic, retain) NSTimeZone *departureTimeZone;
@property (nonatomic, retain) NSArray *departures;
@property (getter=isInactive, nonatomic) bool inactive;
@property (nonatomic, retain) UIButton *incidentButton;
@property (getter=isIncidentButtonHidden, nonatomic) bool incidentButtonHidden;
@property (nonatomic, copy) NSString *incidentTitle;
@property (nonatomic, readonly) double labelMargin;
@property (nonatomic) double lineImageViewSize;
@property (nonatomic) bool padBottom;
@property (getter=isShowingIncidentIcon, nonatomic) bool showIncidentIcon;
@property (getter=isShowingNoConnectionEmDash, nonatomic) bool showNoConnectionEmDash;
@property (nonatomic) bool useCompressedGutter;
@property (nonatomic) bool useCompressedLeading;

+ (void)_calculateMaxLabelWidths;
+ (id)_departureLabelAttributes;
+ (id)_departureLabelFont;
+ (id)_departureSubtextAttributes;
+ (id)_departureSubtextFont;
+ (void)_enumerateMinutesUntilDepartureDates:(id)arg1 withReferenceDate:(id)arg2 block:(id /* block */)arg3;
+ (double)_maxExpectedDepartureLabelWidth;
+ (double)_minTextWidth:(bool)arg1;
+ (bool)_needsUpdateMaxLabelWidths;
+ (id)_nowString;
+ (id)_primaryFont;
+ (id)_singleCountdownSubtext;
+ (id)_upcomingTimestampFont;
+ (id)defaultSecondaryFont;
+ (id)displayableCountdowDepartureDatesFromDates:(id)arg1 withReferenceDate:(id)arg2;
+ (double)labelMarginWithLineImageViewWidth:(double)arg1;
+ (double)maxLineImageWidthforWidth:(double)arg1 compressed:(bool)arg2;
+ (id)strongSecondaryFont;
+ (id)timestampSecondaryFont;
+ (void)useCompressedGutter:(out bool*)arg1 compressedLeading:(out bool*)arg2 forImageWidth:(double)arg3 inWidth:(double)arg4 compressed:(bool)arg5;

- (void).cxx_destruct;
- (void)_addEmDashAttributes:(id)arg1;
- (void)_addIncidentButton;
- (void)_addIncidentIcon;
- (void)_commonInit;
- (void)_contentSizeCategoryDidChange;
- (unsigned long long)_departureLabelStyle;
- (unsigned long long)_displayableDeparturesCount;
- (void)_enumerateMinutesUntilDepartureTimesWithBlock:(id /* block */)arg1;
- (void)_incidentButtonPressed;
- (id)_incidentIcon;
- (bool)_isRTL;
- (void)_removeIncidentButton;
- (void)_removeIncidentIcon;
- (double)_separatorHeight;
- (void)_updateConstraintValues;
- (void)_updateLabelFonts;
- (void)_updateLineImageViewConstraints;
- (bool)centerContent;
- (id)countdownReferenceDate;
- (void)dealloc;
- (id)delegate;
- (unsigned long long)departureStyle;
- (id)departureTimeZone;
- (id)departures;
- (id)incidentButton;
- (id)incidentTitle;
- (void)infoCardThemeChanged:(id)arg1;
- (id)initWithReuseIdentifier:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (bool)isInactive;
- (bool)isIncidentButtonHidden;
- (bool)isOpaque;
- (bool)isShowingIncidentIcon;
- (bool)isShowingNoConnectionEmDash;
- (double)labelMargin;
- (void)layoutSubviews;
- (double)lineImageViewSize;
- (bool)padBottom;
- (void)prepareForReuse;
- (void)refreshDeparturesDisplay;
- (void)setCenterContent:(bool)arg1;
- (void)setCountdownReferenceDate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDepartureStyle:(unsigned long long)arg1;
- (void)setDepartureTimeZone:(id)arg1;
- (void)setDepartures:(id)arg1;
- (void)setInactive:(bool)arg1;
- (void)setIncidentButton:(id)arg1;
- (void)setIncidentButtonHidden:(bool)arg1;
- (void)setIncidentTitle:(id)arg1;
- (void)setLineImage:(id)arg1;
- (void)setLineImageViewSize:(double)arg1;
- (void)setPadBottom:(bool)arg1;
- (void)setPrimaryText:(id)arg1;
- (void)setSecondaryText:(id)arg1;
- (void)setSeparatorHidden:(bool)arg1;
- (void)setShowIncidentIcon:(bool)arg1;
- (void)setShowNoConnectionEmDash:(bool)arg1;
- (void)setShowNoConnectionEnDash:(bool)arg1;
- (void)setTertiaryText:(id)arg1;
- (void)setUseCompressedGutter:(bool)arg1;
- (void)setUseCompressedLeading:(bool)arg1;
- (struct CGSize { double x1; double x2; })systemLayoutSizeFittingSize:(struct CGSize { double x1; double x2; })arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)updateConstraints;
- (bool)useCompressedGutter;
- (bool)useCompressedLeading;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

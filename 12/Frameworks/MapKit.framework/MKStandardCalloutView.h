<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MKStandardCalloutView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MapKit.framework/MKStandardCalloutView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MapKit.framework/MapKit (1.0)
 */

@interface MKStandardCalloutView : MKCalloutView {
    struct { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGPoint { 
            double x; 
            double y; 
        } offset; 
        long long position; 
        struct CGPoint { 
            double x; 
            double y; 
        } desiredPoint; 
        struct CGRect { 
            struct CGPoint { 
                double x; 
                double y; 
            } origin; 
            struct CGSize { 
                double width; 
                double height; 
            } size; 
        } desiredBounds; 
    }  _anchor;
    MKSmallCalloutView * _calloutView;
    _MKCalloutLayer * _contentStrokeLayer;
    _MKCalloutContentView * _contentView;
    struct { 
        unsigned int animated : 1; 
        unsigned int didMoveCalled : 1; 
        unsigned int hasPendingAnimatedLayout : 1; 
        unsigned int needsCalloutUpdate : 1; 
        unsigned int isObserving : 1; 
        unsigned int reserved : 26; 
    }  _flags;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _frame;
    _MKCalloutLayer * _maskLayer;
    UIMotionEffectGroup * _motionEffect;
}

+ (double)defaultHeight;

- (void).cxx_destruct;
- (void)_addAccessoryTargetForView:(id)arg1;
- (void)_calculateActualAnchorPoint:(struct CGPoint { double x1; double x2; }*)arg1 frame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 forDesiredAnchorPoint:(struct CGPoint { double x1; double x2; })arg3 boundaryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4;
- (void)_calloutAccessoryControlTapped:(id)arg1;
- (void)_frameDidChange;
- (void)_layoutSubviews:(bool)arg1;
- (void)_markDidMoveCalled;
- (struct CGPoint { double x1; double x2; })_originForScale:(double)arg1;
- (void)_removeAccessoryTargetForView:(id)arg1;
- (void)_runBounceAnimationWithCompletionBlock:(id /* block */)arg1;
- (void)_setNeedsCalloutUpdate;
- (void)_setOriginForScale:(double)arg1;
- (void)_showFromAnchorPoint:(struct CGPoint { double x1; double x2; })arg1 boundaryRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg2 animate:(bool)arg3 completionBlock:(id /* block */)arg4;
- (void)_startObservingAnnotationView:(id)arg1;
- (void)_stopObservingAnnotationView:(id)arg1;
- (void)_updateCallout;
- (void)_updateCalloutAnimated:(bool)arg1;
- (struct CGPoint { double x1; double x2; })anchorPoint;
- (long long)anchorPosition;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3;
- (void)completeBounceAnimation;
- (void)dealloc;
- (void)didMoveToWindow;
- (void)dismissAnimated:(bool)arg1 completionBlock:(id /* block */)arg2;
- (void)forceAnchorPosition:(long long)arg1;
- (id)initWithAnnotationView:(id)arg1;
- (bool)isLeftAnchored;
- (void)motionEffectDidUpdate:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (struct CGPoint { double x1; double x2; })offset;
- (void)setDetailView:(id)arg1 animated:(bool)arg2;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setLeftView:(id)arg1 backgroundColor:(id)arg2 animated:(bool)arg3;
- (void)setOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setRightView:(id)arg1 animated:(bool)arg2;
- (void)setSubtitle:(id)arg1;
- (void)setSubtitle:(id)arg1 animated:(bool)arg2;
- (void)setTitle:(id)arg1;
- (void)showAnimated:(bool)arg1 completionBlock:(id /* block */)arg2;
- (id)subtitle;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MKInfoCardThemeManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MapKit.framework/MKInfoCardThemeManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MapKit.framework/MapKit (1.0)
 */

@interface MKInfoCardThemeManager : NSObject <MKInfoCardTheme> {
    NSDictionary * _colors;
    UIColor * _currentTintColor;
    NSPointerArray * _otherListeners;
    unsigned long long  _themeType;
    bool  _themeWasExplicitySet;
    id /* block */  _tintColorProvider;
    bool  _useSmallFont;
    NSPointerArray * _viewControllerListeners;
    NSPointerArray * _viewListeners;
}

@property (nonatomic, readonly) UIFont *attributionFont;
@property (nonatomic, readonly) UIColor *backgroundColor;
@property (nonatomic, readonly) UIFont *bodyFont;
@property (nonatomic, readonly) UIFont *boldBodyFont;
@property (nonatomic, readonly) UIFont *brandTitleFont;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) UIColor *disabledActionRowBackgroundColor;
@property (nonatomic, readonly) UIColor *disabledActionRowTextColor;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UIColor *headerPrimaryButtonHighlightedColor;
@property (nonatomic, readonly) UIColor *headerPrimaryButtonNormalColor;
@property (nonatomic, readonly) UIColor *headerSecondaryButtonHighlightedColor;
@property (nonatomic, readonly) UIColor *headerSecondaryButtonNormalColor;
@property (nonatomic, readonly) UIColor *highlightedActionRowTextColor;
@property (nonatomic, readonly) UIColor *highlightedTintColor;
@property (nonatomic, readonly) bool isDarkTheme;
@property (nonatomic, readonly) bool isVibrantTheme;
@property (nonatomic, readonly) UIFont *largeTitleFont;
@property (nonatomic, readonly) UIFont *largeTitleFontStatic;
@property (nonatomic, readonly) UIColor *lightTextColor;
@property (nonatomic, readonly) UIFont *mediumBodyFont;
@property (nonatomic, readonly) UIColor *normalActionRowBackgroundColor;
@property (nonatomic, readonly) UIColor *normalActionRowBackgroundPressedColor;
@property (nonatomic, readonly) UIFont *rowButtonFont;
@property (nonatomic, readonly) UIColor *rowColor;
@property (nonatomic, readonly) UIFont *rowGlyphButtonFont;
@property (nonatomic, readonly) UIFont *sectionHeaderButtonFont;
@property (nonatomic, readonly) UIFont *sectionHeaderFont;
@property (nonatomic, readonly) UIColor *selectedRowColor;
@property (nonatomic, readonly) UIColor *separatorLineColor;
@property (nonatomic, readonly) UIFont *smallAttributionFont;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIColor *textColor;
@property (nonatomic, readonly) unsigned long long themeType;
@property (nonatomic, readonly) UIColor *tintColor;
@property (nonatomic, readonly) UIFont *titleFont;
@property (nonatomic) bool useSmallFont;

+ (id)_currentTheme:(unsigned long long)arg1;
+ (void)addThemeChangedListener:(id)arg1;
+ (id)currentTheme;
+ (void)setTheme:(unsigned long long)arg1;
+ (void)setTintColorProvider:(id /* block */)arg1;
+ (void)setUseSmallFont:(bool)arg1;
+ (id)themeWithThemeType:(unsigned long long)arg1;

- (void).cxx_destruct;
- (void)_addThemeChangedListener:(id)arg1;
- (unsigned long long)_currentSystemTheme;
- (id)_initWithThemeType:(unsigned long long)arg1;
- (bool)_isInSpotlightContext;
- (void)_notifyAllListenersOfThemeChange:(id)arg1 visitedSet:(id)arg2 subListenerMethod:(int (*)arg3 subListenerSelector:(SEL)arg4;
- (void)_notifyAllListenersOfTintChange:(id)arg1 visitedSet:(id)arg2;
- (void)_setTheme:(unsigned long long)arg1;
- (void)_setTintColorProvider:(id /* block */)arg1;
- (void)_tintColorDidChange;
- (id)attributionFont;
- (id)backgroundColor;
- (id)bodyFont;
- (id)boldBodyFont;
- (id)brandTitleFont;
- (id)disabledActionRowBackgroundColor;
- (id)disabledActionRowTextColor;
- (id)headerPrimaryButtonHighlightedColor;
- (id)headerPrimaryButtonNormalColor;
- (id)headerSecondaryButtonHighlightedColor;
- (id)headerSecondaryButtonNormalColor;
- (id)highlightedActionRowTextColor;
- (id)highlightedTintColor;
- (id)iconFontToMatch:(id)arg1;
- (id)init;
- (bool)isDarkTheme;
- (bool)isVibrantTheme;
- (id)largeTitleFont;
- (id)largeTitleFontStatic;
- (id)lightTextColor;
- (id)mediumBodyFont;
- (id)normalActionRowBackgroundColor;
- (id)normalActionRowBackgroundPressedColor;
- (id)rowButtonFont;
- (id)rowColor;
- (id)rowGlyphButtonFont;
- (id)sectionHeaderButtonFont;
- (id)sectionHeaderFont;
- (id)selectedRowColor;
- (id)separatorLineColor;
- (void)setUseSmallFont:(bool)arg1;
- (id)smallAttributionFont;
- (id)textColor;
- (unsigned long long)themeType;
- (id)tintColor;
- (id)titleFont;
- (bool)useSmallFont;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

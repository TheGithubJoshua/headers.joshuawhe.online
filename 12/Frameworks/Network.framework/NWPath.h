<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NWPath.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Network.framework/NWPath.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Network.framework/Network (1)
 */

@interface NWPath : NSObject <NWPrettyDescription> {
    NSObject<OS_nw_path> * _internalPath;
}

@property (nonatomic, readonly) NWBrowseDescriptor *browseDescriptor;
@property (nonatomic, readonly) NSUUID *clientID;
@property (nonatomic, readonly) NWInterface *connectedInterface;
@property (nonatomic, readonly) NWParameters *derivedParameters;
@property (getter=isDirect, nonatomic, readonly) bool direct;
@property (nonatomic, readonly) NSArray *dnsSearchDomains;
@property (nonatomic, readonly) NSArray *dnsServers;
@property (nonatomic, readonly) NSArray *dnsServersAsStrings;
@property (nonatomic, readonly) int dnsServiceID;
@property (nonatomic, readonly) NWEndpoint *effectiveLocalEndpoint;
@property (nonatomic, readonly) NWEndpoint *effectiveRemoteEndpoint;
@property (getter=isEligibleForCrazyIvan46, nonatomic, readonly) bool eligibleForCrazyIvan46;
@property (nonatomic, readonly) NWEndpoint *endpoint;
@property (getter=isExpensive, nonatomic, readonly) bool expensive;
@property (nonatomic, readonly) bool fallbackEligible;
@property (nonatomic, readonly) NWInterface *fallbackInterface;
@property (nonatomic, readonly) unsigned int fallbackInterfaceIndex;
@property (nonatomic, readonly) bool fallbackIsWeak;
@property (nonatomic, readonly) unsigned int filterControlUnit;
@property (getter=isFiltered, nonatomic, readonly) bool filtered;
@property (getter=isFlowDivert, nonatomic, readonly) bool flowDivert;
@property (nonatomic, readonly) unsigned int flowDivertControlUnit;
@property (nonatomic, readonly) NSArray *flows;
@property (nonatomic, readonly) bool hasBrowseDescriptor;
@property (nonatomic, readonly) NWInterface *interface;
@property (readonly) NSObject<OS_nw_path> *internalPath;
@property (getter=isListener, nonatomic, readonly) bool listener;
@property (getter=isLocal, nonatomic, readonly) bool local;
@property (nonatomic, readonly) long long maximumDatagramSize;
@property (nonatomic, readonly) long long mtu;
@property (nonatomic, readonly) NWParameters *parameters;
@property (nonatomic, readonly) unsigned int policyID;
@property (nonatomic, readonly, copy) NSString *privateDescription;
@property (nonatomic, readonly) NSArray *proxySettings;
@property (nonatomic, readonly) long long reason;
@property (nonatomic, readonly) NSString *reasonDescription;
@property (getter=isRoaming, nonatomic, readonly) bool roaming;
@property (nonatomic, readonly) NWInterface *scopedInterface;
@property (nonatomic, readonly) unsigned long long secondsSinceInterfaceChange;
@property (nonatomic, readonly) long long status;
@property (nonatomic, readonly) NSString *statusAsString;
@property (nonatomic, readonly) bool supportsDNS;
@property (nonatomic, readonly) bool supportsIPv4;
@property (nonatomic, readonly) bool supportsIPv6;
@property (getter=isViable, nonatomic, readonly) bool viable;

+ (id)allClientIDs;
+ (id)createStringFromStatus:(long long)arg1;
+ (id)pathForClientID:(id)arg1;
+ (id)pathWithProtocolBufferData:(id)arg1;

- (void).cxx_destruct;
- (id)browseDescriptor;
- (id)clientID;
- (id)connectedInterface;
- (id)copyFlowDivertToken;
- (id)createProtocolBufferObject;
- (id)delegateInterface;
- (id)derivedParameters;
- (id)description;
- (id)descriptionWithIndent:(int)arg1 showFullContent:(bool)arg2;
- (id)dnsSearchDomains;
- (id)dnsServers;
- (id)dnsServersAsStrings;
- (int)dnsServiceID;
- (id)effectiveLocalEndpoint;
- (id)effectiveRemoteEndpoint;
- (id)endpoint;
- (bool)fallbackEligible;
- (id)fallbackInterface;
- (unsigned int)fallbackInterfaceIndex;
- (bool)fallbackIsWeak;
- (unsigned int)filterControlUnit;
- (unsigned int)flowDivertControlUnit;
- (id)flows;
- (id)genericNetworkAgentsWithDomain:(id)arg1 type:(id)arg2;
- (bool)hasBrowseDescriptor;
- (bool)hasUnsatisfiedFallbackAgent;
- (id)inactiveNetworkAgentUUIDsOnlyVoluntary:(bool)arg1;
- (id)init;
- (id)initWithPath:(id)arg1;
- (id)interface;
- (id)internalPath;
- (bool)isDirect;
- (bool)isEligibleForCrazyIvan46;
- (bool)isEqualToPath:(id)arg1;
- (bool)isExpensive;
- (bool)isFiltered;
- (bool)isFlowDivert;
- (bool)isLinkQualityAbort;
- (bool)isListener;
- (bool)isLocal;
- (bool)isRoaming;
- (bool)isViable;
- (long long)maximumDatagramSize;
- (long long)mtu;
- (id)networkAgentsOfType:(Class)arg1;
- (id)parameters;
- (unsigned int)policyID;
- (id)privateDescription;
- (id)proxySettings;
- (long long)reason;
- (id)reasonDescription;
- (id)scopedInterface;
- (unsigned long long)secondsSinceInterfaceChange;
- (bool)shouldProbeConnectivity;
- (long long)status;
- (id)statusAsString;
- (bool)supportsDNS;
- (bool)supportsIPv4;
- (bool)supportsIPv6;
- (bool)unsatisfiedVoluntaryAgentMatchesAddress:(id)arg1 triggerImmediately:(bool*)arg2;
- (bool)usesInterfaceType:(long long)arg1;
- (bool)usesNetworkAgent:(id)arg1;
- (bool)usesNetworkAgentType:(Class)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

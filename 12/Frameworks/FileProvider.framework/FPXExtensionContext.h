<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>FPXExtensionContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/FileProvider.framework/FPXExtensionContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/FileProvider.framework/FileProvider (125.201)
 */

@interface FPXExtensionContext : NSExtensionContext <FPXVendor> {
    NSObject<OS_dispatch_queue> * _actionsQueue;
    NSMutableDictionary * _alternateContentsURLDictionary;
    NSMutableDictionary * _contextByDomainID;
    FPXDomainContext * _defaultDomainContext;
    NSMutableDictionary * _domainContextByURL;
    bool  _isBeingDeallocated;
    NSMutableSet * _listenerDelegates;
    NSObject<OS_dispatch_queue> * _notificationQueue;
    NSString * _providerIdentifier;
    NSObject<OS_dispatch_queue> * _queue;
    NSHashTable * _runningEnumerators;
}

@property (nonatomic, retain) FPXDomainContext *defaultDomainContext;
@property (nonatomic, readonly) NSString *providerIdentifier;

+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionAuxiliaryVendorProtocol;

- (void).cxx_destruct;
- (void)URLForItemID:(id)arg1 creatingPlaceholderIfMissing:(bool)arg2 ignoreAlternateContentsURL:(bool)arg3 completionHandler:(id /* block */)arg4;
- (id)_bounceURL:(id)arg1 originalName:(id)arg2 bounceIndex:(unsigned long long)arg3 error:(id*)arg4;
- (void)_deleteIndexInDomainContexts:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_importDocumentAtURL:(id)arg1 intoFolderWithIdentifier:(id)arg2 bounceOnCollision:(bool)arg3 originalName:(id)arg4 bounceIndex:(unsigned long long)arg5 reply:(id /* block */)arg6;
- (void)_persistedDocumentURLForURL:(id)arg1 itemID:(id)arg2 extension:(id)arg3 shouldCreatePlaceholder:(bool)arg4 completionHandler:(id /* block */)arg5;
- (id)_proxyWithCancellationHandler:(id)arg1 forClientOperation:(id)arg2;
- (void)_reparentItem:(id)arg1 underParent:(id)arg2 withNewName:(id)arg3 shouldBounce:(bool)arg4 bounceIndex:(unsigned long long)arg5 reply:(id /* block */)arg6;
- (id)_servicesForServiceNames:(id)arg1 itemID:(id)arg2;
- (void)_setTransaction:(id)arg1;
- (void)_startObservingCollectionWithProperties:(id)arg1 observer:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)addListenerDelegate:(id)arg1;
- (id)alternateContentsURLForItemID:(id)arg1;
- (void)dealloc;
- (id)defaultDomainContext;
- (id)defaultInstance;
- (void)deleteSearchableItemsWithDomainIdentifiers:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)didChangeItemID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)didUpdateAlternateContentsDocumentForDocumentAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)directValuesForAttributes:(id)arg1 forItemAtURL:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)domainContextForIdentifier:(id)arg1;
- (id)domainContextForItemID:(id)arg1;
- (id)domainContextForItemIDs:(id)arg1;
- (id)domainContextForURL:(id)arg1;
- (void)dropIndexForDomain:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)dumpIndexStateForDomain:(id)arg1 toFileHandler:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)enumeratorWasInvalidated:(id)arg1;
- (void)evictItemAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchRemoteFileProviderEndpointForProtocolName:(id)arg1 service:(id)arg2 itemURL:(id)arg3 needsItemURL:(bool)arg4 completionHandler:(id /* block */)arg5;
- (void)fetchSupportedServicesForDocumentAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)fetchSupportedServicesForItemID:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)identifierForItemAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)indexOneBatchInDomain:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)initWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 contextUUID:(id)arg3;
- (id)instanceForDomainIdentifier:(id)arg1;
- (id)instanceForItemID:(id)arg1;
- (id)instanceForItemIDs:(id)arg1;
- (id)instanceForURL:(id)arg1;
- (void)invalidate;
- (void)itemChangedAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)itemForURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)privilegedValuesForAttributes:(id)arg1 forItemAtURL:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)providePlaceholderAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)providerIdentifier;
- (void)removeListenerDelegate:(id)arg1;
- (void)removeTrashedItemsOlderThanDate:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setAlternateContentsURL:(id)arg1 onDocumentURL:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setDefaultDomainContext:(id)arg1;
- (void)setFavoriteRanks:(id)arg1 forItemIdentifiers:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setLastUsedDate:(id)arg1 forItemIDs:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setTagsData:(id)arg1 forItemIdentifiers:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)startOperation:(id)arg1 toCreateFolderWithName:(id)arg2 underParent:(id)arg3 bounceOnCollision:(bool)arg4 bounceIndex:(unsigned long long)arg5 reply:(id /* block */)arg6;
- (void)startOperation:(id)arg1 toCreateFolderWithName:(id)arg2 underParent:(id)arg3 bounceOnCollision:(bool)arg4 reply:(id /* block */)arg5;
- (void)startOperation:(id)arg1 toDeleteItems:(id)arg2 reply:(id /* block */)arg3;
- (void)startOperation:(id)arg1 toFetchDefaultContainerForBundleIdentifier:(id)arg2 englishName:(id)arg3 inDomainIdentifier:(id)arg4 reply:(id /* block */)arg5;
- (void)startOperation:(id)arg1 toFetchItemID:(id)arg2 reply:(id /* block */)arg3;
- (void)startOperation:(id)arg1 toFetchParentForItem:(id)arg2 recursively:(bool)arg3 reply:(id /* block */)arg4;
- (void)startOperation:(id)arg1 toFetchThumbnailsForItemIdentifiers:(id)arg2 size:(struct CGSize { double x1; double x2; })arg3 completionHandler:(id /* block */)arg4;
- (void)startOperation:(id)arg1 toImportDocumentsAtURLs:(id)arg2 withSandboxExtensions:(id)arg3 lastUsedDates:(id)arg4 intoFolderWithIdentifier:(id)arg5 bounceOnCollision:(bool)arg6 reply:(id /* block */)arg7;
- (void)startOperation:(id)arg1 toRenameItem:(id)arg2 toNewName:(id)arg3 reply:(id /* block */)arg4;
- (void)startOperation:(id)arg1 toReparentItems:(id)arg2 underParent:(id)arg3 shouldBounce:(bool)arg4 reply:(id /* block */)arg5;
- (void)startProvidingItemAtURL:(id)arg1 readingOptions:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (void)startWithPrincipalInstance:(id)arg1 domains:(id)arg2 alternateContentsDictionary:(id)arg3;
- (void)trashItemAtURL:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)trashItemsWithIdentifiers:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)untrashItemsWithIdentifiers:(id)arg1 toDirectoryWithIdentifier:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)updateDomains:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)valuesForAttributes:(id)arg1 forItemAtURL:(id)arg2 allowIdentifiers:(bool)arg3 completionHandler:(id /* block */)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HKQuery.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/HealthKit.framework/HKQuery.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/HealthKit.framework/HealthKit (1)
 */

@interface HKQuery : NSObject <HKQueryClientInterface, _HKXPCExportable> {
    long long  _activationState;
    NSUUID * _activationUUID;
    NSObject<OS_dispatch_queue> * _clientQueue;
    _Atomic int  _deactivateCallCount;
    _Atomic bool  _deactivating;
    <HKQueryDelegate> * _delegate;
    _HKFilter * _filter;
    bool  _hasBeenExecuted;
    HKObjectType * _objectType;
    NSPredicate * _predicate;
    HKQueryServerProxyProvider * _proxyProvider;
    NSObject<OS_dispatch_queue> * _queue;
    <HKQueryServerInterface> * _serverProxy;
    bool  _shouldSuppressDataCollection;
    HKHealthStore * _strongHealthStore;
}

@property (nonatomic, readonly) long long activationState;
@property (nonatomic, readonly) NSUUID *activationUUID;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly) long long deactivateCallCount;
@property (readonly) bool deactivating;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) <HKQueryDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=_filter, nonatomic, readonly) _HKFilter *filter;
@property (readonly) unsigned long long hash;
@property (retain) HKObjectType *objectType;
@property (retain) NSPredicate *predicate;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *queue;
@property (readonly) HKSampleType *sampleType;
@property (nonatomic) bool shouldSuppressDataCollection;
@property (readonly) Class superclass;

// Image: /System/Library/Frameworks/HealthKit.framework/HealthKit

+ (id)_cachedInterfaceForProtocol:(id)arg1 configurationHandler:(id /* block */)arg2;
+ (id)_predicateForObjectsFromAppleWatches;
+ (id)clientInterface;
+ (id)clientInterfaceProtocol;
+ (Class)configurationClass;
+ (void)configureClientInterface:(id)arg1;
+ (void)configureServerInterface:(id)arg1;
+ (id)predicateForActivityCachesBetweenStartDateComponents:(id)arg1 endDateComponents:(id)arg2;
+ (id)predicateForActivitySummariesBetweenStartDateComponents:(id)arg1 endDateComponents:(id)arg2;
+ (id)predicateForActivitySummaryWithDateComponents:(id)arg1;
+ (id)predicateForCategorySamplesWithOperatorType:(unsigned long long)arg1 value:(long long)arg2;
+ (id)predicateForClinicalRecordsFromSource:(id)arg1 FHIRResourceType:(id)arg2 identifier:(id)arg3;
+ (id)predicateForClinicalRecordsWithFHIRResourceType:(id)arg1;
+ (id)predicateForCreationDateWithTodayViewRange:(id)arg1;
+ (id)predicateForDiagnosticTestResultCategory:(id)arg1;
+ (id)predicateForObjectWithUUID:(id)arg1;
+ (id)predicateForObjectsFromDevices:(id)arg1;
+ (id)predicateForObjectsFromSource:(id)arg1;
+ (id)predicateForObjectsFromSourceRevisions:(id)arg1;
+ (id)predicateForObjectsFromSources:(id)arg1;
+ (id)predicateForObjectsFromWorkout:(id)arg1;
+ (id)predicateForObjectsWithDeviceProperty:(id)arg1 allowedValues:(id)arg2;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1 allowedValues:(id)arg2;
+ (id)predicateForObjectsWithMetadataKey:(id)arg1 operatorType:(unsigned long long)arg2 value:(id)arg3;
+ (id)predicateForObjectsWithNoCorrelation;
+ (id)predicateForObjectsWithUUIDs:(id)arg1;
+ (id)predicateForQuantitySamplesWithOperatorType:(unsigned long long)arg1 quantity:(id)arg2;
+ (id)predicateForRecordsFromClinicalAccountIdentifier:(id)arg1;
+ (id)predicateForRecordsFromGatewayWithExternalIdentifier:(id)arg1;
+ (id)predicateForRecordsWithSortDateFromStartDateComponents:(id)arg1 endDateComponents:(id)arg2;
+ (id)predicateForSamplesAssociatedWithSample:(id)arg1;
+ (id)predicateForSamplesForDayFromDate:(id)arg1 calendar:(id)arg2 options:(unsigned long long)arg3;
+ (id)predicateForSamplesWithStartDate:(id)arg1 endDate:(id)arg2 inclusiveEndDates:(bool)arg3 options:(unsigned long long)arg4;
+ (id)predicateForSamplesWithStartDate:(id)arg1 endDate:(id)arg2 options:(unsigned long long)arg3;
+ (id)predicateForSamplesWithinDateInterval:(id)arg1 options:(unsigned long long)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned long long)arg1 duration:(double)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned long long)arg1 totalDistance:(id)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned long long)arg1 totalEnergyBurned:(id)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned long long)arg1 totalFlightsClimbed:(id)arg2;
+ (id)predicateForWorkoutsWithOperatorType:(unsigned long long)arg1 totalSwimmingStrokeCount:(id)arg2;
+ (id)predicateForWorkoutsWithWorkoutActivityType:(unsigned long long)arg1;
+ (id)serverInterface;
+ (id)serverInterfaceProtocol;
+ (bool)shouldApplyAdditionalPredicateForObjectType:(id)arg1;
+ (id)taskIdentifier;

- (void).cxx_destruct;
- (id)_filter;
- (id)_initWithObjectType:(id)arg1 predicate:(id)arg2;
- (id)_predicateFilterClasses;
- (void)_queue_activateWithHealthStore:(id)arg1 activationUUID:(id)arg2 completion:(id /* block */)arg3;
- (void)_queue_deactivateWithError:(id)arg1;
- (void)_queue_finishActivationWithServerProxy:(id)arg1 activationUUID:(id)arg2 error:(id)arg3 completion:(id /* block */)arg4;
- (void)_throwInvalidArgumentExceptionIfHasBeenExecuted:(SEL)arg1;
- (void)activateWithClientQueue:(id)arg1 healthStore:(id)arg2 delegate:(id)arg3 completion:(id /* block */)arg4;
- (long long)activationState;
- (id)activationUUID;
- (id)clientQueue;
- (void)client_deliverError:(id)arg1 forQuery:(id)arg2;
- (void)connectionInterrupted;
- (void)connectionInvalidated;
- (void)deactivate;
- (long long)deactivateCallCount;
- (bool)deactivating;
- (id)delegate;
- (id)description;
- (id)exportedInterface;
- (id)objectType;
- (id)predicate;
- (id)queue;
- (void)queue_deactivate;
- (void)queue_deliverError:(id)arg1;
- (void)queue_dispatchToClientForUUID:(id)arg1 block:(id /* block */)arg2;
- (void)queue_populateConfiguration:(id)arg1;
- (void)queue_queryDidDeactivate:(id)arg1;
- (void)queue_queryDidFinishActivation:(id)arg1 success:(bool)arg2 error:(id)arg3;
- (bool)queue_shouldDeactivateAfterInitialResults;
- (void)queue_validate;
- (void)reactivateWithHealthStore:(id)arg1;
- (id)remoteInterface;
- (id)sampleType;
- (void)setObjectType:(id)arg1;
- (void)setPredicate:(id)arg1;
- (void)setShouldSuppressDataCollection:(bool)arg1;
- (bool)shouldSuppressDataCollection;

// Image: /System/Library/PrivateFrameworks/FitnessUI.framework/FitnessUI

+ (id)fiui_predicateForWorkoutsWithMetadataIndoor:(bool)arg1;
+ (id)fiui_predicateForWorkoutsWithMetadataSwimmingLocationType:(long long)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

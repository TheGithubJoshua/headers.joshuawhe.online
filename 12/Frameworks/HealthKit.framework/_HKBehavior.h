<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_HKBehavior.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/HealthKit.framework/_HKBehavior.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/HealthKit.framework/HealthKit (1)
 */

@interface _HKBehavior : NSObject {
    bool  _collectsCalorimetry;
    bool  _collectsData;
    bool  _deviceSupportsHeartRateMotionContexts;
    bool  _futureMigrationsEnabled;
    bool  _hasTelephonyCapability;
    NSString * _hostClinicalReadAuthorizationUsageDescription;
    NSString * _hostReadAuthorizationUsageDescription;
    NSString * _hostWriteAuthorizationUsageDescription;
    bool  _isAppleInternalInstall;
    bool  _isAppleWatch;
    bool  _isCompanionCapable;
    bool  _isDeviceSupported;
    bool  _isRunningStoreDemoMode;
    bool  _isTestingDevice;
    NSNumber * _overridenEnableManateeForHSA2Accounts;
    NSNumber * _overridenSupportsSwimmingWorkoutSessions;
    bool  _performsWorkoutCondensation;
    bool  _runningInStoreDemoModeF201;
    bool  _supportsAWDMetricSubmission;
    bool  _supportsActivitySharing;
    bool  _supportsAppSubscriptions;
    bool  _supportsCloudSync;
    bool  _supportsFeatureAvailabilityAssets;
    bool  _supportsHeartRateDataCollection;
    bool  _supportsNanoSync;
    bool  _supportsRemoteAuthorization;
    bool  _supportsSampleExpiration;
    bool  _supportsWorkouts;
}

@property (nonatomic) bool collectsCalorimetry;
@property (nonatomic) bool collectsData;
@property (nonatomic, readonly, copy) NSString *currentDeviceClass;
@property (nonatomic, readonly, copy) NSString *currentDeviceDisplayName;
@property (nonatomic, readonly, copy) NSString *currentDeviceManufacturer;
@property (nonatomic, readonly, copy) NSString *currentDeviceName;
@property (nonatomic, readonly, copy) NSString *currentDeviceProductType;
@property (nonatomic, readonly, copy) NSString *currentDeviceRegionCode;
@property (nonatomic, readonly) unsigned long long currentDiskSpaceAvailable;
@property (nonatomic, readonly) NSDictionary *currentDiskUsage;
@property (nonatomic, readonly, copy) NSString *currentInternalDeviceModel;
@property (nonatomic, readonly, copy) NSString *currentOSBuild;
@property (nonatomic, readonly, copy) NSString *currentOSName;
@property (nonatomic, readonly, copy) NSString *currentOSVersion;
@property (nonatomic, readonly) struct { long long x1; long long x2; long long x3; } currentOSVersionStruct;
@property (nonatomic) bool deviceSupportsHeartRateMotionContexts;
@property (nonatomic) bool futureMigrationsEnabled;
@property (nonatomic) bool hasTelephonyCapability;
@property (nonatomic, copy) NSString *hostClinicalReadAuthorizationUsageDescription;
@property (nonatomic, copy) NSString *hostReadAuthorizationUsageDescription;
@property (nonatomic, copy) NSString *hostWriteAuthorizationUsageDescription;
@property (nonatomic) bool isAppleInternalInstall;
@property (nonatomic) bool isAppleWatch;
@property (nonatomic) bool isCompanionCapable;
@property (nonatomic, readonly) bool isCurrentDeviceN2XA;
@property (nonatomic, readonly) bool isCurrentDeviceSeries3OrOlder;
@property (nonatomic) bool isDeviceSupported;
@property (nonatomic, readonly) bool isRunningStoreDemoMode;
@property (nonatomic) bool isTestingDevice;
@property (nonatomic, readonly, copy) NSTimeZone *localTimeZone;
@property (getter=isManateeEnabledForHSA2Accounts, nonatomic, readonly) bool manateeEnabledForHSA2Accounts;
@property (nonatomic) bool performsWorkoutCondensation;
@property (nonatomic, readonly) bool runningInStoreDemoModeF201;
@property (nonatomic) bool supportsAWDMetricSubmission;
@property (nonatomic) bool supportsActivitySharing;
@property (nonatomic) bool supportsAppSubscriptions;
@property (nonatomic) bool supportsCloudSync;
@property (nonatomic, readonly) bool supportsFeatureAvailabilityAssets;
@property (nonatomic) bool supportsHeartRateDataCollection;
@property (nonatomic) bool supportsNanoSync;
@property (nonatomic) bool supportsRemoteAuthorization;
@property (nonatomic) bool supportsSampleExpiration;
@property (nonatomic) bool supportsSwimmingWorkoutSessions;
@property (nonatomic) bool supportsWorkouts;
@property (nonatomic, readonly) unsigned long long totalDiskCapacity;

+ (bool)_deviceSupportsHeartRateMotionContexts;
+ (bool)_futureMigrationsEnabled;
+ (bool)_hasCompletedBuddy;
+ (bool)_hasTelephonyCapability;
+ (bool)_isAppleInternalInstall;
+ (bool)_isDeviceSupported;
+ (bool)_isForceBuddyEnabled;
+ (bool)_isProductTypeSeries3OrOlder:(id)arg1;
+ (bool)_isRunningStoreDemoMode;
+ (bool)_performsWorkoutCondensation;
+ (bool)_readEnableManateeForHSA2AccountsFromHealthdDefaults;
+ (bool)_runningInStoreDemoModeF201;
+ (long long)_runningInStoreDemoModeFProgramNumber;
+ (bool)_shouldShowBuddy;
+ (bool)activePairedWatchHasSmartFitnessCoaching;
+ (bool)activePairedWatchSupportsBradycardiaDetection;
+ (bool)activePairedWatchSupportsHeartRateMotionContexts;
+ (id)activePairedWatchWithoutSOSMedicalIDContactsSupport;
+ (bool)allPairedWatchesMeetMinimumVersion:(int)arg1;
+ (bool)allPairedWatchesSupportBradycardiaDetection;
+ (bool)allPairedWatchesSupportHeartRateMotionContexts;
+ (bool)anyPairedWatchHasFlightsClimbedCapability;
+ (bool)anyPairedWatchHasSOSModeCapability;
+ (id)behaviorQueue;
+ (id)currentDeviceClass;
+ (id)currentDeviceDisplayName;
+ (id)currentDeviceManufacturer;
+ (id)currentDeviceName;
+ (id)currentDeviceProductType;
+ (id)currentDeviceRegionCode;
+ (id)currentDeviceReleaseType;
+ (id)currentOSBuild;
+ (id)currentOSVersion;
+ (struct { long long x1; long long x2; long long x3; })currentOSVersionStruct;
+ (bool)currentlyPairedWatchMeetsMinimumVersion:(int)arg1;
+ (void)disableForceBuddy;
+ (bool)hasCompletedBuddy;
+ (bool)hasPairedWatch;
+ (bool)hasTelephonyCapability;
+ (bool)isAppleInternalInstall;
+ (bool)isDeviceSupported;
+ (bool)isManateeEnabledByDefault;
+ (bool)isRunningStoreDemoMode;
+ (bool)isTestingDevice;
+ (int)nanoSyncProtocolVersionForCompanionSystemBuildVersion:(id)arg1;
+ (int)nanoSyncProtocolVersionForWatchSystemBuildVersion:(id)arg1;
+ (void)resetSharedBehavior;
+ (bool)runningInStoreDemoModeF201;
+ (void)setSharedBehavior:(id)arg1;
+ (id)sharedBehavior;
+ (bool)shouldShowBuddy;
+ (bool)showSensitiveLogItems;
+ (int)syncProtocolVersionForNRDevice:(id)arg1;

- (void).cxx_destruct;
- (bool)collectsCalorimetry;
- (bool)collectsData;
- (id)currentDeviceClass;
- (id)currentDeviceDisplayName;
- (id)currentDeviceManufacturer;
- (id)currentDeviceName;
- (id)currentDeviceProductType;
- (id)currentDeviceRegionCode;
- (id)currentDeviceReleaseType;
- (unsigned long long)currentDiskSpaceAvailable;
- (id)currentDiskUsage;
- (id)currentInternalDeviceModel;
- (id)currentOSBuild;
- (id)currentOSName;
- (id)currentOSVersion;
- (struct { long long x1; long long x2; long long x3; })currentOSVersionStruct;
- (bool)deviceSupportsHeartRateMotionContexts;
- (bool)futureMigrationsEnabled;
- (bool)hasTelephonyCapability;
- (id)hostClinicalReadAuthorizationUsageDescription;
- (id)hostReadAuthorizationUsageDescription;
- (id)hostWriteAuthorizationUsageDescription;
- (id)init;
- (bool)isAppleInternalInstall;
- (bool)isAppleWatch;
- (bool)isCompanionCapable;
- (bool)isCurrentDeviceN2XA;
- (bool)isCurrentDeviceSeries3OrOlder;
- (bool)isDeviceSupported;
- (bool)isManateeEnabledForHSA2Accounts;
- (bool)isRunningStoreDemoMode;
- (bool)isTestingDevice;
- (id)localTimeZone;
- (bool)performsWorkoutCondensation;
- (bool)runningInStoreDemoModeF201;
- (void)setCollectsCalorimetry:(bool)arg1;
- (void)setCollectsData:(bool)arg1;
- (void)setDeviceSupportsHeartRateMotionContexts:(bool)arg1;
- (void)setFutureMigrationsEnabled:(bool)arg1;
- (void)setHasTelephonyCapability:(bool)arg1;
- (void)setHostClinicalReadAuthorizationUsageDescription:(id)arg1;
- (void)setHostReadAuthorizationUsageDescription:(id)arg1;
- (void)setHostWriteAuthorizationUsageDescription:(id)arg1;
- (void)setIsAppleInternalInstall:(bool)arg1;
- (void)setIsAppleWatch:(bool)arg1;
- (void)setIsCompanionCapable:(bool)arg1;
- (void)setIsDeviceSupported:(bool)arg1;
- (void)setIsTestingDevice:(bool)arg1;
- (void)setManateeEnabledForHSA2AccountsOverride:(bool)arg1;
- (void)setPerformsWorkoutCondensation:(bool)arg1;
- (void)setSupportsAWDMetricSubmission:(bool)arg1;
- (void)setSupportsActivitySharing:(bool)arg1;
- (void)setSupportsAppSubscriptions:(bool)arg1;
- (void)setSupportsCloudSync:(bool)arg1;
- (void)setSupportsHeartRateDataCollection:(bool)arg1;
- (void)setSupportsNanoSync:(bool)arg1;
- (void)setSupportsRemoteAuthorization:(bool)arg1;
- (void)setSupportsSampleExpiration:(bool)arg1;
- (void)setSupportsSwimmingWorkoutSessions:(bool)arg1;
- (void)setSupportsWorkouts:(bool)arg1;
- (bool)supportsAWDMetricSubmission;
- (bool)supportsActivitySharing;
- (bool)supportsAppSubscriptions;
- (bool)supportsCloudSync;
- (bool)supportsFeatureAvailabilityAssets;
- (bool)supportsHeartRateDataCollection;
- (bool)supportsNanoSync;
- (bool)supportsRemoteAuthorization;
- (bool)supportsSampleExpiration;
- (bool)supportsSwimmingWorkoutSessions;
- (bool)supportsWorkouts;
- (unsigned long long)totalDiskCapacity;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>SCNPhysicsField.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/SceneKit.framework/SCNPhysicsField.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit (470.10)
 */

@interface SCNPhysicsField : NSObject <NSCopying, NSSecureCoding> {
    bool  _active;
    unsigned long long  _categoryBitMask;
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    }  _direction;
    bool  _exclusive;
    double  _falloffExponent;
    struct c3dPhysicsField { int (**x1)(); struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_2_1_1[4]; } x2; float x3; float x4; float x5; unsigned int x6; bool x7; bool x8; bool x9; bool x10; float x11; } * _field;
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    }  _halfExtent;
    double  _minimumDistance;
    SCNNode * _node;
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    }  _offset;
    long long  _scope;
    double  _strength;
    bool  _usesEllipsoidalExtent;
    SCNPhysicsWorld * _world;
}

@property (getter=isActive, nonatomic) bool active;
@property (nonatomic) unsigned long long categoryBitMask;
@property (nonatomic) struct SCNVector3 { float x1; float x2; float x3; } direction;
@property (getter=isExclusive, nonatomic) bool exclusive;
@property (nonatomic) double falloffExponent;
@property (nonatomic) struct SCNVector3 { float x1; float x2; float x3; } halfExtent;
@property (nonatomic) double minimumDistance;
@property (nonatomic) struct SCNVector3 { float x1; float x2; float x3; } offset;
@property (nonatomic) long long scope;
@property (nonatomic) double strength;
@property (nonatomic) bool usesEllipsoidalExtent;

+ (double)_displayScaleFactor;
+ (void)_setDisplayScaleFactor:(double)arg1;
+ (id)customFieldWithEvaluationBlock:(id /* block */)arg1;
+ (id)dragField;
+ (id)electricField;
+ (id)field;
+ (id)linearGravityField;
+ (id)magneticField;
+ (id)noiseFieldWithSmoothness:(double)arg1 animationSpeed:(double)arg2;
+ (id)radialGravityField;
+ (id)springField;
+ (bool)supportsSecureCoding;
+ (id)turbulenceFieldWithSmoothness:(double)arg1 animationSpeed:(double)arg2;
+ (id)vortexField;

- (void)_commonInit;
- (struct c3dPhysicsField { int (**x1)(); struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_2_1_1[4]; } x2; float x3; float x4; float x5; unsigned int x6; bool x7; bool x8; bool x9; bool x10; float x11; }*)_createField;
- (struct c3dPhysicsField { int (**x1)(); struct { /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x_2_1_1[4]; } x2; float x3; float x4; float x5; unsigned int x6; bool x7; bool x8; bool x9; bool x10; float x11; }*)_handle;
- (id)_owner;
- (void)_removeOwner;
- (void)_setOwner:(id)arg1;
- (void)_setWorld:(id)arg1;
- (void)_setupCommonProperties;
- (void)_willRemoveFromPhysicsWorld;
- (unsigned long long)categoryBitMask;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (struct SCNVector3 { float x1; float x2; float x3; })direction;
- (void)encodeWithCoder:(id)arg1;
- (struct SCNVector3 { float x1; float x2; float x3; })evalAtLocation:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (bool)exclusive;
- (double)falloffExponent;
- (struct SCNVector3 { float x1; float x2; float x3; })halfExtent;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (bool)isActive;
- (bool)isExclusive;
- (double)minimumDistance;
- (struct SCNVector3 { float x1; float x2; float x3; })offset;
- (long long)scope;
- (void)setActive:(bool)arg1;
- (void)setCategoryBitMask:(unsigned long long)arg1;
- (void)setDirection:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setExclusive:(bool)arg1;
- (void)setFalloffExponent:(double)arg1;
- (void)setHalfExtent:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setMinimumDistance:(double)arg1;
- (void)setOffset:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setScope:(long long)arg1;
- (void)setStrength:(double)arg1;
- (void)setUsesEllipsoidalExtent:(bool)arg1;
- (double)strength;
- (bool)supportsDirection;
- (bool)supportsOffset;
- (bool)usesEllipsoidalExtent;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CSSearchQuery.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreSpotlight.framework/CSSearchQuery.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight (231.49)
 */

@interface CSSearchQuery : NSObject <MDSearchQueryResultProcessor> {
    bool  _cancelled;
    id /* block */  _changedAttributesHandler;
    id /* block */  _changedItemsHandler;
    id /* block */  _completionHandler;
    id /* block */  _completionsHandler;
    id /* block */  _countChangedHandler;
    bool  _fetchesURLs;
    bool  _finished;
    id /* block */  _foundAttributesHandler;
    unsigned long long  _foundItemCount;
    id /* block */  _foundItemsHandler;
    bool  _gatherEnded;
    id /* block */  _gatherEndedHandler;
    NSMapTable * _liveIndexBundleIDToBundleString;
    NSMapTable * _liveIndexBundleIDToIndexItemIDMap;
    NSString * _privateBundleID;
    bool  _privateIndex;
    CSSearchQueryContext * _queryContext;
    NSString * _queryString;
    NSObject<OS_dispatch_queue> * _queue;
    id /* block */  _removedItemsHandler;
    id /* block */  _resolvedAttributeNamesHandler;
    NSArray * _resolvedFetchAttributes;
    bool  _started;
}

@property (getter=isCancelled, readonly) bool cancelled;
@property (copy) id /* block */ changedAttributesHandler;
@property (copy) id /* block */ changedItemsHandler;
@property (copy) id /* block */ completionHandler;
@property (copy) id /* block */ completionsHandler;
@property (copy) id /* block */ countChangedHandler;
@property (nonatomic, readonly) NSArray *fetchAttributes;
@property (copy) id /* block */ foundAttributesHandler;
@property (readonly) unsigned long long foundItemCount;
@property (copy) id /* block */ foundItemsHandler;
@property (copy) id /* block */ gatherEndedHandler;
@property (nonatomic, retain) NSMapTable *liveIndexBundleIDToBundleString;
@property (nonatomic, retain) NSMapTable *liveIndexBundleIDToIndexItemIDMap;
@property (nonatomic, retain) NSString *privateBundleID;
@property (nonatomic) bool privateIndex;
@property (copy) NSArray *protectionClasses;
@property (nonatomic, retain) CSSearchQueryContext *queryContext;
@property (nonatomic, copy) NSString *queryString;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (copy) id /* block */ removedItemsHandler;
@property (copy) id /* block */ resolvedAttributeNamesHandler;
@property (nonatomic, retain) NSArray *resolvedFetchAttributes;

+ (id)_attributesForURLs;
+ (id)_makeQueryErrorWithErrorCode:(long long)arg1 description:(id)arg2 underlyingError:(id)arg3;
+ (id)_makeUniqueFetchAttributesWithAttributes:(id)arg1;
+ (id)_requiredAttributeSet;
+ (id)_requiredAttributes;
+ (void)userEngagedWithUniqueIdentifier:(id)arg1 bundleId:(id)arg2 forUserQuery:(id)arg3 interactionType:(int)arg4;

- (void).cxx_destruct;
- (void)_finishWithError:(id)arg1;
- (bool)attribute;
- (id)bundleIDs;
- (void)cancel;
- (id /* block */)changedAttributesHandler;
- (id /* block */)changedItemsHandler;
- (id /* block */)completionHandler;
- (id /* block */)completionsHandler;
- (id)connection;
- (id /* block */)countChangedHandler;
- (bool)counting;
- (id)createCSSearchableItemWithOID:(long long)arg1 values:(id*)arg2 valueCount:(unsigned long long)arg3 protectionClass:(id)arg4 isTopHitQuery:(bool)arg5;
- (double)currentTime;
- (id)debugDescription;
- (id)description;
- (void)didFinishWithError:(id)arg1;
- (void)didResolveFriendlyAttributeNames:(id)arg1;
- (void)didReturnResults:(long long)arg1 resultsData:(id)arg2 oidData:(id)arg3 protectionClass:(id)arg4 completionHandler:(id /* block */)arg5;
- (id)fetchAttributes;
- (id /* block */)foundAttributesHandler;
- (unsigned long long)foundItemCount;
- (id /* block */)foundItemsHandler;
- (id /* block */)gatherEndedHandler;
- (bool)grouped;
- (id)init;
- (id)initWithQueryString:(id)arg1 attributes:(id)arg2;
- (id)initWithQueryString:(id)arg1 context:(id)arg2;
- (id)initWithQueryString:(id)arg1 options:(id)arg2;
- (bool)internal;
- (bool)isCancelled;
- (bool)live;
- (id)liveIndexBundleIDToBundleString;
- (id)liveIndexBundleIDToIndexItemIDMap;
- (id)options;
- (id)privateBundleID;
- (bool)privateIndex;
- (void)processAttributesData:(id)arg1 update:(bool)arg2 protectionClass:(id)arg3;
- (void)processCompletionsResultsData:(id)arg1 protectionClass:(id)arg2 isTopHitQuery:(bool)arg3;
- (void)processLiveResultsData:(id)arg1 oidData:(id)arg2 protectionClass:(id)arg3 isTopHitQuery:(bool)arg4;
- (void)processRemoveResultsData:(id)arg1 protectionClass:(id)arg2;
- (void)processResultFromPlist:(id)arg1 atIndex:(unsigned long long)arg2 protectionClass:(id)arg3 oids:(long long*)arg4 oidCount:(unsigned int)arg5 items:(id)arg6 isTopHitQuery:(bool)arg7;
- (id)processResultFromPlist:(id)arg1 protectionClass:(id)arg2 isTopHitQuery:(bool)arg3;
- (void)processResultsData:(id)arg1 protectionClass:(id)arg2 isTopHitQuery:(bool)arg3;
- (id)protectionClasses;
- (id)queryContext;
- (id)queryString;
- (id)queue;
- (bool)removeLiveOID:(long long)arg1 outBundleID:(id*)arg2 outIdentifier:(id*)arg3;
- (id /* block */)removedItemsHandler;
- (id /* block */)resolvedAttributeNamesHandler;
- (id)resolvedFetchAttributes;
- (void)setBundleIDs:(id)arg1;
- (void)setChangedAttributesHandler:(id /* block */)arg1;
- (void)setChangedItemsHandler:(id /* block */)arg1;
- (void)setCompletionHandler:(id /* block */)arg1;
- (void)setCompletionsHandler:(id /* block */)arg1;
- (void)setCountChangedHandler:(id /* block */)arg1;
- (void)setFoundAttributesHandler:(id /* block */)arg1;
- (void)setFoundItemsHandler:(id /* block */)arg1;
- (void)setGatherEndedHandler:(id /* block */)arg1;
- (void)setLiveIndexBundleIDToBundleString:(id)arg1;
- (void)setLiveIndexBundleIDToIndexItemIDMap:(id)arg1;
- (void)setPrivateBundleID:(id)arg1;
- (void)setPrivateIndex:(bool)arg1;
- (void)setProtectionClasses:(id)arg1;
- (void)setQueryContext:(id)arg1;
- (void)setQueryString:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)setRemovedItemsHandler:(id /* block */)arg1;
- (void)setResolvedAttributeNamesHandler:(id /* block */)arg1;
- (void)setResolvedFetchAttributes:(id)arg1;
- (void)start;
- (void)updateLiveOID:(long long)arg1 bundleID:(id)arg2 identifier:(id)arg3;
- (void)userEngagedWithResult:(id)arg1 interactionType:(int)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKBehaviorOptions.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CloudKit.framework/CKBehaviorOptions.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit (736.235)
 */

@interface CKBehaviorOptions : NSObject {
    NSString * _automatedDeviceGroup;
    NSUserDefaults * _automatedDeviceGroupDefaults;
    NSMutableDictionary * _cachedPrefs;
    NSObject<OS_dispatch_queue> * _cachedPrefsQueue;
    int  _ckToken;
    bool  _didReadAutomatedDeviceGroup;
    int  _mcToken;
}

@property (nonatomic, retain) NSString *automatedDeviceGroup;
@property (nonatomic, retain) NSUserDefaults *automatedDeviceGroupDefaults;
@property (nonatomic, retain) NSMutableDictionary *cachedPrefs;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *cachedPrefsQueue;
@property (nonatomic) int ckToken;
@property bool didReadAutomatedDeviceGroup;
@property (nonatomic) int mcToken;

+ (id)sharedOptions;

- (void).cxx_destruct;
- (bool)CFNetworkLogging;
- (const char *)CKCtlPrompt;
- (bool)CKTimeLogging;
- (bool)CKTimeLoggingDetailed;
- (double)PCSCacheMinTime;
- (unsigned long long)PCSCacheSize;
- (int)PCSRetryCount;
- (id)_behaviorContainerOptionForKey:(id)arg1;
- (id)_behaviorOptionForKey:(id)arg1;
- (bool)_buildIsOverridden;
- (id)_getArrayOptionForKey:(id)arg1 defaultValue:(id)arg2;
- (bool)_getBoolOptionForKey:(id)arg1 defaultValue:(bool)arg2;
- (double)_getDoubleOptionForKey:(id)arg1 defaultValue:(double)arg2;
- (int)_getIntOptionForKey:(id)arg1 defaultValue:(int)arg2;
- (id)_getStringOptionForKey:(id)arg1 defaultValue:(id)arg2;
- (id)_getStringOptionLockedForKey:(id)arg1 defaultValue:(id)arg2;
- (id)_init;
- (void)_setPref:(id)arg1 forKey:(id)arg2;
- (void)_startListeningForNotifications;
- (id)_urlForKey:(id)arg1 defaultURLString:(id)arg2;
- (bool)allowExpiredDNSBehavior;
- (unsigned long long)assetEvictionGracePeriodOnHighWatermarkWithDefaultValue:(unsigned long long)arg1;
- (unsigned long long)assetEvictionGracePeriodWithDefaultValue:(unsigned long long)arg1;
- (id)automatedDeviceGroup;
- (id)automatedDeviceGroupDefaults;
- (int)backgroundSessionConnectionPoolLimitWithDefaultValue:(int)arg1;
- (id)buildVersion;
- (id)cachedPrefs;
- (id)cachedPrefsQueue;
- (int)cachedRecordExpiryTime;
- (int)ckToken;
- (int)clientThrottleQueueWidth;
- (bool)compressRequests;
- (id)configBaseURL;
- (id)containerIDToForceFatalManateeZoneDecryptionFailure;
- (id)customCloudDBBaseURL;
- (id)customCodeServiceBaseURL;
- (id)customDeviceServiceBaseURL;
- (id)customMetricsServiceBaseURL;
- (id)customShareServiceBaseURL;
- (void)dealloc;
- (int)defaultRetryAfter;
- (bool)didReadAutomatedDeviceGroup;
- (bool)disableCaching;
- (bool)enableMMCSMetricsWithDefaultValue:(bool)arg1;
- (bool)enableMescal;
- (bool)evictRecentAssets;
- (long long)flowControlBudget;
- (long long)flowControlBudgetOverride;
- (double)flowControlRegeneration;
- (double)flowControlRegenerationOverride;
- (bool)highPriorityURLDelegates;
- (bool)isAppleInternalInstall;
- (bool)logTraffic;
- (bool)logTrafficToTextFile;
- (int)longlivedOperationMaxRetryCount;
- (int)longlivedOperationThrottlingRetryCount;
- (unsigned long long)maxBatchSize;
- (unsigned long long)maxPackageDownloadsPerBatchWithDefaultValue:(unsigned long long)arg1;
- (unsigned long long)maxPackageUploadsPerBatchWithDefaultValue:(unsigned long long)arg1;
- (double)maxRecentProxyAge;
- (double)maxTimeIntervalSinceLastZoneishPCSKeyRoll;
- (double)maximumQueuedFetchWaitTime;
- (double)maximumThrottleSeconds;
- (double)maximumWaitAfterFetchRequest;
- (int)mcToken;
- (double)minTTRPromptInterval;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (double)operationTimeout;
- (bool)optimisticPCS;
- (id)otherAccountsWithDefaultValue:(id)arg1;
- (double)packageGCGracePeriod;
- (double)packageGCPeriod;
- (bool)pipelineFetchAllChangesRequests;
- (id)primaryAccountEmailOverride;
- (id)primaryAccountPasswordOverride;
- (id)productName;
- (id)productVersion;
- (double)publicIdentitiesExpirationTimeout;
- (unsigned long long)recentProxiesToSave;
- (unsigned long long)recordCacheSizeLimit;
- (id)recordNamesForFakingDecryptionFailure;
- (bool)rollRecordMasterKeysOnUnshare;
- (bool)rollRecordPCSMasterKeys;
- (bool)rollZonePCSIdentities;
- (bool)sandboxCloudD;
- (unsigned long long)savedErrorCount;
- (bool)sendDebugHeader;
- (void)setAutomatedDeviceGroup:(id)arg1;
- (void)setAutomatedDeviceGroupDefaults:(id)arg1;
- (void)setBuildVersion:(id)arg1;
- (void)setCFNetworkLogging:(bool)arg1;
- (void)setCKCtlPrompt:(char *)arg1;
- (void)setCKTimeLogging:(bool)arg1;
- (void)setCKTimeLoggingDetailed:(bool)arg1;
- (void)setCachedPrefs:(id)arg1;
- (void)setCachedPrefsQueue:(id)arg1;
- (void)setCachedRecordExpiryTime:(int)arg1;
- (void)setCkToken:(int)arg1;
- (void)setCompressRequests:(bool)arg1;
- (void)setConfigBaseURL:(id)arg1;
- (void)setContainerIDToForceFatalManateeZoneDecryptionFailure:(id)arg1;
- (void)setCustomCloudDBBaseURL:(id)arg1;
- (void)setCustomCodeServiceBaseURL:(id)arg1;
- (void)setCustomDeviceServiceBaseURL:(id)arg1;
- (void)setCustomMetricsServiceBaseURL:(id)arg1;
- (void)setCustomShareServiceBaseURL:(id)arg1;
- (void)setDidReadAutomatedDeviceGroup:(bool)arg1;
- (void)setDisableCaching:(bool)arg1;
- (void)setEnableMescal:(bool)arg1;
- (void)setLogTraffic:(bool)arg1;
- (void)setLogTrafficToTextFile:(bool)arg1;
- (void)setMcToken:(int)arg1;
- (void)setModTimeInAssetCacheEviction:(bool)arg1;
- (void)setOperationTimeout:(double)arg1;
- (void)setOptimisticPCS:(bool)arg1;
- (void)setPrimaryAccountEmailOverride:(id)arg1;
- (void)setPrimaryAccountPasswordOverride:(id)arg1;
- (void)setProductName:(id)arg1;
- (void)setProductVersion:(id)arg1;
- (void)setRollRecordMasterKeysOnUnshare:(bool)arg1;
- (void)setRollRecordPCSMasterKeys:(bool)arg1;
- (void)setRollZonePCSIdentities:(bool)arg1;
- (void)setSendDebugHeader:(bool)arg1;
- (void)setSetupBaseURL:(id)arg1;
- (void)setShouldProfileSQL:(bool)arg1;
- (void)setSqlBatchCount:(long long)arg1;
- (void)setSqlBatchTime:(double)arg1;
- (void)setTestRunIDHeader:(id)arg1;
- (void)setTrafficLogMaximumDataSize:(int)arg1;
- (void)setUseEncryption:(bool)arg1;
- (void)setUseEnhancedPCSEncryptionContext:(bool)arg1;
- (void)setUsePreauth:(bool)arg1;
- (void)setUseStingray:(bool)arg1;
- (id)setupBaseURL;
- (double)shareAcceptorRetrievingDialogDelay;
- (double)shareAcceptorRetrievingDialogMinPeriod;
- (bool)shouldDecryptRecordsBeforeSave;
- (bool)shouldProfileSQL;
- (long long)sqlBatchCount;
- (double)sqlBatchTime;
- (id)testRunIDHeader;
- (int)trafficLogMaximumDataSize;
- (int)trafficLogQueueWidth;
- (bool)useEncryption;
- (bool)useEnhancedPCSEncryptionContext;
- (bool)useModTimeInAssetCacheEviction;
- (bool)usePreauth;
- (bool)useStingray;
- (id)vettedEmailsTestFormat;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

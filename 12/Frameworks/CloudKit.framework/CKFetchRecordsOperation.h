<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKFetchRecordsOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CloudKit.framework/CKFetchRecordsOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit (736.235)
 */

@interface CKFetchRecordsOperation : CKDatabaseOperation <MSPCloudRequest> {
    NSMutableDictionary * _assetInfoByArrayIndexByRecordKeyByRecordID;
    NSDictionary * _assetTransferOptionsByRecordTypeAndKey;
    NSArray * _desiredKeys;
    NSDictionary * _desiredPackageFileIndices;
    bool  _dropInMemoryAssetContentASAP;
    id /* block */  _fetchRecordsCompletionBlock;
    bool  _isFetchCurrentUserOperation;
    NSMutableSet * _packagesToDestroy;
    id /* block */  _perRecordCompletionBlock;
    id /* block */  _perRecordProgressBlock;
    NSMutableDictionary * _recordErrors;
    NSArray * _recordIDs;
    NSDictionary * _recordIDsToETags;
    NSMutableDictionary * _recordIDsToRecords;
    NSDictionary * _recordIDsToVersionETags;
    bool  _shouldFetchAssetContent;
    bool  _shouldFetchAssetContentInMemory;
    NSDictionary * _webSharingIdentityDataByRecordID;
}

@property (nonatomic, retain) NSMutableDictionary *assetInfoByArrayIndexByRecordKeyByRecordID;
@property (nonatomic, retain) NSDictionary *assetTransferOptionsByRecordTypeAndKey;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSArray *desiredKeys;
@property (nonatomic, copy) NSDictionary *desiredPackageFileIndices;
@property (nonatomic) bool dropInMemoryAssetContentASAP;
@property (nonatomic, copy) id /* block */ fetchRecordsCompletionBlock;
@property (readonly) unsigned long long hash;
@property (nonatomic) bool isFetchCurrentUserOperation;
@property (nonatomic, retain) NSMutableSet *packagesToDestroy;
@property (nonatomic, copy) id /* block */ perRecordCompletionBlock;
@property (nonatomic, copy) id /* block */ perRecordProgressBlock;
@property (nonatomic, retain) NSMutableDictionary *recordErrors;
@property (nonatomic, copy) NSArray *recordIDs;
@property (nonatomic, retain) NSDictionary *recordIDsToETags;
@property (nonatomic, retain) NSMutableDictionary *recordIDsToRecords;
@property (nonatomic, retain) NSDictionary *recordIDsToVersionETags;
@property (nonatomic, readonly) bool shouldEnqueueDependenciesWhenPerformingAsCloudRequest;
@property (nonatomic) bool shouldFetchAssetContent;
@property (nonatomic) bool shouldFetchAssetContentInMemory;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSDictionary *webSharingIdentityDataByRecordID;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

+ (id)fetchCurrentUserRecordOperation;

- (void).cxx_destruct;
- (bool)CKOperationShouldRun:(id*)arg1;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_handleProgressCallback:(id)arg1;
- (id)activityCreate;
- (id)assetInfoByArrayIndexByRecordKeyByRecordID;
- (id)assetInfoForRecordID:(id)arg1 recordKey:(id)arg2 arrayIndex:(id)arg3;
- (id)assetTransferOptionsByRecordTypeAndKey;
- (bool)claimPackagesInRecord:(id)arg1 error:(id*)arg2;
- (id)desiredKeys;
- (id)desiredPackageFileIndices;
- (bool)dropInMemoryAssetContentASAP;
- (id /* block */)fetchRecordsCompletionBlock;
- (void)fillFromOperationInfo:(id)arg1;
- (void)fillOutOperationInfo:(id)arg1;
- (bool)hasCKOperationCallbacksSet;
- (id)init;
- (id)initWithRecordIDs:(id)arg1;
- (bool)isFetchCurrentUserOperation;
- (id)packagesToDestroy;
- (id /* block */)perRecordCompletionBlock;
- (id /* block */)perRecordProgressBlock;
- (void)performCKOperation;
- (id)recordErrors;
- (id)recordIDs;
- (id)recordIDsToETags;
- (id)recordIDsToRecords;
- (id)recordIDsToVersionETags;
- (void)setAssetInfoByArrayIndexByRecordKeyByRecordID:(id)arg1;
- (void)setAssetTransferOptionsByRecordTypeAndKey:(id)arg1;
- (void)setDesiredKeys:(id)arg1;
- (void)setDesiredPackageFileIndices:(id)arg1;
- (void)setDropInMemoryAssetContentASAP:(bool)arg1;
- (void)setFetchRecordsCompletionBlock:(id /* block */)arg1;
- (void)setIsFetchCurrentUserOperation:(bool)arg1;
- (void)setPackagesToDestroy:(id)arg1;
- (void)setPerRecordCompletionBlock:(id /* block */)arg1;
- (void)setPerRecordProgressBlock:(id /* block */)arg1;
- (void)setRecordErrors:(id)arg1;
- (void)setRecordIDs:(id)arg1;
- (void)setRecordIDsToETags:(id)arg1;
- (void)setRecordIDsToRecords:(id)arg1;
- (void)setRecordIDsToVersionETags:(id)arg1;
- (void)setShouldFetchAssetContent:(bool)arg1;
- (void)setShouldFetchAssetContentInMemory:(bool)arg1;
- (void)setWebSharingIdentityDataByRecordID:(id)arg1;
- (bool)shouldFetchAssetContent;
- (bool)shouldFetchAssetContentInMemory;
- (id)webSharingIdentityDataByRecordID;

// Image: /System/Library/PrivateFrameworks/MapsSupport.framework/MapsSupport

- (void)addCloudAccessCompletionBlock:(id /* block */)arg1;
- (void)setNetworkBehaviorIsDiscretionary:(bool)arg1;

// Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared

- (void)ic_removeAllCompletionBlocks;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

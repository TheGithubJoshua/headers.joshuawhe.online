<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CKModifyRecordsOperation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CloudKit.framework/CKModifyRecordsOperation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit (736.235)
 */

@interface CKModifyRecordsOperation : CKDatabaseOperation <MSPCloudRequest> {
    NSMutableDictionary * _assetsByRecordIDAndRecordKey;
    bool  _atomic;
    NSData * _clientChangeTokenData;
    NSDictionary * _conflictLosersToResolveByRecordID;
    NSMutableArray * _deletedRecordIDs;
    id /* block */  _modifyRecordsCompletionBlock;
    NSMutableSet * _packagesToDestroy;
    id /* block */  _perRecordCompletionBlock;
    id /* block */  _perRecordProgressBlock;
    NSDictionary * _pluginFieldsForRecordDeletesByID;
    NSMutableDictionary * _recordErrors;
    NSArray * _recordIDsToDelete;
    NSDictionary * _recordIDsToDeleteToEtags;
    NSMutableDictionary * _recordsByRecordIDs;
    id /* block */  _recordsInFlightBlock;
    NSArray * _recordsToSave;
    long long  _savePolicy;
    NSMutableArray * _savedRecords;
    bool  _shouldOnlySaveAssetContent;
    bool  _shouldReportRecordsInFlight;
}

@property (nonatomic, retain) NSMutableDictionary *assetsByRecordIDAndRecordKey;
@property (nonatomic) bool atomic;
@property (nonatomic, copy) NSData *clientChangeTokenData;
@property (nonatomic, retain) NSDictionary *conflictLosersToResolveByRecordID;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSMutableArray *deletedRecordIDs;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) id /* block */ modifyRecordsCompletionBlock;
@property (nonatomic, retain) NSMutableSet *packagesToDestroy;
@property (nonatomic, copy) id /* block */ perRecordCompletionBlock;
@property (nonatomic, copy) id /* block */ perRecordProgressBlock;
@property (nonatomic, copy) NSDictionary *pluginFieldsForRecordDeletesByID;
@property (nonatomic, retain) NSMutableDictionary *recordErrors;
@property (nonatomic, copy) NSArray *recordIDsToDelete;
@property (nonatomic, copy) NSDictionary *recordIDsToDeleteToEtags;
@property (nonatomic, retain) NSMutableDictionary *recordsByRecordIDs;
@property (nonatomic, copy) id /* block */ recordsInFlightBlock;
@property (nonatomic, copy) NSArray *recordsToSave;
@property (nonatomic) long long savePolicy;
@property (nonatomic, retain) NSMutableArray *savedRecords;
@property (nonatomic, readonly) bool shouldEnqueueDependenciesWhenPerformingAsCloudRequest;
@property (nonatomic) bool shouldOnlySaveAssetContent;
@property (nonatomic) bool shouldReportRecordsInFlight;
@property (readonly) Class superclass;

// Image: /System/Library/Frameworks/CloudKit.framework/CloudKit

- (void).cxx_destruct;
- (bool)CKOperationShouldRun:(id*)arg1;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_handleProgressCallback:(id)arg1;
- (void)_trackAssetsToUpload;
- (id)activityCreate;
- (id)assetsByRecordIDAndRecordKey;
- (bool)atomic;
- (bool)claimPackagesInRecord:(id)arg1 error:(id*)arg2;
- (id)clientChangeTokenData;
- (id)conflictLosersToResolveByRecordID;
- (id)deletedRecordIDs;
- (void)destroyPackages:(id)arg1;
- (void)destroyPackagesInRecords:(id)arg1;
- (void)fillFromOperationInfo:(id)arg1;
- (void)fillOutOperationInfo:(id)arg1;
- (bool)hasCKOperationCallbacksSet;
- (id)init;
- (id)initWithRecordsToSave:(id)arg1 recordIDsToDelete:(id)arg2;
- (id /* block */)modifyRecordsCompletionBlock;
- (id)packagesToDestroy;
- (id /* block */)perRecordCompletionBlock;
- (id /* block */)perRecordProgressBlock;
- (void)performCKOperation;
- (id)pluginFieldsForRecordDeletesByID;
- (id)recordErrors;
- (id)recordIDsToDelete;
- (id)recordIDsToDeleteToEtags;
- (id)recordsByRecordIDs;
- (id /* block */)recordsInFlightBlock;
- (id)recordsToSave;
- (long long)savePolicy;
- (id)savedRecords;
- (void)setAssetsByRecordIDAndRecordKey:(id)arg1;
- (void)setAtomic:(bool)arg1;
- (void)setClientChangeTokenData:(id)arg1;
- (void)setConflictLosersToResolveByRecordID:(id)arg1;
- (void)setDeletedRecordIDs:(id)arg1;
- (void)setModifyRecordsCompletionBlock:(id /* block */)arg1;
- (void)setPackagesToDestroy:(id)arg1;
- (void)setPerRecordCompletionBlock:(id /* block */)arg1;
- (void)setPerRecordProgressBlock:(id /* block */)arg1;
- (void)setPluginFieldsForRecordDeletesByID:(id)arg1;
- (void)setRecordErrors:(id)arg1;
- (void)setRecordIDsToDelete:(id)arg1;
- (void)setRecordIDsToDeleteToEtags:(id)arg1;
- (void)setRecordsByRecordIDs:(id)arg1;
- (void)setRecordsInFlightBlock:(id /* block */)arg1;
- (void)setRecordsToSave:(id)arg1;
- (void)setSavePolicy:(long long)arg1;
- (void)setSavedRecords:(id)arg1;
- (void)setShouldOnlySaveAssetContent:(bool)arg1;
- (void)setShouldReportRecordsInFlight:(bool)arg1;
- (bool)shouldOnlySaveAssetContent;
- (bool)shouldReportRecordsInFlight;

// Image: /System/Library/PrivateFrameworks/MapsSupport.framework/MapsSupport

- (void)addCloudAccessCompletionBlock:(id /* block */)arg1;
- (void)setNetworkBehaviorIsDiscretionary:(bool)arg1;

// Image: /System/Library/PrivateFrameworks/NotesShared.framework/NotesShared

- (void)ic_removeAllCompletionBlocks;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ABSAddressBook.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AddressBook.framework/ABSAddressBook.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AddressBook.framework/AddressBook (1)
 */

@interface ABSAddressBook : NSObject {
    ABSChangeCallbacks * _changeCallbacks;
    ABSAddressBookContextStorage * _contacts;
    ABSBulkFaultHandler * _faultHandler;
    ABSAddressBookContextStorage * _groups;
    ABSAddressBookContextStorage * _sources;
    CNFuture * _storeFuture;
}

@property (readonly) ABSChangeCallbacks *changeCallbacks;
@property (nonatomic, retain) ABSAddressBookContextStorage *contacts;
@property (nonatomic, readonly) ABSBulkFaultHandler *faultHandler;
@property (nonatomic, retain) ABSAddressBookContextStorage *groups;
@property (readonly) bool hasUnsavedChanges;
@property (nonatomic, retain) ABSAddressBookContextStorage *sources;
@property (nonatomic, readonly) CNContactStore *store;
@property (nonatomic, readonly) CNFuture *storeFuture;

+ (long long)authorizationStatus;
+ (void)callLocalChangeCallbacks:(bool)arg1;
+ (bool)eraseAllDataAtLocationName:(id)arg1 error:(id*)arg2;
+ (id)localizedLabelForLabel:(id)arg1;
+ (void)requestAccessWithCompletion:(id /* block */)arg1;

- (void).cxx_destruct;
- (unsigned long long)_cfTypeID;
- (id)_peoplePreferringExistingRecordsFetchedWithPredicate:(id)arg1 sortOrder:(unsigned int)arg2;
- (id)_resultRecordsFromFetchedCNImpls:(id)arg1 mergedWithStorage:(id)arg2 creationBlock:(id /* block */)arg3;
- (id)_sourcesPreferringExistingRecordsFetchedWithPredicate:(id)arg1;
- (id)_storageForRecordClass:(Class)arg1;
- (bool)addMember:(id)arg1 toGroup:(id)arg2 error:(id*)arg3;
- (bool)addRecord:(id)arg1 error:(id*)arg2;
- (id)allGroups;
- (id)allPeople;
- (id)allSources;
- (id)changeCallbacks;
- (void)completePerson:(id)arg1 withKeysToFetch:(id)arg2;
- (id)contacts;
- (id)contactsWithIdentifiers:(id)arg1 keysToFetch:(id)arg2;
- (id)defaultSource;
- (id)faultHandler;
- (long long)groupCount;
- (id)groupWithRecordID:(int)arg1;
- (id)groups;
- (id)groupsInSource:(id)arg1;
- (bool)hasUnsavedChanges;
- (id)init;
- (id)initWithOptions:(id)arg1 error:(id*)arg2;
- (id)initWithOptions:(id)arg1 policy:(int)arg2 error:(id*)arg3;
- (id)initWithSettings:(id)arg1 error:(id*)arg2;
- (bool)linkPerson:(id)arg1 toPerson:(id)arg2;
- (id)localSource;
- (id)mePerson;
- (id)peopleInGroup:(id)arg1 sortOrder:(unsigned int)arg2;
- (id)peopleInSource:(id)arg1 sortOrder:(unsigned int)arg2;
- (id)peopleLinkedToPerson:(id)arg1;
- (id)peopleMatchingNameString:(id)arg1;
- (id)peopleWithCNIdentifiers:(id)arg1;
- (long long)personCount;
- (id)personWithRecordID:(int)arg1;
- (bool)recordUpdated:(id)arg1;
- (void)registerExternalChangeCallback:(int (*)arg1 context:(void*)arg2;
- (bool)removeMember:(id)arg1 fromGroup:(id)arg2 error:(id*)arg3;
- (bool)removeRecord:(id)arg1 error:(id*)arg2;
- (void)revert;
- (bool)save:(id*)arg1;
- (void)setContacts:(id)arg1;
- (void)setGroups:(id)arg1;
- (void)setSources:(id)arg1;
- (id)sourceForRecord:(id)arg1;
- (id)sourceWithRecordID:(int)arg1;
- (id)sources;
- (id)store;
- (id)storeFuture;
- (bool)unlinkPerson:(id)arg1;
- (void)unregisterExternalChangeCallback:(int (*)arg1 context:(void*)arg2;
- (void)updateFetchingAllPropertiesForGroups:(id)arg1;
- (void)updateFetchingAllPropertiesForSources:(id)arg1;
- (void)updatePeople:(id)arg1 refetchingProperties:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

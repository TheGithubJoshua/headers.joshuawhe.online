<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>QLMediaItemBaseViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/QuickLook.framework/QLMediaItemBaseViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/QuickLook.framework/QuickLook (1)
 */

@interface QLMediaItemBaseViewController : QLScrollableContentItemViewController <QLToolbarButtonAction> {
    double  _elapsedTime;
    NSError * _error;
    struct CGSize { 
        double width; 
        double height; 
    }  _imageSize;
    bool  _isFullScreen;
    bool  _isVisible;
    AVAsset * _mediaAsset;
    double  _mediaDuration;
    double  _mediaVolume;
    bool  _mediaWasPausedOnResignActive;
    bool  _playable;
    NSObject * _playbackTimeObserver;
    AVPlayer * _player;
    AVPlayerLayer * _playerLayer;
    UIView * _playerView;
    bool  _playing;
    long long  _playingStatus;
    id /* block */  _previewItemLoadingBlock;
    double  _remainingTime;
    bool  _visualTracksEnabled;
}

@property (nonatomic) double currentPlaybackHeadPosition;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double elapsedTime;
@property (nonatomic, readonly) bool endOfMediaReached;
@property (nonatomic, retain) NSError *error;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isFullScreen;
@property (nonatomic, readonly) bool isVisible;
@property (nonatomic, readonly) AVAsset *mediaAsset;
@property (nonatomic) double mediaDuration;
@property (nonatomic, readonly) double mediaVolume;
@property (nonatomic, readonly) bool playable;
@property (nonatomic, retain) AVPlayer *player;
@property (nonatomic, readonly) AVPlayerLayer *playerLayer;
@property (nonatomic, readonly) UIView *playerView;
@property (nonatomic, readonly) long long playingStatus;
@property (nonatomic) double remainingTime;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool visualTracksEnabled;

+ (bool)shouldBeRemoteForContentType:(id)arg1;
+ (id)supportedContentTypes;
+ (Class)transformerClass;

- (void).cxx_destruct;
- (void)_updateExternalPlayback;
- (void)_updatePlayingStatus;
- (void)buttonPressedWithIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (double)currentPlaybackHeadPosition;
- (void)dealloc;
- (void)didChangePlayingStatus;
- (void)didReachEndOfMedia;
- (double)elapsedTime;
- (bool)endOfMediaReached;
- (id)error;
- (void)hostApplicationDidBecomeActive;
- (void)hostApplicationDidEnterBackground:(id)arg1;
- (struct CGSize { double x1; double x2; })imageSize;
- (bool)isFullScreen;
- (bool)isVisible;
- (void)loadPreviewControllerWithContents:(id)arg1 context:(id)arg2 completionHandler:(id /* block */)arg3;
- (id)mediaAsset;
- (double)mediaDuration;
- (double)mediaVolume;
- (void)observePlayingTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)pause;
- (void)play;
- (bool)playable;
- (id)player;
- (void)playerItemDidReachEnd:(id)arg1;
- (id)playerLayer;
- (id)playerView;
- (long long)playingStatus;
- (void)previewBecameFullScreen:(bool)arg1 animated:(bool)arg2;
- (void)previewDidAppear:(bool)arg1;
- (void)previewDidDisappear:(bool)arg1;
- (void)previewIsAppearingWithProgress:(double)arg1;
- (id)registeredKeyCommands;
- (double)remainingTime;
- (void)resetToBeginning;
- (void)setAppearance:(id)arg1 animated:(bool)arg2;
- (void)setCurrentPlaybackHeadPosition:(double)arg1;
- (void)setElapsedTime:(double)arg1;
- (void)setError:(id)arg1;
- (void)setMediaDuration:(double)arg1;
- (void)setMediaVolume:(double)arg1;
- (void)setPlayer:(id)arg1;
- (void)setRemainingTime:(double)arg1;
- (void)setupPlayerWithMediaAsset:(id)arg1;
- (void)stop;
- (void)togglePlayback;
- (id)toolbarButtonsForTraitCollection:(id)arg1;
- (bool)visualTracksEnabled;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

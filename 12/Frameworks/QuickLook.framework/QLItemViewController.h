<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>QLItemViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/QuickLook.framework/QLItemViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/QuickLook.framework/QuickLook (1)
 */

@interface QLItemViewController : UIViewController <QLLocalPreviewingController, QLToolbarButtonAction, UIDragInteractionDelegate_Private> {
    UIView * _accessoryView;
    QLAppearance * _appearance;
    NSMutableArray * _completionBlocks;
    id  _contents;
    QLPreviewContext * _context;
    <QLPreviewItemViewControllerDelegate> * _delegate;
    bool  _didAppearOnce;
    UIDragInteraction * _dragInteraction;
    bool  _isLoaded;
    bool  _isLoading;
    long long  _lastScrollViewUpdateInterfaceOrientation;
    bool  _loadingFailed;
    <QLItemViewControllerPresentingDelegate> * _presentingDelegate;
}

@property (nonatomic, readonly) UIView *accessoryView;
@property (nonatomic, retain) QLAppearance *appearance;
@property (retain) id contents;
@property (retain) QLPreviewContext *context;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <QLPreviewItemViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property bool didAppearOnce;
@property (nonatomic, retain) UIDragInteraction *dragInteraction;
@property (readonly) unsigned long long hash;
@property bool isLoaded;
@property bool isLoading;
@property bool loadingFailed;
@property (nonatomic) <QLItemViewControllerPresentingDelegate> *presentingDelegate;
@property (nonatomic, readonly) NSArray *registeredKeyCommands;
@property (readonly) Class superclass;

+ (double)maxLoadingTimeForItem:(id)arg1;
+ (bool)providesCustomPrinter;
+ (bool)shouldBeRemoteForContentType:(id)arg1;
+ (bool)shouldBeRemoteForMediaContentType:(id)arg1;
+ (id)supportedAudiovisualContentTypes;
+ (id)supportedContentTypes;
+ (Class)transformerClass;

- (void).cxx_destruct;
- (void)_addDragInteractionIfNeeded;
- (id)_cancelTouchToken;
- (long long)_dragInteraction:(id)arg1 dataOwnerForSession:(id)arg2;
- (void)_scrollScrollViewByPercentualOffset:(double)arg1;
- (void)_scrollScrollViewWithKeyCommand:(id)arg1;
- (id)accessoryView;
- (id)additionalItemViewControllerDescription;
- (id)appearance;
- (bool)automaticallyUpdateScrollViewContentInset;
- (bool)automaticallyUpdateScrollViewContentOffset;
- (bool)automaticallyUpdateScrollViewIndicatorInset;
- (void)beginPreviewHostAppearanceTransitionIfNeeded:(bool)arg1 animated:(bool)arg2;
- (void)buttonPressedWithIdentifier:(id)arg1 completionHandler:(id /* block */)arg2;
- (bool)canEnterFullScreen;
- (bool)canPerformFirstTimeAppearanceActions:(unsigned long long)arg1;
- (bool)canPinchToDismiss;
- (bool)canShowNavBar;
- (bool)canShowToolBar;
- (bool)canSwipeToDismiss;
- (bool)canToggleFullScreen;
- (id)contents;
- (id)context;
- (id)delegate;
- (id)description;
- (bool)didAppearOnce;
- (id)dragInteraction;
- (id)dragInteraction:(id)arg1 itemsForBeginningSession:(id)arg2;
- (id)draggableView;
- (void)endPreviewHostAppearanceTransitionIfNeeded:(bool)arg1;
- (id)excludedToolbarButtonIdentifiersForTraitCollection:(id)arg1;
- (id)fullscreenBackgroundColor;
- (id)init;
- (bool)isLoaded;
- (bool)isLoading;
- (void)loadPreviewControllerIfNeededWithContents:(id)arg1 context:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)loadPreviewControllerWithContents:(id)arg1 context:(id)arg2 completionHandler:(id /* block */)arg3;
- (bool)loadingFailed;
- (void)notifyDelegatesDidFailWithError:(id)arg1;
- (id)parallaxView;
- (void)performCompletionBlocksWithError:(id)arg1;
- (void)performFirstTimeAppearanceActions:(unsigned long long)arg1;
- (void)performFirstTimeAppearanceActionsIfNeeded:(unsigned long long)arg1;
- (long long)preferredWhitePointAdaptivityStyle;
- (void)preloadViewControllerForContext:(id)arg1;
- (void)prepareForActionSheetPresentation;
- (bool)presenterShouldHandleLoadingView:(id)arg1 readyToDisplay:(id /* block */)arg2;
- (id)presentingDelegate;
- (void)previewBecameFullScreen:(bool)arg1 animated:(bool)arg2;
- (void)previewDidAppear:(bool)arg1;
- (void)previewDidDisappear:(bool)arg1;
- (void)previewIsAppearingWithProgress:(double)arg1;
- (void)previewWillAppear:(bool)arg1;
- (void)previewWillDisappear:(bool)arg1;
- (void)previewWillFinishAppearing;
- (id)registeredKeyCommands;
- (id)scrollView;
- (void)setAppearance:(id)arg1;
- (void)setAppearance:(id)arg1 animated:(bool)arg2;
- (void)setContents:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidAppearOnce:(bool)arg1;
- (void)setDragInteraction:(id)arg1;
- (void)setIsLoaded:(bool)arg1;
- (void)setIsLoading:(bool)arg1;
- (void)setLoadingFailed:(bool)arg1;
- (void)setPresentingDelegate:(id)arg1;
- (bool)shouldAcceptTouch:(id)arg1 ofGestureRecognizer:(id)arg2;
- (bool)shouldAlwaysRunFullscreen;
- (bool)shouldRecognizeGestureRecognizer:(id)arg1;
- (id)toolbarButtonsForTraitCollection:(id)arg1;
- (void)transitionDidFinish:(bool)arg1 didComplete:(bool)arg2;
- (void)transitionDidStart:(bool)arg1;
- (void)transitionWillFinish:(bool)arg1 didComplete:(bool)arg2;
- (id)transitioningView;
- (void)updateScrollViewContentOffset;
- (void)updateScrollViewContentOffset:(bool)arg1 withPreviousAppearance:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

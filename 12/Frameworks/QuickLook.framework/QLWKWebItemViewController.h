<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>QLWKWebItemViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/QuickLook.framework/QLWKWebItemViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/QuickLook.framework/QuickLook (1)
 */

@interface QLWKWebItemViewController : QLItemViewController <QLPrintingProtocol, QLScrubViewDataSource, QLScrubViewDelegate, UIScrollViewDelegate, WKNavigationDelegate> {
    id /* block */  _completionHandler;
    bool  _fullScreen;
    NSCache * _indexToThumbnailsCache;
    NSLayoutConstraint * _leftConstraint;
    NSOperationQueue * _operationQueue;
    struct CGSize { 
        double width; 
        double height; 
    }  _pageSize;
    <QLWebKitPaginator> * _paginator;
    NSString * _previewContentType;
    WBUPrintPageRenderer * _renderer;
    NSLayoutConstraint * _rightConstraint;
    struct CGPoint { 
        double x; 
        double y; 
    }  _scrollViewTopOffset;
    QLScrubView * _scrubView;
    NSLayoutConstraint * _scrubberRightConstraint;
    long long  _thumbnailCount;
    <QLWebKitThumbnailGenerator> * _thumbnailGenerator;
    struct CGSize { 
        double width; 
        double height; 
    }  _thumbnailSize;
    WKWebView * _webView;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSCache *indexToThumbnailsCache;
@property (nonatomic, retain) NSOperationQueue *operationQueue;
@property (readonly) Class superclass;
@property (nonatomic, retain) WKWebView *webView;

+ (bool)providesCustomPrinter;
+ (Class)transformerClass;

- (void).cxx_destruct;
- (void)_addThumbnailToCache:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_hideScrubberIfNeeded:(bool)arg1;
- (void)_prepareThumbnailView;
- (void)_registerRemoteProxy;
- (id)_renderer;
- (void)_scrollToPage:(long long)arg1;
- (void)_showScrubberIfNeeded:(bool)arg1 reloadThumbnails:(bool)arg2;
- (id)_thumbnailAtIndex:(unsigned long long)arg1;
- (void)_updateConstraintConstants:(bool)arg1;
- (void)_updateScrubberForTraitCollection:(id)arg1 animated:(bool)arg2 reloadThumbnailsIfNeeded:(bool)arg3;
- (void)_updateScrubberVisibilityAnimated:(bool)arg1;
- (void)_updateScrubberVisibilityAnimated:(bool)arg1 reloadThumbnailsIfNeeded:(bool)arg2;
- (void)_webViewDidRequestPasswordForQuickLookDocument:(id)arg1;
- (bool)automaticallyUpdateScrollViewContentInset;
- (bool)automaticallyUpdateScrollViewContentOffset;
- (bool)automaticallyUpdateScrollViewIndicatorInset;
- (bool)canPinchToDismiss;
- (bool)canSwipeToDismiss;
- (unsigned long long)currentPageNumber;
- (id)indexToThumbnailsCache;
- (void)loadPreviewControllerWithContents:(id)arg1 context:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)loadView;
- (long long)numberOfPagesInScrubView:(id)arg1;
- (void)numberOfPagesWithSize:(struct CGSize { double x1; double x2; })arg1 completionHandler:(id /* block */)arg2;
- (id)operationQueue;
- (void)pdfDataForPageAtIndex:(long long)arg1 withCompletionHandler:(id /* block */)arg2;
- (long long)preferredWhitePointAdaptivityStyle;
- (void)prepareForDrawingPages:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 ofSize:(struct CGSize { double x1; double x2; })arg2;
- (void)previewBecameFullScreen:(bool)arg1 animated:(bool)arg2;
- (void)previewDidAppear:(bool)arg1;
- (void)previewWillAppear:(bool)arg1;
- (id)printer;
- (id)scrollView;
- (void)scrollViewDidScroll:(id)arg1;
- (id)scrubView;
- (void)scrubView:(id)arg1 didSelectPageAtIndex:(unsigned long long)arg2;
- (struct CGSize { double x1; double x2; })scrubView:(id)arg1 pageSizeAtIndex:(unsigned long long)arg2;
- (void)scrubView:(id)arg1 thumbnailForPage:(long long)arg2 size:(struct CGSize { double x1; double x2; })arg3 withCompletionBlock:(id /* block */)arg4;
- (void)setAppearance:(id)arg1 animated:(bool)arg2;
- (void)setIndexToThumbnailsCache:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setWebView:(id)arg1;
- (bool)shouldAcceptTouch:(id)arg1 ofGestureRecognizer:(id)arg2;
- (void)transitionDidStart:(bool)arg1;
- (void)transitionWillFinish:(bool)arg1 didComplete:(bool)arg2;
- (id)transitioningView;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)webView;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

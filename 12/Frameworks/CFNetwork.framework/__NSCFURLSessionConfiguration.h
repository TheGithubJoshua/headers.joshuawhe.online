<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>__NSCFURLSessionConfiguration.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CFNetwork.framework/__NSCFURLSessionConfiguration.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork (978.0.7)
 */

@interface __NSCFURLSessionConfiguration : NSURLSessionConfiguration <NSCopying, NSSecureCoding> {
    NSString * _CTDataConnectionServiceType;
    id  _HTTPAdditionalHeaders;
    unsigned long long  _HTTPCookieAcceptPolicy;
    long long  _HTTPMaximumConnectionsPerHost;
    bool  _HTTPShouldSetCookies;
    bool  _HTTPShouldUsePipelining;
    long long  _IDSMessageTimeout;
    unsigned long long  _TCPAdaptiveReadTimeout;
    unsigned long long  _TCPAdaptiveWriteTimeout;
    int  _TLSMaximumSupportedProtocol;
    int  _TLSMinimumSupportedProtocol;
    bool  _allowTCPIOConnectionStreamTask;
    bool  _allowsCellularAccess;
    bool  _allowsExpensiveAccess;
    bool  _allowsIndefiniteConnections;
    bool  _allowsMultipathTCP;
    bool  _allowsPowerNapScheduling;
    bool  _allowsResponseMonitoringDuringBodyTranmission;
    bool  _allowsRetryForBackgroundDataTasks;
    bool  _allowsTCPFastOpen;
    bool  _allowsTLSSessionResumption;
    bool  _allowsTLSSessionTickets;
    bool  _alwaysPerformDefaultTrustEvaluation;
    <NSURLSessionAppleIDContext> * _appleIDContext;
    NSData * _atsContext;
    NSSet * _authenticatorStatusCodes;
    bool  _backgroundSession;
    bool  _clientIsNotExplicitlyDiscretionary;
    bool  _collectsTimingData;
    NSString * _companionAppBundleIdentifier;
    double  _connectionCacheCellPurgeTimeout;
    double  _connectionCachePurgeTimeout;
    NSString * _connectionPoolName;
    id  _connectionProxyDictionary;
    NSArray * _contentDispHeadEncFallback;
    unsigned long long  _customReadBufferSize;
    double  _customReadBufferTimeout;
    NSURL * _directoryForDownloadedFiles;
    bool  _disablesOutOfProcessDirectWiFiUsage;
    bool  _disablesUseOfProxySession;
    bool  _disallowsSPDY;
    bool  _discretionary;
    NSString * _disposition;
    bool  _duetPreauthorized;
    long long  _expiredDNSBehavior;
    unsigned long long  _forcedNetworkServiceType;
    bool  _forcesNewConnections;
    NSString * _identifier;
    bool  _ignoreDidReceiveResponseDisposition;
    bool  _infersDiscretionaryFromOriginatingClient;
    NSString * _ledBellyServiceIdentifier;
    double  _longLivedConnectionCacheCellPurgeTimeout;
    double  _longLivedConnectionCachePurgeTimeout;
    long long  _minimumFastLanePriority;
    long long  _multipathServiceType;
    unsigned long long  _networkServiceType;
    long long  _numFastLanes;
    long long  _numPriorityLevels;
    bool  _onBehalfOfPairedDevice;
    NSDictionary * _overriddenDelegateOptions;
    bool  _overridesBackgroundSessionAutoRedirect;
    bool  _performsEVCertCheck;
    NSHTTPCookieStorage * _phskip_cookieStorage;
    bool  _phskip_cookieStorageSet;
    NSURLCredentialStorage * _phskip_credStorage;
    bool  _phskip_credStorageSet;
    struct _CFHSTSPolicy { } * _phskip_hstsStorage;
    bool  _phskip_hstsStorageSet;
    NSURLCache * _phskip_urlCache;
    bool  _phskip_urlCacheSet;
    long long  _pipeliningHighWatermark;
    long long  _pipeliningLowWatermark;
    bool  _prefersInfraWiFi;
    bool  _preventsDirectWiFiAccess;
    bool  _preventsIdleSleep;
    bool  _preventsIdleSleepOnceConnected;
    bool  _preventsSystemHTTPProxyAuthentication;
    id  _protocolClasses;
    bool  _proxySession;
    unsigned long long  _requestCachePolicy;
    bool  _requiresClientToOpenFiles;
    bool  _requiresPowerPluggedIn;
    bool  _requiresSecureHTTPSProxyConnection;
    bool  _requiresSustainedDataDelivery;
    bool  _respectsAllowsCellularAccessForDiscretionaryTasks;
    bool  _sessionSendsLaunchEvents;
    bool  _sessionSendsLaunchOnDemandEvents;
    NSString * _sharedContainerIdentifier;
    bool  _shouldPreserveBackgroundSessionDisposition;
    bool  _shouldSkipPreferredClientCertificateLookup;
    bool  _shouldUseExtendedBackgroundIdleMode;
    bool  _skip_download_unlink;
    NSDictionary * _socketStreamProperties;
    NSData * _sourceApplicationAuditTokenData;
    NSString * _sourceApplicationBundleIdentifier;
    NSString * _sourceApplicationSecondaryIdentifier;
    bool  _supportsAVAssetDownloads;
    NSSet * _suppressedAutoAddedHTTPHeaders;
    NSString * _tcpConnectionPoolName;
    double  _timeoutIntervalForRequest;
    double  _timeoutIntervalForResource;
    long long  _timingDataOptions;
    NSString * _tlsCachePrefix;
    NSString * _tlsTrustPinningPolicyName;
    bool  _usePipeliningHeuristics;
    bool  _waitsForConnectivity;
    NSString * _watchAppBundleIdentifier;
    NSString * _watchExtensionBundleIdentifier;
}

+ (bool)supportsSecureCoding;

- (id)HTTPAdditionalHeaders;
- (unsigned long long)HTTPCookieAcceptPolicy;
- (id)HTTPCookieStorage;
- (long long)HTTPMaximumConnectionsPerHost;
- (bool)HTTPShouldSetCookies;
- (bool)HTTPShouldUsePipelining;
- (int)TLSMaximumSupportedProtocol;
- (int)TLSMinimumSupportedProtocol;
- (id)URLCache;
- (id)URLCredentialStorage;
- (id)_CTDataConnectionServiceType;
- (long long)_IDSMessageTimeout;
- (unsigned long long)_TCPAdaptiveReadTimeout;
- (unsigned long long)_TCPAdaptiveWriteTimeout;
- (bool)_allowTCPIOConnectionStreamTask;
- (bool)_allowsExpensiveAccess;
- (bool)_allowsIndefiniteConnections;
- (bool)_allowsMultipathTCP;
- (bool)_allowsPowerNapScheduling;
- (bool)_allowsResponseMonitoringDuringBodyTranmission;
- (bool)_allowsRetryForBackgroundDataTasks;
- (bool)_allowsTCPFastOpen;
- (bool)_allowsTLSSessionResumption;
- (bool)_allowsTLSSessionTickets;
- (bool)_alwaysPerformDefaultTrustEvaluation;
- (id)_appleIDContext;
- (id)_atsContext;
- (id)_authenticatorStatusCodes;
- (bool)_clientIsNotExplicitlyDiscretionary;
- (bool)_collectsTimingData;
- (id)_companionAppBundleIdentifier;
- (double)_connectionCacheCellPurgeTimeout;
- (double)_connectionCachePurgeTimeout;
- (id)_connectionPoolName;
- (id)_contentDispHeadEncFallback;
- (void*)_copyAttribute:(struct __CFString { }*)arg1;
- (struct OpaqueCFHTTPCookieStorage { }*)_copyCFCookieStorage;
- (unsigned long long)_customReadBufferSize;
- (double)_customReadBufferTimeout;
- (id)_directoryForDownloadedFiles;
- (bool)_disablesOutOfProcessDirectWiFiUsage;
- (bool)_disablesUseOfProxySession;
- (bool)_disallowsSPDY;
- (bool)_duetPreauthorized;
- (long long)_expiredDNSBehavior;
- (unsigned long long)_forcedNetworkServiceType;
- (bool)_forcesNewConnections;
- (bool)_ignoreDidReceiveResponseDisposition;
- (bool)_infersDiscretionaryFromOriginatingClient;
- (bool)_isProxySession;
- (id)_ledBellyServiceIdentifier;
- (double)_longLivedConnectionCacheCellPurgeTimeout;
- (double)_longLivedConnectionCachePurgeTimeout;
- (bool)_onBehalfOfPairedDevice;
- (id)_overriddenDelegateOptions;
- (bool)_overridesBackgroundSessionAutoRedirect;
- (bool)_performsEVCertCheck;
- (id)_phskip_cookieStorage;
- (bool)_phskip_cookieStorageSet;
- (id)_phskip_credStorage;
- (bool)_phskip_credStorageSet;
- (struct _CFHSTSPolicy { }*)_phskip_hstsStorage;
- (bool)_phskip_hstsStorageSet;
- (id)_phskip_urlCache;
- (bool)_phskip_urlCacheSet;
- (bool)_prefersInfraWiFi;
- (bool)_preventsDirectWiFiAccess;
- (bool)_preventsIdleSleep;
- (bool)_preventsIdleSleepOnceConnected;
- (bool)_preventsSystemHTTPProxyAuthentication;
- (bool)_requiresClientToOpenFiles;
- (bool)_requiresPowerPluggedIn;
- (bool)_requiresSecureHTTPSProxyConnection;
- (bool)_requiresSustainedDataDelivery;
- (bool)_respectsAllowsCellularAccessForDiscretionaryTasks;
- (bool)_sessionSendsLaunchOnDemandEvents;
- (bool)_shouldPreserveBackgroundSessionDisposition;
- (bool)_shouldSkipPreferredClientCertificateLookup;
- (id)_socketStreamProperties;
- (id)_sourceApplicationAuditTokenData;
- (id)_sourceApplicationBundleIdentifier;
- (id)_sourceApplicationSecondaryIdentifier;
- (bool)_supportsAVAssetDownloads;
- (id)_suppressedAutoAddedHTTPHeaders;
- (id)_tcpConnectionPoolName;
- (long long)_timingDataOptions;
- (id)_tlsCachePrefix;
- (id)_tlsTrustPinningPolicyName;
- (bool)_usePipeliningHeuristics;
- (id)_watchAppBundleIdentifier;
- (id)_watchExtensionBundleIdentifier;
- (bool)allowsCellularAccess;
- (id)connectionProxyDictionary;
- (struct _CFHSTSPolicy { }*)copyHSTSPolicy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)disposition;
- (void)encodeWithCoder:(id)arg1;
- (struct HTTPConnectionCacheLimits { int x1; int x2; int x3; int x4; int x5; int x6; int x7; int x8; int x9; int x10; })getConnectionCacheLimits;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithDisposition:(id)arg1;
- (bool)isBackgroundSession;
- (bool)isDiscretionary;
- (bool)isEqual:(id)arg1;
- (long long)minimumFastLanePriority;
- (long long)multipathServiceType;
- (unsigned long long)networkServiceType;
- (long long)numFastLanes;
- (long long)numPriorityLevels;
- (long long)pipeliningHighWatermark;
- (long long)pipeliningLowWatermark;
- (id)protocolClasses;
- (unsigned long long)requestCachePolicy;
- (bool)sessionSendsLaunchEvents;
- (void)setAllowsCellularAccess:(bool)arg1;
- (void)setBackgroundSession:(bool)arg1;
- (void)setConnectionProxyDictionary:(id)arg1;
- (void)setDiscretionary:(bool)arg1;
- (void)setDisposition:(id)arg1;
- (void)setHSTSPolicy:(struct _CFHSTSPolicy { }*)arg1;
- (void)setHTTPAdditionalHeaders:(id)arg1;
- (void)setHTTPCookieAcceptPolicy:(unsigned long long)arg1;
- (void)setHTTPCookieStorage:(id)arg1;
- (void)setHTTPMaximumConnectionsPerHost:(long long)arg1;
- (void)setHTTPShouldSetCookies:(bool)arg1;
- (void)setHTTPShouldUsePipelining:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setMinimumFastLanePriority:(long long)arg1;
- (void)setMultipathServiceType:(long long)arg1;
- (void)setNetworkServiceType:(unsigned long long)arg1;
- (void)setNumFastLanes:(long long)arg1;
- (void)setNumPriorityLevels:(long long)arg1;
- (void)setPipeliningHighWatermark:(long long)arg1;
- (void)setPipeliningLowWatermark:(long long)arg1;
- (void)setProtocolClasses:(id)arg1;
- (void)setRequestCachePolicy:(unsigned long long)arg1;
- (void)setSessionSendsLaunchEvents:(bool)arg1;
- (void)setSharedContainerIdentifier:(id)arg1;
- (void)setShouldUseExtendedBackgroundIdleMode:(bool)arg1;
- (void)setSkip_download_unlink:(bool)arg1;
- (void)setTLSMaximumSupportedProtocol:(int)arg1;
- (void)setTLSMinimumSupportedProtocol:(int)arg1;
- (void)setTimeoutIntervalForRequest:(double)arg1;
- (void)setTimeoutIntervalForResource:(double)arg1;
- (void)setURLCache:(id)arg1;
- (void)setURLCredentialStorage:(id)arg1;
- (void)setWaitsForConnectivity:(bool)arg1;
- (void)set_CTDataConnectionServiceType:(id)arg1;
- (void)set_IDSMessageTimeout:(long long)arg1;
- (void)set_TCPAdaptiveReadTimeout:(unsigned long long)arg1;
- (void)set_TCPAdaptiveWriteTimeout:(unsigned long long)arg1;
- (void)set_allowTCPIOConnectionStreamTask:(bool)arg1;
- (void)set_allowsExpensiveAccess:(bool)arg1;
- (void)set_allowsIndefiniteConnections:(bool)arg1;
- (void)set_allowsMultipathTCP:(bool)arg1;
- (void)set_allowsPowerNapScheduling:(bool)arg1;
- (void)set_allowsResponseMonitoringDuringBodyTranmission:(bool)arg1;
- (void)set_allowsRetryForBackgroundDataTasks:(bool)arg1;
- (void)set_allowsTCPFastOpen:(bool)arg1;
- (void)set_allowsTLSSessionResumption:(bool)arg1;
- (void)set_allowsTLSSessionTickets:(bool)arg1;
- (void)set_alwaysPerformDefaultTrustEvaluation:(bool)arg1;
- (void)set_appleIDContext:(id)arg1;
- (void)set_atsContext:(id)arg1;
- (void)set_authenticatorStatusCodes:(id)arg1;
- (void)set_clientIsNotExplicitlyDiscretionary:(bool)arg1;
- (void)set_collectsTimingData:(bool)arg1;
- (void)set_companionAppBundleIdentifier:(id)arg1;
- (void)set_connectionCacheCellPurgeTimeout:(double)arg1;
- (void)set_connectionCachePurgeTimeout:(double)arg1;
- (void)set_connectionPoolName:(id)arg1;
- (void)set_contentDispHeadEncFallback:(id)arg1;
- (void)set_customReadBufferSize:(unsigned long long)arg1;
- (void)set_customReadBufferTimeout:(double)arg1;
- (void)set_directoryForDownloadedFiles:(id)arg1;
- (void)set_disablesOutOfProcessDirectWiFiUsage:(bool)arg1;
- (void)set_disablesUseOfProxySession:(bool)arg1;
- (void)set_disallowsSPDY:(bool)arg1;
- (void)set_duetPreauthorized:(bool)arg1;
- (void)set_expiredDNSBehavior:(long long)arg1;
- (void)set_forcedNetworkServiceType:(unsigned long long)arg1;
- (void)set_forcesNewConnections:(bool)arg1;
- (void)set_ignoreDidReceiveResponseDisposition:(bool)arg1;
- (void)set_infersDiscretionaryFromOriginatingClient:(bool)arg1;
- (void)set_ledBellyServiceIdentifier:(id)arg1;
- (void)set_longLivedConnectionCacheCellPurgeTimeout:(double)arg1;
- (void)set_longLivedConnectionCachePurgeTimeout:(double)arg1;
- (void)set_onBehalfOfPairedDevice:(bool)arg1;
- (void)set_overriddenDelegateOptions:(id)arg1;
- (void)set_overridesBackgroundSessionAutoRedirect:(bool)arg1;
- (void)set_performsEVCertCheck:(bool)arg1;
- (void)set_phskip_cookieStorage:(id)arg1;
- (void)set_phskip_cookieStorageSet:(bool)arg1;
- (void)set_phskip_credStorage:(id)arg1;
- (void)set_phskip_credStorageSet:(bool)arg1;
- (void)set_phskip_hstsStorage:(struct _CFHSTSPolicy { }*)arg1;
- (void)set_phskip_hstsStorageSet:(bool)arg1;
- (void)set_phskip_urlCache:(id)arg1;
- (void)set_phskip_urlCacheSet:(bool)arg1;
- (void)set_prefersInfraWiFi:(bool)arg1;
- (void)set_preventsDirectWiFiAccess:(bool)arg1;
- (void)set_preventsIdleSleep:(bool)arg1;
- (void)set_preventsIdleSleepOnceConnected:(bool)arg1;
- (void)set_preventsSystemHTTPProxyAuthentication:(bool)arg1;
- (void)set_proxySession:(bool)arg1;
- (void)set_requiresClientToOpenFiles:(bool)arg1;
- (void)set_requiresPowerPluggedIn:(bool)arg1;
- (void)set_requiresSecureHTTPSProxyConnection:(bool)arg1;
- (void)set_requiresSustainedDataDelivery:(bool)arg1;
- (void)set_respectsAllowsCellularAccessForDiscretionaryTasks:(bool)arg1;
- (void)set_sessionSendsLaunchOnDemandEvents:(bool)arg1;
- (void)set_shouldPreserveBackgroundSessionDisposition:(bool)arg1;
- (void)set_shouldSkipPreferredClientCertificateLookup:(bool)arg1;
- (void)set_socketStreamProperties:(id)arg1;
- (void)set_sourceApplicationAuditTokenData:(id)arg1;
- (void)set_sourceApplicationBundleIdentifier:(id)arg1;
- (void)set_sourceApplicationSecondaryIdentifier:(id)arg1;
- (void)set_supportsAVAssetDownloads:(bool)arg1;
- (void)set_suppressedAutoAddedHTTPHeaders:(id)arg1;
- (void)set_tcpConnectionPoolName:(id)arg1;
- (void)set_timingDataOptions:(long long)arg1;
- (void)set_tlsCachePrefix:(id)arg1;
- (void)set_tlsTrustPinningPolicyName:(id)arg1;
- (void)set_usePipeliningHeuristics:(bool)arg1;
- (void)set_watchAppBundleIdentifier:(id)arg1;
- (void)set_watchExtensionBundleIdentifier:(id)arg1;
- (id)sharedContainerIdentifier;
- (bool)shouldUseExtendedBackgroundIdleMode;
- (bool)skip_download_unlink;
- (double)timeoutIntervalForRequest;
- (double)timeoutIntervalForResource;
- (bool)waitsForConnectivity;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

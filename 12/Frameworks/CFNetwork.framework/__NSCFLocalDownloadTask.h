<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>__NSCFLocalDownloadTask.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CFNetwork.framework/__NSCFLocalDownloadTask.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CFNetwork.framework/CFNetwork (978.0.7)
 */

@interface __NSCFLocalDownloadTask : __NSCFLocalSessionTask <NSURLSessionDownloadTaskSubclass, __NSCFLocalDownloadFileOpener> {
    id /* block */  _afterDidReportProgressOnQueue;
    bool  _canWrite;
    id /* block */  _dataAckCompletion;
    bool  _didIssueNeedFinish;
    __NSCFLocalDownloadFile * _downloadFile;
    id /* block */  _fileCompletion;
    long long  _initialResumeSize;
    unsigned long long  _ioSuspend;
    bool  _needFinish;
    NSDictionary * _originalResumeInfo;
    id /* block */  _resumeCallback;
    int  _seqNo;
    bool  _suppressProgress;
    unsigned long long  _totalWrote;
    unsigned long long  _transientWriteProgress;
    NSObject<OS_dispatch_data> * _writeBuffer;
}

@property (copy) id /* block */ _afterDidReportProgressOnQueue;
@property (copy) id /* block */ dataAckCompletion;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (retain) __NSCFLocalDownloadFile *downloadFile;
@property (copy) id /* block */ fileCompletion;
@property (readonly) unsigned long long hash;
@property (copy) id /* block */ resumeCallback;
@property (readonly) Class superclass;

+ (id)_expandResumeData:(id)arg1;
+ (id)_requestFromResumeDataDictionary:(id)arg1;
+ (id)_requestFromResumeDataDictionary:(id)arg1 key:(id)arg2;

- (id /* block */)_afterDidReportProgressOnQueue;
- (struct __CFDictionary { }*)_copySocketStreamProperties;
- (void)_onqueue_cancelByProducingResumeData:(id /* block */)arg1;
- (void)_onqueue_completeInitialization;
- (void)_onqueue_didReceiveResponse:(id)arg1 completion:(id /* block */)arg2;
- (void)_onqueue_willCacheResponse:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)_private_errorCompletion;
- (void)_private_fileCompletion;
- (void)_private_posixError:(int)arg1;
- (void)_supplyExtractorWithData:(id)arg1 completion:(id /* block */)arg2;
- (void)_task_onqueue_didFinish;
- (void)_task_onqueue_didReceiveDispatchData:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)cancelByProducingResumeData:(id /* block */)arg1;
- (void)checkWrite;
- (id)createResumeInformation:(id)arg1;
- (id /* block */)dataAckCompletion;
- (void)dealloc;
- (id)downloadFile;
- (id)explicitDownloadDirectory;
- (id /* block */)fileCompletion;
- (id)initWithSession:(id)arg1 request:(id)arg2 filePath:(id)arg3 ident:(unsigned long long)arg4;
- (id)initWithSession:(id)arg1 request:(id)arg2 ident:(unsigned long long)arg3;
- (id)initWithSession:(id)arg1 resumeData:(id)arg2 ident:(unsigned long long)arg3;
- (id)initWithTask:(id)arg1;
- (bool)isKindOfClass:(Class)arg1;
- (int)openItemForPath:(id)arg1 mode:(int)arg2;
- (void)reportProgress:(unsigned long long)arg1;
- (id /* block */)resumeCallback;
- (void)setDataAckCompletion:(id /* block */)arg1;
- (void)setDownloadFile:(id)arg1;
- (void)setFileCompletion:(id /* block */)arg1;
- (void)setResumeCallback:(id /* block */)arg1;
- (void)set_afterDidReportProgressOnQueue:(id /* block */)arg1;
- (bool)setupForNewDownload:(id)arg1;
- (void)suspendExtractor;
- (void)terminateExtractorWithError:(id)arg1 completion:(id /* block */)arg2;
- (void)writeAndResume;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

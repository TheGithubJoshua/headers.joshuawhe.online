<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CAInterAppAudioTransportView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreAudioKit.framework/CAInterAppAudioTransportView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreAudioKit.framework/CoreAudioKit (1.1)
 */

@interface CAInterAppAudioTransportView : UIView {
    bool  _connected;
    UIFont * _currentTimeLabelFont;
    double  _playTime;
    bool  _playing;
    bool  _recording;
    struct HostCallbackInfo { void *x1; int (*x2)(); int (*x3)(); int (*x4)(); int (*x5)(); } * callBackInfo;
    UILabel * currentTimeLabel;
    bool  enabled;
    bool  inForeground;
    struct OpaqueAudioComponentInstance { } * outputUnit;
    UIColor * pauseButtonColor;
    UIColor * playButtonColor;
    CAUITransportButton * playPauseButton;
    NSTimer * pollingPlayerTimer;
    CAUITransportButton * recordButton;
    CAUITransportButton * rewindButton;
}

@property (getter=isConnected, nonatomic, readonly) bool connected;
@property (nonatomic, retain) UIFont *currentTimeLabelFont;
@property (getter=isEnabled) bool enabled;
@property (nonatomic, retain) UIColor *labelColor;
@property (nonatomic, retain) UIColor *pauseButtonColor;
@property (nonatomic, retain) UIColor *playButtonColor;
@property (getter=isPlaying, nonatomic, readonly) bool playing;
@property (nonatomic, retain) UIColor *recordButtonColor;
@property (getter=isRecording, nonatomic, readonly) bool recording;
@property (nonatomic, retain) UIColor *rewindButtonColor;

- (void)appHasGoneForeground;
- (void)appHasGoneInBackground;
- (void)audioUnitPropertyChangedListener:(void*)arg1 unit:(struct OpaqueAudioComponentInstance { }*)arg2 propID:(unsigned int)arg3 scope:(unsigned int)arg4 element:(unsigned int)arg5;
- (bool)canPlay;
- (bool)canRecord;
- (bool)canRewind;
- (id)currentTimeLabelFont;
- (void)dealloc;
- (void)getHostCallbackInfo;
- (id)getPlayTimeString;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)initialize;
- (bool)isConnected;
- (bool)isEnabled;
- (bool)isHostConnected;
- (bool)isPlaying;
- (bool)isRecording;
- (id)labelColor;
- (void)layoutSubviews;
- (id)pauseButtonColor;
- (id)playButtonColor;
- (void)pollHost;
- (id)recordButtonColor;
- (void)rewindAction:(id)arg1;
- (id)rewindButtonColor;
- (void)sendStateToRemoteHost:(unsigned int)arg1;
- (void)setCurrentTimeLabelFont:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setLabelColor:(id)arg1;
- (void)setOutputAudioUnit:(struct OpaqueAudioComponentInstance { }*)arg1;
- (void)setPauseButtonColor:(id)arg1;
- (void)setPlayButtonColor:(id)arg1;
- (void)setRecordButtonColor:(id)arg1;
- (void)setRewindButtonColor:(id)arg1;
- (void)startPollingPlayer;
- (void)stopPollingPlayer;
- (void)togglePlayback:(id)arg1;
- (void)toggleRecording:(id)arg1;
- (void)updateStatefromTransportCallBack;
- (void)updateTransportControls;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

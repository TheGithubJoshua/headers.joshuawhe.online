<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CMDeviceMotionLite.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreMotion.framework/CMDeviceMotionLite.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreMotion.framework/CoreMotion (2245.16.14)
 */

@interface CMDeviceMotionLite : NSObject <NSCopying, NSSecureCoding> {
    CMAttitude * _attitude;
    float  _compassTemperature;
    struct { 
        double x; 
        double y; 
        double z; 
    }  _gravity;
    float  _gyroTemperature;
    unsigned long long  _machTimestamp;
    NSString * _physicalDeviceUniqueID;
    struct { 
        double x; 
        double y; 
        double z; 
    }  _rawAcceleration;
    struct { 
        double x; 
        double y; 
        double z; 
    }  _rawMagneticField;
    struct { 
        double x; 
        double y; 
        double z; 
    }  _rawRotationRate;
    struct { 
        double x; 
        double y; 
        double z; 
    }  _rotationRate;
    struct { 
        double x; 
        double y; 
        double z; 
    }  _userAcceleration;
    bool  _usingCompass;
}

@property (nonatomic, readonly) CMAttitude *attitude;
@property (nonatomic, readonly) float compassTemperature;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } gravity;
@property (nonatomic, readonly) float gyroTemperature;
@property (nonatomic, readonly) unsigned long long machTimestamp;
@property (nonatomic, readonly, copy) NSString *physicalDeviceUniqueID;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } rawAcceleration;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } rawMagneticField;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } rawRotationRate;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } rotationRate;
@property (nonatomic, readonly) float tilt;
@property (nonatomic, readonly) float tip;
@property (nonatomic, readonly) struct { double x1; double x2; double x3; } userAcceleration;
@property (getter=isUsingCompass, nonatomic, readonly) bool usingCompass;

+ (bool)supportsSecureCoding;

- (id)attitude;
- (float)compassTemperature;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)debugDescription;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (struct { double x1; double x2; double x3; })gravity;
- (float)gyroTemperature;
- (id)initWithCoder:(id)arg1;
- (id)initWithDeviceMotionLite:(struct { struct { double x_1_1_1; double x_1_1_2; double x_1_1_3; double x_1_1_4; } x1; struct { float x_2_1_1; float x_2_1_2; float x_2_1_3; } x2; struct { float x_3_1_1; float x_3_1_2; float x_3_1_3; } x3; struct { float x_4_1_1; float x_4_1_2; float x_4_1_3; } x4; struct { float x_5_1_1; float x_5_1_2; float x_5_1_3; } x5; unsigned long long x6; bool x7; float x8; float x9; struct { float x_10_1_1; float x_10_1_2; float x_10_1_3; } x10; unsigned char x11[3]; })arg1 andDeviceID:(id)arg2;
- (bool)isUsingCompass;
- (unsigned long long)machTimestamp;
- (id)physicalDeviceUniqueID;
- (struct { double x1; double x2; double x3; })rawAcceleration;
- (struct { double x1; double x2; double x3; })rawMagneticField;
- (struct { double x1; double x2; double x3; })rawRotationRate;
- (struct { double x1; double x2; double x3; })rotationRate;
- (float)tilt;
- (float)tip;
- (struct { double x1; double x2; double x3; })userAcceleration;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPStoreDownload.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MediaPlayer.framework/MPStoreDownload.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer (1.0)
 */

@interface MPStoreDownload : NSObject {
    SSDownload * _SSDownload;
    SSPurchase * _SSPurchase;
    SSPurchaseResponse * _SSPurchaseResponse;
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSDictionary * _attributes;
    bool  _canceled;
    NSString * _downloadFilePath;
    NSMutableArray * _overridePhaseIdentifiers;
    long long  _type;
}

@property (nonatomic, readonly) NSDictionary *attributes;
@property (nonatomic, readonly) long long bytesDownloaded;
@property (nonatomic, readonly) long long bytesTotal;
@property (getter=isCanceled, nonatomic, readonly) bool canceled;
@property (nonatomic, readonly) long long downloadIdentifier;
@property (nonatomic, readonly) long long downloadSizeLimit;
@property (nonatomic, readonly) NSError *failureError;
@property (getter=isFinished, nonatomic, readonly) bool finished;
@property (nonatomic, readonly) unsigned long long libraryItemIdentifier;
@property (getter=isPaused, nonatomic, readonly) bool paused;
@property (nonatomic, readonly) double percentComplete;
@property (nonatomic, readonly) NSString *phaseIdentifier;
@property (nonatomic, readonly) NSError *purchaseError;
@property (getter=isPurchasing, nonatomic, readonly) bool purchasing;
@property (nonatomic, readonly) long long reason;
@property (nonatomic, readonly) NSDictionary *rentalInformation;
@property (getter=isRestore, nonatomic, readonly) bool restore;
@property (nonatomic, readonly) long long storeItemIdentifier;
@property (nonatomic, readonly) long long type;

+ (id)_SSPurchaseForType:(long long)arg1 attributes:(id)arg2;
+ (bool)_getEffectiveStoreDownloadAttributes:(id*)arg1 forPlaybackItemMetadata:(id)arg2 attributes:(id)arg3;
+ (bool)canCreateStoreDownloadForPlaybackItemMetadata:(id)arg1 type:(long long)arg2 attributes:(id)arg3;
+ (id)storeDownloadForMediaItem:(id)arg1 type:(long long)arg2 attributes:(id)arg3;
+ (id)storeDownloadForPlaybackItemMetadata:(id)arg1 type:(long long)arg2 attributes:(id)arg3;
+ (id)storeDownloadForStoreItemOffer:(id)arg1 attributes:(id)arg2;
+ (id)storeDownloadForStoreOffer:(id)arg1 type:(long long)arg2 attributes:(id)arg3;
+ (id)storeDownloadWithDownloadIdentifier:(long long)arg1;

- (void).cxx_destruct;
- (id)_SSDownload;
- (id)_SSPurchase;
- (id)_SSPurchaseResponse;
- (void)_addOverridePhaseIdentifier:(id)arg1;
- (id)_currentOverridePhaseIdentifier;
- (id)_getDownloadFilePath;
- (bool)_isCanceled;
- (void)_removeOverridePhaseIdentifier:(id)arg1;
- (void)_setCanceled:(bool)arg1;
- (void)_setDownloadFilePath:(id)arg1;
- (void)_setSSDownload:(id)arg1;
- (void)_setSSPurchase:(id)arg1 SSPurchaseResponse:(id)arg2;
- (id)_valueForDownloadProperty:(id)arg1;
- (id)assetsForType:(id)arg1;
- (id)attributes;
- (long long)bytesDownloaded;
- (long long)bytesTotal;
- (id)description;
- (long long)downloadIdentifier;
- (long long)downloadSizeLimit;
- (id)failureError;
- (id)initWithType:(long long)arg1 attributes:(id)arg2;
- (bool)isCanceled;
- (bool)isFinished;
- (bool)isPaused;
- (bool)isPurchasing;
- (bool)isRestore;
- (unsigned long long)libraryItemIdentifier;
- (double)percentComplete;
- (id)phaseIdentifier;
- (id)purchaseError;
- (long long)reason;
- (id)rentalInformation;
- (void)resetCachedRentalInformation;
- (long long)storeItemIdentifier;
- (long long)type;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

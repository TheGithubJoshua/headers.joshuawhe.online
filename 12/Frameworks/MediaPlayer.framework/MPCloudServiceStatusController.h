<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPCloudServiceStatusController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MediaPlayer.framework/MPCloudServiceStatusController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer (1.0)
 */

@interface MPCloudServiceStatusController : NSObject <ICEnvironmentMonitorObserver, ISURLBagObserver, SSVPlaybackLeaseDelegate> {
    unsigned long long  _URLBagObservationCount;
    NSObject<OS_dispatch_queue> * _accessQueue;
    unsigned long long  _accountStoreChangeObservationCount;
    unsigned long long  _automaticLeaseRefreshCount;
    NSObject<OS_dispatch_queue> * _calloutQueue;
    unsigned long long  _cloudLibraryObservationCount;
    long long  _cloudLibraryStatus;
    NSObject<OS_dispatch_queue> * _cloudLibraryStatusAccessQueue;
    NSOperationQueue * _fairPlayOperationQueue;
    SSVFairPlaySubscriptionController * _fairPlaySubscriptionController;
    unsigned long long  _fairPlaySubscriptionStatusObservationCount;
    bool  _hasLoadedMatchStatus;
    bool  _hasLoadedURLBag;
    bool  _hasSubscriptionLease;
    SSVFairPlaySubscriptionStatus * _lastKnownFairPlaySubscriptionStatus;
    SSVSubscriptionStatus * _lastKnownSubscriptionStatus;
    unsigned long long  _matchStatus;
    unsigned long long  _matchStatusObservationCount;
    bool  _observingNetworkReachability;
    SSVPlaybackLease * _playbackLease;
    bool  _shouldPlaybackRequireSubscriptionLease;
    unsigned long long  _shouldPlaybackRequireSubscriptionLeaseObservationCount;
    unsigned long long  _subscriptionAvailabilityObservationCount;
    bool  _subscriptionAvailable;
    unsigned long long  _subscriptionLeaseUsageCount;
    NSOperationQueue * _subscriptionOperationQueue;
    unsigned long long  _subscriptionStatusObservationCount;
}

@property (nonatomic, readonly) SSVPlaybackLease *_existingPlaybackLease;
@property (getter=isCloudLibraryEnabled, nonatomic, readonly) bool cloudLibraryEnabled;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) SSVFairPlaySubscriptionStatus *lastKnownFairPlaySubscriptionStatus;
@property (nonatomic, readonly) unsigned long long matchStatus;
@property (getter=isPurchaseHistoryEnabled, nonatomic, readonly) bool purchaseHistoryEnabled;
@property (nonatomic, readonly) bool shouldPlaybackRequireSubscriptionLease;
@property (getter=isSubscriptionAvailable, nonatomic, readonly) bool subscriptionAvailable;
@property (nonatomic, readonly, copy) SSVSubscriptionStatus *subscriptionStatus;
@property (readonly) Class superclass;

+ (id)sharedController;

- (void).cxx_destruct;
- (id)_activeAccount;
- (void)_beginObservingURLBag;
- (void)_beginUsingSubscriptionLeaseWithCompletionHandler:(id /* block */)arg1;
- (bool)_calculateShouldPlaybackRequireSubscriptionLeaseReturningLikelyToReachRemoteServer:(bool*)arg1;
- (void)_cloudClientAuthenticationDidChange;
- (bool)_currentCloudLibraryEnabled;
- (bool)_currentPurchaseHistoryEnabled;
- (void)_endObservingURLBag;
- (void)_endUsingSubscriptionLease;
- (id)_existingPlaybackLease;
- (id)_fairPlaySubscriptionController;
- (void)_fairPlaySubscriptionControllerSubscriptionStatusDidChangeNotification:(id)arg1;
- (void)_getCurrentFairPlaySubscriptionStatusWithCompletionHandler:(id /* block */)arg1;
- (void)_setHasSubscriptionLease:(bool)arg1 endReasonType:(unsigned long long)arg2;
- (id)_subscriptionOperationQueue;
- (void)_subscriptionStatusDidChangeNotification:(id)arg1;
- (void)_updateForNetworkReachabilityObserversCountChange;
- (void)_updateMatchStatus;
- (void)_updateSubscriptionInformationWithEndReasonType:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)_updateWithURLBagDictionary:(id)arg1;
- (void)_userIdentityStoreDidChange:(id)arg1;
- (void)acquireSubscriptionLeaseWithCompletionHandler:(id /* block */)arg1;
- (void)bagDidChange:(id)arg1;
- (void)beginAutomaticallyRefreshingSubscriptionLease;
- (void)beginObservingCloudLibraryEnabled;
- (void)beginObservingFairPlaySubscriptionStatus;
- (void)beginObservingMatchStatus;
- (void)beginObservingPurchaseHistoryEnabled;
- (void)beginObservingShouldPlaybackRequireSubscriptionLease;
- (void)beginObservingSubscriptionAvailability;
- (void)beginObservingSubscriptionLease;
- (void)beginObservingSubscriptionStatus;
- (void)dealloc;
- (void)endAutomaticallyRefreshingSubscriptionLease;
- (void)endObservingCloudLibraryEnabled;
- (void)endObservingFairPlaySubscriptionStatus;
- (void)endObservingMatchStatus;
- (void)endObservingPurchaseHistoryEnabled;
- (void)endObservingShouldPlaybackRequireSubscriptionLease;
- (void)endObservingSubscriptionAvailability;
- (void)endObservingSubscriptionLease;
- (void)endObservingSubscriptionStatus;
- (void)environmentMonitorDidChangeNetworkReachability:(id)arg1;
- (void)getFairPlaySubscriptionStatusWithCompletionHandler:(id /* block */)arg1;
- (void)getSubscriptionAssetWithRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)getSubscriptionStatusWithOptions:(id)arg1 statusBlock:(id /* block */)arg2;
- (id)init;
- (bool)isCloudLibraryEnabled;
- (bool)isPurchaseHistoryEnabled;
- (bool)isSubscriptionAvailable;
- (id)lastKnownFairPlaySubscriptionStatus;
- (unsigned long long)matchStatus;
- (void)performSubscriptionSecureKeyDeliveryRequestOperation:(id)arg1;
- (void)playbackLease:(id)arg1 automaticRefreshDidFinishWithResponse:(id)arg2 error:(id)arg3;
- (void)playbackLease:(id)arg1 didEndWithReasonType:(unsigned long long)arg2;
- (void)preheatSubscriptionLeaseRequestsWithCompletionHandler:(id /* block */)arg1;
- (void)refreshSubscriptionLeaseWithCompletionHandler:(id /* block */)arg1;
- (bool)shouldPlaybackRequireSubscriptionLease;
- (id)subscriptionStatus;
- (void)updateWithExternalLeaseResponseError:(id)arg1 completionHandler:(id /* block */)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

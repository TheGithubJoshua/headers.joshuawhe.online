<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPModelSong.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MediaPlayer.framework/MPModelSong.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer (1.0)
 */

@interface MPModelSong : MPModelObject

@property (nonatomic, retain) MPModelAlbum *album;
@property (nonatomic, retain) MPModelArtist *artist;
@property (getter=isArtistUploadedContent, nonatomic) bool artistUploadedContent;
@property (nonatomic, copy) id /* block */ artworkCatalogBlock;
@property (nonatomic) long long beatsPerMinute;
@property (nonatomic, copy) NSString *classicalMovement;
@property (nonatomic) long long classicalMovementCount;
@property (nonatomic) long long classicalMovementNumber;
@property (nonatomic, copy) NSString *classicalWork;
@property (nonatomic, retain) MPModelComposer *composer;
@property (nonatomic, copy) NSString *copyrightText;
@property (nonatomic) long long discNumber;
@property (nonatomic) double duration;
@property (getter=isExplicitSong, nonatomic) bool explicitSong;
@property (nonatomic, retain) MPGaplessInfo *gaplessInfo;
@property (nonatomic, retain) MPModelGenre *genre;
@property (nonatomic, copy) NSString *grouping;
@property (nonatomic) bool hasCloudSyncSource;
@property (nonatomic) bool hasVideo;
@property (nonatomic, retain) MPModelHomeSharingAsset *homeSharingAsset;
@property (nonatomic) long long keepLocalEnableState;
@property (nonatomic) long long keepLocalManagedStatus;
@property (getter=isLibraryAddEligible, nonatomic) bool libraryAddEligible;
@property (getter=isLibraryAdded, nonatomic) bool libraryAdded;
@property (nonatomic, copy) NSDate *libraryAddedDate;
@property (nonatomic, retain) MPModelFileAsset *localFileAsset;
@property (nonatomic, retain) MPModelLyrics *lyrics;
@property (nonatomic, retain) MPModelPlaybackPosition *playbackPosition;
@property (nonatomic) bool shouldExcludeFromShuffle;
@property (nonatomic) bool shouldShowComposer;
@property (nonatomic, retain) MPModelStoreAsset *storeAsset;
@property (nonatomic, copy) NSString *title;
@property (nonatomic) long long trackCount;
@property (nonatomic) long long trackNumber;
@property (nonatomic) float userRating;
@property (nonatomic) float volumeAdjustment;
@property (nonatomic) float volumeNormalization;
@property (nonatomic) long long year;

// Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer

+ (id)__album_KEY;
+ (id)__artistUploadedContent_KEY;
+ (id)__artist_KEY;
+ (id)__artworkCatalogBlock_KEY;
+ (id)__beatsPerMinute_KEY;
+ (id)__classicalMovementCount_KEY;
+ (id)__classicalMovementNumber_KEY;
+ (id)__classicalMovement_KEY;
+ (id)__classicalWork_KEY;
+ (id)__composer_KEY;
+ (id)__copyrightText_KEY;
+ (id)__discNumber_KEY;
+ (id)__duration_KEY;
+ (id)__explicitSong_KEY;
+ (id)__gaplessInfo_KEY;
+ (id)__genre_KEY;
+ (id)__grouping_KEY;
+ (id)__hasCloudSyncSource_KEY;
+ (id)__hasVideo_KEY;
+ (id)__homeSharingAsset_KEY;
+ (id)__keepLocalEnableState_KEY;
+ (id)__keepLocalManagedStatus_KEY;
+ (id)__libraryAddEligible_KEY;
+ (id)__libraryAddedDate_KEY;
+ (id)__libraryAdded_KEY;
+ (id)__localFileAsset_KEY;
+ (id)__lyrics_KEY;
+ (id)__playbackPosition_KEY;
+ (id)__shouldExcludeFromShuffle_KEY;
+ (id)__shouldShowComposer_KEY;
+ (id)__storeAsset_KEY;
+ (id)__title_KEY;
+ (id)__trackCount_KEY;
+ (id)__trackNumber_KEY;
+ (id)__userRating_KEY;
+ (id)__volumeAdjustment_KEY;
+ (id)__volumeNormalization_KEY;
+ (id)__year_KEY;
+ (id)kindWithVariants:(unsigned long long)arg1;
+ (id)kindWithVariants:(unsigned long long)arg1 options:(unsigned long long)arg2;
+ (id)requiredKeepLocalStatusObservationProperties;
+ (id)requiredLibraryAddStatusObservationProperties;
+ (id)requiredLibraryRemovalProperties;
+ (id)requiredStoreLibraryPersonalizationProperties;
+ (id)storeItemMetadataRequestItemIdentifierForIdentifiers:(id)arg1;
+ (bool)storeItemMetadataRequestNeedsPersonalizationForIdentifiers:(id)arg1;
+ (bool)supportsKeepLocalStatusObservation;
+ (bool)supportsLibraryAddStatusObservation;
+ (bool)supportsLibraryRemoval;

- (id)artworkCatalog;
- (id)humanDescription;
- (struct MPLibraryAddStatusObserverConfiguration { bool x1; bool x2; bool x3; bool x4; bool x5; })libraryAddStatusObserverConfiguration;
- (long long)libraryRemovalSupportedOptions;
- (id)mediaItemPropertyValues;
- (id)newKeepLocalStatusObserverConfiguration;
- (id)objectWithStoreLibraryPersonalizationRelativeModelObject:(id)arg1;
- (id)personalizationScopedPropertiesForProperties:(id)arg1;
- (id)relativeModelObjectForStoreLibraryPersonalization;

// Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore

+ (id)mpc_remotePlaybackQueueRequiredProperties;
+ (id)mqf_requiredPlaybackProperties;

- (id)MPC_modelObjectWithStoreFrontLocalEquivalentModelObject:(id)arg1;
- (id)_radioStationMatchMetadata;
- (id)mpc_protoItemRepresentation;
- (id)mpc_radioContentReference;
- (void)mqf_configurePlaybackItemMetadata:(id)arg1;
- (id)mqf_newPlaybackItemMetadata;
- (id)mqf_playbackItemMetadataModelObject;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MPArtworkCatalog.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MediaPlayer.framework/MPArtworkCatalog.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer (1.0)
 */

@interface MPArtworkCatalog : NSObject {
    NSString * _cacheIdentifier;
    id /* block */  _configurationBlock;
    <MPArtworkDataSource> * _dataSource;
    id  _destination;
    double  _destinationScale;
    struct CGSize { 
        double width; 
        double height; 
    }  _fittingSize;
    bool  _loadingRepresentation;
    long long  _modelRevisionID;
    unsigned long long  _renderHint;
    id  _requestingContext;
    id  _token;
}

@property (nonatomic, readonly) long long MP_artworkType;
@property (nonatomic, readonly) NSCache *cache;
@property (nonatomic, copy) NSString *cacheIdentifier;
@property (nonatomic, copy) id /* block */ configurationBlock;
@property (nonatomic) <MPArtworkDataSource> *dataSource;
@property (nonatomic) id destination;
@property (nonatomic) double destinationScale;
@property (nonatomic) struct CGSize { double x1; double x2; } fittingSize;
@property (nonatomic, readonly) bool hasImageOnDisk;
@property (getter=isLoadingRepresentation) bool loadingRepresentation;
@property (nonatomic) unsigned long long renderHint;
@property (nonatomic) id requestingContext;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } scaledFittingSize;
@property (nonatomic, retain) id token;
@property (nonatomic, readonly) <MPArtworkDataSourceVisualIdenticality> *visualIdenticalityIdentifier;

+ (id)_artworkCacheForIdentifier:(id)arg1 requestingContext:(id)arg2;
+ (id)_artworkLoadQueue;
+ (void)setCacheLimit:(long long)arg1 forCacheIdentifier:(id)arg2 requestingContext:(id)arg3;
+ (void)setCachePurgesWhenEnteringBackground:(bool)arg1 forCacheIdentifier:(id)arg2 requestingContext:(id)arg3;
+ (id)staticArtworkCatalogWithImage:(id)arg1;

- (void).cxx_destruct;
- (long long)MP_artworkType;
- (void)_loadBestRepresentationIfNeeded;
- (void)_updateRepresentation;
- (void)_updateWithRepresentation:(id)arg1 isBestRepresentation:(bool)arg2 modelRevisionID:(long long)arg3;
- (id)bestImageFromDisk;
- (id)cache;
- (id)cacheIdentifier;
- (id /* block */)configurationBlock;
- (id)dataSource;
- (void)dealloc;
- (id)description;
- (id)destination;
- (double)destinationScale;
- (id)existingColorAnalysisWithAlgorithm:(long long)arg1;
- (struct CGSize { double x1; double x2; })fittingSize;
- (bool)hasImageOnDisk;
- (unsigned long long)hash;
- (id)initWithToken:(id)arg1 dataSource:(id)arg2;
- (bool)isArtworkVisuallyIdenticalToCatalog:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isLoadingRepresentation;
- (unsigned long long)renderHint;
- (void)requestColorAnalysisWithAlgorithm:(long long)arg1 completionHandler:(id /* block */)arg2;
- (void)requestExportableArtworkPropertiesWithCompletion:(id /* block */)arg1;
- (void)requestExportableArtworkURLWithCompletion:(id /* block */)arg1;
- (void)requestFocusRegionsWithCompletionHandler:(id /* block */)arg1;
- (void)requestImageWithCompletionHandler:(id /* block */)arg1;
- (void)requestRadiosityImageWithCompletionHandler:(id /* block */)arg1;
- (id)requestingContext;
- (struct CGSize { double x1; double x2; })scaledFittingSize;
- (void)setCacheIdentifier:(id)arg1;
- (void)setCacheIdentifier:(id)arg1 forRequestingContext:(id)arg2;
- (void)setConfigurationBlock:(id /* block */)arg1;
- (void)setDataSource:(id)arg1;
- (void)setDestination:(id)arg1;
- (void)setDestination:(id)arg1 configurationBlock:(id /* block */)arg2;
- (void)setDestination:(id)arg1 progressiveConfigurationBlock:(id /* block */)arg2;
- (void)setDestinationScale:(double)arg1;
- (void)setFittingSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setLoadingRepresentation:(bool)arg1;
- (void)setRenderHint:(unsigned long long)arg1;
- (void)setRequestingContext:(id)arg1;
- (void)setToken:(id)arg1;
- (id)token;
- (id)visualIdenticalityIdentifier;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

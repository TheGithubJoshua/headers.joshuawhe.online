<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EKAlarm.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/EventKit.framework/EKAlarm.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/EventKit.framework/EventKit (1.0)
 */

@interface EKAlarm : EKObject <NSCopying> {
    NSString * _emailAddress;
    NSString * _soundName;
    long long  _type;
    NSURL * _url;
}

@property (nonatomic, readonly) NSString *UUID;
@property (nonatomic, copy) NSDate *absoluteDate;
@property (nonatomic, readonly) EKCalendarItem *calendarItemOwner;
@property (nonatomic, readonly) EKCalendar *calendarOwner;
@property (getter=isDefaultAlarm, nonatomic) bool defaultAlarm;
@property (nonatomic, copy) NSString *emailAddress;
@property (nonatomic, readonly) NSString *externalID;
@property (nonatomic, readonly) bool isAbsolute;
@property (nonatomic) bool isSnoozed;
@property (nonatomic, retain) EKAlarm *originalAlarm;
@property (nonatomic, readonly) EKObject *owner;
@property (nonatomic) long long proximity;
@property (nonatomic) double relativeOffset;
@property (nonatomic, copy) NSArray *snoozedAlarms;
@property (nonatomic, copy) NSString *soundName;
@property (nonatomic, copy) EKStructuredLocation *structuredLocation;
@property (nonatomic, readonly) long long type;
@property (nonatomic, copy) NSURL *url;

// Image: /System/Library/Frameworks/EventKit.framework/EventKit

+ (int)_currentAuthorizationStatus;
+ (id)alarmWithAbsoluteDate:(id)arg1;
+ (id)alarmWithAlarm:(id)arg1;
+ (id)alarmWithRelativeOffset:(double)arg1;
+ (bool)areLocationsAllowed;
+ (bool)areLocationsAllowedWithAuthorizationStatus:(int)arg1;
+ (bool)areLocationsAvailable;
+ (bool)areLocationsCurrentlyEnabled;
+ (double)defaultGeofencedReminderRadius;
+ (Class)frozenClass;
+ (id)knownRelationshipMultiValueKeys;
+ (id)knownRelationshipSingleValueKeys;
+ (long long)maxPublicProximity;
+ (id)noneTriggerDate;

- (void).cxx_destruct;
- (id)UUID;
- (id)absoluteDate;
- (id)acknowledgedDate;
- (void)addSnoozedAlarm:(id)arg1;
- (long long)alarmType;
- (id)calendarItemOwner;
- (id)calendarOwner;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)emailAddress;
- (id)externalID;
- (id)init;
- (id)initWithAbsoluteDate:(id)arg1;
- (id)initWithRelativeOffset:(double)arg1;
- (bool)isAbsolute;
- (bool)isDefaultAlarm;
- (bool)isSnoozed;
- (bool)isTimeToLeaveAlarm;
- (bool)isTopographicallyEqualToAlarm:(id)arg1;
- (bool)isVehicleAlarm;
- (id)originalAlarm;
- (id)owner;
- (id)ownerUUID;
- (long long)proximity;
- (double)relativeOffset;
- (id)relativeOffsetRaw;
- (void)removeSnoozedAlarm:(id)arg1;
- (id)semanticIdentifier;
- (void)setAbsoluteDate:(id)arg1;
- (void)setAcknowledgedDate:(id)arg1;
- (void)setAlarmType:(long long)arg1;
- (void)setDefaultAlarm:(bool)arg1;
- (void)setEmailAddress:(id)arg1;
- (void)setIsSnoozed:(bool)arg1;
- (void)setIsTimeToLeaveAlarm:(bool)arg1;
- (void)setOriginalAlarm:(id)arg1;
- (void)setProximity:(long long)arg1;
- (void)setRelativeOffset:(double)arg1;
- (void)setRelativeOffsetRaw:(id)arg1;
- (void)setSnoozedAlarms:(id)arg1;
- (void)setSoundName:(id)arg1;
- (void)setStructuredLocation:(id)arg1;
- (void)setTriggerIsNotRelativeToTravelTime:(bool)arg1;
- (void)setUUID:(id)arg1;
- (void)setUrl:(id)arg1;
- (bool)shouldIncludeInNormalAlarms;
- (id)snoozedAlarms;
- (id)soundName;
- (id)structuredLocation;
- (bool)triggerIsNotRelativeToTravelTime;
- (long long)type;
- (id)url;
- (bool)validateWithOwner:(id)arg1 error:(id*)arg2;

// Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI

- (id)_localizedDescription:(bool)arg1 isAllDay:(bool)arg2;
- (id)localizedAllDayDescription;
- (id)localizedDescription;
- (id)longLocalizedAllDayDescription;
- (id)longLocalizedDescription;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

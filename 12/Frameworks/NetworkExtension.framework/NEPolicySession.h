<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NEPolicySession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/NetworkExtension.framework/NEPolicySession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension (1)
 */

@interface NEPolicySession : NSObject <NEPrettyDescription> {
    long long  _internalPriority;
    NSObject<OS_dispatch_queue> * _ioQueue;
    NSData * _lastReceivedResponse;
    unsigned int  _lastSendMessageID;
    NSMutableDictionary * _policies;
    NSObject<OS_dispatch_semaphore> * _responseSemaphore;
    int  _sessionFD;
}

@property long long internalPriority;
@property (retain) NSObject<OS_dispatch_queue> *ioQueue;
@property (retain) NSData *lastReceivedResponse;
@property unsigned int lastSendMessageID;
@property (retain) NSMutableDictionary *policies;
@property long long priority;
@property (retain) NSObject<OS_dispatch_semaphore> *responseSemaphore;
@property int sessionFD;

+ (void)addTLVToMessage:(id)arg1 type:(unsigned char)arg2 length:(unsigned long long)arg3 value:(const void*)arg4;
+ (id)copyTLVForBytes:(const char *)arg1 messageLength:(unsigned long long)arg2 type:(unsigned char)arg3 includeHeaderOffset:(bool)arg4 n:(int)arg5;
+ (id)errorFromMessage:(id)arg1;
+ (unsigned char)getTLVtypeForBytes:(const char *)arg1 includeHeaderOffset:(bool)arg2 nextTLVOffset:(unsigned int*)arg3;
+ (bool)isTLVValid:(char *)arg1 cursorCurrent:(char *)arg2 totalLength:(unsigned long long)arg3;
+ (unsigned int)messageIDForMessage:(id)arg1;
+ (id)parseTLVResponseForDump:(id)arg1;
+ (id)policyDumpFromData:(id)arg1;
+ (unsigned int)policyIDFromMessage:(id)arg1;
+ (id)readTLVOfType:(unsigned char)arg1 startCursor:(char *)arg2 currentCursor:(char **)arg3 totalLength:(unsigned long long)arg4 readTLVInstance:(unsigned int)arg5;

- (void).cxx_destruct;
- (unsigned long long)addPolicy:(id)arg1;
- (bool)apply;
- (id)createTLVMessage:(unsigned char)arg1;
- (void)dealloc;
- (id)description;
- (id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2;
- (id)dumpKernelPolicies;
- (int)dupSocket;
- (id)init;
- (id)initWithSocket:(int)arg1;
- (long long)internalPriority;
- (id)ioQueue;
- (id)lastReceivedResponse;
- (unsigned int)lastSendMessageID;
- (bool)lockSessionToCurrentProcess;
- (id)policies;
- (id)policyWithID:(unsigned long long)arg1;
- (long long)priority;
- (id)priorityString;
- (bool)registerServiceUUID:(id)arg1;
- (bool)removeAllPolicies;
- (bool)removePolicyWithID:(unsigned long long)arg1;
- (id)responseSemaphore;
- (int)sessionFD;
- (void)setInternalPriority:(long long)arg1;
- (void)setIoQueue:(id)arg1;
- (void)setLastReceivedResponse:(id)arg1;
- (void)setLastSendMessageID:(unsigned int)arg1;
- (void)setPolicies:(id)arg1;
- (void)setPriority:(long long)arg1;
- (void)setResponseSemaphore:(id)arg1;
- (void)setSessionFD:(int)arg1;
- (bool)unregisterServiceUUID:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

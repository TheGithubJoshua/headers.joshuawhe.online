<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>NENexus.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/NetworkExtension.framework/NENexus.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension (1)
 */

@interface NENexus : NSObject <NENexusAgentDelegate> {
    NENexusAgent * _agent;
    bool  _asserted;
    NSMutableDictionary * _assertions;
    unsigned long long  _availability;
    NSObject<NENexusDelegate> * _delegate;
    NSArray * _dnsServerAddresses;
    NENexusFlowManager * _flowManager;
    NSMutableDictionary * _kernelNexusClientFlows;
    unsigned long long  _level;
    NSArray * _localAddresses;
    unsigned long long  _maximumTransmissionUnit;
    NSString * _name;
    NEPolicySession * _policySession;
    NSObject<OS_nw_nexus> * _userNexus;
    NSMutableDictionary * _userNexusClientCount;
    NSMutableDictionary * _userNexusClientFlows;
    NSMutableDictionary * _userNexusInstances;
    struct NEVirtualInterface_s { } * _virtualInterface;
}

@property (retain) NENexusAgent *agent;
@property (getter=isAsserted) bool asserted;
@property (retain) NSMutableDictionary *assertions;
@property (nonatomic) unsigned long long availability;
@property (readonly, copy) NSString *debugDescription;
@property NSObject<NENexusDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSArray *dnsServerAddresses;
@property (retain) NENexusFlowManager *flowManager;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *interfaceName;
@property (retain) NSMutableDictionary *kernelNexusClientFlows;
@property (readonly) unsigned long long level;
@property (nonatomic, retain) NSArray *localAddresses;
@property (nonatomic) unsigned long long maximumTransmissionUnit;
@property (readonly) NSString *name;
@property (retain) NEPolicySession *policySession;
@property (readonly) Class superclass;
@property (retain) NSObject<OS_nw_nexus> *userNexus;
@property (retain) NSMutableDictionary *userNexusClientCount;
@property (retain) NSMutableDictionary *userNexusClientFlows;
@property (retain) NSMutableDictionary *userNexusInstances;
@property struct NEVirtualInterface_s { }*virtualInterface;

- (void).cxx_destruct;
- (id)agent;
- (id)assertions;
- (unsigned long long)availability;
- (void)cancel;
- (void)closeFlowWithClientIdentifier:(id)arg1;
- (void)connectNewFlow:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (void)disconnectFlow:(id)arg1;
- (id)dnsServerAddresses;
- (id)flowManager;
- (void)handleAssertFromClient:(id)arg1;
- (bool)handleRequestNexusFromClient:(id)arg1;
- (void)handleStartFromClient:(id)arg1;
- (void)handleUnassertFromClient:(id)arg1;
- (id)initWithLevel:(unsigned long long)arg1 name:(id)arg2 virtualInterfaceType:(long long)arg3 delegate:(id)arg4;
- (id)initWithName:(id)arg1 delegate:(id)arg2;
- (id)interfaceName;
- (bool)isAsserted;
- (id)kernelNexusClientFlows;
- (unsigned long long)level;
- (id)localAddresses;
- (unsigned long long)maximumTransmissionUnit;
- (id)name;
- (id)policySession;
- (void)rejectFlowWithClientIdentifier:(id)arg1;
- (void)setAgent:(id)arg1;
- (void)setAsserted:(bool)arg1;
- (void)setAssertions:(id)arg1;
- (void)setAvailability:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDnsServerAddresses:(id)arg1;
- (void)setFlowManager:(id)arg1;
- (void)setKernelNexusClientFlows:(id)arg1;
- (void)setLocalAddresses:(id)arg1;
- (void)setMaximumTransmissionUnit:(unsigned long long)arg1;
- (void)setPolicySession:(id)arg1;
- (void)setUserNexus:(id)arg1;
- (void)setUserNexusClientCount:(id)arg1;
- (void)setUserNexusClientFlows:(id)arg1;
- (void)setUserNexusInstances:(id)arg1;
- (void)setVirtualInterface:(struct NEVirtualInterface_s { }*)arg1;
- (bool)setupFlowManager;
- (bool)setupPolicySession;
- (id)userNexus;
- (id)userNexusClientCount;
- (id)userNexusClientFlows;
- (id)userNexusInstances;
- (struct NEVirtualInterface_s { }*)virtualInterface;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

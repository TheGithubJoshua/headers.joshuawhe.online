<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUFeedViewControllerSpec.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUFeedViewControllerSpec.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUFeedViewControllerSpec : NSObject {
    double  _collectionViewContentInset;
    PUPhotosGridViewControllerSpec * _gridSpec;
    long long  _largeNumberOfSubjectsForLikes;
    int  _largeTileFastImageFormat;
    struct CGSize { 
        double width; 
        double height; 
    }  _largeTileMaximumFillingSize;
    int  _largeTileQualityImageFormat;
    int  _mediumTileFastImageFormat;
    struct CGSize { 
        double width; 
        double height; 
    }  _mediumTileMaximumFillingSize;
    int  _mediumTileQualityImageFormat;
    struct CGSize { 
        double width; 
        double height; 
    }  _minimumVideoTileSize;
    PUPhotosPickerViewControllerSpec * _photosPickerSpec;
    PUFeedViewControllerSpec * _popoverFeedViewControllerSpec;
    long long  _promptStyle;
    NSIndexSet * _qualityImageFormats;
    bool  _shouldHideBarsInLandscape;
    bool  _shouldShowInvitationsInPopover;
    bool  _shouldUseAspectThumbnails;
    bool  _shouldUseFullscreenLayout;
    int  _smallTileFastImageFormat;
    struct CGSize { 
        double width; 
        double height; 
    }  _smallTileMaximumFittingSize;
    double  _smallTilePanoAspectRatio;
    int  _smallTilePanoQualityImageFormat;
    int  _smallTileQualityImageFormat;
    int  _squareThumbnailFastImageFormat;
    struct CGSize { 
        double width; 
        double height; 
    }  _squareThumbnailMaximumSize;
    int  _squareThumbnailQualityImageFormat;
    double  _standardSideMargins;
    struct CGSize { 
        double width; 
        double height; 
    }  _thumbnailSize;
    int  _veryLargeTileFastImageFormat;
    int  _veryLargeTileQualityImageFormat;
}

@property (nonatomic, readonly) double collectionViewContentInset;
@property (nonatomic, readonly) PUPhotosGridViewControllerSpec *gridSpec;
@property (nonatomic, readonly) long long largeNumberOfSubjectsForLikes;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } minimumVideoTileSize;
@property (nonatomic, readonly) PUPhotosPickerViewControllerSpec *photosPickerSpec;
@property (nonatomic, readonly) PUFeedViewControllerSpec *popoverFeedViewControllerSpec;
@property (nonatomic, readonly) long long promptStyle;
@property (setter=_setQualityImageFormats:, nonatomic, copy) NSIndexSet *qualityImageFormats;
@property (nonatomic, readonly) bool shouldHideBarsInLandscape;
@property (nonatomic, readonly) bool shouldShowInvitationsInPopover;
@property (nonatomic, readonly) bool shouldUseAspectThumbnails;
@property (nonatomic, readonly) bool shouldUseFullscreenLayout;
@property (nonatomic, readonly) double standardSideMargins;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } thumbnailSize;

- (void).cxx_destruct;
- (void)_setQualityImageFormats:(id)arg1;
- (bool)canUseSimplePreheatManager;
- (double)collectionViewContentInset;
- (long long)configurationForSectionHeaderType:(long long)arg1 collectionViewType:(long long)arg2;
- (void)configureCommentSeparatorMetrics:(inout struct PUFeedSeparatorMetrics { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct UIEdgeInsets { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; }*)arg1;
- (void)configureFeedCollectionViewLayout:(id)arg1 forCollectionViewType:(long long)arg2 collectionViewSize:(struct CGSize { double x1; double x2; })arg3;
- (void)configureGradientCell:(id)arg1 forSectionHeaderBackgroundInCollectionViewType:(long long)arg2;
- (void)configureSeparatorMetrics:(inout struct PUFeedSeparatorMetrics { struct CGSize { double x_1_1_1; double x_1_1_2; } x1; struct UIEdgeInsets { double x_2_1_1; double x_2_1_2; double x_2_1_3; double x_2_1_4; } x2; }*)arg1 betweenSectionWithInfo:(id)arg2 andSectionWithInfo:(id)arg3 joined:(bool)arg4 collectionViewType:(long long)arg5;
- (void)configureTextCell:(id)arg1 forCaption:(id)arg2 date:(id)arg3;
- (void)configureTextCell:(id)arg1 forCommentWithDescriptionPhrase:(id)arg2 date:(id)arg3;
- (void)configureTextCell:(id)arg1 forEventWithDescriptionPhrase:(id)arg2;
- (void)configureTextCell:(id)arg1 forLikesWithDescriptionPhrase:(id)arg2 date:(id)arg3;
- (void)configureTextCell:(id)arg1 forSectionFooterWithActionText:(id)arg2 collectionViewType:(long long)arg3;
- (void)configureTextCell:(id)arg1 forSectionFooterWithDateText:(id)arg2 collectionViewType:(long long)arg3;
- (void)configureTextCell:(id)arg1 forSectionGroupHeaderWithText:(id)arg2 collectionViewType:(long long)arg3;
- (void)configureTextCell:(id)arg1 forSectionHeaderWithDescriptionPhrase:(id)arg2 streamDisclosureLabel:(id)arg3 actionText:(id)arg4 buttonType:(long long)arg5 collectionViewType:(long long)arg6 animated:(bool)arg7;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInsetsForSectionType:(long long)arg1 collectionViewType:(long long)arg2;
- (id)defaultSubTitleTextAttributesForCollectionViewType:(long long)arg1;
- (id)defaultTextAttributesForCollectionViewType:(long long)arg1;
- (id)emphasizedTextAttributesForCollectionViewType:(long long)arg1;
- (void)getFastImageFormat:(out int*)arg1 qualityImageFormat:(out int*)arg2 forSourceSize:(struct CGSize { double x1; double x2; })arg3 destinationSize:(struct CGSize { double x1; double x2; })arg4 allowCrop:(bool)arg5;
- (void)getReferenceMaximumLength:(double*)arg1 minimumNumberOfTilesToOmit:(long long*)arg2 forSectionType:(long long)arg3 collectionViewType:(long long)arg4;
- (id)gridSpec;
- (id)init;
- (long long)largeNumberOfSubjectsForLikes;
- (struct CGSize { double x1; double x2; })minimumVideoTileSize;
- (id)photosPickerSpec;
- (id)popoverFeedViewControllerSpec;
- (long long)promptStyle;
- (id)qualityImageFormats;
- (void)setLayoutReferenceWidth:(double)arg1;
- (bool)shouldHideBarsInLandscape;
- (bool)shouldShowCommentBadgesInCollectionViewType:(long long)arg1;
- (bool)shouldShowInvitationsInPopover;
- (bool)shouldUseAspectThumbnails;
- (bool)shouldUseFullscreenLayout;
- (double)spacingBetweenSectionWithInfo:(id)arg1 andHeaderWithGroupID:(id)arg2;
- (double)standardSideMargins;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })textInsetsForHeadersAndFootersInSectionType:(long long)arg1 collectionViewType:(long long)arg2;
- (double)textSpacingBetweenText:(id)arg1 detailText:(id)arg2;
- (struct CGSize { double x1; double x2; })thumbnailSize;
- (struct CGSize { double x1; double x2; })thumbnailSizeForImageSize:(struct CGSize { double x1; double x2; })arg1;
- (void)updateFormats;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

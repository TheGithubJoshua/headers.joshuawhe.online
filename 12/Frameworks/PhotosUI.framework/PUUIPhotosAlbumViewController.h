<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUUIPhotosAlbumViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUUIPhotosAlbumViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUUIPhotosAlbumViewController : PUPhotosAlbumViewController <PUPhotoPickerSelectionHandler, PUPhotoPickerServicesConsumer> {
    int  __albumFilter;
    PUUIImagePickerControllerHelper * __imagePickerControllerHelper;
    NSArray * __imagePickerMediaTypes;
    bool  _didDisappear;
    UIBarButtonItem * _imagePickerCancelButton;
    UIBarButtonItem * _imagePickerMultipleSelectionDoneButton;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _lastKnownSafeAreaInsets;
    double  _lastKnownWidth;
    <PUPhotoPicker> * _photoPicker;
}

@property (setter=_setAlbumFilter:, nonatomic) int _albumFilter;
@property (readonly) PUUIImagePickerControllerHelper *_imagePickerControllerHelper;
@property (setter=_setImagePickerMediaTypes:, nonatomic, copy) NSArray *_imagePickerMediaTypes;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool didDisappear;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } lastKnownSafeAreaInsets;
@property (nonatomic) double lastKnownWidth;
@property (nonatomic) <PUPhotoPicker> *photoPicker;
@property (nonatomic, readonly) bool referenceValuesDidChange;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (int)_albumFilter;
- (void)_handleImagePickerCancel:(id)arg1;
- (void)_handleImagePickerMultipleSelectionDone:(id)arg1;
- (id)_imagePickerControllerHelper;
- (id)_imagePickerMediaTypes;
- (void)_scrollToBottomIfNeeded;
- (void)_setAlbumFilter:(int)arg1;
- (void)_setImagePickerMediaTypes:(id)arg1;
- (bool)allowsPeeking;
- (bool)canBeginStackCollapseTransition;
- (bool)canDragIn;
- (bool)canDragOut;
- (bool)canNavigateToPhotoInteractively:(bool)arg1;
- (bool)didDisappear;
- (id)filterPredicateForAlbum:(struct NSObject { Class x1; }*)arg1;
- (void)getTitle:(out id*)arg1 prompt:(out id*)arg2 shouldHideBackButton:(out bool*)arg3 leftBarButtonItems:(out id*)arg4 rightBarButtonItems:(out id*)arg5;
- (void)handleNavigateToAsset:(id)arg1 inContainer:(id)arg2;
- (void)handleToggleSelectionOfItemAtIndexPath:(id)arg1;
- (id)init;
- (id)initWithSpec:(id)arg1;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })lastKnownSafeAreaInsets;
- (double)lastKnownWidth;
- (void)loadView;
- (void)performPhotoPickerSelection;
- (id)photoPicker;
- (bool)pu_wantsNavigationBarVisible;
- (bool)referenceValuesDidChange;
- (void)setAlbum:(id)arg1 existingFetchResult:(id)arg2;
- (void)setDidDisappear:(bool)arg1;
- (void)setLastKnownSafeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setLastKnownWidth:(double)arg1;
- (void)setPhotoPicker:(id)arg1;
- (void)setPhotoPickerMediaTypes:(id)arg1;
- (bool)shouldShowMenu;
- (bool)shouldShowSectionHeaders;
- (double)topMarginForPhotosGlobalFooterView:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (bool)wantsGlobalFooter;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

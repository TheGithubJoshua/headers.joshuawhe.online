<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUGridZoomLevelInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUGridZoomLevelInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUGridZoomLevelInfo : NSObject <PUGridRenderedStripDataSource, PUPhotosSectionHeaderViewDelegate, PUSectionedGridLayoutDelegate> {
    PUGridZoomLevelInfo * _baseZoomLevelInfo;
    PHCachingImageManager * _cachingImageManager;
    PUSectionedGridLayout * _collectionViewLayout;
    PUGridRenderedStrip * _currentRenderedStrip;
    struct CGSize { 
        double width; 
        double height; 
    }  _lastItemPixelSize;
    long long  _maxRowsPerSection;
    double  _pendingContentWidth;
    PHAssetResourceQualityClass * _qualityClass;
    bool  _summarizeSections;
    struct CGSize { 
        double width; 
        double height; 
    }  _thumbnailImageSize;
    bool  _useFloatingHeaderGroupName;
    unsigned long long  _zoomLevel;
    PUMomentsZoomLevelManager * _zoomLevelManager;
    PUZoomableGridViewController * _zoomableGridViewController;
}

@property (nonatomic, readonly) struct __CFString { }*aggregateLevelKey;
@property (nonatomic, readonly) PUGridZoomLevelInfo *baseZoomLevelInfo;
@property (nonatomic, readonly) PHCachingImageManager *cachingImageManager;
@property (nonatomic, readonly) long long cellFillMode;
@property (nonatomic, readonly) PUSectionedGridLayout *collectionViewLayout;
@property (nonatomic, readonly) unsigned long long dateRangeFormatterPreset;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } imageRequestItemSize;
@property (nonatomic, readonly) double itemContentScale;
@property (nonatomic) struct CGSize { double x1; double x2; } lastItemPixelSize;
@property (nonatomic, readonly) long long maxRowsPerSection;
@property (nonatomic) double pendingContentWidth;
@property (nonatomic, retain) PHAssetResourceQualityClass *qualityClass;
@property (nonatomic, readonly) NSString *renderedStripsElementKind;
@property (nonatomic, readonly) NSString *sectionHeaderElementKind;
@property (nonatomic) bool summarizeSections;
@property (readonly) Class superclass;
@property (nonatomic, readonly) bool supportsCollectionViewDragSource;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } thumbnailImageSize;
@property (nonatomic) bool useFloatingHeaderGroupName;
@property (nonatomic, readonly) double zoomInDuration;
@property (nonatomic, readonly) unsigned long long zoomLevel;
@property (nonatomic, readonly) PUMomentsZoomLevelManager *zoomLevelManager;
@property (nonatomic, readonly) double zoomOutDuration;
@property (nonatomic) PUZoomableGridViewController *zoomableGridViewController;
@property (nonatomic, readonly) PUZoomableGridViewController *zoomableGridViewController;

- (void).cxx_destruct;
- (unsigned long long)_detailViewSourceOriginWithZoomLevel:(unsigned long long)arg1;
- (void)_updateBackdropGroupNameForHeaderView:(id)arg1;
- (struct __CFString { }*)aggregateLevelKey;
- (id)assetsToDisplayInMapForVisualSection:(long long)arg1;
- (id)baseZoomLevelInfo;
- (id)cachingImageManager;
- (double)cellAspectRatioHint;
- (long long)cellFillMode;
- (id)collectionViewLayout;
- (bool)configureGridCell:(id)arg1 forIndexPath:(id)arg2;
- (void)configureSectionHeaderView:(id)arg1 forVisualSection:(long long)arg2;
- (bool)configureSupplementaryView:(id)arg1 ofKind:(id)arg2 forIndexPath:(id)arg3;
- (unsigned long long)dateRangeFormatterPreset;
- (id)diagnosticsProviderForVisualSection:(long long)arg1;
- (void)didFinishZoomLevelTransition;
- (void)didTapHeaderView:(id)arg1;
- (void)getPhotosDataSource:(id*)arg1 displayTitleInfo:(id*)arg2 forDetailsForVisualSection:(long long)arg3;
- (void)headerView:(id)arg1 actionButtonPressed:(id)arg2;
- (id)imageDataForAsset:(id)arg1 itemContentScale:(double)arg2 imageWidth:(int*)arg3 imageHeight:(int*)arg4 bytesPerRow:(int*)arg5 dataWidth:(int*)arg6 dataHeight:(int*)arg7 imageDataOffset:(int*)arg8;
- (long long)imageDeliveryMode;
- (struct CGSize { double x1; double x2; })imageRequestItemSize;
- (id)initWithZoomLevel:(unsigned long long)arg1 zoomLevelManager:(id)arg2 baseZoomLevelInfo:(id)arg3;
- (double)itemContentScale;
- (struct CGSize { double x1; double x2; })lastItemPixelSize;
- (long long)maxRowsPerSection;
- (void)modelDidChange:(id)arg1;
- (id)newCollectionViewLayout;
- (double)pendingContentWidth;
- (void)prepareForTransitionFromZoomLevelInfo:(id)arg1 animated:(bool)arg2 interactive:(bool)arg3;
- (void)prepareForTransitionToZoomLevelInfo:(id)arg1 animated:(bool)arg2 interactive:(bool)arg3;
- (void)pushPhotosDetailsViewForVisualSection:(long long)arg1 animated:(bool)arg2;
- (id)qualityClass;
- (void)registerReusableViewClassesForCollectionView:(id)arg1;
- (void)renderedStrip:(id)arg1 enumerateAssetsForVisualSection:(long long)arg2 inVisualItemRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg3 usingBlock:(id /* block */)arg4;
- (id)renderedStrip:(id)arg1 imageDataForAsset:(id)arg2 imageWidth:(int*)arg3 imageHeight:(int*)arg4 bytesPerRow:(int*)arg5 dataWidth:(int*)arg6 dataHeight:(int*)arg7 imageDataOffset:(int*)arg8;
- (id)renderedStripsElementKind;
- (id)sectionHeaderElementKind;
- (void)sectionedGridLayout:(id)arg1 didFinalizePrepareTransitionIsAppearing:(bool)arg2;
- (void)sectionedGridLayout:(id)arg1 didInvalidateWithContext:(id)arg2;
- (void)sectionedGridLayout:(id)arg1 didPrepareTransitionIsAppearing:(bool)arg2;
- (long long)sectionedGridLayout:(id)arg1 maximumRowsForVisualSection:(long long)arg2;
- (struct CGPoint { double x1; double x2; })sectionedGridLayout:(id)arg1 targetContentOffsetForProposedUpdatesContentOffset:(struct CGPoint { double x1; double x2; })arg2;
- (id)sectionedGridLayoutAnchorItemForAdjustingContentOffset:(id)arg1;
- (bool)sectionedGridLayoutTransitionAutoAdjustContentOffsetEnabled:(id)arg1;
- (void)setLastItemPixelSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setPendingContentWidth:(double)arg1;
- (void)setQualityClass:(id)arg1;
- (void)setSummarizeSections:(bool)arg1;
- (void)setUseFloatingHeaderGroupName:(bool)arg1;
- (void)setZoomableGridViewController:(id)arg1;
- (bool)shouldUseDynamicLayout;
- (bool)summarizeSections;
- (bool)supportsCollectionViewDragSource;
- (bool)supportsEditMode;
- (bool)supportsIncrementalChangeNotifications;
- (struct CGSize { double x1; double x2; })thumbnailImageSize;
- (void)updateForSizeChangeIfNecessary;
- (void)updateLayoutMetricsForWidth:(double)arg1 safeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg2;
- (bool)useFloatingHeaderGroupName;
- (bool)wantsAssetCountsVisible;
- (bool)wantsAutomaticContentOffsetAdjustment;
- (bool)wantsCloudStatusVisible;
- (bool)wantsMagnifierNavigation;
- (void)willAnimateSizeTransition;
- (void)willShowMagnifiedViewController:(id)arg1;
- (double)zoomInDuration;
- (unsigned long long)zoomLevel;
- (id)zoomLevelManager;
- (double)zoomOutDuration;
- (id)zoomableGridViewController;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

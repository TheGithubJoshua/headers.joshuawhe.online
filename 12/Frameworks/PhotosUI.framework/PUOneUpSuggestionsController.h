<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUOneUpSuggestionsController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUOneUpSuggestionsController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUOneUpSuggestionsController : NSObject <PUBrowsingViewModelChangeObserver, PXContextualNotificationDelegate> {
    PUBrowsingViewModel * _browsingViewModel;
    <PUOneUpSuggestionsControllerDelegate> * _delegate;
    struct { 
        bool frameForAssetReferenceInCoordinateSpace; 
        bool viewController; 
        bool didSelectSuggestionForAssetReference; 
        bool canShowSuggestion; 
    }  _delegateRespondsTo;
    PUAssetReference * _focusedAssetReference;
    bool  _focusedLongEnough;
    bool  _inFocus;
    bool  _isPerformingUpdates;
    double  _lastFocusedAssetReferenceChangeTime;
    struct { 
        bool focusedAssetReference; 
        bool focusedLongEnough; 
        bool activeSuggestionsWindow; 
    }  _needsUpdateFlags;
    NSMutableDictionary * _suggestionInfos;
    PUOneUpSuggestionsProvider * _suggestionsProvider;
    bool  _viewVisible;
    bool  _willPerformUpdates;
}

@property (nonatomic, readonly) PUBrowsingViewModel *browsingViewModel;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PUOneUpSuggestionsControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) PUAssetReference *focusedAssetReference;
@property (getter=isFocusedLongEnough, nonatomic) bool focusedLongEnough;
@property (readonly) unsigned long long hash;
@property (getter=isInFocus, nonatomic) bool inFocus;
@property (nonatomic) double lastFocusedAssetReferenceChangeTime;
@property (nonatomic, readonly) NSMutableDictionary *suggestionInfos;
@property (nonatomic, readonly) PUOneUpSuggestionsProvider *suggestionsProvider;
@property (readonly) Class superclass;
@property (getter=isViewVisible, nonatomic) bool viewVisible;

- (void).cxx_destruct;
- (id)_assetReferenceForContextualNotification:(id)arg1;
- (bool)_canBeginDisplayingSuggestionsForAssetReference:(id)arg1;
- (bool)_canKeepDisplayingSuggestionsForAssetReference:(id)arg1;
- (void)_dismissSuggestionInfo:(id)arg1;
- (void)_handleDataSourceChange:(id)arg1;
- (void)_handleSuggestion:(id)arg1 error:(id)arg2 forAssetReference:(id)arg3;
- (void)_invalidateActiveSuggestionsWindow;
- (void)_invalidateFocusedAssetReference;
- (void)_invalidateFocusedLongEnough;
- (void)_invalidateInFocus;
- (void)_invalidateSuggestionsVisibility;
- (bool)_needsUpdate;
- (void)_removeSuggestionInfoForAssetReference:(id)arg1;
- (void)_requestSuggestionForAssetReference:(id)arg1;
- (void)_setNeedsUpdate;
- (id)_suggestionInfoForAssetReference:(id)arg1 createIfNeeded:(bool)arg2;
- (void)_updateActiveSuggestionsWindowIfNeeded;
- (void)_updateFocusedAssetReferenceIfNeeded;
- (void)_updateFocusedLongEnoughIfNeeded;
- (void)_updateIfNeeded;
- (void)_updateInFocus;
- (void)_updateSuggestions;
- (id)browsingViewModel;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contextualNotification:(id)arg1 containingFrameInCoordinateSpace:(id)arg2;
- (bool)contextualNotification:(id)arg1 shouldPassthroughPoint:(struct CGPoint { double x1; double x2; })arg2 inCoordinateSpace:(id)arg3;
- (void)contextualNotificationDidDisappear:(id)arg1;
- (void)contextualNotificationWasDiscarded:(id)arg1;
- (void)contextualNotificationWasTapped:(id)arg1;
- (id)delegate;
- (id)focusedAssetReference;
- (void)hideSuggestionForAssetReference:(id)arg1;
- (id)init;
- (id)initWithSuggestionsProvider:(id)arg1 browsingViewModel:(id)arg2;
- (void)invalidateLayout;
- (void)invalidateLayoutForAssetReference:(id)arg1;
- (void)invalidateSuggestions;
- (bool)isFocusedLongEnough;
- (bool)isInFocus;
- (bool)isViewVisible;
- (double)lastFocusedAssetReferenceChangeTime;
- (void)markSuggestionAsSeenForAssetReference:(id)arg1;
- (long long)preferredAnimationForContextualNotification:(id)arg1;
- (id)preferredContainerViewForContextualNotification:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFocusedAssetReference:(id)arg1;
- (void)setFocusedLongEnough:(bool)arg1;
- (void)setInFocus:(bool)arg1;
- (void)setLastFocusedAssetReferenceChangeTime:(double)arg1;
- (void)setViewVisible:(bool)arg1;
- (id)suggestionInfos;
- (id)suggestionsProvider;
- (void)viewModel:(id)arg1 didChange:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

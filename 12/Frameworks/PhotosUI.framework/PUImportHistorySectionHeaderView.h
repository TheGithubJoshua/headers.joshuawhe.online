<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUImportHistorySectionHeaderView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUImportHistorySectionHeaderView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUImportHistorySectionHeaderView : UICollectionReusableView {
    UIButton * _actionButton;
    bool  _actionButtonEnabled;
    NSString * _actionText;
    _UIBackdropView * _backdropView;
    NSString * _backdropViewGroupName;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _contentInsets;
    <PUImportHistorySectionHeaderViewDelegate> * _delegate;
    struct { 
        unsigned int headerViewDidPressActionButton : 1; 
    }  _delegateFlags;
    bool  _inLayoutTransition;
    UILabel * _primaryLabel;
    UILabel * _secondaryLabel;
    struct PXSimpleIndexPath { 
        unsigned long long dataSourceIdentifier; 
        long long section; 
        long long item; 
        long long subitem; 
    }  _sectionIndexPath;
    UITraitCollection * _selfSizingTraits;
    bool  _shouldBlurBackground;
    bool  _showsActionButton;
    UILabel * _spacerLabel;
    bool  _supportsMultipleLinesInCompactLayout;
}

@property (nonatomic, retain) UIButton *actionButton;
@property (nonatomic) bool actionButtonEnabled;
@property (nonatomic, copy) NSString *actionText;
@property (nonatomic, retain) _UIBackdropView *backdropView;
@property (nonatomic, copy) NSString *backdropViewGroupName;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentInsets;
@property (nonatomic) <PUImportHistorySectionHeaderViewDelegate> *delegate;
@property (nonatomic) bool inLayoutTransition;
@property (nonatomic, readonly) long long layoutMode;
@property (nonatomic, retain) UILabel *primaryLabel;
@property (nonatomic, copy) NSString *primaryText;
@property (nonatomic, retain) UILabel *secondaryLabel;
@property (nonatomic, copy) NSString *secondaryText;
@property (nonatomic) struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; } sectionIndexPath;
@property (nonatomic, retain) UITraitCollection *selfSizingTraits;
@property (nonatomic) bool shouldBlurBackground;
@property (nonatomic) bool showsActionButton;
@property (nonatomic, retain) UILabel *spacerLabel;
@property (nonatomic) bool supportsMultipleLinesInCompactLayout;

- (void).cxx_destruct;
- (void)_actionButtonPressed:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (bool)_disableRasterizeInAnimations;
- (void)_updateActionButtonEnabledAnimated:(bool)arg1;
- (void)_updateActionButtonText;
- (void)_updateActionButtonVisibility;
- (void)_updateBackdropViewGroupName;
- (void)_updateBackground;
- (void)_updateLabelFonts;
- (void)_updateLabelLineNumbers;
- (void)_updateSpacerLabelHiddenState;
- (void)_updateWithCurrentTraits;
- (id)actionButton;
- (bool)actionButtonEnabled;
- (id)actionText;
- (void)applyLayoutAttributes:(id)arg1;
- (id)backdropView;
- (id)backdropViewGroupName;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInsets;
- (void)dealloc;
- (id)delegate;
- (void)didTransitionFromLayout:(id)arg1 toLayout:(id)arg2;
- (double)heightForSizeClass:(long long)arg1 width:(double)arg2 safeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (bool)inLayoutTransition;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (long long)layoutMode;
- (void)layoutSubviews;
- (id)primaryLabel;
- (id)primaryText;
- (id)secondaryLabel;
- (id)secondaryText;
- (struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })sectionIndexPath;
- (id)selfSizingTraits;
- (void)setActionButton:(id)arg1;
- (void)setActionButtonEnabled:(bool)arg1;
- (void)setActionButtonEnabled:(bool)arg1 animated:(bool)arg2;
- (void)setActionText:(id)arg1;
- (void)setBackdropView:(id)arg1;
- (void)setBackdropViewGroupName:(id)arg1;
- (void)setContentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setDelegate:(id)arg1;
- (void)setInLayoutTransition:(bool)arg1;
- (void)setPrimaryLabel:(id)arg1;
- (void)setPrimaryText:(id)arg1;
- (void)setSecondaryLabel:(id)arg1;
- (void)setSecondaryText:(id)arg1;
- (void)setSectionIndexPath:(struct PXSimpleIndexPath { unsigned long long x1; long long x2; long long x3; long long x4; })arg1;
- (void)setSelfSizingTraits:(id)arg1;
- (void)setShouldBlurBackground:(bool)arg1;
- (void)setShowsActionButton:(bool)arg1;
- (void)setSpacerLabel:(id)arg1;
- (void)setSupportsMultipleLinesInCompactLayout:(bool)arg1;
- (bool)shouldBlurBackground;
- (bool)showsActionButton;
- (id)spacerLabel;
- (bool)supportsMultipleLinesInCompactLayout;
- (id)traitCollection;
- (void)traitCollectionDidChange:(id)arg1;
- (void)willTransitionFromLayout:(id)arg1 toLayout:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

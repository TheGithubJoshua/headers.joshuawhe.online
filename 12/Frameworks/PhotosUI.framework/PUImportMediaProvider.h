<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUImportMediaProvider.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUImportMediaProvider.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUImportMediaProvider : PXMediaProvider {
    NSMutableDictionary * _extensionPlaceholderCachesByRequestSize;
    bool  _hasBeenIdle;
    PUImportImageCache * _imageCache;
    long long  _imageRequestsInflight;
    long long  _lastRequestsInflight;
    long long  _nextRequestID;
    int  _thumbnailImageFormat;
    NSMutableDictionary * _thumbnailRequestsByID;
    PXLoadingStatusManager * loadingStatusManager;
}

@property (nonatomic, retain) NSMutableDictionary *extensionPlaceholderCachesByRequestSize;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } gridItemSize;
@property (nonatomic) bool hasBeenIdle;
@property (nonatomic, retain) PUImportImageCache *imageCache;
@property (nonatomic) long long imageRequestsInflight;
@property (nonatomic) long long lastRequestsInflight;
@property (nonatomic, retain) PXLoadingStatusManager *loadingStatusManager;
@property (nonatomic) long long nextRequestID;
@property (nonatomic, readonly) int thumbnailImageFormat;
@property (nonatomic, retain) NSMutableDictionary *thumbnailRequestsByID;

+ (int)defaultThumbnailImageFormat;
+ (void)registerPUImportMediaProviderNotificationsReceiver:(struct NSObject { Class x1; }*)arg1;
+ (void)unregisterPUImportMediaProviderNotificationsReceiver:(struct NSObject { Class x1; }*)arg1;

- (void).cxx_destruct;
- (id)_newPlaceholderImageForItemWithExtension:(id)arg1 size:(struct CGSize { double x1; double x2; })arg2;
- (id)_placeholderExtensionForItem:(id)arg1;
- (id)_placeholderForItem:(id)arg1 size:(unsigned long long)arg2;
- (id)cachedImageForModel:(id)arg1 atSize:(unsigned long long)arg2;
- (void)cancelImageRequest:(long long)arg1;
- (void)enumerateAvailableThumbnailDataFormats:(id /* block */)arg1;
- (id)extensionPlaceholderCachesByRequestSize;
- (struct CGSize { double x1; double x2; })gridItemSize;
- (bool)hasBeenIdle;
- (double)idleTimeOut;
- (id)imageCache;
- (long long)imageOfSize:(unsigned long long)arg1 forModel:(id)arg2 localCacheOnly:(bool)arg3 priority:(unsigned char)arg4 completion:(id /* block */)arg5;
- (long long)imageRequestsInflight;
- (id)init;
- (long long)lastRequestsInflight;
- (id)loadingStatusManager;
- (long long)nextRequestID;
- (void)performIdleProcessingIfNecessary;
- (void)ppt_sendMediaProviderDidProcessAsset:(id)arg1;
- (long long)requestAnimatedImageForAsset:(id)arg1 options:(id)arg2 resultHandler:(id /* block */)arg3;
- (long long)requestCGImageForAsset:(id)arg1 targetSize:(struct CGSize { double x1; double x2; })arg2 contentMode:(long long)arg3 options:(id)arg4 resultHandler:(id /* block */)arg5;
- (long long)requestImageDataForAsset:(id)arg1 options:(id)arg2 resultHandler:(id /* block */)arg3;
- (long long)requestImageForImportItem:(id)arg1 ofSize:(unsigned long long)arg2 completion:(id /* block */)arg3;
- (long long)requestImageForImportItem:(id)arg1 ofSize:(unsigned long long)arg2 priority:(unsigned char)arg3 completion:(id /* block */)arg4;
- (long long)requestLivePhotoForAsset:(id)arg1 targetSize:(struct CGSize { double x1; double x2; })arg2 contentMode:(long long)arg3 options:(id)arg4 resultHandler:(id /* block */)arg5;
- (long long)requestPlayerItemForVideo:(id)arg1 options:(id)arg2 resultHandler:(id /* block */)arg3;
- (void)sendMediaProviderThumbnailingBecameIdle;
- (void)setExtensionPlaceholderCachesByRequestSize:(id)arg1;
- (void)setHasBeenIdle:(bool)arg1;
- (void)setImageCache:(id)arg1;
- (void)setImageRequestsInflight:(long long)arg1;
- (void)setLastRequestsInflight:(long long)arg1;
- (void)setLoadingStatusManager:(id)arg1;
- (void)setNextRequestID:(long long)arg1;
- (void)setThumbnailRequestsByID:(id)arg1;
- (void)startCachingImagesForAssets:(id)arg1 targetSize:(struct CGSize { double x1; double x2; })arg2 contentMode:(long long)arg3 options:(id)arg4;
- (void)stopCachingImagesForAllAssets;
- (void)stopCachingImagesForAssets:(id)arg1 targetSize:(struct CGSize { double x1; double x2; })arg2 contentMode:(long long)arg3 options:(id)arg4;
- (id)thumbnailDataForAsset:(id)arg1 targetSize:(struct CGSize { double x1; double x2; })arg2 outDataSpec:(struct PXMediaProviderThumbnailDataSpec { struct PXMediaProviderThumbnailDataFormat { unsigned long long x_1_1_1; unsigned short x_1_1_2; unsigned short x_1_1_3; } x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; }*)arg3;
- (bool)thumbnailExistsForModel:(id)arg1;
- (bool)thumbnailExistsForModel:(id)arg1 atSize:(unsigned long long)arg2;
- (int)thumbnailImageFormat;
- (id)thumbnailRequestsByID;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

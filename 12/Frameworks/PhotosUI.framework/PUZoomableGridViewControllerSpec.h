<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUZoomableGridViewControllerSpec.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUZoomableGridViewControllerSpec.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUZoomableGridViewControllerSpec : NSObject {
    bool  _canDisplayMultipleRightBarButtonItems;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _collectionsLevelSectionHeaderHighlightInset;
    long long  _collectionsSectionHeaderStyle;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _fullMomentsLevelSectionHeaderHighlightInset;
    struct CGSize { 
        double width; 
        double height; 
    }  _fullMomentsLevelThumbnailSize;
    long long  _fullMomentsSectionHeaderStyle;
    PUPhotosGridViewControllerSpec * _gridSpec;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _magnifiedDragEdgeInsets;
    struct CGSize { 
        double width; 
        double height; 
    }  _magnifiedImageSize;
    double  _magnifiedYOffset;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    }  _yearsLevelSectionHeaderHighlightInset;
    long long  _yearsSectionHeaderStyle;
}

@property (nonatomic, readonly) bool canDisplayMultipleRightBarButtonItems;
@property (nonatomic, readonly) long long collectionsLevelCellFillMode;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } collectionsLevelSectionHeaderHighlightInset;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } collectionsLevelThumbnailSize;
@property (nonatomic, readonly) unsigned long long collectionsSectionHeaderBackgroundStyle;
@property (nonatomic, readonly) long long collectionsSectionHeaderStyle;
@property (nonatomic, readonly) long long fullMomentsLevelCellFillMode;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } fullMomentsLevelSectionHeaderHighlightInset;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } fullMomentsLevelThumbnailSize;
@property (nonatomic, readonly) unsigned long long fullMomentsSectionHeaderBackgroundStyle;
@property (nonatomic, readonly) long long fullMomentsSectionHeaderStyle;
@property (setter=_setGridSpec:, nonatomic, retain) PUPhotosGridViewControllerSpec *gridSpec;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } magnifiedDragEdgeInsets;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } magnifiedImageSize;
@property (nonatomic) double magnifiedYOffset;
@property (nonatomic, readonly) long long yearsLevelCellFillMode;
@property (nonatomic, readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } yearsLevelSectionHeaderHighlightInset;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } yearsLevelThumbnailSize;
@property (nonatomic, readonly) unsigned long long yearsSectionHeaderBackgroundStyle;
@property (nonatomic, readonly) long long yearsSectionHeaderStyle;

- (void).cxx_destruct;
- (void)_setGridSpec:(id)arg1;
- (bool)canDisplayMultipleRightBarButtonItems;
- (long long)collectionsLevelCellFillMode;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })collectionsLevelSectionHeaderHighlightInset;
- (struct CGSize { double x1; double x2; })collectionsLevelThumbnailSize;
- (unsigned long long)collectionsSectionHeaderBackgroundStyle;
- (long long)collectionsSectionHeaderStyle;
- (void)configureCollectionsLevelGridLayout:(id)arg1 forWidth:(double)arg2 safeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (void)configureFullMomentsLevelGridLayout:(id)arg1 forWidth:(double)arg2 safeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (void)configureYearsLevelGridLayout:(id)arg1 forWidth:(double)arg2 safeAreaInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg3;
- (bool)dynamicLayoutEnabled;
- (long long)fullMomentsLevelCellFillMode;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })fullMomentsLevelSectionHeaderHighlightInset;
- (struct CGSize { double x1; double x2; })fullMomentsLevelThumbnailSize;
- (unsigned long long)fullMomentsSectionHeaderBackgroundStyle;
- (long long)fullMomentsSectionHeaderStyle;
- (id)gridSpec;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })magnifiedDragEdgeInsets;
- (struct CGSize { double x1; double x2; })magnifiedImageSize;
- (double)magnifiedYOffset;
- (id)newGridSpec;
- (void)setMagnifiedDragEdgeInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setMagnifiedYOffset:(double)arg1;
- (long long)yearsLevelCellFillMode;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })yearsLevelSectionHeaderHighlightInset;
- (struct CGSize { double x1; double x2; })yearsLevelThumbnailSize;
- (unsigned long long)yearsSectionHeaderBackgroundStyle;
- (long long)yearsSectionHeaderStyle;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

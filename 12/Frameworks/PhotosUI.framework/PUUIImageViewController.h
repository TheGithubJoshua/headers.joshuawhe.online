<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUUIImageViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUUIImageViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUUIImageViewController : PLUIImageViewController <PUPhotoPickerSelectionHandler, PUPhotoPickerServicesConsumer, PUVideoPlayerViewDelegate, UIGestureRecognizerDelegate> {
    int  __animatedImageRequestID;
    ISAnimatedImageView * __animatedImageView;
    NSURL * __assetURL;
    PUVideoPlayerView * __autoloopView;
    int  __imageManagerVideoRequestID;
    PUBrowsingIrisPlayer * __irisPlayer;
    PHLivePhotoView * __livePhotoView;
    NSURL * __videoAssetURL;
    PHAsset * _asset;
    bool  _isAnimatedImage;
    bool  _isAutoloop;
    bool  _isIris;
    <PUPhotoPicker> * _photoPicker;
    bool  _wantsLivePhotoResult;
    bool  _wantsVideoURLResult;
}

@property (setter=_setAnimatedImageRequestID:) int _animatedImageRequestID;
@property (setter=_setAnimatedImageView:, nonatomic, retain) ISAnimatedImageView *_animatedImageView;
@property (setter=_setAssetURL:, nonatomic, retain) NSURL *_assetURL;
@property (setter=_setAutoloopView:, nonatomic, retain) PUVideoPlayerView *_autoloopView;
@property (setter=_setImageManagerVideoRequestID:) int _imageManagerVideoRequestID;
@property (nonatomic, retain) PUBrowsingIrisPlayer *_irisPlayer;
@property (setter=_setLivePhotoView:, nonatomic, retain) PHLivePhotoView *_livePhotoView;
@property (setter=_setVideoAssetURL:, nonatomic, retain) NSURL *_videoAssetURL;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) <PUPhotoPicker> *photoPicker;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (int)_animatedImageRequestID;
- (id)_animatedImageView;
- (id)_assetURL;
- (id)_autoloopView;
- (void)_fetchAnimatedImageWithCompletion:(id /* block */)arg1;
- (void)_fetchLivePhotoWithCompletion:(id /* block */)arg1;
- (void)_fetchPreviewImageWithCompletion:(id /* block */)arg1;
- (void)_fetchVideoWithCompletion:(id /* block */)arg1;
- (void)_finishAutoloopDeliveryWithVideoURL:(id)arg1 gifURL:(id)arg2;
- (void)_generateGIFFromVideoURL:(id)arg1 progressHandler:(id /* block */)arg2 completionHandler:(id /* block */)arg3;
- (void)_handleAnimatedImagePreviewResult:(id)arg1;
- (void)_handleAnimatedImageResult:(id)arg1;
- (void)_handleAutoloopPreviewImageResult:(id)arg1;
- (void)_handleAutoloopVideoResult:(id)arg1;
- (void)_handleLivePhotoRequestResult:(id)arg1 info:(id)arg2;
- (int)_imageManagerVideoRequestID;
- (id)_irisPlayer;
- (bool)_isPhotosPickerExtensionAvailable;
- (id)_livePhotoView;
- (void)_loadAnimatedImage;
- (void)_loadAutoloopVideo;
- (void)_loadLivePhoto;
- (void)_setAnimatedImageRequestID:(int)arg1;
- (void)_setAnimatedImageView:(id)arg1;
- (void)_setAssetURL:(id)arg1;
- (void)_setAutoloopView:(id)arg1;
- (void)_setImageManagerVideoRequestID:(int)arg1;
- (void)_setLivePhotoView:(id)arg1;
- (void)_setVideoAssetURL:(id)arg1;
- (id)_videoAssetURL;
- (id)chooseButtonTitle;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)didUpdateNavigationBarAppearance;
- (bool)disableVideoTrimMessage;
- (bool)doNotTranscode;
- (id)exportPreset;
- (bool)force1XCroppedImage;
- (bool)forceNativeScreenScale;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleAutoloopSelected;
- (void)handleMediaSelectionUsingTile:(id)arg1 managedAsset:(id)arg2 args:(id)arg3 includeEditing:(bool)arg4;
- (void)handleVideoSelectionWithURL:(id)arg1 args:(id)arg2;
- (bool)imagePickerAllowsEditing;
- (unsigned long long)imagePickerSavingOptions;
- (id)initWithPhoto:(id)arg1 imagePickerProperties:(id)arg2 expectsLivePhoto:(bool)arg3;
- (id)irisPlayerView:(id)arg1 delegateForGestureRecognizer:(id)arg2;
- (id)irisPlayerViewViewHostingGestureRecognizers:(id)arg1;
- (bool)isDisplayedInPhotoPicker;
- (void)loadView;
- (void)performPhotoPickerSelection;
- (id)photoPicker;
- (void)setIrisPlayer:(id)arg1;
- (void)setPhotoPicker:(id)arg1;
- (void)setPhotoPickerMediaTypes:(id)arg1;
- (void)set_irisPlayer:(id)arg1;
- (void)setupNavigationItem;
- (bool)uiipc_useTelephonyUI;
- (id)videoMaximumDuration;
- (void)videoPlayerView:(id)arg1 isReadyForDisplayDidChange:(bool)arg2;
- (id)videoQuality;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (bool)viewImageBeforeSelecting;
- (void)viewWillDisappear:(bool)arg1;
- (bool)wantsAutoloopUI;
- (bool)wantsLegacyImageUI;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUAlbumStreamActivity.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUAlbumStreamActivity.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUAlbumStreamActivity : PUActivity <PUPhotoStreamComposeServiceDelegate, PUVideoTrimQueueControllerDelegate> {
    UIViewController * _activityController;
    <PUAlbumStreamActivityDelegate> * _delegate;
    bool  _destinationAlbumWasCreated;
    NSObject<PLUserEditableAlbumProtocol> * _destinationStreamingAlbum;
    double  _endTime;
    bool  _isPresentedFromActivityViewController;
    PUActivityItemSourceController * _itemSourceController;
    UIViewController * _presenterViewController;
    UIViewController * _referenceViewController;
    double  _startTime;
    PUPhotoStreamComposeServiceViewController * _streamComposeVc;
    PUVideoTrimQueueController * _trimController;
}

@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PUAlbumStreamActivityDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property bool destinationAlbumWasCreated;
@property (nonatomic, retain) NSObject<PLUserEditableAlbumProtocol> *destinationStreamingAlbum;
@property (readonly) unsigned long long hash;
@property (setter=setPresentedFromActivityViewController:, nonatomic) bool isPresentedFromActivityViewController;
@property (nonatomic) UIViewController *referenceViewController;
@property (readonly) Class superclass;

+ (long long)activityCategory;

- (void).cxx_destruct;
- (id)_activityBundleImageConfiguration;
- (id)_activitySettingsBundleImageConfiguration;
- (void)_createStreamsPickerContainerWithExisting:(bool)arg1;
- (void)_handleDismissWithSuccess:(bool)arg1;
- (void)_performPresentationOnViewController:(id)arg1 completion:(id /* block */)arg2;
- (void)_prepareToPost:(id)arg1 albumName:(id)arg2 recipients:(id)arg3 comments:(id)arg4;
- (bool)_presentActivityOnViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (void)_publishAssets:(id)arg1 withSharingInfos:(id)arg2 andTrimmedVideoPathInfo:(id)arg3 toAlbum:(id)arg4 orCreateWithName:(id)arg5 comment:(id)arg6 invitationRecipients:(id)arg7 wantsPublicWebsite:(bool)arg8 completion:(id /* block */)arg9;
- (id)_selectedVideo;
- (bool)_sharedAlbumAllowsAdding:(struct NSObject { Class x1; }*)arg1;
- (id)activityTitle;
- (id)activityType;
- (id)activityViewController;
- (bool)canPerformWithActivityItems:(id)arg1;
- (void)controller:(id)arg1 didCancelTrimmingVideoSources:(id)arg2;
- (void)controller:(id)arg1 didFinishTrimmingVideoSources:(id)arg2;
- (id)delegate;
- (bool)destinationAlbumWasCreated;
- (id)destinationStreamingAlbum;
- (id)init;
- (bool)isPresentedFromActivityViewController;
- (id)itemSourceController;
- (void)photoStreamComposeService:(id)arg1 didPostComment:(id)arg2;
- (void)photoStreamComposeServiceDidCancel:(id)arg1;
- (void)prepareWithActivityItems:(id)arg1;
- (void)presentActivityOnViewController:(id)arg1 animated:(bool)arg2 completion:(id /* block */)arg3;
- (id)referenceViewController;
- (void)setDelegate:(id)arg1;
- (void)setDestinationAlbumWasCreated:(bool)arg1;
- (void)setDestinationStreamingAlbum:(id)arg1;
- (void)setItemSourceController:(id)arg1;
- (void)setPresentedFromActivityViewController:(bool)arg1;
- (void)setReferenceViewController:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

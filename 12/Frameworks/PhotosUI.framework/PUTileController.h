<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUTileController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUTileController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUTileController : NSObject {
    bool  _active;
    long long  _animationCount;
    bool  _detached;
    PUTileLayoutInfo * _layoutInfo;
    bool  _reusable;
    NSString * _reuseIdentifier;
    bool  _shouldPreserveCurrentContent;
    PUTilingView * _tilingView;
    bool  _wantsVisibleRectChanges;
}

@property (getter=isActive, nonatomic) bool active;
@property (nonatomic) long long animationCount;
@property (getter=isDetached, nonatomic) bool detached;
@property (nonatomic, readonly) bool isAnimating;
@property (nonatomic, readonly) bool isPresentationActive;
@property (nonatomic, readonly) PUTileLayoutInfo *layoutInfo;
@property (nonatomic, readonly) PUTileLayoutInfo *presentationLayoutInfo;
@property (getter=isReusable, nonatomic) bool reusable;
@property (nonatomic, readonly) NSString *reuseIdentifier;
@property (nonatomic, readonly) bool shouldAvoidInPlaceSnapshottedFadeOut;
@property (nonatomic) bool shouldPreserveCurrentContent;
@property (nonatomic, readonly) PUTilingView *tilingView;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } visibleRect;
@property (nonatomic, readonly) bool wantsVisibleRectChanges;

- (void).cxx_destruct;
- (void)addToTilingView:(id)arg1;
- (bool)adoptAssetTransitionInfo:(id)arg1;
- (long long)animationCount;
- (void)applyLayoutInfo:(id)arg1;
- (void)becomeReusable;
- (id)description;
- (void)didChangeActive;
- (void)didChangeAnimating;
- (void)didChangeVisibleRect;
- (void)didEndAnimation:(long long)arg1;
- (id)freeze;
- (id)generateAssetTransitionInfo;
- (id)init;
- (id)initWithReuseIdentifier:(id)arg1;
- (bool)isActive;
- (bool)isAnimating;
- (bool)isDetached;
- (bool)isPresentationActive;
- (bool)isReusable;
- (id)layoutInfo;
- (void)notifyWhenReadyForDisplayWithTimeOut:(double)arg1 completionHandler:(id /* block */)arg2;
- (void)prepareForReuse;
- (id)presentationLayoutInfo;
- (void)removeAllAnimations;
- (id)reuseIdentifier;
- (void)reuseIfApplicable;
- (void)setActive:(bool)arg1;
- (void)setAnimationCount:(long long)arg1;
- (void)setDetached:(bool)arg1;
- (void)setLayoutInfo:(id)arg1;
- (void)setPreloadedImage:(id)arg1;
- (void)setReusable:(bool)arg1;
- (void)setShouldPreserveCurrentContent:(bool)arg1;
- (void)setTilingView:(id)arg1;
- (bool)shouldAvoidInPlaceSnapshottedFadeOut;
- (bool)shouldPreserveCurrentContent;
- (id)tilingView;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleRect;
- (bool)wantsVisibleRectChanges;
- (long long)willBeginAnimation;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

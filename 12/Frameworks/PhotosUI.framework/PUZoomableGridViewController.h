<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUZoomableGridViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUZoomableGridViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUZoomableGridViewController : PUPhotosGridViewController <PUMagnfiedViewControllerDelegate, PXCPLServiceUIDelegate, PXCloudQuotaControllerDelegate, PXPhotosGlobalFooterViewModelPresentationDelegate> {
    NSIndexPath * __dynamicLayoutTransitionAnchorIndexPath;
    struct CGPoint { 
        double x; 
        double y; 
    }  __frozeMagnifierAtPosition;
    PUGridPinchGestureRecognizer * __gridPinchGestureRecognizer;
    bool  __hasAppearedOnce;
    double  __lastUpdateWidth;
    NSIndexPath * __lastZoomInTransitionAnchorIndexPath;
    unsigned long long  __magnifierState;
    NSArray * __syncProgressAlbums;
    UITapGestureRecognizer * __tapGestureRecognizer;
    NSIndexPath * __transitionExplicitAnchorIndexPath;
    PUGridZoomLevelInfo * __zoomLevelInfo;
    PXCloudQuotaController * _cloudQuotaController;
    PXCPLServiceUI * _cplServiceUI;
    PUZoomableGridTransition * _currentGridZoomTransitionInfo;
    NSTimer * _globalFooterAutoScrollMinimumIdleTimer;
    bool  _globalFooterDidAutoScroll;
    NSTimer * _globalFooterImportantInformationUpdatesTimer;
    bool  _iCPLEnabled;
    bool  _isDisplayingEmptyPlaceholderView;
    bool  _isDisplayingGlobalFooterView;
    PUGridMagnifiedImageViewController * _magnifiedImageViewController;
    bool  _simulateGlobalFooterImportantInformationUpdates;
    unsigned long long  _zoomLevel;
    PUMomentsZoomLevelManager * _zoomLevelManager;
    PUZoomableGridViewControllerSpec * _zoomableGridSpec;
}

@property (setter=_setDynamicLayoutTransitionAnchorIndexPath:, nonatomic, retain) NSIndexPath *_dynamicLayoutTransitionAnchorIndexPath;
@property (setter=_setFrozeMagnifierAtPosition:, nonatomic) struct CGPoint { double x1; double x2; } _frozeMagnifierAtPosition;
@property (setter=_setGridPinchGestureRecognizer:, nonatomic, retain) PUGridPinchGestureRecognizer *_gridPinchGestureRecognizer;
@property (setter=_setHasAppearedOnce:, nonatomic) bool _hasAppearedOnce;
@property (setter=_setLastUpdateWidth:, nonatomic) double _lastUpdateWidth;
@property (setter=_setLastZoomInTransitionAnchorIndexPath:, nonatomic, retain) NSIndexPath *_lastZoomInTransitionAnchorIndexPath;
@property (setter=_setMagnifierState:, nonatomic) unsigned long long _magnifierState;
@property (nonatomic, readonly) NSArray *_syncProgressAlbums;
@property (setter=_setTapGestureRecognizer:, nonatomic, retain) UITapGestureRecognizer *_tapGestureRecognizer;
@property (setter=_setTransitionExplicitAnchorIndexPath:, nonatomic, retain) NSIndexPath *_transitionExplicitAnchorIndexPath;
@property (nonatomic, readonly) PUGridZoomLevelInfo *_zoomLevelInfo;
@property (nonatomic, readonly) PUZoomableGridTransition *currentGridZoomTransitionInfo;
@property (setter=_setCurrentGridZoomTransitionInfo:, nonatomic, retain) PUZoomableGridTransition *currentGridZoomTransitionInfo;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (setter=_setMagnifiedImageViewController:, nonatomic, retain) PUGridMagnifiedImageViewController *magnifiedImageViewController;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long zoomLevel;
@property (nonatomic, readonly) PUMomentsZoomLevelManager *zoomLevelManager;
@property (nonatomic, retain) PUZoomableGridViewControllerSpec *zoomableGridSpec;

- (void).cxx_destruct;
- (void)_accountStoreDidChange:(id)arg1;
- (id)_beginInteractiveTransitionWithReferenceItemPath:(id)arg1 zoomingOut:(bool)arg2;
- (bool)_collectionView:(id)arg1 shouldApplyTransitionContentOffset:(struct CGPoint { double x1; double x2; })arg2 contentSize:(struct CGSize { double x1; double x2; })arg3;
- (void)_conditionallyRevealPhotosGlobalFooterView;
- (void)_conditionallyRevealPhotosGlobalFooterViewWithLastUserScrollTime:(double)arg1;
- (void)_configureGlobalFooterImportantInformationUpdatesTimer;
- (void)_configureMagnifiedImageViewController:(id)arg1 forIndexPath:(id)arg2 gestureLocationInWindow:(struct CGPoint { double x1; double x2; })arg3;
- (void)_didEndDisplayingGlobalFooterView;
- (bool)_disallowNavigationToHigherZoomLevel;
- (id)_dynamicLayoutTransitionAnchorIndexPath;
- (unsigned long long)_eventSourceFromZoomLevel:(unsigned long long)arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForItemAtIndexPath:(id)arg1;
- (struct CGPoint { double x1; double x2; })_frozeMagnifierAtPosition;
- (void)_globalFooterDidChange;
- (bool)_globalFooterHasImportantInformation;
- (void)_globalFooterHasImportantInformationDidChange;
- (id)_gridPinchGestureRecognizer;
- (void)_handleGridPinchGestureRecognizer:(id)arg1;
- (void)_handlePreviewGesture:(id)arg1;
- (void)_handleTapGesture:(id)arg1;
- (bool)_hasAppearedOnce;
- (id)_indexPathOfReferenceItemForLayoutTransitionInCollectionView:(id)arg1;
- (void)_invalidateSyncProgressAlbums;
- (id)_itemPathForLocationInGesture:(id)arg1;
- (double)_lastUpdateWidth;
- (id)_lastZoomInTransitionAnchorIndexPath;
- (unsigned long long)_magnifierState;
- (void)_needsCPLInformationDidChange;
- (void)_reclaimCollectionView;
- (void)_setCurrentGridZoomTransitionInfo:(id)arg1;
- (void)_setDynamicLayoutTransitionAnchorIndexPath:(id)arg1;
- (void)_setFrozeMagnifierAtPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)_setGridPinchGestureRecognizer:(id)arg1;
- (void)_setHasAppearedOnce:(bool)arg1;
- (void)_setLastUpdateWidth:(double)arg1;
- (void)_setLastZoomInTransitionAnchorIndexPath:(id)arg1;
- (void)_setMagnifiedImageViewController:(id)arg1;
- (void)_setMagnifierState:(unsigned long long)arg1;
- (void)_setTapGestureRecognizer:(id)arg1;
- (void)_setTransitionExplicitAnchorIndexPath:(id)arg1;
- (bool)_shouldRevealPhotosGlobalFooterView;
- (bool)_shouldShowCPLInformationInGlobalFooter;
- (id)_syncProgressAlbums;
- (id)_tapGestureRecognizer;
- (id)_transitionExplicitAnchorIndexPath;
- (void)_updateMagnifierWithGesture:(id)arg1;
- (void)_updateTransitionsIfNecessary;
- (id)_zoomLevelInfo;
- (bool)allowSlideshowButton;
- (void)animateRevealWithInteractionProgress:(id)arg1 forPreviewingAtLocation:(struct CGPoint { double x1; double x2; })arg2 inSourceView:(id)arg3 containerView:(id)arg4;
- (id)bestTransitionReferenceItemIndexPathOutIsFromLastTransition:(bool*)arg1 outIsExplicit:(bool*)arg2;
- (bool)canBeginStackCollapseTransition;
- (bool)canDisplayEditButton;
- (bool)canDragIn;
- (bool)canNavigateToPhotoInteractively:(bool)arg1;
- (double)cellAspectRatioHint;
- (long long)cellFillMode;
- (void)cloudQuotaController:(id)arg1 presentInformationBanner:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingSupplementaryView:(id)arg2 forElementOfKind:(id)arg3 atIndexPath:(id)arg4;
- (id)collectionView:(id)arg1 transitionLayoutForOldLayout:(id)arg2 newLayout:(id)arg3;
- (void)collectionView:(id)arg1 willDisplaySupplementaryView:(id)arg2 forElementKind:(id)arg3 atIndexPath:(id)arg4;
- (bool)collectionViewPointInSectionHeader:(struct CGPoint { double x1; double x2; })arg1;
- (void)configureGlobalFooterView:(id)arg1;
- (void)configureGridCell:(id)arg1 forItemAtIndexPath:(id)arg2;
- (void)configureSupplementaryView:(id)arg1 ofKind:(id)arg2 forIndexPath:(id)arg3;
- (struct CGPoint { double x1; double x2; })contentOffsetForPreheating;
- (struct CGSize { double x1; double x2; })contentSizeForPreheating;
- (id)currentGridZoomTransitionInfo;
- (unsigned long long)dateRangeFormatterPreset;
- (void)dealloc;
- (id)description;
- (void)didDismissPreviewViewController:(id)arg1 committing:(bool)arg2;
- (void)didEndDisplayingEmptyPlaceholderView;
- (void)didReceiveMemoryWarning;
- (bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)getEmptyPlaceholderViewTitle:(id*)arg1 message:(id*)arg2 buttonTitle:(id*)arg3 buttonAction:(id /* block */*)arg4;
- (void)getTitle:(out id*)arg1 prompt:(out id*)arg2 shouldHideBackButton:(out bool*)arg3 leftBarButtonItems:(out id*)arg4 rightBarButtonItems:(out id*)arg5;
- (void)gridSettings:(id)arg1 changedValueForKey:(id)arg2;
- (void)gridZoomTransitionDidFinish:(bool)arg1;
- (void)handleLongPressGesture:(id)arg1;
- (long long)imageDeliveryMode;
- (struct CGSize { double x1; double x2; })imageRequestItemSize;
- (id)imageWithSize:(struct CGSize { double x1; double x2; })arg1 forIndexPath:(id)arg2;
- (id)initWithSpec:(id)arg1 zoomLevelManager:(id)arg2 zoomLevel:(unsigned long long)arg3;
- (void)installGestureRecognizers;
- (void)interactionProgress:(id)arg1 didEnd:(bool)arg2;
- (void)interactionProgressDidUpdate:(id)arg1;
- (bool)isCurrentCollectionViewDataSource;
- (bool)isTransitionAutoAdjustContentOffsetEnabled;
- (id)magnifiedImageViewController;
- (id)magnifiedImageViewControllerCreatingIfNecessary:(bool)arg1;
- (void)navigateToLowerZoomLevelWithReferenceItemPath:(id)arg1;
- (id)newGridLayout;
- (void)oneUpPresentationHelper:(id)arg1 willPresentOneUpPreviewViewController:(id)arg2;
- (long long)oneUpPresentationOrigin;
- (void)ppt_navigateToPhotosDetailsAnimated:(bool)arg1;
- (void)preheatAssets;
- (void)prepareForTransitionToZoomableViewController:(id)arg1 anchorItemIndexPath:(id)arg2 anchorShiftsColumns:(bool)arg3 animated:(bool)arg4 interactive:(bool)arg5;
- (id)presentingViewControllerForCloudQuotaController:(id)arg1;
- (id)presentingViewControllerForViewModel:(id)arg1;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint { double x1; double x2; })arg2;
- (void)processDataSourceChange:(id)arg1;
- (bool)pu_shouldActAsTabRootViewController;
- (bool)px_isSnapBackDestination;
- (void)reclaimCollectionView;
- (bool)respondsToSelector:(SEL)arg1;
- (bool)scrollViewShouldScrollToTop:(id)arg1;
- (bool)serviceUI:(id)arg1 performAction:(long long)arg2;
- (void)serviceUI:(id)arg1 progressDidChange:(float)arg2;
- (void)serviceUI:(id)arg1 statusDidChange:(id)arg2;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setSelected:(bool)arg1 itemsAtIndexes:(id)arg2 inSection:(long long)arg3 animated:(bool)arg4;
- (void)setZoomableGridSpec:(id)arg1;
- (bool)shouldPerformAutomaticContentOffsetAdjustment;
- (bool)shouldPerformFullReloadForIncrementalDataSourceChange:(id)arg1;
- (bool)shouldPreventRevealInMomentAction;
- (void)tearDownMagnifiedImageViewController;
- (void)uninstallGestureRecognizers;
- (void)updateInterfaceForIncrementalDataSourceChanges:(id)arg1;
- (void)updateLayoutMetrics;
- (bool)updateSpec;
- (void)updateVisibleSectionHeadersAtIndexes:(id)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (bool)wantsGlobalFooter;
- (bool)wantsPlaceholderView;
- (void)willDisplayEmptyPlaceholderView;
- (void)willPresentPreviewViewController:(id)arg1 forLocation:(struct CGPoint { double x1; double x2; })arg2 inSourceView:(id)arg3;
- (unsigned long long)zoomLevel;
- (id)zoomLevelManager;
- (bool)zoomTransition:(id)arg1 getFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; }*)arg2 contentMode:(long long*)arg3 cropInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; }*)arg4 forPhotoToken:(id)arg5 operation:(long long)arg6;
- (id)zoomableGridSpec;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

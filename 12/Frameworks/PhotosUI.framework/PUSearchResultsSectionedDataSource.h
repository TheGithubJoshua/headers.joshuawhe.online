<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUSearchResultsSectionedDataSource.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUSearchResultsSectionedDataSource.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUSearchResultsSectionedDataSource : NSObject <PUSearchResultsValueDelegate, PUSearchTopAssetsResultChangeDelegate> {
    NSCalendar * _calendar;
    <PUSearchResultsSectionedDataSourceChangeObserver> * _changeObserver;
    PLSearchIndexDateFormatter * _dateFormatter;
    NSDateIntervalFormatter * _dateIntervalFormatter;
    NSDateComponents * _dateRangeFormattingComponents;
    _Atomic bool  _didMerge;
    PHFetchResult * _homePersons;
    bool  _ignorePastResults;
    unsigned long long  _maxGroupedResultsCount;
    PLPhotoLibrary * _photoLibrary;
    PSIQuery * _query;
    unsigned long long  _queryTag;
    NSObject<OS_dispatch_queue> * _queue;
    NSArray * _results;
    bool  _resultsReady;
    NSDictionary * _sceneAncestryInformation;
    PSIDatabase * _searchIndex;
    PLSearchProcessor * _searchProcessor;
    unsigned long long  _sectionFetchIndex;
    NSArray * _suggestions;
    unsigned long long  _uncommittedMaxGroupedResultsCount;
    NSArray * _uncommittedResults;
    NSArray * _uncommittedSuggestions;
    unsigned long long  _unprocessedSearchResultsCount;
    bool  _wordEmbeddingsRequested;
}

@property (nonatomic, retain) NSCalendar *calendar;
@property (nonatomic) <PUSearchResultsSectionedDataSourceChangeObserver> *changeObserver;
@property (nonatomic, retain) PLSearchIndexDateFormatter *dateFormatter;
@property (nonatomic, retain) NSDateIntervalFormatter *dateIntervalFormatter;
@property (nonatomic, retain) NSDateComponents *dateRangeFormattingComponents;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) NSDictionary *debugDictionary;
@property (readonly, copy) NSString *description;
@property (nonatomic) _Atomic bool didMerge;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) PHFetchResult *homePersons;
@property (nonatomic) bool ignorePastResults;
@property (nonatomic) unsigned long long maxGroupedResultsCount;
@property (nonatomic, retain) PLPhotoLibrary *photoLibrary;
@property (nonatomic, retain) PSIQuery *query;
@property (nonatomic) unsigned long long queryTag;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (nonatomic, retain) NSArray *results;
@property (nonatomic) bool resultsReady;
@property (retain) NSDictionary *sceneAncestryInformation;
@property (nonatomic, retain) PSIDatabase *searchIndex;
@property (nonatomic, retain) PLSearchProcessor *searchProcessor;
@property (nonatomic) unsigned long long sectionFetchIndex;
@property (nonatomic, retain) NSArray *suggestions;
@property (readonly) Class superclass;
@property (nonatomic) unsigned long long uncommittedMaxGroupedResultsCount;
@property (nonatomic, retain) NSArray *uncommittedResults;
@property (nonatomic, retain) NSArray *uncommittedSuggestions;
@property (nonatomic) unsigned long long unprocessedSearchResultsCount;
@property (nonatomic) bool wordEmbeddingsRequested;

+ (id)postQuerySearchResultsLog;

- (void).cxx_destruct;
- (void)_asyncFetchAssetsWithQueryTag:(unsigned long long)arg1;
- (id)_bestParentWordEmbeddingsWithWordEmbeddings:(id)arg1;
- (id)_fetchObjectsWithEntityName:(id)arg1 uuids:(id)arg2;
- (void)_inqBackgroundProcessAssetResults:(id)arg1 collectionResults:(id)arg2 tripResults:(id)arg3 topAssetsResult:(id)arg4 topCollectionResults:(id)arg5 withTag:(unsigned long long)arg6 searchString:(id)arg7 representedObjects:(id)arg8 maxSuggestionCount:(unsigned long long)arg9 priorityAssetUUID:(id)arg10;
- (void)_inqCancel;
- (id)_parentWordWithWord:(id)arg1;
- (bool)_shouldCancel:(unsigned long long)arg1;
- (id)_sortedWordEmbeddingsForCurrentQuery;
- (id)_wordEmbeddingSubstitutionsWantsSubstitutedString:(bool)arg1;
- (id)calendar;
- (void)cancel;
- (id)changeObserver;
- (void)collapseSection:(long long)arg1;
- (id)dateFormatter;
- (id)dateIntervalFormatter;
- (id)dateRangeFormattingComponents;
- (id)debugDescription;
- (id)debugDictionary;
- (void)didChangeThumbnailAssetsForSearchResult:(id)arg1;
- (bool)didMerge;
- (void)expandSection:(long long)arg1;
- (bool)hasPendingChanges;
- (id)homePersons;
- (bool)ignorePastResults;
- (id)initForUnitTests;
- (id)initWithSearchIndex:(id)arg1;
- (bool)isSectionExpandable:(long long)arg1;
- (bool)isSectionExpanded:(long long)arg1;
- (bool)isTopAssetsSection:(long long)arg1;
- (unsigned long long)maxGroupedResultsCount;
- (void)mergePendingChanges;
- (long long)numberOfSearchResultsInSection:(long long)arg1;
- (long long)numberOfSections;
- (id)photoLibrary;
- (id)query;
- (unsigned long long)queryTag;
- (id)queue;
- (id)results;
- (bool)resultsReady;
- (id)sceneAncestryInformation;
- (id)searchIndex;
- (bool)searchIsFinished:(id)arg1;
- (id)searchProcessor;
- (id)searchResultAtIndexPath:(id)arg1;
- (unsigned long long)sectionFetchIndex;
- (id)selectedWordEmbeddingTextAtIndex:(unsigned long long)arg1;
- (void)setCalendar:(id)arg1;
- (void)setChangeObserver:(id)arg1;
- (void)setDateFormatter:(id)arg1;
- (void)setDateIntervalFormatter:(id)arg1;
- (void)setDateRangeFormattingComponents:(id)arg1;
- (void)setDidMerge:(bool)arg1;
- (void)setHomePersons:(id)arg1;
- (void)setIgnorePastResults:(bool)arg1;
- (void)setMaxGroupedResultsCount:(unsigned long long)arg1;
- (void)setPhotoLibrary:(id)arg1;
- (void)setQuery:(id)arg1;
- (void)setQueryTag:(unsigned long long)arg1;
- (void)setQueue:(id)arg1;
- (void)setResults:(id)arg1;
- (void)setResultsReady:(bool)arg1;
- (void)setSceneAncestryInformation:(id)arg1;
- (void)setSearchIndex:(id)arg1;
- (void)setSearchProcessor:(id)arg1;
- (void)setSearchString:(id)arg1 representedObjects:(id)arg2 maxSuggestionCount:(unsigned long long)arg3 priorityAssetUUID:(id)arg4;
- (void)setSectionFetchIndex:(unsigned long long)arg1;
- (void)setSuggestions:(id)arg1;
- (void)setUncommittedMaxGroupedResultsCount:(unsigned long long)arg1;
- (void)setUncommittedResults:(id)arg1;
- (void)setUncommittedSuggestions:(id)arg1;
- (void)setUnprocessedSearchResultsCount:(unsigned long long)arg1;
- (void)setWordEmbeddingsRequested:(bool)arg1;
- (id)stringWithStartDate:(id)arg1 endDate:(id)arg2;
- (id)suggestions;
- (id)tapToRadarAttachments;
- (id)titleForHeaderInSection:(long long)arg1;
- (unsigned long long)uncommittedMaxGroupedResultsCount;
- (id)uncommittedResults;
- (id)uncommittedSuggestions;
- (unsigned long long)unprocessedSearchResultsCount;
- (id)wordEmbeddingSubstitutions;
- (bool)wordEmbeddingsRequested;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

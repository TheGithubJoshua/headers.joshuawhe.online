<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUPinchedTileTracker.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUPinchedTileTracker.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUPinchedTileTracker : PUInteractiveTileTracker {
    PUVelocityFilter * __angularVelocityFilter;
    PUVelocityFilter * __horizontalVelocityFilter;
    PUTileLayoutInfo * __initialLayoutInfo;
    PUChangeDirectionValueFilter * __pinchGestureRecognizerScaleDirectionValueFilter;
    double  __pinchProgress;
    PUPinchTracker * __pinchTracker;
    PUTileLayoutInfo * __targetLayoutInfo;
    PUVelocityFilter * __verticalVelocityFilter;
    struct { 
        bool respondsToInitialAspectRatioForTileWithLayoutInfo; 
        bool respondsToFinalLayoutInfoForTileWithLayoutInfo; 
    }  _delegateFlags;
    long long  _direction;
    UIPinchGestureRecognizer * _pinchGestureRecognizer;
}

@property (setter=_setAngularVelocityFilter:, nonatomic, retain) PUVelocityFilter *_angularVelocityFilter;
@property (setter=_setHorizontalVelocityFilter:, nonatomic, retain) PUVelocityFilter *_horizontalVelocityFilter;
@property (setter=_setInitialLayoutInfo:, nonatomic, retain) PUTileLayoutInfo *_initialLayoutInfo;
@property (setter=_setPinchGestureRecognizerScaleDirectionValueFilter:, nonatomic, retain) PUChangeDirectionValueFilter *_pinchGestureRecognizerScaleDirectionValueFilter;
@property (setter=_setPinchProgress:, nonatomic) double _pinchProgress;
@property (setter=_setPinchTracker:, nonatomic, retain) PUPinchTracker *_pinchTracker;
@property (setter=_setTargetLayoutInfo:, nonatomic, retain) PUTileLayoutInfo *_targetLayoutInfo;
@property (setter=_setVerticalVelocityFilter:, nonatomic, retain) PUVelocityFilter *_verticalVelocityFilter;
@property (nonatomic, readonly) long long direction;
@property (nonatomic, readonly) UIPinchGestureRecognizer *pinchGestureRecognizer;

- (void).cxx_destruct;
- (id)_angularVelocityFilter;
- (id)_horizontalVelocityFilter;
- (id)_initialLayoutInfo;
- (id)_pinchGestureRecognizerScaleDirectionValueFilter;
- (double)_pinchProgress;
- (id)_pinchTracker;
- (void)_setAngularVelocityFilter:(id)arg1;
- (void)_setHorizontalVelocityFilter:(id)arg1;
- (void)_setInitialLayoutInfo:(id)arg1;
- (void)_setPinchGestureRecognizerScaleDirectionValueFilter:(id)arg1;
- (void)_setPinchProgress:(double)arg1;
- (void)_setPinchTracker:(id)arg1;
- (void)_setTargetLayoutInfo:(id)arg1;
- (void)_setVerticalVelocityFilter:(id)arg1;
- (id)_targetLayoutInfo;
- (void)_updateTargetLayoutInfoIfNeeded;
- (id)_verticalVelocityFilter;
- (void)completeTracking;
- (void)configureTileReattachmentContext:(id)arg1;
- (long long)direction;
- (id)initWithPinchGestureRecognizer:(id)arg1 tilingView:(id)arg2 direction:(long long)arg3;
- (id)initWithTilingView:(id)arg1;
- (id)pinchGestureRecognizer;
- (void)setDelegate:(id)arg1;
- (void)startTileControllerTracking;
- (id)tileControllerToTrack;
- (void)updateGestureRecognizerTracking;
- (void)updateTileControllerTracking;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

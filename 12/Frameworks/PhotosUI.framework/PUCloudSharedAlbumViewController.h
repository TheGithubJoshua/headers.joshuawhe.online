<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUCloudSharedAlbumViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUCloudSharedAlbumViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUCloudSharedAlbumViewController : PUPhotosAlbumViewController <PLAlbumStreamingOptionsViewControllerDelegate, PUPhotoStreamComposeServiceDelegate, PUVideoTrimQueueControllerDelegate, UIPopoverPresentationControllerDelegate> {
    bool  __canContributeToCloudSharedAlbum;
    UIBarButtonItem * __optionsBarButtonItem;
    UIBarButtonItem * __optionsBarButtonSpacerItem;
    UIViewController * __optionsPopoverRootViewController;
    UIViewController * __optionsViewController;
    long long  __selectedItemIndex;
    UIBarButtonItem * __switcherBarButtonItem;
    UISegmentedControl * __switcherSegmentedControl;
    NSArray * __transitioningOptionsViewControllers;
    PUPhotosPickerViewController * _activePhotosPickerViewController;
    PUPhotoStreamComposeServiceViewController * _composeServiceController;
    <PUCloudSharedAlbumViewControllerDelegate> * _delegate;
    bool  _displayingOptions;
    PUVideoTrimQueueController * _trimController;
}

@property (setter=_setCanContributeToCloudSharedAlbum:, nonatomic) bool _canContributeToCloudSharedAlbum;
@property (setter=_setOptionsBarButtonItem:, nonatomic, retain) UIBarButtonItem *_optionsBarButtonItem;
@property (setter=_setOptionsBarButtonSpacerItem:, nonatomic, retain) UIBarButtonItem *_optionsBarButtonSpacerItem;
@property (setter=_setOptionsPopoverRootViewController:, nonatomic, retain) UIViewController *_optionsPopoverRootViewController;
@property (setter=_setOptionsViewController:, nonatomic, retain) UIViewController *_optionsViewController;
@property (setter=_setSelectedItemIndex:, nonatomic) long long _selectedItemIndex;
@property (setter=_setSwitcherBarButtonItem:, nonatomic, retain) UIBarButtonItem *_switcherBarButtonItem;
@property (setter=_setSwitcherSegmentedControl:, nonatomic, retain) UISegmentedControl *_switcherSegmentedControl;
@property (setter=_setTransitioningOptionsViewControllers:, nonatomic, retain) NSArray *_transitioningOptionsViewControllers;
@property (nonatomic, retain) PLCloudSharedAlbum *album;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PUCloudSharedAlbumViewControllerDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isDisplayingOptions, setter=setDisplayingOptions:, nonatomic) bool displayingOptions;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (bool)_appAllowsSupressionOfAlerts;
- (bool)_canContributeToCloudSharedAlbum;
- (bool)_canDisplayOptions;
- (void)_collectionView:(id)arg1 performDropWithCoordinator:(id)arg2;
- (void)_dismissOptionsPopoverAnimated:(bool)arg1;
- (void)_handleSwitcherSegmentedControl:(id)arg1;
- (id)_newOptionsViewController;
- (id)_optionsBarButtonItem;
- (void)_optionsBarButtonItemPressed:(id)arg1;
- (id)_optionsBarButtonSpacerItem;
- (id)_optionsPopoverRootViewController;
- (id)_optionsViewController;
- (void)_presentOptionsPopoverFromBarButtonItem:(id)arg1;
- (long long)_selectedItemIndex;
- (void)_setCanContributeToCloudSharedAlbum:(bool)arg1;
- (void)_setOptionsBarButtonItem:(id)arg1;
- (void)_setOptionsBarButtonSpacerItem:(id)arg1;
- (void)_setOptionsPopoverRootViewController:(id)arg1;
- (void)_setOptionsViewController:(id)arg1;
- (void)_setSelectedItemIndex:(long long)arg1;
- (void)_setSwitcherBarButtonItem:(id)arg1;
- (void)_setSwitcherSegmentedControl:(id)arg1;
- (void)_setTransitioningOptionsViewControllers:(id)arg1;
- (bool)_shouldShowOptionsSwitcherInToolbar;
- (id)_suppressionContexts;
- (id)_switcherBarButtonItem;
- (id)_switcherSegmentedControl;
- (id)_transitioningOptionsViewControllers;
- (void)_updateOptionsView;
- (void)_updateOptionsViewInsets;
- (void)albumStreamingOptionsViewController:(id)arg1 didCompleteWithReason:(int)arg2;
- (bool)canAddToOtherAlbumContent;
- (bool)canDeleteContent;
- (void)controller:(id)arg1 didCancelTrimmingVideoSources:(id)arg2;
- (void)controller:(id)arg1 didFinishTrimmingVideoSources:(id)arg2;
- (id)delegate;
- (void)didSelectAddPlaceholderInSection:(long long)arg1;
- (void)getTitle:(out id*)arg1 prompt:(out id*)arg2 shouldHideBackButton:(out bool*)arg3 leftBarButtonItems:(out id*)arg4 rightBarButtonItems:(out id*)arg5;
- (id)globalFooterSubtitle;
- (void)handleAddToAlbum:(id)arg1 pickedAssets:(id)arg2;
- (bool)isDisplayingOptions;
- (id)newToolbarItems;
- (void)photoStreamComposeService:(id)arg1 didPostComment:(id)arg2;
- (void)photoStreamComposeServiceDidCancel:(id)arg1;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (bool)prepareForDismissingForced:(bool)arg1;
- (void)setAlbum:(struct NSObject { Class x1; }*)arg1 existingFetchResult:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setDisplayingOptions:(bool)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (bool)shouldShowTabBar;
- (bool)shouldShowToolbar;
- (void)updatePeripheralInterfaceAnimated:(bool)arg1;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillDisappear:(bool)arg1;
- (bool)wantsAddContentInToolbar;
- (bool)wantsAddPlaceholderAtEndOfSection:(long long)arg1;
- (bool)wantsGlobalFooter;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

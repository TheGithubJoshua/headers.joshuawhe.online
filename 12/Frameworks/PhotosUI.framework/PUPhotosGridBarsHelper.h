<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUPhotosGridBarsHelper.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUPhotosGridBarsHelper.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUPhotosGridBarsHelper : NSObject <PUPhotoSelectionManagerChangeObserver> {
    bool  __hadSelectionOnLastUpdate;
    PUPhotoSelectionManager * __photoSelectionManager;
    NSObject<OS_dispatch_queue> * __queue;
    bool  __shouldUpdateBarItemsLazily;
    bool  __shouldUpdateItemsWithCount;
    bool  __updatingItemsWithCount;
    <PUPhotosGridBarsHelperDelegate> * _delegate;
    bool  _isPerformingUpdates;
    NSArray * _leftBarButtonItems;
    struct { 
        bool photoSelectionManager; 
        bool shouldUpdateBarItemsLazily; 
        bool barItems; 
    }  _needsUpdateFlags;
    NSString * _prompt;
    NSArray * _rightBarButtonItems;
    bool  _shouldHideBackButton;
    bool  _swipeSelecting;
    NSString * _title;
}

@property (setter=_setHadSelectionOnLastUpdate:, nonatomic) bool _hadSelectionOnLastUpdate;
@property (setter=_setPhotoSelectionManager:, nonatomic, retain) PUPhotoSelectionManager *_photoSelectionManager;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *_queue;
@property (setter=_setShouldUpdateBarItemsLazily:, nonatomic) bool _shouldUpdateBarItemsLazily;
@property (setter=_setShouldUpdateItemsWithCount:, nonatomic) bool _shouldUpdateItemsWithCount;
@property (getter=_isUpdatingItemsWithCount, setter=_setUpdatingItemsWithCount:, nonatomic) bool _updatingItemsWithCount;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PUPhotosGridBarsHelperDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (setter=_setLeftBarButtonItems:, nonatomic, retain) NSArray *leftBarButtonItems;
@property (setter=_setPrompt:, nonatomic, retain) NSString *prompt;
@property (setter=_setRightBarButtonItems:, nonatomic, retain) NSArray *rightBarButtonItems;
@property (setter=_setShouldHideBackButton:, nonatomic) bool shouldHideBackButton;
@property (readonly) Class superclass;
@property (getter=isSwipeSelecting, nonatomic) bool swipeSelecting;
@property (setter=_setTitle:, nonatomic, retain) NSString *title;

- (void).cxx_destruct;
- (bool)_hadSelectionOnLastUpdate;
- (void)_handleItemsWithCountUpdateWithTitle:(id)arg1 shouldReloadAllItems:(bool)arg2;
- (void)_invalidateBarItems;
- (void)_invalidatePhotoSelectionManager;
- (void)_invalidateShouldUpdateBarItemsLazily;
- (bool)_isUpdatingItemsWithCount;
- (bool)_needsUpdate;
- (void)_notifyBarItemsDidChange;
- (id)_photoSelectionManager;
- (id)_queue;
- (void)_setHadSelectionOnLastUpdate:(bool)arg1;
- (void)_setLeftBarButtonItems:(id)arg1;
- (void)_setNeedsUpdate;
- (void)_setPhotoSelectionManager:(id)arg1;
- (void)_setPrompt:(id)arg1;
- (void)_setRightBarButtonItems:(id)arg1;
- (void)_setShouldHideBackButton:(bool)arg1;
- (void)_setShouldUpdateBarItemsLazily:(bool)arg1;
- (void)_setShouldUpdateItemsWithCount:(bool)arg1;
- (void)_setTitle:(id)arg1;
- (void)_setUpdatingItemsWithCount:(bool)arg1;
- (bool)_shouldUpdateBarItemsLazily;
- (bool)_shouldUpdateItemsWithCount;
- (void)_startUpdatingItemsWithCountIfNeeded;
- (void)_stopUpdatingItemsWithCount;
- (void)_updateAllBarItems;
- (void)_updateBarItemsIfNeeded;
- (void)_updateIfNeeded;
- (void)_updateItemsWithCountInBackgroundWithDelegate:(id)arg1 photoSelectionManagerSnapshot:(id)arg2;
- (void)_updatePhotoSelectionManagerIfNeeded;
- (void)_updateShouldUpdateBarItemsLazilyIfNeeded;
- (id)delegate;
- (id)init;
- (void)invalidateNavigationBarItems;
- (bool)isSwipeSelecting;
- (id)leftBarButtonItems;
- (void)photoSelectionManagerSelectionDidChange:(id)arg1;
- (id)prompt;
- (id)rightBarButtonItems;
- (void)setDelegate:(id)arg1;
- (void)setSwipeSelecting:(bool)arg1;
- (bool)shouldHideBackButton;
- (id)title;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

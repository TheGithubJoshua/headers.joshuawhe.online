<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUImportPPTDriver.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUImportPPTDriver.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUImportPPTDriver : NSObject <PUImportActionCoordinatorDelegate, PUImportAssetsDataSourceManagerObserver, PUImportMediaProviderNotificationsReceiver> {
    PUImportActionCoordinator * _actionCoordinator;
    PUImportPPTImportSource * _currentImportSource;
    PUImportAssetsDataSourceManager * _dataSourceManager;
    double  _endTime;
    NSMutableDictionary * _extraResults;
    bool  _hasSeenAbsolulteLastThumbnailMarker;
    bool  _importComplete;
    PUImportController * _importController;
    NSObject<OS_dispatch_semaphore> * _importSemaphore;
    id /* block */  _importToLibraryTestReply;
    id /* block */  _insertDatasourceReply;
    long long  _iteration;
    bool  _loadingContentStarted;
    PUImportMediaProvider * _mediaProvider;
    NSDictionary * _options;
    double  _startTime;
    PUTabbedLibraryViewController * _tabbedLibraryViewController;
    NSDictionary * _testOptions;
    id /* block */  _thumbnailTestReply;
}

@property (nonatomic, readonly) NSDictionary *additionalResults;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (retain) NSDictionary *options;
@property (readonly) Class superclass;
@property PUTabbedLibraryViewController *tabbedLibraryViewController;
@property (copy) NSDictionary *testOptions;

+ (id)sharedInstance;

- (void).cxx_destruct;
- (double)_contentLoadingCheckInterval;
- (void)_removeCurrentImportSourceIfNecessary;
- (void)_updateLoadingContentState;
- (void)actionCoordinator:(id)arg1 didCompleteWithImportSession:(id)arg2 results:(id)arg3;
- (void)actionCoordinatorDidBeginDelete:(id)arg1;
- (void)actionCoordinatorDidBeginImport:(id)arg1;
- (void)actionCoordinatorDidCancelImport:(id)arg1;
- (void)actionCoordinatorDidEndDelete:(id)arg1;
- (void)actionCoordinatorWillBeginDelete:(id)arg1;
- (void)actionCoordinatorWillBeginImport:(id)arg1;
- (id)additionalResults;
- (id)importController;
- (id)importDestinationForActionCoordinator:(id)arg1;
- (id)importViewController;
- (id)init;
- (id)mediaProvider;
- (id)modelBatchesForOptions:(id)arg1;
- (void)observable:(id)arg1 didChange:(unsigned long long)arg2 context:(void*)arg3;
- (id)options;
- (void)ppt_insertImportDataSourceWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)ppt_mediaProviderDidProcessAsset:(id)arg1;
- (void)ppt_performDeleteWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)ppt_performImportToLibraryWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)ppt_performThumbnailWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)ppt_removeImportDataSourceWithOptions:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setOptions:(id)arg1;
- (void)setTabbedLibraryViewController:(id)arg1;
- (void)setTestOptions:(id)arg1;
- (void)signalImportToLibraryTestReply:(bool)arg1;
- (void)signalInsertDatasourceReply:(bool)arg1;
- (void)signalThumbnailTestReply:(bool)arg1;
- (id)tabbedLibraryViewController;
- (id)testOptions;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

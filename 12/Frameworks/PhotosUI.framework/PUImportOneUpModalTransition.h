<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUImportOneUpModalTransition.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUImportOneUpModalTransition.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUImportOneUpModalTransition : NSObject {
    long long  _activeGesture;
    <UIViewControllerContextTransitioning> * _context;
    NSArray * _floatingItems;
    UIViewPropertyAnimator * _floatingItemsAnimator;
    PUImportOneUpTransitionItem * _manipulatedFloatingItem;
    long long  _operation;
    UIPanGestureRecognizer * _panGestureRecognizer;
    PUPhotoPinchGestureRecognizer * _pinchGestureRecognizer;
    PXPinchTracker * _pinchTracker;
    double  _startingAnimationProgress;
    PXSwipeDownTracker * _swipeDownTracker;
    UIViewPropertyAnimator * _transitionAnimator;
}

@property (nonatomic) long long activeGesture;
@property (nonatomic, retain) <UIViewControllerContextTransitioning> *context;
@property (nonatomic, retain) NSArray *floatingItems;
@property (nonatomic, retain) UIViewPropertyAnimator *floatingItemsAnimator;
@property (nonatomic, retain) PUImportOneUpTransitionItem *manipulatedFloatingItem;
@property (nonatomic, readonly) long long operation;
@property (nonatomic, readonly) UIPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic, readonly) PUPhotoPinchGestureRecognizer *pinchGestureRecognizer;
@property (nonatomic, readonly) PXPinchTracker *pinchTracker;
@property (nonatomic) double startingAnimationProgress;
@property (nonatomic, readonly) PXSwipeDownTracker *swipeDownTracker;
@property (nonatomic, retain) UIViewPropertyAnimator *transitionAnimator;

+ (double)defaultAnimationDurationForOperation:(long long)arg1;
+ (id)propertyAnimatorWithInitialVelocity:(struct CGVector { double x1; double x2; })arg1 forOperation:(long long)arg2 inDirection:(long long)arg3;
+ (struct CGSize { double x1; double x2; })scaledSizeForTargetSize:(struct CGSize { double x1; double x2; })arg1 aspectFillingIntoSize:(struct CGSize { double x1; double x2; })arg2;
+ (id)transitioningObjectInViewController:(id)arg1;

- (void).cxx_destruct;
- (long long)activeGesture;
- (void)animateToPosition:(long long)arg1;
- (long long)animatingPositionForPinchTracker:(id)arg1;
- (long long)animatingPositionForSwipeDownTracker:(id)arg1;
- (void)configureFloatingItemForInteractiveTracking;
- (id)context;
- (bool)continuousGestureRecognizerIsActive:(id)arg1;
- (double)currentProgressForFloatingItem:(id)arg1 atSize:(struct CGSize { double x1; double x2; })arg2 inDirection:(long long)arg3;
- (void)endInteraction;
- (id)floatingItems;
- (id)floatingItemsAnimator;
- (void)handleTapHoldGesture:(id)arg1;
- (void)handleTransitionComplete:(long long)arg1;
- (id)initWithOperation:(long long)arg1 transitionContext:(id)arg2 pinchGestureRecognizer:(id)arg3 panGestureRecognizer:(id)arg4 startsInteractive:(bool)arg5;
- (id)manipulatedFloatingItem;
- (long long)operation;
- (id)panGestureRecognizer;
- (void)pauseAnimation;
- (id)pinchGestureRecognizer;
- (id)pinchTracker;
- (void)prepareFloatingItemsForAnimation;
- (void)setActiveGesture:(long long)arg1;
- (void)setContext:(id)arg1;
- (void)setFloatingItems:(id)arg1;
- (void)setFloatingItemsAnimator:(id)arg1;
- (void)setManipulatedFloatingItem:(id)arg1;
- (void)setStartingAnimationProgress:(double)arg1;
- (void)setTransitionAnimator:(id)arg1;
- (void)startTransition;
- (double)startingAnimationProgress;
- (id)swipeDownTracker;
- (id)transitionAnimator;
- (struct CGVector { double x1; double x2; })unitVelocityForDisplayVelocity:(struct PXDisplayVelocity { double x1; double x2; double x3; double x4; })arg1;
- (void)updateTransitionWithPanGestureRecognizer:(id)arg1;
- (void)updateTransitionWithPinchGestureRecognizer:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

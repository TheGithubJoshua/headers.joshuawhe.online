<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUStackedAlbumTransition.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUStackedAlbumTransition.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUStackedAlbumTransition : PUNavigationTransition <PUCollectionViewLayoutTransitioningDelegate, PUTransitionViewAnimatorDelegate> {
    id  __disableToken;
    PUStackedAlbumTransitionLayout * __interactiveTransitionLayout;
    PUPhotoPinchGestureRecognizer * __photoPinchGestureRecognizer;
    PUStackedAlbumLayout * __transitionLayout;
    PUTransitionViewAnimator * __transitionViewAnimator;
    UIView * _animatorView;
    <PUStackedAlbumTransitionDelegate> * _delegate;
    bool  _didAnimateRoundedCorners;
    bool  _forFolder;
    struct CGPoint { 
        double x; 
        double y; 
    }  _interactionCenter;
    bool  _isExpanding;
    bool  _isForStandInAlbum;
    PHCollection * _ph_photoCollection;
    <PLAssetContainer> * _photoCollection;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _popTransitionInitialVisibleBounds;
    NSSet * _popTransitionInitialVisibleStackedAssetIndexPaths;
}

@property (setter=_setDisableToken:, nonatomic, retain) id _disableToken;
@property (setter=_setInteractiveTransitionLayout:, nonatomic, retain) PUStackedAlbumTransitionLayout *_interactiveTransitionLayout;
@property (setter=_setPhotoPinchGestureRecognizer:, nonatomic, retain) PUPhotoPinchGestureRecognizer *_photoPinchGestureRecognizer;
@property (setter=_setTransitionLayout:, nonatomic) PUStackedAlbumLayout *_transitionLayout;
@property (setter=_setTransitionViewAnimator:, nonatomic, retain) PUTransitionViewAnimator *_transitionViewAnimator;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PUStackedAlbumTransitionDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (getter=isForFolder, nonatomic) bool forFolder;
@property (nonatomic, readonly) UIViewController<PUStackedAlbumControllerTransition> *fromViewController;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGPoint { double x1; double x2; } interactionCenter;
@property (setter=_setExpanding:, nonatomic) bool isExpanding;
@property (setter=setForStandInAlbum:, nonatomic) bool isForStandInAlbum;
@property (setter=ph_setPhotoCollection:, nonatomic, retain) PHCollection *ph_photoCollection;
@property (nonatomic, retain) <PLAssetContainer> *photoCollection;
@property (readonly) Class superclass;
@property (nonatomic, readonly) UIViewController<PUStackedAlbumControllerTransition> *toViewController;

- (void).cxx_destruct;
- (id)_disableToken;
- (id)_interactiveTransitionLayout;
- (id)_newInteractiveTransitionViewAnimatorForLayout:(id)arg1 collectionView:(id)arg2;
- (id)_newTransitionLayoutWithStackedAlbumLayout:(id)arg1 otherLayout:(id)arg2 forPush:(bool)arg3;
- (id)_photoPinchGestureRecognizer;
- (id)_popTransitionInitialVisibleStackedAssetIndexPaths:(id)arg1;
- (void)_setDisableToken:(id)arg1;
- (void)_setExpanding:(bool)arg1;
- (void)_setInteractiveTransitionLayout:(id)arg1;
- (void)_setPhotoPinchGestureRecognizer:(id)arg1;
- (void)_setTransitionLayout:(id)arg1;
- (void)_setTransitionViewAnimator:(id)arg1;
- (id)_transitionLayout;
- (id)_transitionViewAnimator;
- (void)animatePopTransition;
- (void)animatePushTransition;
- (void)collectionViewLayout:(id)arg1 willSupplyLayoutAttributes:(id)arg2;
- (bool)collectionViewLayoutShouldProvideCustomAnimations:(id)arg1;
- (void)completeInteractiveOperation:(long long)arg1 finished:(bool)arg2;
- (id)delegate;
- (id)init;
- (struct CGPoint { double x1; double x2; })interactionCenter;
- (bool)isExpanding;
- (bool)isForFolder;
- (bool)isForStandInAlbum;
- (id)ph_photoCollection;
- (void)ph_setPhotoCollection:(id)arg1;
- (id)photoCollection;
- (void)setDelegate:(id)arg1;
- (void)setForFolder:(bool)arg1;
- (void)setForStandInAlbum:(bool)arg1;
- (void)setInteractionCenter:(struct CGPoint { double x1; double x2; })arg1;
- (void)setPhotoCollection:(id)arg1;
- (void)startInteractiveTransitionWithPhotoPinchGestureRecognizer:(id)arg1 isExpanding:(bool)arg2;
- (void)transitionViewAnimatorDidEnd:(id)arg1 finished:(bool)arg2;
- (void)transitionViewAnimatorDidUpdate:(id)arg1;
- (void)transitionViewAnimatorWillEnd:(id)arg1 withTargetTranslation:(inout struct CGPoint { double x1; double x2; }*)arg2;
- (void)updateInteractiveTransitionWithPhotoPinchGestureRecognizer:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUFeedSettings.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUFeedSettings.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUFeedSettings : PXSettings {
    bool  _allowsInfiniteScrolling;
    double  _fastScrollPreheatingWindowSize;
    long long  _feedContent;
    bool  _forceAllItemsAsVideo;
    bool  _forceDefaultPreheatManager;
    bool  _forceLivePhotoBadges;
    bool  _ignoresCaptions;
    long long  _infiniteScrollingWindowSizeIncrement;
    long long  _initialWindowSize;
    bool  _loopsEnabled;
    long long  _maximumScrollRegimeForQualityImageFormats;
    double  _mediumScrollPreheatingWindowSize;
    bool  _parallaxEnabled;
    double  _parallaxFactor;
    long long  _parallaxModel;
    double  _preheatingMinimumScrollFactor;
    bool  _shouldPreheatAssets;
    bool  _shouldPreheatComments;
    bool  _shouldPreheatCoreData;
    bool  _shouldUseJPEGFastFormatForLargeTiles;
    bool  _shouldUseJPEGFastFormatForMediumTiles;
    bool  _showGroupIDHeaders;
    bool  _simulateSharedStreamsEnabled;
    double  _slowScrollPreheatingWindowSize;
    double  _smallTileSizeTolerance;
    double  _speedometerFastLowerThreshold;
    double  _speedometerFastUpperThreshold;
    double  _speedometerMediumLowerThreshold;
    double  _speedometerMediumUpperThreshold;
    long long  _testInitialWindowSize;
    bool  _useJPEGImageFormats;
    bool  _useQualityImageFormats;
    bool  _useSpeedometerFeedback;
    bool  _vitalityEnabled;
}

@property (nonatomic) bool allowsInfiniteScrolling;
@property (nonatomic) double fastScrollPreheatingWindowSize;
@property (nonatomic) long long feedContent;
@property (nonatomic) bool forceAllItemsAsVideo;
@property (nonatomic) bool forceDefaultPreheatManager;
@property (nonatomic) bool forceLivePhotoBadges;
@property (nonatomic) bool ignoresCaptions;
@property (nonatomic) long long infiniteScrollingWindowSizeIncrement;
@property (nonatomic) long long initialWindowSize;
@property (nonatomic) bool loopsEnabled;
@property (nonatomic) long long maximumScrollRegimeForQualityImageFormats;
@property (nonatomic) double mediumScrollPreheatingWindowSize;
@property (nonatomic) bool parallaxEnabled;
@property (nonatomic) double parallaxFactor;
@property (nonatomic) long long parallaxModel;
@property (nonatomic) double preheatingMinimumScrollFactor;
@property (nonatomic) bool shouldPreheatAssets;
@property (nonatomic) bool shouldPreheatComments;
@property (nonatomic) bool shouldPreheatCoreData;
@property (nonatomic) bool shouldUseJPEGFastFormatForLargeTiles;
@property (nonatomic) bool shouldUseJPEGFastFormatForMediumTiles;
@property (nonatomic) bool showGroupIDHeaders;
@property (nonatomic) bool simulateSharedStreamsEnabled;
@property (nonatomic) double slowScrollPreheatingWindowSize;
@property (nonatomic) double smallTileSizeTolerance;
@property (nonatomic) double speedometerFastLowerThreshold;
@property (nonatomic) double speedometerFastUpperThreshold;
@property (nonatomic) double speedometerMediumLowerThreshold;
@property (nonatomic) double speedometerMediumUpperThreshold;
@property (nonatomic) long long testInitialWindowSize;
@property (nonatomic) bool useJPEGImageFormats;
@property (nonatomic) bool useQualityImageFormats;
@property (nonatomic) bool useSpeedometerFeedback;
@property (nonatomic) bool vitalityEnabled;

+ (id)_localizedStrings;
+ (id)settingsControllerModule;
+ (id)sharedInstance;

- (bool)allowsInfiniteScrolling;
- (double)fastScrollPreheatingWindowSize;
- (long long)feedContent;
- (bool)forceAllItemsAsVideo;
- (bool)forceDefaultPreheatManager;
- (bool)forceLivePhotoBadges;
- (bool)ignoresCaptions;
- (long long)infiniteScrollingWindowSizeIncrement;
- (long long)initialWindowSize;
- (bool)loopsEnabled;
- (long long)maximumScrollRegimeForQualityImageFormats;
- (double)mediumScrollPreheatingWindowSize;
- (bool)parallaxEnabled;
- (double)parallaxFactor;
- (long long)parallaxModel;
- (id)parentSettings;
- (double)preheatingMinimumScrollFactor;
- (void)setAllowsInfiniteScrolling:(bool)arg1;
- (void)setDefaultValues;
- (void)setFastScrollPreheatingWindowSize:(double)arg1;
- (void)setFeedContent:(long long)arg1;
- (void)setForceAllItemsAsVideo:(bool)arg1;
- (void)setForceDefaultPreheatManager:(bool)arg1;
- (void)setForceLivePhotoBadges:(bool)arg1;
- (void)setIgnoresCaptions:(bool)arg1;
- (void)setInfiniteScrollingWindowSizeIncrement:(long long)arg1;
- (void)setInitialWindowSize:(long long)arg1;
- (void)setLoopsEnabled:(bool)arg1;
- (void)setMaximumScrollRegimeForQualityImageFormats:(long long)arg1;
- (void)setMediumScrollPreheatingWindowSize:(double)arg1;
- (void)setParallaxEnabled:(bool)arg1;
- (void)setParallaxFactor:(double)arg1;
- (void)setParallaxModel:(long long)arg1;
- (void)setPreheatingMinimumScrollFactor:(double)arg1;
- (void)setShouldPreheatAssets:(bool)arg1;
- (void)setShouldPreheatComments:(bool)arg1;
- (void)setShouldPreheatCoreData:(bool)arg1;
- (void)setShouldUseJPEGFastFormatForLargeTiles:(bool)arg1;
- (void)setShouldUseJPEGFastFormatForMediumTiles:(bool)arg1;
- (void)setShowGroupIDHeaders:(bool)arg1;
- (void)setSimulateSharedStreamsEnabled:(bool)arg1;
- (void)setSlowScrollPreheatingWindowSize:(double)arg1;
- (void)setSmallTileSizeTolerance:(double)arg1;
- (void)setSpeedometerFastLowerThreshold:(double)arg1;
- (void)setSpeedometerFastUpperThreshold:(double)arg1;
- (void)setSpeedometerMediumLowerThreshold:(double)arg1;
- (void)setSpeedometerMediumUpperThreshold:(double)arg1;
- (void)setTestInitialWindowSize:(long long)arg1;
- (void)setUseJPEGImageFormats:(bool)arg1;
- (void)setUseQualityImageFormats:(bool)arg1;
- (void)setUseSpeedometerFeedback:(bool)arg1;
- (void)setVitalityEnabled:(bool)arg1;
- (bool)shouldPreheatAssets;
- (bool)shouldPreheatComments;
- (bool)shouldPreheatCoreData;
- (bool)shouldUseJPEGFastFormatForLargeTiles;
- (bool)shouldUseJPEGFastFormatForMediumTiles;
- (bool)showGroupIDHeaders;
- (bool)simulateSharedStreamsEnabled;
- (double)slowScrollPreheatingWindowSize;
- (double)smallTileSizeTolerance;
- (double)speedometerFastLowerThreshold;
- (double)speedometerFastUpperThreshold;
- (double)speedometerMediumLowerThreshold;
- (double)speedometerMediumUpperThreshold;
- (long long)testInitialWindowSize;
- (bool)useJPEGImageFormats;
- (bool)useQualityImageFormats;
- (bool)useSpeedometerFeedback;
- (bool)vitalityEnabled;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

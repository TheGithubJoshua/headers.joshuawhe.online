<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUImportAssetsDataSourceManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUImportAssetsDataSourceManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUImportAssetsDataSourceManager : PXAssetsDataSourceManager {
    NSMutableArray * _allAssetCollections;
    NSMutableDictionary * _allAssetCollectionsById;
    bool  _alreadyImportedItemsSelectable;
    <PUImportAssetsDataSourceManagerDelegate> * _delegate;
    NSArray * _filteredAssetCollections;
    NSDictionary * _filteredAssetCollectionsById;
    long long  _forcedAlreadyImportedTruncationMode;
    long long  _maxAlreadyImportedItems;
    NSObject<OS_dispatch_queue> * _modelQueue;
    bool  _needsFilterUpdate;
    bool  _showAlreadyImportedItems;
    bool  _showNotYetImportedItems;
    PUImportAssetsDataSource * _unfilteredDataSource;
    NSSet * _visibleImportAssetIdentifiers;
}

@property (nonatomic, retain) NSMutableArray *allAssetCollections;
@property (nonatomic, retain) NSMutableDictionary *allAssetCollectionsById;
@property (nonatomic) bool alreadyImportedItemsSelectable;
@property (nonatomic, readonly) PUImportAssetsDataSource *dataSource;
@property (nonatomic) <PUImportAssetsDataSourceManagerDelegate> *delegate;
@property (nonatomic, copy) NSArray *filteredAssetCollections;
@property (nonatomic, copy) NSDictionary *filteredAssetCollectionsById;
@property (nonatomic) long long forcedAlreadyImportedTruncationMode;
@property (nonatomic) long long maxAlreadyImportedItems;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *modelQueue;
@property (nonatomic) bool needsFilterUpdate;
@property (nonatomic) bool showAlreadyImportedItems;
@property (nonatomic) bool showNotYetImportedItems;
@property (nonatomic, readonly) PUImportAssetCollection *unfilteredAlreadyImportedAssetCollection;
@property (nonatomic, retain) PUImportAssetsDataSource *unfilteredDataSource;
@property (nonatomic, copy) NSSet *visibleImportAssetIdentifiers;

+ (void)addModels:(id)arg1 toAssetCollections:(id)arg2 assetCollectionsById:(id)arg3;
+ (bool)assetCollectionsArray:(id)arg1 isEqualToAssetCollectionsArray:(id)arg2;
+ (void)copyFromAssetCollections:(id)arg1 toAssetCollections:(id*)arg2 assetCollectionsById:(id*)arg3;
+ (void)removeModels:(id)arg1 fromAssetCollections:(id)arg2 assetCollectionsById:(id)arg3;
+ (void)sortAssetCollectionsInArray:(id)arg1;

- (void).cxx_destruct;
- (void)addAssets:(id)arg1;
- (id)allAssetCollections;
- (id)allAssetCollectionsById;
- (bool)alreadyImportedItemsSelectable;
- (long long)countOfAlreadyImportedAssetCollectionInCollectionsMap:(id)arg1;
- (long long)countOfUnfilteredAlreadyImportedAssetCollection;
- (id)createInitialDataSource;
- (id)delegate;
- (id)existingModelsFromModels:(id)arg1 inAssetCollections:(id)arg2 assetCollectionsById:(id)arg3;
- (id)filteredAssetCollections;
- (id)filteredAssetCollectionsById;
- (id)filteredModelsFromModels:(id)arg1 inAssetCollections:(id)arg2 assetCollectionsById:(id)arg3;
- (long long)forcedAlreadyImportedTruncationMode;
- (id)initWithAssetsFromDataSourceManager:(id)arg1 delegate:(id)arg2;
- (id)initWithDelegate:(id)arg1;
- (long long)maxAlreadyImportedItems;
- (id)modelQueue;
- (void)modifyAssetCollectionsWithBlock:(id /* block */)arg1;
- (bool)needsFilterUpdate;
- (void)pruneEmptyAssetCollectionsInCollections:(id)arg1 collectionsById:(id)arg2;
- (void)rebuildAlreadyImportedAssetCollectionInCollections:(id)arg1 collectionsById:(id)arg2;
- (void)registerChangeObserver:(id)arg1 context:(void*)arg2;
- (void)removeAssets:(id)arg1;
- (void)setAllAssetCollections:(id)arg1;
- (void)setAllAssetCollectionsById:(id)arg1;
- (void)setAlreadyImportedItemsSelectable:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFilteredAssetCollections:(id)arg1;
- (void)setFilteredAssetCollectionsById:(id)arg1;
- (void)setForcedAlreadyImportedTruncationMode:(long long)arg1;
- (void)setMaxAlreadyImportedItems:(long long)arg1;
- (void)setModelQueue:(id)arg1;
- (void)setNeedsFilterUpdate;
- (void)setNeedsFilterUpdate:(bool)arg1;
- (void)setShowAlreadyImportedItems:(bool)arg1;
- (void)setShowNotYetImportedItems:(bool)arg1;
- (void)setUnfilteredDataSource:(id)arg1;
- (void)setVisibleImportAssetIdentifiers:(id)arg1;
- (bool)showAlreadyImportedItems;
- (bool)showNotYetImportedItems;
- (id)unfilteredAlreadyImportedAssetCollection;
- (id)unfilteredDataSource;
- (void)unregisterChangeObserver:(id)arg1 context:(void*)arg2;
- (void)updateAlreadyImportedSelectability;
- (void)updateFilteredAssetsIfNeeded;
- (id)visibleImportAssetIdentifiers;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

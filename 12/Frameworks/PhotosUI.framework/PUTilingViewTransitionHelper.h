<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUTilingViewTransitionHelper.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUTilingViewTransitionHelper.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUTilingViewTransitionHelper : NSObject <PUInterruptibleViewControllerTransition, PUTilingViewControllerTransition> {
    double  __backgroundProgressOffset;
    PUMaximumChangeRateValueFilter * __chromeProgressValueFilter;
    long long  __currentOperation;
    <PUTilingViewControllerTransitionEndPoint> * __endPointOwningTilingView;
    <PUTilingViewControllerTransitionEndPoint> * __fromEndPoint;
    unsigned long long  __interactionOptions;
    double  __progressSpeed;
    double  __startTime;
    PUTilingView * __tilingView;
    PUAnimationGroup * __tilingViewAnimationGroup;
    <PUTilingViewControllerTransitionEndPoint> * __toEndPoint;
    double  __transitionProgressOffset;
    PUMaximumChangeRateValueFilter * __transitionProgressValueFilter;
    double  _dismissalDuration;
    bool  _hasStarted;
    double  _presentationDuration;
    PUViewControllerTransition<PUTilingViewControllerTransition><PUInterruptibleViewControllerTransition> * _transition;
    bool  _transitionPaused;
    NSArray * _transitionPausingCall;
}

@property (setter=_setBackgroundProgressOffset:, nonatomic) double _backgroundProgressOffset;
@property (setter=_setChromeProgressValueFilter:, nonatomic, retain) PUMaximumChangeRateValueFilter *_chromeProgressValueFilter;
@property (setter=_setCurrentOperation:, nonatomic) long long _currentOperation;
@property (setter=_setEndPointOwningTilingView:, nonatomic) <PUTilingViewControllerTransitionEndPoint> *_endPointOwningTilingView;
@property (setter=_setFromEndPoint:, nonatomic) <PUTilingViewControllerTransitionEndPoint> *_fromEndPoint;
@property (setter=_setInteractionOptions:, nonatomic) unsigned long long _interactionOptions;
@property (setter=_setProgressSpeed:, nonatomic) double _progressSpeed;
@property (setter=_setStartTime:, nonatomic) double _startTime;
@property (setter=_setTilingView:, nonatomic) PUTilingView *_tilingView;
@property (setter=_setTilingViewAnimationGroup:, nonatomic, retain) PUAnimationGroup *_tilingViewAnimationGroup;
@property (setter=_setToEndPoint:, nonatomic) <PUTilingViewControllerTransitionEndPoint> *_toEndPoint;
@property (setter=_setTransitionProgressOffset:, nonatomic) double _transitionProgressOffset;
@property (setter=_setTransitionProgressValueFilter:, nonatomic, retain) PUMaximumChangeRateValueFilter *_transitionProgressValueFilter;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) double dismissalDuration;
@property (setter=_setHasStarted:, nonatomic) bool hasStarted;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double presentationDuration;
@property (readonly) Class superclass;
@property (nonatomic) PUViewControllerTransition<PUTilingViewControllerTransition><PUInterruptibleViewControllerTransition> *transition;
@property (getter=isTransitionPaused, setter=_setTransitionPaused:, nonatomic) bool transitionPaused;
@property (nonatomic, copy) NSArray *transitionPausingCall;

+ (void)registerTransitionEndPoint:(id)arg1 forViewController:(id)arg2;
+ (id)transitionEndPointWithViewController:(id)arg1;
+ (void)unregisterTransitionEndPoint:(id)arg1 forViewController:(id)arg2;

- (void).cxx_destruct;
- (double)_backgroundProgressOffset;
- (long long)_barStyleForEndPoint:(id)arg1;
- (id)_chromeProgressValueFilter;
- (long long)_currentOperation;
- (id)_endPointOwningTilingView;
- (bool)_endPointUsesTransientTilingView:(id)arg1;
- (id)_fromEndPoint;
- (void)_getTransitionProgress:(double*)arg1 backgroundProgress:(double*)arg2 chromeProgress:(double*)arg3;
- (unsigned long long)_interactionOptions;
- (double)_progressSpeed;
- (void)_setBackgroundProgressOffset:(double)arg1;
- (void)_setChromeProgressValueFilter:(id)arg1;
- (void)_setCurrentOperation:(long long)arg1;
- (void)_setEndPointOwningTilingView:(id)arg1;
- (void)_setFromEndPoint:(id)arg1;
- (void)_setHasStarted:(bool)arg1;
- (void)_setInteractionOptions:(unsigned long long)arg1;
- (void)_setProgressSpeed:(double)arg1;
- (void)_setStartTime:(double)arg1;
- (void)_setTilingView:(id)arg1;
- (void)_setTilingViewAnimationGroup:(id)arg1;
- (void)_setToEndPoint:(id)arg1;
- (void)_setTransitionPaused:(bool)arg1;
- (void)_setTransitionProgressOffset:(double)arg1;
- (void)_setTransitionProgressValueFilter:(id)arg1;
- (double)_startTime;
- (id)_tilingView;
- (id)_tilingViewAnimationGroup;
- (id)_toEndPoint;
- (void)_transferView:(id)arg1 toSuperview:(id)arg2;
- (double)_transitionProgressOffset;
- (id)_transitionProgressValueFilter;
- (bool)_validateTransitionFromEndPoint:(id)arg1 toEndPoint:(id)arg2;
- (void)animateTransitionWithOperation:(long long)arg1 startedInteractively:(bool)arg2;
- (double)dismissalDuration;
- (bool)hasStarted;
- (id)init;
- (id)initWithPresentationDuration:(double)arg1 dismissalDuration:(double)arg2;
- (bool)isTransitionPaused;
- (void)pauseTransition;
- (void)pauseTransitionWithOptions:(unsigned long long)arg1;
- (double)presentationDuration;
- (void)resumeTransition:(bool)arg1;
- (void)setTransition:(id)arg1;
- (void)setTransitionPausingCall:(id)arg1;
- (id)transition;
- (id)transitionPausingCall;
- (void)updatePausedTransitionWithProgress:(double)arg1 interactionProgress:(double)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

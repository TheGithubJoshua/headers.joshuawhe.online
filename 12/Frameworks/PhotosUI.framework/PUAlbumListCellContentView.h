<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PUAlbumListCellContentView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/PhotosUI.framework/PUAlbumListCellContentView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI (1)
 */

@interface PUAlbumListCellContentView : UIView <UIGestureRecognizerDelegate, UITextFieldDelegate> {
    PXUIButton * __deleteButton;
    bool  __showsTitleAndSubtitle;
    UILabel * __subtitleLabel;
    UILabel * __titleLabel;
    UITextField * __titleTextField;
    PUSharedAlbumAvatarView * _avatarView;
    bool  _combinesPhotoDecorations;
    UIView * _customImageView;
    <PUAlbumListCellDelegate> * _delegate;
    unsigned long long  _editCapabilities;
    bool  _editing;
    bool  _enabled;
    bool  _highlighted;
    long long  _layout;
    bool  _showsAvatarView;
    bool  _showsDeleteButtonWhenEditing;
    PUStackView * _stackView;
    NSString * _subtitle;
    UIFont * _subtitleFont;
    NSString * _title;
    UIFont * _titleFont;
    bool  _topInsetEnabled;
    bool  _usesLabelForTitle;
    double  _xInset;
}

@property (setter=_setDeleteButton:, nonatomic, retain) PXUIButton *_deleteButton;
@property (setter=_setShowsTitleAndSubtitle:, nonatomic) bool _showsTitleAndSubtitle;
@property (setter=_setSubtitleLabel:, nonatomic, retain) UILabel *_subtitleLabel;
@property (setter=_setTitleLabel:, nonatomic, retain) UILabel *_titleLabel;
@property (setter=_setTitleTextField:, nonatomic, retain) UITextField *_titleTextField;
@property (nonatomic, retain) PUSharedAlbumAvatarView *avatarView;
@property (nonatomic) bool combinesPhotoDecorations;
@property (nonatomic, retain) UIView *customImageView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <PUAlbumListCellDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long editCapabilities;
@property (getter=isEditing, nonatomic) bool editing;
@property (getter=isEnabled, nonatomic) bool enabled;
@property (readonly) unsigned long long hash;
@property (getter=isHighlighted, nonatomic) bool highlighted;
@property (nonatomic) long long layout;
@property (nonatomic) bool showsAvatarView;
@property (nonatomic) bool showsDeleteButtonWhenEditing;
@property (nonatomic, readonly) UIView *springLoadingTargetView;
@property (setter=_setStackView:, nonatomic, retain) PUStackView *stackView;
@property (nonatomic, copy) NSString *subtitle;
@property (nonatomic, retain) UIFont *subtitleFont;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *title;
@property (nonatomic, retain) UIFont *titleFont;
@property (nonatomic) bool topInsetEnabled;
@property (nonatomic) bool usesLabelForTitle;
@property (nonatomic) double xInset;

- (void).cxx_destruct;
- (void)_deleteAction:(id)arg1;
- (id)_deleteButton;
- (struct CGPoint { double x1; double x2; })_deleteButtonCenter;
- (void)_setDeleteButton:(id)arg1;
- (void)_setShowsTitleAndSubtitle:(bool)arg1;
- (void)_setStackView:(id)arg1;
- (void)_setSubtitleLabel:(id)arg1;
- (void)_setTitleLabel:(id)arg1;
- (void)_setTitleTextField:(id)arg1;
- (bool)_showsTitleAndSubtitle;
- (id)_subtitleLabel;
- (double)_titleFieldAlpha;
- (id)_titleLabel;
- (id)_titleTextField;
- (long long)_titleTextFieldClearButtonModeForLayout:(long long)arg1;
- (void)_updateAvatarView;
- (void)_updateDeleteButtonAnimated:(bool)arg1;
- (void)_updateStackViewAnimated:(bool)arg1;
- (void)_updateSubtitleLabelAnimated:(bool)arg1;
- (void)_updateSubtitleLabelStyle;
- (void)_updateSubviewOrdering;
- (void)_updateTitleFieldAnimated:(bool)arg1;
- (void)_updateTitleStyle;
- (id)avatarView;
- (void)cancelPerformRetitleAction;
- (bool)combinesPhotoDecorations;
- (id)customImageView;
- (id)delegate;
- (unsigned long long)editCapabilities;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)handleLabelTap:(id)arg1;
- (void)handleTransitionFade:(bool)arg1 animate:(bool)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isEditing;
- (bool)isEnabled;
- (bool)isHighlighted;
- (long long)layout;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (void)setAvatarView:(id)arg1;
- (void)setCombinesPhotoDecorations:(bool)arg1;
- (void)setCustomImageView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditCapabilities:(unsigned long long)arg1;
- (void)setEditCapabilities:(unsigned long long)arg1 animated:(bool)arg2;
- (void)setEditing:(bool)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setEnabled:(bool)arg1;
- (void)setEnabled:(bool)arg1 animated:(bool)arg2;
- (void)setHighlighted:(bool)arg1;
- (void)setLayout:(long long)arg1;
- (void)setShowsAvatarView:(bool)arg1;
- (void)setShowsDeleteButtonWhenEditing:(bool)arg1;
- (void)setShowsTitle:(bool)arg1 animated:(bool)arg2;
- (void)setSubtitle:(id)arg1;
- (void)setSubtitle:(id)arg1 animated:(bool)arg2;
- (void)setSubtitleFont:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setTitleFont:(id)arg1;
- (void)setTopInsetEnabled:(bool)arg1;
- (void)setUsesLabelForTitle:(bool)arg1;
- (void)setXInset:(double)arg1;
- (bool)showsAvatarView;
- (bool)showsDeleteButtonWhenEditing;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (id)springLoadingTargetView;
- (id)stackView;
- (id)subtitle;
- (id)subtitleFont;
- (bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementString:(id)arg3;
- (void)textFieldDidEndEditing:(id)arg1;
- (bool)textFieldShouldBeginEditing:(id)arg1;
- (bool)textFieldShouldReturn:(id)arg1;
- (id)title;
- (id)titleFont;
- (bool)topInsetEnabled;
- (bool)usesLabelForTitle;
- (double)xInset;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

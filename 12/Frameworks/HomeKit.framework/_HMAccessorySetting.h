<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>_HMAccessorySetting.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/HomeKit.framework/_HMAccessorySetting.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/HomeKit.framework/HomeKit (484.7.17.1)
 */

@interface _HMAccessorySetting : NSObject <HMFLogging, HMFMerging, HMFMessageReceiver, NSSecureCoding> {
    HMAccessorySettings * _accessorySettings;
    NSMutableOrderedSet * _constraints;
    _HMContext * _context;
    <_HMAccesorySettingDelegate> * _delegate;
    NSUUID * _identifier;
    HMFUnfairLock * _lock;
    NSString * _name;
    unsigned long long  _properties;
    bool  _reflected;
    long long  _type;
    <NSCopying><NSSecureCoding> * _value;
}

@property (nonatomic, retain) HMAccessorySettings *accessorySettings;
@property (readonly, copy) NSArray *constraints;
@property (nonatomic, retain) _HMContext *context;
@property (readonly, copy) NSString *debugDescription;
@property <_HMAccesorySettingDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSUUID *identifier;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (nonatomic, readonly) NSUUID *messageTargetUUID;
@property (readonly, copy) NSString *name;
@property (readonly) unsigned long long properties;
@property (getter=isReflected, readonly) bool reflected;
@property (readonly) Class superclass;
@property (readonly) long long type;
@property (copy) <NSCopying><NSSecureCoding> *value;

+ (id)_encodedConstraintsToAdd:(id)arg1;
+ (id)_encodedConstraintsToRemove:(id)arg1;
+ (id)_replaceConstraintsPayloadWithAdditions:(id)arg1 removals:(id)arg2;
+ (id)logCategory;
+ (id)shortDescription;
+ (id)supportedConstraintClasses;
+ (id)supportedValueClasses;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_handleAddedConstraint:(id)arg1;
- (void)_handleReflectedUpdate:(id)arg1;
- (void)_handleRemovedConstraint:(id)arg1;
- (void)_handleUpdatedValue:(id)arg1;
- (void)_registerNotificationHandlers;
- (id)accessorySettings;
- (void)addConstraint:(id)arg1;
- (void)addConstraint:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)configureWithAccessorySettings:(id)arg1 context:(id)arg2;
- (id)constraintWithType:(long long)arg1;
- (id)constraints;
- (id)context;
- (void)dealloc;
- (id)debugDescription;
- (id)delegate;
- (id)description;
- (id)descriptionWithPointer:(bool)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)identifier;
- (id)initWithCoder:(id)arg1;
- (id)initWithType:(long long)arg1 properties:(unsigned long long)arg2 name:(id)arg3 constraints:(id)arg4;
- (bool)isEqual:(id)arg1;
- (bool)isReflected;
- (id)logIdentifier;
- (bool)mergeConstraints:(id)arg1;
- (bool)mergeObject:(id)arg1;
- (id)messageDestination;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)name;
- (void)notifyDelegateOfAddedConstraint:(id)arg1;
- (void)notifyDelegateOfRemovedConstraint:(id)arg1;
- (unsigned long long)properties;
- (void)removeConstraint:(id)arg1;
- (void)removeConstraint:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)replaceConstraints:(id)arg1 withConstraints:(id)arg2 completionHandler:(id /* block */)arg3;
- (void)setAccessorySettings:(id)arg1;
- (void)setConstraints:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setReflected:(bool)arg1;
- (void)setValue:(id)arg1;
- (id)shortDescription;
- (long long)type;
- (void)updateConstraints:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateValue:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)value;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

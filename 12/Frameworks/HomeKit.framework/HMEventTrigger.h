<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMEventTrigger.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/HomeKit.framework/HMEventTrigger.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/HomeKit.framework/HomeKit (484.7.17.1)
 */

@interface HMEventTrigger : HMTrigger <HFTriggerProtocol, NSSecureCoding> {
    unsigned long long  _activationState;
    HMMutableArray * _currentEvents;
    bool  _executeOnce;
    NSPredicate * _internalPredicate;
    NSArray * _recurrences;
}

@property (nonatomic) unsigned long long activationState;
@property (nonatomic, readonly, copy) NSArray *allEvents;
@property (nonatomic, retain) HMMutableArray *currentEvents;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) NSArray *endEvents;
@property (nonatomic, readonly, copy) NSArray *events;
@property (nonatomic, readonly) bool executeOnce;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSPredicate *internalPredicate;
@property (nonatomic, readonly, copy) NSPredicate *predicate;
@property (nonatomic, readonly, copy) NSArray *recurrences;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long triggerActivationState;

// Image: /System/Library/Frameworks/HomeKit.framework/HomeKit

+ (bool)__validateRecurrences:(id)arg1;
+ (id)_predicateForEvaluatingTriggerOccurringAfterSignificantEvent:(id)arg1 applyingOffset:(id)arg2;
+ (id)_predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:(id)arg1 applyingOffset:(id)arg2;
+ (id)_predicateForEvaluatingTriggerWithCharacteristic:(id)arg1 value:(id)arg2 valueFormatString:(id)arg3;
+ (id)createWithDictionary:(id)arg1 home:(id)arg2;
+ (bool)isActionAffectedByEndEvents:(id)arg1;
+ (id)negateOffset:(id)arg1;
+ (id)predicateForEvaluatingTriggerOccurringAfterDateWithComponents:(id)arg1;
+ (id)predicateForEvaluatingTriggerOccurringAfterSignificantEvent:(id)arg1;
+ (id)predicateForEvaluatingTriggerOccurringAfterSignificantEvent:(id)arg1 applyingOffset:(id)arg2;
+ (id)predicateForEvaluatingTriggerOccurringBeforeDateWithComponents:(id)arg1;
+ (id)predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:(id)arg1;
+ (id)predicateForEvaluatingTriggerOccurringBeforeSignificantEvent:(id)arg1 applyingOffset:(id)arg2;
+ (id)predicateForEvaluatingTriggerOccurringBetweenDateWithComponents:(id)arg1 secondDateWithComponents:(id)arg2;
+ (id)predicateForEvaluatingTriggerOccurringBetweenSignificantEvent:(id)arg1 secondSignificantEvent:(id)arg2;
+ (id)predicateForEvaluatingTriggerOccurringOnDateWithComponents:(id)arg1;
+ (id)predicateForEvaluatingTriggerWithCharacteristic:(id)arg1 matchingValue:(id)arg2;
+ (id)predicateForEvaluatingTriggerWithCharacteristic:(id)arg1 relatedBy:(unsigned long long)arg2 toValue:(id)arg3;
+ (id)predicateForEvaluatingTriggerWithPresence:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)__configureWithContext:(id)arg1 home:(id)arg2;
- (void)_addEvent:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_handleEventTriggerConditionNotification:(id)arg1;
- (void)_handleEventTriggerExecuteOnceNotification:(id)arg1;
- (void)_handleEventTriggerRecurrencesNotification:(id)arg1;
- (bool)_mergeWithNewObject:(id)arg1 operations:(id)arg2;
- (void)_registerNotificationHandlers;
- (void)_removeEvent:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)_serializeForAdd;
- (bool)_updateCharacterisiticReferenceInNewEvent:(id)arg1;
- (void)_updateCharacteristicReference;
- (void)_updateEvents:(id)arg1 endEvent:(bool)arg2 completionHandler:(id /* block */)arg3;
- (void)_updateExecuteOnce:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)_updatePredicate:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_updateRecurrences:(id)arg1 completionHandler:(id /* block */)arg2;
- (unsigned long long)activationState;
- (void)addEvent:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)addedEvent:(id)arg1;
- (id)allEvents;
- (bool)compatibleWithApp;
- (bool)containsSharedTriggerActivationBits;
- (id)currentEvents;
- (void)encodeWithCoder:(id)arg1;
- (id)endEvents;
- (id)events;
- (bool)executeOnce;
- (void)handleActivationStateNotification:(id)arg1;
- (void)handleEventAddedNotification:(id)arg1;
- (void)handleEventsRemovedNotification:(id)arg1;
- (void)handleEventsUpdatedNotification:(id)arg1;
- (id)initInternalWithName:(id)arg1 events:(id)arg2 endEvents:(id)arg3 recurrences:(id)arg4 predicate:(id)arg5;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 events:(id)arg2 endEvents:(id)arg3 recurrences:(id)arg4 predicate:(id)arg5;
- (id)initWithName:(id)arg1 events:(id)arg2 predicate:(id)arg3;
- (id)internalPredicate;
- (id)predicate;
- (id)recurrences;
- (void)removeEvent:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)setActivationState:(unsigned long long)arg1;
- (void)setCurrentEvents:(id)arg1;
- (void)setExecuteOnce:(bool)arg1;
- (void)setInternalPredicate:(id)arg1;
- (void)setRecurrences:(id)arg1;
- (unsigned long long)triggerActivationState;
- (void)updateEndEvents:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateEvents:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateExecuteOnce:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)updatePredicate:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)updateRecurrences:(id)arg1 completionHandler:(id /* block */)arg2;

// Image: /System/Library/PrivateFrameworks/Home.framework/Home

+ (id)_hf_localizedStringOrNilIfNotFoundForKey:(id)arg1;
+ (id)_hf_naturalLanguageNameWithHome:(id)arg1 alarmCharacteristics:(id)arg2 triggerValue:(id)arg3 type:(unsigned long long)arg4;
+ (id)_hf_naturalLanguageNameWithHome:(id)arg1 nonAlarmCharacteristics:(id)arg2 triggerValue:(id)arg3 type:(unsigned long long)arg4;
+ (id)hf_localizationKeyForProgrammableSwitchCharacteristic:(id)arg1 value:(id)arg2;
+ (id)hf_localizedStringForProgrammableSwitchCharacteristic:(id)arg1 value:(id)arg2;
+ (id)hf_naturalLanguageNameWithHome:(id)arg1 characteristics:(id)arg2 triggerValue:(id)arg3 type:(unsigned long long)arg4;
+ (id)hf_naturalLanguageNameWithHome:(id)arg1 events:(id)arg2 recurrences:(id)arg3 type:(unsigned long long)arg4;
+ (id)hf_naturalLanguageNameWithHome:(id)arg1 events:(id)arg2 recurrences:(id)arg3 type:(unsigned long long)arg4 forUser:(id)arg5;
+ (id)hf_naturalLanguageNameWithHome:(id)arg1 events:(id)arg2 type:(unsigned long long)arg3;
+ (id)hf_naturalLanguageNameWithHome:(id)arg1 events:(id)arg2 type:(unsigned long long)arg3 forUser:(id)arg4;
+ (id)hf_naturalLanguageNameWithHome:(id)arg1 presenceEvent:(id)arg2 type:(unsigned long long)arg3;
+ (id)hf_naturalLanguageNameWithHome:(id)arg1 region:(id)arg2 type:(unsigned long long)arg3 forUser:(id)arg4;
+ (id)hf_triggerValueNaturalLanguageDescriptionWithCharacteristics:(id)arg1 triggerValue:(id)arg2;

- (id)hf_designateTrigger:(bool)arg1;
- (bool)hf_isHomeAppCreatedTrigger;
- (id)hf_markTriggerAsHomeAppCreated;
- (id)hf_naturalLanguageNameWithHome:(id)arg1 type:(unsigned long long)arg2;
- (bool)hf_requiresConfirmationToRun;
- (id)hf_stateDumpBuilderWithContext:(id)arg1;
- (unsigned long long)hf_triggerType;
- (id)hf_unmarkTriggerAsHomeAppCreated;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

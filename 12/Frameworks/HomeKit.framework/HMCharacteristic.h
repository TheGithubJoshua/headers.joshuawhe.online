<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMCharacteristic.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/HomeKit.framework/HMCharacteristic.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/HomeKit.framework/HomeKit (484.7.17.1)
 */

@interface HMCharacteristic : NSObject <HFStateDumpBuildable, HMObjectMerge, NSSecureCoding> {
    NSString * _characteristicType;
    _HMContext * _context;
    bool  _hasAuthorizationData;
    NSNumber * _instanceID;
    HMFUnfairLock * _lock;
    HMCharacteristicMetadata * _metadata;
    bool  _notificationEnabled;
    bool  _notificationEnabledByThisClient;
    NSDate * _notificationEnabledTime;
    NSArray * _properties;
    bool  _requiresDeviceUnlock;
    HMService * _service;
    NSUUID * _uniqueIdentifier;
    id  _value;
    NSDate * _valueUpdatedTime;
}

@property (nonatomic, copy) NSString *characteristicType;
@property (nonatomic, retain) _HMContext *context;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property bool hasAuthorizationData;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSNumber *instanceID;
@property (nonatomic, readonly, copy) NSString *localizedDescription;
@property (nonatomic, readonly) HMCharacteristicMetadata *metadata;
@property (getter=isNotificationEnabled, nonatomic) bool notificationEnabled;
@property (nonatomic) bool notificationEnabledByThisClient;
@property (nonatomic, copy) NSDate *notificationEnabledTime;
@property (nonatomic, copy) NSArray *properties;
@property (nonatomic) bool requiresDeviceUnlock;
@property (nonatomic) HMService *service;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSUUID *uniqueIdentifier;
@property (nonatomic, copy) id value;
@property (nonatomic, copy) NSDate *valueUpdatedTime;

// Image: /System/Library/Frameworks/HomeKit.framework/HomeKit

+ (id)__localizedDescriptionForCharacteristicType:(id)arg1;
+ (id)_characteristicTypeAsString:(id)arg1;
+ (id)localizedDescriptionForCharacteristicType:(id)arg1;
+ (id)logCategory;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (void)__configureWithContext:(id)arg1 service:(id)arg2;
- (id)_characteristicTypeDescription;
- (void)_enableNotification:(bool)arg1 completionHandler:(id /* block */)arg2;
- (bool)_mergeWithNewObject:(id)arg1 operations:(id)arg2;
- (void)_readValueWithCompletionHandler:(id /* block */)arg1;
- (void)_updateAuthorizationData:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)_updateValue:(id)arg1 updateTime:(id)arg2;
- (void)_writeValue:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)characteristicType;
- (id)context;
- (void)enableNotification:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)encodeWithCoder:(id)arg1;
- (bool)hasAuthorizationData;
- (unsigned long long)hash;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)instanceID;
- (bool)isEqual:(id)arg1;
- (bool)isNotificationEnabled;
- (id)localizedDescription;
- (id)logIdentifier;
- (id)mapHAPProperties:(long long)arg1;
- (id)metadata;
- (bool)notificationEnabledByThisClient;
- (id)notificationEnabledTime;
- (id)properties;
- (void)readValueWithCompletionHandler:(id /* block */)arg1;
- (bool)requiresDeviceUnlock;
- (id)service;
- (void)setCharacteristicType:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setHasAuthorizationData:(bool)arg1;
- (void)setNotificationEnabled:(bool)arg1;
- (void)setNotificationEnabledByThisClient:(bool)arg1;
- (void)setNotificationEnabledTime:(id)arg1;
- (void)setProperties:(id)arg1;
- (void)setRequiresDeviceUnlock:(bool)arg1;
- (void)setService:(id)arg1;
- (void)setValue:(id)arg1;
- (void)setValueUpdateTime:(id)arg1;
- (void)setValueUpdatedTime:(id)arg1;
- (id)uniqueIdentifier;
- (void)updateAuthorizationData:(id)arg1 completionHandler:(id /* block */)arg2;
- (id)value;
- (id)valueUpdatedTime;
- (void)writeValue:(id)arg1 completionHandler:(id /* block */)arg2;

// Image: /System/Library/PrivateFrameworks/Home.framework/Home

+ (id)_hf_alarmCharacteristicTypeToAbnormalValueMap;
+ (id)hf_abnormalValueForAlarmCharacteristicType:(id)arg1;
+ (id)hf_alarmCharacteristicTypes;
+ (id)hf_associatedCharacteristicTypeForCharacteristicType:(id)arg1;
+ (id /* block */)hf_characteristicSortComparator;
+ (id)hf_currentStateCharacteristicTypeForTargetStateCharacteristicType:(id)arg1;
+ (id)hf_descriptionForCharacteristicType:(id)arg1;
+ (id)hf_descriptionForProperties:(id)arg1;
+ (id)hf_powerStateCharacteristicTypes;
+ (bool)hf_shouldCaptureCharacteristicTypeInActionSets:(id)arg1;
+ (long long)hf_sortPriorityForCharacteristicType:(id)arg1;
+ (id)hf_targetStateCharacteristicTypeForCurrentStateCharacteristicType:(id)arg1;

- (id)hf_associatedCharacteristicType;
- (id)hf_characteristicTypeDescription;
- (id)hf_defaultValue;
- (id)hf_designatedEventTriggerForProgrammableSwitchWithTriggerValue:(id)arg1;
- (id)hf_eventTriggers;
- (id)hf_eventTriggersForTriggerValue:(id)arg1;
- (id)hf_home;
- (bool)hf_isReadable;
- (bool)hf_isWritable;
- (id)hf_programmableSwitchTriggerValueToEventTriggersMap;
- (id)hf_programmableSwitchValidValueSet;
- (bool)hf_shouldCaptureInActionSets;
- (long long)hf_sortPriority;
- (id)hf_stateDumpBuilderWithContext:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

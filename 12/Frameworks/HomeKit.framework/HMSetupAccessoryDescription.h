<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>HMSetupAccessoryDescription.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/HomeKit.framework/HMSetupAccessoryDescription.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/HomeKit.framework/HomeKit (484.7.17.1)
 */

@interface HMSetupAccessoryDescription : NSObject <NSCopying, NSSecureCoding> {
    HMSetupAccessoryBrowsingRequest * _accessoryBrowsingRequest;
    HMAccessoryCategory * _accessoryCategory;
    NSString * _accessoryName;
    NSUUID * _accessoryUUID;
    bool  _addAndSetupAccessories;
    NSString * _appIdentifier;
    HMAccessoryCategory * _category;
    unsigned long long  _certificationStatus;
    NSString * _homeName;
    NSUUID * _homeUUID;
    bool  _isTrustedOrigin;
    bool  _legacyAPI;
    NSString * _manufacturerName;
    bool  _paired;
    HMSetupAccessoryPayload * _setupAccessoryPayload;
    NSString * _setupCode;
    NSString * _setupID;
    NSString * _suggestedRoomName;
    bool  _supportsBTLE;
    bool  _supportsIP;
    bool  _supportsWAC;
    unsigned long long  _userConsentReasons;
}

@property (nonatomic, retain) HMSetupAccessoryBrowsingRequest *accessoryBrowsingRequest;
@property (nonatomic, retain) HMAccessoryCategory *accessoryCategory;
@property (nonatomic, retain) NSString *accessoryName;
@property (nonatomic, retain) NSUUID *accessoryUUID;
@property (nonatomic) bool addAndSetupAccessories;
@property (nonatomic, retain) NSString *appIdentifier;
@property (nonatomic, readonly) HMAccessoryCategory *category;
@property (nonatomic) unsigned long long certificationStatus;
@property (nonatomic, readonly) NSString *homeName;
@property (nonatomic, readonly) NSUUID *homeUUID;
@property (nonatomic) bool isTrustedOrigin;
@property (nonatomic) bool legacyAPI;
@property (nonatomic, retain) NSString *manufacturerName;
@property (getter=isPaired, nonatomic, readonly) bool paired;
@property (nonatomic, retain) HMSetupAccessoryPayload *setupAccessoryPayload;
@property (nonatomic, readonly) NSString *setupCode;
@property (nonatomic, readonly) NSString *setupID;
@property (nonatomic, copy) NSString *suggestedRoomName;
@property (nonatomic, readonly) bool supportsBTLE;
@property (nonatomic, readonly) bool supportsIP;
@property (nonatomic, readonly) bool supportsWAC;
@property (nonatomic, readonly) unsigned long long userConsentReasons;

// Image: /System/Library/Frameworks/HomeKit.framework/HomeKit

+ (id)setupAccessoryProgressAsString:(long long)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)accessoryBrowsingRequest;
- (id)accessoryCategory;
- (id)accessoryName;
- (id)accessoryUUID;
- (bool)addAndSetupAccessories;
- (id)appIdentifier;
- (id)category;
- (unsigned long long)certificationStatus;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dumpState;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)homeName;
- (id)homeUUID;
- (id)initToSetupAccessories:(id)arg1 legacyAPI:(bool)arg2 homeName:(id)arg3 homeUUID:(id)arg4;
- (id)initToSetupAccessories:(id)arg1 legacyAPI:(bool)arg2 homeName:(id)arg3 homeUUID:(id)arg4 trustedOrigin:(bool)arg5;
- (id)initToSetupAccessories:(id)arg1 legacyAPI:(bool)arg2 homeName:(id)arg3 homeUUID:(id)arg4 trustedOrigin:(bool)arg5 browseRequest:(id)arg6;
- (id)initToSetupAccessoriesWithSetupAccessoryPayload:(id)arg1 appID:(id)arg2 homeName:(id)arg3 homeUUID:(id)arg4;
- (id)initToSetupAccessoriesWithSetupAccessoryPayload:(id)arg1 appID:(id)arg2 homeName:(id)arg3 homeUUID:(id)arg4 trustedOrigin:(bool)arg5;
- (id)initWithAccessoryUUID:(id)arg1 accessoryName:(id)arg2 appID:(id)arg3 homeName:(id)arg4 homeUUID:(id)arg5;
- (id)initWithAccessoryUUID:(id)arg1 accessoryName:(id)arg2 appID:(id)arg3 homeName:(id)arg4 homeUUID:(id)arg5 trustedOrigin:(bool)arg6;
- (id)initWithCoder:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isPaired;
- (bool)isTrustedOrigin;
- (bool)legacyAPI;
- (id)manufacturerName;
- (void)setAccessoryBrowsingRequest:(id)arg1;
- (void)setAccessoryCategory:(id)arg1;
- (void)setAccessoryName:(id)arg1;
- (void)setAccessoryUUID:(id)arg1;
- (void)setAddAndSetupAccessories:(bool)arg1;
- (void)setAppIdentifier:(id)arg1;
- (void)setCertificationStatus:(unsigned long long)arg1;
- (void)setIsTrustedOrigin:(bool)arg1;
- (void)setLegacyAPI:(bool)arg1;
- (void)setManufacturerName:(id)arg1;
- (void)setSetupAccessoryPayload:(id)arg1;
- (void)setSuggestedRoomName:(id)arg1;
- (id)setupAccessoryPayload;
- (id)setupCode;
- (id)setupID;
- (id)suggestedRoomName;
- (bool)supportsBTLE;
- (bool)supportsIP;
- (bool)supportsWAC;
- (void)updateAppIdentifier:(id)arg1;
- (void)updateWithAccessory:(id)arg1;
- (void)updateWithSetupAccessoryPayload:(id)arg1;
- (unsigned long long)userConsentReasons;

// Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon

- (id)debugDescription;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

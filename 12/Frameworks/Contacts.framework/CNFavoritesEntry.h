<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNFavoritesEntry.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Contacts.framework/CNFavoritesEntry.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Contacts.framework/Contacts (2413)
 */

@interface CNFavoritesEntry : NSObject {
    NSString * _abDatabaseUUID;
    int  _abIdentifier;
    int  _abUid;
    NSString * _actionChannel;
    NSString * _actionType;
    NSString * _bundleIdentifier;
    CNContact * _contact;
    CNContactStore * _contactStore;
    bool  _dirty;
    NSString * _label;
    NSString * _labeledValueIdentifier;
    NSString * _name;
    int  _oldAbUid;
    NSString * _originalName;
    NSString * _propertyKey;
    long long  _type;
    NSString * _value;
}

@property (nonatomic, retain) NSString *abDatabaseUUID;
@property (nonatomic) int abIdentifier;
@property (nonatomic) int abUid;
@property (nonatomic, retain) NSString *actionChannel;
@property (nonatomic, retain) NSString *actionType;
@property (nonatomic, retain) NSString *bundleIdentifier;
@property (nonatomic, retain) CNContact *contact;
@property (nonatomic, readonly) CNContactProperty *contactProperty;
@property (nonatomic, retain) CNContactStore *contactStore;
@property (nonatomic) bool dirty;
@property (nonatomic, retain) NSString *label;
@property (nonatomic, retain) NSString *labeledValueIdentifier;
@property (nonatomic, readonly, copy) NSString *localizedContactPropertyLabel;
@property (nonatomic, readonly) NSString *name;
@property (nonatomic) int oldAbUid;
@property (nonatomic, copy) NSString *originalName;
@property (nonatomic, retain) NSString *propertyKey;
@property (nonatomic) long long type;
@property (nonatomic, retain) NSString *value;

// Image: /System/Library/Frameworks/Contacts.framework/Contacts

+ (id)contactFormatter;
+ (id)createLabeledValueForFavoritesEntryValue:(id)arg1 label:(id)arg2 iOSLegacyIdentifier:(int)arg3 propertyKey:(id)arg4;
+ (id)descriptorsForRequiredKeysForPropertyKey:(id)arg1;
+ (id)favoritesEntryValueForLabeledValueValue:(id)arg1 propertyKey:(id)arg2;
+ (bool)favoritesEntryValueForLabeledValueValue:(id)arg1 propertyKey:(id)arg2 isEqualToValue:(id)arg3;
+ (void)initialize;
+ (id)instantMessageAddressForFavoritesEntryValue:(id)arg1;
+ (id)labeledValueValueForFavoritesEntryValue:(id)arg1 propertyKey:(id)arg2;
+ (id)socialProfileForFavoritesEntryValue:(id)arg1;
+ (id)valueStringFromInstantMessageAddress:(id)arg1;
+ (id)valueStringFromSocialProfile:(id)arg1;

- (void).cxx_destruct;
- (void)_convertFromEntryType:(long long)arg1 toActionType:(id*)arg2 bundleIdentifier:(id*)arg3;
- (int)_entryTypeForActionType:(id)arg1 bundleIdentifier:(id)arg2;
- (id)_initWithContact:(id)arg1 propertyKey:(id)arg2 labeledValueIdentifier:(id)arg3 entryType:(long long)arg4 actionType:(id)arg5 bundleIdentifier:(id)arg6 store:(id)arg7;
- (id)abDatabaseUUID;
- (int)abIdentifier;
- (int)abUid;
- (id)actionChannel;
- (id)actionType;
- (void)applyChangeRecord:(id)arg1;
- (id)bundleIdentifier;
- (id)contact;
- (id)contactProperty;
- (id)contactStore;
- (void)dealloc;
- (id)dictionaryRepresentation;
- (void)dictionaryRepresentation:(id*)arg1 isDirty:(bool*)arg2;
- (bool)dirty;
- (id)initWithContact:(id)arg1 propertyKey:(id)arg2 identifier:(id)arg3 type:(long long)arg4;
- (id)initWithContact:(id)arg1 propertyKey:(id)arg2 identifier:(id)arg3 type:(long long)arg4 store:(id)arg5;
- (id)initWithContact:(id)arg1 propertyKey:(id)arg2 labeledValueIdentifier:(id)arg3 actionType:(id)arg4 bundleIdentifier:(id)arg5 store:(id)arg6;
- (id)initWithDictionaryRepresentation:(id)arg1 store:(id)arg2;
- (bool)isEqual:(id)arg1;
- (id)label;
- (id)labeledValueIdentifier;
- (id)name;
- (int)oldAbUid;
- (id)originalName;
- (id)propertyKey;
- (struct CNPair { Class x1; id x2; id x3; }*)rematch;
- (bool)rematchWithContacts;
- (bool)rematchWithGeminiManager:(id)arg1;
- (void)resetContactMatch;
- (void)setAbDatabaseUUID:(id)arg1;
- (void)setAbIdentifier:(int)arg1;
- (void)setAbUid:(int)arg1;
- (void)setActionChannel:(id)arg1;
- (void)setActionType:(id)arg1;
- (void)setBundleIdentifier:(id)arg1;
- (void)setContact:(id)arg1;
- (void)setContactStore:(id)arg1;
- (void)setDirty:(bool)arg1;
- (void)setLabel:(id)arg1;
- (void)setLabeledValueIdentifier:(id)arg1;
- (void)setOldAbUid:(int)arg1;
- (void)setOriginalName:(id)arg1;
- (void)setPropertyKey:(id)arg1;
- (void)setType:(long long)arg1;
- (void)setValue:(id)arg1;
- (long long)type;
- (id)value;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

- (void)performActionWithCompletion:(id /* block */)arg1;
- (void)performActionWithContext:(id)arg1 completion:(id /* block */)arg2;
- (void)performActionWithExtensionContext:(id)arg1 completion:(id /* block */)arg2;

// Image: /System/Library/PrivateFrameworks/ContactsUICore.framework/ContactsUICore

+ (id)favoritesEntryForUserActionItem:(id)arg1;

// Image: /System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI

- (id)localizedBundleName;
- (id)localizedContactPropertyLabel;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNiOSAddressBookDataMapper.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Contacts.framework/CNiOSAddressBookDataMapper.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Contacts.framework/Contacts (2413)
 */

@interface CNiOSAddressBookDataMapper : NSObject <CNDataMapper> {
    CNiOSAddressBook * _addressBook;
    CNContactsEnvironment * _environment;
    <CNContactsLogger> * _logger;
    CNManagedAccountsCache * _managedAccountsCache;
    CNManagedConfiguration * _managedConfiguration;
}

@property (nonatomic, readonly) CNiOSAddressBook *addressBook;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) CNContactsEnvironment *environment;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <CNContactsLogger> *logger;
@property (nonatomic, retain) CNManagedAccountsCache *managedAccountsCache;
@property (nonatomic, readonly) CNManagedConfiguration *managedConfiguration;
@property (readonly) Class superclass;

+ (id)contactBuffersDecoderForFetchRequest:(id)arg1;
+ (id)encodedPeopleFetcherForForFetchRequest:(id)arg1 addressBook:(void*)arg2 managedConfiguration:(id)arg3 completionHandler:(id /* block */)arg4 environment:(id)arg5;
+ (void)initialize;

- (void).cxx_destruct;
- (void*)_alternativeSourceWithAccessibleAccountFromAddressBook:(void*)arg1;
- (bool)_canReadUnderManagementRestrictionsFromSource:(void*)arg1 inAddressBook:(void*)arg2;
- (bool)_canWriteUnderManagementRestrictionsToSource:(void*)arg1 inAddressBook:(void*)arg2;
- (id)_containersMatchingPredicate:(id)arg1 remote:(bool)arg2 error:(id*)arg3;
- (void*)_defaultSourceInAddressBook:(void*)arg1 error:(id*)arg2;
- (bool)_fechAllRecordsInSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_fetchAccountsInSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_fetchContactsInSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_fetchContainersInSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_fetchGroupsInSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_hasAccessToReadFromAccountCorrespondingToSource:(void*)arg1 fromAddressBook:(void*)arg2;
- (bool)_hasAccessToWriteToAccountCorrespondingToSource:(void*)arg1 fromAddressBook:(void*)arg2;
- (bool)_hasManagementRestrictionsEnabled;
- (bool)_hasWriteAccessToAccountContainingPerson:(void*)arg1 fromSaveContext:(id)arg2;
- (void)_postProcessContactsFromSaveContext:(id)arg1;
- (void)_postProcessContainersFromSaveContext:(id)arg1;
- (void)_postProcessGroupsFromSaveContext:(id)arg1;
- (bool)_processAccountsFromSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_processContactChangeRequestsFromSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_processContactMembershipsFromSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_processContactsFromSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_processContainersFromSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_processGroupsFromSaveContext:(id)arg1 error:(id*)arg2;
- (bool)_processSubgroupMembershipsFromSaveContext:(id)arg1 error:(id*)arg2;
- (id)accountsMatchingPredicate:(id)arg1 error:(id*)arg2;
- (id)addressBook;
- (bool)canExecuteSaveRequest:(id)arg1 error:(id*)arg2;
- (id)changeHistoryWithFetchRequest:(id)arg1 error:(id*)arg2;
- (bool)clearChangeHistoryForClientIdentifier:(id)arg1 toChangeAnchor:(id)arg2 error:(id*)arg3;
- (id)contactCountForFetchRequest:(id)arg1 error:(id*)arg2;
- (id)contactIdentifierWithMatchingDictionary:(id)arg1;
- (id)contactObservableForFetchRequest:(id)arg1;
- (id)contactWithUserActivityUserInfo:(id)arg1 keysToFetch:(id)arg2;
- (id)containersMatchingPredicate:(id)arg1 error:(id*)arg2;
- (id)defaultContainerIdentifier;
- (id)defaultContainerIdentifierForAddressBook:(void*)arg1 error:(id*)arg2;
- (id)descriptorForRequiredKeysForMatchingDictionary;
- (id)encodedContactsCursorForFetchRequest:(id)arg1 cursorCleanupBlock:(id /* block */)arg2 error:(id*)arg3;
- (id)environment;
- (id)executeFetchRequest:(id)arg1 progressiveResults:(id /* block */)arg2 completion:(id /* block */)arg3;
- (bool)executeSaveRequest:(id)arg1 error:(id*)arg2;
- (bool)executeSaveRequest:(id)arg1 response:(id*)arg2 error:(id*)arg3;
- (bool)fetchAndDecodeEncodedContactsForFetchRequest:(id)arg1 error:(id*)arg2 cancelationToken:(id)arg3 batchHandler:(id /* block */)arg4;
- (bool)fetchContactsForFetchRequest:(id)arg1 error:(id*)arg2 batchHandler:(id /* block */)arg3;
- (bool)fetchEncodedContactsForFetchRequest:(id)arg1 error:(id*)arg2 cancelationToken:(id)arg3 batchHandler:(id /* block */)arg4;
- (id)groupsMatchingPredicate:(id)arg1 error:(id*)arg2;
- (id)groupsWithIdentifiers:(id)arg1 error:(id*)arg2;
- (id)identifierWithError:(id*)arg1;
- (id)init;
- (id)initWithAddressBook:(id)arg1 managedConfiguration:(id)arg2;
- (id)initWithContactsEnvironment:(id)arg1;
- (id)initWithContactsEnvironment:(id)arg1 addressBook:(id)arg2 managedConfiguration:(id)arg3;
- (id)initWithContactsEnvironment:(id)arg1 managedConfiguration:(id)arg2;
- (id)logger;
- (id)managedAccountsCache;
- (id)managedConfiguration;
- (id)matchingDictionaryForContact:(id)arg1;
- (id)meContactIdentifiers:(id*)arg1;
- (id)policyForContainerWithIdentifier:(id)arg1 error:(id*)arg2;
- (bool)registerChangeHistoryClientIdentifier:(id)arg1 error:(id*)arg2;
- (void)requestAccessForEntityType:(long long)arg1 completionHandler:(id /* block */)arg2;
- (bool)requestAccessForEntityType:(long long)arg1 error:(id*)arg2;
- (id)serverSearchContainersMatchingPredicate:(id)arg1 error:(id*)arg2;
- (bool)setBestMeIfNeededForGivenName:(id)arg1 familyName:(id)arg2 email:(id)arg3 error:(id*)arg4;
- (void)setManagedAccountsCache:(id)arg1;
- (bool)setMeContact:(id)arg1 error:(id*)arg2;
- (bool)setMeContact:(id)arg1 forContainer:(id)arg2 error:(id*)arg3;
- (id)subgroupsOfGroupWithIdentifier:(id)arg1 error:(id*)arg2;
- (id)unifiedContactCountWithError:(id*)arg1;
- (bool)unregisterChangeHistoryClientIdentifier:(id)arg1 error:(id*)arg2;
- (id)usedLabelsForPropertyWithKey:(id)arg1 error:(id*)arg2;
- (id)userActivityUserInfoForContact:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNChangesNotifierProxy.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Contacts.framework/CNChangesNotifierProxy.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Contacts.framework/Contacts (2413)
 */

@interface CNChangesNotifierProxy : NSObject <CNChangeNotificationReceiver> {
    NSString * _coalescingNotificationName;
    CNCoalescingTimer * _coalescingTimer;
    double  _externalNotificationCoalescingDelay;
    NSMutableDictionary * _notificationForwardingMapping;
    NSMutableDictionary * _notificationsToBeSentOnceAllowed;
    NSObject<OS_dispatch_queue> * _notifierQueue;
    NSMapTable * _notifyingBlocks;
    NSMapTable * _removalBlocks;
    <CNSchedulerProvider> * _schedulerProvider;
    NSCountedSet * _supressedNotificationNames;
    bool  forwardsSelfGeneratedDistributedSaveNotifications;
}

@property (nonatomic, retain) NSString *coalescingNotificationName;
@property (nonatomic, retain) CNCoalescingTimer *coalescingTimer;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) double externalNotificationCoalescingDelay;
@property (nonatomic) bool forwardsSelfGeneratedDistributedSaveNotifications;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSMutableDictionary *notificationForwardingMapping;
@property (nonatomic, retain) NSMutableDictionary *notificationsToBeSentOnceAllowed;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *notifierQueue;
@property (nonatomic, retain) NSMapTable *notifyingBlocks;
@property (nonatomic, retain) NSMapTable *removalBlocks;
@property (nonatomic, readonly) <CNSchedulerProvider> *schedulerProvider;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSCountedSet *supressedNotificationNames;

- (void).cxx_destruct;
- (void)addListenerForNotificationName:(id)arg1 registration:(id /* block */)arg2 removal:(id /* block */)arg3;
- (void)addNotificationPoster:(id /* block */)arg1 forNotificationName:(id)arg2;
- (void)coalesceNotificationName:(id)arg1;
- (id)coalescingNotificationName;
- (id)coalescingTimer;
- (double)externalNotificationCoalescingDelay;
- (void)forwardNotificationName:(id)arg1 asNotificationName:(id)arg2;
- (bool)forwardsSelfGeneratedDistributedSaveNotifications;
- (id)initWithSchedulerProvider:(id)arg1;
- (id)notificationForwardingMapping;
- (id)notificationsToBeSentOnceAllowed;
- (id)notifierQueue;
- (id)notifyingBlocks;
- (void)postNotificationName:(id)arg1 fromSender:(id)arg2 saveIdentifier:(id)arg3 isFromExternalProcess:(bool)arg4;
- (id /* block */)postNotificationName:(id)arg1 fromSender:(id)arg2 saveIdentifier:(id)arg3 userInfo:(id)arg4 shouldForwardExternally:(bool)arg5 calledFromNotifierQueue:(bool)arg6 isFromExternalProcess:(bool)arg7;
- (void)receiveExternalNotificationName:(id)arg1;
- (id /* block */)receiveNotificationName:(id)arg1 fromSender:(id)arg2 saveIdentifier:(id)arg3 userInfo:(id)arg4 calledFromNotifierQueue:(bool)arg5 isFromExternalProcess:(bool)arg6;
- (void)receiveNotificationName:(id)arg1 fromSender:(id)arg2 saveIdentifier:(id)arg3 userInfo:(id)arg4 isFromExternalProcess:(bool)arg5;
- (id)removalBlocks;
- (void)removeAllRegisteredNotificationSources;
- (id)schedulerProvider;
- (void)setCoalescingNotificationName:(id)arg1;
- (void)setCoalescingTimer:(id)arg1;
- (void)setExternalNotificationCoalescingDelay:(double)arg1;
- (void)setForwardsSelfGeneratedDistributedSaveNotifications:(bool)arg1;
- (void)setNotificationsToBeSentOnceAllowed:(id)arg1;
- (void)setNotifierQueue:(id)arg1;
- (void)setNotifyingBlocks:(id)arg1;
- (void)setRemovalBlocks:(id)arg1;
- (void)setSupressedNotificationNames:(id)arg1;
- (void)stopSupressionOfNotificationName:(id)arg1;
- (void)supressNotificationName:(id)arg1;
- (id)supressedNotificationNames;
- (void)waitForCurrentTasksToFinish;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

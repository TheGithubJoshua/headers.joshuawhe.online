<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CNGeminiManager.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/Contacts.framework/CNGeminiManager.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/Contacts.framework/Contacts (2413)
 */

@interface CNGeminiManager : NSObject <CoreTelephonyClientDelegate, TUCallProviderManagerDelegate> {
    TUCallProviderManager * _callProviderManager;
    CoreTelephonyClient * _coreTelephonyClient;
    NSMapTable * _delegateToQueue;
    CNContactsEnvironment * _environment;
    NSObject<OS_dispatch_queue> * _queue;
}

@property (nonatomic, retain) TUCallProviderManager *callProviderManager;
@property (nonatomic, retain) CoreTelephonyClient *coreTelephonyClient;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, retain) NSMapTable *delegateToQueue;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) CNContactsEnvironment *environment;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

// Image: /System/Library/Frameworks/Contacts.framework/Contacts

+ (id)cellularPlanManager;
+ (id)channelStringFromSenderIdentity:(id)arg1;
+ (id)descriptorForRequiredKeys;
+ (bool)deviceSupportsGemini;
+ (bool)useFakeData;

- (void).cxx_destruct;
- (void)addDelegate:(id)arg1 queue:(id)arg2;
- (id)badgeLabelForSenderIdentity:(id)arg1 error:(id*)arg2;
- (id)badgeLabelForSubscription:(id)arg1 error:(id*)arg2;
- (id)bestChannelIdentifierForPhoneNumbers:(id)arg1 fromChannelIdentifiers:(id)arg2 defaultChannelIdentifier:(id)arg3;
- (id)bestSenderIdentityForContact:(id)arg1 error:(id*)arg2;
- (id)bestSenderIdentityForFavoritesEntry:(id)arg1 error:(id*)arg2;
- (id)bestSenderIdentityForHandle:(id)arg1 contactStore:(id)arg2 error:(id*)arg3;
- (id)bestSubscriptionForContact:(id)arg1 error:(id*)arg2;
- (id)bestSubscriptionForHandle:(id)arg1 contactStore:(id)arg2 error:(id*)arg3;
- (id)callProviderManager;
- (id)channelForContact:(id)arg1 error:(id*)arg2;
- (id)channelForFavoritesEntry:(id)arg1 error:(id*)arg2;
- (id)channelForFavoritesEntry:(id)arg1 includeDanglingChannels:(bool)arg2 error:(id*)arg3;
- (id)channelForPreferredChannelString:(id)arg1 fromChannels:(id)arg2 synthesizeMissingChannels:(bool)arg3;
- (id)channelIdentifierForMostRecentCallFromPhoneNumbers:(id)arg1 fromChannelIdentifiers:(id)arg2;
- (id)channelIdentifierForMostRecentSMSFromPhoneNumbers:(id)arg1 fromChannelIdentifiers:(id)arg2;
- (id)channelsByIdentifierIncludingDanglingPlans:(bool)arg1 defaultChannel:(id*)arg2 availableChannels:(id*)arg3;
- (id)contactForPhoneString:(id)arg1 contactStore:(id)arg2;
- (id)coreTelephonyClient;
- (void)danglingPlansDidUpdate:(id)arg1;
- (id)defaultSenderIdentityForInteractionsFromSenderIdentities:(id)arg1;
- (id)delegateToQueue;
- (id)environment;
- (id)fakeSenderIdentities;
- (id)fetchedSenderIdentitiesWithError:(id*)arg1;
- (id)fetchedSubscriptionForSenderIdentity:(id)arg1;
- (id)fetchedSubscriptionsWithError:(id*)arg1;
- (id)geminiResultForContact:(id)arg1 error:(id*)arg2;
- (id)geminiResultForContact:(id)arg1 substituteDefaultForDangling:(bool)arg2 error:(id*)arg3;
- (id)geminiResultForHandle:(id)arg1 contactStore:(id)arg2 error:(id*)arg3;
- (id)geminiResultForHandle:(id)arg1 contactStore:(id)arg2 substituteDefaultForDangling:(bool)arg3 error:(id*)arg4;
- (id)init;
- (id)initWithCallProviderManager:(id)arg1;
- (id)initWithEnvironment:(id)arg1 coreTelephonyClient:(id)arg2 callProviderManager:(id)arg3;
- (bool)isReferencedByCallHistoryForSenderLabelIdentifier:(id)arg1;
- (bool)isReferencedByContactsForSenderLabelIdentifier:(id)arg1 store:(id)arg2;
- (bool)isReferencedByMessagesForSenderLabelIdentifier:(id)arg1;
- (bool)isReferencedSenderLabelIdentifier:(id)arg1;
- (id)mostRecentChannelIdentifierForPhoneNumbers:(id)arg1 fromChannelIdentifiers:(id)arg2;
- (void)notifyDelegateOfChannelUpdates;
- (void)providersChangedForProviderManager:(id)arg1;
- (id)queue;
- (bool)remapChannelIdentifier:(id)arg1 toIdentifier:(id)arg2 error:(id*)arg3;
- (bool)remapContactsHavingPreferredChannelIdentifier:(id)arg1 toPreferredChannelIdentifier:(id)arg2 contactStore:(id)arg3 error:(id*)arg4;
- (bool)remapMessagesHavingChannelIdentifier:(id)arg1 toChannelIdentifier:(id)arg2 error:(id*)arg3;
- (bool)remapRecentCallsHavingChannelIdentifier:(id)arg1 toChannelIdentifier:(id)arg2 error:(id*)arg3;
- (id)remoteBestSenderIdentityForHandle:(id)arg1 contactStore:(id)arg2 error:(id*)arg3;
- (id)remoteGeminiResultForContact:(id)arg1 substituteDefaultForDangling:(bool)arg2 error:(id*)arg3;
- (void)removeDelegate:(id)arg1;
- (id)senderIdentityMatchingPhoneNumber:(id)arg1 fromSenderIdentities:(id)arg2;
- (id)senderIdentityMatchingUUID:(id)arg1 fromSenderIdentities:(id)arg2;
- (void)setCallProviderManager:(id)arg1;
- (void)setCoreTelephonyClient:(id)arg1;
- (void)setDelegateToQueue:(id)arg1;
- (void)setEnvironment:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)subscriptionInfoDidChange;
- (void)updateOutgoingLocalParticipantUUID:(id)arg1 forCallsWithLocalParticipantUUID:(id)arg2;

// Image: /System/Library/Frameworks/ContactsUI.framework/ContactsUI

+ (id)badgeForSenderIdentity:(id)arg1;
+ (id)badgeForSubscription:(id)arg1;
+ (id)badgeForText:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

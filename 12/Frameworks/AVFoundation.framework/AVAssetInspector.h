<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVAssetInspector.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AVFoundation.framework/AVAssetInspector.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation (1550.4)
 */

@interface AVAssetInspector : AVFigObjectInspector <NSCopying>

@property (nonatomic, readonly) NSData *SHA1Digest;
@property (nonatomic, readonly) NSArray *alternateTrackGroups;
@property (getter=_assetAnalysisMessages, nonatomic, readonly) NSArray *assetAnalysisMessages;
@property (nonatomic, readonly) NSArray *availableMetadataFormats;
@property (nonatomic, readonly) NSArray *availableVideoDynamicRanges;
@property (nonatomic, readonly) bool canContainFragments;
@property (nonatomic, readonly) NSArray *commonMetadata;
@property (getter=isCompatibleWithAirPlayVideo, nonatomic, readonly) bool compatibleWithAirPlayVideo;
@property (getter=isCompatibleWithSavedPhotosAlbum, nonatomic, readonly) bool compatibleWithSavedPhotosAlbum;
@property (getter=isComposable, nonatomic, readonly) bool composable;
@property (nonatomic, readonly) bool containsFragments;
@property (nonatomic, readonly) AVMetadataItem *creationDate;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } duration;
@property (getter=isExportable, nonatomic, readonly) bool exportable;
@property (nonatomic, readonly) NSString *identifyingTag;
@property (nonatomic, readonly) NSString *identifyingTagClass;
@property (getter=_instanceIdentifier, nonatomic, readonly) NSString *instanceIdentifier;
@property (nonatomic, readonly) NSString *lyrics;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } maximumVideoResolution;
@property (getter=_mediaSelectionGroupDictionaries, nonatomic, readonly) NSArray *mediaSelectionGroupDictionaries;
@property (nonatomic, readonly) struct CGSize { double x1; double x2; } naturalSize;
@property (nonatomic, readonly) int naturalTimeScale;
@property (nonatomic, readonly) struct { long long x1; int x2; unsigned int x3; long long x4; } overallDurationHint;
@property (getter=isPlayable, nonatomic, readonly) bool playable;
@property (nonatomic, readonly) AVDisplayCriteria *preferredDisplayCriteria;
@property (nonatomic, readonly) float preferredRate;
@property (nonatomic, readonly) float preferredSoundCheckVolumeNormalization;
@property (nonatomic, readonly) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } preferredTransform;
@property (nonatomic, readonly) float preferredVolume;
@property (nonatomic, readonly) id propertyListForProxy;
@property (nonatomic, readonly) bool providesPreciseDurationAndTiming;
@property (getter=isReadable, nonatomic, readonly) bool readable;
@property (nonatomic, readonly) bool supportsAnalysisReporting;
@property (nonatomic, readonly) long long trackCount;
@property (nonatomic, readonly) NSArray *trackIDs;
@property (nonatomic, readonly) NSDictionary *trackReferences;

- (id)SHA1Digest;
- (id)_assetAnalysisMessages;
- (id)_instanceIdentifier;
- (id)_mediaSelectionGroupDictionaries;
- (id)alternateTrackGroups;
- (id)availableMetadataFormats;
- (id)availableVideoDynamicRanges;
- (bool)canContainFragments;
- (id)commonMetadata;
- (bool)containsFragments;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })duration;
- (bool)hasProtectedContent;
- (id)identifyingTag;
- (id)identifyingTagClass;
- (bool)isCompatibleWithAirPlayVideo;
- (bool)isCompatibleWithSavedPhotosAlbum;
- (bool)isComposable;
- (bool)isExportable;
- (bool)isPlayable;
- (bool)isReadable;
- (id)lyrics;
- (id)makePropertyListForProxyWithOptions:(id)arg1;
- (struct CGSize { double x1; double x2; })maximumVideoResolution;
- (id)metadataForFormat:(id)arg1;
- (struct CGSize { double x1; double x2; })naturalSize;
- (int)naturalTimeScale;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })overallDurationHint;
- (id)preferredDisplayCriteria;
- (float)preferredRate;
- (float)preferredSoundCheckVolumeNormalization;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })preferredTransform;
- (float)preferredVolume;
- (id)propertyListForProxy;
- (bool)providesPreciseDurationAndTiming;
- (bool)supportsAnalysisReporting;
- (long long)trackCount;
- (id)trackIDs;
- (id)trackReferences;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVAssetDownloadSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AVFoundation.framework/AVAssetDownloadSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation (1550.4)
 */

@interface AVAssetDownloadSession : NSObject {
    AVAssetDownloadSessionInternal * _internal;
}

@property (nonatomic, readonly) NSURL *URL;
@property (nonatomic, readonly) unsigned long long availableFileSize;
@property (nonatomic, readonly) unsigned long long countOfBytesReceived;
@property (nonatomic, readonly) NSURL *destinationURL;
@property (nonatomic, readonly) unsigned long long downloadToken;
@property (nonatomic, readonly) NSError *error;
@property (nonatomic, readonly) unsigned long long fileSize;
@property (nonatomic, readonly) NSArray *loadedTimeRanges;
@property (nonatomic, readonly) long long priority;
@property (nonatomic, readonly) AVMediaSelection *resolvedMediaSelection;
@property (nonatomic, readonly) long long status;

+ (id)assetDownloadSessionWithAsset:(id)arg1 destinationURL:(id)arg2 options:(id)arg3;
+ (id)assetDownloadSessionWithDownloadToken:(unsigned long long)arg1;
+ (id)assetDownloadSessionWithURL:(id)arg1 destinationURL:(id)arg2 options:(id)arg3;

- (id)URL;
- (void)_addFigAssetDownloaderListeners;
- (void)_addFigAssetListeners;
- (void)_addFigPlaybackItemListeners;
- (id)_common_init;
- (struct OpaqueFigAsset { }*)_createDuplicateFigAssetFromAVAsset:(id)arg1;
- (id)_errorForFigNotificationPayload:(struct __CFDictionary { }*)arg1 key:(struct __CFString { }*)arg2;
- (id)_errorFromAssetNotificationPayload:(id)arg1;
- (struct OpaqueFigAsset { }*)_figAsset;
- (id)_figAssetDownloaderNotificationNames;
- (id)_figAssetNotificationNames;
- (id)_figPlaybackItemNotificationNames;
- (void)_forwardLoadedTimeRangesChangedNotification:(id)arg1;
- (id)_loadedTimeRangesFromFigLoadedTimeRanges:(id)arg1;
- (struct OpaqueFigPlaybackItem { }*)_playbackItem;
- (int)_primeCache;
- (void)_primeCacheOnDispatchQueue;
- (int)_readyForInspection;
- (void)_removeFigAssetDownloaderListeners;
- (void)_removeFigAssetListeners;
- (void)_removeFigPlaybackItemListeners;
- (void)_selectMediaOptionsFromMediaSelection:(id)arg1;
- (int)_setFileFigAsset:(struct OpaqueFigAsset { }*)arg1;
- (void)_transitionToTerminalStatus:(long long)arg1 error:(id)arg2;
- (id)_verifyDownloadConfigurationForAssetType;
- (id)_weakReference;
- (unsigned long long)availableFileSize;
- (unsigned long long)countOfBytesReceived;
- (void)dealloc;
- (id)destinationURL;
- (unsigned long long)downloadToken;
- (id)error;
- (unsigned long long)fileSize;
- (void)finalize;
- (id)init;
- (id)initWithAsset:(id)arg1 destinationURL:(id)arg2 options:(id)arg3;
- (id)initWithDownloadToken:(unsigned long long)arg1;
- (id)initWithURL:(id)arg1 destinationURL:(id)arg2 options:(id)arg3;
- (id)loadedTimeRanges;
- (void)pause;
- (long long)priority;
- (id)resolvedMediaSelection;
- (void)start;
- (void)startLoadingMetadata;
- (long long)status;
- (void)stop;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

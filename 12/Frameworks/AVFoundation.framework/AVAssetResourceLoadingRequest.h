<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVAssetResourceLoadingRequest.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AVFoundation.framework/AVAssetResourceLoadingRequest.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation (1550.4)
 */

@interface AVAssetResourceLoadingRequest : NSObject <AVAssetResourceLoaderRequest> {
    AVAssetResourceLoadingRequestInternal * _loadingRequest;
}

@property (getter=isCancelled, nonatomic, readonly) bool cancelled;
@property (nonatomic, readonly) AVAssetResourceLoadingContentInformationRequest *contentInformationRequest;
@property (nonatomic, readonly) AVAssetResourceLoadingDataRequest *dataRequest;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isFinished, nonatomic, readonly) bool finished;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSURLRequest *redirect;
@property (nonatomic, readonly) NSURLRequest *request;
@property (nonatomic, readonly) AVAssetResourceLoadingRequestor *requestor;
@property (nonatomic, copy) NSURLResponse *response;
@property (readonly) Class superclass;

+ (SEL)_selectorForInformingDelegateOfCancellationByFig;

- (void)_appendToCachedData:(id)arg1;
- (void)_cacheContentInformation:(id)arg1;
- (bool)_canSetOrUseCachedContentInformation;
- (struct OpaqueFigCustomURLHandler { }*)_contentKeySessionCustomURLHandler;
- (bool)_contentKeySessionIsAttached;
- (struct OpaqueFigCustomURLHandler { }*)_customURLHandler;
- (struct OpaqueFigCustomURLLoader { }*)_customURLLoader;
- (void)_ensureResponseInfoSentToCustomURLHandler;
- (id)_getAndClearCachedData;
- (bool)_isRequestForContentKey;
- (void)_performCancellationByClient;
- (id)_requestDictionary;
- (unsigned long long)_requestID;
- (struct __CFDictionary { }*)_requestInfo;
- (id)_resourceLoader;
- (void)_sendDataIncrementally:(id)arg1 data:(id)arg2;
- (void)_sendDataToCustomURLHandler:(id)arg1;
- (void)_sendDictionaryForURLRequest:(id)arg1 context:(id)arg2;
- (void)_sendFinishLoadingToCustomURLHandler;
- (void)_sendFinishLoadingToCustomURLHandlerWithError:(id)arg1;
- (void)_sendResponseInfoToCustomURLHandler;
- (void)_setContentInformationRequest:(id)arg1;
- (void)_setDataRequest:(id)arg1;
- (bool)_shouldInformDelegateOfFigCancellation;
- (bool)_tryToMarkAsCancelled;
- (id)_weakReference;
- (id)contentInformationRequest;
- (id)createKeyRequestDataUsingCryptorForApp:(id)arg1 contentIdentifier:(id)arg2 options:(id)arg3 performAsync:(bool)arg4 error:(id*)arg5;
- (id)dataRequest;
- (void)dealloc;
- (id)description;
- (void)finalize;
- (void)finishLoading;
- (void)finishLoadingWithError:(id)arg1;
- (void)finishLoadingWithResponse:(id)arg1 data:(id)arg2 redirect:(id)arg3;
- (bool)finished;
- (void)forwardRequestToContentKeySession;
- (void)generateStreamingContentKeyRequestDataAsynchronouslyForApp:(id)arg1 contentIdentifier:(id)arg2 options:(id)arg3 completionHandler:(id /* block */)arg4;
- (id)init;
- (id)initWithResourceLoader:(id)arg1 URL:(id)arg2 httpRequestHeaders:(id)arg3 requestOffset:(id)arg4 requestLength:(id)arg5 allowedContentTypes:(id)arg6 figCryptor:(struct OpaqueFigCPECryptor { }*)arg7 cryptorKeyRequestID:(unsigned long long)arg8 figPlaybackItem:(struct OpaqueFigPlaybackItem { }*)arg9 figAssetImageGenerator:(struct OpaqueFigAssetImageGenerator { }*)arg10;
- (id)initWithResourceLoader:(id)arg1 requestDictionary:(id)arg2;
- (id)initWithResourceLoader:(id)arg1 requestInfo:(struct __CFDictionary { }*)arg2 requestID:(unsigned long long)arg3;
- (bool)isCancelled;
- (bool)isFinished;
- (id)persistentContentKeyFromKeyVendorResponse:(id)arg1 options:(id)arg2 error:(id*)arg3;
- (id)redirect;
- (id)request;
- (id)requestor;
- (id)response;
- (id)serializableRepresentation;
- (void)setRedirect:(id)arg1;
- (void)setResponse:(id)arg1;
- (id)streamingContentKeyRequestDataForApp:(id)arg1 contentIdentifier:(id)arg2 options:(id)arg3 error:(id*)arg4;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

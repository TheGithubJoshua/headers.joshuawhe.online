<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVCapturePhotoSettings.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AVFoundation.framework/AVCapturePhotoSettings.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation (1550.4)
 */

@interface AVCapturePhotoSettings : NSObject <NSCopying> {
    AVCapturePhotoSettingsInternal * _internal;
}

@property (getter=isAutoDualCameraFusionEnabled, nonatomic) bool autoDualCameraFusionEnabled;
@property (getter=isAutoRedEyeReductionEnabled, nonatomic) bool autoRedEyeReductionEnabled;
@property (getter=isAutoStillImageStabilizationEnabled, nonatomic) bool autoStillImageStabilizationEnabled;
@property (nonatomic, readonly) NSArray *availableEmbeddedThumbnailPhotoCodecTypes;
@property (nonatomic, readonly) NSArray *availablePreviewPhotoPixelFormatTypes;
@property (nonatomic, readonly) NSArray *availableRawEmbeddedThumbnailPhotoCodecTypes;
@property (getter=isCameraCalibrationDataDeliveryEnabled, nonatomic) bool cameraCalibrationDataDeliveryEnabled;
@property (getter=isDepthDataDeliveryEnabled, nonatomic) bool depthDataDeliveryEnabled;
@property (getter=isDepthDataFiltered, nonatomic) bool depthDataFiltered;
@property (getter=isDualCameraDualPhotoDeliveryEnabled, nonatomic) bool dualCameraDualPhotoDeliveryEnabled;
@property (nonatomic, copy) NSDictionary *embeddedThumbnailPhotoFormat;
@property (nonatomic) bool embedsDepthDataInPhoto;
@property (nonatomic) bool embedsPortraitEffectsMatteInPhoto;
@property (nonatomic) long long flashMode;
@property (readonly, copy) NSDictionary *format;
@property (getter=isHighResolutionPhotoEnabled, nonatomic) bool highResolutionPhotoEnabled;
@property (nonatomic, copy) NSURL *livePhotoMovieFileURL;
@property (nonatomic, copy) NSArray *livePhotoMovieMetadata;
@property (nonatomic, copy) NSString *livePhotoVideoCodecType;
@property (nonatomic, copy) NSDictionary *metadata;
@property (getter=isPortraitEffectsMatteDeliveryEnabled, nonatomic) bool portraitEffectsMatteDeliveryEnabled;
@property (nonatomic, copy) NSDictionary *previewPhotoFormat;
@property (readonly) NSString *processedFileType;
@property (nonatomic, copy) NSDictionary *rawEmbeddedThumbnailPhotoFormat;
@property (readonly) NSString *rawFileType;
@property (readonly) unsigned int rawPhotoPixelFormatType;
@property (readonly) long long uniqueID;

// Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation

+ (id)burstQualityPhotoSettings;
+ (id)photoSettings;
+ (id)photoSettingsFromPhotoSettings:(id)arg1;
+ (id)photoSettingsWithFormat:(id)arg1;
+ (id)photoSettingsWithRawPixelFormatType:(unsigned int)arg1;
+ (id)photoSettingsWithRawPixelFormatType:(unsigned int)arg1 processedFormat:(id)arg2;
+ (id)photoSettingsWithRawPixelFormatType:(unsigned int)arg1 rawFileType:(id)arg2 processedFormat:(id)arg3 processedFileType:(id)arg4;
+ (long long)uniqueID;

- (long long)HDRMode;
- (id)_initWithFormat:(id)arg1 processedFileType:(id)arg2 rawPixelFormatType:(unsigned int)arg3 rawFileType:(id)arg4 burstQualityCaptureEnabled:(bool)arg5 uniqueID:(long long)arg6 exceptionReason:(id*)arg7;
- (id)_sanitizedLivePhotoMovieMetadataForArray:(id)arg1 exceptionReason:(id*)arg2;
- (id)adjustedPhotoFilters;
- (id)availableEmbeddedThumbnailPhotoCodecTypes;
- (id)availablePreviewPhotoPixelFormatTypes;
- (id)availableRawEmbeddedThumbnailPhotoCodecTypes;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)debugDescription;
- (id)description;
- (struct CGSize { double x1; double x2; })embeddedThumbnailCGSize;
- (unsigned int)embeddedThumbnailFormatFourCC;
- (id)embeddedThumbnailPhotoFormat;
- (bool)embedsDepthDataInPhoto;
- (bool)embedsPortraitEffectsMatteInPhoto;
- (long long)flashMode;
- (id)format;
- (unsigned int)formatFourCC;
- (id)init;
- (bool)isAutoDualCameraFusionEnabled;
- (bool)isAutoRedEyeReductionEnabled;
- (bool)isAutoStillImageStabilizationEnabled;
- (bool)isBurstQualityCaptureEnabled;
- (bool)isCameraCalibrationDataDeliveryEnabled;
- (bool)isDepthDataDeliveryEnabled;
- (bool)isDepthDataFiltered;
- (bool)isDualCameraDualPhotoDeliveryEnabled;
- (bool)isEV0PhotoDeliveryEnabled;
- (bool)isHighResolutionPhotoEnabled;
- (bool)isPortraitEffectsMatteDeliveryEnabled;
- (bool)isSquareCropEnabled;
- (bool)isTurboModeEnabled;
- (id)livePhotoContentIdentifier;
- (id)livePhotoContentIdentifierForOriginalPhoto;
- (id)livePhotoMovieFileURL;
- (id)livePhotoMovieFileURLForOriginalPhoto;
- (id)livePhotoMovieMetadata;
- (id)livePhotoMovieMetadataForOriginalPhoto;
- (id)livePhotoVideoCodecType;
- (id)metadata;
- (id)photoFilters;
- (struct CGSize { double x1; double x2; })previewCGSize;
- (unsigned int)previewFormatFourCC;
- (id)previewPhotoFormat;
- (id)processedFileType;
- (struct CGSize { double x1; double x2; })rawEmbeddedThumbnailCGSize;
- (unsigned int)rawEmbeddedThumbnailFormatFourCC;
- (id)rawEmbeddedThumbnailPhotoFormat;
- (id)rawFileType;
- (unsigned int)rawPhotoPixelFormatType;
- (void)setAdjustedPhotoFilters:(id)arg1;
- (void)setAutoDualCameraFusionEnabled:(bool)arg1;
- (void)setAutoRedEyeReductionEnabled:(bool)arg1;
- (void)setAutoStillImageStabilizationEnabled:(bool)arg1;
- (void)setCameraCalibrationDataDeliveryEnabled:(bool)arg1;
- (void)setDepthDataDeliveryEnabled:(bool)arg1;
- (void)setDepthDataFiltered:(bool)arg1;
- (void)setDualCameraDualPhotoDeliveryEnabled:(bool)arg1;
- (void)setEV0PhotoDeliveryEnabled:(bool)arg1;
- (void)setEmbeddedThumbnailPhotoFormat:(id)arg1;
- (void)setEmbedsDepthDataInPhoto:(bool)arg1;
- (void)setEmbedsPortraitEffectsMatteInPhoto:(bool)arg1;
- (void)setFlashMode:(long long)arg1;
- (void)setHDRMode:(long long)arg1;
- (void)setHighResolutionPhotoEnabled:(bool)arg1;
- (void)setLivePhotoContentIdentifier:(id)arg1;
- (void)setLivePhotoContentIdentifierForOriginalPhoto:(id)arg1;
- (void)setLivePhotoMovieFileURL:(id)arg1;
- (void)setLivePhotoMovieFileURLForOriginalPhoto:(id)arg1;
- (void)setLivePhotoMovieMetadata:(id)arg1;
- (void)setLivePhotoMovieMetadataForOriginalPhoto:(id)arg1;
- (void)setLivePhotoVideoCodecType:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setPhotoFilters:(id)arg1;
- (void)setPortraitEffectsMatteDeliveryEnabled:(bool)arg1;
- (void)setPreviewPhotoFormat:(id)arg1;
- (void)setRawEmbeddedThumbnailPhotoFormat:(id)arg1;
- (void)setShutterSound:(unsigned int)arg1;
- (void)setSquareCropEnabled:(bool)arg1;
- (void)setTurboModeEnabled:(bool)arg1;
- (void)setUserInitiatedPhotoRequestTime:(unsigned long long)arg1;
- (unsigned int)shutterSound;
- (long long)uniqueID;
- (unsigned long long)userInitiatedPhotoRequestTime;

// Image: /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI

+ (id)cam_settingsWithRequest:(id)arg1;

- (void)_configureForRequest:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

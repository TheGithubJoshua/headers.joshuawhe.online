<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AVURLAsset.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/AVFoundation.framework/AVURLAsset.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation (1550.4)
 */

@interface AVURLAsset : AVAsset <AVContentKeyRecipient> {
    AVURLAssetInternal * _URLAsset;
}

@property (nonatomic, readonly, copy) NSURL *URL;
@property (nonatomic, readonly) NSString *cacheKey;
@property (nonatomic, readonly) bool mayRequireContentKeysForMediaDataProcessing;
@property (nonatomic, readonly) double rc_durationInSeconds;
@property (nonatomic, readonly) AVAssetResourceLoader *resourceLoader;
@property (nonatomic, readonly) bool shouldMatchDataInCacheByURLPathComponentOnly;
@property (nonatomic, readonly) bool shouldMatchDataInCacheByURLWithoutQueryComponent;

// Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation

+ (id)URLAssetWithURL:(id)arg1 options:(id)arg2;
+ (id)_UTTypes;
+ (id)_avfValidationPlist;
+ (id)_figFileMIMETypes;
+ (id)_figFilePathExtensions;
+ (id)_figFileUTIs;
+ (id)_figHFSFileTypes;
+ (id)_figMIMETypes;
+ (id)_figStreamingMIMETypes;
+ (id)_figStreamingUTIs;
+ (id)_fileUTTypes;
+ (id)_getFigAssetCreationOptionsFromURLAssetInitializationOptions:(id)arg1 figAssetCreationFlags:(unsigned long long*)arg2 error:(id*)arg3;
+ (id)_getFigAssetiTunesStoreContentInfoFromURLAssetiTunesStoreContentInfo:(id)arg1;
+ (id)_streamingUTTypes;
+ (id)audiovisualMIMETypes;
+ (id)audiovisualTypes;
+ (id)instanceIdentifierMapTable;
+ (bool)isPlayableExtendedMIMEType:(id)arg1;
+ (void)setUserInfoObject:(id)arg1 forURLAsset:(id)arg2;
+ (id)userInfoObjectForURLAsset:(id)arg1;
+ (id)userInfoObjectForURLAssetInstanceIdentifier:(id)arg1;

- (id)SHA1Digest;
- (id)URL;
- (id)_absoluteURL;
- (void)_addFigAssetNotifications;
- (id)_assetInspector;
- (id)_assetInspectorLoader;
- (int)_attachToContentKeySession:(id)arg1 failedSinceAlreadyAttachedToAnotherSession:(bool*)arg2;
- (bool)_attachedToExternalContentKeySession;
- (Class)_classForAssetTracks;
- (Class)_classForFigAssetInspectorLoader;
- (Class)_classForTrackInspectors;
- (void)_ensureAssetDownloadCache;
- (id)_errorForFigNotificationPayload:(struct __CFDictionary { }*)arg1 key:(struct __CFString { }*)arg2;
- (struct OpaqueFigFormatReader { }*)_formatReader;
- (void)_handleURLRequest:(id)arg1;
- (bool)_hasResourceLoaderDelegate;
- (id)_installHandlerForNSURLSessionConfiguration:(id)arg1 queue:(id)arg2;
- (id)_instanceIdentifier;
- (id)_managedAssetCache;
- (struct OpaqueFigPlaybackItem { }*)_playbackItem;
- (void)_removeFigAssetNotifications;
- (void)_removeUserInfoObject;
- (void)_setAssetInspectorLoader:(id)arg1;
- (void)_setUserInfoObject:(id)arg1;
- (bool)_shouldOptimizeAccessForLinearMoviePlayback;
- (void)_tracksDidChange;
- (id)assetCache;
- (id)cacheKey;
- (void)cancelLoading;
- (id)contentKeySession;
- (id)creationOptions;
- (void)dealloc;
- (id)description;
- (id)downloadDestinationURL;
- (unsigned long long)downloadToken;
- (void)expire;
- (void)finalize;
- (id)identifyingTag;
- (id)identifyingTagClass;
- (id)init;
- (id)initWithURL:(id)arg1 options:(id)arg2;
- (id)lyrics;
- (bool)mayRequireContentKeysForMediaDataProcessing;
- (id)originalNetworkContentURL;
- (unsigned long long)referenceRestrictions;
- (id)resolvedURL;
- (id)resourceLoader;
- (bool)shouldMatchDataInCacheByURLPathComponentOnly;
- (bool)shouldMatchDataInCacheByURLWithoutQueryComponent;
- (id)tracks;

// Image: /System/Library/PrivateFrameworks/HealthUI.framework/HealthUI

- (struct CGSize { double x1; double x2; })hk_assetSize;
- (id)hk_thumbnailImage;

// Image: /System/Library/PrivateFrameworks/HeartRhythmUI.framework/HeartRhythmUI

- (struct CGSize { double x1; double x2; })hrui_assetSize;
- (id)hrui_thumbnailImage;

// Image: /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore

- (void)mpc_addDownloadCompletionHandler:(id /* block */)arg1;

// Image: /System/Library/PrivateFrameworks/Memories.framework/Memories

+ (id)assetWithIdentifierURL:(id)arg1;
+ (id)emptyAsset;
+ (void)mediaserverdCrashed;
+ (id)newAssetWithIdentifierURL:(id)arg1;

// Image: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos

+ (id)rc_preciseTimingAssetWithURL:(id)arg1;

- (double)rc_durationInSeconds;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

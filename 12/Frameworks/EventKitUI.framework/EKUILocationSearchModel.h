<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EKUILocationSearchModel.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/EventKitUI.framework/EKUILocationSearchModel.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI (1.0)
 */

@interface EKUILocationSearchModel : NSObject <CLLocationManagerDelegate, MKSearchCompleterDelegate> {
    MKLocalSearchCompleter * _completer;
    NSMutableDictionary * _conferenceRoomAddressesToConferenceRooms;
    NSOperationQueue * _conferenceRoomOperationQueue;
    NSObject<OS_dispatch_queue> * _conferenceRoomProcessingQueue;
    CNContactStore * _contactStore;
    NSMutableArray * _contactsSearchResults;
    <CNCancelable> * _contactsSearchToken;
    EKStructuredLocation * _currentLocation;
    <EKUILocationSearchModelDelegate> * _delegate;
    EKEventStore * _eventStore;
    NSObject<OS_dispatch_queue> * _eventsQueue;
    EKOccurrenceCacheLocationSearch * _eventsSearch;
    NSMutableArray * _eventsSearchResults;
    NSMutableArray * _frequentsSearchResults;
    CLGeocoder * _geocoder;
    MKLocalSearch * _localSearch;
    CLInUseAssertion * _locationAssertion;
    CLLocationManager * _locationManager;
    NSArray * _mapCompletionSearchResults;
    NSMutableArray * _mutableConferenceRoomSearchResults;
    NSObject<OS_dispatch_queue> * _recentsQueue;
    NSMutableArray * _recentsSearchResults;
    NSCharacterSet * _whitespaceAndNewlineCharacterSet;
}

@property (nonatomic, readonly) NSArray *conferenceRoomSearchResults;
@property (nonatomic, readonly) NSArray *contactsSearchResults;
@property (nonatomic, retain) EKStructuredLocation *currentLocation;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <EKUILocationSearchModelDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSArray *eventsSearchResults;
@property (nonatomic, readonly) NSArray *frequentsSearchResults;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <GEOMapServiceCompletionTicket> *lastTicket;
@property (nonatomic, readonly) NSArray *mapCompletionSearchResults;
@property (nonatomic, readonly) NSArray *recentsSearchResults;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addDiscoveredConferenceRooms:(id)arg1;
- (void)_handleAvailabilityResults:(id)arg1 forOperation:(id)arg2;
- (void)_processDirectorySearchResultSet:(id)arg1 forOperation:(id)arg2;
- (void)_updateContactsSearchWithResults:(id)arg1 forToken:(id)arg2;
- (void)addLocationToRecents:(id)arg1 addressString:(id)arg2;
- (void)beginSearchForTerm:(id)arg1;
- (void)cancelSearch;
- (void)completerDidUpdateResults:(id)arg1 finished:(bool)arg2;
- (id)conferenceRoomSearchResults;
- (id)contactsSearchResults;
- (id)currentLocation;
- (void)dealloc;
- (void)dedupeResults;
- (id)delegate;
- (id)eventsSearchResults;
- (id)frequentsSearchResults;
- (void)getCurrentLocation;
- (id)initWithEventStore:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (id)mapCompletionSearchResults;
- (id)recentsSearchResults;
- (bool)removeRecentLocation:(id)arg1;
- (void)resetConferenceRoomSearchResults;
- (void)resetContactsSearchResults;
- (void)resetEventsSearchResults;
- (void)resetSearchResults:(bool)arg1;
- (void)searchConferenceRooms:(id)arg1;
- (void)searchFrequentLocations:(id)arg1;
- (void)selectCurrentLocation;
- (void)selectLocation:(id)arg1;
- (void)selectMapSearchCompletion:(id)arg1;
- (void)setCurrentLocation:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)stopUpdatingLocation;
- (void)updateContacts:(id)arg1;
- (void)updateEventLocations:(id)arg1;
- (void)updateRecents:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

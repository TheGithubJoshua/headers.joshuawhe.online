<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EKUITodayCirclePulseView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/EventKitUI.framework/EKUITodayCirclePulseView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI (1.0)
 */

@interface EKUITodayCirclePulseView : UIView <_UIBasicAnimationFactory> {
    NSDictionary * _attributes;
    TodayCirclePulseBackground * _background;
    UIView * _backgroundContainer;
    double  _circleDiameter;
    bool  _circleShouldFillFrame;
    bool  _dontApplyCenteringOffset;
    UILabel * _label;
    NSDictionary * _overlayAttributes;
    UILabel * _overlayLabel;
    double  _textFrameWidthAdjustment;
    struct CGPoint { 
        double x; 
        double y; 
    }  _textOffsetFromCircle;
    double  _textYOffset;
    bool  _usesTextYOffsetWithoutAdjustmentForOverlay;
}

@property (nonatomic, retain) NSDictionary *attributes;
@property (nonatomic) double circleDiameter;
@property (nonatomic) bool circleShouldFillFrame;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool dontApplyCenteringOffset;
@property (nonatomic, retain) UIFont *font;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSDictionary *overlayAttributes;
@property (nonatomic, retain) UIFont *overlayFont;
@property (nonatomic, copy) NSString *overlayString;
@property (nonatomic) double roundedRectCornerRadius;
@property (nonatomic, copy) NSString *string;
@property (readonly) Class superclass;
@property (nonatomic) double textFrameWidthAdjustment;
@property (nonatomic) struct CGPoint { double x1; double x2; } textOffsetFromCircle;
@property (nonatomic) double textYOffset;
@property (nonatomic) bool usesRoundedRectInsteadOfCircle;
@property (nonatomic) bool usesTextYOffsetWithoutAdjustmentForOverlay;

- (void).cxx_destruct;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (void)_layoutSubviews;
- (id)_overlayLabel;
- (void)_updateLabelAttributedString;
- (void)_updateOverlayLabelAttributedString;
- (id)attributes;
- (double)circleDiameter;
- (bool)circleShouldFillFrame;
- (bool)dontApplyCenteringOffset;
- (id)font;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)overlayAttributes;
- (id)overlayFont;
- (id)overlayString;
- (void)pulse:(id /* block */)arg1;
- (double)roundedRectCornerRadius;
- (void)setAttributes:(id)arg1;
- (void)setCircleDiameter:(double)arg1;
- (void)setCircleShouldFillFrame:(bool)arg1;
- (void)setDontApplyCenteringOffset:(bool)arg1;
- (void)setFont:(id)arg1;
- (void)setOverlayAttributes:(id)arg1;
- (void)setOverlayFont:(id)arg1;
- (void)setOverlayString:(id)arg1;
- (void)setRoundedRectCornerRadius:(double)arg1;
- (void)setString:(id)arg1;
- (void)setTextFrameWidthAdjustment:(double)arg1;
- (void)setTextOffsetFromCircle:(struct CGPoint { double x1; double x2; })arg1;
- (void)setTextYOffset:(double)arg1;
- (void)setUsesRoundedRectInsteadOfCircle:(bool)arg1;
- (void)setUsesTextYOffsetWithoutAdjustmentForOverlay:(bool)arg1;
- (id)string;
- (double)textFrameWidthAdjustment;
- (struct CGPoint { double x1; double x2; })textOffsetFromCircle;
- (double)textYOffset;
- (bool)usesRoundedRectInsteadOfCircle;
- (bool)usesTextYOffsetWithoutAdjustmentForOverlay;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EKUIEventStatusButtonsView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/EventKitUI.framework/EKUIEventStatusButtonsView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI (1.0)
 */

@interface EKUIEventStatusButtonsView : UIView {
    NSArray * _actions;
    double  _baselineFromBoundsTop;
    NSArray * _buttons;
    double  _buttonsCharge;
    NSArray * _currentConstraints;
    <EKUIEventStatusButtonsViewDelegate> * _delegate;
    bool  _disableButtonHighlights;
    UIFont * _font;
    bool  _forcesSingleButtonToCenter;
    NSLayoutConstraint * _leadingMarginConstraint;
    double  _outsideMargin;
    long long  _selectedAction;
    bool  _shouldUseVerticalLayout;
    long long  _textSizeMode;
    NSLayoutConstraint * _trailingMarginConstraint;
}

@property (nonatomic, retain) NSArray *actions;
@property (nonatomic) double buttonsCharge;
@property (nonatomic, readonly) UIButton *centerButton;
@property (nonatomic) <EKUIEventStatusButtonsViewDelegate> *delegate;
@property (nonatomic) bool disableButtonHighlights;
@property (nonatomic, readonly) UIFont *font;
@property (nonatomic) long long selectedAction;
@property (nonatomic) bool shouldUseVerticalLayout;
@property (nonatomic) long long textSizeMode;

+ (id)logHandle;

- (void).cxx_destruct;
- (long long)_actionForButton:(id)arg1;
- (id)_buttonForAction:(long long)arg1;
- (long long)_buttonIndexForAction:(long long)arg1;
- (id)_buttonTitleForAction:(long long)arg1;
- (double)_defaultFontSizeForButtons;
- (id)_fontWithSize:(double)arg1 selected:(bool)arg2;
- (id)_horizontalConstraintStringForMiddleButtonsStartingAt:(unsigned long long)arg1 endingAt:(unsigned long long)arg2 resultingViews:(id)arg3;
- (double)_minimumFontSize;
- (id)_newToolbarButton;
- (void)_setupButtons;
- (void)_setupConstraints;
- (bool)_shouldCenterButton;
- (void)_updateButtonFontsWithSize:(double)arg1;
- (double)_updateFontSizesFromDelegate;
- (void)_updateSelectionToButton:(id)arg1;
- (id)actions;
- (double)baselineFromBoundsTop;
- (void)buttonTapped:(id)arg1;
- (double)buttonsCharge;
- (id)centerButton;
- (id)delegate;
- (bool)disableButtonHighlights;
- (id)font;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 actions:(id)arg2 delegate:(id)arg3;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 actions:(id)arg2 delegate:(id)arg3 centerSingleButton:(bool)arg4;
- (void)layoutSubviews;
- (long long)selectedAction;
- (void)setActions:(id)arg1;
- (void)setButtonsCharge:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDisableButtonHighlights:(bool)arg1;
- (void)setSelectedAction:(long long)arg1;
- (void)setShouldUseVerticalLayout:(bool)arg1;
- (void)setTextSizeMode:(long long)arg1;
- (bool)shouldUseVerticalLayout;
- (long long)textSizeMode;
- (void)updateConstraints;
- (void)updateFonts;
- (void)updateForMiniBarState:(bool)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

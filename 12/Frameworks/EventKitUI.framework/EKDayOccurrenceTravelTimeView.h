<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>EKDayOccurrenceTravelTimeView.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/EventKitUI.framework/EKDayOccurrenceTravelTimeView.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI (1.0)
 */

@interface EKDayOccurrenceTravelTimeView : UIView {
    bool  _animatingAlpha;
    NSArray * _constraints;
    <EKDayOccurrenceTravelTimeViewMetricsDelegate> * _delegate;
    UIColor * _elementColor;
    double  _hairlineYPosition;
    UIView * _horizontalLineView;
    NSLayoutConstraint * _iconHeight;
    NSLayoutConstraint * _iconWidth;
    NSLayoutConstraint * _leadingHorizontalPad;
    UIColor * _lineColor;
    NSString * _location;
    int  _occurrenceBackgroundStyle;
    long long  _routingMode;
    bool  _selected;
    NSLayoutConstraint * _trailingHorizontalPad;
    double  _travelTime;
    UIImageView * _travelTimeIcon;
    UILabel * _travelTimeLabel;
}

@property bool animatingAlpha;
@property (retain) NSArray *constraints;
@property (nonatomic) <EKDayOccurrenceTravelTimeViewMetricsDelegate> *delegate;
@property (nonatomic, retain) UIColor *elementColor;
@property (nonatomic) double hairlineYPosition;
@property (retain) UIView *horizontalLineView;
@property (retain) NSLayoutConstraint *iconHeight;
@property (retain) NSLayoutConstraint *iconWidth;
@property (retain) NSLayoutConstraint *leadingHorizontalPad;
@property (nonatomic, retain) UIColor *lineColor;
@property (nonatomic, copy) NSString *location;
@property (nonatomic) int occurrenceBackgroundStyle;
@property (nonatomic) long long routingMode;
@property (nonatomic) bool selected;
@property (retain) NSLayoutConstraint *trailingHorizontalPad;
@property (nonatomic) double travelTime;
@property (retain) UIImageView *travelTimeIcon;
@property (retain) UILabel *travelTimeLabel;

+ (void)initialize;
+ (double)minimumNaturalHeightForPrimaryTextUsingSmallText:(bool)arg1;

- (void).cxx_destruct;
- (double)_iconScale;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_parentPadding;
- (void)_setupStringContent;
- (id)_textFont;
- (id)_travelTimeIconForTravelModeWithColor:(id)arg1;
- (void)_updateStringsColorsAndConstraintConstants;
- (double)alphaForElements;
- (bool)animatingAlpha;
- (id)constraints;
- (id)delegate;
- (id)elementColor;
- (double)hairlineYPosition;
- (id)horizontalLineView;
- (id)iconHeight;
- (id)iconWidth;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)initWithReusableTravelTimeView:(id)arg1;
- (void)layoutSubviews;
- (id)leadingHorizontalPad;
- (id)lineColor;
- (id)location;
- (int)occurrenceBackgroundStyle;
- (long long)routingMode;
- (bool)selected;
- (void)setAnimatingAlpha:(bool)arg1;
- (void)setConstraints:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setElementColor:(id)arg1;
- (void)setHairlineYPosition:(double)arg1;
- (void)setHorizontalLineView:(id)arg1;
- (void)setIconHeight:(id)arg1;
- (void)setIconWidth:(id)arg1;
- (void)setLeadingHorizontalPad:(id)arg1;
- (void)setLineColor:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setOccurrenceBackgroundStyle:(int)arg1;
- (void)setRoutingMode:(long long)arg1;
- (void)setSelected:(bool)arg1;
- (void)setTrailingHorizontalPad:(id)arg1;
- (void)setTravelTime:(double)arg1;
- (void)setTravelTimeIcon:(id)arg1;
- (void)setTravelTimeLabel:(id)arg1;
- (id)trailingHorizontalPad;
- (double)travelTime;
- (id)travelTimeIcon;
- (id)travelTimeLabel;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MCNearbyServiceBrowser.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MultipeerConnectivity.framework/MCNearbyServiceBrowser.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MultipeerConnectivity.framework/MultipeerConnectivity (155.2)
 */

@interface MCNearbyServiceBrowser : NSObject <NSNetServiceBrowserDelegate, NSNetServiceDelegate> {
    bool  _AWDLDisabled;
    <MCNearbyServiceBrowserDelegate> * _delegate;
    NSString * _formattedServiceType;
    NSMutableDictionary * _invites;
    bool  _isBrowsing;
    MCPeerID * _myPeerID;
    NSMutableDictionary * _netServices;
    NSNetServiceBrowser * _networkBrowser;
    long long  _outgoingInviteID;
    NSMutableDictionary * _peers;
    NSString * _serviceType;
    NSObject<OS_dispatch_queue> * _syncQueue;
    bool  _wasBrowsing;
}

@property (getter=isAWDLDisabled, nonatomic) bool AWDLDisabled;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MCNearbyServiceBrowserDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *formattedServiceType;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSMutableDictionary *invites;
@property (nonatomic) bool isBrowsing;
@property (nonatomic, readonly) MCPeerID *myPeerID;
@property (nonatomic, retain) NSMutableDictionary *netServices;
@property (nonatomic, retain) NSNetServiceBrowser *networkBrowser;
@property (nonatomic) long long outgoingInviteID;
@property (nonatomic, retain) NSMutableDictionary *peers;
@property (nonatomic, copy) NSString *serviceType;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *syncQueue;
@property (nonatomic) bool wasBrowsing;

- (void)applicationDidEnterBackgroundNotification:(id)arg1;
- (void)applicationWillEnterForegroundNotification:(id)arg1;
- (void)applicationWillTerminateNotification:(id)arg1;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (id)formattedServiceType;
- (id)init;
- (id)initWithPeer:(id)arg1 serviceType:(id)arg2;
- (void)invitePeer:(id)arg1 toSession:(id)arg2 withContext:(id)arg3 timeout:(double)arg4;
- (id)invites;
- (bool)isAWDLDisabled;
- (bool)isBrowsing;
- (id)myPeerID;
- (void)netService:(id)arg1 didUpdateTXTRecordData:(id)arg2;
- (void)netServiceBrowser:(id)arg1 didFindDomain:(id)arg2 moreComing:(bool)arg3;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(bool)arg3;
- (void)netServiceBrowser:(id)arg1 didNotSearch:(id)arg2;
- (void)netServiceBrowser:(id)arg1 didRemoveDomain:(id)arg2 moreComing:(bool)arg3;
- (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(bool)arg3;
- (void)netServiceBrowserDidStopSearch:(id)arg1;
- (void)netServiceBrowserWillSearch:(id)arg1;
- (id)netServices;
- (id)networkBrowser;
- (long long)outgoingInviteID;
- (void)parseIDString:(id*)arg1 displayName:(id*)arg2 fromIdentifier:(id)arg3;
- (id)peers;
- (id)rebuildUserDiscoveryInfoFromTXTRecordDictionary:(id)arg1;
- (id)serviceType;
- (void)setAWDLDisabled:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setFormattedServiceType:(id)arg1;
- (void)setInvites:(id)arg1;
- (void)setIsBrowsing:(bool)arg1;
- (void)setNetServices:(id)arg1;
- (void)setNetworkBrowser:(id)arg1;
- (void)setOutgoingInviteID:(long long)arg1;
- (void)setPeers:(id)arg1;
- (void)setServiceType:(id)arg1;
- (void)setSyncQueue:(id)arg1;
- (void)setWasBrowsing:(bool)arg1;
- (void)startBrowsingForPeers;
- (void)stopBrowsingForPeers;
- (void)syncAttachConnection:(id)arg1 toPeer:(id)arg2;
- (void)syncCloseConnectionForPeer:(id)arg1;
- (void)syncHandleDeclinedInviteWithInfo:(id)arg1;
- (void)syncHandleInviteResponse:(id)arg1 fromPeer:(id)arg2;
- (void)syncHandleInviteTimeout:(id)arg1 forPeer:(id)arg2;
- (void)syncInitiateConnectionToPeer:(id)arg1;
- (void)syncInvitePeer:(id)arg1 toSession:(id)arg2 withContext:(id)arg3 timeout:(double)arg4;
- (long long)syncNextOutgoingInviteID;
- (id)syncQueue;
- (void)syncReceivedData:(id)arg1 fromPeer:(id)arg2;
- (void)syncSendData:(id)arg1 toPeer:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (void)syncSendDictionary:(id)arg1 toPeer:(id)arg2 withCompletionHandler:(id /* block */)arg3;
- (void)syncStartBrowsingForPeers;
- (void)syncStopBrowsingForPeers;
- (bool)wasBrowsing;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

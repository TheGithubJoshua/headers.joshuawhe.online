<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ADExpandActionViewController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/iAd.framework/ADExpandActionViewController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/iAd.framework/iAd (1)
 */

@interface ADExpandActionViewController : ADActionViewController <WKNavigationDelegate> {
    NSURL * _URL;
    bool  _adIsDismissing;
    bool  _browserContextControllerDidLoad;
    NSString * _creativeIdentifier;
    ADCountdownButton * _dismissButton;
    ADWebViewGestureRecognizer * _gestureRecognizer;
    ADHomeButtonHandler * _homeButtonHandler;
    struct CGSize { 
        double width; 
        double height; 
    }  _maximumExpandedSize;
    id  _notificationObserver;
    _WKRemoteObjectInterface * _remoteObjectInterface;
    bool  _shouldBlockNavigation;
    bool  _tapWasRecognized;
    bool  _visible;
    <ADWebProcessProxy> * _webProcessProxy;
    ADWebView * _webView;
}

@property (nonatomic, copy) NSURL *URL;
@property (nonatomic) bool adIsDismissing;
@property (nonatomic) bool browserContextControllerDidLoad;
@property (nonatomic, copy) NSString *creativeIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) ADCountdownButton *dismissButton;
@property (nonatomic, retain) ADWebViewGestureRecognizer *gestureRecognizer;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) ADHomeButtonHandler *homeButtonHandler;
@property (nonatomic) struct CGSize { double x1; double x2; } maximumExpandedSize;
@property (nonatomic, retain) id notificationObserver;
@property (nonatomic, retain) _WKRemoteObjectInterface *remoteObjectInterface;
@property (nonatomic) bool shouldBlockNavigation;
@property (readonly) Class superclass;
@property (nonatomic) bool tapWasRecognized;
@property (getter=isVisible, nonatomic) bool visible;
@property (nonatomic, retain) ADWebView *webView;
@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } webViewFrame;

- (id)URL;
- (void)_dismissButtonTapped;
- (void)_dismissKeyboard;
- (void)_dismissWithSystemEvent:(int)arg1;
- (id)_incrementCreativeIdentifier;
- (bool)_navigationIsBlocked;
- (void)_registerExportedObjectInterface;
- (void)_requestOpenURL:(id)arg1;
- (void)_resetGestureFlags;
- (void)_tapRecognized:(id)arg1;
- (void)_unregisterExportedObjectInterface;
- (void)_updateJSOExpandedSize;
- (void)_updateWebViewFrame;
- (bool)adIsDismissing;
- (bool)browserContextControllerDidLoad;
- (void)clientApplicationDidEnterBackground;
- (id)creativeIdentifier;
- (void)dealloc;
- (void)didSetAdSpace;
- (void)dismiss;
- (id)dismissButton;
- (id)gestureRecognizer;
- (id)homeButtonHandler;
- (bool)isVisible;
- (struct CGSize { double x1; double x2; })maximumExpandedSize;
- (id)notificationObserver;
- (id)remoteObjectInterface;
- (void)setAdIsDismissing:(bool)arg1;
- (void)setBrowserContextControllerDidLoad:(bool)arg1;
- (void)setCreativeIdentifier:(id)arg1;
- (void)setDismissButton:(id)arg1;
- (void)setGestureRecognizer:(id)arg1;
- (void)setHomeButtonHandler:(id)arg1;
- (void)setMaximumExpandedSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setNotificationObserver:(id)arg1;
- (void)setRemoteObjectInterface:(id)arg1;
- (void)setShouldBlockNavigation:(bool)arg1;
- (void)setTapWasRecognized:(bool)arg1;
- (void)setURL:(id)arg1;
- (void)setVisible:(bool)arg1;
- (void)setWebView:(id)arg1;
- (bool)shouldBlockNavigation;
- (bool)tapWasRecognized;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)webProcessMRAIDJSODidCallClose;
- (void)webProcessMRAIDJSODidCallExpand:(id)arg1 withMaximumSize:(id)arg2;
- (void)webProcessMRAIDJSODidCallOpen:(id)arg1;
- (void)webProcessPlugInBrowserContextControllerGlobalObjectIsAvailableForFrame;
- (void)webProcessPlugInDidCreateBrowserContextController;
- (void)webProcessPlugInWillDestroyBrowserContextController;
- (id)webView;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(id /* block */)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })webViewFrame;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>ADInterstitialAd.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/iAd.framework/ADInterstitialAd.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/iAd.framework/iAd (1)
 */

@interface ADInterstitialAd : NSObject <ADAdRecipient> {
    bool  _actionInProgress;
    NSString * _adResponseId;
    ADAdSpace * _adSpace;
    bool  _canLoadMoreThanOnce;
    int  _creativeType;
    <ADInterstitialAdDelegate> * _delegate;
    bool  _dimmingEnabled;
    bool  _displayed;
    bool  _hasLoadedFirstAd;
    <ADInterstitialAdDelegate> * _internalDelegate;
    UIViewController * _internalPresentingViewController;
    ADInterstitialView * _interstitialView;
    long long  _lastErrorCode;
    ADLayoutOptions * _layoutOptions;
    bool  _loaded;
    long long  _options;
    ADInterstitialAdPresentationViewController * _presentationViewController;
    bool  _reUsed;
    bool  _requestCalledbackError;
    int  _screenfuls;
    int  _slotPosition;
}

@property (getter=isActionInProgress, nonatomic) bool actionInProgress;
@property (nonatomic, copy) NSString *adResponseId;
@property (nonatomic, retain) ADAdSpace *adSpace;
@property (nonatomic, readonly) UIView *adSpaceView;
@property (nonatomic) bool canLoadMoreThanOnce;
@property (nonatomic) int creativeType;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <ADInterstitialAdDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool dimmingEnabled;
@property (nonatomic) bool displayed;
@property (nonatomic) bool hasLoadedFirstAd;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) int internalAdType;
@property (nonatomic) <ADInterstitialAdDelegate> *internalDelegate;
@property (nonatomic) UIViewController *internalPresentingViewController;
@property (nonatomic, retain) ADInterstitialView *interstitialView;
@property (nonatomic) long long lastErrorCode;
@property (nonatomic, retain) ADLayoutOptions *layoutOptions;
@property (getter=isLoaded, nonatomic) bool loaded;
@property (nonatomic, readonly) long long options;
@property (nonatomic, retain) ADInterstitialAdPresentationViewController *presentationViewController;
@property (nonatomic, readonly) UIViewController *presentingViewController;
@property (nonatomic) bool reUsed;
@property (nonatomic) bool requestCalledbackError;
@property (nonatomic, readonly) bool requiresMRAID;
@property (nonatomic) int screenfuls;
@property (nonatomic) int slotPosition;
@property (readonly) Class superclass;

- (bool)_considerClosingAdSpace;
- (void)_dismissModalInterstitial;
- (id)_initWithInternalAdType:(int)arg1 layoutOptions:(id)arg2 options:(long long)arg3;
- (void)_notifyDelegateOfBannerLoad;
- (void)_presentFromViewController:(id)arg1;
- (id)adResponseId;
- (id)adSpace;
- (id)adSpaceView;
- (void)adlibManagedVideoAdDidCompletePlay:(int)arg1;
- (void)adlibManagedVideoAdDidImpress;
- (void)adlibManagedVideoAdDidPausePlay;
- (void)adlibManagedVideoAdDidResumePlay;
- (void)adlibManagedVideoAdDidTapForMoreInfo;
- (void)adlibManagedVideoAdDidTapVideo;
- (void)adlibManagedVideoAdDidToggleToMute:(bool)arg1;
- (void)bannerTappedAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)bannerTappedAtPoint:(struct CGPoint { double x1; double x2; })arg1 withMRAIDAction:(id)arg2;
- (bool)canLoadMoreThanOnce;
- (void)cancelAction;
- (int)clickAction;
- (id)context;
- (void)creativeControllerViewWasTappedAtPoint:(struct CGPoint { double x1; double x2; })arg1 withMRAIDAction:(id)arg2;
- (int)creativeType;
- (id)currentAdIdentifier;
- (void)dealloc;
- (id)delegate;
- (bool)dimmingEnabled;
- (bool)displayed;
- (bool)hasImpressed;
- (bool)hasLoadedFirstAd;
- (id)identifier;
- (id)init;
- (id)initWithCreativeType:(int)arg1 options:(long long)arg2;
- (int)internalAdType;
- (id)internalDelegate;
- (id)internalPresentingViewController;
- (id)interstitialView;
- (bool)isActionInProgress;
- (bool)isLoaded;
- (long long)lastErrorCode;
- (id)layoutOptions;
- (void)missedOpportunityToFill;
- (long long)options;
- (void)pauseBannerMedia;
- (void)presentFromViewController:(id)arg1;
- (bool)presentInView:(id)arg1;
- (id)presentationViewController;
- (id)presentingViewController;
- (void)privacyButtonWasTapped;
- (bool)reUsed;
- (bool)requestCalledbackError;
- (bool)requiresMRAID;
- (void)resumeBannerMedia;
- (int)screenfuls;
- (void)serverBannerViewDidFailToReceiveAdWithError:(id)arg1;
- (void)serverBannerViewDidLoad;
- (void)serverBannerViewWillLoad;
- (void)serverStoryboardDidTransitionOut;
- (id)serverURL;
- (void)setActionInProgress:(bool)arg1;
- (void)setAdResponseId:(id)arg1;
- (void)setAdSpace:(id)arg1;
- (void)setAuthenticationUserName:(id)arg1;
- (void)setCanLoadMoreThanOnce:(bool)arg1;
- (void)setContext:(id)arg1;
- (void)setCreativeType:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDimmingEnabled:(bool)arg1;
- (void)setDisplayed:(bool)arg1;
- (void)setHasLoadedFirstAd:(bool)arg1;
- (void)setInternalDelegate:(id)arg1;
- (void)setInternalPresentingViewController:(id)arg1;
- (void)setInterstitialView:(id)arg1;
- (void)setLastErrorCode:(long long)arg1;
- (void)setLayoutOptions:(id)arg1;
- (void)setLoaded:(bool)arg1;
- (void)setPresentationViewController:(id)arg1;
- (void)setReUsed:(bool)arg1;
- (void)setRequestCalledbackError:(bool)arg1;
- (void)setScreenfuls:(int)arg1;
- (void)setSection:(id)arg1;
- (void)setServerURL:(id)arg1;
- (void)setSlotPosition:(int)arg1;
- (bool)shouldTestVisibilityAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (int)slotPosition;
- (void)storyboardViewControllerDidPresent;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

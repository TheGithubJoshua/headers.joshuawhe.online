<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>RPDaemonProxy.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/ReplayKit.framework/RPDaemonProxy.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/ReplayKit.framework/ReplayKit (1)
 */

@interface RPDaemonProxy : NSObject <NSXPCConnectionDelegate, RPClientProtocol, RPDaemonProtocol> {
    NSURL * _broadcastURL;
    NSXPCConnection * _connection;
}

@property (nonatomic, retain) NSURL *broadcastURL;
@property (nonatomic, retain) NSXPCConnection *connection;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;

+ (id)daemonProxy;

- (void).cxx_destruct;
- (id)broadcastURL;
- (oneway void)captureHandlerWithAudioSample:(id)arg1 absdData:(id)arg2 itemCount:(long long)arg3 bufferType:(long long)arg4 timingData:(id)arg5;
- (oneway void)captureHandlerWithSample:(id)arg1 timingData:(id)arg2;
- (id)connection;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(bool)arg3;
- (oneway void)discardRecordingWithHandler:(id /* block */)arg1;
- (oneway void)getCurrentBroadcastImages:(id /* block */)arg1;
- (oneway void)getSystemBroadcastExtensionInfo:(id /* block */)arg1;
- (id)init;
- (oneway void)pauseRecording;
- (oneway void)recordingDidPause;
- (oneway void)recordingDidStopWithError:(id)arg1 movieURL:(id)arg2;
- (oneway void)recordingLockInterrupted:(id)arg1;
- (oneway void)recordingShouldResume;
- (oneway void)recordingTimerDidUpdate:(id)arg1;
- (oneway void)reportCameraUsage:(int)arg1;
- (oneway void)resumeRecordingWithWindowLayerContextID:(unsigned int)arg1;
- (oneway void)saveVideoToCameraRoll:(id)arg1 handler:(id /* block */)arg2;
- (void)setBroadcastURL:(id)arg1;
- (void)setConnection:(id)arg1;
- (oneway void)setHasUserConsentForCamera:(bool)arg1;
- (oneway void)setHasUserConsentForMicrophone:(bool)arg1;
- (oneway void)setMicrophoneEnabled:(bool)arg1;
- (oneway void)setMicrophoneEnabledPersistent:(bool)arg1;
- (oneway void)setupBroadcastWithHostBundleID:(id)arg1 broadcastExtensionBundleID:(id)arg2 broadcastConfigurationData:(id)arg3 userInfo:(id)arg4 handler:(id /* block */)arg5;
- (oneway void)startRecordingWindowLayerContextIDs:(id)arg1 windowSize:(struct CGSize { double x1; double x2; })arg2 microphoneEnabled:(bool)arg3 cameraEnabled:(bool)arg4 broadcast:(bool)arg5 systemRecording:(bool)arg6 captureEnabled:(bool)arg7 listenerEndpoint:(id)arg8 withHandler:(id /* block */)arg9;
- (oneway void)stopRecordingWithHandler:(id /* block */)arg1;
- (oneway void)stopRecordingWithStartClipDuration:(double)arg1 endClipDuration:(double)arg2 handler:(id /* block */)arg3;
- (oneway void)synchronousGetCurrentState:(id /* block */)arg1;
- (oneway void)synchronousIsBroadcastingWithPreferredExtension:(id)arg1 handler:(id /* block */)arg2;
- (oneway void)updateBroadcastServiceInfo:(id)arg1;
- (oneway void)updateBroadcastURL:(id)arg1;
- (oneway void)updateProcessIDForAudioCaptureWithPID:(int)arg1;
- (oneway void)updateScreenRecordingState;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

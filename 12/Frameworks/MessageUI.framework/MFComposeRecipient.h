<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MFComposeRecipient.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MessageUI.framework/MFComposeRecipient.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MessageUI.framework/MessageUI (3445.120.0.1.2)
 */

@interface MFComposeRecipient : NSObject <NSCopying, NSSecureCoding, UIItemProviderReading, UIItemProviderWriting> {
    NSString * _address;
    CNAutocompleteResult * _autocompleteResult;
    NSArray * _cachedCompleteMatches;
    NSArray * _cachedMatchedStrings;
    NSArray * _cachedSortedMembers;
    NSString * _compositeName;
    CNContact * _contact;
    NSString * _contactIdentifier;
    NSString * _countryCode;
    NSString * _displayString;
    int  _identifier;
    unsigned long long  _kind;
    NSString * _label;
    MFComposeRecipientOriginContext * _originContext;
    int  _property;
    void * _record;
    int  _recordID;
    unsigned long long  _sourceType;
    NSString * _unlocalizedLabel;
    NSString * _valueIdentifier;
}

@property (nonatomic, copy) NSString *address;
@property (nonatomic, retain) CNAutocompleteResult *autocompleteResult;
@property (nonatomic, readonly) NSString *commentedAddress;
@property (nonatomic, readonly) NSString *compositeName;
@property (nonatomic, retain) CNContact *contact;
@property (nonatomic, retain) NSString *contactIdentifier;
@property (nonatomic, retain) NSString *countryCode;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) NSString *displayString;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isDirectoryServerResult;
@property (nonatomic, readonly) bool isGroup;
@property (nonatomic, readonly) bool isSuggestedRecipient;
@property (nonatomic, readonly) unsigned long long kind;
@property (nonatomic, retain) NSString *label;
@property (nonatomic, readonly) NSString *normalizedAddress;
@property (nonatomic, readonly) MFComposeRecipientOriginContext *originContext;
@property (nonatomic, readonly) NSString *placeholderName;
@property (getter=isRemovableFromSearchResults, nonatomic, readonly) bool removableFromSearchResults;
@property (nonatomic, readonly) NSString *shortName;
@property (nonatomic, readonly) bool showsAccessoryButton;
@property (nonatomic) unsigned long long sourceType;
@property (readonly) Class superclass;
@property (nonatomic, readonly) NSString *uncommentedAddress;
@property (nonatomic, retain) NSString *unlocalizedLabel;
@property (nonatomic, retain) NSString *valueIdentifier;
@property (nonatomic, readonly, copy) NSArray *writableTypeIdentifiersForItemProvider;

// Image: /System/Library/Frameworks/MessageUI.framework/MessageUI

+ (id)_requiredKeyDescriptors;
+ (id)composeRecipientWithAutocompleteResult:(id)arg1;
+ (id)mf_recipientWithGALResult:(id)arg1;
+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id*)arg3;
+ (id)readableTypeIdentifiersForItemProvider;
+ (id)recipientWithProperty:(int)arg1 address:(id)arg2;
+ (id)recipientWithRecord:(void*)arg1 property:(int)arg2 identifier:(int)arg3;
+ (id)recipientWithRecord:(void*)arg1 recordID:(int)arg2 property:(int)arg3 identifier:(int)arg4;
+ (bool)supportsSecureCoding;
+ (id)writableTypeIdentifiersForItemProvider;

- (id)_unformattedAddress;
- (id)address;
- (id)autocompleteResult;
- (id)children;
- (id)childrenWithCompleteMatches;
- (id)commentedAddress;
- (id)completelyMatchedAttributedStrings;
- (id)compositeName;
- (id)contact;
- (id)contactIdentifier;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)countryCode;
- (void)dealloc;
- (id)description;
- (id)displayString;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (int)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithContact:(id)arg1 address:(id)arg2 kind:(unsigned long long)arg3;
- (id)initWithRecord:(void*)arg1 recordID:(int)arg2 property:(int)arg3 identifier:(int)arg4 address:(id)arg5;
- (bool)isDirectoryServerResult;
- (bool)isEqual:(id)arg1;
- (bool)isGroup;
- (bool)isRemovableFromSearchResults;
- (bool)isSuggestedRecipient;
- (unsigned long long)kind;
- (id)label;
- (id)labeledValueIdentifier;
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(id /* block */)arg2;
- (id)normalizedAddress;
- (id)originContext;
- (id)placeholderName;
- (id)preferredSendingAddress;
- (int)property;
- (void*)record;
- (int)recordID;
- (void)setAddress:(id)arg1;
- (void)setAutocompleteResult:(id)arg1;
- (void)setContact:(id)arg1;
- (void)setContactIdentifier:(id)arg1;
- (void)setCountryCode:(id)arg1;
- (void)setDisplayString:(id)arg1;
- (void)setIdentifier:(int)arg1;
- (void)setLabel:(id)arg1;
- (void)setOriginContext:(id)arg1;
- (void)setRecord:(void*)arg1 recordID:(int)arg2 identifier:(int)arg3;
- (void)setSourceType:(unsigned long long)arg1;
- (void)setUnlocalizedLabel:(id)arg1;
- (void)setValueIdentifier:(id)arg1;
- (id)shortName;
- (bool)showsAccessoryButton;
- (id)sortedChildren;
- (unsigned long long)sourceType;
- (id)uncommentedAddress;
- (id)unlocalizedLabel;
- (id)valueIdentifier;
- (bool)wasCompleteMatch;

// Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit

- (id)IDSCanonicalAddress;
- (id)canonicalAddress;
- (struct __CFPhoneNumber { }*)copyPhoneNumber;
- (bool)isEmail;
- (bool)isPhone;
- (id)rawAddress;
- (void)setCanonicalAddress:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

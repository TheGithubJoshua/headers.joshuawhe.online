<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MFModernLabelledAtomList.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MessageUI.framework/MFModernLabelledAtomList.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MessageUI.framework/MessageUI (3445.120.0.1.2)
 */

@interface MFModernLabelledAtomList : UIView <MFModernAddressAtomDelegate, MFPassthroughViewProvider> {
    NSMutableArray * _addressAtoms;
    void * _addressBook;
    NSArray * _addresses;
    <MFModernLabelledAtomListDelegate> * _delegate;
    UILabel * _label;
    UIColor * _labelTextColor;
    bool  _labelVisible;
    UILabel * _lastBaselineDeceptionLabel;
    double  _lineSpacing;
    unsigned int  _needsReflow;
    unsigned long long  _numberOfRows;
    double  _previousWidth;
    bool  _primary;
    NSString * _title;
    NSArray * _viewsToDodge;
}

@property (nonatomic, copy) NSArray *addresses;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <MFModernLabelledAtomListDelegate> *delegate;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) UILabel *label;
@property (nonatomic, retain) UIColor *labelTextColor;
@property (getter=isLabelVisible, nonatomic) bool labelVisible;
@property (nonatomic) double lineSpacing;
@property (nonatomic, readonly) unsigned long long numberOfRows;
@property (getter=isPrimary, nonatomic) bool primary;
@property (readonly) Class superclass;
@property (nonatomic, retain) NSArray *viewsToDodge;

+ (double)atomLineHeight;
+ (id)defaultLabelFont;
+ (id)defaultLabelTextColor;
+ (id)primaryLabelFont;
+ (double)spaceBetweenColonAndFirstAtomNaturalEdge;

- (void).cxx_destruct;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_frameForAtomAtIndex:(unsigned long long)arg1 withStartingPoint:(struct CGPoint { double x1; double x2; })arg2 row:(inout unsigned long long*)arg3;
- (void)_reflow;
- (void)_reflowIfNeeded;
- (double)_remainingSpaceForRowAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)_setNeedsReflow;
- (void)addressAtom:(id)arg1 displayStringDidChange:(id)arg2;
- (id)addressAtoms;
- (void)addressBookDidChange:(id)arg1;
- (id)addresses;
- (id)atomDisplayStrings;
- (struct CGPoint { double x1; double x2; })baselinePointForRow:(unsigned long long)arg1;
- (void)contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)crossFadeLabelVisibility:(bool)arg1 atomSeparatorStyle:(int)arg2 withAnimationCoordinator:(id)arg3;
- (void)dealloc;
- (id)delegate;
- (void)enumerateAddressAtomsUsingBlock:(id /* block */)arg1;
- (id)initWithLabel:(id)arg1 title:(id)arg2 addressBook:(const void*)arg3;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isLabelVisible;
- (bool)isPrimary;
- (id)label;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })labelFrame;
- (id)labelText;
- (id)labelTextColor;
- (void)layoutSubviews;
- (double)lineSpacing;
- (unsigned long long)numberOfRows;
- (id)passthroughViews;
- (bool)pointInside:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (void)setAddressAtomScale:(double)arg1;
- (void)setAddressAtomSeparatorStyle:(int)arg1;
- (void)setAddressAtomTarget:(id)arg1 action:(SEL)arg2;
- (void)setAddressAtomsArePrimary:(bool)arg1;
- (void)setAddresses:(id)arg1;
- (void)setAddresses:(id)arg1 withCompletion:(id /* block */)arg2;
- (void)setAtomAlpha:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)setLabelTextColor:(id)arg1;
- (void)setLabelVisible:(bool)arg1;
- (void)setLineSpacing:(double)arg1;
- (void)setOpaque:(bool)arg1;
- (void)setOverrideFont:(id)arg1;
- (void)setPrimary:(bool)arg1;
- (void)setViewsToDodge:(id)arg1;
- (id)title;
- (void)updateAtomsForVIP;
- (id)viewForFirstBaselineLayout;
- (id)viewForLastBaselineLayout;
- (id)viewsToDodge;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

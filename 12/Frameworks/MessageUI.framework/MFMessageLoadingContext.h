<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MFMessageLoadingContext.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/MessageUI.framework/MFMessageLoadingContext.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/MessageUI.framework/MessageUI (3445.120.0.1.2)
 */

@interface MFMessageLoadingContext : NSObject <MFCancelable> {
    <MFScheduler> * _analysisScheduler;
    MFObservable * _analysisSuggestionsObservable;
    MFAttachmentManager * _attachmentManager;
    MFCancelationToken * _cancelable;
    MFObservable * _contentObservable;
    unsigned long long  _contentOffset;
    bool  _draftMessage;
    bool  _editableMessage;
    NSString * _eventICSRepresentation;
    NSString * _eventUniqueID;
    bool  _hasLoadedBestAlternativePart;
    bool  _hasLoadedCompleteMessage;
    bool  _hasLoadedSomeContent;
    MFObservable<MFObserver> * _inputObservable;
    MFMimePart * _loadedPart;
    NSString * _meetingName;
    NSString * _meetingStorePersistentID;
    MFMailMessage * _message;
    MFMimeBody * _messageBody;
    bool  _outgoingMessage;
    bool  _shouldAnalyzeMessage;
    MFObservable * _smimeObservable;
    MFObservable<MFObserver> * _trustReevaluationObservable;
    <MFScheduler> * _trustReevaluationScheduler;
}

@property (setter=_setAttachmentManager:, nonatomic, retain) MFAttachmentManager *attachmentManager;
@property (nonatomic) unsigned long long contentOffset;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isDraftMessage, nonatomic, readonly) bool draftMessage;
@property (getter=isEditableMessage, nonatomic, readonly) bool editableMessage;
@property (nonatomic) bool hasLoadedBestAlternativePart;
@property (nonatomic) bool hasLoadedCompleteMessage;
@property (nonatomic) bool hasLoadedSomeContent;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MFMimePart *loadedPart;
@property (setter=_setMessage:, nonatomic, retain) MFMailMessage *message;
@property (setter=_setMessageBody:, nonatomic, retain) MFMimeBody *messageBody;
@property (getter=isOutgoingMessage, nonatomic, readonly) bool outgoingMessage;
@property (readonly) Class superclass;

+ (unsigned long long)_nextOffsetForOffset:(unsigned long long)arg1 totalLength:(unsigned long long)arg2 requestedAmount:(unsigned long long)arg3;

- (void)_load:(long long)arg1;
- (id)_reallyLoad:(long long)arg1 shouldDownload:(bool)arg2;
- (void)_setAttachmentManager:(id)arg1;
- (void)_setMessage:(id)arg1;
- (void)_setMessageBody:(id)arg1;
- (void)_setupMeetingData;
- (void)_setupObservableStreams;
- (id)addContentAnalysisObserver:(id /* block */)arg1;
- (id)addLoadObserver:(id /* block */)arg1;
- (id)addSMIMEObserver:(id /* block */)arg1;
- (id)analysisSuggestionsFromHTMLString:(id)arg1 hasLoadedCompleteBody:(bool)arg2;
- (void)assignAttachmentManagerToContent:(id)arg1;
- (id)attachmentManager;
- (void)cancel;
- (id)concatenatedStringFromContent:(id)arg1;
- (unsigned long long)contentOffset;
- (void)dealloc;
- (id)description;
- (bool)hasLoadedBestAlternativePart;
- (bool)hasLoadedCompleteMessage;
- (bool)hasLoadedSomeContent;
- (id)initWithMessage:(id)arg1 attachmentManager:(id)arg2;
- (id)initWithMessage:(id)arg1 attachmentManager:(id)arg2 analyzeMessage:(bool)arg3;
- (bool)isDraftMessage;
- (bool)isEditableMessage;
- (bool)isOutgoingMessage;
- (void)load:(long long)arg1;
- (void)load:(long long)arg1 scheduler:(id)arg2;
- (id)loadedPart;
- (id)message;
- (id)messageBody;
- (id)onScheduler:(id)arg1 addLoadObserver:(id /* block */)arg2;
- (void)processMeetingInvitations:(id)arg1;
- (void)reevaluateSMIMETrustWithNetworkAccessAllowed;
- (void)setContentOffset:(unsigned long long)arg1;
- (void)setHasLoadedBestAlternativePart:(bool)arg1;
- (void)setHasLoadedCompleteMessage:(bool)arg1;
- (void)setHasLoadedSomeContent:(bool)arg1;
- (void)setLoadedPart:(id)arg1;
- (id)suggestionsFromIndexableItem:(id)arg1;
- (id)unsubscribeSuggestions;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

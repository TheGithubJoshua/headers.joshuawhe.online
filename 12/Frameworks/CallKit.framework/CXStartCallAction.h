<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CXStartCallAction.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CallKit.framework/CXStartCallAction.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CallKit.framework/CallKit (1)
 */

@interface CXStartCallAction : CXCallAction <CXVideoAspectRatioDescriptor> {
    NSString * _contactIdentifier;
    NSDate * _dateStarted;
    bool  _emergency;
    CXHandle * _handle;
    struct CGSize { 
        double width; 
        double height; 
    }  _localLandscapeAspectRatio;
    struct CGSize { 
        double width; 
        double height; 
    }  _localPortraitAspectRatio;
    NSUUID * _localSenderIdentityUUID;
    bool  _relay;
    bool  _retry;
    bool  _shouldSuppressInCallUI;
    long long  _ttyType;
    bool  _upgrade;
    bool  _video;
    bool  _voicemail;
}

@property (nonatomic, copy) NSString *contactIdentifier;
@property (nonatomic, copy) NSDate *dateStarted;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (getter=isEmergency, nonatomic) bool emergency;
@property (nonatomic, copy) CXHandle *handle;
@property (readonly) unsigned long long hash;
@property (nonatomic) struct CGSize { double x1; double x2; } localLandscapeAspectRatio;
@property (nonatomic) struct CGSize { double x1; double x2; } localPortraitAspectRatio;
@property (nonatomic, retain) NSUUID *localSenderIdentityUUID;
@property (getter=isRelay, nonatomic) bool relay;
@property (getter=isRetry, nonatomic) bool retry;
@property (nonatomic) bool shouldSuppressInCallUI;
@property (readonly) Class superclass;
@property (setter=setTTYType:, nonatomic) long long ttyType;
@property (getter=isUpgrade, nonatomic) bool upgrade;
@property (getter=isVideo, nonatomic) bool video;
@property (getter=isVoicemail, nonatomic) bool voicemail;

+ (bool)supportsSecureCoding;
+ (double)timeout;

- (void).cxx_destruct;
- (id)contactIdentifier;
- (id)customDescription;
- (id)dateStarted;
- (void)encodeWithCoder:(id)arg1;
- (void)fulfill;
- (void)fulfillWithDateStarted:(id)arg1;
- (id)handle;
- (id)initWithCallUUID:(id)arg1 handle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (bool)isEmergency;
- (bool)isRelay;
- (bool)isRetry;
- (bool)isUpgrade;
- (bool)isVideo;
- (bool)isVoicemail;
- (struct CGSize { double x1; double x2; })localLandscapeAspectRatio;
- (struct CGSize { double x1; double x2; })localPortraitAspectRatio;
- (id)localSenderIdentityUUID;
- (void)setContactIdentifier:(id)arg1;
- (void)setDateStarted:(id)arg1;
- (void)setEmergency:(bool)arg1;
- (void)setHandle:(id)arg1;
- (void)setLocalLandscapeAspectRatio:(struct CGSize { double x1; double x2; })arg1;
- (void)setLocalPortraitAspectRatio:(struct CGSize { double x1; double x2; })arg1;
- (void)setLocalSenderIdentityUUID:(id)arg1;
- (void)setRelay:(bool)arg1;
- (void)setRetry:(bool)arg1;
- (void)setShouldSuppressInCallUI:(bool)arg1;
- (void)setTTYType:(long long)arg1;
- (void)setUpgrade:(bool)arg1;
- (void)setVideo:(bool)arg1;
- (void)setVoicemail:(bool)arg1;
- (bool)shouldSuppressInCallUI;
- (long long)ttyType;
- (void)updateAsFulfilledWithDateStarted:(id)arg1;
- (void)updateCopy:(id)arg1 withZone:(struct _NSZone { }*)arg2;
- (void)updateSanitizedCopy:(id)arg1 withZone:(struct _NSZone { }*)arg2;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

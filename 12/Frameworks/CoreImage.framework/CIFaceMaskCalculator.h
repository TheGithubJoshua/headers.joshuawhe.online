<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CIFaceMaskCalculator.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreImage.framework/CIFaceMaskCalculator.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreImage.framework/CoreImage (740.0.130)
 */

@interface CIFaceMaskCalculator : CIFilter {
    NSNumber * inputApertureScaling;
    NSNumber * inputFacesCapMultip;
    CIVector * inputFacesCenterX;
    CIVector * inputFacesCenterY;
    CIVector * inputFacesChinX;
    CIVector * inputFacesChinY;
    NSNumber * inputFacesDistToBlurScaling;
    NSNumber * inputFacesEyeToEyebrowRatio;
    NSNumber * inputFacesGainMultip;
    CIVector * inputFacesLeftEyeX;
    CIVector * inputFacesLeftEyeY;
    NSNumber * inputFacesLinearBlurGrowthC;
    NSNumber * inputFacesLinearBlurGrowthM;
    NSNumber * inputFacesMaxBlurDistFromFocus;
    NSNumber * inputFacesMaxBlurOnEyes;
    CIVector * inputFacesRightEyeX;
    CIVector * inputFacesRightEyeY;
    CIImage * inputImage;
    NSNumber * inputMaxBlur;
    NSDictionary * inputTuningParameters;
}

@property (nonatomic, copy) NSNumber *inputApertureScaling;
@property (nonatomic, copy) NSNumber *inputFacesCapMultip;
@property (nonatomic, retain) CIVector *inputFacesCenterX;
@property (nonatomic, retain) CIVector *inputFacesCenterY;
@property (nonatomic, retain) CIVector *inputFacesChinX;
@property (nonatomic, retain) CIVector *inputFacesChinY;
@property (nonatomic, copy) NSNumber *inputFacesDistToBlurScaling;
@property (nonatomic, copy) NSNumber *inputFacesEyeToEyebrowRatio;
@property (nonatomic, copy) NSNumber *inputFacesGainMultip;
@property (nonatomic, retain) CIVector *inputFacesLeftEyeX;
@property (nonatomic, retain) CIVector *inputFacesLeftEyeY;
@property (nonatomic, copy) NSNumber *inputFacesLinearBlurGrowthC;
@property (nonatomic, copy) NSNumber *inputFacesLinearBlurGrowthM;
@property (nonatomic, copy) NSNumber *inputFacesMaxBlurDistFromFocus;
@property (nonatomic, copy) NSNumber *inputFacesMaxBlurOnEyes;
@property (nonatomic, retain) CIVector *inputFacesRightEyeX;
@property (nonatomic, retain) CIVector *inputFacesRightEyeY;
@property (retain) CIImage *inputImage;
@property (nonatomic, copy) NSNumber *inputMaxBlur;
@property (nonatomic, retain) NSDictionary *inputTuningParameters;

- (id)_kernel;
- (id)inputApertureScaling;
- (id)inputFacesCapMultip;
- (id)inputFacesCenterX;
- (id)inputFacesCenterY;
- (id)inputFacesChinX;
- (id)inputFacesChinY;
- (id)inputFacesDistToBlurScaling;
- (id)inputFacesEyeToEyebrowRatio;
- (id)inputFacesGainMultip;
- (id)inputFacesLeftEyeX;
- (id)inputFacesLeftEyeY;
- (id)inputFacesLinearBlurGrowthC;
- (id)inputFacesLinearBlurGrowthM;
- (id)inputFacesMaxBlurDistFromFocus;
- (id)inputFacesMaxBlurOnEyes;
- (id)inputFacesRightEyeX;
- (id)inputFacesRightEyeY;
- (id)inputImage;
- (id)inputMaxBlur;
- (id)inputTuningParameters;
- (id)outputImage;
- (void)setInputApertureScaling:(id)arg1;
- (void)setInputFacesCapMultip:(id)arg1;
- (void)setInputFacesCenterX:(id)arg1;
- (void)setInputFacesCenterY:(id)arg1;
- (void)setInputFacesChinX:(id)arg1;
- (void)setInputFacesChinY:(id)arg1;
- (void)setInputFacesDistToBlurScaling:(id)arg1;
- (void)setInputFacesEyeToEyebrowRatio:(id)arg1;
- (void)setInputFacesGainMultip:(id)arg1;
- (void)setInputFacesLeftEyeX:(id)arg1;
- (void)setInputFacesLeftEyeY:(id)arg1;
- (void)setInputFacesLinearBlurGrowthC:(id)arg1;
- (void)setInputFacesLinearBlurGrowthM:(id)arg1;
- (void)setInputFacesMaxBlurDistFromFocus:(id)arg1;
- (void)setInputFacesMaxBlurOnEyes:(id)arg1;
- (void)setInputFacesRightEyeX:(id)arg1;
- (void)setInputFacesRightEyeY:(id)arg1;
- (void)setInputImage:(id)arg1;
- (void)setInputMaxBlur:(id)arg1;
- (void)setInputTuningParameters:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>CIBurstImageSetInternal.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/CoreImage.framework/CIBurstImageSetInternal.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/CoreImage.framework/CoreImage (740.0.130)
 */

@interface CIBurstImageSetInternal : NSObject {
    int  _version;
    NSString * _versionString;
    CIBurstActionClassifier * actionClassifier;
    NSMutableArray * allImageIdentifiers;
    NSMutableArray * bestImageIdentifiersArray;
    NSString * burstCoverSelection;
    NSString * burstId;
    struct __sFILE { char *x1; int x2; int x3; short x4; short x5; struct __sbuf { char *x_6_1_1; int x_6_1_2; } x6; int x7; void *x8; int (*x9)(); int (*x10)(); int (*x11)(); int (*x12)(); struct __sbuf { char *x_13_1_1; int x_13_1_2; } x13; struct __sFILEX {} *x14; int x15; unsigned char x16[3]; unsigned char x17[1]; struct __sbuf { char *x_18_1_1; int x_18_1_2; } x18; int x19; long long x20; } * burstLogFileHandle;
    NSString * burstLogFileName;
    NSMutableArray * clusterArray;
    NSMutableDictionary * clusterByImageIdentifier;
    int  curClusterIndexToProcess;
    NSObject<OS_dispatch_queue> * dq;
    NSObject<OS_dispatch_queue> * dq_yuvdump;
    int  dummyAnalysisCount;
    bool  enableAnalysis;
    bool  enableDumpYUV;
    bool  enableFaceCore;
    CIBurstImageFaceAnalysisContext * faceAnalysisContext;
    NSCountedSet * faceIDCounts;
    bool  isAction;
    bool  isPortrait;
    int  maxNumPendingFrames;
    CIBurstYUVImage * overrideImage;
    NSDictionary * overrideProps;
    NSObject<OS_dispatch_semaphore> * sem;
    NSMutableDictionary * statsByImageIdentifier;
    int  temporalOrder;
}

@property CIBurstActionClassifier *actionClassifier;
@property NSMutableArray *allImageIdentifiers;
@property NSArray *bestImageIdentifiersArray;
@property NSString *burstCoverSelection;
@property (nonatomic, retain) NSString *burstId;
@property NSString *burstLogFileName;
@property NSMutableArray *clusterArray;
@property NSMutableDictionary *clusterByImageIdentifier;
@property int dummyAnalysisCount;
@property bool enableAnalysis;
@property bool enableDumpYUV;
@property bool enableFaceCore;
@property NSCountedSet *faceIDCounts;
@property int maxNumPendingFrames;
@property NSMutableDictionary *statsByImageIdentifier;
@property int temporalOrder;
@property int version;
@property NSString *versionString;

+ (id)defaultVersionString;

- (id)actionClassifier;
- (void)addImageFromIOSurface:(struct __IOSurface { }*)arg1 properties:(id)arg2 identifier:(id)arg3 completionBlock:(id /* block */)arg4;
- (void)addYUVImage:(id)arg1 properties:(id)arg2 identifier:(id)arg3 imageProps:(id)arg4 completionBlock:(id /* block */)arg5;
- (id)allImageIdentifiers;
- (id)bestImageIdentifiers;
- (id)bestImageIdentifiersArray;
- (id)burstCoverSelection;
- (id)burstDocumentDirectory;
- (id)burstId;
- (id)burstLogFileName;
- (id)clusterArray;
- (id)clusterByImageIdentifier;
- (float)computeActionSelectionThreshold;
- (void)computeAllImageScores;
- (float)computeBeginningVsEndAEMatrixDiffVsAverageAdjacent;
- (float)computeCameraTravelDistance;
- (int)computeEmotion:(id)arg1;
- (void)dealloc;
- (int)dummyAnalysisCount;
- (bool)enableAnalysis;
- (bool)enableDumpYUV;
- (bool)enableFaceCore;
- (id)faceIDCounts;
- (id)findBestImage:(id)arg1 useActionScores:(bool)arg2;
- (id)imageClusterForIdentifier:(id)arg1;
- (id)initWithOptions:(id)arg1;
- (bool)isAction;
- (bool)isFaceDetectionForced;
- (bool)isPortrait;
- (int)maxNumPendingFrames;
- (void)performEmotionalRejectionOnCluster:(id)arg1;
- (void)processClusters:(bool)arg1;
- (void)selectCoverPhotoFromMultiple:(id)arg1 burstSize:(int)arg2;
- (void)setActionClassifier:(id)arg1;
- (void)setAllImageIdentifiers:(id)arg1;
- (void)setBestImageIdentifiersArray:(id)arg1;
- (void)setBurstCoverSelection:(id)arg1;
- (void)setBurstId:(id)arg1;
- (void)setBurstLogFileName:(id)arg1;
- (void)setClusterArray:(id)arg1;
- (void)setClusterByImageIdentifier:(id)arg1;
- (void)setDummyAnalysisCount:(int)arg1;
- (void)setEnableAnalysis:(bool)arg1;
- (void)setEnableDumpYUV:(bool)arg1;
- (void)setEnableFaceCore:(bool)arg1;
- (void)setFaceIDCounts:(id)arg1;
- (void)setMaxNumPendingFrames:(int)arg1;
- (void)setStatsByImageIdentifier:(id)arg1;
- (void)setTemporalOrder:(int)arg1;
- (void)setVersion:(int)arg1;
- (void)setVersionString:(id)arg1;
- (id)statsByImageIdentifier;
- (int)temporalOrder;
- (int)version;
- (id)versionString;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

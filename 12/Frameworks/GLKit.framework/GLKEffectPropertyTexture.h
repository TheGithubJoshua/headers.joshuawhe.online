<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GLKEffectPropertyTexture.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/Frameworks/GLKit.framework/GLKEffectPropertyTexture.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /System/Library/Frameworks/GLKit.framework/GLKit (101)
 */

@interface GLKEffectPropertyTexture : GLKEffectProperty {
    struct GLKBigInt_s { 
        unsigned long long n0; 
        unsigned long long n1; 
    }  _allFshMasks;
    unsigned char  _enabled;
    int  _envMode;
    NSString * _filePath;
    unsigned char  _matrixEnabled;
    unsigned int  _name;
    unsigned int  _target;
    NSMutableArray * _texGenArray;
    GLKEffectPropertyTexGen * _texGenR;
    GLKEffectPropertyTexGen * _texGenS;
    GLKEffectPropertyTexGen * _texGenT;
    int  _textureIndex;
    int  _unit2dLoc;
    char * _unit2dNameString;
    int  _unitCubeLoc;
    char * _unitCubeNameString;
}

@property (nonatomic, readonly) struct GLKBigInt_s { unsigned long long x1; unsigned long long x2; } allFshMasks;
@property (nonatomic) unsigned char enabled;
@property (nonatomic) int envMode;
@property (nonatomic, readonly) NSString *filePath;
@property (nonatomic) unsigned char matrixEnabled;
@property (nonatomic) unsigned int name;
@property (nonatomic, readonly) unsigned char normalizedNormalsMask;
@property (nonatomic) unsigned int target;
@property (nonatomic, readonly) NSMutableArray *texGenArray;
@property (nonatomic, readonly) GLKEffectPropertyTexGen *texGenR;
@property (nonatomic, readonly) GLKEffectPropertyTexGen *texGenS;
@property (nonatomic, readonly) GLKEffectPropertyTexGen *texGenT;
@property (nonatomic) int textureIndex;
@property (nonatomic) int unit2dLoc;
@property (nonatomic) char *unit2dNameString;
@property (nonatomic) int unitCubeLoc;
@property (nonatomic) char *unitCubeNameString;
@property (nonatomic, readonly) unsigned char useTexCoordAttribMask;
@property (nonatomic, readonly) unsigned char vNormalEyeMask;
@property (nonatomic, readonly) unsigned char vPositionEyeMask;

+ (void)clearAllTexturingMasks:(struct GLKBigInt_s { unsigned long long x1; unsigned long long x2; }*)arg1 fshMask:(struct GLKBigInt_s { unsigned long long x1; unsigned long long x2; }*)arg2;
+ (void)setStaticMasksWithVshRoot:(id)arg1 fshRoot:(id)arg2;

- (struct GLKBigInt_s { unsigned long long x1; unsigned long long x2; })allFshMasks;
- (void)bind;
- (void)dealloc;
- (id)description;
- (void)dirtyAllUniforms;
- (unsigned char)enabled;
- (int)envMode;
- (id)filePath;
- (bool)includeFshShaderTextForRootNode:(id)arg1;
- (bool)includeVshShaderTextForRootNode:(id)arg1;
- (id)init;
- (void)initializeMasks;
- (unsigned char)matrixEnabled;
- (unsigned int)name;
- (unsigned char)normalizedNormalsMask;
- (void)setEnabled:(unsigned char)arg1;
- (void)setEnvMode:(int)arg1;
- (void)setMatrixEnabled:(unsigned char)arg1;
- (void)setName:(unsigned int)arg1;
- (void)setShaderBindings;
- (void)setTarget:(unsigned int)arg1;
- (void)setTextureIndex:(int)arg1;
- (void)setUnit2dLoc:(int)arg1;
- (void)setUnit2dNameString:(char *)arg1;
- (void)setUnitCubeLoc:(int)arg1;
- (void)setUnitCubeNameString:(char *)arg1;
- (unsigned int)target;
- (id)texGenArray;
- (id)texGenR;
- (id)texGenS;
- (id)texGenT;
- (int)textureIndex;
- (int)unit2dLoc;
- (char *)unit2dNameString;
- (int)unitCubeLoc;
- (char *)unitCubeNameString;
- (unsigned char)useTexCoordAttribMask;
- (unsigned char)vNormalEyeMask;
- (unsigned char)vPositionEyeMask;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

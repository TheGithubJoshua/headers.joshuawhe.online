<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>PQLResultSet.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libprequelite.dylib/PQLResultSet.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libprequelite.dylib
 */

@interface PQLResultSet : NSObject <PQLEnumeration> {
    unsigned long long  _columns;
    PQLConnection * _db;
    NSSet * _defaultUnarchivingAllowedClasses;
    NSError * _error;
    bool  _hasValuable;
    bool  _inTransaction;
    id  _lastEnumeratedObject;
    Class  _objectsClass;
    SEL  _objectsClassInitializer;
    id /* block */  _objectsConstructor;
    unsigned long long  _rowNumber;
    PQLStatement * _stmt;
}

@property (nonatomic, readonly) unsigned long long columns;
@property (nonatomic, readonly) PQLConnection *db;
@property (nonatomic, retain) NSSet *defaultUnarchivingAllowedClasses;
@property (nonatomic, readonly) NSError *error;
@property (nonatomic, readonly) unsigned long long rowNumber;
@property (nonatomic, readonly) struct sqlite3_stmt { }*stmt;

- (void).cxx_destruct;
- (const char *)UTF8StringAtIndex:(int)arg1;
- (bool)_next:(bool)arg1;
- (id)archivedObjectOfClass:(Class)arg1 atIndex:(int)arg2;
- (id)archivedObjectOfClasses:(id)arg1 atIndex:(int)arg2;
- (bool)boolAtIndex:(int)arg1;
- (BOOL)charAtIndex:(int)arg1;
- (void)close;
- (id)columnNameAtIndex:(int)arg1;
- (unsigned long long)columns;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x1; id *x2; unsigned long long *x3; unsigned long long x4[5]; }*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3;
- (id)dataAtIndex:(int)arg1;
- (id)dataAtIndex:(int)arg1 noCopy:(bool)arg2;
- (id)dateAtIndex:(int)arg1;
- (id)db;
- (void)dealloc;
- (id)defaultUnarchivingAllowedClasses;
- (id)description;
- (double)doubleAtIndex:(int)arg1;
- (struct PQLResultSet { Class x1; id x2; Class x3; SEL x4; bool x5; id /* block */ x6; id x7; bool x8; id x9; id x10; unsigned long long x11; unsigned long long x12; id x13; }*)enumerateObjects:(id /* block */)arg1;
- (struct PQLResultSet { Class x1; id x2; Class x3; SEL x4; bool x5; id /* block */ x6; id x7; bool x8; id x9; id x10; unsigned long long x11; unsigned long long x12; id x13; }*)enumerateObjectsOfClass:(Class)arg1;
- (struct PQLResultSet { Class x1; id x2; Class x3; SEL x4; bool x5; id /* block */ x6; id x7; bool x8; id x9; id x10; unsigned long long x11; unsigned long long x12; id x13; }*)enumerateObjectsOfClass:(Class)arg1 initializer:(SEL)arg2;
- (id)error;
- (float)floatAtIndex:(int)arg1;
- (id)initWithStatement:(id)arg1 usingDatabase:(id)arg2;
- (int)intAtIndex:(int)arg1;
- (long long)integerAtIndex:(int)arg1;
- (bool)isNullAtIndex:(int)arg1;
- (long long)longAtIndex:(int)arg1;
- (long long)longLongAtIndex:(int)arg1;
- (bool)next;
- (id)nextObject;
- (id)numberAtIndex:(int)arg1;
- (id)object:(id /* block */)arg1;
- (id)objectAtIndex:(int)arg1;
- (id)objectAtIndexedSubscript:(unsigned long long)arg1;
- (id)objectOfClass:(Class)arg1;
- (id)objectOfClass:(Class)arg1 atIndex:(int)arg2;
- (id)objectOfClass:(Class)arg1 initializer:(SEL)arg2;
- (id)onlyObject:(id /* block */)arg1;
- (id)onlyObjectOfClass:(Class)arg1;
- (id)onlyObjectOfClass:(Class)arg1 initializer:(SEL)arg2;
- (id)plistAtIndex:(int)arg1;
- (unsigned long long)rowNumber;
- (void)setDefaultUnarchivingAllowedClasses:(id)arg1;
- (short)shortAtIndex:(int)arg1;
- (struct sqlite3_value { }*)sqliteValueAtIndex:(int)arg1;
- (struct sqlite3_stmt { }*)stmt;
- (id)stringAtIndex:(int)arg1;
- (id)unarchivedObjectOfClass:(Class)arg1 atIndex:(int)arg2;
- (id)unarchivedObjectOfClasses:(id)arg1 atIndex:(int)arg2;
- (unsigned char)unsignedCharAtIndex:(int)arg1;
- (unsigned int)unsignedIntAtIndex:(int)arg1;
- (unsigned long long)unsignedIntegerAtIndex:(int)arg1;
- (unsigned long long)unsignedLongAtIndex:(int)arg1;
- (unsigned long long)unsignedLongLongAtIndex:(int)arg1;
- (unsigned short)unsignedShortAtIndex:(int)arg1;
- (id)uuidAtIndex:(int)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

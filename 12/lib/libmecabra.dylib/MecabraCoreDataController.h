<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>MecabraCoreDataController.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libmecabra.dylib/MecabraCoreDataController.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libmecabra.dylib
 */

@interface MecabraCoreDataController : NSObject {
    NSEntityDescription * _entityDescription;
    NSURL * _localURL;
    NSString * _localURLLastPartOfName;
    NSManagedObjectContext * _managedObjectContext;
    NSManagedObjectModel * _managedObjectModel;
    NSPersistentStoreCoordinator * _persistentStoreCoordinator;
    NSURL * _storeURL;
    NSArray * _storedElementsForMerge;
    NSString * _type;
}

@property (nonatomic, readonly) NSEntityDescription *entityDescription;
@property (nonatomic, readonly) NSURL *localInfoPlistURL;
@property (nonatomic, readonly) NSURL *localStoreURL;
@property (nonatomic, retain) NSURL *localURL;
@property (nonatomic, retain) NSManagedObjectContext *managedObjectContext;
@property (nonatomic, retain) NSManagedObjectModel *managedObjectModel;
@property (nonatomic, retain) NSPersistentStoreCoordinator *persistentStoreCoordinator;
@property (nonatomic, retain) NSURL *storeURL;
@property (nonatomic, retain) NSArray *storedElementsForMerge;
@property (nonatomic, retain) NSString *type;

+ (void)resetDatabaseWithType:(id)arg1 URL:(id)arg2;

- (void)addEntry:(id)arg1;
- (void)clearStoredMergeEntries;
- (id)coreDataUbiquityFolderURLforStore:(id)arg1;
- (id)databaseName;
- (id)databasePropertyForKey:(id)arg1;
- (void)dealloc;
- (void)deleteAllElements;
- (void)deleteAllMatchingEntries:(id)arg1;
- (void)deleteEntry:(id)arg1;
- (bool)dictionaryEntryHasAllRequiredKeys:(id)arg1;
- (id)dictionaryValueFromManagedObject:(id)arg1;
- (id)dictionaryValuesFromManagedObjects:(id)arg1;
- (id)entityDescription;
- (id)entityDescriptionForContext:(id)arg1;
- (id)entriesFromStrippedStoreURL:(id)arg1;
- (id)entriesToMerge;
- (id)initWithType:(id)arg1 URL:(id)arg2;
- (bool)isLogging;
- (id)localInfoPlistURL;
- (id)localStoreURL;
- (id)localURL;
- (id)locallyPresentUbiquitousFiles;
- (void)logEntry:(id)arg1 operationType:(id)arg2 extraInformation:(id)arg3;
- (void)logMessage:(id)arg1;
- (id)managedObjectContext;
- (id)managedObjectModel;
- (id)newPersistentStoreWithURL:(id)arg1 ubiquityContainerIdentifier:(id)arg2 managedObjectModel:(id)arg3;
- (id)persistentStoreCoordinator;
- (void)prepareURLForDatabaseFile:(id)arg1;
- (id)removeDuplicatesForEntry:(id)arg1 uniquingKeys:(id)arg2 sortDescriptors:(id)arg3 restrictToNumberOfElements:(unsigned long long)arg4 identifierKey:(id)arg5;
- (void)save;
- (id)searchResultsWithValueDictionary:(id)arg1;
- (id)searchResultsWithValueDictionary:(id)arg1 managedObjectContext:(id)arg2 sortDescriptors:(id)arg3;
- (id)searchResultsWithValueDictionary:(id)arg1 sortDescriptors:(id)arg2;
- (void)sendRemoteNotification;
- (void)setDatabaseProperty:(id)arg1 forKey:(id)arg2;
- (void)setLocalURL:(id)arg1;
- (void)setManagedObjectContext:(id)arg1;
- (void)setManagedObjectModel:(id)arg1;
- (void)setPersistentStoreCoordinator:(id)arg1;
- (void)setStoreURL:(id)arg1;
- (void)setStoredElementsForMerge:(id)arg1;
- (void)setType:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2 entry:(id)arg3;
- (void)setValuesForEntry:(id)arg1 uniquingKeys:(id)arg2;
- (bool)shouldSyncDatabase;
- (id)storeURL;
- (id)storedElementsForMerge;
- (bool)stripUbiquitousInformationFromStore:(id)arg1;
- (id)type;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

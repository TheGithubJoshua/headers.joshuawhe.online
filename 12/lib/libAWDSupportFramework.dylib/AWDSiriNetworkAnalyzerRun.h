<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDSiriNetworkAnalyzerRun.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDSiriNetworkAnalyzerRun.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDSiriNetworkAnalyzerRun : PBCodable <NSCopying> {
    bool  _analyzingSuccessfulRetry;
    unsigned long long  _gatewayPingDuration;
    unsigned int  _gatewayPingsDropped;
    unsigned int  _gatewayPingsSent;
    int  _gatewayStatus;
    struct { 
        unsigned int gatewayPingDuration : 1; 
        unsigned int knownURLLoadDuration : 1; 
        unsigned int siriSaltURLLoadDuration : 1; 
        unsigned int siriURLLoadDuration : 1; 
        unsigned int timestamp : 1; 
        unsigned int gatewayPingsDropped : 1; 
        unsigned int gatewayPingsSent : 1; 
        unsigned int gatewayStatus : 1; 
        unsigned int interface : 1; 
        unsigned int sendBufferBytesRemaining : 1; 
        unsigned int analyzingSuccessfulRetry : 1; 
        unsigned int isUserRequest : 1; 
        unsigned int wwanPreferred : 1; 
    }  _has;
    int  _interface;
    bool  _isUserRequest;
    unsigned long long  _knownURLLoadDuration;
    int  _sendBufferBytesRemaining;
    unsigned long long  _siriSaltURLLoadDuration;
    unsigned long long  _siriURLLoadDuration;
    unsigned long long  _timestamp;
    bool  _wwanPreferred;
}

@property (nonatomic) bool analyzingSuccessfulRetry;
@property (nonatomic) unsigned long long gatewayPingDuration;
@property (nonatomic) unsigned int gatewayPingsDropped;
@property (nonatomic) unsigned int gatewayPingsSent;
@property (nonatomic) int gatewayStatus;
@property (nonatomic) bool hasAnalyzingSuccessfulRetry;
@property (nonatomic) bool hasGatewayPingDuration;
@property (nonatomic) bool hasGatewayPingsDropped;
@property (nonatomic) bool hasGatewayPingsSent;
@property (nonatomic) bool hasGatewayStatus;
@property (nonatomic) bool hasInterface;
@property (nonatomic) bool hasIsUserRequest;
@property (nonatomic) bool hasKnownURLLoadDuration;
@property (nonatomic) bool hasSendBufferBytesRemaining;
@property (nonatomic) bool hasSiriSaltURLLoadDuration;
@property (nonatomic) bool hasSiriURLLoadDuration;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasWwanPreferred;
@property (nonatomic) int interface;
@property (nonatomic) bool isUserRequest;
@property (nonatomic) unsigned long long knownURLLoadDuration;
@property (nonatomic) int sendBufferBytesRemaining;
@property (nonatomic) unsigned long long siriSaltURLLoadDuration;
@property (nonatomic) unsigned long long siriURLLoadDuration;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) bool wwanPreferred;

- (bool)analyzingSuccessfulRetry;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned long long)gatewayPingDuration;
- (unsigned int)gatewayPingsDropped;
- (unsigned int)gatewayPingsSent;
- (int)gatewayStatus;
- (bool)hasAnalyzingSuccessfulRetry;
- (bool)hasGatewayPingDuration;
- (bool)hasGatewayPingsDropped;
- (bool)hasGatewayPingsSent;
- (bool)hasGatewayStatus;
- (bool)hasInterface;
- (bool)hasIsUserRequest;
- (bool)hasKnownURLLoadDuration;
- (bool)hasSendBufferBytesRemaining;
- (bool)hasSiriSaltURLLoadDuration;
- (bool)hasSiriURLLoadDuration;
- (bool)hasTimestamp;
- (bool)hasWwanPreferred;
- (unsigned long long)hash;
- (int)interface;
- (bool)isEqual:(id)arg1;
- (bool)isUserRequest;
- (unsigned long long)knownURLLoadDuration;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (int)sendBufferBytesRemaining;
- (void)setAnalyzingSuccessfulRetry:(bool)arg1;
- (void)setGatewayPingDuration:(unsigned long long)arg1;
- (void)setGatewayPingsDropped:(unsigned int)arg1;
- (void)setGatewayPingsSent:(unsigned int)arg1;
- (void)setGatewayStatus:(int)arg1;
- (void)setHasAnalyzingSuccessfulRetry:(bool)arg1;
- (void)setHasGatewayPingDuration:(bool)arg1;
- (void)setHasGatewayPingsDropped:(bool)arg1;
- (void)setHasGatewayPingsSent:(bool)arg1;
- (void)setHasGatewayStatus:(bool)arg1;
- (void)setHasInterface:(bool)arg1;
- (void)setHasIsUserRequest:(bool)arg1;
- (void)setHasKnownURLLoadDuration:(bool)arg1;
- (void)setHasSendBufferBytesRemaining:(bool)arg1;
- (void)setHasSiriSaltURLLoadDuration:(bool)arg1;
- (void)setHasSiriURLLoadDuration:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasWwanPreferred:(bool)arg1;
- (void)setInterface:(int)arg1;
- (void)setIsUserRequest:(bool)arg1;
- (void)setKnownURLLoadDuration:(unsigned long long)arg1;
- (void)setSendBufferBytesRemaining:(int)arg1;
- (void)setSiriSaltURLLoadDuration:(unsigned long long)arg1;
- (void)setSiriURLLoadDuration:(unsigned long long)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setWwanPreferred:(bool)arg1;
- (unsigned long long)siriSaltURLLoadDuration;
- (unsigned long long)siriURLLoadDuration;
- (unsigned long long)timestamp;
- (void)writeTo:(id)arg1;
- (bool)wwanPreferred;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

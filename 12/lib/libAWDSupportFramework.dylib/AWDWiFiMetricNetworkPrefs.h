<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDWiFiMetricNetworkPrefs.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDWiFiMetricNetworkPrefs.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWiFiMetricNetworkPrefs : PBCodable <NSCopying> {
    unsigned int  _adhocNetsCount;
    unsigned int  _applePersHotspotNetsCount;
    unsigned int  _atjCanceledCount;
    bool  _atjEnabled;
    unsigned int  _atjUsedCount;
    unsigned int  _captiveNetsCount;
    unsigned int  _eapNetsCount;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int adhocNetsCount : 1; 
        unsigned int applePersHotspotNetsCount : 1; 
        unsigned int atjCanceledCount : 1; 
        unsigned int atjUsedCount : 1; 
        unsigned int captiveNetsCount : 1; 
        unsigned int eapNetsCount : 1; 
        unsigned int hiddenNetsCount : 1; 
        unsigned int mostUsedCount : 1; 
        unsigned int openNonCaptiveNetsCount : 1; 
        unsigned int prefNetsCount : 1; 
        unsigned int wapiNetsCount : 1; 
        unsigned int wepNetsCount : 1; 
        unsigned int wpaNetsCount : 1; 
        unsigned int atjEnabled : 1; 
    }  _has;
    unsigned int  _hiddenNetsCount;
    unsigned int  _mostUsedCount;
    NSMutableArray * _mostUsedNetworks;
    unsigned int  _openNonCaptiveNetsCount;
    unsigned int  _prefNetsCount;
    unsigned long long  _timestamp;
    unsigned int  _wapiNetsCount;
    unsigned int  _wepNetsCount;
    unsigned int  _wpaNetsCount;
}

@property (nonatomic) unsigned int adhocNetsCount;
@property (nonatomic) unsigned int applePersHotspotNetsCount;
@property (nonatomic) unsigned int atjCanceledCount;
@property (nonatomic) bool atjEnabled;
@property (nonatomic) unsigned int atjUsedCount;
@property (nonatomic) unsigned int captiveNetsCount;
@property (nonatomic) unsigned int eapNetsCount;
@property (nonatomic) bool hasAdhocNetsCount;
@property (nonatomic) bool hasApplePersHotspotNetsCount;
@property (nonatomic) bool hasAtjCanceledCount;
@property (nonatomic) bool hasAtjEnabled;
@property (nonatomic) bool hasAtjUsedCount;
@property (nonatomic) bool hasCaptiveNetsCount;
@property (nonatomic) bool hasEapNetsCount;
@property (nonatomic) bool hasHiddenNetsCount;
@property (nonatomic) bool hasMostUsedCount;
@property (nonatomic) bool hasOpenNonCaptiveNetsCount;
@property (nonatomic) bool hasPrefNetsCount;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasWapiNetsCount;
@property (nonatomic) bool hasWepNetsCount;
@property (nonatomic) bool hasWpaNetsCount;
@property (nonatomic) unsigned int hiddenNetsCount;
@property (nonatomic) unsigned int mostUsedCount;
@property (nonatomic, retain) NSMutableArray *mostUsedNetworks;
@property (nonatomic) unsigned int openNonCaptiveNetsCount;
@property (nonatomic) unsigned int prefNetsCount;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned int wapiNetsCount;
@property (nonatomic) unsigned int wepNetsCount;
@property (nonatomic) unsigned int wpaNetsCount;

+ (Class)mostUsedNetworksType;

- (void)addMostUsedNetworks:(id)arg1;
- (unsigned int)adhocNetsCount;
- (unsigned int)applePersHotspotNetsCount;
- (unsigned int)atjCanceledCount;
- (bool)atjEnabled;
- (unsigned int)atjUsedCount;
- (unsigned int)captiveNetsCount;
- (void)clearMostUsedNetworks;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)eapNetsCount;
- (bool)hasAdhocNetsCount;
- (bool)hasApplePersHotspotNetsCount;
- (bool)hasAtjCanceledCount;
- (bool)hasAtjEnabled;
- (bool)hasAtjUsedCount;
- (bool)hasCaptiveNetsCount;
- (bool)hasEapNetsCount;
- (bool)hasHiddenNetsCount;
- (bool)hasMostUsedCount;
- (bool)hasOpenNonCaptiveNetsCount;
- (bool)hasPrefNetsCount;
- (bool)hasTimestamp;
- (bool)hasWapiNetsCount;
- (bool)hasWepNetsCount;
- (bool)hasWpaNetsCount;
- (unsigned long long)hash;
- (unsigned int)hiddenNetsCount;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned int)mostUsedCount;
- (id)mostUsedNetworks;
- (id)mostUsedNetworksAtIndex:(unsigned long long)arg1;
- (unsigned long long)mostUsedNetworksCount;
- (unsigned int)openNonCaptiveNetsCount;
- (unsigned int)prefNetsCount;
- (bool)readFrom:(id)arg1;
- (void)setAdhocNetsCount:(unsigned int)arg1;
- (void)setApplePersHotspotNetsCount:(unsigned int)arg1;
- (void)setAtjCanceledCount:(unsigned int)arg1;
- (void)setAtjEnabled:(bool)arg1;
- (void)setAtjUsedCount:(unsigned int)arg1;
- (void)setCaptiveNetsCount:(unsigned int)arg1;
- (void)setEapNetsCount:(unsigned int)arg1;
- (void)setHasAdhocNetsCount:(bool)arg1;
- (void)setHasApplePersHotspotNetsCount:(bool)arg1;
- (void)setHasAtjCanceledCount:(bool)arg1;
- (void)setHasAtjEnabled:(bool)arg1;
- (void)setHasAtjUsedCount:(bool)arg1;
- (void)setHasCaptiveNetsCount:(bool)arg1;
- (void)setHasEapNetsCount:(bool)arg1;
- (void)setHasHiddenNetsCount:(bool)arg1;
- (void)setHasMostUsedCount:(bool)arg1;
- (void)setHasOpenNonCaptiveNetsCount:(bool)arg1;
- (void)setHasPrefNetsCount:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasWapiNetsCount:(bool)arg1;
- (void)setHasWepNetsCount:(bool)arg1;
- (void)setHasWpaNetsCount:(bool)arg1;
- (void)setHiddenNetsCount:(unsigned int)arg1;
- (void)setMostUsedCount:(unsigned int)arg1;
- (void)setMostUsedNetworks:(id)arg1;
- (void)setOpenNonCaptiveNetsCount:(unsigned int)arg1;
- (void)setPrefNetsCount:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setWapiNetsCount:(unsigned int)arg1;
- (void)setWepNetsCount:(unsigned int)arg1;
- (void)setWpaNetsCount:(unsigned int)arg1;
- (unsigned long long)timestamp;
- (unsigned int)wapiNetsCount;
- (unsigned int)wepNetsCount;
- (unsigned int)wpaNetsCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

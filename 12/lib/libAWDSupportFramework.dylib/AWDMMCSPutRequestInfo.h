<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDMMCSPutRequestInfo.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDMMCSPutRequestInfo.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDMMCSPutRequestInfo : PBCodable <NSCopying> {
    bool  _allItemsFailed;
    bool  _allItemsSuccessful;
    NSMutableArray * _authHttpInfos;
    NSMutableArray * _cancelErrors;
    int  _cancelledErrorCode;
    NSString * _cancelledErrorDomain;
    NSMutableArray * _chunkingInfos;
    int  _chunksUploaded;
    NSString * _ckContainerId;
    NSString * _clientId;
    NSMutableArray * _completeHttpInfos;
    NSMutableArray * _containerHttpInfos;
    long long  _duration;
    NSMutableArray * _errors;
    struct { 
        unsigned int duration : 1; 
        unsigned int startTime : 1; 
        unsigned int timestamp : 1; 
        unsigned int cancelledErrorCode : 1; 
        unsigned int chunksUploaded : 1; 
        unsigned int itemCount : 1; 
        unsigned int itemCountFailed : 1; 
        unsigned int itemCountSuccessful : 1; 
        unsigned int itemsAlreadyPresentCount : 1; 
        unsigned int itemsNotPresentCount : 1; 
        unsigned int itemsPartiallyPresentCount : 1; 
        unsigned int requestErrorCode : 1; 
        unsigned int allItemsFailed : 1; 
        unsigned int allItemsSuccessful : 1; 
    }  _has;
    int  _itemCount;
    unsigned int  _itemCountFailed;
    unsigned int  _itemCountSuccessful;
    int  _itemsAlreadyPresentCount;
    int  _itemsNotPresentCount;
    int  _itemsPartiallyPresentCount;
    int  _requestErrorCode;
    NSString * _requestErrorDomain;
    long long  _startTime;
    long long  _timestamp;
}

@property (nonatomic) bool allItemsFailed;
@property (nonatomic) bool allItemsSuccessful;
@property (nonatomic, retain) NSMutableArray *authHttpInfos;
@property (nonatomic, retain) NSMutableArray *cancelErrors;
@property (nonatomic) int cancelledErrorCode;
@property (nonatomic, retain) NSString *cancelledErrorDomain;
@property (nonatomic, retain) NSMutableArray *chunkingInfos;
@property (nonatomic) int chunksUploaded;
@property (nonatomic, retain) NSString *ckContainerId;
@property (nonatomic, retain) NSString *clientId;
@property (nonatomic, retain) NSMutableArray *completeHttpInfos;
@property (nonatomic, retain) NSMutableArray *containerHttpInfos;
@property (nonatomic) long long duration;
@property (nonatomic, retain) NSMutableArray *errors;
@property (nonatomic) bool hasAllItemsFailed;
@property (nonatomic) bool hasAllItemsSuccessful;
@property (nonatomic) bool hasCancelledErrorCode;
@property (nonatomic, readonly) bool hasCancelledErrorDomain;
@property (nonatomic) bool hasChunksUploaded;
@property (nonatomic, readonly) bool hasCkContainerId;
@property (nonatomic, readonly) bool hasClientId;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasItemCount;
@property (nonatomic) bool hasItemCountFailed;
@property (nonatomic) bool hasItemCountSuccessful;
@property (nonatomic) bool hasItemsAlreadyPresentCount;
@property (nonatomic) bool hasItemsNotPresentCount;
@property (nonatomic) bool hasItemsPartiallyPresentCount;
@property (nonatomic) bool hasRequestErrorCode;
@property (nonatomic, readonly) bool hasRequestErrorDomain;
@property (nonatomic) bool hasStartTime;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) int itemCount;
@property (nonatomic) unsigned int itemCountFailed;
@property (nonatomic) unsigned int itemCountSuccessful;
@property (nonatomic) int itemsAlreadyPresentCount;
@property (nonatomic) int itemsNotPresentCount;
@property (nonatomic) int itemsPartiallyPresentCount;
@property (nonatomic) int requestErrorCode;
@property (nonatomic, retain) NSString *requestErrorDomain;
@property (nonatomic) long long startTime;
@property (nonatomic) long long timestamp;

+ (Class)authHttpInfosType;
+ (Class)cancelErrorType;
+ (Class)chunkingInfosType;
+ (Class)completeHttpInfosType;
+ (Class)containerHttpInfosType;
+ (Class)errorType;

- (void)addAuthHttpInfos:(id)arg1;
- (void)addCancelError:(id)arg1;
- (void)addChunkingInfos:(id)arg1;
- (void)addCompleteHttpInfos:(id)arg1;
- (void)addContainerHttpInfos:(id)arg1;
- (void)addError:(id)arg1;
- (bool)allItemsFailed;
- (bool)allItemsSuccessful;
- (id)authHttpInfos;
- (id)authHttpInfosAtIndex:(unsigned long long)arg1;
- (unsigned long long)authHttpInfosCount;
- (id)cancelErrorAtIndex:(unsigned long long)arg1;
- (id)cancelErrors;
- (unsigned long long)cancelErrorsCount;
- (int)cancelledErrorCode;
- (id)cancelledErrorDomain;
- (id)chunkingInfos;
- (id)chunkingInfosAtIndex:(unsigned long long)arg1;
- (unsigned long long)chunkingInfosCount;
- (int)chunksUploaded;
- (id)ckContainerId;
- (void)clearAuthHttpInfos;
- (void)clearCancelErrors;
- (void)clearChunkingInfos;
- (void)clearCompleteHttpInfos;
- (void)clearContainerHttpInfos;
- (void)clearErrors;
- (id)clientId;
- (id)completeHttpInfos;
- (id)completeHttpInfosAtIndex:(unsigned long long)arg1;
- (unsigned long long)completeHttpInfosCount;
- (id)containerHttpInfos;
- (id)containerHttpInfosAtIndex:(unsigned long long)arg1;
- (unsigned long long)containerHttpInfosCount;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (long long)duration;
- (id)errorAtIndex:(unsigned long long)arg1;
- (id)errors;
- (unsigned long long)errorsCount;
- (bool)hasAllItemsFailed;
- (bool)hasAllItemsSuccessful;
- (bool)hasCancelledErrorCode;
- (bool)hasCancelledErrorDomain;
- (bool)hasChunksUploaded;
- (bool)hasCkContainerId;
- (bool)hasClientId;
- (bool)hasDuration;
- (bool)hasItemCount;
- (bool)hasItemCountFailed;
- (bool)hasItemCountSuccessful;
- (bool)hasItemsAlreadyPresentCount;
- (bool)hasItemsNotPresentCount;
- (bool)hasItemsPartiallyPresentCount;
- (bool)hasRequestErrorCode;
- (bool)hasRequestErrorDomain;
- (bool)hasStartTime;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (int)itemCount;
- (unsigned int)itemCountFailed;
- (unsigned int)itemCountSuccessful;
- (int)itemsAlreadyPresentCount;
- (int)itemsNotPresentCount;
- (int)itemsPartiallyPresentCount;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (int)requestErrorCode;
- (id)requestErrorDomain;
- (void)setAllItemsFailed:(bool)arg1;
- (void)setAllItemsSuccessful:(bool)arg1;
- (void)setAuthHttpInfos:(id)arg1;
- (void)setCancelErrors:(id)arg1;
- (void)setCancelledErrorCode:(int)arg1;
- (void)setCancelledErrorDomain:(id)arg1;
- (void)setChunkingInfos:(id)arg1;
- (void)setChunksUploaded:(int)arg1;
- (void)setCkContainerId:(id)arg1;
- (void)setClientId:(id)arg1;
- (void)setCompleteHttpInfos:(id)arg1;
- (void)setContainerHttpInfos:(id)arg1;
- (void)setDuration:(long long)arg1;
- (void)setErrors:(id)arg1;
- (void)setHasAllItemsFailed:(bool)arg1;
- (void)setHasAllItemsSuccessful:(bool)arg1;
- (void)setHasCancelledErrorCode:(bool)arg1;
- (void)setHasChunksUploaded:(bool)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasItemCount:(bool)arg1;
- (void)setHasItemCountFailed:(bool)arg1;
- (void)setHasItemCountSuccessful:(bool)arg1;
- (void)setHasItemsAlreadyPresentCount:(bool)arg1;
- (void)setHasItemsNotPresentCount:(bool)arg1;
- (void)setHasItemsPartiallyPresentCount:(bool)arg1;
- (void)setHasRequestErrorCode:(bool)arg1;
- (void)setHasStartTime:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setItemCount:(int)arg1;
- (void)setItemCountFailed:(unsigned int)arg1;
- (void)setItemCountSuccessful:(unsigned int)arg1;
- (void)setItemsAlreadyPresentCount:(int)arg1;
- (void)setItemsNotPresentCount:(int)arg1;
- (void)setItemsPartiallyPresentCount:(int)arg1;
- (void)setRequestErrorCode:(int)arg1;
- (void)setRequestErrorDomain:(id)arg1;
- (void)setStartTime:(long long)arg1;
- (void)setTimestamp:(long long)arg1;
- (long long)startTime;
- (long long)timestamp;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

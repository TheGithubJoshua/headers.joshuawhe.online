<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDWRMFacetimeRecommendation.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDWRMFacetimeRecommendation.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWRMFacetimeRecommendation : PBCodable <NSCopying> {
    unsigned int  _bssLoad;
    bool  _captiveNetworks;
    unsigned int  _cca;
    unsigned int  _counter;
    unsigned int  _dataLQM;
    unsigned int  _facetimeAction;
    unsigned int  _facetimePacketLoss;
    unsigned int  _facetimeTimeDelay;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int wifiRssi : 1; 
        unsigned int wifiSNR : 1; 
        unsigned int bssLoad : 1; 
        unsigned int cca : 1; 
        unsigned int counter : 1; 
        unsigned int dataLQM : 1; 
        unsigned int facetimeAction : 1; 
        unsigned int facetimePacketLoss : 1; 
        unsigned int facetimeTimeDelay : 1; 
        unsigned int qbssLoad : 1; 
        unsigned int signalBar : 1; 
        unsigned int stationCount : 1; 
        unsigned int voiceLQM : 1; 
        unsigned int wifiEstimatedBandwitdh : 1; 
        unsigned int wifiRxPhyRate : 1; 
        unsigned int wifiRxRetry : 1; 
        unsigned int wifiTxPER : 1; 
        unsigned int wifiTxPhyRate : 1; 
        unsigned int captiveNetworks : 1; 
    }  _has;
    NSString * _iRATRecommendation;
    NSString * _iRATRecommendationReason;
    unsigned int  _qbssLoad;
    NSString * _ratType;
    unsigned int  _signalBar;
    unsigned int  _stationCount;
    unsigned long long  _timestamp;
    unsigned int  _voiceLQM;
    unsigned int  _wifiEstimatedBandwitdh;
    long long  _wifiRssi;
    unsigned int  _wifiRxPhyRate;
    unsigned int  _wifiRxRetry;
    long long  _wifiSNR;
    unsigned int  _wifiTxPER;
    unsigned int  _wifiTxPhyRate;
}

@property (nonatomic) unsigned int bssLoad;
@property (nonatomic) bool captiveNetworks;
@property (nonatomic) unsigned int cca;
@property (nonatomic) unsigned int counter;
@property (nonatomic) unsigned int dataLQM;
@property (nonatomic) unsigned int facetimeAction;
@property (nonatomic) unsigned int facetimePacketLoss;
@property (nonatomic) unsigned int facetimeTimeDelay;
@property (nonatomic) bool hasBssLoad;
@property (nonatomic) bool hasCaptiveNetworks;
@property (nonatomic) bool hasCca;
@property (nonatomic) bool hasCounter;
@property (nonatomic) bool hasDataLQM;
@property (nonatomic) bool hasFacetimeAction;
@property (nonatomic) bool hasFacetimePacketLoss;
@property (nonatomic) bool hasFacetimeTimeDelay;
@property (nonatomic, readonly) bool hasIRATRecommendation;
@property (nonatomic, readonly) bool hasIRATRecommendationReason;
@property (nonatomic) bool hasQbssLoad;
@property (nonatomic, readonly) bool hasRatType;
@property (nonatomic) bool hasSignalBar;
@property (nonatomic) bool hasStationCount;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasVoiceLQM;
@property (nonatomic) bool hasWifiEstimatedBandwitdh;
@property (nonatomic) bool hasWifiRssi;
@property (nonatomic) bool hasWifiRxPhyRate;
@property (nonatomic) bool hasWifiRxRetry;
@property (nonatomic) bool hasWifiSNR;
@property (nonatomic) bool hasWifiTxPER;
@property (nonatomic) bool hasWifiTxPhyRate;
@property (nonatomic, retain) NSString *iRATRecommendation;
@property (nonatomic, retain) NSString *iRATRecommendationReason;
@property (nonatomic) unsigned int qbssLoad;
@property (nonatomic, retain) NSString *ratType;
@property (nonatomic) unsigned int signalBar;
@property (nonatomic) unsigned int stationCount;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned int voiceLQM;
@property (nonatomic) unsigned int wifiEstimatedBandwitdh;
@property (nonatomic) long long wifiRssi;
@property (nonatomic) unsigned int wifiRxPhyRate;
@property (nonatomic) unsigned int wifiRxRetry;
@property (nonatomic) long long wifiSNR;
@property (nonatomic) unsigned int wifiTxPER;
@property (nonatomic) unsigned int wifiTxPhyRate;

- (unsigned int)bssLoad;
- (bool)captiveNetworks;
- (unsigned int)cca;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned int)counter;
- (unsigned int)dataLQM;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)facetimeAction;
- (unsigned int)facetimePacketLoss;
- (unsigned int)facetimeTimeDelay;
- (bool)hasBssLoad;
- (bool)hasCaptiveNetworks;
- (bool)hasCca;
- (bool)hasCounter;
- (bool)hasDataLQM;
- (bool)hasFacetimeAction;
- (bool)hasFacetimePacketLoss;
- (bool)hasFacetimeTimeDelay;
- (bool)hasIRATRecommendation;
- (bool)hasIRATRecommendationReason;
- (bool)hasQbssLoad;
- (bool)hasRatType;
- (bool)hasSignalBar;
- (bool)hasStationCount;
- (bool)hasTimestamp;
- (bool)hasVoiceLQM;
- (bool)hasWifiEstimatedBandwitdh;
- (bool)hasWifiRssi;
- (bool)hasWifiRxPhyRate;
- (bool)hasWifiRxRetry;
- (bool)hasWifiSNR;
- (bool)hasWifiTxPER;
- (bool)hasWifiTxPhyRate;
- (unsigned long long)hash;
- (id)iRATRecommendation;
- (id)iRATRecommendationReason;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned int)qbssLoad;
- (id)ratType;
- (bool)readFrom:(id)arg1;
- (void)setBssLoad:(unsigned int)arg1;
- (void)setCaptiveNetworks:(bool)arg1;
- (void)setCca:(unsigned int)arg1;
- (void)setCounter:(unsigned int)arg1;
- (void)setDataLQM:(unsigned int)arg1;
- (void)setFacetimeAction:(unsigned int)arg1;
- (void)setFacetimePacketLoss:(unsigned int)arg1;
- (void)setFacetimeTimeDelay:(unsigned int)arg1;
- (void)setHasBssLoad:(bool)arg1;
- (void)setHasCaptiveNetworks:(bool)arg1;
- (void)setHasCca:(bool)arg1;
- (void)setHasCounter:(bool)arg1;
- (void)setHasDataLQM:(bool)arg1;
- (void)setHasFacetimeAction:(bool)arg1;
- (void)setHasFacetimePacketLoss:(bool)arg1;
- (void)setHasFacetimeTimeDelay:(bool)arg1;
- (void)setHasQbssLoad:(bool)arg1;
- (void)setHasSignalBar:(bool)arg1;
- (void)setHasStationCount:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasVoiceLQM:(bool)arg1;
- (void)setHasWifiEstimatedBandwitdh:(bool)arg1;
- (void)setHasWifiRssi:(bool)arg1;
- (void)setHasWifiRxPhyRate:(bool)arg1;
- (void)setHasWifiRxRetry:(bool)arg1;
- (void)setHasWifiSNR:(bool)arg1;
- (void)setHasWifiTxPER:(bool)arg1;
- (void)setHasWifiTxPhyRate:(bool)arg1;
- (void)setIRATRecommendation:(id)arg1;
- (void)setIRATRecommendationReason:(id)arg1;
- (void)setQbssLoad:(unsigned int)arg1;
- (void)setRatType:(id)arg1;
- (void)setSignalBar:(unsigned int)arg1;
- (void)setStationCount:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setVoiceLQM:(unsigned int)arg1;
- (void)setWifiEstimatedBandwitdh:(unsigned int)arg1;
- (void)setWifiRssi:(long long)arg1;
- (void)setWifiRxPhyRate:(unsigned int)arg1;
- (void)setWifiRxRetry:(unsigned int)arg1;
- (void)setWifiSNR:(long long)arg1;
- (void)setWifiTxPER:(unsigned int)arg1;
- (void)setWifiTxPhyRate:(unsigned int)arg1;
- (unsigned int)signalBar;
- (unsigned int)stationCount;
- (unsigned long long)timestamp;
- (unsigned int)voiceLQM;
- (unsigned int)wifiEstimatedBandwitdh;
- (long long)wifiRssi;
- (unsigned int)wifiRxPhyRate;
- (unsigned int)wifiRxRetry;
- (long long)wifiSNR;
- (unsigned int)wifiTxPER;
- (unsigned int)wifiTxPhyRate;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

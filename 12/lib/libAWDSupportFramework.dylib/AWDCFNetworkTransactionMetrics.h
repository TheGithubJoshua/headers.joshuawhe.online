<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDCFNetworkTransactionMetrics.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDCFNetworkTransactionMetrics.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDCFNetworkTransactionMetrics : PBCodable <NSCopying> {
    NSString * _connectionUUID;
    struct { 
        unsigned int requestEnd : 1; 
        unsigned int requestStart : 1; 
        unsigned int responseEnd : 1; 
        unsigned int responseStart : 1; 
        unsigned int timestamp : 1; 
        unsigned int totalBytesRead : 1; 
        unsigned int totalBytesWritten : 1; 
        unsigned int networkLoadType : 1; 
        unsigned int networkProtocolName : 1; 
        unsigned int isRedirected : 1; 
        unsigned int reusedConnection : 1; 
    }  _has;
    bool  _isRedirected;
    int  _networkLoadType;
    int  _networkProtocolName;
    unsigned long long  _requestEnd;
    unsigned long long  _requestStart;
    unsigned long long  _responseEnd;
    unsigned long long  _responseStart;
    bool  _reusedConnection;
    unsigned long long  _timestamp;
    unsigned long long  _totalBytesRead;
    unsigned long long  _totalBytesWritten;
}

@property (nonatomic, retain) NSString *connectionUUID;
@property (nonatomic, readonly) bool hasConnectionUUID;
@property (nonatomic) bool hasIsRedirected;
@property (nonatomic) bool hasNetworkLoadType;
@property (nonatomic) bool hasNetworkProtocolName;
@property (nonatomic) bool hasRequestEnd;
@property (nonatomic) bool hasRequestStart;
@property (nonatomic) bool hasResponseEnd;
@property (nonatomic) bool hasResponseStart;
@property (nonatomic) bool hasReusedConnection;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasTotalBytesRead;
@property (nonatomic) bool hasTotalBytesWritten;
@property (nonatomic) bool isRedirected;
@property (nonatomic) int networkLoadType;
@property (nonatomic) int networkProtocolName;
@property (nonatomic) unsigned long long requestEnd;
@property (nonatomic) unsigned long long requestStart;
@property (nonatomic) unsigned long long responseEnd;
@property (nonatomic) unsigned long long responseStart;
@property (nonatomic) bool reusedConnection;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned long long totalBytesRead;
@property (nonatomic) unsigned long long totalBytesWritten;

- (int)StringAsNetworkLoadType:(id)arg1;
- (int)StringAsNetworkProtocolName:(id)arg1;
- (id)connectionUUID;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasConnectionUUID;
- (bool)hasIsRedirected;
- (bool)hasNetworkLoadType;
- (bool)hasNetworkProtocolName;
- (bool)hasRequestEnd;
- (bool)hasRequestStart;
- (bool)hasResponseEnd;
- (bool)hasResponseStart;
- (bool)hasReusedConnection;
- (bool)hasTimestamp;
- (bool)hasTotalBytesRead;
- (bool)hasTotalBytesWritten;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (bool)isRedirected;
- (void)mergeFrom:(id)arg1;
- (int)networkLoadType;
- (id)networkLoadTypeAsString:(int)arg1;
- (int)networkProtocolName;
- (id)networkProtocolNameAsString:(int)arg1;
- (bool)readFrom:(id)arg1;
- (unsigned long long)requestEnd;
- (unsigned long long)requestStart;
- (unsigned long long)responseEnd;
- (unsigned long long)responseStart;
- (bool)reusedConnection;
- (void)setConnectionUUID:(id)arg1;
- (void)setHasIsRedirected:(bool)arg1;
- (void)setHasNetworkLoadType:(bool)arg1;
- (void)setHasNetworkProtocolName:(bool)arg1;
- (void)setHasRequestEnd:(bool)arg1;
- (void)setHasRequestStart:(bool)arg1;
- (void)setHasResponseEnd:(bool)arg1;
- (void)setHasResponseStart:(bool)arg1;
- (void)setHasReusedConnection:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasTotalBytesRead:(bool)arg1;
- (void)setHasTotalBytesWritten:(bool)arg1;
- (void)setIsRedirected:(bool)arg1;
- (void)setNetworkLoadType:(int)arg1;
- (void)setNetworkProtocolName:(int)arg1;
- (void)setRequestEnd:(unsigned long long)arg1;
- (void)setRequestStart:(unsigned long long)arg1;
- (void)setResponseEnd:(unsigned long long)arg1;
- (void)setResponseStart:(unsigned long long)arg1;
- (void)setReusedConnection:(bool)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setTotalBytesRead:(unsigned long long)arg1;
- (void)setTotalBytesWritten:(unsigned long long)arg1;
- (unsigned long long)timestamp;
- (unsigned long long)totalBytesRead;
- (unsigned long long)totalBytesWritten;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

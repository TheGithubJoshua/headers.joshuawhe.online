<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDIDSOutgoingMessageDurationTrace.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDIDSOutgoingMessageDurationTrace.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDIDSOutgoingMessageDurationTrace : PBCodable <NSCopying> {
    unsigned int  _aggregatedMessageSendCount;
    unsigned int  _avgAggregatedMessageSendDuration;
    unsigned int  _avgEncryptionDuration;
    unsigned int  _command;
    unsigned int  _compressPayloadDuration;
    unsigned int  _compressPayloadStart;
    unsigned long long  _compressedMessageSize;
    unsigned int  _encryptionCount;
    struct { 
        unsigned int compressedMessageSize : 1; 
        unsigned int messagesOnQueue : 1; 
        unsigned int timestamp : 1; 
        unsigned int uncompressedMessageSize : 1; 
        unsigned int aggregatedMessageSendCount : 1; 
        unsigned int avgAggregatedMessageSendDuration : 1; 
        unsigned int avgEncryptionDuration : 1; 
        unsigned int command : 1; 
        unsigned int compressPayloadDuration : 1; 
        unsigned int compressPayloadStart : 1; 
        unsigned int encryptionCount : 1; 
        unsigned int iDQueryDuration : 1; 
        unsigned int iDQueryStart : 1; 
        unsigned int messageOnQueueDuration : 1; 
        unsigned int messageOnQueueStart : 1; 
        unsigned int priority : 1; 
        unsigned int sendToDaemonDuration : 1; 
        unsigned int sendToDaemonStart : 1; 
        unsigned int storeInDatabaseDuration : 1; 
        unsigned int storeInDatabaseStart : 1; 
    }  _has;
    unsigned int  _iDQueryDuration;
    unsigned int  _iDQueryStart;
    unsigned int  _messageOnQueueDuration;
    unsigned int  _messageOnQueueStart;
    unsigned long long  _messagesOnQueue;
    unsigned int  _priority;
    unsigned int  _sendToDaemonDuration;
    unsigned int  _sendToDaemonStart;
    NSString * _service;
    unsigned int  _storeInDatabaseDuration;
    unsigned int  _storeInDatabaseStart;
    unsigned long long  _timestamp;
    unsigned long long  _uncompressedMessageSize;
}

@property (nonatomic) unsigned int aggregatedMessageSendCount;
@property (nonatomic) unsigned int avgAggregatedMessageSendDuration;
@property (nonatomic) unsigned int avgEncryptionDuration;
@property (nonatomic) unsigned int command;
@property (nonatomic) unsigned int compressPayloadDuration;
@property (nonatomic) unsigned int compressPayloadStart;
@property (nonatomic) unsigned long long compressedMessageSize;
@property (nonatomic) unsigned int encryptionCount;
@property (nonatomic) bool hasAggregatedMessageSendCount;
@property (nonatomic) bool hasAvgAggregatedMessageSendDuration;
@property (nonatomic) bool hasAvgEncryptionDuration;
@property (nonatomic) bool hasCommand;
@property (nonatomic) bool hasCompressPayloadDuration;
@property (nonatomic) bool hasCompressPayloadStart;
@property (nonatomic) bool hasCompressedMessageSize;
@property (nonatomic) bool hasEncryptionCount;
@property (nonatomic) bool hasIDQueryDuration;
@property (nonatomic) bool hasIDQueryStart;
@property (nonatomic) bool hasMessageOnQueueDuration;
@property (nonatomic) bool hasMessageOnQueueStart;
@property (nonatomic) bool hasMessagesOnQueue;
@property (nonatomic) bool hasPriority;
@property (nonatomic) bool hasSendToDaemonDuration;
@property (nonatomic) bool hasSendToDaemonStart;
@property (nonatomic, readonly) bool hasService;
@property (nonatomic) bool hasStoreInDatabaseDuration;
@property (nonatomic) bool hasStoreInDatabaseStart;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasUncompressedMessageSize;
@property (nonatomic) unsigned int iDQueryDuration;
@property (nonatomic) unsigned int iDQueryStart;
@property (nonatomic) unsigned int messageOnQueueDuration;
@property (nonatomic) unsigned int messageOnQueueStart;
@property (nonatomic) unsigned long long messagesOnQueue;
@property (nonatomic) unsigned int priority;
@property (nonatomic) unsigned int sendToDaemonDuration;
@property (nonatomic) unsigned int sendToDaemonStart;
@property (nonatomic, retain) NSString *service;
@property (nonatomic) unsigned int storeInDatabaseDuration;
@property (nonatomic) unsigned int storeInDatabaseStart;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned long long uncompressedMessageSize;

- (unsigned int)aggregatedMessageSendCount;
- (unsigned int)avgAggregatedMessageSendDuration;
- (unsigned int)avgEncryptionDuration;
- (unsigned int)command;
- (unsigned int)compressPayloadDuration;
- (unsigned int)compressPayloadStart;
- (unsigned long long)compressedMessageSize;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)encryptionCount;
- (bool)hasAggregatedMessageSendCount;
- (bool)hasAvgAggregatedMessageSendDuration;
- (bool)hasAvgEncryptionDuration;
- (bool)hasCommand;
- (bool)hasCompressPayloadDuration;
- (bool)hasCompressPayloadStart;
- (bool)hasCompressedMessageSize;
- (bool)hasEncryptionCount;
- (bool)hasIDQueryDuration;
- (bool)hasIDQueryStart;
- (bool)hasMessageOnQueueDuration;
- (bool)hasMessageOnQueueStart;
- (bool)hasMessagesOnQueue;
- (bool)hasPriority;
- (bool)hasSendToDaemonDuration;
- (bool)hasSendToDaemonStart;
- (bool)hasService;
- (bool)hasStoreInDatabaseDuration;
- (bool)hasStoreInDatabaseStart;
- (bool)hasTimestamp;
- (bool)hasUncompressedMessageSize;
- (unsigned long long)hash;
- (unsigned int)iDQueryDuration;
- (unsigned int)iDQueryStart;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned int)messageOnQueueDuration;
- (unsigned int)messageOnQueueStart;
- (unsigned long long)messagesOnQueue;
- (unsigned int)priority;
- (bool)readFrom:(id)arg1;
- (unsigned int)sendToDaemonDuration;
- (unsigned int)sendToDaemonStart;
- (id)service;
- (void)setAggregatedMessageSendCount:(unsigned int)arg1;
- (void)setAvgAggregatedMessageSendDuration:(unsigned int)arg1;
- (void)setAvgEncryptionDuration:(unsigned int)arg1;
- (void)setCommand:(unsigned int)arg1;
- (void)setCompressPayloadDuration:(unsigned int)arg1;
- (void)setCompressPayloadStart:(unsigned int)arg1;
- (void)setCompressedMessageSize:(unsigned long long)arg1;
- (void)setEncryptionCount:(unsigned int)arg1;
- (void)setHasAggregatedMessageSendCount:(bool)arg1;
- (void)setHasAvgAggregatedMessageSendDuration:(bool)arg1;
- (void)setHasAvgEncryptionDuration:(bool)arg1;
- (void)setHasCommand:(bool)arg1;
- (void)setHasCompressPayloadDuration:(bool)arg1;
- (void)setHasCompressPayloadStart:(bool)arg1;
- (void)setHasCompressedMessageSize:(bool)arg1;
- (void)setHasEncryptionCount:(bool)arg1;
- (void)setHasIDQueryDuration:(bool)arg1;
- (void)setHasIDQueryStart:(bool)arg1;
- (void)setHasMessageOnQueueDuration:(bool)arg1;
- (void)setHasMessageOnQueueStart:(bool)arg1;
- (void)setHasMessagesOnQueue:(bool)arg1;
- (void)setHasPriority:(bool)arg1;
- (void)setHasSendToDaemonDuration:(bool)arg1;
- (void)setHasSendToDaemonStart:(bool)arg1;
- (void)setHasStoreInDatabaseDuration:(bool)arg1;
- (void)setHasStoreInDatabaseStart:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasUncompressedMessageSize:(bool)arg1;
- (void)setIDQueryDuration:(unsigned int)arg1;
- (void)setIDQueryStart:(unsigned int)arg1;
- (void)setMessageOnQueueDuration:(unsigned int)arg1;
- (void)setMessageOnQueueStart:(unsigned int)arg1;
- (void)setMessagesOnQueue:(unsigned long long)arg1;
- (void)setPriority:(unsigned int)arg1;
- (void)setSendToDaemonDuration:(unsigned int)arg1;
- (void)setSendToDaemonStart:(unsigned int)arg1;
- (void)setService:(id)arg1;
- (void)setStoreInDatabaseDuration:(unsigned int)arg1;
- (void)setStoreInDatabaseStart:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setUncompressedMessageSize:(unsigned long long)arg1;
- (unsigned int)storeInDatabaseDuration;
- (unsigned int)storeInDatabaseStart;
- (unsigned long long)timestamp;
- (unsigned long long)uncompressedMessageSize;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDIDSQuickRelay.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDIDSQuickRelay.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDIDSQuickRelay : PBCodable <NSCopying> {
    unsigned long long  _duration;
    unsigned int  _eventSubType;
    unsigned int  _eventType;
    struct { 
        unsigned int duration : 1; 
        unsigned int timestamp : 1; 
        unsigned int eventSubType : 1; 
        unsigned int eventType : 1; 
        unsigned int interfaceType : 1; 
        unsigned int isInitiator : 1; 
        unsigned int protocolVersion : 1; 
        unsigned int providerType : 1; 
        unsigned int resultCode : 1; 
        unsigned int retryCount : 1; 
        unsigned int skeEnabled : 1; 
        unsigned int transportType : 1; 
    }  _has;
    unsigned int  _interfaceType;
    unsigned int  _isInitiator;
    unsigned int  _protocolVersion;
    unsigned int  _providerType;
    unsigned int  _resultCode;
    unsigned int  _retryCount;
    NSString * _serviceName;
    unsigned int  _skeEnabled;
    NSString * _subServiceName;
    unsigned long long  _timestamp;
    unsigned int  _transportType;
}

@property (nonatomic) unsigned long long duration;
@property (nonatomic) unsigned int eventSubType;
@property (nonatomic) unsigned int eventType;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasEventSubType;
@property (nonatomic) bool hasEventType;
@property (nonatomic) bool hasInterfaceType;
@property (nonatomic) bool hasIsInitiator;
@property (nonatomic) bool hasProtocolVersion;
@property (nonatomic) bool hasProviderType;
@property (nonatomic) bool hasResultCode;
@property (nonatomic) bool hasRetryCount;
@property (nonatomic, readonly) bool hasServiceName;
@property (nonatomic) bool hasSkeEnabled;
@property (nonatomic, readonly) bool hasSubServiceName;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasTransportType;
@property (nonatomic) unsigned int interfaceType;
@property (nonatomic) unsigned int isInitiator;
@property (nonatomic) unsigned int protocolVersion;
@property (nonatomic) unsigned int providerType;
@property (nonatomic) unsigned int resultCode;
@property (nonatomic) unsigned int retryCount;
@property (nonatomic, retain) NSString *serviceName;
@property (nonatomic) unsigned int skeEnabled;
@property (nonatomic, retain) NSString *subServiceName;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned int transportType;

- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned long long)duration;
- (unsigned int)eventSubType;
- (unsigned int)eventType;
- (bool)hasDuration;
- (bool)hasEventSubType;
- (bool)hasEventType;
- (bool)hasInterfaceType;
- (bool)hasIsInitiator;
- (bool)hasProtocolVersion;
- (bool)hasProviderType;
- (bool)hasResultCode;
- (bool)hasRetryCount;
- (bool)hasServiceName;
- (bool)hasSkeEnabled;
- (bool)hasSubServiceName;
- (bool)hasTimestamp;
- (bool)hasTransportType;
- (unsigned long long)hash;
- (unsigned int)interfaceType;
- (bool)isEqual:(id)arg1;
- (unsigned int)isInitiator;
- (void)mergeFrom:(id)arg1;
- (unsigned int)protocolVersion;
- (unsigned int)providerType;
- (bool)readFrom:(id)arg1;
- (unsigned int)resultCode;
- (unsigned int)retryCount;
- (id)serviceName;
- (void)setDuration:(unsigned long long)arg1;
- (void)setEventSubType:(unsigned int)arg1;
- (void)setEventType:(unsigned int)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasEventSubType:(bool)arg1;
- (void)setHasEventType:(bool)arg1;
- (void)setHasInterfaceType:(bool)arg1;
- (void)setHasIsInitiator:(bool)arg1;
- (void)setHasProtocolVersion:(bool)arg1;
- (void)setHasProviderType:(bool)arg1;
- (void)setHasResultCode:(bool)arg1;
- (void)setHasRetryCount:(bool)arg1;
- (void)setHasSkeEnabled:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasTransportType:(bool)arg1;
- (void)setInterfaceType:(unsigned int)arg1;
- (void)setIsInitiator:(unsigned int)arg1;
- (void)setProtocolVersion:(unsigned int)arg1;
- (void)setProviderType:(unsigned int)arg1;
- (void)setResultCode:(unsigned int)arg1;
- (void)setRetryCount:(unsigned int)arg1;
- (void)setServiceName:(id)arg1;
- (void)setSkeEnabled:(unsigned int)arg1;
- (void)setSubServiceName:(id)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setTransportType:(unsigned int)arg1;
- (unsigned int)skeEnabled;
- (id)subServiceName;
- (unsigned long long)timestamp;
- (unsigned int)transportType;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

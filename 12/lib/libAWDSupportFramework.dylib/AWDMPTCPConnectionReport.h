<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDMPTCPConnectionReport.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDMPTCPConnectionReport.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDMPTCPConnectionReport : PBCodable <NSCopying> {
    NSString * _clientId;
    bool  _establishmentCellularFallback;
    int  _establishmentFailureError;
    bool  _establishmentForcedTcpFallback;
    NSString * _establishmentInterfaceName;
    bool  _establishmentSuccess;
    int  _establishmentSynRetransmits;
    bool  _establishmentTcpFallback;
    double  _establishmentTime;
    struct { 
        unsigned int establishmentTime : 1; 
        unsigned int postConnectSessionLifetime : 1; 
        unsigned int timestamp : 1; 
        unsigned int establishmentFailureError : 1; 
        unsigned int establishmentSynRetransmits : 1; 
        unsigned int postConnectSubflowAttemptCount : 1; 
        unsigned int postConnectSubflowMaxSubflowCount : 1; 
        unsigned int subflowSwitchingCount : 1; 
        unsigned int establishmentCellularFallback : 1; 
        unsigned int establishmentForcedTcpFallback : 1; 
        unsigned int establishmentSuccess : 1; 
        unsigned int establishmentTcpFallback : 1; 
        unsigned int postConnectMultiHomed : 1; 
        unsigned int postConnectSingleHomed : 1; 
    }  _has;
    NSMutableArray * _interfaceReports;
    bool  _postConnectMultiHomed;
    double  _postConnectSessionLifetime;
    bool  _postConnectSingleHomed;
    int  _postConnectSubflowAttemptCount;
    int  _postConnectSubflowMaxSubflowCount;
    int  _subflowSwitchingCount;
    NSMutableArray * _subflowSwitchingReports;
    unsigned long long  _timestamp;
}

@property (nonatomic, retain) NSString *clientId;
@property (nonatomic) bool establishmentCellularFallback;
@property (nonatomic) int establishmentFailureError;
@property (nonatomic) bool establishmentForcedTcpFallback;
@property (nonatomic, retain) NSString *establishmentInterfaceName;
@property (nonatomic) bool establishmentSuccess;
@property (nonatomic) int establishmentSynRetransmits;
@property (nonatomic) bool establishmentTcpFallback;
@property (nonatomic) double establishmentTime;
@property (nonatomic, readonly) bool hasClientId;
@property (nonatomic) bool hasEstablishmentCellularFallback;
@property (nonatomic) bool hasEstablishmentFailureError;
@property (nonatomic) bool hasEstablishmentForcedTcpFallback;
@property (nonatomic, readonly) bool hasEstablishmentInterfaceName;
@property (nonatomic) bool hasEstablishmentSuccess;
@property (nonatomic) bool hasEstablishmentSynRetransmits;
@property (nonatomic) bool hasEstablishmentTcpFallback;
@property (nonatomic) bool hasEstablishmentTime;
@property (nonatomic) bool hasPostConnectMultiHomed;
@property (nonatomic) bool hasPostConnectSessionLifetime;
@property (nonatomic) bool hasPostConnectSingleHomed;
@property (nonatomic) bool hasPostConnectSubflowAttemptCount;
@property (nonatomic) bool hasPostConnectSubflowMaxSubflowCount;
@property (nonatomic) bool hasSubflowSwitchingCount;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic, retain) NSMutableArray *interfaceReports;
@property (nonatomic) bool postConnectMultiHomed;
@property (nonatomic) double postConnectSessionLifetime;
@property (nonatomic) bool postConnectSingleHomed;
@property (nonatomic) int postConnectSubflowAttemptCount;
@property (nonatomic) int postConnectSubflowMaxSubflowCount;
@property (nonatomic) int subflowSwitchingCount;
@property (nonatomic, retain) NSMutableArray *subflowSwitchingReports;
@property (nonatomic) unsigned long long timestamp;

+ (Class)interfaceReportsType;
+ (Class)subflowSwitchingReportsType;

- (void)addInterfaceReports:(id)arg1;
- (void)addSubflowSwitchingReports:(id)arg1;
- (void)clearInterfaceReports;
- (void)clearSubflowSwitchingReports;
- (id)clientId;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)establishmentCellularFallback;
- (int)establishmentFailureError;
- (bool)establishmentForcedTcpFallback;
- (id)establishmentInterfaceName;
- (bool)establishmentSuccess;
- (int)establishmentSynRetransmits;
- (bool)establishmentTcpFallback;
- (double)establishmentTime;
- (bool)hasClientId;
- (bool)hasEstablishmentCellularFallback;
- (bool)hasEstablishmentFailureError;
- (bool)hasEstablishmentForcedTcpFallback;
- (bool)hasEstablishmentInterfaceName;
- (bool)hasEstablishmentSuccess;
- (bool)hasEstablishmentSynRetransmits;
- (bool)hasEstablishmentTcpFallback;
- (bool)hasEstablishmentTime;
- (bool)hasPostConnectMultiHomed;
- (bool)hasPostConnectSessionLifetime;
- (bool)hasPostConnectSingleHomed;
- (bool)hasPostConnectSubflowAttemptCount;
- (bool)hasPostConnectSubflowMaxSubflowCount;
- (bool)hasSubflowSwitchingCount;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (id)interfaceReports;
- (id)interfaceReportsAtIndex:(unsigned long long)arg1;
- (unsigned long long)interfaceReportsCount;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)postConnectMultiHomed;
- (double)postConnectSessionLifetime;
- (bool)postConnectSingleHomed;
- (int)postConnectSubflowAttemptCount;
- (int)postConnectSubflowMaxSubflowCount;
- (bool)readFrom:(id)arg1;
- (void)setClientId:(id)arg1;
- (void)setEstablishmentCellularFallback:(bool)arg1;
- (void)setEstablishmentFailureError:(int)arg1;
- (void)setEstablishmentForcedTcpFallback:(bool)arg1;
- (void)setEstablishmentInterfaceName:(id)arg1;
- (void)setEstablishmentSuccess:(bool)arg1;
- (void)setEstablishmentSynRetransmits:(int)arg1;
- (void)setEstablishmentTcpFallback:(bool)arg1;
- (void)setEstablishmentTime:(double)arg1;
- (void)setHasEstablishmentCellularFallback:(bool)arg1;
- (void)setHasEstablishmentFailureError:(bool)arg1;
- (void)setHasEstablishmentForcedTcpFallback:(bool)arg1;
- (void)setHasEstablishmentSuccess:(bool)arg1;
- (void)setHasEstablishmentSynRetransmits:(bool)arg1;
- (void)setHasEstablishmentTcpFallback:(bool)arg1;
- (void)setHasEstablishmentTime:(bool)arg1;
- (void)setHasPostConnectMultiHomed:(bool)arg1;
- (void)setHasPostConnectSessionLifetime:(bool)arg1;
- (void)setHasPostConnectSingleHomed:(bool)arg1;
- (void)setHasPostConnectSubflowAttemptCount:(bool)arg1;
- (void)setHasPostConnectSubflowMaxSubflowCount:(bool)arg1;
- (void)setHasSubflowSwitchingCount:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setInterfaceReports:(id)arg1;
- (void)setPostConnectMultiHomed:(bool)arg1;
- (void)setPostConnectSessionLifetime:(double)arg1;
- (void)setPostConnectSingleHomed:(bool)arg1;
- (void)setPostConnectSubflowAttemptCount:(int)arg1;
- (void)setPostConnectSubflowMaxSubflowCount:(int)arg1;
- (void)setSubflowSwitchingCount:(int)arg1;
- (void)setSubflowSwitchingReports:(id)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (int)subflowSwitchingCount;
- (id)subflowSwitchingReports;
- (id)subflowSwitchingReportsAtIndex:(unsigned long long)arg1;
- (unsigned long long)subflowSwitchingReportsCount;
- (unsigned long long)timestamp;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

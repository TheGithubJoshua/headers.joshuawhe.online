<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDWiFiMetricsManagerWatchdogEvent.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDWiFiMetricsManagerWatchdogEvent.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWiFiMetricsManagerWatchdogEvent : PBCodable <NSCopying> {
    int  _available;
    struct { 
        unsigned long long *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _backTraces;
    unsigned int  _deviceIdentifierMap;
    unsigned int  _eventId;
    NSString * _fileName;
    unsigned int  _flags;
    NSString * _function;
    struct { 
        unsigned int linkRegister : 1; 
        unsigned int programCounter : 1; 
        unsigned int timestamp : 1; 
        unsigned int available : 1; 
        unsigned int deviceIdentifierMap : 1; 
        unsigned int eventId : 1; 
        unsigned int flags : 1; 
        unsigned int lineNumber : 1; 
        unsigned int minorReason : 1; 
        unsigned int reason : 1; 
        unsigned int subreason : 1; 
        unsigned int version : 1; 
    }  _has;
    AWDWiFiMetricJoinTimeout * _joinTimeoutInfo;
    unsigned int  _lineNumber;
    unsigned long long  _linkRegister;
    unsigned int  _minorReason;
    unsigned long long  _programCounter;
    int  _reason;
    NSString * _reasonString;
    unsigned int  _subreason;
    unsigned long long  _timestamp;
    AWDWiFiMetricExtendedTrapInfo * _trapInfo;
    unsigned int  _version;
}

@property (nonatomic) int available;
@property (nonatomic, readonly) unsigned long long*backTraces;
@property (nonatomic, readonly) unsigned long long backTracesCount;
@property (nonatomic) unsigned int deviceIdentifierMap;
@property (nonatomic) unsigned int eventId;
@property (nonatomic, retain) NSString *fileName;
@property (nonatomic) unsigned int flags;
@property (nonatomic, retain) NSString *function;
@property (nonatomic) bool hasAvailable;
@property (nonatomic) bool hasDeviceIdentifierMap;
@property (nonatomic) bool hasEventId;
@property (nonatomic, readonly) bool hasFileName;
@property (nonatomic) bool hasFlags;
@property (nonatomic, readonly) bool hasFunction;
@property (nonatomic, readonly) bool hasJoinTimeoutInfo;
@property (nonatomic) bool hasLineNumber;
@property (nonatomic) bool hasLinkRegister;
@property (nonatomic) bool hasMinorReason;
@property (nonatomic) bool hasProgramCounter;
@property (nonatomic) bool hasReason;
@property (nonatomic, readonly) bool hasReasonString;
@property (nonatomic) bool hasSubreason;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic, readonly) bool hasTrapInfo;
@property (nonatomic) bool hasVersion;
@property (nonatomic, retain) AWDWiFiMetricJoinTimeout *joinTimeoutInfo;
@property (nonatomic) unsigned int lineNumber;
@property (nonatomic) unsigned long long linkRegister;
@property (nonatomic) unsigned int minorReason;
@property (nonatomic) unsigned long long programCounter;
@property (nonatomic) int reason;
@property (nonatomic, retain) NSString *reasonString;
@property (nonatomic) unsigned int subreason;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic, retain) AWDWiFiMetricExtendedTrapInfo *trapInfo;
@property (nonatomic) unsigned int version;

- (void)addBackTrace:(unsigned long long)arg1;
- (int)available;
- (unsigned long long)backTraceAtIndex:(unsigned long long)arg1;
- (unsigned long long*)backTraces;
- (unsigned long long)backTracesCount;
- (void)clearBackTraces;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (unsigned int)deviceIdentifierMap;
- (id)dictionaryRepresentation;
- (unsigned int)eventId;
- (id)fileName;
- (unsigned int)flags;
- (id)function;
- (bool)hasAvailable;
- (bool)hasDeviceIdentifierMap;
- (bool)hasEventId;
- (bool)hasFileName;
- (bool)hasFlags;
- (bool)hasFunction;
- (bool)hasJoinTimeoutInfo;
- (bool)hasLineNumber;
- (bool)hasLinkRegister;
- (bool)hasMinorReason;
- (bool)hasProgramCounter;
- (bool)hasReason;
- (bool)hasReasonString;
- (bool)hasSubreason;
- (bool)hasTimestamp;
- (bool)hasTrapInfo;
- (bool)hasVersion;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)joinTimeoutInfo;
- (unsigned int)lineNumber;
- (unsigned long long)linkRegister;
- (void)mergeFrom:(id)arg1;
- (unsigned int)minorReason;
- (unsigned long long)programCounter;
- (bool)readFrom:(id)arg1;
- (int)reason;
- (id)reasonString;
- (void)setAvailable:(int)arg1;
- (void)setBackTraces:(unsigned long long*)arg1 count:(unsigned long long)arg2;
- (void)setDeviceIdentifierMap:(unsigned int)arg1;
- (void)setEventId:(unsigned int)arg1;
- (void)setFileName:(id)arg1;
- (void)setFlags:(unsigned int)arg1;
- (void)setFunction:(id)arg1;
- (void)setHasAvailable:(bool)arg1;
- (void)setHasDeviceIdentifierMap:(bool)arg1;
- (void)setHasEventId:(bool)arg1;
- (void)setHasFlags:(bool)arg1;
- (void)setHasLineNumber:(bool)arg1;
- (void)setHasLinkRegister:(bool)arg1;
- (void)setHasMinorReason:(bool)arg1;
- (void)setHasProgramCounter:(bool)arg1;
- (void)setHasReason:(bool)arg1;
- (void)setHasSubreason:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasVersion:(bool)arg1;
- (void)setJoinTimeoutInfo:(id)arg1;
- (void)setLineNumber:(unsigned int)arg1;
- (void)setLinkRegister:(unsigned long long)arg1;
- (void)setMinorReason:(unsigned int)arg1;
- (void)setProgramCounter:(unsigned long long)arg1;
- (void)setReason:(int)arg1;
- (void)setReasonString:(id)arg1;
- (void)setSubreason:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setTrapInfo:(id)arg1;
- (void)setVersion:(unsigned int)arg1;
- (unsigned int)subreason;
- (unsigned long long)timestamp;
- (id)trapInfo;
- (unsigned int)version;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

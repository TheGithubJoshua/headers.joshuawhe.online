<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDWiFiMetricActiveProbeStats.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDWiFiMetricActiveProbeStats.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWiFiMetricActiveProbeStats : PBCodable <NSCopying> {
    unsigned int  _avgRTTLargePktSize;
    unsigned int  _avgRTTMediumPktSize;
    unsigned int  _avgRTTSmallPktSize;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int avgRTTLargePktSize : 1; 
        unsigned int avgRTTMediumPktSize : 1; 
        unsigned int avgRTTSmallPktSize : 1; 
        unsigned int maxRTTLargePktSize : 1; 
        unsigned int maxRTTMediumPktSize : 1; 
        unsigned int maxRTTSmallPktSize : 1; 
        unsigned int minRTTLargePktSize : 1; 
        unsigned int minRTTMediumPktSize : 1; 
        unsigned int minRTTSmallPktSize : 1; 
        unsigned int perLargePktSize : 1; 
        unsigned int perMediumPktSize : 1; 
        unsigned int perSmallPktSize : 1; 
    }  _has;
    unsigned int  _maxRTTLargePktSize;
    unsigned int  _maxRTTMediumPktSize;
    unsigned int  _maxRTTSmallPktSize;
    unsigned int  _minRTTLargePktSize;
    unsigned int  _minRTTMediumPktSize;
    unsigned int  _minRTTSmallPktSize;
    unsigned int  _perLargePktSize;
    unsigned int  _perMediumPktSize;
    unsigned int  _perSmallPktSize;
    unsigned long long  _timestamp;
}

@property (nonatomic) unsigned int avgRTTLargePktSize;
@property (nonatomic) unsigned int avgRTTMediumPktSize;
@property (nonatomic) unsigned int avgRTTSmallPktSize;
@property (nonatomic) bool hasAvgRTTLargePktSize;
@property (nonatomic) bool hasAvgRTTMediumPktSize;
@property (nonatomic) bool hasAvgRTTSmallPktSize;
@property (nonatomic) bool hasMaxRTTLargePktSize;
@property (nonatomic) bool hasMaxRTTMediumPktSize;
@property (nonatomic) bool hasMaxRTTSmallPktSize;
@property (nonatomic) bool hasMinRTTLargePktSize;
@property (nonatomic) bool hasMinRTTMediumPktSize;
@property (nonatomic) bool hasMinRTTSmallPktSize;
@property (nonatomic) bool hasPerLargePktSize;
@property (nonatomic) bool hasPerMediumPktSize;
@property (nonatomic) bool hasPerSmallPktSize;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) unsigned int maxRTTLargePktSize;
@property (nonatomic) unsigned int maxRTTMediumPktSize;
@property (nonatomic) unsigned int maxRTTSmallPktSize;
@property (nonatomic) unsigned int minRTTLargePktSize;
@property (nonatomic) unsigned int minRTTMediumPktSize;
@property (nonatomic) unsigned int minRTTSmallPktSize;
@property (nonatomic) unsigned int perLargePktSize;
@property (nonatomic) unsigned int perMediumPktSize;
@property (nonatomic) unsigned int perSmallPktSize;
@property (nonatomic) unsigned long long timestamp;

- (unsigned int)avgRTTLargePktSize;
- (unsigned int)avgRTTMediumPktSize;
- (unsigned int)avgRTTSmallPktSize;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasAvgRTTLargePktSize;
- (bool)hasAvgRTTMediumPktSize;
- (bool)hasAvgRTTSmallPktSize;
- (bool)hasMaxRTTLargePktSize;
- (bool)hasMaxRTTMediumPktSize;
- (bool)hasMaxRTTSmallPktSize;
- (bool)hasMinRTTLargePktSize;
- (bool)hasMinRTTMediumPktSize;
- (bool)hasMinRTTSmallPktSize;
- (bool)hasPerLargePktSize;
- (bool)hasPerMediumPktSize;
- (bool)hasPerSmallPktSize;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (unsigned int)maxRTTLargePktSize;
- (unsigned int)maxRTTMediumPktSize;
- (unsigned int)maxRTTSmallPktSize;
- (void)mergeFrom:(id)arg1;
- (unsigned int)minRTTLargePktSize;
- (unsigned int)minRTTMediumPktSize;
- (unsigned int)minRTTSmallPktSize;
- (unsigned int)perLargePktSize;
- (unsigned int)perMediumPktSize;
- (unsigned int)perSmallPktSize;
- (bool)readFrom:(id)arg1;
- (void)setAvgRTTLargePktSize:(unsigned int)arg1;
- (void)setAvgRTTMediumPktSize:(unsigned int)arg1;
- (void)setAvgRTTSmallPktSize:(unsigned int)arg1;
- (void)setHasAvgRTTLargePktSize:(bool)arg1;
- (void)setHasAvgRTTMediumPktSize:(bool)arg1;
- (void)setHasAvgRTTSmallPktSize:(bool)arg1;
- (void)setHasMaxRTTLargePktSize:(bool)arg1;
- (void)setHasMaxRTTMediumPktSize:(bool)arg1;
- (void)setHasMaxRTTSmallPktSize:(bool)arg1;
- (void)setHasMinRTTLargePktSize:(bool)arg1;
- (void)setHasMinRTTMediumPktSize:(bool)arg1;
- (void)setHasMinRTTSmallPktSize:(bool)arg1;
- (void)setHasPerLargePktSize:(bool)arg1;
- (void)setHasPerMediumPktSize:(bool)arg1;
- (void)setHasPerSmallPktSize:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setMaxRTTLargePktSize:(unsigned int)arg1;
- (void)setMaxRTTMediumPktSize:(unsigned int)arg1;
- (void)setMaxRTTSmallPktSize:(unsigned int)arg1;
- (void)setMinRTTLargePktSize:(unsigned int)arg1;
- (void)setMinRTTMediumPktSize:(unsigned int)arg1;
- (void)setMinRTTSmallPktSize:(unsigned int)arg1;
- (void)setPerLargePktSize:(unsigned int)arg1;
- (void)setPerMediumPktSize:(unsigned int)arg1;
- (void)setPerSmallPktSize:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (unsigned long long)timestamp;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

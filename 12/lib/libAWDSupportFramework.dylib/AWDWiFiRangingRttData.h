<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDWiFiRangingRttData.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDWiFiRangingRttData.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWiFiRangingRttData : PBCodable <NSCopying> {
    unsigned int  _bitErrorRate;
    unsigned int  _channel;
    unsigned int  _coreId;
    unsigned int  _flags;
    struct { 
        unsigned int bitErrorRate : 1; 
        unsigned int channel : 1; 
        unsigned int coreId : 1; 
        unsigned int flags : 1; 
        unsigned int losPeakRatio : 1; 
        unsigned int peerBitErrorRate : 1; 
        unsigned int peerCoreId : 1; 
        unsigned int peerLosPeakRatio : 1; 
        unsigned int peerPhyError : 1; 
        unsigned int peerSnr : 1; 
        unsigned int phyError : 1; 
        unsigned int rssi : 1; 
        unsigned int rtt : 1; 
        unsigned int snr : 1; 
        unsigned int status : 1; 
    }  _has;
    unsigned int  _losPeakRatio;
    unsigned int  _peerBitErrorRate;
    unsigned int  _peerCoreId;
    unsigned int  _peerLosPeakRatio;
    unsigned int  _peerPhyError;
    unsigned int  _peerSnr;
    unsigned int  _phyError;
    int  _rssi;
    unsigned int  _rtt;
    unsigned int  _snr;
    unsigned int  _status;
}

@property (nonatomic) unsigned int bitErrorRate;
@property (nonatomic) unsigned int channel;
@property (nonatomic) unsigned int coreId;
@property (nonatomic) unsigned int flags;
@property (nonatomic) bool hasBitErrorRate;
@property (nonatomic) bool hasChannel;
@property (nonatomic) bool hasCoreId;
@property (nonatomic) bool hasFlags;
@property (nonatomic) bool hasLosPeakRatio;
@property (nonatomic) bool hasPeerBitErrorRate;
@property (nonatomic) bool hasPeerCoreId;
@property (nonatomic) bool hasPeerLosPeakRatio;
@property (nonatomic) bool hasPeerPhyError;
@property (nonatomic) bool hasPeerSnr;
@property (nonatomic) bool hasPhyError;
@property (nonatomic) bool hasRssi;
@property (nonatomic) bool hasRtt;
@property (nonatomic) bool hasSnr;
@property (nonatomic) bool hasStatus;
@property (nonatomic) unsigned int losPeakRatio;
@property (nonatomic) unsigned int peerBitErrorRate;
@property (nonatomic) unsigned int peerCoreId;
@property (nonatomic) unsigned int peerLosPeakRatio;
@property (nonatomic) unsigned int peerPhyError;
@property (nonatomic) unsigned int peerSnr;
@property (nonatomic) unsigned int phyError;
@property (nonatomic) int rssi;
@property (nonatomic) unsigned int rtt;
@property (nonatomic) unsigned int snr;
@property (nonatomic) unsigned int status;

- (unsigned int)bitErrorRate;
- (unsigned int)channel;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (unsigned int)coreId;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)flags;
- (bool)hasBitErrorRate;
- (bool)hasChannel;
- (bool)hasCoreId;
- (bool)hasFlags;
- (bool)hasLosPeakRatio;
- (bool)hasPeerBitErrorRate;
- (bool)hasPeerCoreId;
- (bool)hasPeerLosPeakRatio;
- (bool)hasPeerPhyError;
- (bool)hasPeerSnr;
- (bool)hasPhyError;
- (bool)hasRssi;
- (bool)hasRtt;
- (bool)hasSnr;
- (bool)hasStatus;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (unsigned int)losPeakRatio;
- (void)mergeFrom:(id)arg1;
- (unsigned int)peerBitErrorRate;
- (unsigned int)peerCoreId;
- (unsigned int)peerLosPeakRatio;
- (unsigned int)peerPhyError;
- (unsigned int)peerSnr;
- (unsigned int)phyError;
- (bool)readFrom:(id)arg1;
- (int)rssi;
- (unsigned int)rtt;
- (void)setBitErrorRate:(unsigned int)arg1;
- (void)setChannel:(unsigned int)arg1;
- (void)setCoreId:(unsigned int)arg1;
- (void)setFlags:(unsigned int)arg1;
- (void)setHasBitErrorRate:(bool)arg1;
- (void)setHasChannel:(bool)arg1;
- (void)setHasCoreId:(bool)arg1;
- (void)setHasFlags:(bool)arg1;
- (void)setHasLosPeakRatio:(bool)arg1;
- (void)setHasPeerBitErrorRate:(bool)arg1;
- (void)setHasPeerCoreId:(bool)arg1;
- (void)setHasPeerLosPeakRatio:(bool)arg1;
- (void)setHasPeerPhyError:(bool)arg1;
- (void)setHasPeerSnr:(bool)arg1;
- (void)setHasPhyError:(bool)arg1;
- (void)setHasRssi:(bool)arg1;
- (void)setHasRtt:(bool)arg1;
- (void)setHasSnr:(bool)arg1;
- (void)setHasStatus:(bool)arg1;
- (void)setLosPeakRatio:(unsigned int)arg1;
- (void)setPeerBitErrorRate:(unsigned int)arg1;
- (void)setPeerCoreId:(unsigned int)arg1;
- (void)setPeerLosPeakRatio:(unsigned int)arg1;
- (void)setPeerPhyError:(unsigned int)arg1;
- (void)setPeerSnr:(unsigned int)arg1;
- (void)setPhyError:(unsigned int)arg1;
- (void)setRssi:(int)arg1;
- (void)setRtt:(unsigned int)arg1;
- (void)setSnr:(unsigned int)arg1;
- (void)setStatus:(unsigned int)arg1;
- (unsigned int)snr;
- (unsigned int)status;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

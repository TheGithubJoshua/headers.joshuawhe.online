<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDLibnetcoreMbufStatsReport.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDLibnetcoreMbufStatsReport.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDLibnetcoreMbufStatsReport : PBCodable <NSCopying> {
    struct { 
        unsigned int mbuf16KBTotal : 1; 
        unsigned int mbuf256BTotal : 1; 
        unsigned int mbuf2KBTotal : 1; 
        unsigned int mbuf4KBTotal : 1; 
        unsigned int mbufDrainCount : 1; 
        unsigned int mbufMemReleased : 1; 
        unsigned int sockAtMBLimit : 1; 
        unsigned int sockMBcnt : 1; 
    }  _has;
    unsigned long long  _mbuf16KBTotal;
    unsigned long long  _mbuf256BTotal;
    unsigned long long  _mbuf2KBTotal;
    unsigned long long  _mbuf4KBTotal;
    unsigned long long  _mbufDrainCount;
    unsigned long long  _mbufMemReleased;
    unsigned long long  _sockAtMBLimit;
    unsigned long long  _sockMBcnt;
}

@property (nonatomic) bool hasMbuf16KBTotal;
@property (nonatomic) bool hasMbuf256BTotal;
@property (nonatomic) bool hasMbuf2KBTotal;
@property (nonatomic) bool hasMbuf4KBTotal;
@property (nonatomic) bool hasMbufDrainCount;
@property (nonatomic) bool hasMbufMemReleased;
@property (nonatomic) bool hasSockAtMBLimit;
@property (nonatomic) bool hasSockMBcnt;
@property (nonatomic) unsigned long long mbuf16KBTotal;
@property (nonatomic) unsigned long long mbuf256BTotal;
@property (nonatomic) unsigned long long mbuf2KBTotal;
@property (nonatomic) unsigned long long mbuf4KBTotal;
@property (nonatomic) unsigned long long mbufDrainCount;
@property (nonatomic) unsigned long long mbufMemReleased;
@property (nonatomic) unsigned long long sockAtMBLimit;
@property (nonatomic) unsigned long long sockMBcnt;

- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasMbuf16KBTotal;
- (bool)hasMbuf256BTotal;
- (bool)hasMbuf2KBTotal;
- (bool)hasMbuf4KBTotal;
- (bool)hasMbufDrainCount;
- (bool)hasMbufMemReleased;
- (bool)hasSockAtMBLimit;
- (bool)hasSockMBcnt;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (unsigned long long)mbuf16KBTotal;
- (unsigned long long)mbuf256BTotal;
- (unsigned long long)mbuf2KBTotal;
- (unsigned long long)mbuf4KBTotal;
- (unsigned long long)mbufDrainCount;
- (unsigned long long)mbufMemReleased;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setHasMbuf16KBTotal:(bool)arg1;
- (void)setHasMbuf256BTotal:(bool)arg1;
- (void)setHasMbuf2KBTotal:(bool)arg1;
- (void)setHasMbuf4KBTotal:(bool)arg1;
- (void)setHasMbufDrainCount:(bool)arg1;
- (void)setHasMbufMemReleased:(bool)arg1;
- (void)setHasSockAtMBLimit:(bool)arg1;
- (void)setHasSockMBcnt:(bool)arg1;
- (void)setMbuf16KBTotal:(unsigned long long)arg1;
- (void)setMbuf256BTotal:(unsigned long long)arg1;
- (void)setMbuf2KBTotal:(unsigned long long)arg1;
- (void)setMbuf4KBTotal:(unsigned long long)arg1;
- (void)setMbufDrainCount:(unsigned long long)arg1;
- (void)setMbufMemReleased:(unsigned long long)arg1;
- (void)setSockAtMBLimit:(unsigned long long)arg1;
- (void)setSockMBcnt:(unsigned long long)arg1;
- (unsigned long long)sockAtMBLimit;
- (unsigned long long)sockMBcnt;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

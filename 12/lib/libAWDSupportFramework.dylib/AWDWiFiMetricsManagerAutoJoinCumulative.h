<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDWiFiMetricsManagerAutoJoinCumulative.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDWiFiMetricsManagerAutoJoinCumulative.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWiFiMetricsManagerAutoJoinCumulative : PBCodable <NSCopying> {
    unsigned int  _ajScansPerformedWithLocation;
    unsigned int  _ajScansPerformedWithoutLocation;
    unsigned int  _bandScanCount24;
    unsigned int  _bandScanCount5;
    unsigned int  _ccaBitmap;
    unsigned int  _didAssocTo5GHzAfterBroadcastPeriodicAllBandScanCount;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _excludedDueToAJBlacklistCounts;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int ajScansPerformedWithLocation : 1; 
        unsigned int ajScansPerformedWithoutLocation : 1; 
        unsigned int bandScanCount24 : 1; 
        unsigned int bandScanCount5 : 1; 
        unsigned int ccaBitmap : 1; 
        unsigned int didAssocTo5GHzAfterBroadcastPeriodicAllBandScanCount : 1; 
        unsigned int rssiBitmap : 1; 
        unsigned int userChoseToAssociateToAJBlacklistedCount : 1; 
    }  _has;
    unsigned int  _rssiBitmap;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _scanTypesCounts;
    unsigned long long  _timestamp;
    unsigned int  _userChoseToAssociateToAJBlacklistedCount;
}

@property (nonatomic) unsigned int ajScansPerformedWithLocation;
@property (nonatomic) unsigned int ajScansPerformedWithoutLocation;
@property (nonatomic) unsigned int bandScanCount24;
@property (nonatomic) unsigned int bandScanCount5;
@property (nonatomic) unsigned int ccaBitmap;
@property (nonatomic) unsigned int didAssocTo5GHzAfterBroadcastPeriodicAllBandScanCount;
@property (nonatomic, readonly) unsigned int*excludedDueToAJBlacklistCounts;
@property (nonatomic, readonly) unsigned long long excludedDueToAJBlacklistCountsCount;
@property (nonatomic) bool hasAjScansPerformedWithLocation;
@property (nonatomic) bool hasAjScansPerformedWithoutLocation;
@property (nonatomic) bool hasBandScanCount24;
@property (nonatomic) bool hasBandScanCount5;
@property (nonatomic) bool hasCcaBitmap;
@property (nonatomic) bool hasDidAssocTo5GHzAfterBroadcastPeriodicAllBandScanCount;
@property (nonatomic) bool hasRssiBitmap;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasUserChoseToAssociateToAJBlacklistedCount;
@property (nonatomic) unsigned int rssiBitmap;
@property (nonatomic, readonly) unsigned int*scanTypesCounts;
@property (nonatomic, readonly) unsigned long long scanTypesCountsCount;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned int userChoseToAssociateToAJBlacklistedCount;

- (void)addExcludedDueToAJBlacklistCount:(unsigned int)arg1;
- (void)addScanTypesCount:(unsigned int)arg1;
- (unsigned int)ajScansPerformedWithLocation;
- (unsigned int)ajScansPerformedWithoutLocation;
- (unsigned int)bandScanCount24;
- (unsigned int)bandScanCount5;
- (unsigned int)ccaBitmap;
- (void)clearExcludedDueToAJBlacklistCounts;
- (void)clearScanTypesCounts;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)didAssocTo5GHzAfterBroadcastPeriodicAllBandScanCount;
- (unsigned int)excludedDueToAJBlacklistCountAtIndex:(unsigned long long)arg1;
- (unsigned int*)excludedDueToAJBlacklistCounts;
- (unsigned long long)excludedDueToAJBlacklistCountsCount;
- (bool)hasAjScansPerformedWithLocation;
- (bool)hasAjScansPerformedWithoutLocation;
- (bool)hasBandScanCount24;
- (bool)hasBandScanCount5;
- (bool)hasCcaBitmap;
- (bool)hasDidAssocTo5GHzAfterBroadcastPeriodicAllBandScanCount;
- (bool)hasRssiBitmap;
- (bool)hasTimestamp;
- (bool)hasUserChoseToAssociateToAJBlacklistedCount;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (unsigned int)rssiBitmap;
- (unsigned int)scanTypesCountAtIndex:(unsigned long long)arg1;
- (unsigned int*)scanTypesCounts;
- (unsigned long long)scanTypesCountsCount;
- (void)setAjScansPerformedWithLocation:(unsigned int)arg1;
- (void)setAjScansPerformedWithoutLocation:(unsigned int)arg1;
- (void)setBandScanCount24:(unsigned int)arg1;
- (void)setBandScanCount5:(unsigned int)arg1;
- (void)setCcaBitmap:(unsigned int)arg1;
- (void)setDidAssocTo5GHzAfterBroadcastPeriodicAllBandScanCount:(unsigned int)arg1;
- (void)setExcludedDueToAJBlacklistCounts:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setHasAjScansPerformedWithLocation:(bool)arg1;
- (void)setHasAjScansPerformedWithoutLocation:(bool)arg1;
- (void)setHasBandScanCount24:(bool)arg1;
- (void)setHasBandScanCount5:(bool)arg1;
- (void)setHasCcaBitmap:(bool)arg1;
- (void)setHasDidAssocTo5GHzAfterBroadcastPeriodicAllBandScanCount:(bool)arg1;
- (void)setHasRssiBitmap:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasUserChoseToAssociateToAJBlacklistedCount:(bool)arg1;
- (void)setRssiBitmap:(unsigned int)arg1;
- (void)setScanTypesCounts:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setUserChoseToAssociateToAJBlacklistedCount:(unsigned int)arg1;
- (unsigned long long)timestamp;
- (unsigned int)userChoseToAssociateToAJBlacklistedCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

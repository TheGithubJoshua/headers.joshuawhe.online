<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDVPNSession.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDVPNSession.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDVPNSession : PBCodable <NSCopying> {
    bool  _appVpnUsed;
    bool  _connectFailed;
    unsigned int  _disconnectReason;
    unsigned int  _duration;
    struct { 
        unsigned int inBytes : 1; 
        unsigned int outBytes : 1; 
        unsigned int timestamp : 1; 
        unsigned int disconnectReason : 1; 
        unsigned int duration : 1; 
        unsigned int ipv4Installed : 1; 
        unsigned int ipv6Installed : 1; 
        unsigned int reassertCount : 1; 
        unsigned int systemAuthenMethod : 1; 
        unsigned int triggerTrafficClass : 1; 
        unsigned int triggerType : 1; 
        unsigned int userAuthenMethod : 1; 
        unsigned int appVpnUsed : 1; 
        unsigned int connectFailed : 1; 
        unsigned int proxyInstalled : 1; 
    }  _has;
    unsigned long long  _inBytes;
    unsigned int  _ipv4Installed;
    unsigned int  _ipv6Installed;
    unsigned long long  _outBytes;
    NSString * _protocol;
    bool  _proxyInstalled;
    unsigned int  _reassertCount;
    unsigned int  _systemAuthenMethod;
    unsigned long long  _timestamp;
    unsigned int  _triggerTrafficClass;
    unsigned int  _triggerType;
    unsigned int  _userAuthenMethod;
}

@property (nonatomic) bool appVpnUsed;
@property (nonatomic) bool connectFailed;
@property (nonatomic) unsigned int disconnectReason;
@property (nonatomic) unsigned int duration;
@property (nonatomic) bool hasAppVpnUsed;
@property (nonatomic) bool hasConnectFailed;
@property (nonatomic) bool hasDisconnectReason;
@property (nonatomic) bool hasDuration;
@property (nonatomic) bool hasInBytes;
@property (nonatomic) bool hasIpv4Installed;
@property (nonatomic) bool hasIpv6Installed;
@property (nonatomic) bool hasOutBytes;
@property (nonatomic, readonly) bool hasProtocol;
@property (nonatomic) bool hasProxyInstalled;
@property (nonatomic) bool hasReassertCount;
@property (nonatomic) bool hasSystemAuthenMethod;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasTriggerTrafficClass;
@property (nonatomic) bool hasTriggerType;
@property (nonatomic) bool hasUserAuthenMethod;
@property (nonatomic) unsigned long long inBytes;
@property (nonatomic) unsigned int ipv4Installed;
@property (nonatomic) unsigned int ipv6Installed;
@property (nonatomic) unsigned long long outBytes;
@property (nonatomic, retain) NSString *protocol;
@property (nonatomic) bool proxyInstalled;
@property (nonatomic) unsigned int reassertCount;
@property (nonatomic) unsigned int systemAuthenMethod;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned int triggerTrafficClass;
@property (nonatomic) unsigned int triggerType;
@property (nonatomic) unsigned int userAuthenMethod;

- (bool)appVpnUsed;
- (bool)connectFailed;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)disconnectReason;
- (unsigned int)duration;
- (bool)hasAppVpnUsed;
- (bool)hasConnectFailed;
- (bool)hasDisconnectReason;
- (bool)hasDuration;
- (bool)hasInBytes;
- (bool)hasIpv4Installed;
- (bool)hasIpv6Installed;
- (bool)hasOutBytes;
- (bool)hasProtocol;
- (bool)hasProxyInstalled;
- (bool)hasReassertCount;
- (bool)hasSystemAuthenMethod;
- (bool)hasTimestamp;
- (bool)hasTriggerTrafficClass;
- (bool)hasTriggerType;
- (bool)hasUserAuthenMethod;
- (unsigned long long)hash;
- (unsigned long long)inBytes;
- (unsigned int)ipv4Installed;
- (unsigned int)ipv6Installed;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)outBytes;
- (id)protocol;
- (bool)proxyInstalled;
- (bool)readFrom:(id)arg1;
- (unsigned int)reassertCount;
- (void)setAppVpnUsed:(bool)arg1;
- (void)setConnectFailed:(bool)arg1;
- (void)setDisconnectReason:(unsigned int)arg1;
- (void)setDuration:(unsigned int)arg1;
- (void)setHasAppVpnUsed:(bool)arg1;
- (void)setHasConnectFailed:(bool)arg1;
- (void)setHasDisconnectReason:(bool)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasInBytes:(bool)arg1;
- (void)setHasIpv4Installed:(bool)arg1;
- (void)setHasIpv6Installed:(bool)arg1;
- (void)setHasOutBytes:(bool)arg1;
- (void)setHasProxyInstalled:(bool)arg1;
- (void)setHasReassertCount:(bool)arg1;
- (void)setHasSystemAuthenMethod:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasTriggerTrafficClass:(bool)arg1;
- (void)setHasTriggerType:(bool)arg1;
- (void)setHasUserAuthenMethod:(bool)arg1;
- (void)setInBytes:(unsigned long long)arg1;
- (void)setIpv4Installed:(unsigned int)arg1;
- (void)setIpv6Installed:(unsigned int)arg1;
- (void)setOutBytes:(unsigned long long)arg1;
- (void)setProtocol:(id)arg1;
- (void)setProxyInstalled:(bool)arg1;
- (void)setReassertCount:(unsigned int)arg1;
- (void)setSystemAuthenMethod:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setTriggerTrafficClass:(unsigned int)arg1;
- (void)setTriggerType:(unsigned int)arg1;
- (void)setUserAuthenMethod:(unsigned int)arg1;
- (unsigned int)systemAuthenMethod;
- (unsigned long long)timestamp;
- (unsigned int)triggerTrafficClass;
- (unsigned int)triggerType;
- (unsigned int)userAuthenMethod;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

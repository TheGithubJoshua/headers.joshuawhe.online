<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDCoreRoutineModelAlgorithmInstance.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDCoreRoutineModelAlgorithmInstance.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDCoreRoutineModelAlgorithmInstance : PBCodable <NSCopying> {
    unsigned long long  _addressComponentMatches;
    double  _distanceFromTruth;
    unsigned int  _efficacy;
    struct { 
        unsigned int addressComponentMatches : 1; 
        unsigned int distanceFromTruth : 1; 
        unsigned int uncertainty : 1; 
        unsigned int efficacy : 1; 
        unsigned int previousType : 1; 
        unsigned int source : 1; 
        unsigned int truthSource : 1; 
        unsigned int truthType : 1; 
        unsigned int type : 1; 
    }  _has;
    unsigned int  _previousType;
    unsigned int  _source;
    unsigned int  _truthSource;
    unsigned int  _truthType;
    unsigned int  _type;
    double  _uncertainty;
}

@property (nonatomic) unsigned long long addressComponentMatches;
@property (nonatomic) double distanceFromTruth;
@property (nonatomic) unsigned int efficacy;
@property (nonatomic) bool hasAddressComponentMatches;
@property (nonatomic) bool hasDistanceFromTruth;
@property (nonatomic) bool hasEfficacy;
@property (nonatomic) bool hasPreviousType;
@property (nonatomic) bool hasSource;
@property (nonatomic) bool hasTruthSource;
@property (nonatomic) bool hasTruthType;
@property (nonatomic) bool hasType;
@property (nonatomic) bool hasUncertainty;
@property (nonatomic) unsigned int previousType;
@property (nonatomic) unsigned int source;
@property (nonatomic) unsigned int truthSource;
@property (nonatomic) unsigned int truthType;
@property (nonatomic) unsigned int type;
@property (nonatomic) double uncertainty;

- (unsigned long long)addressComponentMatches;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (double)distanceFromTruth;
- (unsigned int)efficacy;
- (bool)hasAddressComponentMatches;
- (bool)hasDistanceFromTruth;
- (bool)hasEfficacy;
- (bool)hasPreviousType;
- (bool)hasSource;
- (bool)hasTruthSource;
- (bool)hasTruthType;
- (bool)hasType;
- (bool)hasUncertainty;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned int)previousType;
- (bool)readFrom:(id)arg1;
- (void)setAddressComponentMatches:(unsigned long long)arg1;
- (void)setDistanceFromTruth:(double)arg1;
- (void)setEfficacy:(unsigned int)arg1;
- (void)setHasAddressComponentMatches:(bool)arg1;
- (void)setHasDistanceFromTruth:(bool)arg1;
- (void)setHasEfficacy:(bool)arg1;
- (void)setHasPreviousType:(bool)arg1;
- (void)setHasSource:(bool)arg1;
- (void)setHasTruthSource:(bool)arg1;
- (void)setHasTruthType:(bool)arg1;
- (void)setHasType:(bool)arg1;
- (void)setHasUncertainty:(bool)arg1;
- (void)setPreviousType:(unsigned int)arg1;
- (void)setSource:(unsigned int)arg1;
- (void)setTruthSource:(unsigned int)arg1;
- (void)setTruthType:(unsigned int)arg1;
- (void)setType:(unsigned int)arg1;
- (void)setUncertainty:(double)arg1;
- (unsigned int)source;
- (unsigned int)truthSource;
- (unsigned int)truthType;
- (unsigned int)type;
- (double)uncertainty;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

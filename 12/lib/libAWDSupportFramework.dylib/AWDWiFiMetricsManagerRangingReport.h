<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDWiFiMetricsManagerRangingReport.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDWiFiMetricsManagerRangingReport.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWiFiMetricsManagerRangingReport : PBCodable <NSCopying> {
    unsigned int  _awdlLatency;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int awdlLatency : 1; 
        unsigned int numMeasurements : 1; 
        unsigned int peerMasterChannel : 1; 
        unsigned int peerPreferredChannel : 1; 
        unsigned int peerPreferredChannelFlags : 1; 
        unsigned int protocolVersion : 1; 
        unsigned int rangingBandwidth : 1; 
        unsigned int rangingChannel : 1; 
        unsigned int rangingChannelQuality : 1; 
        unsigned int rangingLatency : 1; 
        unsigned int resultFlags : 1; 
        unsigned int resultStatus : 1; 
        unsigned int selfMasterChannel : 1; 
        unsigned int selfPreferredChannel : 1; 
        unsigned int selfPreferredChannelFlags : 1; 
        unsigned int validCount : 1; 
    }  _has;
    unsigned int  _numMeasurements;
    unsigned int  _peerMasterChannel;
    unsigned int  _peerPreferredChannel;
    unsigned int  _peerPreferredChannelFlags;
    unsigned int  _protocolVersion;
    unsigned int  _rangingBandwidth;
    unsigned int  _rangingChannel;
    unsigned int  _rangingChannelQuality;
    unsigned int  _rangingLatency;
    unsigned int  _resultFlags;
    unsigned int  _resultStatus;
    NSMutableArray * _rttSamples;
    unsigned int  _selfMasterChannel;
    unsigned int  _selfPreferredChannel;
    unsigned int  _selfPreferredChannelFlags;
    unsigned long long  _timestamp;
    unsigned int  _validCount;
}

@property (nonatomic) unsigned int awdlLatency;
@property (nonatomic) bool hasAwdlLatency;
@property (nonatomic) bool hasNumMeasurements;
@property (nonatomic) bool hasPeerMasterChannel;
@property (nonatomic) bool hasPeerPreferredChannel;
@property (nonatomic) bool hasPeerPreferredChannelFlags;
@property (nonatomic) bool hasProtocolVersion;
@property (nonatomic) bool hasRangingBandwidth;
@property (nonatomic) bool hasRangingChannel;
@property (nonatomic) bool hasRangingChannelQuality;
@property (nonatomic) bool hasRangingLatency;
@property (nonatomic) bool hasResultFlags;
@property (nonatomic) bool hasResultStatus;
@property (nonatomic) bool hasSelfMasterChannel;
@property (nonatomic) bool hasSelfPreferredChannel;
@property (nonatomic) bool hasSelfPreferredChannelFlags;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasValidCount;
@property (nonatomic) unsigned int numMeasurements;
@property (nonatomic) unsigned int peerMasterChannel;
@property (nonatomic) unsigned int peerPreferredChannel;
@property (nonatomic) unsigned int peerPreferredChannelFlags;
@property (nonatomic) unsigned int protocolVersion;
@property (nonatomic) unsigned int rangingBandwidth;
@property (nonatomic) unsigned int rangingChannel;
@property (nonatomic) unsigned int rangingChannelQuality;
@property (nonatomic) unsigned int rangingLatency;
@property (nonatomic) unsigned int resultFlags;
@property (nonatomic) unsigned int resultStatus;
@property (nonatomic, retain) NSMutableArray *rttSamples;
@property (nonatomic) unsigned int selfMasterChannel;
@property (nonatomic) unsigned int selfPreferredChannel;
@property (nonatomic) unsigned int selfPreferredChannelFlags;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned int validCount;

+ (Class)rttSamplesType;

- (void)addRttSamples:(id)arg1;
- (unsigned int)awdlLatency;
- (void)clearRttSamples;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasAwdlLatency;
- (bool)hasNumMeasurements;
- (bool)hasPeerMasterChannel;
- (bool)hasPeerPreferredChannel;
- (bool)hasPeerPreferredChannelFlags;
- (bool)hasProtocolVersion;
- (bool)hasRangingBandwidth;
- (bool)hasRangingChannel;
- (bool)hasRangingChannelQuality;
- (bool)hasRangingLatency;
- (bool)hasResultFlags;
- (bool)hasResultStatus;
- (bool)hasSelfMasterChannel;
- (bool)hasSelfPreferredChannel;
- (bool)hasSelfPreferredChannelFlags;
- (bool)hasTimestamp;
- (bool)hasValidCount;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (unsigned int)numMeasurements;
- (unsigned int)peerMasterChannel;
- (unsigned int)peerPreferredChannel;
- (unsigned int)peerPreferredChannelFlags;
- (unsigned int)protocolVersion;
- (unsigned int)rangingBandwidth;
- (unsigned int)rangingChannel;
- (unsigned int)rangingChannelQuality;
- (unsigned int)rangingLatency;
- (bool)readFrom:(id)arg1;
- (unsigned int)resultFlags;
- (unsigned int)resultStatus;
- (id)rttSamples;
- (id)rttSamplesAtIndex:(unsigned long long)arg1;
- (unsigned long long)rttSamplesCount;
- (unsigned int)selfMasterChannel;
- (unsigned int)selfPreferredChannel;
- (unsigned int)selfPreferredChannelFlags;
- (void)setAwdlLatency:(unsigned int)arg1;
- (void)setHasAwdlLatency:(bool)arg1;
- (void)setHasNumMeasurements:(bool)arg1;
- (void)setHasPeerMasterChannel:(bool)arg1;
- (void)setHasPeerPreferredChannel:(bool)arg1;
- (void)setHasPeerPreferredChannelFlags:(bool)arg1;
- (void)setHasProtocolVersion:(bool)arg1;
- (void)setHasRangingBandwidth:(bool)arg1;
- (void)setHasRangingChannel:(bool)arg1;
- (void)setHasRangingChannelQuality:(bool)arg1;
- (void)setHasRangingLatency:(bool)arg1;
- (void)setHasResultFlags:(bool)arg1;
- (void)setHasResultStatus:(bool)arg1;
- (void)setHasSelfMasterChannel:(bool)arg1;
- (void)setHasSelfPreferredChannel:(bool)arg1;
- (void)setHasSelfPreferredChannelFlags:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasValidCount:(bool)arg1;
- (void)setNumMeasurements:(unsigned int)arg1;
- (void)setPeerMasterChannel:(unsigned int)arg1;
- (void)setPeerPreferredChannel:(unsigned int)arg1;
- (void)setPeerPreferredChannelFlags:(unsigned int)arg1;
- (void)setProtocolVersion:(unsigned int)arg1;
- (void)setRangingBandwidth:(unsigned int)arg1;
- (void)setRangingChannel:(unsigned int)arg1;
- (void)setRangingChannelQuality:(unsigned int)arg1;
- (void)setRangingLatency:(unsigned int)arg1;
- (void)setResultFlags:(unsigned int)arg1;
- (void)setResultStatus:(unsigned int)arg1;
- (void)setRttSamples:(id)arg1;
- (void)setSelfMasterChannel:(unsigned int)arg1;
- (void)setSelfPreferredChannel:(unsigned int)arg1;
- (void)setSelfPreferredChannelFlags:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setValidCount:(unsigned int)arg1;
- (unsigned long long)timestamp;
- (unsigned int)validCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

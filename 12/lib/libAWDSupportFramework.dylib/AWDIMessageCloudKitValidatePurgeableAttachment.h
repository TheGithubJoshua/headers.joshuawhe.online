<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDIMessageCloudKitValidatePurgeableAttachment.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDIMessageCloudKitValidatePurgeableAttachment.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDIMessageCloudKitValidatePurgeableAttachment : PBCodable <NSCopying> {
    unsigned int  _attachmentSize;
    unsigned int  _connectionType;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int attachmentSize : 1; 
        unsigned int connectionType : 1; 
        unsigned int linkQuality : 1; 
        unsigned int operationalErrorCode : 1; 
        unsigned int validatedAttachment : 1; 
        unsigned int validationErrorCode : 1; 
    }  _has;
    int  _linkQuality;
    unsigned int  _operationalErrorCode;
    NSString * _operationalErrorDomain;
    unsigned long long  _timestamp;
    unsigned int  _validatedAttachment;
    unsigned int  _validationErrorCode;
    NSString * _validationErrorDomain;
}

@property (nonatomic) unsigned int attachmentSize;
@property (nonatomic) unsigned int connectionType;
@property (nonatomic) bool hasAttachmentSize;
@property (nonatomic) bool hasConnectionType;
@property (nonatomic) bool hasLinkQuality;
@property (nonatomic) bool hasOperationalErrorCode;
@property (nonatomic, readonly) bool hasOperationalErrorDomain;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) bool hasValidatedAttachment;
@property (nonatomic) bool hasValidationErrorCode;
@property (nonatomic, readonly) bool hasValidationErrorDomain;
@property (nonatomic) int linkQuality;
@property (nonatomic) unsigned int operationalErrorCode;
@property (nonatomic, retain) NSString *operationalErrorDomain;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic) unsigned int validatedAttachment;
@property (nonatomic) unsigned int validationErrorCode;
@property (nonatomic, retain) NSString *validationErrorDomain;

- (unsigned int)attachmentSize;
- (unsigned int)connectionType;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasAttachmentSize;
- (bool)hasConnectionType;
- (bool)hasLinkQuality;
- (bool)hasOperationalErrorCode;
- (bool)hasOperationalErrorDomain;
- (bool)hasTimestamp;
- (bool)hasValidatedAttachment;
- (bool)hasValidationErrorCode;
- (bool)hasValidationErrorDomain;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (int)linkQuality;
- (void)mergeFrom:(id)arg1;
- (unsigned int)operationalErrorCode;
- (id)operationalErrorDomain;
- (bool)readFrom:(id)arg1;
- (void)setAttachmentSize:(unsigned int)arg1;
- (void)setConnectionType:(unsigned int)arg1;
- (void)setHasAttachmentSize:(bool)arg1;
- (void)setHasConnectionType:(bool)arg1;
- (void)setHasLinkQuality:(bool)arg1;
- (void)setHasOperationalErrorCode:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasValidatedAttachment:(bool)arg1;
- (void)setHasValidationErrorCode:(bool)arg1;
- (void)setLinkQuality:(int)arg1;
- (void)setOperationalErrorCode:(unsigned int)arg1;
- (void)setOperationalErrorDomain:(id)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setValidatedAttachment:(unsigned int)arg1;
- (void)setValidationErrorCode:(unsigned int)arg1;
- (void)setValidationErrorDomain:(id)arg1;
- (unsigned long long)timestamp;
- (unsigned int)validatedAttachment;
- (unsigned int)validationErrorCode;
- (id)validationErrorDomain;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

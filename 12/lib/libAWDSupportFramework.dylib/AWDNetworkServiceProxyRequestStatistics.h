<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDNetworkServiceProxyRequestStatistics.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDNetworkServiceProxyRequestStatistics.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDNetworkServiceProxyRequestStatistics : PBCodable <NSCopying> {
    unsigned int  _directConnectionCount;
    unsigned int  _directConnectionFailedCount;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _directConnectionFirstByteBuckets;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _directConnectionLastByteBuckets;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _firstByteBuckets;
    NSString * _firstPartyServiceName;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int directConnectionCount : 1; 
        unsigned int directConnectionFailedCount : 1; 
        unsigned int interfaceType : 1; 
        unsigned int protocolType : 1; 
        unsigned int requestCount : 1; 
        unsigned int requestFailedCount : 1; 
    }  _has;
    int  _interfaceType;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _lastByteBuckets;
    int  _protocolType;
    unsigned int  _requestCount;
    unsigned int  _requestFailedCount;
    unsigned long long  _timestamp;
    struct { 
        unsigned int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _udpRttBuckets;
}

@property (nonatomic) unsigned int directConnectionCount;
@property (nonatomic) unsigned int directConnectionFailedCount;
@property (nonatomic, readonly) unsigned int*directConnectionFirstByteBuckets;
@property (nonatomic, readonly) unsigned long long directConnectionFirstByteBucketsCount;
@property (nonatomic, readonly) unsigned int*directConnectionLastByteBuckets;
@property (nonatomic, readonly) unsigned long long directConnectionLastByteBucketsCount;
@property (nonatomic, readonly) unsigned int*firstByteBuckets;
@property (nonatomic, readonly) unsigned long long firstByteBucketsCount;
@property (nonatomic, retain) NSString *firstPartyServiceName;
@property (nonatomic) bool hasDirectConnectionCount;
@property (nonatomic) bool hasDirectConnectionFailedCount;
@property (nonatomic, readonly) bool hasFirstPartyServiceName;
@property (nonatomic) bool hasInterfaceType;
@property (nonatomic) bool hasProtocolType;
@property (nonatomic) bool hasRequestCount;
@property (nonatomic) bool hasRequestFailedCount;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic) int interfaceType;
@property (nonatomic, readonly) unsigned int*lastByteBuckets;
@property (nonatomic, readonly) unsigned long long lastByteBucketsCount;
@property (nonatomic) int protocolType;
@property (nonatomic) unsigned int requestCount;
@property (nonatomic) unsigned int requestFailedCount;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic, readonly) unsigned int*udpRttBuckets;
@property (nonatomic, readonly) unsigned long long udpRttBucketsCount;

- (int)StringAsInterfaceType:(id)arg1;
- (int)StringAsProtocolType:(id)arg1;
- (void)addDirectConnectionFirstByteBuckets:(unsigned int)arg1;
- (void)addDirectConnectionLastByteBuckets:(unsigned int)arg1;
- (void)addFirstByteBuckets:(unsigned int)arg1;
- (void)addLastByteBuckets:(unsigned int)arg1;
- (void)addUdpRttBuckets:(unsigned int)arg1;
- (void)clearDirectConnectionFirstByteBuckets;
- (void)clearDirectConnectionLastByteBuckets;
- (void)clearFirstByteBuckets;
- (void)clearLastByteBuckets;
- (void)clearUdpRttBuckets;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (unsigned int)directConnectionCount;
- (unsigned int)directConnectionFailedCount;
- (unsigned int*)directConnectionFirstByteBuckets;
- (unsigned int)directConnectionFirstByteBucketsAtIndex:(unsigned long long)arg1;
- (unsigned long long)directConnectionFirstByteBucketsCount;
- (unsigned int*)directConnectionLastByteBuckets;
- (unsigned int)directConnectionLastByteBucketsAtIndex:(unsigned long long)arg1;
- (unsigned long long)directConnectionLastByteBucketsCount;
- (unsigned int*)firstByteBuckets;
- (unsigned int)firstByteBucketsAtIndex:(unsigned long long)arg1;
- (unsigned long long)firstByteBucketsCount;
- (id)firstPartyServiceName;
- (bool)hasDirectConnectionCount;
- (bool)hasDirectConnectionFailedCount;
- (bool)hasFirstPartyServiceName;
- (bool)hasInterfaceType;
- (bool)hasProtocolType;
- (bool)hasRequestCount;
- (bool)hasRequestFailedCount;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (int)interfaceType;
- (id)interfaceTypeAsString:(int)arg1;
- (bool)isEqual:(id)arg1;
- (unsigned int*)lastByteBuckets;
- (unsigned int)lastByteBucketsAtIndex:(unsigned long long)arg1;
- (unsigned long long)lastByteBucketsCount;
- (void)mergeFrom:(id)arg1;
- (int)protocolType;
- (id)protocolTypeAsString:(int)arg1;
- (bool)readFrom:(id)arg1;
- (unsigned int)requestCount;
- (unsigned int)requestFailedCount;
- (void)setDirectConnectionCount:(unsigned int)arg1;
- (void)setDirectConnectionFailedCount:(unsigned int)arg1;
- (void)setDirectConnectionFirstByteBuckets:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setDirectConnectionLastByteBuckets:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setFirstByteBuckets:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setFirstPartyServiceName:(id)arg1;
- (void)setHasDirectConnectionCount:(bool)arg1;
- (void)setHasDirectConnectionFailedCount:(bool)arg1;
- (void)setHasInterfaceType:(bool)arg1;
- (void)setHasProtocolType:(bool)arg1;
- (void)setHasRequestCount:(bool)arg1;
- (void)setHasRequestFailedCount:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setInterfaceType:(int)arg1;
- (void)setLastByteBuckets:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (void)setProtocolType:(int)arg1;
- (void)setRequestCount:(unsigned int)arg1;
- (void)setRequestFailedCount:(unsigned int)arg1;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setUdpRttBuckets:(unsigned int*)arg1 count:(unsigned long long)arg2;
- (unsigned long long)timestamp;
- (unsigned int*)udpRttBuckets;
- (unsigned int)udpRttBucketsAtIndex:(unsigned long long)arg1;
- (unsigned long long)udpRttBucketsCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>

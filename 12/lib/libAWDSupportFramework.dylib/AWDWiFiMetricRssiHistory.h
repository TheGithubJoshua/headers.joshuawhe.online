<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>AWDWiFiMetricRssiHistory.h</title>
    <meta name="viewport" content="width=device-width">
    <style>
    body { margin: 1em; }
    pre { font: 11pt/1.25 ui-monospace, "SF Mono", Menlo, monospace; }
    a { color: #af52de; }
    pre { white-space: pre-wrap; }
    header, footer { color: #8e8e93; }
    header { white-space: pre; }
    footer { max-width: 700px; }
    hr { border: 0; border-top: 1px solid #c6c6c8; }
    .download { text-decoration: none; }
    @media (prefers-color-scheme: dark) {
        body { background: black; color: white; }
        a { color: #bf5af2; }
        hr { border-top-color: #333335; }
    }
    </style>
</head>
<body>
<pre><header>
 ___          _   _             ___
| _ \_  _ _ _| |_(_)_ __  ___  | _ )_ _ _____ __ _____ ___ _ _
|   / || | ' \  _| | '  \/ -_) | _ \ '_/ _ \ V  V (_-// -_) '_|
|_|_\\_,_|_||_\__|_|_|_|_\___| |___/_| \___/\_/\_//__/\___|_|


</header><hr>

/lib/libAWDSupportFramework.dylib/AWDWiFiMetricRssiHistory.h <a href="?download" download title="Download" class="download">&darr;</a>


/* Generated by RuntimeBrowser
   Platform: iOS 12.5.7 (16H81) arm64
   Image: /usr/lib/libAWDSupportFramework.dylib
 */

@interface AWDWiFiMetricRssiHistory : PBCodable <NSCopying> {
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _bcnFrmsHistorys;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _bcnPerHistorys;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _fwTxFrmsHistorys;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _fwTxPerHistorys;
    unsigned int  _gatewayARPHistory;
    struct { 
        unsigned int timestamp : 1; 
        unsigned int gatewayARPHistory : 1; 
    }  _has;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _rssiHistorys;
    unsigned long long  _timestamp;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _txFrmsHistorys;
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    }  _txPerHistorys;
}

@property (nonatomic, readonly) int*bcnFrmsHistorys;
@property (nonatomic, readonly) unsigned long long bcnFrmsHistorysCount;
@property (nonatomic, readonly) int*bcnPerHistorys;
@property (nonatomic, readonly) unsigned long long bcnPerHistorysCount;
@property (nonatomic, readonly) int*fwTxFrmsHistorys;
@property (nonatomic, readonly) unsigned long long fwTxFrmsHistorysCount;
@property (nonatomic, readonly) int*fwTxPerHistorys;
@property (nonatomic, readonly) unsigned long long fwTxPerHistorysCount;
@property (nonatomic) unsigned int gatewayARPHistory;
@property (nonatomic) bool hasGatewayARPHistory;
@property (nonatomic) bool hasTimestamp;
@property (nonatomic, readonly) int*rssiHistorys;
@property (nonatomic, readonly) unsigned long long rssiHistorysCount;
@property (nonatomic) unsigned long long timestamp;
@property (nonatomic, readonly) int*txFrmsHistorys;
@property (nonatomic, readonly) unsigned long long txFrmsHistorysCount;
@property (nonatomic, readonly) int*txPerHistorys;
@property (nonatomic, readonly) unsigned long long txPerHistorysCount;

- (void)addBcnFrmsHistory:(int)arg1;
- (void)addBcnPerHistory:(int)arg1;
- (void)addFwTxFrmsHistory:(int)arg1;
- (void)addFwTxPerHistory:(int)arg1;
- (void)addRssiHistory:(int)arg1;
- (void)addTxFrmsHistory:(int)arg1;
- (void)addTxPerHistory:(int)arg1;
- (int)bcnFrmsHistoryAtIndex:(unsigned long long)arg1;
- (int*)bcnFrmsHistorys;
- (unsigned long long)bcnFrmsHistorysCount;
- (int)bcnPerHistoryAtIndex:(unsigned long long)arg1;
- (int*)bcnPerHistorys;
- (unsigned long long)bcnPerHistorysCount;
- (void)clearBcnFrmsHistorys;
- (void)clearBcnPerHistorys;
- (void)clearFwTxFrmsHistorys;
- (void)clearFwTxPerHistorys;
- (void)clearRssiHistorys;
- (void)clearTxFrmsHistorys;
- (void)clearTxPerHistorys;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (int)fwTxFrmsHistoryAtIndex:(unsigned long long)arg1;
- (int*)fwTxFrmsHistorys;
- (unsigned long long)fwTxFrmsHistorysCount;
- (int)fwTxPerHistoryAtIndex:(unsigned long long)arg1;
- (int*)fwTxPerHistorys;
- (unsigned long long)fwTxPerHistorysCount;
- (unsigned int)gatewayARPHistory;
- (bool)hasGatewayARPHistory;
- (bool)hasTimestamp;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (int)rssiHistoryAtIndex:(unsigned long long)arg1;
- (int*)rssiHistorys;
- (unsigned long long)rssiHistorysCount;
- (void)setBcnFrmsHistorys:(int*)arg1 count:(unsigned long long)arg2;
- (void)setBcnPerHistorys:(int*)arg1 count:(unsigned long long)arg2;
- (void)setFwTxFrmsHistorys:(int*)arg1 count:(unsigned long long)arg2;
- (void)setFwTxPerHistorys:(int*)arg1 count:(unsigned long long)arg2;
- (void)setGatewayARPHistory:(unsigned int)arg1;
- (void)setHasGatewayARPHistory:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setRssiHistorys:(int*)arg1 count:(unsigned long long)arg2;
- (void)setTimestamp:(unsigned long long)arg1;
- (void)setTxFrmsHistorys:(int*)arg1 count:(unsigned long long)arg2;
- (void)setTxPerHistorys:(int*)arg1 count:(unsigned long long)arg2;
- (unsigned long long)timestamp;
- (int)txFrmsHistoryAtIndex:(unsigned long long)arg1;
- (int*)txFrmsHistorys;
- (unsigned long long)txFrmsHistorysCount;
- (int)txPerHistoryAtIndex:(unsigned long long)arg1;
- (int*)txPerHistorys;
- (unsigned long long)txPerHistorysCount;
- (void)writeTo:(id)arg1;

@end


<hr><footer>
Source code: <a href="https://github.com/hbang/RuntimeBrowser">https://github.com/hbang/RuntimeBrowser</a>

Authors:
  Ezra Epstein (eepstein@prajna.com)
  Nicolas Seriot (nicolas@seriot.ch)
  HASHBANG Productions

Copyright &copy; 2002 by Prajna IT Consulting
Copyright &copy; 2015 by <a href="http://www.seriot.ch">Nicolas Seriot</a>
Copyright &copy; 2021 by <a href="https://hashbang.productions">HASHBANG Productions</a>

THIS PROGRAM AND THIS CODE COME WITH ABSOLUTELY NO WARRANTY. THIS CODE HAS BEEN PROVIDED "AS IS" AND THE RESPONSIBILITY FOR ITS OPERATIONS IS 100% YOURS.

RuntimeBrowser is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

RuntimeBrowser is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with RuntimeBrowser (in a file called "COPYING.txt"); if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</footer></pre>
</body>
</html>
